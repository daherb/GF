--# -path=.:../prelude:../common
--# -coding=utf8

-- This file is automaticaly generated by generate_tables_sgjp.
-- That program copies part of its source code to the output,
-- therefore this file is covered by the LGPLv3 as well as the
-- program itself. 
-- It is also possible that the input of the program was distributed
-- under some license. If it is GPL or similar my interpretation is that
-- this file is _not_ a copy of an input and is covered by LGPLv3, while 
-- the dictionary paired with this file is covered by both LGPLv3 and 
-- the license of the input.
-- Be careful not to violate the copyright low!
-- For details see http://www.mimuw.edu.pl/~asl/tabeleusz/ .

-- DO NOT EDIT THIS FILE

resource NounMorphoPol = ResPol ** open Prelude, (Predef=Predef) in {

     flags  coding=utf8;

    oper mkN: (SubstForm => Str) -> Gender -> CommNoun;
    oper mkN tab gen = { s = tab; g = gen };

    oper mkNTable0000: Str -> SubstForm => Str; --%
    oper mkNTable0000 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0001: Str -> SubstForm => Str; --%
    oper mkNTable0001 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "-u";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0002: Str -> SubstForm => Str; --%
    oper mkNTable0002 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0003: Str -> SubstForm => Str; --%
    oper mkNTable0003 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0004: Str -> SubstForm => Str; --%
    oper mkNTable0004 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ek";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0006: Str -> SubstForm => Str; --%
    oper mkNTable0006 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "lowie";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "li";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "lowie"
    };

    oper mkNTable0007: Str -> SubstForm => Str; --%
    oper mkNTable0007 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0008: Str -> SubstForm => Str; --%
    oper mkNTable0008 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owowi";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "owów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable0009: Str -> SubstForm => Str; --%
    oper mkNTable0009 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "ym";
      SF Sg Loc => x + "ym";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "ych";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0010: Str -> SubstForm => Str; --%
    oper mkNTable0010 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "ej";
      SF Sg Dat => x + "ej";
      SF Sg Acc => x + "ą";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ej";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0011: Str -> SubstForm => Str; --%
    oper mkNTable0011 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "zie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0012: Str -> SubstForm => Str; --%
    oper mkNTable0012 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0013: Str -> SubstForm => Str; --%
    oper mkNTable0013 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "cowie";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cowie"
    };

    oper mkNTable0015: Str -> SubstForm => Str; --%
    oper mkNTable0015 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "adaś";
      SF Sg Gen => x + "adasia";
      SF Sg Dat => x + "adasiowi";
      SF Sg Acc => x + "adasia";
      SF Sg Instr => x + "adasiem";
      SF Sg Loc => x + "adasiu";
      SF Sg Voc => x + "adasiu";
      SF Pl Nom => x + "adasie";
      SF Pl Gen => x + "Adasiów";
      SF Pl Dat => x + "adasiom";
      SF Pl Acc => x + "Adasiów";
      SF Pl Instr => x + "adasiami";
      SF Pl Loc => x + "adasiach";
      SF Pl Voc => x + "adasie"
    };

    oper mkNTable0016: Str -> SubstForm => Str; --%
    oper mkNTable0016 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0017: Str -> SubstForm => Str; --%
    oper mkNTable0017 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0018: Str -> SubstForm => Str; --%
    oper mkNTable0018 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ia";
      SF Sg Gen => x + "ii";
      SF Sg Dat => x + "ii";
      SF Sg Acc => x + "ię";
      SF Sg Instr => x + "ią";
      SF Sg Loc => x + "ii";
      SF Sg Voc => x + "io";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "yj";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0021: Str -> SubstForm => Str; --%
    oper mkNTable0021 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "k";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ka";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ków";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable0022: Str -> SubstForm => Str; --%
    oper mkNTable0022 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ta";
      SF Sg Gen => x + "ty";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "tę";
      SF Sg Instr => x + "tą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "t";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable0023: Str -> SubstForm => Str; --%
    oper mkNTable0023 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "k";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0024: Str -> SubstForm => Str; --%
    oper mkNTable0024 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable0025: Str -> SubstForm => Str; --%
    oper mkNTable0025 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "in";
      SF Sg Gen => x + "ina";
      SF Sg Dat => x + "inowi";
      SF Sg Acc => x + "ina";
      SF Sg Instr => x + "inem";
      SF Sg Loc => x + "inie";
      SF Sg Voc => x + "inie";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0026: Str -> SubstForm => Str; --%
    oper mkNTable0026 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ga";
      SF Sg Gen => x + "gi";
      SF Sg Dat => x + "dze";
      SF Sg Acc => x + "gę";
      SF Sg Instr => x + "gą";
      SF Sg Loc => x + "dze";
      SF Sg Voc => x + "go";
      SF Pl Nom => x + "gi";
      SF Pl Gen => x + "g";
      SF Pl Dat => x + "gom";
      SF Pl Acc => x + "gi";
      SF Pl Instr => x + "gami";
      SF Pl Loc => x + "gach";
      SF Pl Voc => x + "gi"
    };

    oper mkNTable0028: Str -> SubstForm => Str; --%
    oper mkNTable0028 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "towie";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "towie"
    };

    oper mkNTable0029: Str -> SubstForm => Str; --%
    oper mkNTable0029 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Agata";
      SF Sg Gen => x + "agaty";
      SF Sg Dat => x + "agacie";
      SF Sg Acc => x + "Agatę";
      SF Sg Instr => x + "Agatą";
      SF Sg Loc => x + "agacie";
      SF Sg Voc => x + "Agato";
      SF Pl Nom => x + "agaty";
      SF Pl Gen => x + "agat";
      SF Pl Dat => x + "agatom";
      SF Pl Acc => x + "agaty";
      SF Pl Instr => x + "agatami";
      SF Pl Loc => x + "agatach";
      SF Pl Voc => x + "agaty"
    };

    oper mkNTable0030: Str -> SubstForm => Str; --%
    oper mkNTable0030 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nia";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "nię";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0031: Str -> SubstForm => Str; --%
    oper mkNTable0031 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sia";
      SF Sg Gen => x + "si";
      SF Sg Dat => x + "si";
      SF Sg Acc => x + "się";
      SF Sg Instr => x + "sią";
      SF Sg Loc => x + "si";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "ś";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable0032: Str -> SubstForm => Str; --%
    oper mkNTable0032 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0033: Str -> SubstForm => Str; --%
    oper mkNTable0033 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Ajax";
      SF Sg Gen => x + "ajaksu";
      SF Sg Dat => x + "ajaksowi";
      SF Sg Acc => x + "Ajax";
      SF Sg Instr => x + "ajaksem";
      SF Sg Loc => x + "ajaksie";
      SF Sg Voc => x + "ajaksie";
      SF Pl Nom => x + "ajaksy";
      SF Pl Gen => x + "ajaksów";
      SF Pl Dat => x + "ajaksom";
      SF Pl Acc => x + "ajaksy";
      SF Pl Instr => x + "ajaksami";
      SF Pl Loc => x + "ajaksach";
      SF Pl Voc => x + "ajaksy"
    };

    oper mkNTable0035: Str -> SubstForm => Str; --%
    oper mkNTable0035 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "albert";
      SF Sg Gen => x + "alberta";
      SF Sg Dat => x + "albertowi";
      SF Sg Acc => x + "alberta";
      SF Sg Instr => x + "albertem";
      SF Sg Loc => x + "albercie";
      SF Sg Voc => x + "albercie";
      SF Pl Nom => x + "Albertowie";
      SF Pl Gen => x + "albertów";
      SF Pl Dat => x + "albertom";
      SF Pl Acc => x + "albertów";
      SF Pl Instr => x + "albertami";
      SF Pl Loc => x + "albertach";
      SF Pl Voc => x + "Albertowie"
    };

    oper mkNTable0036: Str -> SubstForm => Str; --%
    oper mkNTable0036 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "alberta";
      SF Sg Gen => x + "alberty";
      SF Sg Dat => x + "albercie";
      SF Sg Acc => x + "Albertę";
      SF Sg Instr => x + "Albertą";
      SF Sg Loc => x + "albercie";
      SF Sg Voc => x + "Alberto";
      SF Pl Nom => x + "alberty";
      SF Pl Gen => x + "albert";
      SF Pl Dat => x + "albertom";
      SF Pl Acc => x + "alberty";
      SF Pl Instr => x + "albertami";
      SF Pl Loc => x + "albertach";
      SF Pl Voc => x + "alberty"
    };

    oper mkNTable0037: Str -> SubstForm => Str; --%
    oper mkNTable0037 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Alberto";
      SF Sg Gen => x + "alberta";
      SF Sg Dat => x + "albertowi";
      SF Sg Acc => x + "alberta";
      SF Sg Instr => x + "albertem";
      SF Sg Loc => x + "albercie";
      SF Sg Voc => x + "Alberto";
      SF Pl Nom => x + "Albertowie";
      SF Pl Gen => x + "albertów";
      SF Pl Dat => x + "albertom";
      SF Pl Acc => x + "albertów";
      SF Pl Instr => x + "albertami";
      SF Pl Loc => x + "albertach";
      SF Pl Voc => x + "Albertowie"
    };

    oper mkNTable0038: Str -> SubstForm => Str; --%
    oper mkNTable0038 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "m";
      SF Sg Loc => x + "m";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ch";
      SF Pl Dat => x + "m";
      SF Pl Acc => x + "ch";
      SF Pl Instr => x + "mi";
      SF Pl Loc => x + "ch";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0039: Str -> SubstForm => Str; --%
    oper mkNTable0039 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0040: Str -> SubstForm => Str; --%
    oper mkNTable0040 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "albertyna";
      SF Sg Gen => x + "albertyny";
      SF Sg Dat => x + "albertynie";
      SF Sg Acc => x + "Albertynę";
      SF Sg Instr => x + "Albertyną";
      SF Sg Loc => x + "albertynie";
      SF Sg Voc => x + "Albertyno";
      SF Pl Nom => x + "albertyny";
      SF Pl Gen => x + "albertyn";
      SF Pl Dat => x + "albertynom";
      SF Pl Acc => x + "albertyny";
      SF Pl Instr => x + "albertynami";
      SF Pl Loc => x + "albertynach";
      SF Pl Voc => x + "albertyny"
    };

    oper mkNTable0042: Str -> SubstForm => Str; --%
    oper mkNTable0042 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Alek";
      SF Sg Gen => x + "alka";
      SF Sg Dat => x + "Alkowi";
      SF Sg Acc => x + "alka";
      SF Sg Instr => x + "Alkiem";
      SF Sg Loc => x + "Alku";
      SF Sg Voc => x + "Alku";
      SF Pl Nom => x + "alkowie";
      SF Pl Gen => x + "alków";
      SF Pl Dat => x + "alkom";
      SF Pl Acc => x + "alków";
      SF Pl Instr => x + "alkami";
      SF Pl Loc => x + "alkach";
      SF Pl Voc => x + "alkowie"
    };

    oper mkNTable0043: Str -> SubstForm => Str; --%
    oper mkNTable0043 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "rowie";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "rów";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "rowie"
    };

    oper mkNTable0044: Str -> SubstForm => Str; --%
    oper mkNTable0044 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ra";
      SF Sg Gen => x + "ry";
      SF Sg Dat => x + "rze";
      SF Sg Acc => x + "rę";
      SF Sg Instr => x + "rą";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "ro";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "er";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable0045: Str -> SubstForm => Str; --%
    oper mkNTable0045 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owu";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "owów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable0047: Str -> SubstForm => Str; --%
    oper mkNTable0047 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0049: Str -> SubstForm => Str; --%
    oper mkNTable0049 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0050: Str -> SubstForm => Str; --%
    oper mkNTable0050 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Ali";
      SF Sg Gen => x + "Alego";
      SF Sg Dat => x + "Alemu";
      SF Sg Acc => x + "Alego";
      SF Sg Instr => x + "alim";
      SF Sg Loc => x + "alim";
      SF Sg Voc => x + "Ali";
      SF Pl Nom => x + "Alowie";
      SF Pl Gen => x + "Alich";
      SF Pl Dat => x + "alim";
      SF Pl Acc => x + "Alich";
      SF Pl Instr => x + "Alimi";
      SF Pl Loc => x + "Alich";
      SF Pl Voc => x + "Alowie"
    };

    oper mkNTable0051: Str -> SubstForm => Str; --%
    oper mkNTable0051 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0052: Str -> SubstForm => Str; --%
    oper mkNTable0052 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "alka";
      SF Sg Gen => x + "alki";
      SF Sg Dat => x + "alce";
      SF Sg Acc => x + "alkę";
      SF Sg Instr => x + "alką";
      SF Sg Loc => x + "alce";
      SF Sg Voc => x + "alko";
      SF Pl Nom => x + "alki";
      SF Pl Gen => x + "Alek";
      SF Pl Dat => x + "alkom";
      SF Pl Acc => x + "alki";
      SF Pl Instr => x + "alkami";
      SF Pl Loc => x + "alkach";
      SF Pl Voc => x + "alki"
    };

    oper mkNTable0055: Str -> SubstForm => Str; --%
    oper mkNTable0055 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "alzheimer";
      SF Sg Gen => x + "alzheimera";
      SF Sg Dat => x + "alzheimerowi";
      SF Sg Acc => x + "alzheimera";
      SF Sg Instr => x + "alzheimerem";
      SF Sg Loc => x + "alzheimerze";
      SF Sg Voc => x + "alzheimerze";
      SF Pl Nom => x + "Alzheimerowie";
      SF Pl Gen => x + "alzheimerów";
      SF Pl Dat => x + "alzheimerom";
      SF Pl Acc => x + "alzheimerów";
      SF Pl Instr => x + "alzheimerami";
      SF Pl Loc => x + "alzheimerach";
      SF Pl Voc => x + "Alzheimerowie"
    };

    oper mkNTable0056: Str -> SubstForm => Str; --%
    oper mkNTable0056 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ja";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ję";
      SF Sg Instr => x + "ją";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "jo";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "je";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable0057: Str -> SubstForm => Str; --%
    oper mkNTable0057 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "j";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0058: Str -> SubstForm => Str; --%
    oper mkNTable0058 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Ameryka";
      SF Sg Gen => x + "ameryki";
      SF Sg Dat => x + "Ameryce";
      SF Sg Acc => x + "Amerykę";
      SF Sg Instr => x + "Ameryką";
      SF Sg Loc => x + "Ameryce";
      SF Sg Voc => x + "Ameryko";
      SF Pl Nom => x + "ameryki";
      SF Pl Gen => x + "ameryk";
      SF Pl Dat => x + "amerykom";
      SF Pl Acc => x + "ameryki";
      SF Pl Instr => x + "amerykami";
      SF Pl Loc => x + "amerykach";
      SF Pl Voc => x + "ameryki"
    };

    oper mkNTable0059: Str -> SubstForm => Str; --%
    oper mkNTable0059 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "ńca";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcu";
      SF Pl Nom => x + "ńcy";
      SF Pl Gen => x + "ńców";
      SF Pl Dat => x + "ńcom";
      SF Pl Acc => x + "ńców";
      SF Pl Instr => x + "ńcami";
      SF Pl Loc => x + "ńcach";
      SF Pl Voc => x + "ńcy"
    };

    oper mkNTable0060: Str -> SubstForm => Str; --%
    oper mkNTable0060 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "Amerykanin";
      SF Sg Gen => x + "Amerykanina";
      SF Sg Dat => x + "Amerykaninowi";
      SF Sg Acc => x + "Amerykanina";
      SF Sg Instr => x + "Amerykaninem";
      SF Sg Loc => x + "Amerykaninie";
      SF Sg Voc => x + "Amerykaninie";
      SF Pl Nom => x + "amerykanie";
      SF Pl Gen => x + "amerykanów";
      SF Pl Dat => x + "amerykanom";
      SF Pl Acc => x + "amerykanów";
      SF Pl Instr => x + "amerykanami";
      SF Pl Loc => x + "amerykanach";
      SF Pl Voc => x + "amerykanie"
    };

    oper mkNTable0061: Str -> SubstForm => Str; --%
    oper mkNTable0061 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0062: Str -> SubstForm => Str; --%
    oper mkNTable0062 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ka";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => x + "kowie";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ków";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "kowie"
    };

    oper mkNTable0063: Str -> SubstForm => Str; --%
    oper mkNTable0063 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "m";
      SF Sg Loc => x + "m";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "ch";
      SF Pl Dat => x + "m";
      SF Pl Acc => x + "ch";
      SF Pl Instr => x + "mi";
      SF Pl Loc => x + "ch";
      SF Pl Voc => x + ""
    };

    oper mkNTable0064: Str -> SubstForm => Str; --%
    oper mkNTable0064 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "i";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "im";
      SF Sg Loc => x + "im";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ich";
      SF Pl Dat => x + "im";
      SF Pl Acc => x + "ich";
      SF Pl Instr => x + "imi";
      SF Pl Loc => x + "ich";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0065: Str -> SubstForm => Str; --%
    oper mkNTable0065 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "ciowie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ciów";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ciowie"
    };

    oper mkNTable0067: Str -> SubstForm => Str; --%
    oper mkNTable0067 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "andrzejek";
      SF Sg Gen => x + "Andrzejka";
      SF Sg Dat => x + "Andrzejkowi";
      SF Sg Acc => x + "Andrzejka";
      SF Sg Instr => x + "Andrzejkiem";
      SF Sg Loc => x + "Andrzejku";
      SF Sg Voc => x + "Andrzejku";
      SF Pl Nom => x + "Andrzejkowie";
      SF Pl Gen => x + "Andrzejków";
      SF Pl Dat => x + "andrzejkom";
      SF Pl Acc => x + "Andrzejków";
      SF Pl Instr => x + "andrzejkami";
      SF Pl Loc => x + "andrzejkach";
      SF Pl Voc => x + "Andrzejkowie"
    };

    oper mkNTable0068: Str -> SubstForm => Str; --%
    oper mkNTable0068 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zia";
      SF Sg Gen => x + "zi";
      SF Sg Dat => x + "zi";
      SF Sg Acc => x + "zię";
      SF Sg Instr => x + "zią";
      SF Sg Loc => x + "zi";
      SF Sg Voc => x + "ziu";
      SF Pl Nom => x + "zie";
      SF Pl Gen => x + "ź";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zie";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zie"
    };

    oper mkNTable0069: Str -> SubstForm => Str; --%
    oper mkNTable0069 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0070: Str -> SubstForm => Str; --%
    oper mkNTable0070 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "anglik";
      SF Sg Gen => x + "anglika";
      SF Sg Dat => x + "anglikowi";
      SF Sg Acc => x + "anglika";
      SF Sg Instr => x + "anglikiem";
      SF Sg Loc => x + "angliku";
      SF Sg Voc => x + "angliku";
      SF Pl Nom => x + "Anglicy";
      SF Pl Gen => x + "anglików";
      SF Pl Dat => x + "anglikom";
      SF Pl Acc => x + "anglików";
      SF Pl Instr => x + "anglikami";
      SF Pl Loc => x + "anglikach";
      SF Pl Voc => x + "Anglicy"
    };

    oper mkNTable0071: Str -> SubstForm => Str; --%
    oper mkNTable0071 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0072: Str -> SubstForm => Str; --%
    oper mkNTable0072 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "angola";
      SF Sg Gen => x + "angoli";
      SF Sg Dat => x + "angoli";
      SF Sg Acc => x + "Angolę";
      SF Sg Instr => x + "Angolą";
      SF Sg Loc => x + "angoli";
      SF Sg Voc => x + "Angolo";
      SF Pl Nom => x + "angole";
      SF Pl Gen => x + "angoli";
      SF Pl Dat => x + "angolom";
      SF Pl Acc => x + "angole";
      SF Pl Instr => x + "angolami";
      SF Pl Loc => x + "angolach";
      SF Pl Voc => x + "angole"
    };

    oper mkNTable0073: Str -> SubstForm => Str; --%
    oper mkNTable0073 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Ania";
      SF Sg Gen => x + "Ani";
      SF Sg Dat => x + "Ani";
      SF Sg Acc => x + "Anię";
      SF Sg Instr => x + "Anią";
      SF Sg Loc => x + "Ani";
      SF Sg Voc => x + "Aniu";
      SF Pl Nom => x + "anie";
      SF Pl Gen => x + "Ań";
      SF Pl Dat => x + "Aniom";
      SF Pl Acc => x + "anie";
      SF Pl Instr => x + "Aniami";
      SF Pl Loc => x + "Aniach";
      SF Pl Voc => x + "anie"
    };

    oper mkNTable0074: Str -> SubstForm => Str; --%
    oper mkNTable0074 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Aniela";
      SF Sg Gen => x + "anieli";
      SF Sg Dat => x + "anieli";
      SF Sg Acc => x + "Anielę";
      SF Sg Instr => x + "Anielą";
      SF Sg Loc => x + "anieli";
      SF Sg Voc => x + "Anielu";
      SF Pl Nom => x + "aniele";
      SF Pl Gen => x + "anieli";
      SF Pl Dat => x + "Anielom";
      SF Pl Acc => x + "aniele";
      SF Pl Instr => x + "Anielami";
      SF Pl Loc => x + "Anielach";
      SF Pl Voc => x + "aniele"
    };

    oper mkNTable0076: Str -> SubstForm => Str; --%
    oper mkNTable0076 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "oł";
      SF Sg Gen => x + "oła";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "oła";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ele";
      SF Sg Voc => x + "ele";
      SF Pl Nom => x + "ołowie";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "ołów";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "ołowie"
    };

    oper mkNTable0077: Str -> SubstForm => Str; --%
    oper mkNTable0077 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "antek";
      SF Sg Gen => x + "antka";
      SF Sg Dat => x + "antkowi";
      SF Sg Acc => x + "antka";
      SF Sg Instr => x + "antkiem";
      SF Sg Loc => x + "antku";
      SF Sg Voc => x + "antku";
      SF Pl Nom => x + "Antkowie";
      SF Pl Gen => x + "antków";
      SF Pl Dat => x + "antkom";
      SF Pl Acc => x + "antków";
      SF Pl Instr => x + "antkami";
      SF Pl Loc => x + "antkach";
      SF Pl Voc => x + "Antkowie"
    };

    oper mkNTable0078: Str -> SubstForm => Str; --%
    oper mkNTable0078 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Antoni";
      SF Sg Gen => x + "Antoniego";
      SF Sg Dat => x + "Antoniemu";
      SF Sg Acc => x + "Antoniego";
      SF Sg Instr => x + "antonim";
      SF Sg Loc => x + "antonim";
      SF Sg Voc => x + "Antoni";
      SF Pl Nom => x + "Antoniowie";
      SF Pl Gen => x + "Antonich";
      SF Pl Dat => x + "antonim";
      SF Pl Acc => x + "Antonich";
      SF Pl Instr => x + "Antonimi";
      SF Pl Loc => x + "Antonich";
      SF Pl Voc => x + "Antoniowie"
    };

    oper mkNTable0079: Str -> SubstForm => Str; --%
    oper mkNTable0079 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0080: Str -> SubstForm => Str; --%
    oper mkNTable0080 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "sia";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "siowie";
      SF Pl Gen => x + "siów";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "siów";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "siowie"
    };

    oper mkNTable0082: Str -> SubstForm => Str; --%
    oper mkNTable0082 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Anusia";
      SF Sg Gen => x + "Anusi";
      SF Sg Dat => x + "Anusi";
      SF Sg Acc => x + "Anusię";
      SF Sg Instr => x + "Anusią";
      SF Sg Loc => x + "Anusi";
      SF Sg Voc => x + "Anusiu";
      SF Pl Nom => x + "anusie";
      SF Pl Gen => x + "Anuś";
      SF Pl Dat => x + "Anusiom";
      SF Pl Acc => x + "anusie";
      SF Pl Instr => x + "Anusiami";
      SF Pl Loc => x + "Anusiach";
      SF Pl Voc => x + "anusie"
    };

    oper mkNTable0083: Str -> SubstForm => Str; --%
    oper mkNTable0083 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "ina";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "ina";
      SF Sg Instr => x + "inem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0084: Str -> SubstForm => Str; --%
    oper mkNTable0084 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "arab";
      SF Sg Gen => x + "araba";
      SF Sg Dat => x + "arabowi";
      SF Sg Acc => x + "araba";
      SF Sg Instr => x + "arabem";
      SF Sg Loc => x + "arabie";
      SF Sg Voc => x + "arabie";
      SF Pl Nom => x + "Arabowie";
      SF Pl Gen => x + "arabów";
      SF Pl Dat => x + "arabom";
      SF Pl Acc => x + "arabów";
      SF Pl Instr => x + "arabami";
      SF Pl Loc => x + "arabach";
      SF Pl Voc => x + "Arabowie"
    };

    oper mkNTable0088: Str -> SubstForm => Str; --%
    oper mkNTable0088 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "aria";
      SF Sg Gen => x + "arii";
      SF Sg Dat => x + "arii";
      SF Sg Acc => x + "arię";
      SF Sg Instr => x + "arią";
      SF Sg Loc => x + "arii";
      SF Sg Voc => x + "ario";
      SF Pl Nom => x + "Ariowie";
      SF Pl Gen => x + "Ariów";
      SF Pl Dat => x + "ariom";
      SF Pl Acc => x + "Ariów";
      SF Pl Instr => x + "ariami";
      SF Pl Loc => x + "ariach";
      SF Pl Voc => x + "Ariowie"
    };

    oper mkNTable0089: Str -> SubstForm => Str; --%
    oper mkNTable0089 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sto";
      SF Sg Gen => x + "sta";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "sta";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "sto";
      SF Pl Nom => x + "stowie";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "stów";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "stowie"
    };

    oper mkNTable0090: Str -> SubstForm => Str; --%
    oper mkNTable0090 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "arkady";
      SF Sg Gen => x + "Arkadego";
      SF Sg Dat => x + "Arkademu";
      SF Sg Acc => x + "Arkadego";
      SF Sg Instr => x + "Arkadym";
      SF Sg Loc => x + "Arkadym";
      SF Sg Voc => x + "arkady";
      SF Pl Nom => x + "Arkadowie";
      SF Pl Gen => x + "Arkadych";
      SF Pl Dat => x + "Arkadym";
      SF Pl Acc => x + "Arkadych";
      SF Pl Instr => x + "Arkadymi";
      SF Pl Loc => x + "Arkadych";
      SF Pl Voc => x + "Arkadowie"
    };

    oper mkNTable0091: Str -> SubstForm => Str; --%
    oper mkNTable0091 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "aron";
      SF Sg Gen => x + "Arona";
      SF Sg Dat => x + "aronowi";
      SF Sg Acc => x + "Arona";
      SF Sg Instr => x + "aronem";
      SF Sg Loc => x + "aronie";
      SF Sg Voc => x + "aronie";
      SF Pl Nom => x + "Aronowie";
      SF Pl Gen => x + "aronów";
      SF Pl Dat => x + "aronom";
      SF Pl Acc => x + "aronów";
      SF Pl Instr => x + "aronami";
      SF Pl Loc => x + "aronach";
      SF Pl Voc => x + "Aronowie"
    };

    oper mkNTable0092: Str -> SubstForm => Str; --%
    oper mkNTable0092 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0093: Str -> SubstForm => Str; --%
    oper mkNTable0093 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Asia";
      SF Sg Gen => x + "Asi";
      SF Sg Dat => x + "Asi";
      SF Sg Acc => x + "Asię";
      SF Sg Instr => x + "Asią";
      SF Sg Loc => x + "Asi";
      SF Sg Voc => x + "Asiu";
      SF Pl Nom => x + "asie";
      SF Pl Gen => x + "Aś";
      SF Pl Dat => x + "Asiom";
      SF Pl Acc => x + "asie";
      SF Pl Instr => x + "Asiami";
      SF Pl Loc => x + "Asiach";
      SF Pl Voc => x + "asie"
    };

    oper mkNTable0095: Str -> SubstForm => Str; --%
    oper mkNTable0095 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ja";
      SF Sg Gen => x + "ji";
      SF Sg Dat => x + "ji";
      SF Sg Acc => x + "ję";
      SF Sg Instr => x + "ją";
      SF Sg Loc => x + "ji";
      SF Sg Voc => x + "jo";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "yj";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "je";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable0096: Str -> SubstForm => Str; --%
    oper mkNTable0096 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "um";
      SF Sg Gen => x + "um";
      SF Sg Dat => x + "um";
      SF Sg Acc => x + "um";
      SF Sg Instr => x + "um";
      SF Sg Loc => x + "um";
      SF Sg Voc => x + "um";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0097: Str -> SubstForm => Str; --%
    oper mkNTable0097 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "atlanta";
      SF Sg Gen => x + "atlanty";
      SF Sg Dat => x + "atlancie";
      SF Sg Acc => x + "Atlantę";
      SF Sg Instr => x + "Atlantą";
      SF Sg Loc => x + "atlancie";
      SF Sg Voc => x + "Atlanto";
      SF Pl Nom => x + "atlanty";
      SF Pl Gen => x + "atlant";
      SF Pl Dat => x + "atlantom";
      SF Pl Acc => x + "atlanty";
      SF Pl Instr => x + "atlantami";
      SF Pl Loc => x + "atlantach";
      SF Pl Voc => x + "atlanty"
    };

    oper mkNTable0098: Str -> SubstForm => Str; --%
    oper mkNTable0098 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0099: Str -> SubstForm => Str; --%
    oper mkNTable0099 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "august";
      SF Sg Gen => x + "augusta";
      SF Sg Dat => x + "augustowi";
      SF Sg Acc => x + "augusta";
      SF Sg Instr => x + "augustem";
      SF Sg Loc => x + "auguście";
      SF Sg Voc => x + "auguście";
      SF Pl Nom => x + "Augustowie";
      SF Pl Gen => x + "augustów";
      SF Pl Dat => x + "augustom";
      SF Pl Acc => x + "augustów";
      SF Pl Instr => x + "augustami";
      SF Pl Loc => x + "augustach";
      SF Pl Voc => x + "Augustowie"
    };

    oper mkNTable0100: Str -> SubstForm => Str; --%
    oper mkNTable0100 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sta";
      SF Sg Gen => x + "sty";
      SF Sg Dat => x + "ście";
      SF Sg Acc => x + "stę";
      SF Sg Instr => x + "stą";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "sto";
      SF Pl Nom => x + "sty";
      SF Pl Gen => x + "st";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "sty";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "sty"
    };

    oper mkNTable0102: Str -> SubstForm => Str; --%
    oper mkNTable0102 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ze";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0103: Str -> SubstForm => Str; --%
    oper mkNTable0103 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0104: Str -> SubstForm => Str; --%
    oper mkNTable0104 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "in";
      SF Sg Gen => x + "ina";
      SF Sg Dat => x + "inowi";
      SF Sg Acc => x + "ina";
      SF Sg Instr => x + "inem";
      SF Sg Loc => x + "inie";
      SF Sg Voc => x + "inie";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0105: Str -> SubstForm => Str; --%
    oper mkNTable0105 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ta";
      SF Sg Gen => x + "ty";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "tę";
      SF Sg Instr => x + "tą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable0106: Str -> SubstForm => Str; --%
    oper mkNTable0106 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "śka";
      SF Sg Gen => x + "śki";
      SF Sg Dat => x + "śce";
      SF Sg Acc => x + "śkę";
      SF Sg Instr => x + "śką";
      SF Sg Loc => x + "śce";
      SF Sg Voc => x + "śko";
      SF Pl Nom => x + "śki";
      SF Pl Gen => x + "siek";
      SF Pl Dat => x + "śkom";
      SF Pl Acc => x + "śki";
      SF Pl Instr => x + "śkami";
      SF Pl Loc => x + "śkach";
      SF Pl Voc => x + "śki"
    };

    oper mkNTable0111: Str -> SubstForm => Str; --%
    oper mkNTable0111 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "zie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0112: Str -> SubstForm => Str; --%
    oper mkNTable0112 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "baedeker";
      SF Sg Gen => x + "baedekera";
      SF Sg Dat => x + "baedekerowi";
      SF Sg Acc => x + "baedekera";
      SF Sg Instr => x + "baedekerem";
      SF Sg Loc => x + "baedekerze";
      SF Sg Voc => x + "baedekerze";
      SF Pl Nom => x + "Baedekerowie";
      SF Pl Gen => x + "baedekerów";
      SF Pl Dat => x + "baedekerom";
      SF Pl Acc => x + "baedekerów";
      SF Pl Instr => x + "baedekerami";
      SF Pl Loc => x + "baedekerach";
      SF Pl Voc => x + "Baedekerowie"
    };

    oper mkNTable0113: Str -> SubstForm => Str; --%
    oper mkNTable0113 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Bagdad";
      SF Sg Gen => x + "Bagdadu";
      SF Sg Dat => x + "Bagdadowi";
      SF Sg Acc => x + "Bagdad";
      SF Sg Instr => x + "Bagdadem";
      SF Sg Loc => x + "Bagdadzie";
      SF Sg Voc => x + "Bagdadzie";
      SF Pl Nom => x + "bagdady";
      SF Pl Gen => x + "bagdadów";
      SF Pl Dat => x + "bagdadom";
      SF Pl Acc => x + "bagdady";
      SF Pl Instr => x + "bagdadami";
      SF Pl Loc => x + "bagdadach";
      SF Pl Voc => x + "bagdady"
    };

    oper mkNTable0114: Str -> SubstForm => Str; --%
    oper mkNTable0114 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bajan";
      SF Sg Gen => x + "bajana";
      SF Sg Dat => x + "bajanowi";
      SF Sg Acc => x + "bajana";
      SF Sg Instr => x + "bajanem";
      SF Sg Loc => x + "bajanie";
      SF Sg Voc => x + "bajanie";
      SF Pl Nom => x + "Bajanowie";
      SF Pl Gen => x + "bajanów";
      SF Pl Dat => x + "bajanom";
      SF Pl Acc => x + "bajanów";
      SF Pl Instr => x + "bajanami";
      SF Pl Loc => x + "bajanach";
      SF Pl Voc => x + "Bajanowie"
    };

    oper mkNTable0116: Str -> SubstForm => Str; --%
    oper mkNTable0116 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "c";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "cowie";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cowie"
    };

    oper mkNTable0117: Str -> SubstForm => Str; --%
    oper mkNTable0117 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "banach";
      SF Sg Gen => x + "Banacha";
      SF Sg Dat => x + "Banachowi";
      SF Sg Acc => x + "Banacha";
      SF Sg Instr => x + "Banachem";
      SF Sg Loc => x + "Banachu";
      SF Sg Voc => x + "Banachu";
      SF Pl Nom => x + "Banachowie";
      SF Pl Gen => x + "Banachów";
      SF Pl Dat => x + "Banachom";
      SF Pl Acc => x + "Banachów";
      SF Pl Instr => x + "Banachami";
      SF Pl Loc => x + "Banachach";
      SF Pl Voc => x + "Banachowie"
    };

    oper mkNTable0118: Str -> SubstForm => Str; --%
    oper mkNTable0118 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0119: Str -> SubstForm => Str; --%
    oper mkNTable0119 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "baran";
      SF Sg Gen => x + "barana";
      SF Sg Dat => x + "baranowi";
      SF Sg Acc => x + "barana";
      SF Sg Instr => x + "baranem";
      SF Sg Loc => x + "baranie";
      SF Sg Voc => x + "baranie";
      SF Pl Nom => x + "Baranowie";
      SF Pl Gen => x + "baranów";
      SF Pl Dat => x + "baranom";
      SF Pl Acc => x + "baranów";
      SF Pl Instr => x + "baranami";
      SF Pl Loc => x + "baranach";
      SF Pl Voc => x + "Baranowie"
    };

    oper mkNTable0120: Str -> SubstForm => Str; --%
    oper mkNTable0120 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0121: Str -> SubstForm => Str; --%
    oper mkNTable0121 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Baranowo";
      SF Sg Gen => x + "Baranowa";
      SF Sg Dat => x + "Baranowu";
      SF Sg Acc => x + "Baranowo";
      SF Sg Instr => x + "Baranowem";
      SF Sg Loc => x + "Baranowie";
      SF Sg Voc => x + "Baranowo";
      SF Pl Nom => x + "Baranowa";
      SF Pl Gen => x + "baranów";
      SF Pl Dat => x + "Baranowom";
      SF Pl Acc => x + "Baranowa";
      SF Pl Instr => x + "Baranowami";
      SF Pl Loc => x + "Baranowach";
      SF Pl Voc => x + "Baranowa"
    };

    oper mkNTable0122: Str -> SubstForm => Str; --%
    oper mkNTable0122 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "baranów";
      SF Sg Gen => x + "Baranowa";
      SF Sg Dat => x + "Baranowu";
      SF Sg Acc => x + "baranów";
      SF Sg Instr => x + "Baranowem";
      SF Sg Loc => x + "Baranowie";
      SF Sg Voc => x + "Baranowie";
      SF Pl Nom => x + "Baranowy";
      SF Pl Gen => x + "Baranowów";
      SF Pl Dat => x + "Baranowom";
      SF Pl Acc => x + "Baranowy";
      SF Pl Instr => x + "Baranowami";
      SF Pl Loc => x + "Baranowach";
      SF Pl Voc => x + "Baranowy"
    };

    oper mkNTable0123: Str -> SubstForm => Str; --%
    oper mkNTable0123 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ja";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ję";
      SF Sg Instr => x + "ją";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "jo";
      SF Pl Nom => x + "jowie";
      SF Pl Gen => x + "jów";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "jów";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "jowie"
    };

    oper mkNTable0124: Str -> SubstForm => Str; --%
    oper mkNTable0124 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Basia";
      SF Sg Gen => x + "Basi";
      SF Sg Dat => x + "Basi";
      SF Sg Acc => x + "Basię";
      SF Sg Instr => x + "Basią";
      SF Sg Loc => x + "Basi";
      SF Sg Voc => x + "Basiu";
      SF Pl Nom => x + "basie";
      SF Pl Gen => x + "Baś";
      SF Pl Dat => x + "Basiom";
      SF Pl Acc => x + "basie";
      SF Pl Instr => x + "Basiami";
      SF Pl Loc => x + "Basiach";
      SF Pl Voc => x + "basie"
    };

    oper mkNTable0125: Str -> SubstForm => Str; --%
    oper mkNTable0125 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Bask";
      SF Sg Gen => x + "Baska";
      SF Sg Dat => x + "baskowi";
      SF Sg Acc => x + "Baska";
      SF Sg Instr => x + "baskiem";
      SF Sg Loc => x + "basku";
      SF Sg Voc => x + "basku";
      SF Pl Nom => x + "Baskowie";
      SF Pl Gen => x + "basków";
      SF Pl Dat => x + "baskom";
      SF Pl Acc => x + "basków";
      SF Pl Instr => x + "baskami";
      SF Pl Loc => x + "baskach";
      SF Pl Voc => x + "Baskowie"
    };

    oper mkNTable0126: Str -> SubstForm => Str; --%
    oper mkNTable0126 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "ym";
      SF Sg Loc => x + "ym";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "ych";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0127: Str -> SubstForm => Str; --%
    oper mkNTable0127 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bawar";
      SF Sg Gen => x + "bawara";
      SF Sg Dat => x + "bawarowi";
      SF Sg Acc => x + "bawara";
      SF Sg Instr => x + "bawarem";
      SF Sg Loc => x + "bawarze";
      SF Sg Voc => x + "bawarze";
      SF Pl Nom => x + "Bawarzy";
      SF Pl Gen => x + "bawarów";
      SF Pl Dat => x + "bawarom";
      SF Pl Acc => x + "bawarów";
      SF Pl Instr => x + "bawarami";
      SF Pl Loc => x + "bawarach";
      SF Pl Voc => x + "Bawarzy"
    };

    oper mkNTable0128: Str -> SubstForm => Str; --%
    oper mkNTable0128 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "i";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "im";
      SF Sg Loc => x + "im";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ich";
      SF Pl Dat => x + "im";
      SF Pl Acc => x + "ich";
      SF Pl Instr => x + "imi";
      SF Pl Loc => x + "ich";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0129: Str -> SubstForm => Str; --%
    oper mkNTable0129 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "bałt";
      SF Sg Gen => x + "Bałta";
      SF Sg Dat => x + "bałtowi";
      SF Sg Acc => x + "Bałta";
      SF Sg Instr => x + "bałtem";
      SF Sg Loc => x + "bałcie";
      SF Sg Voc => x + "bałcie";
      SF Pl Nom => x + "Bałtowie";
      SF Pl Gen => x + "bałtów";
      SF Pl Dat => x + "bałtom";
      SF Pl Acc => x + "bałtów";
      SF Pl Instr => x + "bałtami";
      SF Pl Loc => x + "bałtach";
      SF Pl Voc => x + "Bałtowie"
    };

    oper mkNTable0131: Str -> SubstForm => Str; --%
    oper mkNTable0131 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Beata";
      SF Sg Gen => x + "beaty";
      SF Sg Dat => x + "beacie";
      SF Sg Acc => x + "Beatę";
      SF Sg Instr => x + "Beatą";
      SF Sg Loc => x + "beacie";
      SF Sg Voc => x + "Beato";
      SF Pl Nom => x + "beaty";
      SF Pl Gen => x + "beat";
      SF Pl Dat => x + "beatom";
      SF Pl Acc => x + "beaty";
      SF Pl Instr => x + "beatami";
      SF Pl Loc => x + "beatach";
      SF Pl Voc => x + "beaty"
    };

    oper mkNTable0132: Str -> SubstForm => Str; --%
    oper mkNTable0132 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "bednarek";
      SF Sg Gen => x + "bednarka";
      SF Sg Dat => x + "Bednarkowi";
      SF Sg Acc => x + "bednarka";
      SF Sg Instr => x + "Bednarkiem";
      SF Sg Loc => x + "Bednarku";
      SF Sg Voc => x + "Bednarku";
      SF Pl Nom => x + "Bednarkowie";
      SF Pl Gen => x + "Bednarków";
      SF Pl Dat => x + "bednarkom";
      SF Pl Acc => x + "Bednarków";
      SF Pl Instr => x + "bednarkami";
      SF Pl Loc => x + "bednarkach";
      SF Pl Voc => x + "Bednarkowie"
    };

    oper mkNTable0133: Str -> SubstForm => Str; --%
    oper mkNTable0133 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bednarz";
      SF Sg Gen => x + "bednarza";
      SF Sg Dat => x + "bednarzowi";
      SF Sg Acc => x + "bednarza";
      SF Sg Instr => x + "bednarzem";
      SF Sg Loc => x + "bednarzu";
      SF Sg Voc => x + "bednarzu";
      SF Pl Nom => x + "Bednarzowie";
      SF Pl Gen => x + "bednarzów";
      SF Pl Dat => x + "bednarzom";
      SF Pl Acc => x + "bednarzów";
      SF Pl Instr => x + "bednarzami";
      SF Pl Loc => x + "bednarzach";
      SF Pl Voc => x + "Bednarzowie"
    };

    oper mkNTable0134: Str -> SubstForm => Str; --%
    oper mkNTable0134 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "belg";
      SF Sg Gen => x + "belga";
      SF Sg Dat => x + "belgowi";
      SF Sg Acc => x + "belga";
      SF Sg Instr => x + "belgiem";
      SF Sg Loc => x + "belgu";
      SF Sg Voc => x + "belgu";
      SF Pl Nom => x + "Belgowie";
      SF Pl Gen => x + "belgów";
      SF Pl Dat => x + "belgom";
      SF Pl Acc => x + "belgów";
      SF Pl Instr => x + "belgami";
      SF Pl Loc => x + "belgach";
      SF Pl Voc => x + "Belgowie"
    };

    oper mkNTable0136: Str -> SubstForm => Str; --%
    oper mkNTable0136 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "belka";
      SF Sg Gen => x + "belki";
      SF Sg Dat => x + "belce";
      SF Sg Acc => x + "belkę";
      SF Sg Instr => x + "belką";
      SF Sg Loc => x + "belce";
      SF Sg Voc => x + "belko";
      SF Pl Nom => x + "Belkowie";
      SF Pl Gen => x + "Belków";
      SF Pl Dat => x + "belkom";
      SF Pl Acc => x + "Belków";
      SF Pl Instr => x + "belkami";
      SF Pl Loc => x + "belkach";
      SF Pl Voc => x + "Belkowie"
    };

    oper mkNTable0137: Str -> SubstForm => Str; --%
    oper mkNTable0137 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "to";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "towie";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "towie"
    };

    oper mkNTable0138: Str -> SubstForm => Str; --%
    oper mkNTable0138 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0139: Str -> SubstForm => Str; --%
    oper mkNTable0139 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ber";
      SF Sg Gen => x + "bera";
      SF Sg Dat => x + "berowi";
      SF Sg Acc => x + "bera";
      SF Sg Instr => x + "berem";
      SF Sg Loc => x + "berze";
      SF Sg Voc => x + "berze";
      SF Pl Nom => x + "Berowie";
      SF Pl Gen => x + "berów";
      SF Pl Dat => x + "berom";
      SF Pl Acc => x + "berów";
      SF Pl Instr => x + "berami";
      SF Pl Loc => x + "berach";
      SF Pl Voc => x + "Berowie"
    };

    oper mkNTable0140: Str -> SubstForm => Str; --%
    oper mkNTable0140 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "berek";
      SF Sg Gen => x + "berka";
      SF Sg Dat => x + "berkowi";
      SF Sg Acc => x + "berka";
      SF Sg Instr => x + "berkiem";
      SF Sg Loc => x + "berku";
      SF Sg Voc => x + "berku";
      SF Pl Nom => x + "Berkowie";
      SF Pl Gen => x + "berków";
      SF Pl Dat => x + "berkom";
      SF Pl Acc => x + "berków";
      SF Pl Instr => x + "berkami";
      SF Pl Loc => x + "berkach";
      SF Pl Voc => x + "Berkowie"
    };

    oper mkNTable0141: Str -> SubstForm => Str; --%
    oper mkNTable0141 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0142: Str -> SubstForm => Str; --%
    oper mkNTable0142 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "berlin";
      SF Sg Gen => x + "berlina";
      SF Sg Dat => x + "Berlinowi";
      SF Sg Acc => x + "berlin";
      SF Sg Instr => x + "Berlinem";
      SF Sg Loc => x + "berlinie";
      SF Sg Voc => x + "berlinie";
      SF Pl Nom => x + "berliny";
      SF Pl Gen => x + "Berlinów";
      SF Pl Dat => x + "berlinom";
      SF Pl Acc => x + "berliny";
      SF Pl Instr => x + "berlinami";
      SF Pl Loc => x + "berlinach";
      SF Pl Voc => x + "berliny"
    };

    oper mkNTable0143: Str -> SubstForm => Str; --%
    oper mkNTable0143 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bernard";
      SF Sg Gen => x + "bernarda";
      SF Sg Dat => x + "bernardowi";
      SF Sg Acc => x + "bernarda";
      SF Sg Instr => x + "bernardem";
      SF Sg Loc => x + "bernardzie";
      SF Sg Voc => x + "bernardzie";
      SF Pl Nom => x + "Bernardowie";
      SF Pl Gen => x + "bernardów";
      SF Pl Dat => x + "bernardom";
      SF Pl Acc => x + "bernardów";
      SF Pl Instr => x + "bernardami";
      SF Pl Loc => x + "bernardach";
      SF Pl Voc => x + "Bernardowie"
    };

    oper mkNTable0144: Str -> SubstForm => Str; --%
    oper mkNTable0144 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bertram";
      SF Sg Gen => x + "bertrama";
      SF Sg Dat => x + "bertramowi";
      SF Sg Acc => x + "bertrama";
      SF Sg Instr => x + "bertramem";
      SF Sg Loc => x + "bertramie";
      SF Sg Voc => x + "bertramie";
      SF Pl Nom => x + "Bertramowie";
      SF Pl Gen => x + "bertramów";
      SF Pl Dat => x + "bertramom";
      SF Pl Acc => x + "bertramów";
      SF Pl Instr => x + "bertramami";
      SF Pl Loc => x + "bertramach";
      SF Pl Voc => x + "Bertramowie"
    };

    oper mkNTable0145: Str -> SubstForm => Str; --%
    oper mkNTable0145 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0147: Str -> SubstForm => Str; --%
    oper mkNTable0147 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "białek";
      SF Sg Gen => x + "białka";
      SF Sg Dat => x + "Białkowi";
      SF Sg Acc => x + "białka";
      SF Sg Instr => x + "białkiem";
      SF Sg Loc => x + "białku";
      SF Sg Voc => x + "białku";
      SF Pl Nom => x + "Białkowie";
      SF Pl Gen => x + "Białków";
      SF Pl Dat => x + "białkom";
      SF Pl Acc => x + "Białków";
      SF Pl Instr => x + "białkami";
      SF Pl Loc => x + "białkach";
      SF Pl Voc => x + "Białkowie"
    };

    oper mkNTable0148: Str -> SubstForm => Str; --%
    oper mkNTable0148 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "białko";
      SF Sg Gen => x + "białki";
      SF Sg Dat => x + "białce";
      SF Sg Acc => x + "białkę";
      SF Sg Instr => x + "białką";
      SF Sg Loc => x + "białce";
      SF Sg Voc => x + "białko";
      SF Pl Nom => x + "Białkowie";
      SF Pl Gen => x + "Białków";
      SF Pl Dat => x + "białkom";
      SF Pl Acc => x + "Białków";
      SF Pl Instr => x + "białkami";
      SF Pl Loc => x + "białkach";
      SF Pl Voc => x + "Białkowie"
    };

    oper mkNTable0150: Str -> SubstForm => Str; --%
    oper mkNTable0150 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "biel";
      SF Sg Gen => x + "Biela";
      SF Sg Dat => x + "bielowi";
      SF Sg Acc => x + "Biela";
      SF Sg Instr => x + "bielem";
      SF Sg Loc => x + "bielu";
      SF Sg Voc => x + "bielu";
      SF Pl Nom => x + "Bielowie";
      SF Pl Gen => x + "bielów";
      SF Pl Dat => x + "bielom";
      SF Pl Acc => x + "bielów";
      SF Pl Instr => x + "bielami";
      SF Pl Loc => x + "bielach";
      SF Pl Voc => x + "Bielowie"
    };

    oper mkNTable0151: Str -> SubstForm => Str; --%
    oper mkNTable0151 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niek";
      SF Sg Gen => x + "ńka";
      SF Sg Dat => x + "ńkowi";
      SF Sg Acc => x + "ńka";
      SF Sg Instr => x + "ńkiem";
      SF Sg Loc => x + "ńku";
      SF Sg Voc => x + "ńku";
      SF Pl Nom => x + "ńkowie";
      SF Pl Gen => x + "ńków";
      SF Pl Dat => x + "ńkom";
      SF Pl Acc => x + "ńków";
      SF Pl Instr => x + "ńkami";
      SF Pl Loc => x + "ńkach";
      SF Pl Voc => x + "ńkowie"
    };

    oper mkNTable0153: Str -> SubstForm => Str; --%
    oper mkNTable0153 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "niowie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "niów";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "niowie"
    };

    oper mkNTable0154: Str -> SubstForm => Str; --%
    oper mkNTable0154 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "bill";
      SF Sg Gen => x + "Billa";
      SF Sg Dat => x + "billowi";
      SF Sg Acc => x + "Billa";
      SF Sg Instr => x + "billem";
      SF Sg Loc => x + "billu";
      SF Sg Voc => x + "billu";
      SF Pl Nom => x + "bille";
      SF Pl Gen => x + "billów";
      SF Pl Dat => x + "billom";
      SF Pl Acc => x + "billów";
      SF Pl Instr => x + "billami";
      SF Pl Loc => x + "billach";
      SF Pl Voc => x + "bille"
    };

    oper mkNTable0155: Str -> SubstForm => Str; --%
    oper mkNTable0155 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "na";
      SF Sg Gen => x + "ny";
      SF Sg Dat => x + "nie";
      SF Sg Acc => x + "nę";
      SF Sg Instr => x + "ną";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "no";
      SF Pl Nom => x + "ny";
      SF Pl Gen => x + "ien";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "ny";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "ny"
    };

    oper mkNTable0156: Str -> SubstForm => Str; --%
    oper mkNTable0156 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0158: Str -> SubstForm => Str; --%
    oper mkNTable0158 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "bob";
      SF Sg Gen => x + "boba";
      SF Sg Dat => x + "bobowi";
      SF Sg Acc => x + "boba";
      SF Sg Instr => x + "bobem";
      SF Sg Loc => x + "bobie";
      SF Sg Voc => x + "bobie";
      SF Pl Nom => x + "Bobowie";
      SF Pl Gen => x + "bobów";
      SF Pl Dat => x + "bobom";
      SF Pl Acc => x + "bobów";
      SF Pl Instr => x + "bobami";
      SF Pl Loc => x + "bobach";
      SF Pl Voc => x + "Bobowie"
    };

    oper mkNTable0159: Str -> SubstForm => Str; --%
    oper mkNTable0159 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bober";
      SF Sg Gen => x + "bobra";
      SF Sg Dat => x + "bobrowi";
      SF Sg Acc => x + "bobra";
      SF Sg Instr => x + "bobrem";
      SF Sg Loc => x + "bobrze";
      SF Sg Voc => x + "bobrze";
      SF Pl Nom => x + "Bobrowie";
      SF Pl Gen => x + "bobrów";
      SF Pl Dat => x + "bobrom";
      SF Pl Acc => x + "bobrów";
      SF Pl Instr => x + "bobrami";
      SF Pl Loc => x + "bobrach";
      SF Pl Voc => x + "Bobrowie"
    };

    oper mkNTable0161: Str -> SubstForm => Str; --%
    oper mkNTable0161 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bogdana";
      SF Sg Gen => x + "bogdany";
      SF Sg Dat => x + "bogdanie";
      SF Sg Acc => x + "Bogdanę";
      SF Sg Instr => x + "Bogdaną";
      SF Sg Loc => x + "bogdanie";
      SF Sg Voc => x + "Bogdano";
      SF Pl Nom => x + "bogdany";
      SF Pl Gen => x + "bogdan";
      SF Pl Dat => x + "bogdanom";
      SF Pl Acc => x + "bogdany";
      SF Pl Instr => x + "bogdanami";
      SF Pl Loc => x + "bogdanach";
      SF Pl Voc => x + "bogdany"
    };

    oper mkNTable0163: Str -> SubstForm => Str; --%
    oper mkNTable0163 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "łowie";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "łów";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "łowie"
    };

    oper mkNTable0164: Str -> SubstForm => Str; --%
    oper mkNTable0164 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "ły";
      SF Sg Dat => x + "le";
      SF Sg Acc => x + "łę";
      SF Sg Instr => x + "łą";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "ł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable0165: Str -> SubstForm => Str; --%
    oper mkNTable0165 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ta";
      SF Sg Gen => x + "ty";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "tę";
      SF Sg Instr => x + "tą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "towie";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "towie"
    };

    oper mkNTable0166: Str -> SubstForm => Str; --%
    oper mkNTable0166 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "cowie";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cowie"
    };

    oper mkNTable0167: Str -> SubstForm => Str; --%
    oper mkNTable0167 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bolek";
      SF Sg Gen => x + "bolka";
      SF Sg Dat => x + "bolkowi";
      SF Sg Acc => x + "bolka";
      SF Sg Instr => x + "bolkiem";
      SF Sg Loc => x + "bolku";
      SF Sg Voc => x + "bolku";
      SF Pl Nom => x + "Bolkowie";
      SF Pl Gen => x + "bolków";
      SF Pl Dat => x + "bolkom";
      SF Pl Acc => x + "bolków";
      SF Pl Instr => x + "bolkami";
      SF Pl Loc => x + "bolkach";
      SF Pl Voc => x + "Bolkowie"
    };

    oper mkNTable0168: Str -> SubstForm => Str; --%
    oper mkNTable0168 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "sł";
      SF Sg Gen => x + "sła";
      SF Sg Dat => x + "słowi";
      SF Sg Acc => x + "sła";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "śle";
      SF Pl Nom => x + "słowie";
      SF Pl Gen => x + "słów";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "słów";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "słowie"
    };

    oper mkNTable0169: Str -> SubstForm => Str; --%
    oper mkNTable0169 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "iec";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable0170: Str -> SubstForm => Str; --%
    oper mkNTable0170 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bolivar";
      SF Sg Gen => x + "bolivara";
      SF Sg Dat => x + "bolivarowi";
      SF Sg Acc => x + "bolivara";
      SF Sg Instr => x + "bolivarem";
      SF Sg Loc => x + "bolivarze";
      SF Sg Voc => x + "bolivarze";
      SF Pl Nom => x + "Bolivarowie";
      SF Pl Gen => x + "bolivarów";
      SF Pl Dat => x + "bolivarom";
      SF Pl Acc => x + "bolivarów";
      SF Pl Instr => x + "bolivarami";
      SF Pl Loc => x + "bolivarach";
      SF Pl Voc => x + "Bolivarowie"
    };

    oper mkNTable0171: Str -> SubstForm => Str; --%
    oper mkNTable0171 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Bolko";
      SF Sg Gen => x + "bolka";
      SF Sg Dat => x + "bolkowi";
      SF Sg Acc => x + "bolka";
      SF Sg Instr => x + "bolkiem";
      SF Sg Loc => x + "bolku";
      SF Sg Voc => x + "bolku";
      SF Pl Nom => x + "Bolkowie";
      SF Pl Gen => x + "bolków";
      SF Pl Dat => x + "bolkom";
      SF Pl Acc => x + "bolków";
      SF Pl Instr => x + "bolkami";
      SF Pl Loc => x + "bolkach";
      SF Pl Voc => x + "Bolkowie"
    };

    oper mkNTable0173: Str -> SubstForm => Str; --%
    oper mkNTable0173 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ze";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0174: Str -> SubstForm => Str; --%
    oper mkNTable0174 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ko";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "kowie";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ków";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "kowie"
    };

    oper mkNTable0175: Str -> SubstForm => Str; --%
    oper mkNTable0175 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0176: Str -> SubstForm => Str; --%
    oper mkNTable0176 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "o";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "o";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable0177: Str -> SubstForm => Str; --%
    oper mkNTable0177 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "borsuk";
      SF Sg Gen => x + "borsuka";
      SF Sg Dat => x + "borsukowi";
      SF Sg Acc => x + "borsuka";
      SF Sg Instr => x + "borsukiem";
      SF Sg Loc => x + "borsuku";
      SF Sg Voc => x + "borsuku";
      SF Pl Nom => x + "Borsukowie";
      SF Pl Gen => x + "borsuków";
      SF Pl Dat => x + "borsukom";
      SF Pl Acc => x + "borsuków";
      SF Pl Instr => x + "borsukami";
      SF Pl Loc => x + "borsukach";
      SF Pl Voc => x + "Borsukowie"
    };

    oper mkNTable0179: Str -> SubstForm => Str; --%
    oper mkNTable0179 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bosak";
      SF Sg Gen => x + "bosaka";
      SF Sg Dat => x + "bosakowi";
      SF Sg Acc => x + "bosaka";
      SF Sg Instr => x + "bosakiem";
      SF Sg Loc => x + "bosaku";
      SF Sg Voc => x + "bosaku";
      SF Pl Nom => x + "Bosakowie";
      SF Pl Gen => x + "bosaków";
      SF Pl Dat => x + "bosakom";
      SF Pl Acc => x + "bosaków";
      SF Pl Instr => x + "bosakami";
      SF Pl Loc => x + "bosakach";
      SF Pl Voc => x + "Bosakowie"
    };

    oper mkNTable0180: Str -> SubstForm => Str; --%
    oper mkNTable0180 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bourbon";
      SF Sg Gen => x + "bourbona";
      SF Sg Dat => x + "bourbonowi";
      SF Sg Acc => x + "bourbona";
      SF Sg Instr => x + "bourbonem";
      SF Sg Loc => x + "bourbonie";
      SF Sg Voc => x + "bourbonie";
      SF Pl Nom => x + "Bourbonowie";
      SF Pl Gen => x + "bourbonów";
      SF Pl Dat => x + "bourbonom";
      SF Pl Acc => x + "bourbonów";
      SF Pl Instr => x + "bourbonami";
      SF Pl Loc => x + "bourbonach";
      SF Pl Voc => x + "Bourbonowie"
    };

    oper mkNTable0182: Str -> SubstForm => Str; --%
    oper mkNTable0182 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "braun";
      SF Sg Gen => x + "brauna";
      SF Sg Dat => x + "braunowi";
      SF Sg Acc => x + "brauna";
      SF Sg Instr => x + "braunem";
      SF Sg Loc => x + "braunie";
      SF Sg Voc => x + "braunie";
      SF Pl Nom => x + "Braunowie";
      SF Pl Gen => x + "braunów";
      SF Pl Dat => x + "braunom";
      SF Pl Acc => x + "braunów";
      SF Pl Instr => x + "braunami";
      SF Pl Loc => x + "braunach";
      SF Pl Voc => x + "Braunowie"
    };

    oper mkNTable0183: Str -> SubstForm => Str; --%
    oper mkNTable0183 lexem = 
      let x = Predef.tk 12 lexem in
    table { 
      SF Sg Nom => x + "brazylijczyk";
      SF Sg Gen => x + "brazylijczyka";
      SF Sg Dat => x + "Brazylijczykowi";
      SF Sg Acc => x + "brazylijczyka";
      SF Sg Instr => x + "Brazylijczykiem";
      SF Sg Loc => x + "Brazylijczyku";
      SF Sg Voc => x + "Brazylijczyku";
      SF Pl Nom => x + "Brazylijczycy";
      SF Pl Gen => x + "Brazylijczyków";
      SF Pl Dat => x + "Brazylijczykom";
      SF Pl Acc => x + "Brazylijczyków";
      SF Pl Instr => x + "Brazylijczykami";
      SF Pl Loc => x + "Brazylijczykach";
      SF Pl Voc => x + "Brazylijczycy"
    };

    oper mkNTable0184: Str -> SubstForm => Str; --%
    oper mkNTable0184 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "lowie";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "lów";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "lowie"
    };

    oper mkNTable0185: Str -> SubstForm => Str; --%
    oper mkNTable0185 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Bronia";
      SF Sg Gen => x + "broni";
      SF Sg Dat => x + "broni";
      SF Sg Acc => x + "Bronię";
      SF Sg Instr => x + "bronią";
      SF Sg Loc => x + "broni";
      SF Sg Voc => x + "Broniu";
      SF Pl Nom => x + "bronie";
      SF Pl Gen => x + "broń";
      SF Pl Dat => x + "broniom";
      SF Pl Acc => x + "bronie";
      SF Pl Instr => x + "broniami";
      SF Pl Loc => x + "broniach";
      SF Pl Voc => x + "bronie"
    };

    oper mkNTable0186: Str -> SubstForm => Str; --%
    oper mkNTable0186 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "browning";
      SF Sg Gen => x + "browninga";
      SF Sg Dat => x + "browningowi";
      SF Sg Acc => x + "browninga";
      SF Sg Instr => x + "browningiem";
      SF Sg Loc => x + "browningu";
      SF Sg Voc => x + "browningu";
      SF Pl Nom => x + "Browningowie";
      SF Pl Gen => x + "browningów";
      SF Pl Dat => x + "browningom";
      SF Pl Acc => x + "browningów";
      SF Pl Instr => x + "browningami";
      SF Pl Loc => x + "browningach";
      SF Pl Voc => x + "Browningowie"
    };

    oper mkNTable0187: Str -> SubstForm => Str; --%
    oper mkNTable0187 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "brożek";
      SF Sg Gen => x + "brożka";
      SF Sg Dat => x + "brożkowi";
      SF Sg Acc => x + "brożka";
      SF Sg Instr => x + "brożkiem";
      SF Sg Loc => x + "brożku";
      SF Sg Voc => x + "brożku";
      SF Pl Nom => x + "Brożkowie";
      SF Pl Gen => x + "brożków";
      SF Pl Dat => x + "brożkom";
      SF Pl Acc => x + "brożków";
      SF Pl Instr => x + "brożkami";
      SF Pl Loc => x + "brożkach";
      SF Pl Voc => x + "Brożkowie"
    };

    oper mkNTable0188: Str -> SubstForm => Str; --%
    oper mkNTable0188 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "wi";
      SF Sg Acc => x + "na";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "nowie";
      SF Pl Gen => x + "nów";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "nów";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "nowie"
    };

    oper mkNTable0189: Str -> SubstForm => Str; --%
    oper mkNTable0189 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bryła";
      SF Sg Gen => x + "bryły";
      SF Sg Dat => x + "bryle";
      SF Sg Acc => x + "bryłę";
      SF Sg Instr => x + "bryłą";
      SF Sg Loc => x + "bryle";
      SF Sg Voc => x + "bryło";
      SF Pl Nom => x + "Bryłowie";
      SF Pl Gen => x + "Bryłów";
      SF Pl Dat => x + "bryłom";
      SF Pl Acc => x + "Bryłów";
      SF Pl Instr => x + "bryłami";
      SF Pl Loc => x + "bryłach";
      SF Pl Voc => x + "Bryłowie"
    };

    oper mkNTable0190: Str -> SubstForm => Str; --%
    oper mkNTable0190 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "brzechwa";
      SF Sg Gen => x + "brzechwy";
      SF Sg Dat => x + "brzechwie";
      SF Sg Acc => x + "brzechwę";
      SF Sg Instr => x + "brzechwą";
      SF Sg Loc => x + "brzechwie";
      SF Sg Voc => x + "brzechwo";
      SF Pl Nom => x + "Brzechwowie";
      SF Pl Gen => x + "Brzechwów";
      SF Pl Dat => x + "brzechwom";
      SF Pl Acc => x + "Brzechwów";
      SF Pl Instr => x + "brzechwami";
      SF Pl Loc => x + "brzechwach";
      SF Pl Voc => x + "Brzechwowie"
    };

    oper mkNTable0192: Str -> SubstForm => Str; --%
    oper mkNTable0192 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "buczek";
      SF Sg Gen => x + "buczka";
      SF Sg Dat => x + "buczkowi";
      SF Sg Acc => x + "buczka";
      SF Sg Instr => x + "buczkiem";
      SF Sg Loc => x + "buczku";
      SF Sg Voc => x + "buczku";
      SF Pl Nom => x + "Buczkowie";
      SF Pl Gen => x + "buczków";
      SF Pl Dat => x + "buczkom";
      SF Pl Acc => x + "buczków";
      SF Pl Instr => x + "buczkami";
      SF Pl Loc => x + "buczkach";
      SF Pl Voc => x + "Buczkowie"
    };

    oper mkNTable0193: Str -> SubstForm => Str; --%
    oper mkNTable0193 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0194: Str -> SubstForm => Str; --%
    oper mkNTable0194 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "bur";
      SF Sg Gen => x + "bura";
      SF Sg Dat => x + "Burowi";
      SF Sg Acc => x + "bura";
      SF Sg Instr => x + "Burem";
      SF Sg Loc => x + "burze";
      SF Sg Voc => x + "burze";
      SF Pl Nom => x + "Burowie";
      SF Pl Gen => x + "Burów";
      SF Pl Dat => x + "burom";
      SF Pl Acc => x + "Burów";
      SF Pl Instr => x + "burami";
      SF Pl Loc => x + "burach";
      SF Pl Voc => x + "Burowie"
    };

    oper mkNTable0195: Str -> SubstForm => Str; --%
    oper mkNTable0195 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "burbon";
      SF Sg Gen => x + "burbona";
      SF Sg Dat => x + "burbonowi";
      SF Sg Acc => x + "burbona";
      SF Sg Instr => x + "burbonem";
      SF Sg Loc => x + "burbonie";
      SF Sg Voc => x + "burbonie";
      SF Pl Nom => x + "Burbonowie";
      SF Pl Gen => x + "burbonów";
      SF Pl Dat => x + "burbonom";
      SF Pl Acc => x + "burbonów";
      SF Pl Instr => x + "burbonami";
      SF Pl Loc => x + "burbonach";
      SF Pl Voc => x + "Burbonowie"
    };

    oper mkNTable0196: Str -> SubstForm => Str; --%
    oper mkNTable0196 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "burgund";
      SF Sg Gen => x + "burgunda";
      SF Sg Dat => x + "burgundowi";
      SF Sg Acc => x + "burgunda";
      SF Sg Instr => x + "burgundem";
      SF Sg Loc => x + "burgundzie";
      SF Sg Voc => x + "burgundzie";
      SF Pl Nom => x + "Burgundowie";
      SF Pl Gen => x + "burgundów";
      SF Pl Dat => x + "burgundom";
      SF Pl Acc => x + "burgundów";
      SF Pl Instr => x + "burgundami";
      SF Pl Loc => x + "burgundach";
      SF Pl Voc => x + "Burgundowie"
    };

    oper mkNTable0197: Str -> SubstForm => Str; --%
    oper mkNTable0197 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0199: Str -> SubstForm => Str; --%
    oper mkNTable0199 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0201: Str -> SubstForm => Str; --%
    oper mkNTable0201 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "bąk";
      SF Sg Gen => x + "bąka";
      SF Sg Dat => x + "bąkowi";
      SF Sg Acc => x + "bąka";
      SF Sg Instr => x + "bąkiem";
      SF Sg Loc => x + "bąku";
      SF Sg Voc => x + "bąku";
      SF Pl Nom => x + "Bąkowie";
      SF Pl Gen => x + "bąków";
      SF Pl Dat => x + "bąkom";
      SF Pl Acc => x + "bąków";
      SF Pl Instr => x + "bąkami";
      SF Pl Loc => x + "bąkach";
      SF Pl Voc => x + "Bąkowie"
    };

    oper mkNTable0203: Str -> SubstForm => Str; --%
    oper mkNTable0203 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0205: Str -> SubstForm => Str; --%
    oper mkNTable0205 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "óbr";
      SF Sg Gen => x + "obru";
      SF Sg Dat => x + "obrowi";
      SF Sg Acc => x + "óbr";
      SF Sg Instr => x + "obrem";
      SF Sg Loc => x + "obrze";
      SF Sg Voc => x + "obrze";
      SF Pl Nom => x + "obry";
      SF Pl Gen => x + "obrów";
      SF Pl Dat => x + "obrom";
      SF Pl Acc => x + "obry";
      SF Pl Instr => x + "obrami";
      SF Pl Loc => x + "obrach";
      SF Pl Voc => x + "obry"
    };

    oper mkNTable0206: Str -> SubstForm => Str; --%
    oper mkNTable0206 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "bór";
      SF Sg Gen => x + "bora";
      SF Sg Dat => x + "borowi";
      SF Sg Acc => x + "bora";
      SF Sg Instr => x + "borem";
      SF Sg Loc => x + "borze";
      SF Sg Voc => x + "borze";
      SF Pl Nom => x + "Borowie";
      SF Pl Gen => x + "borów";
      SF Pl Dat => x + "borom";
      SF Pl Acc => x + "borów";
      SF Pl Instr => x + "borami";
      SF Pl Loc => x + "borach";
      SF Pl Voc => x + "Borowie"
    };

    oper mkNTable0207: Str -> SubstForm => Str; --%
    oper mkNTable0207 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0208: Str -> SubstForm => Str; --%
    oper mkNTable0208 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "o";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0209: Str -> SubstForm => Str; --%
    oper mkNTable0209 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "celestyna";
      SF Sg Gen => x + "celestyny";
      SF Sg Dat => x + "celestynie";
      SF Sg Acc => x + "Celestynę";
      SF Sg Instr => x + "Celestyną";
      SF Sg Loc => x + "celestynie";
      SF Sg Voc => x + "Celestyno";
      SF Pl Nom => x + "celestyny";
      SF Pl Gen => x + "celestyn";
      SF Pl Dat => x + "celestynom";
      SF Pl Acc => x + "celestyny";
      SF Pl Instr => x + "celestynami";
      SF Pl Loc => x + "celestynach";
      SF Pl Voc => x + "celestyny"
    };

    oper mkNTable0211: Str -> SubstForm => Str; --%
    oper mkNTable0211 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "celt";
      SF Sg Gen => x + "celta";
      SF Sg Dat => x + "Celtowi";
      SF Sg Acc => x + "celta";
      SF Sg Instr => x + "Celtem";
      SF Sg Loc => x + "celcie";
      SF Sg Voc => x + "celcie";
      SF Pl Nom => x + "Celtowie";
      SF Pl Gen => x + "Celtów";
      SF Pl Dat => x + "celtom";
      SF Pl Acc => x + "Celtów";
      SF Pl Instr => x + "celtami";
      SF Pl Loc => x + "celtach";
      SF Pl Voc => x + "Celtowie"
    };

    oper mkNTable0212: Str -> SubstForm => Str; --%
    oper mkNTable0212 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "cezary";
      SF Sg Gen => x + "Cezarego";
      SF Sg Dat => x + "Cezaremu";
      SF Sg Acc => x + "Cezarego";
      SF Sg Instr => x + "Cezarym";
      SF Sg Loc => x + "Cezarym";
      SF Sg Voc => x + "cezary";
      SF Pl Nom => x + "cezarowie";
      SF Pl Gen => x + "Cezarych";
      SF Pl Dat => x + "Cezarym";
      SF Pl Acc => x + "Cezarych";
      SF Pl Instr => x + "Cezarymi";
      SF Pl Loc => x + "Cezarych";
      SF Pl Voc => x + "cezarowie"
    };

    oper mkNTable0213: Str -> SubstForm => Str; --%
    oper mkNTable0213 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "charleston";
      SF Sg Gen => x + "Charlestonu";
      SF Sg Dat => x + "charlestonowi";
      SF Sg Acc => x + "charleston";
      SF Sg Instr => x + "charlestonem";
      SF Sg Loc => x + "charlestonie";
      SF Sg Voc => x + "charlestonie";
      SF Pl Nom => x + "charlestony";
      SF Pl Gen => x + "charlestonów";
      SF Pl Dat => x + "charlestonom";
      SF Pl Acc => x + "charlestony";
      SF Pl Instr => x + "charlestonami";
      SF Pl Loc => x + "charlestonach";
      SF Pl Voc => x + "charlestony"
    };

    oper mkNTable0215: Str -> SubstForm => Str; --%
    oper mkNTable0215 lexem = 
      let x = Predef.tk 13 lexem in
    table { 
      SF Sg Nom => x + "chateaubriand";
      SF Sg Gen => x + "chateaubrianda";
      SF Sg Dat => x + "chateaubriandowi";
      SF Sg Acc => x + "chateaubrianda";
      SF Sg Instr => x + "chateaubriandem";
      SF Sg Loc => x + "chateaubriandzie";
      SF Sg Voc => x + "chateaubriandzie";
      SF Pl Nom => x + "Chateaubriandowie";
      SF Pl Gen => x + "chateaubriandów";
      SF Pl Dat => x + "chateaubriandom";
      SF Pl Acc => x + "chateaubriandów";
      SF Pl Instr => x + "chateaubriandami";
      SF Pl Loc => x + "chateaubriandach";
      SF Pl Voc => x + "Chateaubriandowie"
    };

    oper mkNTable0217: Str -> SubstForm => Str; --%
    oper mkNTable0217 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "chińczyk";
      SF Sg Gen => x + "chińczyka";
      SF Sg Dat => x + "chińczykowi";
      SF Sg Acc => x + "chińczyka";
      SF Sg Instr => x + "chińczykiem";
      SF Sg Loc => x + "chińczyku";
      SF Sg Voc => x + "chińczyku";
      SF Pl Nom => x + "Chińczycy";
      SF Pl Gen => x + "chińczyków";
      SF Pl Dat => x + "chińczykom";
      SF Pl Acc => x + "chińczyków";
      SF Pl Instr => x + "chińczykami";
      SF Pl Loc => x + "chińczykach";
      SF Pl Voc => x + "Chińczycy"
    };

    oper mkNTable0221: Str -> SubstForm => Str; --%
    oper mkNTable0221 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable0222: Str -> SubstForm => Str; --%
    oper mkNTable0222 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "Christian";
      SF Sg Gen => x + "Christiana";
      SF Sg Dat => x + "Christianowi";
      SF Sg Acc => x + "Christiana";
      SF Sg Instr => x + "Christianem";
      SF Sg Loc => x + "christianie";
      SF Sg Voc => x + "christianie";
      SF Pl Nom => x + "Christianowie";
      SF Pl Gen => x + "Christianów";
      SF Pl Dat => x + "Christianom";
      SF Pl Acc => x + "Christianów";
      SF Pl Instr => x + "Christianami";
      SF Pl Loc => x + "Christianach";
      SF Pl Voc => x + "Christianowie"
    };

    oper mkNTable0223: Str -> SubstForm => Str; --%
    oper mkNTable0223 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0224: Str -> SubstForm => Str; --%
    oper mkNTable0224 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "Chrystian";
      SF Sg Gen => x + "Chrystiana";
      SF Sg Dat => x + "Chrystianowi";
      SF Sg Acc => x + "Chrystiana";
      SF Sg Instr => x + "Chrystianem";
      SF Sg Loc => x + "chrystianie";
      SF Sg Voc => x + "chrystianie";
      SF Pl Nom => x + "Chrystianowie";
      SF Pl Gen => x + "Chrystianów";
      SF Pl Dat => x + "Chrystianom";
      SF Pl Acc => x + "Chrystianów";
      SF Pl Instr => x + "Chrystianami";
      SF Pl Loc => x + "Chrystianach";
      SF Pl Voc => x + "Chrystianowie"
    };

    oper mkNTable0226: Str -> SubstForm => Str; --%
    oper mkNTable0226 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "chudoba";
      SF Sg Gen => x + "chudoby";
      SF Sg Dat => x + "chudobie";
      SF Sg Acc => x + "chudobę";
      SF Sg Instr => x + "chudobą";
      SF Sg Loc => x + "chudobie";
      SF Sg Voc => x + "chudobo";
      SF Pl Nom => x + "Chudobowie";
      SF Pl Gen => x + "Chudobów";
      SF Pl Dat => x + "chudobom";
      SF Pl Acc => x + "Chudobów";
      SF Pl Instr => x + "chudobami";
      SF Pl Loc => x + "chudobach";
      SF Pl Voc => x + "Chudobowie"
    };

    oper mkNTable0227: Str -> SubstForm => Str; --%
    oper mkNTable0227 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ł";
      SF Sg Gen => x + "łu";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ł";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable0228: Str -> SubstForm => Str; --%
    oper mkNTable0228 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óg";
      SF Sg Gen => x + "oga";
      SF Sg Dat => x + "ogowi";
      SF Sg Acc => x + "oga";
      SF Sg Instr => x + "ogiem";
      SF Sg Loc => x + "ogu";
      SF Sg Voc => x + "ogu";
      SF Pl Nom => x + "ogowie";
      SF Pl Gen => x + "ogów";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogów";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogowie"
    };

    oper mkNTable0231: Str -> SubstForm => Str; --%
    oper mkNTable0231 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "cieśla";
      SF Sg Gen => x + "cieśli";
      SF Sg Dat => x + "cieśli";
      SF Sg Acc => x + "cieślę";
      SF Sg Instr => x + "cieślą";
      SF Sg Loc => x + "cieśli";
      SF Sg Voc => x + "cieślo";
      SF Pl Nom => x + "Cieślowie";
      SF Pl Gen => x + "cieślów";
      SF Pl Dat => x + "cieślom";
      SF Pl Acc => x + "cieślów";
      SF Pl Instr => x + "cieślami";
      SF Pl Loc => x + "cieślach";
      SF Pl Voc => x + "Cieślowie"
    };

    oper mkNTable0232: Str -> SubstForm => Str; --%
    oper mkNTable0232 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "ciećwierz";
      SF Sg Gen => x + "ciećwierza";
      SF Sg Dat => x + "ciećwierzowi";
      SF Sg Acc => x + "ciećwierza";
      SF Sg Instr => x + "ciećwierzem";
      SF Sg Loc => x + "ciećwierzu";
      SF Sg Voc => x + "ciećwierzu";
      SF Pl Nom => x + "Ciećwierzowie";
      SF Pl Gen => x + "ciećwierzów";
      SF Pl Dat => x + "ciećwierzom";
      SF Pl Acc => x + "ciećwierzów";
      SF Pl Instr => x + "ciećwierzami";
      SF Pl Loc => x + "ciećwierzach";
      SF Pl Voc => x + "Ciećwierzowie"
    };

    oper mkNTable0233: Str -> SubstForm => Str; --%
    oper mkNTable0233 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "ciołek";
      SF Sg Gen => x + "ciołka";
      SF Sg Dat => x + "ciołkowi";
      SF Sg Acc => x + "ciołka";
      SF Sg Instr => x + "ciołkiem";
      SF Sg Loc => x + "ciołku";
      SF Sg Voc => x + "ciołku";
      SF Pl Nom => x + "Ciołkowie";
      SF Pl Gen => x + "ciołków";
      SF Pl Dat => x + "ciołkom";
      SF Pl Acc => x + "ciołków";
      SF Pl Instr => x + "ciołkami";
      SF Pl Loc => x + "ciołkach";
      SF Pl Voc => x + "Ciołkowie"
    };

    oper mkNTable0236: Str -> SubstForm => Str; --%
    oper mkNTable0236 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0237: Str -> SubstForm => Str; --%
    oper mkNTable0237 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "cyganiak";
      SF Sg Gen => x + "cyganiaka";
      SF Sg Dat => x + "cyganiakowi";
      SF Sg Acc => x + "cyganiaka";
      SF Sg Instr => x + "cyganiakiem";
      SF Sg Loc => x + "cyganiaku";
      SF Sg Voc => x + "cyganiaku";
      SF Pl Nom => x + "Cyganiacy";
      SF Pl Gen => x + "cyganiaków";
      SF Pl Dat => x + "cyganiakom";
      SF Pl Acc => x + "cyganiaków";
      SF Pl Instr => x + "cyganiakami";
      SF Pl Loc => x + "cyganiakach";
      SF Pl Voc => x + "Cyganiacy"
    };

    oper mkNTable0238: Str -> SubstForm => Str; --%
    oper mkNTable0238 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cha";
      SF Sg Gen => x + "chy";
      SF Sg Dat => x + "sze";
      SF Sg Acc => x + "chę";
      SF Sg Instr => x + "chą";
      SF Sg Loc => x + "sze";
      SF Sg Voc => x + "cho";
      SF Pl Nom => x + "chy";
      SF Pl Gen => x + "ch";
      SF Pl Dat => x + "chom";
      SF Pl Acc => x + "chy";
      SF Pl Instr => x + "chami";
      SF Pl Loc => x + "chach";
      SF Pl Voc => x + "chy"
    };

    oper mkNTable0239: Str -> SubstForm => Str; --%
    oper mkNTable0239 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ko";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "ku";
      SF Sg Acc => x + "ko";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "ka";
      SF Pl Gen => x + "ek";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ka";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ka"
    };

    oper mkNTable0240: Str -> SubstForm => Str; --%
    oper mkNTable0240 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Czaja";
      SF Sg Gen => x + "Czai";
      SF Sg Dat => x + "Czai";
      SF Sg Acc => x + "Czaję";
      SF Sg Instr => x + "Czają";
      SF Sg Loc => x + "Czai";
      SF Sg Voc => x + "Czajo";
      SF Pl Nom => x + "Czajowie";
      SF Pl Gen => x + "czajów";
      SF Pl Dat => x + "czajom";
      SF Pl Acc => x + "czajów";
      SF Pl Instr => x + "czajami";
      SF Pl Loc => x + "czajach";
      SF Pl Voc => x + "Czajowie"
    };

    oper mkNTable0241: Str -> SubstForm => Str; --%
    oper mkNTable0241 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "czajka";
      SF Sg Gen => x + "czajki";
      SF Sg Dat => x + "czajce";
      SF Sg Acc => x + "czajkę";
      SF Sg Instr => x + "czajką";
      SF Sg Loc => x + "czajce";
      SF Sg Voc => x + "czajko";
      SF Pl Nom => x + "Czajkowie";
      SF Pl Gen => x + "Czajków";
      SF Pl Dat => x + "czajkom";
      SF Pl Acc => x + "Czajków";
      SF Pl Instr => x + "czajkami";
      SF Pl Loc => x + "czajkach";
      SF Pl Voc => x + "Czajkowie"
    };

    oper mkNTable0242: Str -> SubstForm => Str; --%
    oper mkNTable0242 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "czapek";
      SF Sg Gen => x + "czapka";
      SF Sg Dat => x + "Czapkowi";
      SF Sg Acc => x + "czapka";
      SF Sg Instr => x + "Czapkiem";
      SF Sg Loc => x + "Czapku";
      SF Sg Voc => x + "Czapku";
      SF Pl Nom => x + "Czapkowie";
      SF Pl Gen => x + "Czapków";
      SF Pl Dat => x + "czapkom";
      SF Pl Acc => x + "Czapków";
      SF Pl Instr => x + "czapkami";
      SF Pl Loc => x + "czapkach";
      SF Pl Voc => x + "Czapkowie"
    };

    oper mkNTable0243: Str -> SubstForm => Str; --%
    oper mkNTable0243 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cze";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable0244: Str -> SubstForm => Str; --%
    oper mkNTable0244 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "sia";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "siów";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "siów";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable0245: Str -> SubstForm => Str; --%
    oper mkNTable0245 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ch";
      SF Sg Gen => x + "cha";
      SF Sg Dat => x + "chowi";
      SF Sg Acc => x + "cha";
      SF Sg Instr => x + "chem";
      SF Sg Loc => x + "chu";
      SF Sg Voc => x + "chu";
      SF Pl Nom => x + "si";
      SF Pl Gen => x + "chów";
      SF Pl Dat => x + "chom";
      SF Pl Acc => x + "chów";
      SF Pl Instr => x + "chami";
      SF Pl Loc => x + "chach";
      SF Pl Voc => x + "si"
    };

    oper mkNTable0246: Str -> SubstForm => Str; --%
    oper mkNTable0246 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "czeczot";
      SF Sg Gen => x + "czeczota";
      SF Sg Dat => x + "Czeczotowi";
      SF Sg Acc => x + "czeczota";
      SF Sg Instr => x + "Czeczotem";
      SF Sg Loc => x + "czeczocie";
      SF Sg Voc => x + "czeczocie";
      SF Pl Nom => x + "Czeczotowie";
      SF Pl Gen => x + "Czeczotów";
      SF Pl Dat => x + "czeczotom";
      SF Pl Acc => x + "Czeczotów";
      SF Pl Instr => x + "czeczotami";
      SF Pl Loc => x + "czeczotach";
      SF Pl Voc => x + "Czeczotowie"
    };

    oper mkNTable0247: Str -> SubstForm => Str; --%
    oper mkNTable0247 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "czerkies";
      SF Sg Gen => x + "czerkiesa";
      SF Sg Dat => x + "czerkiesowi";
      SF Sg Acc => x + "czerkiesa";
      SF Sg Instr => x + "czerkiesem";
      SF Sg Loc => x + "czerkiesie";
      SF Sg Voc => x + "czerkiesie";
      SF Pl Nom => x + "Czerkiesi";
      SF Pl Gen => x + "czerkiesów";
      SF Pl Dat => x + "czerkiesom";
      SF Pl Acc => x + "czerkiesów";
      SF Pl Instr => x + "czerkiesami";
      SF Pl Loc => x + "czerkiesach";
      SF Pl Voc => x + "Czerkiesi"
    };

    oper mkNTable0250: Str -> SubstForm => Str; --%
    oper mkNTable0250 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Czerny";
      SF Sg Gen => x + "Czernego";
      SF Sg Dat => x + "Czernemu";
      SF Sg Acc => x + "Czernego";
      SF Sg Instr => x + "Czernym";
      SF Sg Loc => x + "Czernym";
      SF Sg Voc => x + "Czerny";
      SF Pl Nom => x + "czerni";
      SF Pl Gen => x + "Czernych";
      SF Pl Dat => x + "Czernym";
      SF Pl Acc => x + "Czernych";
      SF Pl Instr => x + "Czernymi";
      SF Pl Loc => x + "Czernych";
      SF Pl Voc => x + "czerni"
    };

    oper mkNTable0251: Str -> SubstForm => Str; --%
    oper mkNTable0251 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "siek";
      SF Sg Gen => x + "śka";
      SF Sg Dat => x + "śkowi";
      SF Sg Acc => x + "śka";
      SF Sg Instr => x + "śkiem";
      SF Sg Loc => x + "śku";
      SF Sg Voc => x + "śku";
      SF Pl Nom => x + "śkowie";
      SF Pl Gen => x + "śków";
      SF Pl Dat => x + "śkom";
      SF Pl Acc => x + "śków";
      SF Pl Instr => x + "śkami";
      SF Pl Loc => x + "śkach";
      SF Pl Voc => x + "śkowie"
    };

    oper mkNTable0252: Str -> SubstForm => Str; --%
    oper mkNTable0252 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0253: Str -> SubstForm => Str; --%
    oper mkNTable0253 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Czuma";
      SF Sg Gen => x + "czumy";
      SF Sg Dat => x + "czumie";
      SF Sg Acc => x + "Czumę";
      SF Sg Instr => x + "Czumą";
      SF Sg Loc => x + "czumie";
      SF Sg Voc => x + "Czumo";
      SF Pl Nom => x + "Czumowie";
      SF Pl Gen => x + "czumów";
      SF Pl Dat => x + "czumom";
      SF Pl Acc => x + "czumów";
      SF Pl Instr => x + "czumami";
      SF Pl Loc => x + "czumach";
      SF Pl Voc => x + "Czumowie"
    };

    oper mkNTable0254: Str -> SubstForm => Str; --%
    oper mkNTable0254 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "czyż";
      SF Sg Gen => x + "czyża";
      SF Sg Dat => x + "czyżowi";
      SF Sg Acc => x + "czyża";
      SF Sg Instr => x + "czyżem";
      SF Sg Loc => x + "czyżu";
      SF Sg Voc => x + "czyżu";
      SF Pl Nom => x + "Czyżowie";
      SF Pl Gen => x + "czyżów";
      SF Pl Dat => x + "czyżom";
      SF Pl Acc => x + "czyżów";
      SF Pl Instr => x + "czyżami";
      SF Pl Loc => x + "czyżach";
      SF Pl Voc => x + "Czyżowie"
    };

    oper mkNTable0256: Str -> SubstForm => Str; --%
    oper mkNTable0256 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "daimler";
      SF Sg Gen => x + "daimlera";
      SF Sg Dat => x + "daimlerowi";
      SF Sg Acc => x + "daimlera";
      SF Sg Instr => x + "daimlerem";
      SF Sg Loc => x + "daimlerze";
      SF Sg Voc => x + "daimlerze";
      SF Pl Nom => x + "Daimlerowie";
      SF Pl Gen => x + "daimlerów";
      SF Pl Dat => x + "daimlerom";
      SF Pl Acc => x + "daimlerów";
      SF Pl Instr => x + "daimlerami";
      SF Pl Loc => x + "daimlerach";
      SF Pl Voc => x + "Daimlerowie"
    };

    oper mkNTable0258: Str -> SubstForm => Str; --%
    oper mkNTable0258 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "dali";
      SF Sg Gen => x + "Dalego";
      SF Sg Dat => x + "Dalemu";
      SF Sg Acc => x + "Dalego";
      SF Sg Instr => x + "Dalim";
      SF Sg Loc => x + "Dalim";
      SF Sg Voc => x + "dali";
      SF Pl Nom => x + "dali";
      SF Pl Gen => x + "Dalich";
      SF Pl Dat => x + "Dalim";
      SF Pl Acc => x + "Dalich";
      SF Pl Instr => x + "Dalimi";
      SF Pl Loc => x + "Dalich";
      SF Pl Voc => x + "dali"
    };

    oper mkNTable0259: Str -> SubstForm => Str; --%
    oper mkNTable0259 lexem = 
      let x = Predef.tk 12 lexem in
    table { 
      SF Sg Nom => x + "dalmatyńczyk";
      SF Sg Gen => x + "dalmatyńczyka";
      SF Sg Dat => x + "dalmatyńczykowi";
      SF Sg Acc => x + "dalmatyńczyka";
      SF Sg Instr => x + "dalmatyńczykiem";
      SF Sg Loc => x + "dalmatyńczyku";
      SF Sg Voc => x + "dalmatyńczyku";
      SF Pl Nom => x + "Dalmatyńczycy";
      SF Pl Gen => x + "dalmatyńczyków";
      SF Pl Dat => x + "dalmatyńczykom";
      SF Pl Acc => x + "dalmatyńczyków";
      SF Pl Instr => x + "dalmatyńczykami";
      SF Pl Loc => x + "dalmatyńczykach";
      SF Pl Voc => x + "Dalmatyńczycy"
    };

    oper mkNTable0260: Str -> SubstForm => Str; --%
    oper mkNTable0260 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "dalton";
      SF Sg Gen => x + "daltona";
      SF Sg Dat => x + "daltonowi";
      SF Sg Acc => x + "daltona";
      SF Sg Instr => x + "daltonem";
      SF Sg Loc => x + "daltonie";
      SF Sg Voc => x + "daltonie";
      SF Pl Nom => x + "Daltonowie";
      SF Pl Gen => x + "daltonów";
      SF Pl Dat => x + "daltonom";
      SF Pl Acc => x + "daltonów";
      SF Pl Instr => x + "daltonami";
      SF Pl Loc => x + "daltonach";
      SF Pl Voc => x + "Daltonowie"
    };

    oper mkNTable0261: Str -> SubstForm => Str; --%
    oper mkNTable0261 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "danek";
      SF Sg Gen => x + "danka";
      SF Sg Dat => x + "Dankowi";
      SF Sg Acc => x + "danka";
      SF Sg Instr => x + "dankiem";
      SF Sg Loc => x + "danku";
      SF Sg Voc => x + "danku";
      SF Pl Nom => x + "Dankowie";
      SF Pl Gen => x + "Danków";
      SF Pl Dat => x + "dankom";
      SF Pl Acc => x + "Danków";
      SF Pl Instr => x + "dankami";
      SF Pl Loc => x + "dankach";
      SF Pl Voc => x + "Dankowie"
    };

    oper mkNTable0262: Str -> SubstForm => Str; --%
    oper mkNTable0262 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "dania";
      SF Sg Gen => x + "Danii";
      SF Sg Dat => x + "Danii";
      SF Sg Acc => x + "Danię";
      SF Sg Instr => x + "danią";
      SF Sg Loc => x + "Danii";
      SF Sg Voc => x + "Danio";
      SF Pl Nom => x + "danie";
      SF Pl Gen => x + "Danii";
      SF Pl Dat => x + "daniom";
      SF Pl Acc => x + "danie";
      SF Pl Instr => x + "daniami";
      SF Pl Loc => x + "daniach";
      SF Pl Voc => x + "danie"
    };

    oper mkNTable0263: Str -> SubstForm => Str; --%
    oper mkNTable0263 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "ńca";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcu";
      SF Pl Nom => x + "ńcowie";
      SF Pl Gen => x + "ńców";
      SF Pl Dat => x + "ńcom";
      SF Pl Acc => x + "ńców";
      SF Pl Instr => x + "ńcami";
      SF Pl Loc => x + "ńcach";
      SF Pl Voc => x + "ńcowie"
    };

    oper mkNTable0264: Str -> SubstForm => Str; --%
    oper mkNTable0264 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "daniel";
      SF Sg Gen => x + "daniela";
      SF Sg Dat => x + "danielowi";
      SF Sg Acc => x + "daniela";
      SF Sg Instr => x + "danielem";
      SF Sg Loc => x + "danielu";
      SF Sg Voc => x + "danielu";
      SF Pl Nom => x + "daniele";
      SF Pl Gen => x + "Danielów";
      SF Pl Dat => x + "danielom";
      SF Pl Acc => x + "Danielów";
      SF Pl Instr => x + "danielami";
      SF Pl Loc => x + "danielach";
      SF Pl Voc => x + "daniele"
    };

    oper mkNTable0265: Str -> SubstForm => Str; --%
    oper mkNTable0265 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "daniela";
      SF Sg Gen => x + "danieli";
      SF Sg Dat => x + "danieli";
      SF Sg Acc => x + "Danielę";
      SF Sg Instr => x + "Danielą";
      SF Sg Loc => x + "danieli";
      SF Sg Voc => x + "danielu";
      SF Pl Nom => x + "daniele";
      SF Pl Gen => x + "danieli";
      SF Pl Dat => x + "danielom";
      SF Pl Acc => x + "daniele";
      SF Pl Instr => x + "danielami";
      SF Pl Loc => x + "danielach";
      SF Pl Voc => x + "daniele"
    };

    oper mkNTable0266: Str -> SubstForm => Str; --%
    oper mkNTable0266 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "danka";
      SF Sg Gen => x + "Danki";
      SF Sg Dat => x + "Dance";
      SF Sg Acc => x + "Dankę";
      SF Sg Instr => x + "Danką";
      SF Sg Loc => x + "Dance";
      SF Sg Voc => x + "danko";
      SF Pl Nom => x + "Danki";
      SF Pl Gen => x + "danek";
      SF Pl Dat => x + "dankom";
      SF Pl Acc => x + "Danki";
      SF Pl Instr => x + "dankami";
      SF Pl Loc => x + "dankach";
      SF Pl Voc => x + "Danki"
    };

    oper mkNTable0267: Str -> SubstForm => Str; --%
    oper mkNTable0267 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "daria";
      SF Sg Gen => x + "darii";
      SF Sg Dat => x + "darii";
      SF Sg Acc => x + "darię";
      SF Sg Instr => x + "darią";
      SF Sg Loc => x + "darii";
      SF Sg Voc => x + "dario";
      SF Pl Nom => x + "Darie";
      SF Pl Gen => x + "darii";
      SF Pl Dat => x + "Dariom";
      SF Pl Acc => x + "Darie";
      SF Pl Instr => x + "Dariami";
      SF Pl Loc => x + "Dariach";
      SF Pl Voc => x + "Darie"
    };

    oper mkNTable0268: Str -> SubstForm => Str; --%
    oper mkNTable0268 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Dec";
      SF Sg Gen => x + "Deca";
      SF Sg Dat => x + "Decowi";
      SF Sg Acc => x + "Deca";
      SF Sg Instr => x + "Decem";
      SF Sg Loc => x + "Decu";
      SF Sg Voc => x + "Decu";
      SF Pl Nom => x + "dece";
      SF Pl Gen => x + "Deców";
      SF Pl Dat => x + "Decom";
      SF Pl Acc => x + "Deców";
      SF Pl Instr => x + "Decami";
      SF Pl Loc => x + "Decach";
      SF Pl Voc => x + "dece"
    };

    oper mkNTable0269: Str -> SubstForm => Str; --%
    oper mkNTable0269 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "delfina";
      SF Sg Gen => x + "delfiny";
      SF Sg Dat => x + "delfinie";
      SF Sg Acc => x + "Delfinę";
      SF Sg Instr => x + "Delfiną";
      SF Sg Loc => x + "delfinie";
      SF Sg Voc => x + "Delfino";
      SF Pl Nom => x + "delfiny";
      SF Pl Gen => x + "delfin";
      SF Pl Dat => x + "delfinom";
      SF Pl Acc => x + "delfiny";
      SF Pl Instr => x + "delfinami";
      SF Pl Loc => x + "delfinach";
      SF Pl Voc => x + "delfiny"
    };

    oper mkNTable0271: Str -> SubstForm => Str; --%
    oper mkNTable0271 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0272: Str -> SubstForm => Str; --%
    oper mkNTable0272 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "ły";
      SF Sg Dat => x + "le";
      SF Sg Acc => x + "łę";
      SF Sg Instr => x + "łą";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "łowie";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "łów";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "łowie"
    };

    oper mkNTable0273: Str -> SubstForm => Str; --%
    oper mkNTable0273 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "dezyderia";
      SF Sg Gen => x + "Dezyderii";
      SF Sg Dat => x + "Dezyderii";
      SF Sg Acc => x + "Dezyderię";
      SF Sg Instr => x + "Dezyderią";
      SF Sg Loc => x + "Dezyderii";
      SF Sg Voc => x + "Dezyderio";
      SF Pl Nom => x + "Dezyderie";
      SF Pl Gen => x + "Dezyderii";
      SF Pl Dat => x + "dezyderiom";
      SF Pl Acc => x + "Dezyderie";
      SF Pl Instr => x + "dezyderiami";
      SF Pl Loc => x + "dezyderiach";
      SF Pl Voc => x + "Dezyderie"
    };

    oper mkNTable0274: Str -> SubstForm => Str; --%
    oper mkNTable0274 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Diana";
      SF Sg Gen => x + "diany";
      SF Sg Dat => x + "dianie";
      SF Sg Acc => x + "Dianę";
      SF Sg Instr => x + "Dianą";
      SF Sg Loc => x + "dianie";
      SF Sg Voc => x + "Diano";
      SF Pl Nom => x + "diany";
      SF Pl Gen => x + "dian";
      SF Pl Dat => x + "dianom";
      SF Pl Acc => x + "diany";
      SF Pl Instr => x + "dianami";
      SF Pl Loc => x + "dianach";
      SF Pl Voc => x + "diany"
    };

    oper mkNTable0276: Str -> SubstForm => Str; --%
    oper mkNTable0276 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0277: Str -> SubstForm => Str; --%
    oper mkNTable0277 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "dobosz";
      SF Sg Gen => x + "dobosza";
      SF Sg Dat => x + "doboszowi";
      SF Sg Acc => x + "dobosza";
      SF Sg Instr => x + "doboszem";
      SF Sg Loc => x + "doboszu";
      SF Sg Voc => x + "doboszu";
      SF Pl Nom => x + "Doboszowie";
      SF Pl Gen => x + "doboszów";
      SF Pl Dat => x + "doboszom";
      SF Pl Acc => x + "doboszów";
      SF Pl Instr => x + "doboszami";
      SF Pl Loc => x + "doboszach";
      SF Pl Voc => x + "Doboszowie"
    };

    oper mkNTable0278: Str -> SubstForm => Str; --%
    oper mkNTable0278 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "sta";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "sta";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => x + "stowie";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "stów";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "stowie"
    };

    oper mkNTable0279: Str -> SubstForm => Str; --%
    oper mkNTable0279 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "domek";
      SF Sg Gen => x + "Domka";
      SF Sg Dat => x + "domkowi";
      SF Sg Acc => x + "Domka";
      SF Sg Instr => x + "domkiem";
      SF Sg Loc => x + "domku";
      SF Sg Voc => x + "domku";
      SF Pl Nom => x + "Domkowie";
      SF Pl Gen => x + "domków";
      SF Pl Dat => x + "domkom";
      SF Pl Acc => x + "domków";
      SF Pl Instr => x + "domkami";
      SF Pl Loc => x + "domkach";
      SF Pl Voc => x + "Domkowie"
    };

    oper mkNTable0280: Str -> SubstForm => Str; --%
    oper mkNTable0280 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0281: Str -> SubstForm => Str; --%
    oper mkNTable0281 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Domka";
      SF Sg Gen => x + "domki";
      SF Sg Dat => x + "Domce";
      SF Sg Acc => x + "Domkę";
      SF Sg Instr => x + "Domką";
      SF Sg Loc => x + "Domce";
      SF Sg Voc => x + "Domko";
      SF Pl Nom => x + "domki";
      SF Pl Gen => x + "domek";
      SF Pl Dat => x + "domkom";
      SF Pl Acc => x + "domki";
      SF Pl Instr => x + "domkami";
      SF Pl Loc => x + "domkach";
      SF Pl Voc => x + "domki"
    };

    oper mkNTable0282: Str -> SubstForm => Str; --%
    oper mkNTable0282 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "don";
      SF Sg Gen => x + "Donu";
      SF Sg Dat => x + "donowi";
      SF Sg Acc => x + "don";
      SF Sg Instr => x + "donem";
      SF Sg Loc => x + "donie";
      SF Sg Voc => x + "donie";
      SF Pl Nom => x + "dony";
      SF Pl Gen => x + "donów";
      SF Pl Dat => x + "donom";
      SF Pl Acc => x + "dony";
      SF Pl Instr => x + "donami";
      SF Pl Loc => x + "donach";
      SF Pl Voc => x + "dony"
    };

    oper mkNTable0283: Str -> SubstForm => Str; --%
    oper mkNTable0283 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "donald";
      SF Sg Gen => x + "donalda";
      SF Sg Dat => x + "donaldowi";
      SF Sg Acc => x + "donalda";
      SF Sg Instr => x + "donaldem";
      SF Sg Loc => x + "donaldzie";
      SF Sg Voc => x + "donaldzie";
      SF Pl Nom => x + "Donaldowie";
      SF Pl Gen => x + "donaldów";
      SF Pl Dat => x + "donaldom";
      SF Pl Acc => x + "donaldów";
      SF Pl Instr => x + "donaldami";
      SF Pl Loc => x + "donaldach";
      SF Pl Voc => x + "Donaldowie"
    };

    oper mkNTable0284: Str -> SubstForm => Str; --%
    oper mkNTable0284 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "ńca";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcze";
      SF Pl Nom => x + "ńcy";
      SF Pl Gen => x + "ńców";
      SF Pl Dat => x + "ńcom";
      SF Pl Acc => x + "ńców";
      SF Pl Instr => x + "ńcami";
      SF Pl Loc => x + "ńcach";
      SF Pl Voc => x + "ńcy"
    };

    oper mkNTable0285: Str -> SubstForm => Str; --%
    oper mkNTable0285 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "douglas";
      SF Sg Gen => x + "douglasa";
      SF Sg Dat => x + "douglasowi";
      SF Sg Acc => x + "douglasa";
      SF Sg Instr => x + "douglasem";
      SF Sg Loc => x + "douglasie";
      SF Sg Voc => x + "douglasie";
      SF Pl Nom => x + "Douglasowie";
      SF Pl Gen => x + "douglasów";
      SF Pl Dat => x + "douglasom";
      SF Pl Acc => x + "douglasów";
      SF Pl Instr => x + "douglasami";
      SF Pl Loc => x + "douglasach";
      SF Pl Voc => x + "Douglasowie"
    };

    oper mkNTable0286: Str -> SubstForm => Str; --%
    oper mkNTable0286 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "down";
      SF Sg Gen => x + "downa";
      SF Sg Dat => x + "downowi";
      SF Sg Acc => x + "downa";
      SF Sg Instr => x + "downem";
      SF Sg Loc => x + "downie";
      SF Sg Voc => x + "downie";
      SF Pl Nom => x + "Downowie";
      SF Pl Gen => x + "downów";
      SF Pl Dat => x + "downom";
      SF Pl Acc => x + "downów";
      SF Pl Instr => x + "downami";
      SF Pl Loc => x + "downach";
      SF Pl Voc => x + "Downowie"
    };

    oper mkNTable0287: Str -> SubstForm => Str; --%
    oper mkNTable0287 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ga";
      SF Sg Gen => x + "gi";
      SF Sg Dat => x + "dze";
      SF Sg Acc => x + "gę";
      SF Sg Instr => x + "gą";
      SF Sg Loc => x + "dze";
      SF Sg Voc => x + "go";
      SF Pl Nom => x + "gowie";
      SF Pl Gen => x + "gów";
      SF Pl Dat => x + "gom";
      SF Pl Acc => x + "gów";
      SF Pl Instr => x + "gami";
      SF Pl Loc => x + "gach";
      SF Pl Voc => x + "gowie"
    };

    oper mkNTable0289: Str -> SubstForm => Str; --%
    oper mkNTable0289 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "drozd";
      SF Sg Gen => x + "drozda";
      SF Sg Dat => x + "drozdowi";
      SF Sg Acc => x + "drozda";
      SF Sg Instr => x + "drozdem";
      SF Sg Loc => x + "droździe";
      SF Sg Voc => x + "droździe";
      SF Pl Nom => x + "Drozdowie";
      SF Pl Gen => x + "drozdów";
      SF Pl Dat => x + "drozdom";
      SF Pl Acc => x + "drozdów";
      SF Pl Instr => x + "drozdami";
      SF Pl Loc => x + "drozdach";
      SF Pl Voc => x + "Drozdowie"
    };

    oper mkNTable0290: Str -> SubstForm => Str; --%
    oper mkNTable0290 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "dudek";
      SF Sg Gen => x + "dudka";
      SF Sg Dat => x + "dudkowi";
      SF Sg Acc => x + "dudka";
      SF Sg Instr => x + "dudkiem";
      SF Sg Loc => x + "dudku";
      SF Sg Voc => x + "dudku";
      SF Pl Nom => x + "Dudkowie";
      SF Pl Gen => x + "dudków";
      SF Pl Dat => x + "dudkom";
      SF Pl Acc => x + "dudków";
      SF Pl Instr => x + "dudkami";
      SF Pl Loc => x + "dudkach";
      SF Pl Voc => x + "Dudkowie"
    };

    oper mkNTable0294: Str -> SubstForm => Str; --%
    oper mkNTable0294 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "dzięcioł";
      SF Sg Gen => x + "dzięcioła";
      SF Sg Dat => x + "dzięciołowi";
      SF Sg Acc => x + "dzięcioła";
      SF Sg Instr => x + "dzięciołem";
      SF Sg Loc => x + "dzięciole";
      SF Sg Voc => x + "dzięciole";
      SF Pl Nom => x + "Dzięciołowie";
      SF Pl Gen => x + "dzięciołów";
      SF Pl Dat => x + "dzięciołom";
      SF Pl Acc => x + "dzięciołów";
      SF Pl Instr => x + "dzięciołami";
      SF Pl Loc => x + "dzięciołach";
      SF Pl Voc => x + "Dzięciołowie"
    };

    oper mkNTable0295: Str -> SubstForm => Str; --%
    oper mkNTable0295 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "dąbek";
      SF Sg Gen => x + "dąbka";
      SF Sg Dat => x + "dąbkowi";
      SF Sg Acc => x + "dąbka";
      SF Sg Instr => x + "dąbkiem";
      SF Sg Loc => x + "dąbku";
      SF Sg Voc => x + "dąbku";
      SF Pl Nom => x + "Dąbkowie";
      SF Pl Gen => x + "dąbków";
      SF Pl Dat => x + "dąbkom";
      SF Pl Acc => x + "dąbków";
      SF Pl Instr => x + "dąbkami";
      SF Pl Loc => x + "dąbkach";
      SF Pl Voc => x + "Dąbkowie"
    };

    oper mkNTable0296: Str -> SubstForm => Str; --%
    oper mkNTable0296 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "dębosz";
      SF Sg Gen => x + "dębosza";
      SF Sg Dat => x + "dęboszowi";
      SF Sg Acc => x + "dębosza";
      SF Sg Instr => x + "dęboszem";
      SF Sg Loc => x + "dęboszu";
      SF Sg Voc => x + "dęboszu";
      SF Pl Nom => x + "Dęboszowie";
      SF Pl Gen => x + "Dęboszów";
      SF Pl Dat => x + "dęboszom";
      SF Pl Acc => x + "Dęboszów";
      SF Pl Instr => x + "dęboszami";
      SF Pl Loc => x + "dęboszach";
      SF Pl Voc => x + "Dęboszowie"
    };

    oper mkNTable0297: Str -> SubstForm => Str; --%
    oper mkNTable0297 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "efraim";
      SF Sg Gen => x + "efraima";
      SF Sg Dat => x + "efraimowi";
      SF Sg Acc => x + "efraima";
      SF Sg Instr => x + "efraimem";
      SF Sg Loc => x + "efraimie";
      SF Sg Voc => x + "efraimie";
      SF Pl Nom => x + "Efraimowie";
      SF Pl Gen => x + "efraimów";
      SF Pl Dat => x + "efraimom";
      SF Pl Acc => x + "efraimów";
      SF Pl Instr => x + "efraimami";
      SF Pl Loc => x + "efraimach";
      SF Pl Voc => x + "Efraimowie"
    };

    oper mkNTable0298: Str -> SubstForm => Str; --%
    oper mkNTable0298 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "einstein";
      SF Sg Gen => x + "einsteina";
      SF Sg Dat => x + "einsteinowi";
      SF Sg Acc => x + "einsteina";
      SF Sg Instr => x + "einsteinem";
      SF Sg Loc => x + "einsteinie";
      SF Sg Voc => x + "einsteinie";
      SF Pl Nom => x + "Einsteinowie";
      SF Pl Gen => x + "einsteinów";
      SF Pl Dat => x + "einsteinom";
      SF Pl Acc => x + "einsteinów";
      SF Pl Instr => x + "einsteinami";
      SF Pl Loc => x + "einsteinach";
      SF Pl Voc => x + "Einsteinowie"
    };

    oper mkNTable0300: Str -> SubstForm => Str; --%
    oper mkNTable0300 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "x";
      SF Sg Gen => x + "ksa";
      SF Sg Dat => x + "ksowi";
      SF Sg Acc => x + "ksa";
      SF Sg Instr => x + "ksem";
      SF Sg Loc => x + "ksie";
      SF Sg Voc => x + "ksie";
      SF Pl Nom => x + "ksowie";
      SF Pl Gen => x + "ksów";
      SF Pl Dat => x + "ksom";
      SF Pl Acc => x + "ksów";
      SF Pl Instr => x + "ksami";
      SF Pl Loc => x + "ksach";
      SF Pl Voc => x + "ksowie"
    };

    oper mkNTable0301: Str -> SubstForm => Str; --%
    oper mkNTable0301 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Estera";
      SF Sg Gen => x + "Estery";
      SF Sg Dat => x + "Esterze";
      SF Sg Acc => x + "Esterę";
      SF Sg Instr => x + "Esterą";
      SF Sg Loc => x + "Esterze";
      SF Sg Voc => x + "Estero";
      SF Pl Nom => x + "Estery";
      SF Pl Gen => x + "ester";
      SF Pl Dat => x + "Esterom";
      SF Pl Acc => x + "Estery";
      SF Pl Instr => x + "Esterami";
      SF Pl Loc => x + "Esterach";
      SF Pl Voc => x + "Estery"
    };

    oper mkNTable0302: Str -> SubstForm => Str; --%
    oper mkNTable0302 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "tu";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "t";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable0303: Str -> SubstForm => Str; --%
    oper mkNTable0303 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Europa";
      SF Sg Gen => x + "europy";
      SF Sg Dat => x + "europie";
      SF Sg Acc => x + "Europę";
      SF Sg Instr => x + "Europą";
      SF Sg Loc => x + "europie";
      SF Sg Voc => x + "Europo";
      SF Pl Nom => x + "europy";
      SF Pl Gen => x + "europ";
      SF Pl Dat => x + "europom";
      SF Pl Acc => x + "europy";
      SF Pl Instr => x + "europami";
      SF Pl Loc => x + "europach";
      SF Pl Voc => x + "europy"
    };

    oper mkNTable0304: Str -> SubstForm => Str; --%
    oper mkNTable0304 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cia";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "cię";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ć";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable0305: Str -> SubstForm => Str; --%
    oper mkNTable0305 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable0306: Str -> SubstForm => Str; --%
    oper mkNTable0306 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "fabian";
      SF Sg Gen => x + "Fabiana";
      SF Sg Dat => x + "Fabianowi";
      SF Sg Acc => x + "Fabiana";
      SF Sg Instr => x + "Fabianem";
      SF Sg Loc => x + "fabianie";
      SF Sg Voc => x + "fabianie";
      SF Pl Nom => x + "Fabianowie";
      SF Pl Gen => x + "fabianów";
      SF Pl Dat => x + "fabianom";
      SF Pl Acc => x + "fabianów";
      SF Pl Instr => x + "fabianami";
      SF Pl Loc => x + "fabianach";
      SF Pl Voc => x + "Fabianowie"
    };

    oper mkNTable0307: Str -> SubstForm => Str; --%
    oper mkNTable0307 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Falk";
      SF Sg Gen => x + "falka";
      SF Sg Dat => x + "Falkowi";
      SF Sg Acc => x + "falka";
      SF Sg Instr => x + "Falkiem";
      SF Sg Loc => x + "Falku";
      SF Sg Voc => x + "Falku";
      SF Pl Nom => x + "Falkowie";
      SF Pl Gen => x + "Falków";
      SF Pl Dat => x + "falkom";
      SF Pl Acc => x + "Falków";
      SF Pl Instr => x + "falkami";
      SF Pl Loc => x + "falkach";
      SF Pl Voc => x + "Falkowie"
    };

    oper mkNTable0309: Str -> SubstForm => Str; --%
    oper mkNTable0309 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "fałat";
      SF Sg Gen => x + "fałata";
      SF Sg Dat => x + "fałatowi";
      SF Sg Acc => x + "fałata";
      SF Sg Instr => x + "fałatem";
      SF Sg Loc => x + "fałacie";
      SF Sg Voc => x + "fałacie";
      SF Pl Nom => x + "Fałatowie";
      SF Pl Gen => x + "fałatów";
      SF Pl Dat => x + "fałatom";
      SF Pl Acc => x + "fałatów";
      SF Pl Instr => x + "fałatami";
      SF Pl Loc => x + "fałatach";
      SF Pl Voc => x + "Fałatowie"
    };

    oper mkNTable0310: Str -> SubstForm => Str; --%
    oper mkNTable0310 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Felicjan";
      SF Sg Gen => x + "Felicjana";
      SF Sg Dat => x + "Felicjanowi";
      SF Sg Acc => x + "Felicjana";
      SF Sg Instr => x + "Felicjanem";
      SF Sg Loc => x + "felicjanie";
      SF Sg Voc => x + "felicjanie";
      SF Pl Nom => x + "Felicjanowie";
      SF Pl Gen => x + "felicjanów";
      SF Pl Dat => x + "felicjanom";
      SF Pl Acc => x + "felicjanów";
      SF Pl Instr => x + "felicjanami";
      SF Pl Loc => x + "felicjanach";
      SF Pl Voc => x + "Felicjanowie"
    };

    oper mkNTable0311: Str -> SubstForm => Str; --%
    oper mkNTable0311 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "figura";
      SF Sg Gen => x + "figury";
      SF Sg Dat => x + "figurze";
      SF Sg Acc => x + "figurę";
      SF Sg Instr => x + "figurą";
      SF Sg Loc => x + "figurze";
      SF Sg Voc => x + "figuro";
      SF Pl Nom => x + "Figurowie";
      SF Pl Gen => x + "Figurów";
      SF Pl Dat => x + "figurom";
      SF Pl Acc => x + "Figurów";
      SF Pl Instr => x + "figurami";
      SF Pl Loc => x + "figurach";
      SF Pl Voc => x + "Figurowie"
    };

    oper mkNTable0312: Str -> SubstForm => Str; --%
    oper mkNTable0312 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "fil";
      SF Sg Gen => x + "fila";
      SF Sg Dat => x + "filowi";
      SF Sg Acc => x + "fila";
      SF Sg Instr => x + "filem";
      SF Sg Loc => x + "filu";
      SF Sg Voc => x + "filu";
      SF Pl Nom => x + "Filowie";
      SF Pl Gen => x + "filów";
      SF Pl Dat => x + "filom";
      SF Pl Acc => x + "filów";
      SF Pl Instr => x + "filami";
      SF Pl Loc => x + "filach";
      SF Pl Voc => x + "Filowie"
    };

    oper mkNTable0313: Str -> SubstForm => Str; --%
    oper mkNTable0313 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "filip";
      SF Sg Gen => x + "filipa";
      SF Sg Dat => x + "filipowi";
      SF Sg Acc => x + "filipa";
      SF Sg Instr => x + "filipem";
      SF Sg Loc => x + "filipie";
      SF Sg Voc => x + "filipie";
      SF Pl Nom => x + "Filipowie";
      SF Pl Gen => x + "filipów";
      SF Pl Dat => x + "filipom";
      SF Pl Acc => x + "filipów";
      SF Pl Instr => x + "filipami";
      SF Pl Loc => x + "filipach";
      SF Pl Voc => x + "Filipowie"
    };

    oper mkNTable0314: Str -> SubstForm => Str; --%
    oper mkNTable0314 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "filipa";
      SF Sg Gen => x + "filipy";
      SF Sg Dat => x + "filipie";
      SF Sg Acc => x + "Filipę";
      SF Sg Instr => x + "Filipą";
      SF Sg Loc => x + "filipie";
      SF Sg Voc => x + "Filipo";
      SF Pl Nom => x + "filipy";
      SF Pl Gen => x + "filip";
      SF Pl Dat => x + "filipom";
      SF Pl Acc => x + "filipy";
      SF Pl Instr => x + "filipami";
      SF Pl Loc => x + "filipach";
      SF Pl Voc => x + "filipy"
    };

    oper mkNTable0315: Str -> SubstForm => Str; --%
    oper mkNTable0315 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "filipina";
      SF Sg Gen => x + "filipiny";
      SF Sg Dat => x + "filipinie";
      SF Sg Acc => x + "Filipinę";
      SF Sg Instr => x + "Filipiną";
      SF Sg Loc => x + "filipinie";
      SF Sg Voc => x + "Filipino";
      SF Pl Nom => x + "filipiny";
      SF Pl Gen => x + "filipin";
      SF Pl Dat => x + "filipinom";
      SF Pl Acc => x + "filipiny";
      SF Pl Instr => x + "filipinami";
      SF Pl Loc => x + "filipinach";
      SF Pl Voc => x + "filipiny"
    };

    oper mkNTable0316: Str -> SubstForm => Str; --%
    oper mkNTable0316 lexem = 
      let x = Predef.tk 11 lexem in
    table { 
      SF Sg Nom => x + "filipińczyk";
      SF Sg Gen => x + "filipińczyka";
      SF Sg Dat => x + "filipińczykowi";
      SF Sg Acc => x + "filipińczyka";
      SF Sg Instr => x + "filipińczykiem";
      SF Sg Loc => x + "filipińczyku";
      SF Sg Voc => x + "filipińczyku";
      SF Pl Nom => x + "Filipińczycy";
      SF Pl Gen => x + "filipińczyków";
      SF Pl Dat => x + "filipińczykom";
      SF Pl Acc => x + "filipińczyków";
      SF Pl Instr => x + "filipińczykami";
      SF Pl Loc => x + "filipińczykach";
      SF Pl Voc => x + "Filipińczycy"
    };

    oper mkNTable0318: Str -> SubstForm => Str; --%
    oper mkNTable0318 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "fin";
      SF Sg Gen => x + "fina";
      SF Sg Dat => x + "finowi";
      SF Sg Acc => x + "fina";
      SF Sg Instr => x + "finem";
      SF Sg Loc => x + "finie";
      SF Sg Voc => x + "finie";
      SF Pl Nom => x + "Finowie";
      SF Pl Gen => x + "finów";
      SF Pl Dat => x + "finom";
      SF Pl Acc => x + "finów";
      SF Pl Instr => x + "finami";
      SF Pl Loc => x + "finach";
      SF Pl Voc => x + "Finowie"
    };

    oper mkNTable0319: Str -> SubstForm => Str; --%
    oper mkNTable0319 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "firko";
      SF Sg Gen => x + "firki";
      SF Sg Dat => x + "firce";
      SF Sg Acc => x + "firkę";
      SF Sg Instr => x + "firką";
      SF Sg Loc => x + "firce";
      SF Sg Voc => x + "firko";
      SF Pl Nom => x + "Firkowie";
      SF Pl Gen => x + "Firków";
      SF Pl Dat => x + "firkom";
      SF Pl Acc => x + "Firków";
      SF Pl Instr => x + "firkami";
      SF Pl Loc => x + "firkach";
      SF Pl Voc => x + "Firkowie"
    };

    oper mkNTable0320: Str -> SubstForm => Str; --%
    oper mkNTable0320 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "firlej";
      SF Sg Gen => x + "firleja";
      SF Sg Dat => x + "firlejowi";
      SF Sg Acc => x + "firleja";
      SF Sg Instr => x + "firlejem";
      SF Sg Loc => x + "firleju";
      SF Sg Voc => x + "firleju";
      SF Pl Nom => x + "Firlejowie";
      SF Pl Gen => x + "firlejów";
      SF Pl Dat => x + "firlejom";
      SF Pl Acc => x + "firlejów";
      SF Pl Instr => x + "firlejami";
      SF Pl Loc => x + "firlejach";
      SF Pl Voc => x + "Firlejowie"
    };

    oper mkNTable0321: Str -> SubstForm => Str; --%
    oper mkNTable0321 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "flamand";
      SF Sg Gen => x + "flamanda";
      SF Sg Dat => x + "flamandowi";
      SF Sg Acc => x + "flamanda";
      SF Sg Instr => x + "flamandem";
      SF Sg Loc => x + "flamandzie";
      SF Sg Voc => x + "flamandzie";
      SF Pl Nom => x + "Flamandowie";
      SF Pl Gen => x + "flamandów";
      SF Pl Dat => x + "flamandom";
      SF Pl Acc => x + "flamandów";
      SF Pl Instr => x + "flamandami";
      SF Pl Loc => x + "flamandach";
      SF Pl Voc => x + "Flamandowie"
    };

    oper mkNTable0322: Str -> SubstForm => Str; --%
    oper mkNTable0322 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ford";
      SF Sg Gen => x + "forda";
      SF Sg Dat => x + "fordowi";
      SF Sg Acc => x + "forda";
      SF Sg Instr => x + "fordem";
      SF Sg Loc => x + "fordzie";
      SF Sg Voc => x + "fordzie";
      SF Pl Nom => x + "Fordowie";
      SF Pl Gen => x + "fordów";
      SF Pl Dat => x + "fordom";
      SF Pl Acc => x + "fordów";
      SF Pl Instr => x + "fordami";
      SF Pl Loc => x + "fordach";
      SF Pl Voc => x + "Fordowie"
    };

    oper mkNTable0323: Str -> SubstForm => Str; --%
    oper mkNTable0323 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "th";
      SF Sg Gen => x + "tha";
      SF Sg Dat => x + "thowi";
      SF Sg Acc => x + "tha";
      SF Sg Instr => x + "them";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "thowie";
      SF Pl Gen => x + "thów";
      SF Pl Dat => x + "thom";
      SF Pl Acc => x + "thów";
      SF Pl Instr => x + "thami";
      SF Pl Loc => x + "thach";
      SF Pl Voc => x + "thowie"
    };

    oper mkNTable0324: Str -> SubstForm => Str; --%
    oper mkNTable0324 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "fortunata";
      SF Sg Gen => x + "fortunaty";
      SF Sg Dat => x + "fortunacie";
      SF Sg Acc => x + "Fortunatę";
      SF Sg Instr => x + "Fortunatą";
      SF Sg Loc => x + "fortunacie";
      SF Sg Voc => x + "Fortunato";
      SF Pl Nom => x + "fortunaty";
      SF Pl Gen => x + "fortunat";
      SF Pl Dat => x + "fortunatom";
      SF Pl Acc => x + "fortunaty";
      SF Pl Instr => x + "fortunatami";
      SF Pl Loc => x + "fortunatach";
      SF Pl Voc => x + "fortunaty"
    };

    oper mkNTable0325: Str -> SubstForm => Str; --%
    oper mkNTable0325 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "co";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "co";
      SF Pl Nom => x + "cowie";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cowie"
    };

    oper mkNTable0326: Str -> SubstForm => Str; --%
    oper mkNTable0326 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "francuz";
      SF Sg Gen => x + "francuza";
      SF Sg Dat => x + "francuzowi";
      SF Sg Acc => x + "francuza";
      SF Sg Instr => x + "francuzem";
      SF Sg Loc => x + "francuzie";
      SF Sg Voc => x + "francuzie";
      SF Pl Nom => x + "Francuzi";
      SF Pl Gen => x + "francuzów";
      SF Pl Dat => x + "francuzom";
      SF Pl Acc => x + "francuzów";
      SF Pl Instr => x + "francuzami";
      SF Pl Loc => x + "francuzach";
      SF Pl Voc => x + "Francuzi"
    };

    oper mkNTable0327: Str -> SubstForm => Str; --%
    oper mkNTable0327 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Franek";
      SF Sg Gen => x + "franka";
      SF Sg Dat => x + "frankowi";
      SF Sg Acc => x + "franka";
      SF Sg Instr => x + "frankiem";
      SF Sg Loc => x + "franku";
      SF Sg Voc => x + "franku";
      SF Pl Nom => x + "Frankowie";
      SF Pl Gen => x + "franków";
      SF Pl Dat => x + "frankom";
      SF Pl Acc => x + "franków";
      SF Pl Instr => x + "frankami";
      SF Pl Loc => x + "frankach";
      SF Pl Voc => x + "Frankowie"
    };

    oper mkNTable0328: Str -> SubstForm => Str; --%
    oper mkNTable0328 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "frank";
      SF Sg Gen => x + "franka";
      SF Sg Dat => x + "frankowi";
      SF Sg Acc => x + "franka";
      SF Sg Instr => x + "frankiem";
      SF Sg Loc => x + "franku";
      SF Sg Voc => x + "franku";
      SF Pl Nom => x + "Frankowie";
      SF Pl Gen => x + "franków";
      SF Pl Dat => x + "frankom";
      SF Pl Acc => x + "franków";
      SF Pl Instr => x + "frankami";
      SF Pl Loc => x + "frankach";
      SF Pl Voc => x + "Frankowie"
    };

    oper mkNTable0329: Str -> SubstForm => Str; --%
    oper mkNTable0329 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "franklin";
      SF Sg Gen => x + "franklina";
      SF Sg Dat => x + "franklinowi";
      SF Sg Acc => x + "franklina";
      SF Sg Instr => x + "franklinem";
      SF Sg Loc => x + "franklinie";
      SF Sg Voc => x + "franklinie";
      SF Pl Nom => x + "Franklinowie";
      SF Pl Gen => x + "franklinów";
      SF Pl Dat => x + "franklinom";
      SF Pl Acc => x + "franklinów";
      SF Pl Instr => x + "franklinami";
      SF Pl Loc => x + "franklinach";
      SF Pl Voc => x + "Franklinowie"
    };

    oper mkNTable0330: Str -> SubstForm => Str; --%
    oper mkNTable0330 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ze";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0331: Str -> SubstForm => Str; --%
    oper mkNTable0331 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "fryz";
      SF Sg Gen => x + "fryza";
      SF Sg Dat => x + "fryzowi";
      SF Sg Acc => x + "fryza";
      SF Sg Instr => x + "fryzem";
      SF Sg Loc => x + "fryzie";
      SF Sg Voc => x + "fryzie";
      SF Pl Nom => x + "Fryzowie";
      SF Pl Gen => x + "fryzów";
      SF Pl Dat => x + "fryzom";
      SF Pl Acc => x + "fryzów";
      SF Pl Instr => x + "fryzami";
      SF Pl Loc => x + "fryzach";
      SF Pl Voc => x + "Fryzowie"
    };

    oper mkNTable0332: Str -> SubstForm => Str; --%
    oper mkNTable0332 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ja";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ję";
      SF Sg Instr => x + "ją";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "jo";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "j";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "je";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable0333: Str -> SubstForm => Str; --%
    oper mkNTable0333 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "gajda";
      SF Sg Gen => x + "gajdy";
      SF Sg Dat => x + "gajdzie";
      SF Sg Acc => x + "gajdę";
      SF Sg Instr => x + "gajdą";
      SF Sg Loc => x + "gajdzie";
      SF Sg Voc => x + "gajdo";
      SF Pl Nom => x + "Gajdowie";
      SF Pl Gen => x + "Gajdów";
      SF Pl Dat => x + "gajdom";
      SF Pl Acc => x + "Gajdów";
      SF Pl Instr => x + "gajdami";
      SF Pl Loc => x + "gajdach";
      SF Pl Voc => x + "Gajdowie"
    };

    oper mkNTable0334: Str -> SubstForm => Str; --%
    oper mkNTable0334 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "gama";
      SF Sg Gen => x + "gamy";
      SF Sg Dat => x + "gamie";
      SF Sg Acc => x + "gamę";
      SF Sg Instr => x + "gamą";
      SF Sg Loc => x + "gamie";
      SF Sg Voc => x + "gamo";
      SF Pl Nom => x + "Gamowie";
      SF Pl Gen => x + "Gamów";
      SF Pl Dat => x + "gamom";
      SF Pl Acc => x + "Gamów";
      SF Pl Instr => x + "gamami";
      SF Pl Loc => x + "gamach";
      SF Pl Voc => x + "Gamowie"
    };

    oper mkNTable0335: Str -> SubstForm => Str; --%
    oper mkNTable0335 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0337: Str -> SubstForm => Str; --%
    oper mkNTable0337 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + ""
    };

    oper mkNTable0338: Str -> SubstForm => Str; --%
    oper mkNTable0338 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "łowie";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "łów";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "łowie"
    };

    oper mkNTable0339: Str -> SubstForm => Str; --%
    oper mkNTable0339 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "gawron";
      SF Sg Gen => x + "gawrona";
      SF Sg Dat => x + "gawronowi";
      SF Sg Acc => x + "gawrona";
      SF Sg Instr => x + "gawronem";
      SF Sg Loc => x + "gawronie";
      SF Sg Voc => x + "gawronie";
      SF Pl Nom => x + "Gawronowie";
      SF Pl Gen => x + "gawronów";
      SF Pl Dat => x + "gawronom";
      SF Pl Acc => x + "gawronów";
      SF Pl Instr => x + "gawronami";
      SF Pl Loc => x + "gawronach";
      SF Pl Voc => x + "Gawronowie"
    };

    oper mkNTable0340: Str -> SubstForm => Str; --%
    oper mkNTable0340 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Genia";
      SF Sg Gen => x + "Geni";
      SF Sg Dat => x + "Geni";
      SF Sg Acc => x + "Genię";
      SF Sg Instr => x + "Genią";
      SF Sg Loc => x + "Geni";
      SF Sg Voc => x + "Geniu";
      SF Pl Nom => x + "genie";
      SF Pl Gen => x + "Geń";
      SF Pl Dat => x + "Geniom";
      SF Pl Acc => x + "genie";
      SF Pl Instr => x + "Geniami";
      SF Pl Loc => x + "Geniach";
      SF Pl Voc => x + "genie"
    };

    oper mkNTable0341: Str -> SubstForm => Str; --%
    oper mkNTable0341 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0342: Str -> SubstForm => Str; --%
    oper mkNTable0342 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "ia";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "iowie";
      SF Pl Gen => x + "iów";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "iów";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "iowie"
    };

    oper mkNTable0343: Str -> SubstForm => Str; --%
    oper mkNTable0343 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "gierek";
      SF Sg Gen => x + "gierka";
      SF Sg Dat => x + "Gierkowi";
      SF Sg Acc => x + "gierka";
      SF Sg Instr => x + "Gierkiem";
      SF Sg Loc => x + "Gierku";
      SF Sg Voc => x + "Gierku";
      SF Pl Nom => x + "Gierkowie";
      SF Pl Gen => x + "Gierków";
      SF Pl Dat => x + "gierkom";
      SF Pl Acc => x + "Gierków";
      SF Pl Instr => x + "gierkami";
      SF Pl Loc => x + "gierkach";
      SF Pl Voc => x + "Gierkowie"
    };

    oper mkNTable0344: Str -> SubstForm => Str; --%
    oper mkNTable0344 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "giewont";
      SF Sg Gen => x + "Giewontu";
      SF Sg Dat => x + "giewontowi";
      SF Sg Acc => x + "giewont";
      SF Sg Instr => x + "giewontem";
      SF Sg Loc => x + "giewoncie";
      SF Sg Voc => x + "giewoncie";
      SF Pl Nom => x + "giewonty";
      SF Pl Gen => x + "giewontów";
      SF Pl Dat => x + "giewontom";
      SF Pl Acc => x + "giewonty";
      SF Pl Instr => x + "giewontami";
      SF Pl Loc => x + "giewontach";
      SF Pl Voc => x + "giewonty"
    };

    oper mkNTable0345: Str -> SubstForm => Str; --%
    oper mkNTable0345 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "gilbert";
      SF Sg Gen => x + "gilberta";
      SF Sg Dat => x + "gilbertowi";
      SF Sg Acc => x + "gilberta";
      SF Sg Instr => x + "gilbertem";
      SF Sg Loc => x + "gilbercie";
      SF Sg Voc => x + "gilbercie";
      SF Pl Nom => x + "Gilbertowie";
      SF Pl Gen => x + "gilbertów";
      SF Pl Dat => x + "gilbertom";
      SF Pl Acc => x + "gilbertów";
      SF Pl Instr => x + "gilbertami";
      SF Pl Loc => x + "gilbertach";
      SF Pl Voc => x + "Gilbertowie"
    };

    oper mkNTable0346: Str -> SubstForm => Str; --%
    oper mkNTable0346 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0349: Str -> SubstForm => Str; --%
    oper mkNTable0349 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0350: Str -> SubstForm => Str; --%
    oper mkNTable0350 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0351: Str -> SubstForm => Str; --%
    oper mkNTable0351 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "golec";
      SF Sg Gen => x + "golca";
      SF Sg Dat => x + "golcowi";
      SF Sg Acc => x + "golca";
      SF Sg Instr => x + "golcem";
      SF Sg Loc => x + "golcu";
      SF Sg Voc => x + "golcu";
      SF Pl Nom => x + "Golcowie";
      SF Pl Gen => x + "golców";
      SF Pl Dat => x + "golcom";
      SF Pl Acc => x + "golców";
      SF Pl Instr => x + "golcami";
      SF Pl Loc => x + "golcach";
      SF Pl Voc => x + "Golcowie"
    };

    oper mkNTable0352: Str -> SubstForm => Str; --%
    oper mkNTable0352 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "kowie";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ków";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "kowie"
    };

    oper mkNTable0353: Str -> SubstForm => Str; --%
    oper mkNTable0353 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "gomółka";
      SF Sg Gen => x + "gomółki";
      SF Sg Dat => x + "gomółce";
      SF Sg Acc => x + "gomółkę";
      SF Sg Instr => x + "gomółką";
      SF Sg Loc => x + "gomółce";
      SF Sg Voc => x + "gomółko";
      SF Pl Nom => x + "Gomółkowie";
      SF Pl Gen => x + "Gomółków";
      SF Pl Dat => x + "gomółkom";
      SF Pl Acc => x + "Gomółków";
      SF Pl Instr => x + "gomółkami";
      SF Pl Loc => x + "gomółkach";
      SF Pl Voc => x + "Gomółkowie"
    };

    oper mkNTable0355: Str -> SubstForm => Str; --%
    oper mkNTable0355 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "gordon";
      SF Sg Gen => x + "gordona";
      SF Sg Dat => x + "gordonowi";
      SF Sg Acc => x + "gordona";
      SF Sg Instr => x + "gordonem";
      SF Sg Loc => x + "gordonie";
      SF Sg Voc => x + "gordonie";
      SF Pl Nom => x + "Gordonowie";
      SF Pl Gen => x + "gordonów";
      SF Pl Dat => x + "gordonom";
      SF Pl Acc => x + "gordonów";
      SF Pl Instr => x + "gordonami";
      SF Pl Loc => x + "gordonach";
      SF Pl Voc => x + "Gordonowie"
    };

    oper mkNTable0356: Str -> SubstForm => Str; --%
    oper mkNTable0356 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ya";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "yę";
      SF Sg Instr => x + "yą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "yo";
      SF Pl Nom => x + "yowie";
      SF Pl Gen => x + "yów";
      SF Pl Dat => x + "yom";
      SF Pl Acc => x + "yów";
      SF Pl Instr => x + "yami";
      SF Pl Loc => x + "yach";
      SF Pl Voc => x + "yowie"
    };

    oper mkNTable0357: Str -> SubstForm => Str; --%
    oper mkNTable0357 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "sia";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "ś";
      SF Pl Nom => x + "siowie";
      SF Pl Gen => x + "siów";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "siów";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "siowie"
    };

    oper mkNTable0358: Str -> SubstForm => Str; --%
    oper mkNTable0358 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "gołota";
      SF Sg Gen => x + "gołoty";
      SF Sg Dat => x + "gołocie";
      SF Sg Acc => x + "gołotę";
      SF Sg Instr => x + "gołotą";
      SF Sg Loc => x + "gołocie";
      SF Sg Voc => x + "gołoto";
      SF Pl Nom => x + "Gołotowie";
      SF Pl Gen => x + "gołotów";
      SF Pl Dat => x + "gołotom";
      SF Pl Acc => x + "gołotów";
      SF Pl Instr => x + "gołotami";
      SF Pl Loc => x + "gołotach";
      SF Pl Voc => x + "Gołotowie"
    };

    oper mkNTable0359: Str -> SubstForm => Str; --%
    oper mkNTable0359 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "gołąb";
      SF Sg Gen => x + "gołębia";
      SF Sg Dat => x + "gołębiowi";
      SF Sg Acc => x + "gołębia";
      SF Sg Instr => x + "gołębiem";
      SF Sg Loc => x + "gołębiu";
      SF Sg Voc => x + "gołębiu";
      SF Pl Nom => x + "Gołębiowie";
      SF Pl Gen => x + "Gołębiów";
      SF Pl Dat => x + "gołębiom";
      SF Pl Acc => x + "Gołębiów";
      SF Pl Instr => x + "gołębiami";
      SF Pl Loc => x + "gołębiach";
      SF Pl Voc => x + "Gołębiowie"
    };

    oper mkNTable0360: Str -> SubstForm => Str; --%
    oper mkNTable0360 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ębia";
      SF Sg Dat => x + "ębiowi";
      SF Sg Acc => x + "ąb";
      SF Sg Instr => x + "ębiem";
      SF Sg Loc => x + "ębiu";
      SF Sg Voc => x + "ębiu";
      SF Pl Nom => x + "ębie";
      SF Pl Gen => x + "ębi";
      SF Pl Dat => x + "ębiom";
      SF Pl Acc => x + "ębie";
      SF Pl Instr => x + "ębiami";
      SF Pl Loc => x + "ębiach";
      SF Pl Voc => x + "ębie"
    };

    oper mkNTable0363: Str -> SubstForm => Str; --%
    oper mkNTable0363 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "gracz";
      SF Sg Gen => x + "gracza";
      SF Sg Dat => x + "graczowi";
      SF Sg Acc => x + "gracza";
      SF Sg Instr => x + "graczem";
      SF Sg Loc => x + "graczu";
      SF Sg Voc => x + "graczu";
      SF Pl Nom => x + "Graczowie";
      SF Pl Gen => x + "graczów";
      SF Pl Dat => x + "graczom";
      SF Pl Acc => x + "graczów";
      SF Pl Instr => x + "graczami";
      SF Pl Loc => x + "graczach";
      SF Pl Voc => x + "Graczowie"
    };

    oper mkNTable0364: Str -> SubstForm => Str; --%
    oper mkNTable0364 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "graham";
      SF Sg Gen => x + "grahama";
      SF Sg Dat => x + "grahamowi";
      SF Sg Acc => x + "grahama";
      SF Sg Instr => x + "grahamem";
      SF Sg Loc => x + "grahamie";
      SF Sg Voc => x + "grahamie";
      SF Pl Nom => x + "Grahamowie";
      SF Pl Gen => x + "grahamów";
      SF Pl Dat => x + "grahamom";
      SF Pl Acc => x + "grahamów";
      SF Pl Instr => x + "grahamami";
      SF Pl Loc => x + "grahamach";
      SF Pl Voc => x + "Grahamowie"
    };

    oper mkNTable0365: Str -> SubstForm => Str; --%
    oper mkNTable0365 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "grant";
      SF Sg Gen => x + "Granta";
      SF Sg Dat => x + "grantowi";
      SF Sg Acc => x + "Granta";
      SF Sg Instr => x + "grantem";
      SF Sg Loc => x + "grancie";
      SF Sg Voc => x + "grancie";
      SF Pl Nom => x + "Grantowie";
      SF Pl Gen => x + "grantów";
      SF Pl Dat => x + "grantom";
      SF Pl Acc => x + "grantów";
      SF Pl Instr => x + "grantami";
      SF Pl Loc => x + "grantach";
      SF Pl Voc => x + "Grantowie"
    };

    oper mkNTable0366: Str -> SubstForm => Str; --%
    oper mkNTable0366 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ta";
      SF Sg Gen => x + "ty";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "tę";
      SF Sg Instr => x + "tą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable0367: Str -> SubstForm => Str; --%
    oper mkNTable0367 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "th";
      SF Sg Gen => x + "tha";
      SF Sg Dat => x + "thowi";
      SF Sg Acc => x + "tha";
      SF Sg Instr => x + "them";
      SF Sg Loc => x + "sie";
      SF Sg Voc => x + "sie";
      SF Pl Nom => x + "thowie";
      SF Pl Gen => x + "thów";
      SF Pl Dat => x + "thom";
      SF Pl Acc => x + "thów";
      SF Pl Instr => x + "thami";
      SF Pl Loc => x + "thach";
      SF Pl Voc => x + "thowie"
    };

    oper mkNTable0369: Str -> SubstForm => Str; --%
    oper mkNTable0369 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0370: Str -> SubstForm => Str; --%
    oper mkNTable0370 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "grot";
      SF Sg Gen => x + "grota";
      SF Sg Dat => x + "grotowi";
      SF Sg Acc => x + "grota";
      SF Sg Instr => x + "grotem";
      SF Sg Loc => x + "grocie";
      SF Sg Voc => x + "grocie";
      SF Pl Nom => x + "Grotowie";
      SF Pl Gen => x + "grotów";
      SF Pl Dat => x + "grotom";
      SF Pl Acc => x + "grotów";
      SF Pl Instr => x + "grotami";
      SF Pl Loc => x + "grotach";
      SF Pl Voc => x + "Grotowie"
    };

    oper mkNTable0371: Str -> SubstForm => Str; --%
    oper mkNTable0371 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "grudzień";
      SF Sg Gen => x + "grudnia";
      SF Sg Dat => x + "grudniowi";
      SF Sg Acc => x + "grudnia";
      SF Sg Instr => x + "grudniem";
      SF Sg Loc => x + "grudniu";
      SF Sg Voc => x + "grudniu";
      SF Pl Nom => x + "Grudniowie";
      SF Pl Gen => x + "grudniów";
      SF Pl Dat => x + "grudniom";
      SF Pl Acc => x + "grudniów";
      SF Pl Instr => x + "grudniami";
      SF Pl Loc => x + "grudniach";
      SF Pl Voc => x + "Grudniowie"
    };

    oper mkNTable0372: Str -> SubstForm => Str; --%
    oper mkNTable0372 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "grunwald";
      SF Sg Gen => x + "Grunwaldu";
      SF Sg Dat => x + "grunwaldowi";
      SF Sg Acc => x + "grunwald";
      SF Sg Instr => x + "grunwaldem";
      SF Sg Loc => x + "grunwaldzie";
      SF Sg Voc => x + "grunwaldzie";
      SF Pl Nom => x + "grunwaldy";
      SF Pl Gen => x + "grunwaldów";
      SF Pl Dat => x + "grunwaldom";
      SF Pl Acc => x + "grunwaldy";
      SF Pl Instr => x + "grunwaldami";
      SF Pl Loc => x + "grunwaldach";
      SF Pl Voc => x + "grunwaldy"
    };

    oper mkNTable0373: Str -> SubstForm => Str; --%
    oper mkNTable0373 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "grusza";
      SF Sg Gen => x + "gruszy";
      SF Sg Dat => x + "gruszy";
      SF Sg Acc => x + "gruszę";
      SF Sg Instr => x + "gruszą";
      SF Sg Loc => x + "gruszy";
      SF Sg Voc => x + "gruszo";
      SF Pl Nom => x + "Gruszowie";
      SF Pl Gen => x + "Gruszów";
      SF Pl Dat => x + "gruszom";
      SF Pl Acc => x + "Gruszów";
      SF Pl Instr => x + "gruszami";
      SF Pl Loc => x + "gruszach";
      SF Pl Voc => x + "Gruszowie"
    };

    oper mkNTable0374: Str -> SubstForm => Str; --%
    oper mkNTable0374 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "gruszka";
      SF Sg Gen => x + "gruszki";
      SF Sg Dat => x + "gruszce";
      SF Sg Acc => x + "gruszkę";
      SF Sg Instr => x + "gruszką";
      SF Sg Loc => x + "gruszce";
      SF Sg Voc => x + "gruszko";
      SF Pl Nom => x + "Gruszkowie";
      SF Pl Gen => x + "Gruszków";
      SF Pl Dat => x + "gruszkom";
      SF Pl Acc => x + "Gruszków";
      SF Pl Instr => x + "gruszkami";
      SF Pl Loc => x + "gruszkach";
      SF Pl Voc => x + "Gruszkowie"
    };

    oper mkNTable0375: Str -> SubstForm => Str; --%
    oper mkNTable0375 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "grzyb";
      SF Sg Gen => x + "grzyba";
      SF Sg Dat => x + "grzybowi";
      SF Sg Acc => x + "grzyba";
      SF Sg Instr => x + "grzybem";
      SF Sg Loc => x + "grzybie";
      SF Sg Voc => x + "grzybie";
      SF Pl Nom => x + "Grzybowie";
      SF Pl Gen => x + "grzybów";
      SF Pl Dat => x + "grzybom";
      SF Pl Acc => x + "grzybów";
      SF Pl Instr => x + "grzybami";
      SF Pl Loc => x + "grzybach";
      SF Pl Voc => x + "Grzybowie"
    };

    oper mkNTable0377: Str -> SubstForm => Str; --%
    oper mkNTable0377 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "guinness";
      SF Sg Gen => x + "guinnessa";
      SF Sg Dat => x + "guinnessowi";
      SF Sg Acc => x + "guinnessa";
      SF Sg Instr => x + "guinnessem";
      SF Sg Loc => x + "guinnessie";
      SF Sg Voc => x + "guinnessie";
      SF Pl Nom => x + "Guinnessowie";
      SF Pl Gen => x + "guinnessów";
      SF Pl Dat => x + "guinnessom";
      SF Pl Acc => x + "guinnessów";
      SF Pl Instr => x + "guinnessami";
      SF Pl Loc => x + "guinnessach";
      SF Pl Voc => x + "Guinnessowie"
    };

    oper mkNTable0378: Str -> SubstForm => Str; --%
    oper mkNTable0378 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "niów";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0379: Str -> SubstForm => Str; --%
    oper mkNTable0379 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "gąsienica";
      SF Sg Gen => x + "gąsienicy";
      SF Sg Dat => x + "gąsienicy";
      SF Sg Acc => x + "gąsienicę";
      SF Sg Instr => x + "gąsienicą";
      SF Sg Loc => x + "gąsienicy";
      SF Sg Voc => x + "gąsienico";
      SF Pl Nom => x + "Gąsienicowie";
      SF Pl Gen => x + "Gąsieniców";
      SF Pl Dat => x + "gąsienicom";
      SF Pl Acc => x + "Gąsieniców";
      SF Pl Instr => x + "gąsienicami";
      SF Pl Loc => x + "gąsienicach";
      SF Pl Voc => x + "Gąsienicowie"
    };

    oper mkNTable0381: Str -> SubstForm => Str; --%
    oper mkNTable0381 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "górka";
      SF Sg Gen => x + "górki";
      SF Sg Dat => x + "górce";
      SF Sg Acc => x + "górkę";
      SF Sg Instr => x + "górką";
      SF Sg Loc => x + "górce";
      SF Sg Voc => x + "górko";
      SF Pl Nom => x + "Górkowie";
      SF Pl Gen => x + "Górków";
      SF Pl Dat => x + "górkom";
      SF Pl Acc => x + "Górków";
      SF Pl Instr => x + "górkami";
      SF Pl Loc => x + "górkach";
      SF Pl Voc => x + "Górkowie"
    };

    oper mkNTable0382: Str -> SubstForm => Str; --%
    oper mkNTable0382 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0383: Str -> SubstForm => Str; --%
    oper mkNTable0383 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "hala";
      SF Sg Gen => x + "hali";
      SF Sg Dat => x + "hali";
      SF Sg Acc => x + "halę";
      SF Sg Instr => x + "halą";
      SF Sg Loc => x + "hali";
      SF Sg Voc => x + "Halu";
      SF Pl Nom => x + "hale";
      SF Pl Gen => x + "hal";
      SF Pl Dat => x + "halom";
      SF Pl Acc => x + "hale";
      SF Pl Instr => x + "halami";
      SF Pl Loc => x + "halach";
      SF Pl Voc => x + "hale"
    };

    oper mkNTable0384: Str -> SubstForm => Str; --%
    oper mkNTable0384 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Hania";
      SF Sg Gen => x + "Hani";
      SF Sg Dat => x + "Hani";
      SF Sg Acc => x + "Hanię";
      SF Sg Instr => x + "Hanią";
      SF Sg Loc => x + "Hani";
      SF Sg Voc => x + "Haniu";
      SF Pl Nom => x + "hanie";
      SF Pl Gen => x + "Hań";
      SF Pl Dat => x + "Haniom";
      SF Pl Acc => x + "hanie";
      SF Pl Instr => x + "Haniami";
      SF Pl Loc => x + "Haniach";
      SF Pl Voc => x + "hanie"
    };

    oper mkNTable0385: Str -> SubstForm => Str; --%
    oper mkNTable0385 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "hanower";
      SF Sg Gen => x + "Hanoweru";
      SF Sg Dat => x + "hanowerowi";
      SF Sg Acc => x + "hanower";
      SF Sg Instr => x + "hanowerem";
      SF Sg Loc => x + "hanowerze";
      SF Sg Voc => x + "hanowerze";
      SF Pl Nom => x + "hanowery";
      SF Pl Gen => x + "hanowerów";
      SF Pl Dat => x + "hanowerom";
      SF Pl Acc => x + "hanowery";
      SF Pl Instr => x + "hanowerami";
      SF Pl Loc => x + "hanowerach";
      SF Pl Voc => x + "hanowery"
    };

    oper mkNTable0386: Str -> SubstForm => Str; --%
    oper mkNTable0386 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "has";
      SF Sg Gen => x + "Hasa";
      SF Sg Dat => x + "hasowi";
      SF Sg Acc => x + "Hasa";
      SF Sg Instr => x + "hasem";
      SF Sg Loc => x + "hasie";
      SF Sg Voc => x + "hasie";
      SF Pl Nom => x + "Hasowie";
      SF Pl Gen => x + "hasów";
      SF Pl Dat => x + "hasom";
      SF Pl Acc => x + "hasów";
      SF Pl Instr => x + "hasami";
      SF Pl Loc => x + "hasach";
      SF Pl Voc => x + "Hasowie"
    };

    oper mkNTable0387: Str -> SubstForm => Str; --%
    oper mkNTable0387 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0388: Str -> SubstForm => Str; --%
    oper mkNTable0388 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "heliodor";
      SF Sg Gen => x + "Heliodora";
      SF Sg Dat => x + "heliodorowi";
      SF Sg Acc => x + "Heliodora";
      SF Sg Instr => x + "heliodorem";
      SF Sg Loc => x + "heliodorze";
      SF Sg Voc => x + "heliodorze";
      SF Pl Nom => x + "Heliodorowie";
      SF Pl Gen => x + "heliodorów";
      SF Pl Dat => x + "heliodorom";
      SF Pl Acc => x + "heliodorów";
      SF Pl Instr => x + "heliodorami";
      SF Pl Loc => x + "heliodorach";
      SF Pl Voc => x + "Heliodorowie"
    };

    oper mkNTable0389: Str -> SubstForm => Str; --%
    oper mkNTable0389 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "helmut";
      SF Sg Gen => x + "helmuta";
      SF Sg Dat => x + "helmutowi";
      SF Sg Acc => x + "helmuta";
      SF Sg Instr => x + "helmutem";
      SF Sg Loc => x + "helmucie";
      SF Sg Voc => x + "helmucie";
      SF Pl Nom => x + "Helmutowie";
      SF Pl Gen => x + "helmutów";
      SF Pl Dat => x + "helmutom";
      SF Pl Acc => x + "helmutów";
      SF Pl Instr => x + "helmutami";
      SF Pl Loc => x + "helmutach";
      SF Pl Voc => x + "Helmutowie"
    };

    oper mkNTable0390: Str -> SubstForm => Str; --%
    oper mkNTable0390 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "tha";
      SF Sg Gen => x + "thy";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "thę";
      SF Sg Instr => x + "thą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "tho";
      SF Pl Nom => x + "thy";
      SF Pl Gen => x + "th";
      SF Pl Dat => x + "thom";
      SF Pl Acc => x + "thy";
      SF Pl Instr => x + "thami";
      SF Pl Loc => x + "thach";
      SF Pl Voc => x + "thy"
    };

    oper mkNTable0391: Str -> SubstForm => Str; --%
    oper mkNTable0391 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "hiacynt";
      SF Sg Gen => x + "hiacynta";
      SF Sg Dat => x + "hiacyntowi";
      SF Sg Acc => x + "hiacynta";
      SF Sg Instr => x + "hiacyntem";
      SF Sg Loc => x + "hiacyncie";
      SF Sg Voc => x + "hiacyncie";
      SF Pl Nom => x + "Hiacyntowie";
      SF Pl Gen => x + "hiacyntów";
      SF Pl Dat => x + "hiacyntom";
      SF Pl Acc => x + "hiacyntów";
      SF Pl Instr => x + "hiacyntami";
      SF Pl Loc => x + "hiacyntach";
      SF Pl Voc => x + "Hiacyntowie"
    };

    oper mkNTable0392: Str -> SubstForm => Str; --%
    oper mkNTable0392 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "hiacynta";
      SF Sg Gen => x + "hiacynty";
      SF Sg Dat => x + "hiacyncie";
      SF Sg Acc => x + "Hiacyntę";
      SF Sg Instr => x + "Hiacyntą";
      SF Sg Loc => x + "hiacyncie";
      SF Sg Voc => x + "Hiacynto";
      SF Pl Nom => x + "hiacynty";
      SF Pl Gen => x + "hiacynt";
      SF Pl Dat => x + "hiacyntom";
      SF Pl Acc => x + "hiacynty";
      SF Pl Instr => x + "hiacyntami";
      SF Pl Loc => x + "hiacyntach";
      SF Pl Voc => x + "hiacynty"
    };

    oper mkNTable0393: Str -> SubstForm => Str; --%
    oper mkNTable0393 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "holender";
      SF Sg Gen => x + "holendra";
      SF Sg Dat => x + "holendrowi";
      SF Sg Acc => x + "holendra";
      SF Sg Instr => x + "holendrem";
      SF Sg Loc => x + "holendrze";
      SF Sg Voc => x + "holendrze";
      SF Pl Nom => x + "Holendrzy";
      SF Pl Gen => x + "holendrów";
      SF Pl Dat => x + "holendrom";
      SF Pl Acc => x + "holendrów";
      SF Pl Instr => x + "holendrami";
      SF Pl Loc => x + "holendrach";
      SF Pl Voc => x + "Holendrzy"
    };

    oper mkNTable0395: Str -> SubstForm => Str; --%
    oper mkNTable0395 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "horst";
      SF Sg Gen => x + "Horsta";
      SF Sg Dat => x + "horstowi";
      SF Sg Acc => x + "Horsta";
      SF Sg Instr => x + "horstem";
      SF Sg Loc => x + "horście";
      SF Sg Voc => x + "horście";
      SF Pl Nom => x + "Horstowie";
      SF Pl Gen => x + "horstów";
      SF Pl Dat => x + "horstom";
      SF Pl Acc => x + "horstów";
      SF Pl Instr => x + "horstami";
      SF Pl Loc => x + "horstach";
      SF Pl Voc => x + "Horstowie"
    };

    oper mkNTable0396: Str -> SubstForm => Str; --%
    oper mkNTable0396 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "hucuł";
      SF Sg Gen => x + "hucuła";
      SF Sg Dat => x + "hucułowi";
      SF Sg Acc => x + "hucuła";
      SF Sg Instr => x + "hucułem";
      SF Sg Loc => x + "hucule";
      SF Sg Voc => x + "hucule";
      SF Pl Nom => x + "Huculi";
      SF Pl Gen => x + "hucułów";
      SF Pl Dat => x + "hucułom";
      SF Pl Acc => x + "hucułów";
      SF Pl Instr => x + "hucułami";
      SF Pl Loc => x + "hucułach";
      SF Pl Voc => x + "Huculi"
    };

    oper mkNTable0397: Str -> SubstForm => Str; --%
    oper mkNTable0397 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nowi";
      SF Sg Acc => x + "na";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "nowie";
      SF Pl Gen => x + "nów";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "nów";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "nowie"
    };

    oper mkNTable0398: Str -> SubstForm => Str; --%
    oper mkNTable0398 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "hun";
      SF Sg Gen => x + "huna";
      SF Sg Dat => x + "Hunowi";
      SF Sg Acc => x + "huna";
      SF Sg Instr => x + "Hunem";
      SF Sg Loc => x + "hunie";
      SF Sg Voc => x + "hunie";
      SF Pl Nom => x + "Hunowie";
      SF Pl Gen => x + "Hunów";
      SF Pl Dat => x + "hunom";
      SF Pl Acc => x + "Hunów";
      SF Pl Instr => x + "hunami";
      SF Pl Loc => x + "hunach";
      SF Pl Voc => x + "Hunowie"
    };

    oper mkNTable0399: Str -> SubstForm => Str; --%
    oper mkNTable0399 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0400: Str -> SubstForm => Str; --%
    oper mkNTable0400 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "icek";
      SF Sg Gen => x + "icka";
      SF Sg Dat => x + "ickowi";
      SF Sg Acc => x + "icka";
      SF Sg Instr => x + "ickiem";
      SF Sg Loc => x + "icku";
      SF Sg Voc => x + "icku";
      SF Pl Nom => x + "Ickowie";
      SF Pl Gen => x + "icków";
      SF Pl Dat => x + "ickom";
      SF Pl Acc => x + "icków";
      SF Pl Instr => x + "ickami";
      SF Pl Loc => x + "ickach";
      SF Pl Voc => x + "Ickowie"
    };

    oper mkNTable0401: Str -> SubstForm => Str; --%
    oper mkNTable0401 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Ida";
      SF Sg Gen => x + "idy";
      SF Sg Dat => x + "idzie";
      SF Sg Acc => x + "Idę";
      SF Sg Instr => x + "Idą";
      SF Sg Loc => x + "idzie";
      SF Sg Voc => x + "Ido";
      SF Pl Nom => x + "idy";
      SF Pl Gen => x + "id";
      SF Pl Dat => x + "idom";
      SF Pl Acc => x + "idy";
      SF Pl Instr => x + "idami";
      SF Pl Loc => x + "idach";
      SF Pl Voc => x + "idy"
    };

    oper mkNTable0402: Str -> SubstForm => Str; --%
    oper mkNTable0402 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "iej";
      SF Sg Dat => x + "iej";
      SF Sg Acc => x + "ą";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "iej";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "ich";
      SF Pl Dat => x + "im";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "imi";
      SF Pl Loc => x + "ich";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0404: Str -> SubstForm => Str; --%
    oper mkNTable0404 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "inkas";
      SF Sg Gen => x + "inkasa";
      SF Sg Dat => x + "Inkasowi";
      SF Sg Acc => x + "inkasa";
      SF Sg Instr => x + "inkasem";
      SF Sg Loc => x + "inkasie";
      SF Sg Voc => x + "inkasie";
      SF Pl Nom => x + "Inkasi";
      SF Pl Gen => x + "Inkasów";
      SF Pl Dat => x + "inkasom";
      SF Pl Acc => x + "Inkasów";
      SF Pl Instr => x + "inkasami";
      SF Pl Loc => x + "inkasach";
      SF Pl Voc => x + "Inkasi"
    };

    oper mkNTable0406: Str -> SubstForm => Str; --%
    oper mkNTable0406 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "irokez";
      SF Sg Gen => x + "irokeza";
      SF Sg Dat => x + "irokezowi";
      SF Sg Acc => x + "irokeza";
      SF Sg Instr => x + "irokezem";
      SF Sg Loc => x + "irokezie";
      SF Sg Voc => x + "irokezie";
      SF Pl Nom => x + "Irokezi";
      SF Pl Gen => x + "irokezów";
      SF Pl Dat => x + "irokezom";
      SF Pl Acc => x + "irokezów";
      SF Pl Instr => x + "irokezami";
      SF Pl Loc => x + "irokezach";
      SF Pl Voc => x + "Irokezi"
    };

    oper mkNTable0407: Str -> SubstForm => Str; --%
    oper mkNTable0407 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Iryda";
      SF Sg Gen => x + "irydy";
      SF Sg Dat => x + "irydzie";
      SF Sg Acc => x + "Irydę";
      SF Sg Instr => x + "Irydą";
      SF Sg Loc => x + "irydzie";
      SF Sg Voc => x + "Irydo";
      SF Pl Nom => x + "irydy";
      SF Pl Gen => x + "iryd";
      SF Pl Dat => x + "irydom";
      SF Pl Acc => x + "irydy";
      SF Pl Instr => x + "irydami";
      SF Pl Loc => x + "irydach";
      SF Pl Voc => x + "irydy"
    };

    oper mkNTable0408: Str -> SubstForm => Str; --%
    oper mkNTable0408 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "iwan";
      SF Sg Gen => x + "iwana";
      SF Sg Dat => x + "iwanowi";
      SF Sg Acc => x + "iwana";
      SF Sg Instr => x + "iwanem";
      SF Sg Loc => x + "iwanie";
      SF Sg Voc => x + "iwanie";
      SF Pl Nom => x + "Iwanowie";
      SF Pl Gen => x + "iwanów";
      SF Pl Dat => x + "iwanom";
      SF Pl Acc => x + "iwanów";
      SF Pl Instr => x + "iwanami";
      SF Pl Loc => x + "iwanach";
      SF Pl Voc => x + "Iwanowie"
    };

    oper mkNTable0409: Str -> SubstForm => Str; --%
    oper mkNTable0409 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iwo";
      SF Sg Gen => x + "Iwona";
      SF Sg Dat => x + "Iwonowi";
      SF Sg Acc => x + "Iwona";
      SF Sg Instr => x + "Iwonem";
      SF Sg Loc => x + "Iwonie";
      SF Sg Voc => x + "iwo";
      SF Pl Nom => x + "Iwonowie";
      SF Pl Gen => x + "Iwonów";
      SF Pl Dat => x + "Iwonom";
      SF Pl Acc => x + "Iwonów";
      SF Pl Instr => x + "Iwonami";
      SF Pl Loc => x + "Iwonach";
      SF Pl Voc => x + "Iwonowie"
    };

    oper mkNTable0411: Str -> SubstForm => Str; --%
    oper mkNTable0411 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "ni";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0412: Str -> SubstForm => Str; --%
    oper mkNTable0412 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Jacek";
      SF Sg Gen => x + "jacka";
      SF Sg Dat => x + "jackowi";
      SF Sg Acc => x + "jacka";
      SF Sg Instr => x + "jackiem";
      SF Sg Loc => x + "jacku";
      SF Sg Voc => x + "jacku";
      SF Pl Nom => x + "Jackowie";
      SF Pl Gen => x + "jacków";
      SF Pl Dat => x + "jackom";
      SF Pl Acc => x + "jacków";
      SF Pl Instr => x + "jackami";
      SF Pl Loc => x + "jackach";
      SF Pl Voc => x + "Jackowie"
    };

    oper mkNTable0413: Str -> SubstForm => Str; --%
    oper mkNTable0413 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "jack";
      SF Sg Gen => x + "jacka";
      SF Sg Dat => x + "jackowi";
      SF Sg Acc => x + "jacka";
      SF Sg Instr => x + "jackiem";
      SF Sg Loc => x + "jacku";
      SF Sg Voc => x + "jacku";
      SF Pl Nom => x + "Jackowie";
      SF Pl Gen => x + "jacków";
      SF Pl Dat => x + "jackom";
      SF Pl Acc => x + "jacków";
      SF Pl Instr => x + "jackami";
      SF Pl Loc => x + "jackach";
      SF Pl Voc => x + "Jackowie"
    };

    oper mkNTable0414: Str -> SubstForm => Str; --%
    oper mkNTable0414 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Jadzia";
      SF Sg Gen => x + "Jadzi";
      SF Sg Dat => x + "Jadzi";
      SF Sg Acc => x + "Jadzię";
      SF Sg Instr => x + "Jadzią";
      SF Sg Loc => x + "Jadzi";
      SF Sg Voc => x + "Jadziu";
      SF Pl Nom => x + "jadzie";
      SF Pl Gen => x + "Jadź";
      SF Pl Dat => x + "Jadziom";
      SF Pl Acc => x + "jadzie";
      SF Pl Instr => x + "Jadziami";
      SF Pl Loc => x + "Jadziach";
      SF Pl Voc => x + "jadzie"
    };

    oper mkNTable0415: Str -> SubstForm => Str; --%
    oper mkNTable0415 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "źka";
      SF Sg Gen => x + "źki";
      SF Sg Dat => x + "źce";
      SF Sg Acc => x + "źkę";
      SF Sg Instr => x + "źką";
      SF Sg Loc => x + "źce";
      SF Sg Voc => x + "źko";
      SF Pl Nom => x + "źki";
      SF Pl Gen => x + "ziek";
      SF Pl Dat => x + "źkom";
      SF Pl Acc => x + "źki";
      SF Pl Instr => x + "źkami";
      SF Pl Loc => x + "źkach";
      SF Pl Voc => x + "źki"
    };

    oper mkNTable0416: Str -> SubstForm => Str; --%
    oper mkNTable0416 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "łło";
      SF Sg Gen => x + "łły";
      SF Sg Dat => x + "lle";
      SF Sg Acc => x + "łłę";
      SF Sg Instr => x + "łłą";
      SF Sg Loc => x + "lle";
      SF Sg Voc => x + "łło";
      SF Pl Nom => x + "łłowie";
      SF Pl Gen => x + "łłów";
      SF Pl Dat => x + "łłom";
      SF Pl Acc => x + "łłów";
      SF Pl Instr => x + "łłami";
      SF Pl Loc => x + "łłach";
      SF Pl Voc => x + "łłowie"
    };

    oper mkNTable0417: Str -> SubstForm => Str; --%
    oper mkNTable0417 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oda";
      SF Sg Gen => x + "ody";
      SF Sg Dat => x + "odzie";
      SF Sg Acc => x + "odę";
      SF Sg Instr => x + "odą";
      SF Sg Loc => x + "odzie";
      SF Sg Voc => x + "odo";
      SF Pl Nom => x + "ody";
      SF Pl Gen => x + "ód";
      SF Pl Dat => x + "odom";
      SF Pl Acc => x + "ody";
      SF Pl Instr => x + "odami";
      SF Pl Loc => x + "odach";
      SF Pl Voc => x + "ody"
    };

    oper mkNTable0419: Str -> SubstForm => Str; --%
    oper mkNTable0419 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "jakubek";
      SF Sg Gen => x + "jakubka";
      SF Sg Dat => x + "Jakubkowi";
      SF Sg Acc => x + "jakubka";
      SF Sg Instr => x + "Jakubkiem";
      SF Sg Loc => x + "Jakubku";
      SF Sg Voc => x + "Jakubku";
      SF Pl Nom => x + "Jakubkowie";
      SF Pl Gen => x + "Jakubków";
      SF Pl Dat => x + "jakubkom";
      SF Pl Acc => x + "Jakubków";
      SF Pl Instr => x + "jakubkami";
      SF Pl Loc => x + "jakubkach";
      SF Pl Voc => x + "Jakubkowie"
    };

    oper mkNTable0420: Str -> SubstForm => Str; --%
    oper mkNTable0420 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0423: Str -> SubstForm => Str; --%
    oper mkNTable0423 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "jarek";
      SF Sg Gen => x + "jarka";
      SF Sg Dat => x + "Jarkowi";
      SF Sg Acc => x + "jarka";
      SF Sg Instr => x + "Jarkiem";
      SF Sg Loc => x + "Jarku";
      SF Sg Voc => x + "Jarku";
      SF Pl Nom => x + "Jarkowie";
      SF Pl Gen => x + "Jarków";
      SF Pl Dat => x + "jarkom";
      SF Pl Acc => x + "Jarków";
      SF Pl Instr => x + "jarkami";
      SF Pl Loc => x + "jarkach";
      SF Pl Voc => x + "Jarkowie"
    };

    oper mkNTable0424: Str -> SubstForm => Str; --%
    oper mkNTable0424 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "jarosz";
      SF Sg Gen => x + "jarosza";
      SF Sg Dat => x + "jaroszowi";
      SF Sg Acc => x + "jarosza";
      SF Sg Instr => x + "jaroszem";
      SF Sg Loc => x + "jaroszu";
      SF Sg Voc => x + "jaroszu";
      SF Pl Nom => x + "Jaroszowie";
      SF Pl Gen => x + "jaroszów";
      SF Pl Dat => x + "jaroszom";
      SF Pl Acc => x + "jaroszów";
      SF Pl Instr => x + "jaroszami";
      SF Pl Loc => x + "jaroszach";
      SF Pl Voc => x + "Jaroszowie"
    };

    oper mkNTable0425: Str -> SubstForm => Str; --%
    oper mkNTable0425 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "jasia";
      SF Sg Gen => x + "Jasi";
      SF Sg Dat => x + "Jasi";
      SF Sg Acc => x + "Jasię";
      SF Sg Instr => x + "Jasią";
      SF Sg Loc => x + "Jasi";
      SF Sg Voc => x + "jasiu";
      SF Pl Nom => x + "jasie";
      SF Pl Gen => x + "jaś";
      SF Pl Dat => x + "jasiom";
      SF Pl Acc => x + "jasie";
      SF Pl Instr => x + "jasiami";
      SF Pl Loc => x + "jasiach";
      SF Pl Voc => x + "jasie"
    };

    oper mkNTable0426: Str -> SubstForm => Str; --%
    oper mkNTable0426 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "jasiek";
      SF Sg Gen => x + "jaśka";
      SF Sg Dat => x + "jaśkowi";
      SF Sg Acc => x + "jaśka";
      SF Sg Instr => x + "jaśkiem";
      SF Sg Loc => x + "jaśku";
      SF Sg Voc => x + "jaśku";
      SF Pl Nom => x + "Jaśkowie";
      SF Pl Gen => x + "jaśków";
      SF Pl Dat => x + "jaśkom";
      SF Pl Acc => x + "jaśków";
      SF Pl Instr => x + "jaśkami";
      SF Pl Loc => x + "jaśkach";
      SF Pl Voc => x + "Jaśkowie"
    };

    oper mkNTable0427: Str -> SubstForm => Str; --%
    oper mkNTable0427 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0428: Str -> SubstForm => Str; --%
    oper mkNTable0428 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Jasio";
      SF Sg Gen => x + "jasia";
      SF Sg Dat => x + "jasiowi";
      SF Sg Acc => x + "jasia";
      SF Sg Instr => x + "jasiem";
      SF Sg Loc => x + "jasiu";
      SF Sg Voc => x + "jasiu";
      SF Pl Nom => x + "Jasiowie";
      SF Pl Gen => x + "jasiów";
      SF Pl Dat => x + "jasiom";
      SF Pl Acc => x + "jasiów";
      SF Pl Instr => x + "jasiami";
      SF Pl Loc => x + "jasiach";
      SF Pl Voc => x + "Jasiowie"
    };

    oper mkNTable0429: Str -> SubstForm => Str; --%
    oper mkNTable0429 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "jastrun";
      SF Sg Gen => x + "jastruna";
      SF Sg Dat => x + "jastrunowi";
      SF Sg Acc => x + "jastruna";
      SF Sg Instr => x + "jastrunem";
      SF Sg Loc => x + "jastrunie";
      SF Sg Voc => x + "jastrunie";
      SF Pl Nom => x + "Jastrunowie";
      SF Pl Gen => x + "jastrunów";
      SF Pl Dat => x + "jastrunom";
      SF Pl Acc => x + "jastrunów";
      SF Pl Instr => x + "jastrunami";
      SF Pl Loc => x + "jastrunach";
      SF Pl Voc => x + "Jastrunowie"
    };

    oper mkNTable0430: Str -> SubstForm => Str; --%
    oper mkNTable0430 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sło";
      SF Sg Gen => x + "sła";
      SF Sg Dat => x + "słu";
      SF Sg Acc => x + "sło";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "sło";
      SF Pl Nom => x + "sła";
      SF Pl Gen => x + "seł";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "sła";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "sła"
    };

    oper mkNTable0431: Str -> SubstForm => Str; --%
    oper mkNTable0431 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "a";
      SF Pl Dat => x + "a";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "a";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0433: Str -> SubstForm => Str; --%
    oper mkNTable0433 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Jaśko";
      SF Sg Gen => x + "jaśka";
      SF Sg Dat => x + "jaśkowi";
      SF Sg Acc => x + "jaśka";
      SF Sg Instr => x + "jaśkiem";
      SF Sg Loc => x + "jaśku";
      SF Sg Voc => x + "jaśku";
      SF Pl Nom => x + "Jaśkowie";
      SF Pl Gen => x + "jaśków";
      SF Pl Dat => x + "jaśkom";
      SF Pl Acc => x + "jaśków";
      SF Pl Instr => x + "jaśkami";
      SF Pl Loc => x + "jaśkach";
      SF Pl Voc => x + "Jaśkowie"
    };

    oper mkNTable0434: Str -> SubstForm => Str; --%
    oper mkNTable0434 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable0435: Str -> SubstForm => Str; --%
    oper mkNTable0435 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0436: Str -> SubstForm => Str; --%
    oper mkNTable0436 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Jelena";
      SF Sg Gen => x + "Jeleny";
      SF Sg Dat => x + "jelenie";
      SF Sg Acc => x + "Jelenę";
      SF Sg Instr => x + "Jeleną";
      SF Sg Loc => x + "jelenie";
      SF Sg Voc => x + "Jeleno";
      SF Pl Nom => x + "Jeleny";
      SF Pl Gen => x + "Jelen";
      SF Pl Dat => x + "Jelenom";
      SF Pl Acc => x + "Jeleny";
      SF Pl Instr => x + "Jelenami";
      SF Pl Loc => x + "Jelenach";
      SF Pl Voc => x + "Jeleny"
    };

    oper mkNTable0437: Str -> SubstForm => Str; --%
    oper mkNTable0437 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "jerzyk";
      SF Sg Gen => x + "jerzyka";
      SF Sg Dat => x + "jerzykowi";
      SF Sg Acc => x + "jerzyka";
      SF Sg Instr => x + "jerzykiem";
      SF Sg Loc => x + "jerzyku";
      SF Sg Voc => x + "jerzyku";
      SF Pl Nom => x + "Jerzykowie";
      SF Pl Gen => x + "jerzyków";
      SF Pl Dat => x + "jerzykom";
      SF Pl Acc => x + "jerzyków";
      SF Pl Instr => x + "jerzykami";
      SF Pl Loc => x + "jerzykach";
      SF Pl Voc => x + "Jerzykowie"
    };

    oper mkNTable0440: Str -> SubstForm => Str; --%
    oper mkNTable0440 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0441: Str -> SubstForm => Str; --%
    oper mkNTable0441 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "jonatan";
      SF Sg Gen => x + "jonatana";
      SF Sg Dat => x + "jonatanowi";
      SF Sg Acc => x + "jonatana";
      SF Sg Instr => x + "jonatanem";
      SF Sg Loc => x + "jonatanie";
      SF Sg Voc => x + "jonatanie";
      SF Pl Nom => x + "Jonatanowie";
      SF Pl Gen => x + "jonatanów";
      SF Pl Dat => x + "jonatanom";
      SF Pl Acc => x + "jonatanów";
      SF Pl Instr => x + "jonatanami";
      SF Pl Loc => x + "jonatanach";
      SF Pl Voc => x + "Jonatanowie"
    };

    oper mkNTable0442: Str -> SubstForm => Str; --%
    oper mkNTable0442 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "jordan";
      SF Sg Gen => x + "Jordana";
      SF Sg Dat => x + "jordanowi";
      SF Sg Acc => x + "Jordana";
      SF Sg Instr => x + "jordanem";
      SF Sg Loc => x + "jordanie";
      SF Sg Voc => x + "jordanie";
      SF Pl Nom => x + "Jordanowie";
      SF Pl Gen => x + "jordanów";
      SF Pl Dat => x + "jordanom";
      SF Pl Acc => x + "jordanów";
      SF Pl Instr => x + "jordanami";
      SF Pl Loc => x + "jordanach";
      SF Pl Voc => x + "Jordanowie"
    };

    oper mkNTable0444: Str -> SubstForm => Str; --%
    oper mkNTable0444 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ph";
      SF Sg Gen => x + "pha";
      SF Sg Dat => x + "phowi";
      SF Sg Acc => x + "pha";
      SF Sg Instr => x + "phem";
      SF Sg Loc => x + "fie";
      SF Sg Voc => x + "fie";
      SF Pl Nom => x + "phowie";
      SF Pl Gen => x + "phów";
      SF Pl Dat => x + "phom";
      SF Pl Acc => x + "phów";
      SF Pl Instr => x + "phami";
      SF Pl Loc => x + "phach";
      SF Pl Voc => x + "phowie"
    };

    oper mkNTable0445: Str -> SubstForm => Str; --%
    oper mkNTable0445 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kaczor";
      SF Sg Gen => x + "kaczora";
      SF Sg Dat => x + "kaczorowi";
      SF Sg Acc => x + "kaczora";
      SF Sg Instr => x + "kaczorem";
      SF Sg Loc => x + "kaczorze";
      SF Sg Voc => x + "kaczorze";
      SF Pl Nom => x + "Kaczorowie";
      SF Pl Gen => x + "kaczorów";
      SF Pl Dat => x + "kaczorom";
      SF Pl Acc => x + "kaczorów";
      SF Pl Instr => x + "kaczorami";
      SF Pl Loc => x + "kaczorach";
      SF Pl Voc => x + "Kaczorowie"
    };

    oper mkNTable0446: Str -> SubstForm => Str; --%
    oper mkNTable0446 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kajtek";
      SF Sg Gen => x + "kajtka";
      SF Sg Dat => x + "kajtkowi";
      SF Sg Acc => x + "kajtka";
      SF Sg Instr => x + "kajtkiem";
      SF Sg Loc => x + "kajtku";
      SF Sg Voc => x + "kajtku";
      SF Pl Nom => x + "Kajtkowie";
      SF Pl Gen => x + "kajtków";
      SF Pl Dat => x + "kajtkom";
      SF Pl Acc => x + "kajtków";
      SF Pl Instr => x + "kajtkami";
      SF Pl Loc => x + "kajtkach";
      SF Pl Voc => x + "Kajtkowie"
    };

    oper mkNTable0447: Str -> SubstForm => Str; --%
    oper mkNTable0447 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kania";
      SF Sg Gen => x + "kani";
      SF Sg Dat => x + "kani";
      SF Sg Acc => x + "kanię";
      SF Sg Instr => x + "kanią";
      SF Sg Loc => x + "kani";
      SF Sg Voc => x + "kanio";
      SF Pl Nom => x + "Kaniowie";
      SF Pl Gen => x + "Kaniów";
      SF Pl Dat => x + "kaniom";
      SF Pl Acc => x + "Kaniów";
      SF Pl Instr => x + "kaniami";
      SF Pl Loc => x + "kaniach";
      SF Pl Voc => x + "Kaniowie"
    };

    oper mkNTable0448: Str -> SubstForm => Str; --%
    oper mkNTable0448 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kant";
      SF Sg Gen => x + "Kanta";
      SF Sg Dat => x + "kantowi";
      SF Sg Acc => x + "Kanta";
      SF Sg Instr => x + "kantem";
      SF Sg Loc => x + "kancie";
      SF Sg Voc => x + "kancie";
      SF Pl Nom => x + "Kantowie";
      SF Pl Gen => x + "kantów";
      SF Pl Dat => x + "kantom";
      SF Pl Acc => x + "kantów";
      SF Pl Instr => x + "kantami";
      SF Pl Loc => x + "kantach";
      SF Pl Voc => x + "Kantowie"
    };

    oper mkNTable0449: Str -> SubstForm => Str; --%
    oper mkNTable0449 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0452: Str -> SubstForm => Str; --%
    oper mkNTable0452 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Karl";
      SF Sg Gen => x + "Karla";
      SF Sg Dat => x + "Karlowi";
      SF Sg Acc => x + "Karla";
      SF Sg Instr => x + "Karlem";
      SF Sg Loc => x + "Karlu";
      SF Sg Voc => x + "Karlu";
      SF Pl Nom => x + "karle";
      SF Pl Gen => x + "Karlów";
      SF Pl Dat => x + "Karlom";
      SF Pl Acc => x + "Karlów";
      SF Pl Instr => x + "Karlami";
      SF Pl Loc => x + "Karlach";
      SF Pl Voc => x + "karle"
    };

    oper mkNTable0453: Str -> SubstForm => Str; --%
    oper mkNTable0453 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "karlik";
      SF Sg Gen => x + "karlika";
      SF Sg Dat => x + "karlikowi";
      SF Sg Acc => x + "karlika";
      SF Sg Instr => x + "karlikiem";
      SF Sg Loc => x + "karliku";
      SF Sg Voc => x + "karliku";
      SF Pl Nom => x + "Karlikowie";
      SF Pl Gen => x + "karlików";
      SF Pl Dat => x + "karlikom";
      SF Pl Acc => x + "karlików";
      SF Pl Instr => x + "karlikami";
      SF Pl Loc => x + "karlikach";
      SF Pl Voc => x + "Karlikowie"
    };

    oper mkNTable0454: Str -> SubstForm => Str; --%
    oper mkNTable0454 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "karolek";
      SF Sg Gen => x + "karolka";
      SF Sg Dat => x + "karolkowi";
      SF Sg Acc => x + "karolka";
      SF Sg Instr => x + "karolkiem";
      SF Sg Loc => x + "karolku";
      SF Sg Voc => x + "karolku";
      SF Pl Nom => x + "Karolkowie";
      SF Pl Gen => x + "karolków";
      SF Pl Dat => x + "karolkom";
      SF Pl Acc => x + "karolków";
      SF Pl Instr => x + "karolkami";
      SF Pl Loc => x + "karolkach";
      SF Pl Voc => x + "Karolkowie"
    };

    oper mkNTable0455: Str -> SubstForm => Str; --%
    oper mkNTable0455 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "karolka";
      SF Sg Gen => x + "karolki";
      SF Sg Dat => x + "Karolce";
      SF Sg Acc => x + "Karolkę";
      SF Sg Instr => x + "Karolką";
      SF Sg Loc => x + "Karolce";
      SF Sg Voc => x + "Karolko";
      SF Pl Nom => x + "karolki";
      SF Pl Gen => x + "karolek";
      SF Pl Dat => x + "karolkom";
      SF Pl Acc => x + "karolki";
      SF Pl Instr => x + "karolkami";
      SF Pl Loc => x + "karolkach";
      SF Pl Voc => x + "karolki"
    };

    oper mkNTable0456: Str -> SubstForm => Str; --%
    oper mkNTable0456 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "ia";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0457: Str -> SubstForm => Str; --%
    oper mkNTable0457 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kasia";
      SF Sg Gen => x + "Kasi";
      SF Sg Dat => x + "Kasi";
      SF Sg Acc => x + "Kasię";
      SF Sg Instr => x + "Kasią";
      SF Sg Loc => x + "Kasi";
      SF Sg Voc => x + "Kasiu";
      SF Pl Nom => x + "kasie";
      SF Pl Gen => x + "Kaś";
      SF Pl Dat => x + "Kasiom";
      SF Pl Acc => x + "kasie";
      SF Pl Instr => x + "Kasiami";
      SF Pl Loc => x + "Kasiach";
      SF Pl Voc => x + "kasie"
    };

    oper mkNTable0458: Str -> SubstForm => Str; --%
    oper mkNTable0458 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ńka";
      SF Sg Gen => x + "ńki";
      SF Sg Dat => x + "ńce";
      SF Sg Acc => x + "ńkę";
      SF Sg Instr => x + "ńką";
      SF Sg Loc => x + "ńce";
      SF Sg Voc => x + "ńko";
      SF Pl Nom => x + "ńki";
      SF Pl Gen => x + "niek";
      SF Pl Dat => x + "ńkom";
      SF Pl Acc => x + "ńki";
      SF Pl Instr => x + "ńkami";
      SF Pl Loc => x + "ńkach";
      SF Pl Voc => x + "ńki"
    };

    oper mkNTable0459: Str -> SubstForm => Str; --%
    oper mkNTable0459 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kastor";
      SF Sg Gen => x + "kastora";
      SF Sg Dat => x + "kastorowi";
      SF Sg Acc => x + "kastora";
      SF Sg Instr => x + "kastorem";
      SF Sg Loc => x + "kastorze";
      SF Sg Voc => x + "kastorze";
      SF Pl Nom => x + "Kastorowie";
      SF Pl Gen => x + "kastorów";
      SF Pl Dat => x + "kastorom";
      SF Pl Acc => x + "kastorów";
      SF Pl Instr => x + "kastorami";
      SF Pl Loc => x + "kastorach";
      SF Pl Voc => x + "Kastorowie"
    };

    oper mkNTable0460: Str -> SubstForm => Str; --%
    oper mkNTable0460 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kato";
      SF Sg Gen => x + "katona";
      SF Sg Dat => x + "katonowi";
      SF Sg Acc => x + "katona";
      SF Sg Instr => x + "katonem";
      SF Sg Loc => x + "katonie";
      SF Sg Voc => x + "katonie";
      SF Pl Nom => x + "Katonowie";
      SF Pl Gen => x + "katonów";
      SF Pl Dat => x + "katonom";
      SF Pl Acc => x + "katonów";
      SF Pl Instr => x + "katonami";
      SF Pl Loc => x + "katonach";
      SF Pl Voc => x + "Katonowie"
    };

    oper mkNTable0461: Str -> SubstForm => Str; --%
    oper mkNTable0461 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kaukaz";
      SF Sg Gen => x + "Kaukazu";
      SF Sg Dat => x + "kaukazowi";
      SF Sg Acc => x + "kaukaz";
      SF Sg Instr => x + "kaukazem";
      SF Sg Loc => x + "kaukazie";
      SF Sg Voc => x + "kaukazie";
      SF Pl Nom => x + "kaukazy";
      SF Pl Gen => x + "kaukazów";
      SF Pl Dat => x + "kaukazom";
      SF Pl Acc => x + "kaukazy";
      SF Pl Instr => x + "kaukazami";
      SF Pl Loc => x + "kaukazach";
      SF Pl Voc => x + "kaukazy"
    };

    oper mkNTable0462: Str -> SubstForm => Str; --%
    oper mkNTable0462 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kawa";
      SF Sg Gen => x + "kawy";
      SF Sg Dat => x + "kawie";
      SF Sg Acc => x + "kawę";
      SF Sg Instr => x + "kawą";
      SF Sg Loc => x + "kawie";
      SF Sg Voc => x + "kawo";
      SF Pl Nom => x + "Kawowie";
      SF Pl Gen => x + "Kawów";
      SF Pl Dat => x + "kawom";
      SF Pl Acc => x + "Kawów";
      SF Pl Instr => x + "kawami";
      SF Pl Loc => x + "kawach";
      SF Pl Voc => x + "Kawowie"
    };

    oper mkNTable0463: Str -> SubstForm => Str; --%
    oper mkNTable0463 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kazan";
      SF Sg Gen => x + "Kazana";
      SF Sg Dat => x + "Kazanowi";
      SF Sg Acc => x + "Kazana";
      SF Sg Instr => x + "Kazanem";
      SF Sg Loc => x + "kazanie";
      SF Sg Voc => x + "kazanie";
      SF Pl Nom => x + "Kazanowie";
      SF Pl Gen => x + "Kazanów";
      SF Pl Dat => x + "Kazanom";
      SF Pl Acc => x + "Kazanów";
      SF Pl Instr => x + "Kazanami";
      SF Pl Loc => x + "Kazanach";
      SF Pl Voc => x + "Kazanowie"
    };

    oper mkNTable0464: Str -> SubstForm => Str; --%
    oper mkNTable0464 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kańczuga";
      SF Sg Gen => x + "kańczugi";
      SF Sg Dat => x + "Kańczudze";
      SF Sg Acc => x + "Kańczugę";
      SF Sg Instr => x + "Kańczugą";
      SF Sg Loc => x + "Kańczudze";
      SF Sg Voc => x + "Kańczugo";
      SF Pl Nom => x + "kańczugi";
      SF Pl Gen => x + "kańczug";
      SF Pl Dat => x + "kańczugom";
      SF Pl Acc => x + "kańczugi";
      SF Pl Instr => x + "kańczugami";
      SF Pl Loc => x + "kańczugach";
      SF Pl Voc => x + "kańczugi"
    };

    oper mkNTable0465: Str -> SubstForm => Str; --%
    oper mkNTable0465 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kedyw";
      SF Sg Gen => x + "Kedywu";
      SF Sg Dat => x + "kedywowi";
      SF Sg Acc => x + "kedyw";
      SF Sg Instr => x + "kedywem";
      SF Sg Loc => x + "kedywie";
      SF Sg Voc => x + "kedywie";
      SF Pl Nom => x + "kedywy";
      SF Pl Gen => x + "kedywów";
      SF Pl Dat => x + "kedywom";
      SF Pl Acc => x + "kedywy";
      SF Pl Instr => x + "kedywami";
      SF Pl Loc => x + "kedywach";
      SF Pl Voc => x + "kedywy"
    };

    oper mkNTable0466: Str -> SubstForm => Str; --%
    oper mkNTable0466 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0467: Str -> SubstForm => Str; --%
    oper mkNTable0467 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ź";
      SF Sg Gen => x + "zia";
      SF Sg Dat => x + "ziowi";
      SF Sg Acc => x + "zia";
      SF Sg Instr => x + "ziem";
      SF Sg Loc => x + "ziu";
      SF Sg Voc => x + "ziu";
      SF Pl Nom => x + "ziowie";
      SF Pl Gen => x + "ziów";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "ziów";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "ziowie"
    };

    oper mkNTable0468: Str -> SubstForm => Str; --%
    oper mkNTable0468 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kiełbasa";
      SF Sg Gen => x + "kiełbasy";
      SF Sg Dat => x + "kiełbasie";
      SF Sg Acc => x + "kiełbasę";
      SF Sg Instr => x + "kiełbasą";
      SF Sg Loc => x + "kiełbasie";
      SF Sg Voc => x + "kiełbaso";
      SF Pl Nom => x + "Kiełbasowie";
      SF Pl Gen => x + "Kiełbasów";
      SF Pl Dat => x + "kiełbasom";
      SF Pl Acc => x + "Kiełbasów";
      SF Pl Instr => x + "kiełbasami";
      SF Pl Loc => x + "kiełbasach";
      SF Pl Voc => x + "Kiełbasowie"
    };

    oper mkNTable0470: Str -> SubstForm => Str; --%
    oper mkNTable0470 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "king";
      SF Sg Gen => x + "Kinga";
      SF Sg Dat => x + "kingowi";
      SF Sg Acc => x + "Kinga";
      SF Sg Instr => x + "kingiem";
      SF Sg Loc => x + "kingu";
      SF Sg Voc => x + "kingu";
      SF Pl Nom => x + "Kingowie";
      SF Pl Gen => x + "kingów";
      SF Pl Dat => x + "kingom";
      SF Pl Acc => x + "kingów";
      SF Pl Instr => x + "kingami";
      SF Pl Loc => x + "kingach";
      SF Pl Voc => x + "Kingowie"
    };

    oper mkNTable0471: Str -> SubstForm => Str; --%
    oper mkNTable0471 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kinga";
      SF Sg Gen => x + "kingi";
      SF Sg Dat => x + "Kindze";
      SF Sg Acc => x + "Kingę";
      SF Sg Instr => x + "Kingą";
      SF Sg Loc => x + "Kindze";
      SF Sg Voc => x + "Kingo";
      SF Pl Nom => x + "kingi";
      SF Pl Gen => x + "king";
      SF Pl Dat => x + "kingom";
      SF Pl Acc => x + "kingi";
      SF Pl Instr => x + "kingami";
      SF Pl Loc => x + "kingach";
      SF Pl Voc => x + "kingi"
    };

    oper mkNTable0472: Str -> SubstForm => Str; --%
    oper mkNTable0472 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kinia";
      SF Sg Gen => x + "Kini";
      SF Sg Dat => x + "Kini";
      SF Sg Acc => x + "Kinię";
      SF Sg Instr => x + "Kinią";
      SF Sg Loc => x + "Kini";
      SF Sg Voc => x + "Kinio";
      SF Pl Nom => x + "kinie";
      SF Pl Gen => x + "Kiń";
      SF Pl Dat => x + "Kiniom";
      SF Pl Acc => x + "kinie";
      SF Pl Instr => x + "Kiniami";
      SF Pl Loc => x + "Kiniach";
      SF Pl Voc => x + "kinie"
    };

    oper mkNTable0473: Str -> SubstForm => Str; --%
    oper mkNTable0473 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Kira";
      SF Sg Gen => x + "kiry";
      SF Sg Dat => x + "kirze";
      SF Sg Acc => x + "Kirę";
      SF Sg Instr => x + "Kirą";
      SF Sg Loc => x + "kirze";
      SF Sg Voc => x + "Kiro";
      SF Pl Nom => x + "kiry";
      SF Pl Gen => x + "kir";
      SF Pl Dat => x + "kirom";
      SF Pl Acc => x + "kiry";
      SF Pl Instr => x + "kirami";
      SF Pl Loc => x + "kirach";
      SF Pl Voc => x + "kiry"
    };

    oper mkNTable0474: Str -> SubstForm => Str; --%
    oper mkNTable0474 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "klaczko";
      SF Sg Gen => x + "klaczki";
      SF Sg Dat => x + "klaczce";
      SF Sg Acc => x + "klaczkę";
      SF Sg Instr => x + "klaczką";
      SF Sg Loc => x + "klaczce";
      SF Sg Voc => x + "klaczko";
      SF Pl Nom => x + "Klaczkowie";
      SF Pl Gen => x + "Klaczków";
      SF Pl Dat => x + "klaczkom";
      SF Pl Acc => x + "Klaczków";
      SF Pl Instr => x + "klaczkami";
      SF Pl Loc => x + "klaczkach";
      SF Pl Voc => x + "Klaczkowie"
    };

    oper mkNTable0475: Str -> SubstForm => Str; --%
    oper mkNTable0475 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Klara";
      SF Sg Gen => x + "klary";
      SF Sg Dat => x + "klarze";
      SF Sg Acc => x + "Klarę";
      SF Sg Instr => x + "Klarą";
      SF Sg Loc => x + "klarze";
      SF Sg Voc => x + "Klaro";
      SF Pl Nom => x + "klary";
      SF Pl Gen => x + "klar";
      SF Pl Dat => x + "klarom";
      SF Pl Acc => x + "klary";
      SF Pl Instr => x + "klarami";
      SF Pl Loc => x + "klarach";
      SF Pl Voc => x + "klary"
    };

    oper mkNTable0477: Str -> SubstForm => Str; --%
    oper mkNTable0477 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kokoszko";
      SF Sg Gen => x + "kokoszki";
      SF Sg Dat => x + "kokoszce";
      SF Sg Acc => x + "kokoszkę";
      SF Sg Instr => x + "kokoszką";
      SF Sg Loc => x + "kokoszce";
      SF Sg Voc => x + "kokoszko";
      SF Pl Nom => x + "Kokoszkowie";
      SF Pl Gen => x + "Kokoszków";
      SF Pl Dat => x + "kokoszkom";
      SF Pl Acc => x + "Kokoszków";
      SF Pl Instr => x + "kokoszkami";
      SF Pl Loc => x + "kokoszkach";
      SF Pl Voc => x + "Kokoszkowie"
    };

    oper mkNTable0479: Str -> SubstForm => Str; --%
    oper mkNTable0479 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "koleta";
      SF Sg Gen => x + "kolety";
      SF Sg Dat => x + "kolecie";
      SF Sg Acc => x + "Koletę";
      SF Sg Instr => x + "Koletą";
      SF Sg Loc => x + "kolecie";
      SF Sg Voc => x + "Koleto";
      SF Pl Nom => x + "kolety";
      SF Pl Gen => x + "kolet";
      SF Pl Dat => x + "koletom";
      SF Pl Acc => x + "kolety";
      SF Pl Instr => x + "koletami";
      SF Pl Loc => x + "koletach";
      SF Pl Voc => x + "kolety"
    };

    oper mkNTable0481: Str -> SubstForm => Str; --%
    oper mkNTable0481 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kongo";
      SF Sg Gen => x + "konga";
      SF Sg Dat => x + "Kongu";
      SF Sg Acc => x + "kongo";
      SF Sg Instr => x + "Kongiem";
      SF Sg Loc => x + "Kongu";
      SF Sg Voc => x + "kongo";
      SF Pl Nom => x + "konga";
      SF Pl Gen => x + "kong";
      SF Pl Dat => x + "kongom";
      SF Pl Acc => x + "konga";
      SF Pl Instr => x + "kongami";
      SF Pl Loc => x + "kongach";
      SF Pl Voc => x + "konga"
    };

    oper mkNTable0483: Str -> SubstForm => Str; --%
    oper mkNTable0483 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "konstanty";
      SF Sg Gen => x + "Konstantego";
      SF Sg Dat => x + "Konstantemu";
      SF Sg Acc => x + "Konstantego";
      SF Sg Instr => x + "Konstantym";
      SF Sg Loc => x + "Konstantym";
      SF Sg Voc => x + "konstanty";
      SF Pl Nom => x + "Konstantowie";
      SF Pl Gen => x + "Konstantych";
      SF Pl Dat => x + "Konstantym";
      SF Pl Acc => x + "Konstantych";
      SF Pl Instr => x + "Konstantymi";
      SF Pl Loc => x + "Konstantych";
      SF Pl Voc => x + "Konstantowie"
    };

    oper mkNTable0484: Str -> SubstForm => Str; --%
    oper mkNTable0484 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Kopt";
      SF Sg Gen => x + "Kopta";
      SF Sg Dat => x + "Koptowi";
      SF Sg Acc => x + "Kopta";
      SF Sg Instr => x + "Koptem";
      SF Sg Loc => x + "kopcie";
      SF Sg Voc => x + "kopcie";
      SF Pl Nom => x + "Koptowie";
      SF Pl Gen => x + "Koptów";
      SF Pl Dat => x + "Koptom";
      SF Pl Acc => x + "Koptów";
      SF Pl Instr => x + "Koptami";
      SF Pl Loc => x + "Koptach";
      SF Pl Voc => x + "Koptowie"
    };

    oper mkNTable0486: Str -> SubstForm => Str; --%
    oper mkNTable0486 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kornel";
      SF Sg Gen => x + "Kornela";
      SF Sg Dat => x + "kornelowi";
      SF Sg Acc => x + "Kornela";
      SF Sg Instr => x + "kornelem";
      SF Sg Loc => x + "kornelu";
      SF Sg Voc => x + "kornelu";
      SF Pl Nom => x + "kornele";
      SF Pl Gen => x + "kornelów";
      SF Pl Dat => x + "kornelom";
      SF Pl Acc => x + "kornelów";
      SF Pl Instr => x + "kornelami";
      SF Pl Loc => x + "kornelach";
      SF Pl Voc => x + "kornele"
    };

    oper mkNTable0487: Str -> SubstForm => Str; --%
    oper mkNTable0487 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "korsak";
      SF Sg Gen => x + "korsaka";
      SF Sg Dat => x + "korsakowi";
      SF Sg Acc => x + "korsaka";
      SF Sg Instr => x + "korsakiem";
      SF Sg Loc => x + "korsaku";
      SF Sg Voc => x + "korsaku";
      SF Pl Nom => x + "Korsakowie";
      SF Pl Gen => x + "korsaków";
      SF Pl Dat => x + "korsakom";
      SF Pl Acc => x + "korsaków";
      SF Pl Instr => x + "korsakami";
      SF Pl Loc => x + "korsakach";
      SF Pl Voc => x + "Korsakowie"
    };

    oper mkNTable0488: Str -> SubstForm => Str; --%
    oper mkNTable0488 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0489: Str -> SubstForm => Str; --%
    oper mkNTable0489 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kostek";
      SF Sg Gen => x + "kostka";
      SF Sg Dat => x + "Kostkowi";
      SF Sg Acc => x + "kostka";
      SF Sg Instr => x + "Kostkiem";
      SF Sg Loc => x + "Kostku";
      SF Sg Voc => x + "Kostku";
      SF Pl Nom => x + "Kostkowie";
      SF Pl Gen => x + "Kostków";
      SF Pl Dat => x + "kostkom";
      SF Pl Acc => x + "Kostków";
      SF Pl Instr => x + "kostkami";
      SF Pl Loc => x + "kostkach";
      SF Pl Voc => x + "Kostkowie"
    };

    oper mkNTable0490: Str -> SubstForm => Str; --%
    oper mkNTable0490 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kostka";
      SF Sg Gen => x + "kostki";
      SF Sg Dat => x + "kostce";
      SF Sg Acc => x + "kostkę";
      SF Sg Instr => x + "kostką";
      SF Sg Loc => x + "kostce";
      SF Sg Voc => x + "kostko";
      SF Pl Nom => x + "Kostkowie";
      SF Pl Gen => x + "Kostków";
      SF Pl Dat => x + "kostkom";
      SF Pl Acc => x + "Kostków";
      SF Pl Instr => x + "kostkami";
      SF Pl Loc => x + "kostkach";
      SF Pl Voc => x + "Kostkowie"
    };

    oper mkNTable0491: Str -> SubstForm => Str; --%
    oper mkNTable0491 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "kostrzewa";
      SF Sg Gen => x + "kostrzewy";
      SF Sg Dat => x + "kostrzewie";
      SF Sg Acc => x + "kostrzewę";
      SF Sg Instr => x + "kostrzewą";
      SF Sg Loc => x + "kostrzewie";
      SF Sg Voc => x + "kostrzewo";
      SF Pl Nom => x + "Kostrzewowie";
      SF Pl Gen => x + "Kostrzewów";
      SF Pl Dat => x + "kostrzewom";
      SF Pl Acc => x + "Kostrzewów";
      SF Pl Instr => x + "kostrzewami";
      SF Pl Loc => x + "kostrzewach";
      SF Pl Voc => x + "Kostrzewowie"
    };

    oper mkNTable0493: Str -> SubstForm => Str; --%
    oper mkNTable0493 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "kot";
      SF Sg Gen => x + "kota";
      SF Sg Dat => x + "kotowi";
      SF Sg Acc => x + "kota";
      SF Sg Instr => x + "kotem";
      SF Sg Loc => x + "kocie";
      SF Sg Voc => x + "kocie";
      SF Pl Nom => x + "Kotowie";
      SF Pl Gen => x + "kotów";
      SF Pl Dat => x + "kotom";
      SF Pl Acc => x + "kotów";
      SF Pl Instr => x + "kotami";
      SF Pl Loc => x + "kotach";
      SF Pl Voc => x + "Kotowie"
    };

    oper mkNTable0494: Str -> SubstForm => Str; --%
    oper mkNTable0494 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kotula";
      SF Sg Gen => x + "kotuli";
      SF Sg Dat => x + "kotuli";
      SF Sg Acc => x + "kotulę";
      SF Sg Instr => x + "kotulą";
      SF Sg Loc => x + "kotuli";
      SF Sg Voc => x + "kotulo";
      SF Pl Nom => x + "Kotulowie";
      SF Pl Gen => x + "Kotulów";
      SF Pl Dat => x + "kotulom";
      SF Pl Acc => x + "Kotulów";
      SF Pl Instr => x + "kotulami";
      SF Pl Loc => x + "kotulach";
      SF Pl Voc => x + "Kotulowie"
    };

    oper mkNTable0495: Str -> SubstForm => Str; --%
    oper mkNTable0495 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kowal";
      SF Sg Gen => x + "kowala";
      SF Sg Dat => x + "kowalowi";
      SF Sg Acc => x + "kowala";
      SF Sg Instr => x + "kowalem";
      SF Sg Loc => x + "kowalu";
      SF Sg Voc => x + "kowalu";
      SF Pl Nom => x + "Kowalowie";
      SF Pl Gen => x + "Kowalów";
      SF Pl Dat => x + "kowalom";
      SF Pl Acc => x + "Kowalów";
      SF Pl Instr => x + "kowalami";
      SF Pl Loc => x + "kowalach";
      SF Pl Voc => x + "Kowalowie"
    };

    oper mkNTable0496: Str -> SubstForm => Str; --%
    oper mkNTable0496 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "kowalik";
      SF Sg Gen => x + "kowalika";
      SF Sg Dat => x + "kowalikowi";
      SF Sg Acc => x + "kowalika";
      SF Sg Instr => x + "kowalikiem";
      SF Sg Loc => x + "kowaliku";
      SF Sg Voc => x + "kowaliku";
      SF Pl Nom => x + "Kowalikowie";
      SF Pl Gen => x + "kowalików";
      SF Pl Dat => x + "kowalikom";
      SF Pl Acc => x + "kowalików";
      SF Pl Instr => x + "kowalikami";
      SF Pl Loc => x + "kowalikach";
      SF Pl Voc => x + "Kowalikowie"
    };

    oper mkNTable0497: Str -> SubstForm => Str; --%
    oper mkNTable0497 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kozaczka";
      SF Sg Gen => x + "kozaczki";
      SF Sg Dat => x + "Kozaczce";
      SF Sg Acc => x + "Kozaczkę";
      SF Sg Instr => x + "Kozaczką";
      SF Sg Loc => x + "Kozaczce";
      SF Sg Voc => x + "Kozaczko";
      SF Pl Nom => x + "kozaczki";
      SF Pl Gen => x + "kozaczek";
      SF Pl Dat => x + "kozaczkom";
      SF Pl Acc => x + "kozaczki";
      SF Pl Instr => x + "kozaczkami";
      SF Pl Loc => x + "kozaczkach";
      SF Pl Voc => x + "kozaczki"
    };

    oper mkNTable0498: Str -> SubstForm => Str; --%
    oper mkNTable0498 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kozioł";
      SF Sg Gen => x + "kozła";
      SF Sg Dat => x + "Kozłowi";
      SF Sg Acc => x + "kozła";
      SF Sg Instr => x + "kozłem";
      SF Sg Loc => x + "koźle";
      SF Sg Voc => x + "koźle";
      SF Pl Nom => x + "Kozłowie";
      SF Pl Gen => x + "kozłów";
      SF Pl Dat => x + "kozłom";
      SF Pl Acc => x + "kozłów";
      SF Pl Instr => x + "kozłami";
      SF Pl Loc => x + "kozłach";
      SF Pl Voc => x + "Kozłowie"
    };

    oper mkNTable0500: Str -> SubstForm => Str; --%
    oper mkNTable0500 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "kołodziej";
      SF Sg Gen => x + "kołodzieja";
      SF Sg Dat => x + "kołodziejowi";
      SF Sg Acc => x + "kołodzieja";
      SF Sg Instr => x + "kołodziejem";
      SF Sg Loc => x + "kołodzieju";
      SF Sg Voc => x + "kołodzieju";
      SF Pl Nom => x + "Kołodziejowie";
      SF Pl Gen => x + "kołodziejów";
      SF Pl Dat => x + "kołodziejom";
      SF Pl Acc => x + "kołodziejów";
      SF Pl Instr => x + "kołodziejami";
      SF Pl Loc => x + "kołodziejach";
      SF Pl Voc => x + "Kołodziejowie"
    };

    oper mkNTable0502: Str -> SubstForm => Str; --%
    oper mkNTable0502 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "krawczyk";
      SF Sg Gen => x + "krawczyka";
      SF Sg Dat => x + "krawczykowi";
      SF Sg Acc => x + "krawczyka";
      SF Sg Instr => x + "krawczykiem";
      SF Sg Loc => x + "krawczyku";
      SF Sg Voc => x + "krawczyku";
      SF Pl Nom => x + "Krawczykowie";
      SF Pl Gen => x + "krawczyków";
      SF Pl Dat => x + "krawczykom";
      SF Pl Acc => x + "krawczyków";
      SF Pl Instr => x + "krawczykami";
      SF Pl Loc => x + "krawczykach";
      SF Pl Voc => x + "Krawczykowie"
    };

    oper mkNTable0503: Str -> SubstForm => Str; --%
    oper mkNTable0503 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "krawiec";
      SF Sg Gen => x + "krawca";
      SF Sg Dat => x + "krawcowi";
      SF Sg Acc => x + "krawca";
      SF Sg Instr => x + "krawcem";
      SF Sg Loc => x + "krawcu";
      SF Sg Voc => x + "krawcu";
      SF Pl Nom => x + "Krawcowie";
      SF Pl Gen => x + "krawców";
      SF Pl Dat => x + "krawcom";
      SF Pl Acc => x + "krawców";
      SF Pl Instr => x + "krawcami";
      SF Pl Loc => x + "krawcach";
      SF Pl Voc => x + "Krawcowie"
    };

    oper mkNTable0504: Str -> SubstForm => Str; --%
    oper mkNTable0504 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kreta";
      SF Sg Gen => x + "krety";
      SF Sg Dat => x + "krecie";
      SF Sg Acc => x + "Kretę";
      SF Sg Instr => x + "Kretą";
      SF Sg Loc => x + "krecie";
      SF Sg Voc => x + "Kreto";
      SF Pl Nom => x + "krety";
      SF Pl Gen => x + "kret";
      SF Pl Dat => x + "kretom";
      SF Pl Acc => x + "krety";
      SF Pl Instr => x + "kretami";
      SF Pl Loc => x + "kretach";
      SF Pl Voc => x + "krety"
    };

    oper mkNTable0505: Str -> SubstForm => Str; --%
    oper mkNTable0505 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iew";
      SF Sg Gen => x + "wi";
      SF Sg Dat => x + "wi";
      SF Sg Acc => x + "iew";
      SF Sg Instr => x + "wią";
      SF Sg Loc => x + "wi";
      SF Sg Voc => x + "wi";
      SF Pl Nom => x + "wie";
      SF Pl Gen => x + "wi";
      SF Pl Dat => x + "wiom";
      SF Pl Acc => x + "wie";
      SF Pl Instr => x + "wiami";
      SF Pl Loc => x + "wiach";
      SF Pl Voc => x + "wie"
    };

    oper mkNTable0506: Str -> SubstForm => Str; --%
    oper mkNTable0506 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "krupa";
      SF Sg Gen => x + "krupy";
      SF Sg Dat => x + "krupie";
      SF Sg Acc => x + "krupę";
      SF Sg Instr => x + "krupą";
      SF Sg Loc => x + "krupie";
      SF Sg Voc => x + "krupo";
      SF Pl Nom => x + "Krupowie";
      SF Pl Gen => x + "krupów";
      SF Pl Dat => x + "krupom";
      SF Pl Acc => x + "krupów";
      SF Pl Instr => x + "krupami";
      SF Pl Loc => x + "krupach";
      SF Pl Voc => x + "Krupowie"
    };

    oper mkNTable0507: Str -> SubstForm => Str; --%
    oper mkNTable0507 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "krupka";
      SF Sg Gen => x + "krupki";
      SF Sg Dat => x + "krupce";
      SF Sg Acc => x + "krupkę";
      SF Sg Instr => x + "krupką";
      SF Sg Loc => x + "krupce";
      SF Sg Voc => x + "krupko";
      SF Pl Nom => x + "Krupkowie";
      SF Pl Gen => x + "Krupków";
      SF Pl Dat => x + "krupkom";
      SF Pl Acc => x + "Krupków";
      SF Pl Instr => x + "krupkami";
      SF Pl Loc => x + "krupkach";
      SF Pl Voc => x + "Krupkowie"
    };

    oper mkNTable0508: Str -> SubstForm => Str; --%
    oper mkNTable0508 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Krystian";
      SF Sg Gen => x + "Krystiana";
      SF Sg Dat => x + "Krystianowi";
      SF Sg Acc => x + "Krystiana";
      SF Sg Instr => x + "Krystianem";
      SF Sg Loc => x + "krystianie";
      SF Sg Voc => x + "krystianie";
      SF Pl Nom => x + "Krystianowie";
      SF Pl Gen => x + "Krystianów";
      SF Pl Dat => x + "Krystianom";
      SF Pl Acc => x + "Krystianów";
      SF Pl Instr => x + "Krystianami";
      SF Pl Loc => x + "Krystianach";
      SF Pl Voc => x + "Krystianowie"
    };

    oper mkNTable0509: Str -> SubstForm => Str; --%
    oper mkNTable0509 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "Krystiana";
      SF Sg Gen => x + "Krystiany";
      SF Sg Dat => x + "krystianie";
      SF Sg Acc => x + "Krystianę";
      SF Sg Instr => x + "Krystianą";
      SF Sg Loc => x + "krystianie";
      SF Sg Voc => x + "Krystiano";
      SF Pl Nom => x + "Krystiany";
      SF Pl Gen => x + "Krystian";
      SF Pl Dat => x + "Krystianom";
      SF Pl Acc => x + "Krystiany";
      SF Pl Instr => x + "Krystianami";
      SF Pl Loc => x + "Krystianach";
      SF Pl Voc => x + "Krystiany"
    };

    oper mkNTable0510: Str -> SubstForm => Str; --%
    oper mkNTable0510 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "krzyżak";
      SF Sg Gen => x + "krzyżaka";
      SF Sg Dat => x + "krzyżakowi";
      SF Sg Acc => x + "krzyżaka";
      SF Sg Instr => x + "krzyżakiem";
      SF Sg Loc => x + "krzyżaku";
      SF Sg Voc => x + "krzyżaku";
      SF Pl Nom => x + "Krzyżacy";
      SF Pl Gen => x + "krzyżaków";
      SF Pl Dat => x + "krzyżakom";
      SF Pl Acc => x + "krzyżaków";
      SF Pl Instr => x + "krzyżakami";
      SF Pl Loc => x + "krzyżakach";
      SF Pl Voc => x + "Krzyżacy"
    };

    oper mkNTable0511: Str -> SubstForm => Str; --%
    oper mkNTable0511 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "ksenia";
      SF Sg Gen => x + "Kseni";
      SF Sg Dat => x + "Kseni";
      SF Sg Acc => x + "ksenię";
      SF Sg Instr => x + "ksenią";
      SF Sg Loc => x + "Kseni";
      SF Sg Voc => x + "Kseniu";
      SF Pl Nom => x + "ksenie";
      SF Pl Gen => x + "Kseń";
      SF Pl Dat => x + "kseniom";
      SF Pl Acc => x + "ksenie";
      SF Pl Instr => x + "kseniami";
      SF Pl Loc => x + "kseniach";
      SF Pl Voc => x + "ksenie"
    };

    oper mkNTable0512: Str -> SubstForm => Str; --%
    oper mkNTable0512 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "książek";
      SF Sg Gen => x + "książka";
      SF Sg Dat => x + "Książkowi";
      SF Sg Acc => x + "książka";
      SF Sg Instr => x + "Książkiem";
      SF Sg Loc => x + "Książku";
      SF Sg Voc => x + "Książku";
      SF Pl Nom => x + "Książkowie";
      SF Pl Gen => x + "Książków";
      SF Pl Dat => x + "książkom";
      SF Pl Acc => x + "Książków";
      SF Pl Instr => x + "książkami";
      SF Pl Loc => x + "książkach";
      SF Pl Voc => x + "Książkowie"
    };

    oper mkNTable0513: Str -> SubstForm => Str; --%
    oper mkNTable0513 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Kuba";
      SF Sg Gen => x + "kuby";
      SF Sg Dat => x + "kubie";
      SF Sg Acc => x + "Kubę";
      SF Sg Instr => x + "Kubą";
      SF Sg Loc => x + "kubie";
      SF Sg Voc => x + "Kubo";
      SF Pl Nom => x + "kuby";
      SF Pl Gen => x + "kub";
      SF Pl Dat => x + "kubom";
      SF Pl Acc => x + "kuby";
      SF Pl Instr => x + "kubami";
      SF Pl Loc => x + "kubach";
      SF Pl Voc => x + "kuby"
    };

    oper mkNTable0514: Str -> SubstForm => Str; --%
    oper mkNTable0514 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Kuba";
      SF Sg Gen => x + "kuby";
      SF Sg Dat => x + "kubie";
      SF Sg Acc => x + "Kubę";
      SF Sg Instr => x + "Kubą";
      SF Sg Loc => x + "kubie";
      SF Sg Voc => x + "Kubo";
      SF Pl Nom => x + "Kubowie";
      SF Pl Gen => x + "kubów";
      SF Pl Dat => x + "kubom";
      SF Pl Acc => x + "kubów";
      SF Pl Instr => x + "kubami";
      SF Pl Loc => x + "kubach";
      SF Pl Voc => x + "Kubowie"
    };

    oper mkNTable0515: Str -> SubstForm => Str; --%
    oper mkNTable0515 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "kucharczyk";
      SF Sg Gen => x + "kucharczyka";
      SF Sg Dat => x + "kucharczykowi";
      SF Sg Acc => x + "kucharczyka";
      SF Sg Instr => x + "kucharczykiem";
      SF Sg Loc => x + "kucharczyku";
      SF Sg Voc => x + "kucharczyku";
      SF Pl Nom => x + "Kucharczykowie";
      SF Pl Gen => x + "kucharczyków";
      SF Pl Dat => x + "kucharczykom";
      SF Pl Acc => x + "kucharczyków";
      SF Pl Instr => x + "kucharczykami";
      SF Pl Loc => x + "kucharczykach";
      SF Pl Voc => x + "Kucharczykowie"
    };

    oper mkNTable0516: Str -> SubstForm => Str; --%
    oper mkNTable0516 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kuczma";
      SF Sg Gen => x + "kuczmy";
      SF Sg Dat => x + "kuczmie";
      SF Sg Acc => x + "kuczmę";
      SF Sg Instr => x + "kuczmą";
      SF Sg Loc => x + "kuczmie";
      SF Sg Voc => x + "kuczmo";
      SF Pl Nom => x + "Kuczmowie";
      SF Pl Gen => x + "Kuczmów";
      SF Pl Dat => x + "kuczmom";
      SF Pl Acc => x + "Kuczmów";
      SF Pl Instr => x + "kuczmami";
      SF Pl Loc => x + "kuczmach";
      SF Pl Voc => x + "Kuczmowie"
    };

    oper mkNTable0517: Str -> SubstForm => Str; --%
    oper mkNTable0517 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kujawiak";
      SF Sg Gen => x + "kujawiaka";
      SF Sg Dat => x + "kujawiakowi";
      SF Sg Acc => x + "kujawiaka";
      SF Sg Instr => x + "kujawiakiem";
      SF Sg Loc => x + "kujawiaku";
      SF Sg Voc => x + "kujawiaku";
      SF Pl Nom => x + "Kujawiacy";
      SF Pl Gen => x + "kujawiaków";
      SF Pl Dat => x + "kujawiakom";
      SF Pl Acc => x + "kujawiaków";
      SF Pl Instr => x + "kujawiakami";
      SF Pl Loc => x + "kujawiakach";
      SF Pl Voc => x + "Kujawiacy"
    };

    oper mkNTable0518: Str -> SubstForm => Str; --%
    oper mkNTable0518 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kula";
      SF Sg Gen => x + "kuli";
      SF Sg Dat => x + "kuli";
      SF Sg Acc => x + "kulę";
      SF Sg Instr => x + "kulą";
      SF Sg Loc => x + "kuli";
      SF Sg Voc => x + "kulo";
      SF Pl Nom => x + "Kulowie";
      SF Pl Gen => x + "Kulów";
      SF Pl Dat => x + "kulom";
      SF Pl Acc => x + "Kulów";
      SF Pl Instr => x + "kulami";
      SF Pl Loc => x + "kulach";
      SF Pl Voc => x + "Kulowie"
    };

    oper mkNTable0519: Str -> SubstForm => Str; --%
    oper mkNTable0519 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kulik";
      SF Sg Gen => x + "kulika";
      SF Sg Dat => x + "kulikowi";
      SF Sg Acc => x + "kulika";
      SF Sg Instr => x + "kulikiem";
      SF Sg Loc => x + "kuliku";
      SF Sg Voc => x + "kuliku";
      SF Pl Nom => x + "Kulikowie";
      SF Pl Gen => x + "kulików";
      SF Pl Dat => x + "kulikom";
      SF Pl Acc => x + "kulików";
      SF Pl Instr => x + "kulikami";
      SF Pl Loc => x + "kulikach";
      SF Pl Voc => x + "Kulikowie"
    };

    oper mkNTable0520: Str -> SubstForm => Str; --%
    oper mkNTable0520 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0521: Str -> SubstForm => Str; --%
    oper mkNTable0521 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kurek";
      SF Sg Gen => x + "kurka";
      SF Sg Dat => x + "kurkowi";
      SF Sg Acc => x + "kurka";
      SF Sg Instr => x + "kurkiem";
      SF Sg Loc => x + "kurku";
      SF Sg Voc => x + "kurku";
      SF Pl Nom => x + "Kurkowie";
      SF Pl Gen => x + "kurków";
      SF Pl Dat => x + "kurkom";
      SF Pl Acc => x + "kurków";
      SF Pl Instr => x + "kurkami";
      SF Pl Loc => x + "kurkach";
      SF Pl Voc => x + "Kurkowie"
    };

    oper mkNTable0522: Str -> SubstForm => Str; --%
    oper mkNTable0522 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "ia";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "iów";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "iów";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0523: Str -> SubstForm => Str; --%
    oper mkNTable0523 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zna";
      SF Sg Gen => x + "zny";
      SF Sg Dat => x + "źnie";
      SF Sg Acc => x + "znę";
      SF Sg Instr => x + "zną";
      SF Sg Loc => x + "źnie";
      SF Sg Voc => x + "zno";
      SF Pl Nom => x + "zny";
      SF Pl Gen => x + "zn";
      SF Pl Dat => x + "znom";
      SF Pl Acc => x + "zny";
      SF Pl Instr => x + "znami";
      SF Pl Loc => x + "znach";
      SF Pl Voc => x + "zny"
    };

    oper mkNTable0525: Str -> SubstForm => Str; --%
    oper mkNTable0525 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kwiecień";
      SF Sg Gen => x + "kwietnia";
      SF Sg Dat => x + "kwietniowi";
      SF Sg Acc => x + "kwietnia";
      SF Sg Instr => x + "kwietniem";
      SF Sg Loc => x + "kwietniu";
      SF Sg Voc => x + "kwietniu";
      SF Pl Nom => x + "Kwietniowie";
      SF Pl Gen => x + "kwietniów";
      SF Pl Dat => x + "kwietniom";
      SF Pl Acc => x + "kwietniów";
      SF Pl Instr => x + "kwietniami";
      SF Pl Loc => x + "kwietniach";
      SF Pl Voc => x + "Kwietniowie"
    };

    oper mkNTable0526: Str -> SubstForm => Str; --%
    oper mkNTable0526 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kłos";
      SF Sg Gen => x + "kłosa";
      SF Sg Dat => x + "kłosowi";
      SF Sg Acc => x + "kłosa";
      SF Sg Instr => x + "kłosem";
      SF Sg Loc => x + "kłosie";
      SF Sg Voc => x + "kłosie";
      SF Pl Nom => x + "Kłosowie";
      SF Pl Gen => x + "kłosów";
      SF Pl Dat => x + "kłosom";
      SF Pl Acc => x + "kłosów";
      SF Pl Instr => x + "kłosami";
      SF Pl Loc => x + "kłosach";
      SF Pl Voc => x + "Kłosowie"
    };

    oper mkNTable0527: Str -> SubstForm => Str; --%
    oper mkNTable0527 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kępa";
      SF Sg Gen => x + "kępy";
      SF Sg Dat => x + "kępie";
      SF Sg Acc => x + "kępę";
      SF Sg Instr => x + "kępą";
      SF Sg Loc => x + "kępie";
      SF Sg Voc => x + "kępo";
      SF Pl Nom => x + "Kępowie";
      SF Pl Gen => x + "Kępów";
      SF Pl Dat => x + "kępom";
      SF Pl Acc => x + "Kępów";
      SF Pl Instr => x + "kępami";
      SF Pl Loc => x + "kępach";
      SF Pl Voc => x + "Kępowie"
    };

    oper mkNTable0528: Str -> SubstForm => Str; --%
    oper mkNTable0528 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "lach";
      SF Sg Gen => x + "lacha";
      SF Sg Dat => x + "Lachowi";
      SF Sg Acc => x + "lacha";
      SF Sg Instr => x + "Lachem";
      SF Sg Loc => x + "Lachu";
      SF Sg Voc => x + "Lachu";
      SF Pl Nom => x + "Lachowie";
      SF Pl Gen => x + "Lachów";
      SF Pl Dat => x + "lachom";
      SF Pl Acc => x + "Lachów";
      SF Pl Instr => x + "lachami";
      SF Pl Loc => x + "lachach";
      SF Pl Voc => x + "Lachowie"
    };

    oper mkNTable0529: Str -> SubstForm => Str; --%
    oper mkNTable0529 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "lambert";
      SF Sg Gen => x + "lamberta";
      SF Sg Dat => x + "lambertowi";
      SF Sg Acc => x + "lamberta";
      SF Sg Instr => x + "lambertem";
      SF Sg Loc => x + "lambercie";
      SF Sg Voc => x + "lambercie";
      SF Pl Nom => x + "Lambertowie";
      SF Pl Gen => x + "lambertów";
      SF Pl Dat => x + "lambertom";
      SF Pl Acc => x + "lambertów";
      SF Pl Instr => x + "lambertami";
      SF Pl Loc => x + "lambertach";
      SF Pl Voc => x + "Lambertowie"
    };

    oper mkNTable0531: Str -> SubstForm => Str; --%
    oper mkNTable0531 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "lato";
      SF Sg Gen => x + "laty";
      SF Sg Dat => x + "Lacie";
      SF Sg Acc => x + "Latę";
      SF Sg Instr => x + "Latą";
      SF Sg Loc => x + "Lacie";
      SF Sg Voc => x + "lato";
      SF Pl Nom => x + "Latowie";
      SF Pl Gen => x + "Latów";
      SF Pl Dat => x + "latom";
      SF Pl Acc => x + "Latów";
      SF Pl Instr => x + "latami";
      SF Pl Loc => x + "latach";
      SF Pl Voc => x + "Latowie"
    };

    oper mkNTable0532: Str -> SubstForm => Str; --%
    oper mkNTable0532 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Laura";
      SF Sg Gen => x + "laury";
      SF Sg Dat => x + "laurze";
      SF Sg Acc => x + "Laurę";
      SF Sg Instr => x + "Laurą";
      SF Sg Loc => x + "laurze";
      SF Sg Voc => x + "Lauro";
      SF Pl Nom => x + "laury";
      SF Pl Gen => x + "laur";
      SF Pl Dat => x + "laurom";
      SF Pl Acc => x + "laury";
      SF Pl Instr => x + "laurami";
      SF Pl Loc => x + "laurach";
      SF Pl Voc => x + "laury"
    };

    oper mkNTable0533: Str -> SubstForm => Str; --%
    oper mkNTable0533 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Lea";
      SF Sg Gen => x + "lei";
      SF Sg Dat => x + "lei";
      SF Sg Acc => x + "Leę";
      SF Sg Instr => x + "Leą";
      SF Sg Loc => x + "lei";
      SF Sg Voc => x + "Leo";
      SF Pl Nom => x + "Lee";
      SF Pl Gen => x + "lei";
      SF Pl Dat => x + "Leom";
      SF Pl Acc => x + "Lee";
      SF Pl Instr => x + "Leami";
      SF Pl Loc => x + "Leach";
      SF Pl Voc => x + "Lee"
    };

    oper mkNTable0534: Str -> SubstForm => Str; --%
    oper mkNTable0534 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Lena";
      SF Sg Gen => x + "Leny";
      SF Sg Dat => x + "lenie";
      SF Sg Acc => x + "Lenę";
      SF Sg Instr => x + "Leną";
      SF Sg Loc => x + "lenie";
      SF Sg Voc => x + "Leno";
      SF Pl Nom => x + "Leny";
      SF Pl Gen => x + "len";
      SF Pl Dat => x + "Lenom";
      SF Pl Acc => x + "Leny";
      SF Pl Instr => x + "Lenami";
      SF Pl Loc => x + "Lenach";
      SF Pl Voc => x + "Leny"
    };

    oper mkNTable0535: Str -> SubstForm => Str; --%
    oper mkNTable0535 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "m";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0536: Str -> SubstForm => Str; --%
    oper mkNTable0536 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nia";
      SF Sg Gen => x + "nii";
      SF Sg Dat => x + "nii";
      SF Sg Acc => x + "nię";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "nii";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0537: Str -> SubstForm => Str; --%
    oper mkNTable0537 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "leonid";
      SF Sg Gen => x + "Leonida";
      SF Sg Dat => x + "Leonidowi";
      SF Sg Acc => x + "Leonida";
      SF Sg Instr => x + "Leonidem";
      SF Sg Loc => x + "Leonidzie";
      SF Sg Voc => x + "Leonidzie";
      SF Pl Nom => x + "Leonidowie";
      SF Pl Gen => x + "leonidów";
      SF Pl Dat => x + "leonidom";
      SF Pl Acc => x + "leonidów";
      SF Pl Instr => x + "leonidami";
      SF Pl Loc => x + "leonidach";
      SF Pl Voc => x + "Leonidowie"
    };

    oper mkNTable0538: Str -> SubstForm => Str; --%
    oper mkNTable0538 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "lew";
      SF Sg Gen => x + "lwa";
      SF Sg Dat => x + "lwu";
      SF Sg Acc => x + "lwa";
      SF Sg Instr => x + "lwem";
      SF Sg Loc => x + "lwie";
      SF Sg Voc => x + "lwie";
      SF Pl Nom => x + "Lwowie";
      SF Pl Gen => x + "lwów";
      SF Pl Dat => x + "lwom";
      SF Pl Acc => x + "lwów";
      SF Pl Instr => x + "lwami";
      SF Pl Loc => x + "lwach";
      SF Pl Voc => x + "Lwowie"
    };

    oper mkNTable0539: Str -> SubstForm => Str; --%
    oper mkNTable0539 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ew";
      SF Sg Gen => x + "wa";
      SF Sg Dat => x + "wu";
      SF Sg Acc => x + "wa";
      SF Sg Instr => x + "wem";
      SF Sg Loc => x + "wie";
      SF Sg Voc => x + "wie";
      SF Pl Nom => x + "wy";
      SF Pl Gen => x + "wów";
      SF Pl Dat => x + "wom";
      SF Pl Acc => x + "wy";
      SF Pl Instr => x + "wami";
      SF Pl Loc => x + "wach";
      SF Pl Voc => x + "wy"
    };

    oper mkNTable0540: Str -> SubstForm => Str; --%
    oper mkNTable0540 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "lewant";
      SF Sg Gen => x + "Lewantu";
      SF Sg Dat => x + "lewantowi";
      SF Sg Acc => x + "lewant";
      SF Sg Instr => x + "lewantem";
      SF Sg Loc => x + "lewancie";
      SF Sg Voc => x + "lewancie";
      SF Pl Nom => x + "lewanty";
      SF Pl Gen => x + "lewantów";
      SF Pl Dat => x + "lewantom";
      SF Pl Acc => x + "lewanty";
      SF Pl Instr => x + "lewantami";
      SF Pl Loc => x + "lewantach";
      SF Pl Voc => x + "lewanty"
    };

    oper mkNTable0541: Str -> SubstForm => Str; --%
    oper mkNTable0541 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Lewis";
      SF Sg Gen => x + "Lewisa";
      SF Sg Dat => x + "Lewisowi";
      SF Sg Acc => x + "Lewisa";
      SF Sg Instr => x + "Lewisem";
      SF Sg Loc => x + "Lewisie";
      SF Sg Voc => x + "Lewisie";
      SF Pl Nom => x + "Lewisowie";
      SF Pl Gen => x + "lewisów";
      SF Pl Dat => x + "lewisom";
      SF Pl Acc => x + "lewisów";
      SF Pl Instr => x + "lewisami";
      SF Pl Loc => x + "lewisach";
      SF Pl Voc => x + "Lewisowie"
    };

    oper mkNTable0542: Str -> SubstForm => Str; --%
    oper mkNTable0542 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Leś";
      SF Sg Gen => x + "Lesia";
      SF Sg Dat => x + "Lesiowi";
      SF Sg Acc => x + "Lesia";
      SF Sg Instr => x + "Lesiem";
      SF Sg Loc => x + "Lesiu";
      SF Sg Voc => x + "Lesiu";
      SF Pl Nom => x + "lesie";
      SF Pl Gen => x + "Lesiów";
      SF Pl Dat => x + "Lesiom";
      SF Pl Acc => x + "Lesiów";
      SF Pl Instr => x + "Lesiami";
      SF Pl Loc => x + "Lesiach";
      SF Pl Voc => x + "lesie"
    };

    oper mkNTable0543: Str -> SubstForm => Str; --%
    oper mkNTable0543 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Lida";
      SF Sg Gen => x + "lidy";
      SF Sg Dat => x + "lidzie";
      SF Sg Acc => x + "Lidę";
      SF Sg Instr => x + "Lidą";
      SF Sg Loc => x + "lidzie";
      SF Sg Voc => x + "lido";
      SF Pl Nom => x + "lidy";
      SF Pl Gen => x + "lid";
      SF Pl Dat => x + "lidom";
      SF Pl Acc => x + "lidy";
      SF Pl Instr => x + "lidami";
      SF Pl Loc => x + "lidach";
      SF Pl Voc => x + "lidy"
    };

    oper mkNTable0544: Str -> SubstForm => Str; --%
    oper mkNTable0544 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Lidzia";
      SF Sg Gen => x + "Lidzi";
      SF Sg Dat => x + "Lidzi";
      SF Sg Acc => x + "Lidzię";
      SF Sg Instr => x + "Lidzią";
      SF Sg Loc => x + "Lidzi";
      SF Sg Voc => x + "Lidziu";
      SF Pl Nom => x + "lidzie";
      SF Pl Gen => x + "Lidź";
      SF Pl Dat => x + "Lidziom";
      SF Pl Acc => x + "lidzie";
      SF Pl Instr => x + "Lidziami";
      SF Pl Loc => x + "Lidziach";
      SF Pl Voc => x + "lidzie"
    };

    oper mkNTable0545: Str -> SubstForm => Str; --%
    oper mkNTable0545 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "lincoln";
      SF Sg Gen => x + "lincolna";
      SF Sg Dat => x + "lincolnowi";
      SF Sg Acc => x + "lincolna";
      SF Sg Instr => x + "lincolnem";
      SF Sg Loc => x + "lincolnie";
      SF Sg Voc => x + "lincolnie";
      SF Pl Nom => x + "Lincolnowie";
      SF Pl Gen => x + "lincolnów";
      SF Pl Dat => x + "lincolnom";
      SF Pl Acc => x + "lincolnów";
      SF Pl Instr => x + "lincolnami";
      SF Pl Loc => x + "lincolnach";
      SF Pl Voc => x + "Lincolnowie"
    };

    oper mkNTable0548: Str -> SubstForm => Str; --%
    oper mkNTable0548 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "lipiec";
      SF Sg Gen => x + "lipca";
      SF Sg Dat => x + "lipcowi";
      SF Sg Acc => x + "lipca";
      SF Sg Instr => x + "lipcem";
      SF Sg Loc => x + "lipcu";
      SF Sg Voc => x + "lipcu";
      SF Pl Nom => x + "Lipcowie";
      SF Pl Gen => x + "lipców";
      SF Pl Dat => x + "lipcom";
      SF Pl Acc => x + "lipców";
      SF Pl Instr => x + "lipcami";
      SF Pl Loc => x + "lipcach";
      SF Pl Voc => x + "Lipcowie"
    };

    oper mkNTable0549: Str -> SubstForm => Str; --%
    oper mkNTable0549 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "lis";
      SF Sg Gen => x + "lisa";
      SF Sg Dat => x + "lisowi";
      SF Sg Acc => x + "lisa";
      SF Sg Instr => x + "lisem";
      SF Sg Loc => x + "lisie";
      SF Sg Voc => x + "lisie";
      SF Pl Nom => x + "Lisowie";
      SF Pl Gen => x + "lisów";
      SF Pl Dat => x + "lisom";
      SF Pl Acc => x + "lisów";
      SF Pl Instr => x + "lisami";
      SF Pl Loc => x + "lisach";
      SF Pl Voc => x + "Lisowie"
    };

    oper mkNTable0550: Str -> SubstForm => Str; --%
    oper mkNTable0550 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "lisa";
      SF Sg Gen => x + "lisy";
      SF Sg Dat => x + "lisie";
      SF Sg Acc => x + "Lisę";
      SF Sg Instr => x + "Lisą";
      SF Sg Loc => x + "lisie";
      SF Sg Voc => x + "Liso";
      SF Pl Nom => x + "lisy";
      SF Pl Gen => x + "lis";
      SF Pl Dat => x + "lisom";
      SF Pl Acc => x + "lisy";
      SF Pl Instr => x + "lisami";
      SF Pl Loc => x + "lisach";
      SF Pl Voc => x + "lisy"
    };

    oper mkNTable0552: Str -> SubstForm => Str; --%
    oper mkNTable0552 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "lorenc";
      SF Sg Gen => x + "lorenca";
      SF Sg Dat => x + "lorencowi";
      SF Sg Acc => x + "lorenca";
      SF Sg Instr => x + "lorencem";
      SF Sg Loc => x + "lorencu";
      SF Sg Voc => x + "lorencu";
      SF Pl Nom => x + "Lorencowie";
      SF Pl Gen => x + "lorenców";
      SF Pl Dat => x + "lorencom";
      SF Pl Acc => x + "lorenców";
      SF Pl Instr => x + "lorencami";
      SF Pl Loc => x + "lorencach";
      SF Pl Voc => x + "Lorencowie"
    };

    oper mkNTable0553: Str -> SubstForm => Str; --%
    oper mkNTable0553 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "ludka";
      SF Sg Gen => x + "ludki";
      SF Sg Dat => x + "Ludce";
      SF Sg Acc => x + "Ludkę";
      SF Sg Instr => x + "Ludką";
      SF Sg Loc => x + "Ludce";
      SF Sg Voc => x + "Ludko";
      SF Pl Nom => x + "ludki";
      SF Pl Gen => x + "ludek";
      SF Pl Dat => x + "ludkom";
      SF Pl Acc => x + "ludki";
      SF Pl Instr => x + "ludkami";
      SF Pl Loc => x + "ludkach";
      SF Pl Voc => x + "ludki"
    };

    oper mkNTable0554: Str -> SubstForm => Str; --%
    oper mkNTable0554 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "ludwik";
      SF Sg Gen => x + "ludwika";
      SF Sg Dat => x + "ludwikowi";
      SF Sg Acc => x + "ludwika";
      SF Sg Instr => x + "ludwikiem";
      SF Sg Loc => x + "ludwiku";
      SF Sg Voc => x + "ludwiku";
      SF Pl Nom => x + "Ludwikowie";
      SF Pl Gen => x + "ludwików";
      SF Pl Dat => x + "ludwikom";
      SF Pl Acc => x + "ludwików";
      SF Pl Instr => x + "ludwikami";
      SF Pl Loc => x + "ludwikach";
      SF Pl Voc => x + "Ludwikowie"
    };

    oper mkNTable0555: Str -> SubstForm => Str; --%
    oper mkNTable0555 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "ludwika";
      SF Sg Gen => x + "ludwiki";
      SF Sg Dat => x + "Ludwice";
      SF Sg Acc => x + "Ludwikę";
      SF Sg Instr => x + "Ludwiką";
      SF Sg Loc => x + "Ludwice";
      SF Sg Voc => x + "Ludwiko";
      SF Pl Nom => x + "ludwiki";
      SF Pl Gen => x + "ludwik";
      SF Pl Dat => x + "ludwikom";
      SF Pl Acc => x + "ludwiki";
      SF Pl Instr => x + "ludwikami";
      SF Pl Loc => x + "ludwikach";
      SF Pl Voc => x + "ludwiki"
    };

    oper mkNTable0557: Str -> SubstForm => Str; --%
    oper mkNTable0557 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "lynch";
      SF Sg Gen => x + "Lyncha";
      SF Sg Dat => x + "lynchowi";
      SF Sg Acc => x + "Lyncha";
      SF Sg Instr => x + "lynchem";
      SF Sg Loc => x + "lynchu";
      SF Sg Voc => x + "lynchu";
      SF Pl Nom => x + "Lynchowie";
      SF Pl Gen => x + "lynchów";
      SF Pl Dat => x + "lynchom";
      SF Pl Acc => x + "lynchów";
      SF Pl Instr => x + "lynchami";
      SF Pl Loc => x + "lynchach";
      SF Pl Voc => x + "Lynchowie"
    };

    oper mkNTable0558: Str -> SubstForm => Str; --%
    oper mkNTable0558 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "-u";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "-u";
      SF Sg Voc => x + "-u";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0560: Str -> SubstForm => Str; --%
    oper mkNTable0560 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "maciek";
      SF Sg Gen => x + "maćka";
      SF Sg Dat => x + "maćkowi";
      SF Sg Acc => x + "maćka";
      SF Sg Instr => x + "maćkiem";
      SF Sg Loc => x + "maćku";
      SF Sg Voc => x + "maćku";
      SF Pl Nom => x + "Maćkowie";
      SF Pl Gen => x + "maćków";
      SF Pl Dat => x + "maćkom";
      SF Pl Acc => x + "maćków";
      SF Pl Instr => x + "maćkami";
      SF Pl Loc => x + "maćkach";
      SF Pl Voc => x + "Maćkowie"
    };

    oper mkNTable0561: Str -> SubstForm => Str; --%
    oper mkNTable0561 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "maczek";
      SF Sg Gen => x + "maczka";
      SF Sg Dat => x + "maczkowi";
      SF Sg Acc => x + "maczka";
      SF Sg Instr => x + "maczkiem";
      SF Sg Loc => x + "maczku";
      SF Sg Voc => x + "maczku";
      SF Pl Nom => x + "Maczkowie";
      SF Pl Gen => x + "maczków";
      SF Pl Dat => x + "maczkom";
      SF Pl Acc => x + "maczków";
      SF Pl Instr => x + "maczkami";
      SF Pl Loc => x + "maczkach";
      SF Pl Voc => x + "Maczkowie"
    };

    oper mkNTable0562: Str -> SubstForm => Str; --%
    oper mkNTable0562 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Madzia";
      SF Sg Gen => x + "Madzi";
      SF Sg Dat => x + "Madzi";
      SF Sg Acc => x + "Madzię";
      SF Sg Instr => x + "Madzią";
      SF Sg Loc => x + "Madzi";
      SF Sg Voc => x + "Madziu";
      SF Pl Nom => x + "madzie";
      SF Pl Gen => x + "Madź";
      SF Pl Dat => x + "Madziom";
      SF Pl Acc => x + "madzie";
      SF Pl Instr => x + "Madziami";
      SF Pl Loc => x + "Madziach";
      SF Pl Voc => x + "madzie"
    };

    oper mkNTable0563: Str -> SubstForm => Str; --%
    oper mkNTable0563 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "magiera";
      SF Sg Gen => x + "magiery";
      SF Sg Dat => x + "magierze";
      SF Sg Acc => x + "magierę";
      SF Sg Instr => x + "magierą";
      SF Sg Loc => x + "magierze";
      SF Sg Voc => x + "magiero";
      SF Pl Nom => x + "Magierowie";
      SF Pl Gen => x + "Magierów";
      SF Pl Dat => x + "magierom";
      SF Pl Acc => x + "Magierów";
      SF Pl Instr => x + "magierami";
      SF Pl Loc => x + "magierach";
      SF Pl Voc => x + "Magierowie"
    };

    oper mkNTable0564: Str -> SubstForm => Str; --%
    oper mkNTable0564 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "maj";
      SF Sg Gen => x + "maja";
      SF Sg Dat => x + "majowi";
      SF Sg Acc => x + "maja";
      SF Sg Instr => x + "majem";
      SF Sg Loc => x + "maju";
      SF Sg Voc => x + "maju";
      SF Pl Nom => x + "Majowie";
      SF Pl Gen => x + "majów";
      SF Pl Dat => x + "majom";
      SF Pl Acc => x + "majów";
      SF Pl Instr => x + "majami";
      SF Pl Loc => x + "majach";
      SF Pl Voc => x + "Majowie"
    };

    oper mkNTable0565: Str -> SubstForm => Str; --%
    oper mkNTable0565 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "maja";
      SF Sg Gen => x + "mai";
      SF Sg Dat => x + "mai";
      SF Sg Acc => x + "maję";
      SF Sg Instr => x + "mają";
      SF Sg Loc => x + "mai";
      SF Sg Voc => x + "majo";
      SF Pl Nom => x + "Majowie";
      SF Pl Gen => x + "majów";
      SF Pl Dat => x + "majom";
      SF Pl Acc => x + "majów";
      SF Pl Instr => x + "majami";
      SF Pl Loc => x + "majach";
      SF Pl Voc => x + "Majowie"
    };

    oper mkNTable0566: Str -> SubstForm => Str; --%
    oper mkNTable0566 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "maks";
      SF Sg Gen => x + "maksa";
      SF Sg Dat => x + "maksowi";
      SF Sg Acc => x + "maksa";
      SF Sg Instr => x + "maksem";
      SF Sg Loc => x + "maksie";
      SF Sg Voc => x + "maksie";
      SF Pl Nom => x + "Maksowie";
      SF Pl Gen => x + "maksów";
      SF Pl Dat => x + "maksom";
      SF Pl Acc => x + "maksów";
      SF Pl Instr => x + "maksami";
      SF Pl Loc => x + "maksach";
      SF Pl Voc => x + "Maksowie"
    };

    oper mkNTable0567: Str -> SubstForm => Str; --%
    oper mkNTable0567 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "maksym";
      SF Sg Gen => x + "maksyma";
      SF Sg Dat => x + "Maksymowi";
      SF Sg Acc => x + "maksyma";
      SF Sg Instr => x + "Maksymem";
      SF Sg Loc => x + "maksymie";
      SF Sg Voc => x + "maksymie";
      SF Pl Nom => x + "Maksymowie";
      SF Pl Gen => x + "Maksymów";
      SF Pl Dat => x + "maksymom";
      SF Pl Acc => x + "Maksymów";
      SF Pl Instr => x + "maksymami";
      SF Pl Loc => x + "maksymach";
      SF Pl Voc => x + "Maksymowie"
    };

    oper mkNTable0568: Str -> SubstForm => Str; --%
    oper mkNTable0568 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0570: Str -> SubstForm => Str; --%
    oper mkNTable0570 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "malec";
      SF Sg Gen => x + "malca";
      SF Sg Dat => x + "malcowi";
      SF Sg Acc => x + "malca";
      SF Sg Instr => x + "malcem";
      SF Sg Loc => x + "malcu";
      SF Sg Voc => x + "malcu";
      SF Pl Nom => x + "Malcowie";
      SF Pl Gen => x + "malców";
      SF Pl Dat => x + "malcom";
      SF Pl Acc => x + "malców";
      SF Pl Instr => x + "malcami";
      SF Pl Loc => x + "malcach";
      SF Pl Voc => x + "Malcowie"
    };

    oper mkNTable0571: Str -> SubstForm => Str; --%
    oper mkNTable0571 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "mania";
      SF Sg Gen => x + "mani";
      SF Sg Dat => x + "mani";
      SF Sg Acc => x + "manię";
      SF Sg Instr => x + "manią";
      SF Sg Loc => x + "mani";
      SF Sg Voc => x + "Maniu";
      SF Pl Nom => x + "manie";
      SF Pl Gen => x + "Mań";
      SF Pl Dat => x + "maniom";
      SF Pl Acc => x + "manie";
      SF Pl Instr => x + "maniami";
      SF Pl Loc => x + "maniach";
      SF Pl Voc => x + "manie"
    };

    oper mkNTable0572: Str -> SubstForm => Str; --%
    oper mkNTable0572 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "mann";
      SF Sg Gen => x + "manna";
      SF Sg Dat => x + "Mannowi";
      SF Sg Acc => x + "manna";
      SF Sg Instr => x + "Mannem";
      SF Sg Loc => x + "mannie";
      SF Sg Voc => x + "mannie";
      SF Pl Nom => x + "Mannowie";
      SF Pl Gen => x + "Mannów";
      SF Pl Dat => x + "mannom";
      SF Pl Acc => x + "Mannów";
      SF Pl Instr => x + "mannami";
      SF Pl Loc => x + "mannach";
      SF Pl Voc => x + "Mannowie"
    };

    oper mkNTable0573: Str -> SubstForm => Str; --%
    oper mkNTable0573 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0574: Str -> SubstForm => Str; --%
    oper mkNTable0574 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "marcelin";
      SF Sg Gen => x + "marcelina";
      SF Sg Dat => x + "Marcelinowi";
      SF Sg Acc => x + "marcelina";
      SF Sg Instr => x + "Marcelinem";
      SF Sg Loc => x + "marcelinie";
      SF Sg Voc => x + "marcelinie";
      SF Pl Nom => x + "Marcelinowie";
      SF Pl Gen => x + "Marcelinów";
      SF Pl Dat => x + "marcelinom";
      SF Pl Acc => x + "Marcelinów";
      SF Pl Instr => x + "marcelinami";
      SF Pl Loc => x + "marcelinach";
      SF Pl Voc => x + "Marcelinowie"
    };

    oper mkNTable0575: Str -> SubstForm => Str; --%
    oper mkNTable0575 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "marcelin";
      SF Sg Gen => x + "marcelina";
      SF Sg Dat => x + "Marcelinowi";
      SF Sg Acc => x + "marcelin";
      SF Sg Instr => x + "Marcelinem";
      SF Sg Loc => x + "marcelinie";
      SF Sg Voc => x + "marcelinie";
      SF Pl Nom => x + "marceliny";
      SF Pl Gen => x + "Marcelinów";
      SF Pl Dat => x + "marcelinom";
      SF Pl Acc => x + "marceliny";
      SF Pl Instr => x + "marcelinami";
      SF Pl Loc => x + "marcelinach";
      SF Pl Voc => x + "marceliny"
    };

    oper mkNTable0576: Str -> SubstForm => Str; --%
    oper mkNTable0576 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "marcinek";
      SF Sg Gen => x + "marcinka";
      SF Sg Dat => x + "marcinkowi";
      SF Sg Acc => x + "marcinka";
      SF Sg Instr => x + "marcinkiem";
      SF Sg Loc => x + "marcinku";
      SF Sg Voc => x + "marcinku";
      SF Pl Nom => x + "Marcinkowie";
      SF Pl Gen => x + "marcinków";
      SF Pl Dat => x + "marcinkom";
      SF Pl Acc => x + "marcinków";
      SF Pl Instr => x + "marcinkami";
      SF Pl Loc => x + "marcinkach";
      SF Pl Voc => x + "Marcinkowie"
    };

    oper mkNTable0577: Str -> SubstForm => Str; --%
    oper mkNTable0577 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Marco";
      SF Sg Gen => x + "marca";
      SF Sg Dat => x + "marcowi";
      SF Sg Acc => x + "marca";
      SF Sg Instr => x + "markiem";
      SF Sg Loc => x + "marcu";
      SF Sg Voc => x + "Marco";
      SF Pl Nom => x + "Marcowie";
      SF Pl Gen => x + "marców";
      SF Pl Dat => x + "marcom";
      SF Pl Acc => x + "marców";
      SF Pl Instr => x + "marcami";
      SF Pl Loc => x + "marcach";
      SF Pl Voc => x + "Marcowie"
    };

    oper mkNTable0578: Str -> SubstForm => Str; --%
    oper mkNTable0578 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "marczak";
      SF Sg Gen => x + "marczaka";
      SF Sg Dat => x + "marczakowi";
      SF Sg Acc => x + "marczaka";
      SF Sg Instr => x + "marczakiem";
      SF Sg Loc => x + "marczaku";
      SF Sg Voc => x + "marczaku";
      SF Pl Nom => x + "Marczakowie";
      SF Pl Gen => x + "marczaków";
      SF Pl Dat => x + "marczakom";
      SF Pl Acc => x + "marczaków";
      SF Pl Instr => x + "marczakami";
      SF Pl Loc => x + "marczakach";
      SF Pl Voc => x + "Marczakowie"
    };

    oper mkNTable0579: Str -> SubstForm => Str; --%
    oper mkNTable0579 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "marek";
      SF Sg Gen => x + "marka";
      SF Sg Dat => x + "markowi";
      SF Sg Acc => x + "marka";
      SF Sg Instr => x + "markiem";
      SF Sg Loc => x + "marku";
      SF Sg Voc => x + "marku";
      SF Pl Nom => x + "Markowie";
      SF Pl Gen => x + "marków";
      SF Pl Dat => x + "markom";
      SF Pl Acc => x + "marków";
      SF Pl Instr => x + "markami";
      SF Pl Loc => x + "markach";
      SF Pl Voc => x + "Markowie"
    };

    oper mkNTable0580: Str -> SubstForm => Str; --%
    oper mkNTable0580 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "marian";
      SF Sg Gen => x + "Mariana";
      SF Sg Dat => x + "Marianowi";
      SF Sg Acc => x + "Mariana";
      SF Sg Instr => x + "Marianem";
      SF Sg Loc => x + "marianie";
      SF Sg Voc => x + "marianie";
      SF Pl Nom => x + "Marianowie";
      SF Pl Gen => x + "marianów";
      SF Pl Dat => x + "marianom";
      SF Pl Acc => x + "marianów";
      SF Pl Instr => x + "marianami";
      SF Pl Loc => x + "marianach";
      SF Pl Voc => x + "Marianowie"
    };

    oper mkNTable0581: Str -> SubstForm => Str; --%
    oper mkNTable0581 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Marr";
      SF Sg Gen => x + "Marra";
      SF Sg Dat => x + "Marrowi";
      SF Sg Acc => x + "Marra";
      SF Sg Instr => x + "Marrem";
      SF Sg Loc => x + "marze";
      SF Sg Voc => x + "marze";
      SF Pl Nom => x + "Marrowie";
      SF Pl Gen => x + "Marrów";
      SF Pl Dat => x + "Marrom";
      SF Pl Acc => x + "Marrów";
      SF Pl Instr => x + "Marrami";
      SF Pl Loc => x + "Marrach";
      SF Pl Voc => x + "Marrowie"
    };

    oper mkNTable0583: Str -> SubstForm => Str; --%
    oper mkNTable0583 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Marta";
      SF Sg Gen => x + "Marty";
      SF Sg Dat => x + "marcie";
      SF Sg Acc => x + "Martę";
      SF Sg Instr => x + "Martą";
      SF Sg Loc => x + "marcie";
      SF Sg Voc => x + "Marto";
      SF Pl Nom => x + "Marty";
      SF Pl Gen => x + "Mart";
      SF Pl Dat => x + "Martom";
      SF Pl Acc => x + "Marty";
      SF Pl Instr => x + "Martami";
      SF Pl Loc => x + "Martach";
      SF Pl Voc => x + "Marty"
    };

    oper mkNTable0584: Str -> SubstForm => Str; --%
    oper mkNTable0584 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "martin";
      SF Sg Gen => x + "martina";
      SF Sg Dat => x + "martinowi";
      SF Sg Acc => x + "martina";
      SF Sg Instr => x + "martinem";
      SF Sg Loc => x + "martinie";
      SF Sg Voc => x + "martinie";
      SF Pl Nom => x + "Martinowie";
      SF Pl Gen => x + "martinów";
      SF Pl Dat => x + "martinom";
      SF Pl Acc => x + "martinów";
      SF Pl Instr => x + "martinami";
      SF Pl Loc => x + "martinach";
      SF Pl Voc => x + "Martinowie"
    };

    oper mkNTable0585: Str -> SubstForm => Str; --%
    oper mkNTable0585 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "marzec";
      SF Sg Gen => x + "marca";
      SF Sg Dat => x + "marcowi";
      SF Sg Acc => x + "marca";
      SF Sg Instr => x + "marcem";
      SF Sg Loc => x + "marcu";
      SF Sg Voc => x + "marcu";
      SF Pl Nom => x + "Marcowie";
      SF Pl Gen => x + "marców";
      SF Pl Dat => x + "marcom";
      SF Pl Acc => x + "marców";
      SF Pl Instr => x + "marcami";
      SF Pl Loc => x + "marcach";
      SF Pl Voc => x + "Marcowie"
    };

    oper mkNTable0586: Str -> SubstForm => Str; --%
    oper mkNTable0586 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Marzena";
      SF Sg Gen => x + "Marzeny";
      SF Sg Dat => x + "marzenie";
      SF Sg Acc => x + "Marzenę";
      SF Sg Instr => x + "Marzeną";
      SF Sg Loc => x + "marzenie";
      SF Sg Voc => x + "Marzeno";
      SF Pl Nom => x + "Marzeny";
      SF Pl Gen => x + "Marzen";
      SF Pl Dat => x + "Marzenom";
      SF Pl Acc => x + "Marzeny";
      SF Pl Instr => x + "Marzenami";
      SF Pl Loc => x + "Marzenach";
      SF Pl Voc => x + "Marzeny"
    };

    oper mkNTable0587: Str -> SubstForm => Str; --%
    oper mkNTable0587 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Matuła";
      SF Sg Gen => x + "Matuły";
      SF Sg Dat => x + "matule";
      SF Sg Acc => x + "Matułę";
      SF Sg Instr => x + "Matułą";
      SF Sg Loc => x + "matule";
      SF Sg Voc => x + "Matuło";
      SF Pl Nom => x + "Matułowie";
      SF Pl Gen => x + "Matułów";
      SF Pl Dat => x + "Matułom";
      SF Pl Acc => x + "Matułów";
      SF Pl Instr => x + "Matułami";
      SF Pl Loc => x + "Matułach";
      SF Pl Voc => x + "Matułowie"
    };

    oper mkNTable0588: Str -> SubstForm => Str; --%
    oper mkNTable0588 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Max";
      SF Sg Gen => x + "maksa";
      SF Sg Dat => x + "maksowi";
      SF Sg Acc => x + "maksa";
      SF Sg Instr => x + "maksem";
      SF Sg Loc => x + "maksie";
      SF Sg Voc => x + "maksie";
      SF Pl Nom => x + "Maksowie";
      SF Pl Gen => x + "maksów";
      SF Pl Dat => x + "maksom";
      SF Pl Acc => x + "maksów";
      SF Pl Instr => x + "maksami";
      SF Pl Loc => x + "maksach";
      SF Pl Voc => x + "Maksowie"
    };

    oper mkNTable0589: Str -> SubstForm => Str; --%
    oper mkNTable0589 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "May";
      SF Sg Gen => x + "maya";
      SF Sg Dat => x + "Mayowi";
      SF Sg Acc => x + "maya";
      SF Sg Instr => x + "Mayem";
      SF Sg Loc => x + "Mayu";
      SF Sg Voc => x + "Mayu";
      SF Pl Nom => x + "maye";
      SF Pl Gen => x + "Mayów";
      SF Pl Dat => x + "mayom";
      SF Pl Acc => x + "Mayów";
      SF Pl Instr => x + "mayami";
      SF Pl Loc => x + "mayach";
      SF Pl Voc => x + "maye"
    };

    oper mkNTable0590: Str -> SubstForm => Str; --%
    oper mkNTable0590 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "mazur";
      SF Sg Gen => x + "mazura";
      SF Sg Dat => x + "mazurowi";
      SF Sg Acc => x + "mazura";
      SF Sg Instr => x + "mazurem";
      SF Sg Loc => x + "mazurze";
      SF Sg Voc => x + "mazurze";
      SF Pl Nom => x + "Mazurzy";
      SF Pl Gen => x + "mazurów";
      SF Pl Dat => x + "mazurom";
      SF Pl Acc => x + "mazurów";
      SF Pl Instr => x + "mazurami";
      SF Pl Loc => x + "mazurach";
      SF Pl Voc => x + "Mazurzy"
    };

    oper mkNTable0591: Str -> SubstForm => Str; --%
    oper mkNTable0591 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "mazurek";
      SF Sg Gen => x + "mazurka";
      SF Sg Dat => x + "mazurkowi";
      SF Sg Acc => x + "mazurka";
      SF Sg Instr => x + "mazurkiem";
      SF Sg Loc => x + "mazurku";
      SF Sg Voc => x + "mazurku";
      SF Pl Nom => x + "Mazurkowie";
      SF Pl Gen => x + "mazurków";
      SF Pl Dat => x + "mazurkom";
      SF Pl Acc => x + "mazurków";
      SF Pl Instr => x + "mazurkami";
      SF Pl Loc => x + "mazurkach";
      SF Pl Voc => x + "Mazurkowie"
    };

    oper mkNTable0592: Str -> SubstForm => Str; --%
    oper mkNTable0592 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "mech";
      SF Sg Gen => x + "Mecha";
      SF Sg Dat => x + "Mechowi";
      SF Sg Acc => x + "Mecha";
      SF Sg Instr => x + "Mechem";
      SF Sg Loc => x + "Mechu";
      SF Sg Voc => x + "Mechu";
      SF Pl Nom => x + "Mechowie";
      SF Pl Gen => x + "Mechów";
      SF Pl Dat => x + "Mechom";
      SF Pl Acc => x + "Mechów";
      SF Pl Instr => x + "Mechami";
      SF Pl Loc => x + "Mechach";
      SF Pl Voc => x + "Mechowie"
    };

    oper mkNTable0593: Str -> SubstForm => Str; --%
    oper mkNTable0593 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "medin";
      SF Sg Gen => x + "medina";
      SF Sg Dat => x + "Medinowi";
      SF Sg Acc => x + "medina";
      SF Sg Instr => x + "Medinem";
      SF Sg Loc => x + "medinie";
      SF Sg Voc => x + "medinie";
      SF Pl Nom => x + "Medinowie";
      SF Pl Gen => x + "Medinów";
      SF Pl Dat => x + "medinom";
      SF Pl Acc => x + "Medinów";
      SF Pl Instr => x + "medinami";
      SF Pl Loc => x + "medinach";
      SF Pl Voc => x + "Medinowie"
    };

    oper mkNTable0594: Str -> SubstForm => Str; --%
    oper mkNTable0594 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "medyka";
      SF Sg Gen => x + "medyki";
      SF Sg Dat => x + "Medyce";
      SF Sg Acc => x + "Medykę";
      SF Sg Instr => x + "Medyką";
      SF Sg Loc => x + "Medyce";
      SF Sg Voc => x + "Medyko";
      SF Pl Nom => x + "medyki";
      SF Pl Gen => x + "medyk";
      SF Pl Dat => x + "medykom";
      SF Pl Acc => x + "medyki";
      SF Pl Instr => x + "medykami";
      SF Pl Loc => x + "medykach";
      SF Pl Voc => x + "medyki"
    };

    oper mkNTable0595: Str -> SubstForm => Str; --%
    oper mkNTable0595 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "mela";
      SF Sg Gen => x + "meli";
      SF Sg Dat => x + "meli";
      SF Sg Acc => x + "Melę";
      SF Sg Instr => x + "Melą";
      SF Sg Loc => x + "meli";
      SF Sg Voc => x + "melu";
      SF Pl Nom => x + "mele";
      SF Pl Gen => x + "mel";
      SF Pl Dat => x + "melom";
      SF Pl Acc => x + "mele";
      SF Pl Instr => x + "melami";
      SF Pl Loc => x + "melach";
      SF Pl Voc => x + "mele"
    };

    oper mkNTable0596: Str -> SubstForm => Str; --%
    oper mkNTable0596 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "melchior";
      SF Sg Gen => x + "Melchiora";
      SF Sg Dat => x + "melchiorowi";
      SF Sg Acc => x + "Melchiora";
      SF Sg Instr => x + "melchiorem";
      SF Sg Loc => x + "melchiorze";
      SF Sg Voc => x + "melchiorze";
      SF Pl Nom => x + "Melchiorowie";
      SF Pl Gen => x + "melchiorów";
      SF Pl Dat => x + "melchiorom";
      SF Pl Acc => x + "melchiorów";
      SF Pl Instr => x + "melchiorami";
      SF Pl Loc => x + "melchiorach";
      SF Pl Voc => x + "Melchiorowie"
    };

    oper mkNTable0597: Str -> SubstForm => Str; --%
    oper mkNTable0597 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "metody";
      SF Sg Gen => x + "Metodego";
      SF Sg Dat => x + "Metodemu";
      SF Sg Acc => x + "Metodego";
      SF Sg Instr => x + "Metodym";
      SF Sg Loc => x + "Metodym";
      SF Sg Voc => x + "metody";
      SF Pl Nom => x + "Metodowie";
      SF Pl Gen => x + "Metodych";
      SF Pl Dat => x + "Metodym";
      SF Pl Acc => x + "Metodych";
      SF Pl Instr => x + "Metodymi";
      SF Pl Loc => x + "Metodych";
      SF Pl Voc => x + "Metodowie"
    };

    oper mkNTable0598: Str -> SubstForm => Str; --%
    oper mkNTable0598 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "metys";
      SF Sg Gen => x + "metysa";
      SF Sg Dat => x + "metysowi";
      SF Sg Acc => x + "metysa";
      SF Sg Instr => x + "metysem";
      SF Sg Loc => x + "metysie";
      SF Sg Voc => x + "metysie";
      SF Pl Nom => x + "Metysi";
      SF Pl Gen => x + "metysów";
      SF Pl Dat => x + "metysom";
      SF Pl Acc => x + "metysów";
      SF Pl Instr => x + "metysami";
      SF Pl Loc => x + "metysach";
      SF Pl Voc => x + "Metysi"
    };

    oper mkNTable0599: Str -> SubstForm => Str; --%
    oper mkNTable0599 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "miarka";
      SF Sg Gen => x + "miarki";
      SF Sg Dat => x + "miarce";
      SF Sg Acc => x + "miarkę";
      SF Sg Instr => x + "miarką";
      SF Sg Loc => x + "miarce";
      SF Sg Voc => x + "miarko";
      SF Pl Nom => x + "Miarkowie";
      SF Pl Gen => x + "Miarków";
      SF Pl Dat => x + "miarkom";
      SF Pl Acc => x + "Miarków";
      SF Pl Instr => x + "miarkami";
      SF Pl Loc => x + "miarkach";
      SF Pl Voc => x + "Miarkowie"
    };

    oper mkNTable0600: Str -> SubstForm => Str; --%
    oper mkNTable0600 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "cowie";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "cowi";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cowie"
    };

    oper mkNTable0601: Str -> SubstForm => Str; --%
    oper mkNTable0601 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "michałek";
      SF Sg Gen => x + "michałka";
      SF Sg Dat => x + "michałkowi";
      SF Sg Acc => x + "michałka";
      SF Sg Instr => x + "michałkiem";
      SF Sg Loc => x + "michałku";
      SF Sg Voc => x + "michałku";
      SF Pl Nom => x + "Michałkowie";
      SF Pl Gen => x + "michałków";
      SF Pl Dat => x + "michałkom";
      SF Pl Acc => x + "michałków";
      SF Pl Instr => x + "michałkami";
      SF Pl Loc => x + "michałkach";
      SF Pl Voc => x + "Michałkowie"
    };

    oper mkNTable0605: Str -> SubstForm => Str; --%
    oper mkNTable0605 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0606: Str -> SubstForm => Str; --%
    oper mkNTable0606 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "Miecznikow";
      SF Sg Gen => x + "miecznikowa";
      SF Sg Dat => x + "Miecznikowowi";
      SF Sg Acc => x + "miecznikowa";
      SF Sg Instr => x + "Miecznikowem";
      SF Sg Loc => x + "miecznikowie";
      SF Sg Voc => x + "miecznikowie";
      SF Pl Nom => x + "Miecznikowowie";
      SF Pl Gen => x + "Miecznikowów";
      SF Pl Dat => x + "Miecznikowom";
      SF Pl Acc => x + "Miecznikowów";
      SF Pl Instr => x + "Miecznikowami";
      SF Pl Loc => x + "Miecznikowach";
      SF Pl Voc => x + "Miecznikowowie"
    };

    oper mkNTable0607: Str -> SubstForm => Str; --%
    oper mkNTable0607 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "mielcarz";
      SF Sg Gen => x + "mielcarza";
      SF Sg Dat => x + "mielcarzowi";
      SF Sg Acc => x + "mielcarza";
      SF Sg Instr => x + "mielcarzem";
      SF Sg Loc => x + "mielcarzu";
      SF Sg Voc => x + "mielcarzu";
      SF Pl Nom => x + "Mielcarzowie";
      SF Pl Gen => x + "mielcarzy";
      SF Pl Dat => x + "mielcarzom";
      SF Pl Acc => x + "mielcarzy";
      SF Pl Instr => x + "mielcarzami";
      SF Pl Loc => x + "mielcarzach";
      SF Pl Voc => x + "Mielcarzowie"
    };

    oper mkNTable0608: Str -> SubstForm => Str; --%
    oper mkNTable0608 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ec";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable0609: Str -> SubstForm => Str; --%
    oper mkNTable0609 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Mieszko";
      SF Sg Gen => x + "mieszka";
      SF Sg Dat => x + "mieszkowi";
      SF Sg Acc => x + "mieszka";
      SF Sg Instr => x + "mieszkiem";
      SF Sg Loc => x + "mieszku";
      SF Sg Voc => x + "mieszku";
      SF Pl Nom => x + "Mieszkowie";
      SF Pl Gen => x + "mieszków";
      SF Pl Dat => x + "mieszkom";
      SF Pl Acc => x + "mieszków";
      SF Pl Instr => x + "mieszkami";
      SF Pl Loc => x + "mieszkach";
      SF Pl Voc => x + "Mieszkowie"
    };

    oper mkNTable0610: Str -> SubstForm => Str; --%
    oper mkNTable0610 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "mikołajek";
      SF Sg Gen => x + "mikołajka";
      SF Sg Dat => x + "mikołajkowi";
      SF Sg Acc => x + "mikołajka";
      SF Sg Instr => x + "mikołajkiem";
      SF Sg Loc => x + "mikołajku";
      SF Sg Voc => x + "mikołajku";
      SF Pl Nom => x + "Mikołajkowie";
      SF Pl Gen => x + "mikołajków";
      SF Pl Dat => x + "mikołajkom";
      SF Pl Acc => x + "mikołajków";
      SF Pl Instr => x + "mikołajkami";
      SF Pl Loc => x + "mikołajkach";
      SF Pl Voc => x + "Mikołajkowie"
    };

    oper mkNTable0611: Str -> SubstForm => Str; --%
    oper mkNTable0611 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Milena";
      SF Sg Gen => x + "mileny";
      SF Sg Dat => x + "milenie";
      SF Sg Acc => x + "Milenę";
      SF Sg Instr => x + "Mileną";
      SF Sg Loc => x + "milenie";
      SF Sg Voc => x + "Mileno";
      SF Pl Nom => x + "mileny";
      SF Pl Gen => x + "milen";
      SF Pl Dat => x + "milenom";
      SF Pl Acc => x + "mileny";
      SF Pl Instr => x + "milenami";
      SF Pl Loc => x + "milenach";
      SF Pl Voc => x + "mileny"
    };

    oper mkNTable0614: Str -> SubstForm => Str; --%
    oper mkNTable0614 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "miodek";
      SF Sg Gen => x + "Miodka";
      SF Sg Dat => x + "miodkowi";
      SF Sg Acc => x + "Miodka";
      SF Sg Instr => x + "miodkiem";
      SF Sg Loc => x + "miodku";
      SF Sg Voc => x + "miodku";
      SF Pl Nom => x + "Miodkowie";
      SF Pl Gen => x + "miodków";
      SF Pl Dat => x + "miodkom";
      SF Pl Acc => x + "miodków";
      SF Pl Instr => x + "miodkami";
      SF Pl Loc => x + "miodkach";
      SF Pl Voc => x + "Miodkowie"
    };

    oper mkNTable0615: Str -> SubstForm => Str; --%
    oper mkNTable0615 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "misiura";
      SF Sg Gen => x + "misiury";
      SF Sg Dat => x + "misiurze";
      SF Sg Acc => x + "misiurę";
      SF Sg Instr => x + "misiurą";
      SF Sg Loc => x + "misiurze";
      SF Sg Voc => x + "misiuro";
      SF Pl Nom => x + "Misiurowie";
      SF Pl Gen => x + "Misiurów";
      SF Pl Dat => x + "misiurom";
      SF Pl Acc => x + "Misiurów";
      SF Pl Instr => x + "misiurami";
      SF Pl Loc => x + "misiurach";
      SF Pl Voc => x + "Misiurowie"
    };

    oper mkNTable0616: Str -> SubstForm => Str; --%
    oper mkNTable0616 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Miłowan";
      SF Sg Gen => x + "Miłowana";
      SF Sg Dat => x + "Miłowanowi";
      SF Sg Acc => x + "Miłowana";
      SF Sg Instr => x + "Miłowanem";
      SF Sg Loc => x + "miłowanie";
      SF Sg Voc => x + "miłowanie";
      SF Pl Nom => x + "Miłowanowie";
      SF Pl Gen => x + "Miłowanów";
      SF Pl Dat => x + "Miłowanom";
      SF Pl Acc => x + "Miłowanów";
      SF Pl Instr => x + "Miłowanami";
      SF Pl Loc => x + "Miłowanach";
      SF Pl Voc => x + "Miłowanowie"
    };

    oper mkNTable0617: Str -> SubstForm => Str; --%
    oper mkNTable0617 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0618: Str -> SubstForm => Str; --%
    oper mkNTable0618 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ech";
      SF Sg Gen => x + "cha";
      SF Sg Dat => x + "chowi";
      SF Sg Acc => x + "cha";
      SF Sg Instr => x + "chem";
      SF Sg Loc => x + "chu";
      SF Sg Voc => x + "chu";
      SF Pl Nom => x + "chowie";
      SF Pl Gen => x + "chów";
      SF Pl Dat => x + "chom";
      SF Pl Acc => x + "chów";
      SF Pl Instr => x + "chami";
      SF Pl Loc => x + "chach";
      SF Pl Voc => x + "chowie"
    };

    oper mkNTable0620: Str -> SubstForm => Str; --%
    oper mkNTable0620 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "moczar";
      SF Sg Gen => x + "Moczara";
      SF Sg Dat => x + "moczarowi";
      SF Sg Acc => x + "Moczara";
      SF Sg Instr => x + "moczarem";
      SF Sg Loc => x + "moczarze";
      SF Sg Voc => x + "moczarze";
      SF Pl Nom => x + "Moczarowie";
      SF Pl Gen => x + "moczarów";
      SF Pl Dat => x + "moczarom";
      SF Pl Acc => x + "moczarów";
      SF Pl Instr => x + "moczarami";
      SF Pl Loc => x + "moczarach";
      SF Pl Voc => x + "Moczarowie"
    };

    oper mkNTable0621: Str -> SubstForm => Str; --%
    oper mkNTable0621 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "monet";
      SF Sg Gen => x + "moneta";
      SF Sg Dat => x + "Monetowi";
      SF Sg Acc => x + "moneta";
      SF Sg Instr => x + "Monetem";
      SF Sg Loc => x + "monecie";
      SF Sg Voc => x + "monecie";
      SF Pl Nom => x + "Monetowie";
      SF Pl Gen => x + "Monetów";
      SF Pl Dat => x + "monetom";
      SF Pl Acc => x + "Monetów";
      SF Pl Instr => x + "monetami";
      SF Pl Loc => x + "monetach";
      SF Pl Voc => x + "Monetowie"
    };

    oper mkNTable0622: Str -> SubstForm => Str; --%
    oper mkNTable0622 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Monia";
      SF Sg Gen => x + "Moni";
      SF Sg Dat => x + "Moni";
      SF Sg Acc => x + "Monię";
      SF Sg Instr => x + "Monią";
      SF Sg Loc => x + "Moni";
      SF Sg Voc => x + "Moniu";
      SF Pl Nom => x + "monie";
      SF Pl Gen => x + "Moń";
      SF Pl Dat => x + "Moniom";
      SF Pl Acc => x + "monie";
      SF Pl Instr => x + "Moniami";
      SF Pl Loc => x + "Moniach";
      SF Pl Voc => x + "monie"
    };

    oper mkNTable0623: Str -> SubstForm => Str; --%
    oper mkNTable0623 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "go";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "go";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0624: Str -> SubstForm => Str; --%
    oper mkNTable0624 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "morris";
      SF Sg Gen => x + "morrisa";
      SF Sg Dat => x + "morrisowi";
      SF Sg Acc => x + "morrisa";
      SF Sg Instr => x + "morrisem";
      SF Sg Loc => x + "morrisie";
      SF Sg Voc => x + "morrisie";
      SF Pl Nom => x + "Morrisowie";
      SF Pl Gen => x + "morrisów";
      SF Pl Dat => x + "morrisom";
      SF Pl Acc => x + "morrisów";
      SF Pl Instr => x + "morrisami";
      SF Pl Loc => x + "morrisach";
      SF Pl Voc => x + "Morrisowie"
    };

    oper mkNTable0625: Str -> SubstForm => Str; --%
    oper mkNTable0625 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Moskała";
      SF Sg Gen => x + "Moskały";
      SF Sg Dat => x + "moskale";
      SF Sg Acc => x + "Moskałę";
      SF Sg Instr => x + "Moskałą";
      SF Sg Loc => x + "moskale";
      SF Sg Voc => x + "Moskało";
      SF Pl Nom => x + "Moskałowie";
      SF Pl Gen => x + "Moskałów";
      SF Pl Dat => x + "Moskałom";
      SF Pl Acc => x + "Moskałów";
      SF Pl Instr => x + "Moskałami";
      SF Pl Loc => x + "Moskałach";
      SF Pl Voc => x + "Moskałowie"
    };

    oper mkNTable0627: Str -> SubstForm => Str; --%
    oper mkNTable0627 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "mucha";
      SF Sg Gen => x + "muchy";
      SF Sg Dat => x + "musze";
      SF Sg Acc => x + "muchę";
      SF Sg Instr => x + "muchą";
      SF Sg Loc => x + "musze";
      SF Sg Voc => x + "mucho";
      SF Pl Nom => x + "Muchowie";
      SF Pl Gen => x + "Muchów";
      SF Pl Dat => x + "muchom";
      SF Pl Acc => x + "Muchów";
      SF Pl Instr => x + "muchami";
      SF Pl Loc => x + "muchach";
      SF Pl Voc => x + "Muchowie"
    };

    oper mkNTable0628: Str -> SubstForm => Str; --%
    oper mkNTable0628 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "mulat";
      SF Sg Gen => x + "mulata";
      SF Sg Dat => x + "Mulatowi";
      SF Sg Acc => x + "mulata";
      SF Sg Instr => x + "Mulatem";
      SF Sg Loc => x + "Mulacie";
      SF Sg Voc => x + "Mulacie";
      SF Pl Nom => x + "Mulaci";
      SF Pl Gen => x + "Mulatów";
      SF Pl Dat => x + "Mulatom";
      SF Pl Acc => x + "Mulatów";
      SF Pl Instr => x + "Mulatami";
      SF Pl Loc => x + "Mulatach";
      SF Pl Voc => x + "Mulaci"
    };

    oper mkNTable0629: Str -> SubstForm => Str; --%
    oper mkNTable0629 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ę";
      SF Sg Gen => x + "ęcia";
      SF Sg Dat => x + "ęciu";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ęciem";
      SF Sg Loc => x + "ęciu";
      SF Sg Voc => x + "ę";
      SF Pl Nom => x + "ęta";
      SF Pl Gen => x + "ąt";
      SF Pl Dat => x + "ętom";
      SF Pl Acc => x + "ęta";
      SF Pl Instr => x + "ętami";
      SF Pl Loc => x + "ętach";
      SF Pl Voc => x + "ęta"
    };

    oper mkNTable0632: Str -> SubstForm => Str; --%
    oper mkNTable0632 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "młot";
      SF Sg Gen => x + "młota";
      SF Sg Dat => x + "młotowi";
      SF Sg Acc => x + "młota";
      SF Sg Instr => x + "młotem";
      SF Sg Loc => x + "młocie";
      SF Sg Voc => x + "młocie";
      SF Pl Nom => x + "Młotowie";
      SF Pl Gen => x + "młotów";
      SF Pl Dat => x + "młotom";
      SF Pl Acc => x + "młotów";
      SF Pl Instr => x + "młotami";
      SF Pl Loc => x + "młotach";
      SF Pl Voc => x + "Młotowie"
    };

    oper mkNTable0633: Str -> SubstForm => Str; --%
    oper mkNTable0633 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "młynarczyk";
      SF Sg Gen => x + "młynarczyka";
      SF Sg Dat => x + "młynarczykowi";
      SF Sg Acc => x + "młynarczyka";
      SF Sg Instr => x + "młynarczykiem";
      SF Sg Loc => x + "młynarczyku";
      SF Sg Voc => x + "młynarczyku";
      SF Pl Nom => x + "Młynarczykowie";
      SF Pl Gen => x + "młynarczyków";
      SF Pl Dat => x + "młynarczykom";
      SF Pl Acc => x + "młynarczyków";
      SF Pl Instr => x + "młynarczykami";
      SF Pl Loc => x + "młynarczykach";
      SF Pl Voc => x + "Młynarczykowie"
    };

    oper mkNTable0635: Str -> SubstForm => Str; --%
    oper mkNTable0635 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "napoleon";
      SF Sg Gen => x + "napoleona";
      SF Sg Dat => x + "napoleonowi";
      SF Sg Acc => x + "napoleona";
      SF Sg Instr => x + "napoleonem";
      SF Sg Loc => x + "napoleonie";
      SF Sg Voc => x + "napoleonie";
      SF Pl Nom => x + "Napoleonowie";
      SF Pl Gen => x + "napoleonów";
      SF Pl Dat => x + "napoleonom";
      SF Pl Acc => x + "napoleonów";
      SF Pl Instr => x + "napoleonami";
      SF Pl Loc => x + "napoleonach";
      SF Pl Voc => x + "Napoleonowie"
    };

    oper mkNTable0636: Str -> SubstForm => Str; --%
    oper mkNTable0636 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "zie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "zi";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "zi"
    };

    oper mkNTable0637: Str -> SubstForm => Str; --%
    oper mkNTable0637 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "tt";
      SF Sg Gen => x + "tta";
      SF Sg Dat => x + "ttowi";
      SF Sg Acc => x + "tta";
      SF Sg Instr => x + "ttem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ttowie";
      SF Pl Gen => x + "ttów";
      SF Pl Dat => x + "ttom";
      SF Pl Acc => x + "ttów";
      SF Pl Instr => x + "ttami";
      SF Pl Loc => x + "ttach";
      SF Pl Voc => x + "ttowie"
    };

    oper mkNTable0638: Str -> SubstForm => Str; --%
    oper mkNTable0638 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "narcyza";
      SF Sg Gen => x + "narcyzy";
      SF Sg Dat => x + "narcyzie";
      SF Sg Acc => x + "Narcyzę";
      SF Sg Instr => x + "Narcyzą";
      SF Sg Loc => x + "narcyzie";
      SF Sg Voc => x + "Narcyzo";
      SF Pl Nom => x + "narcyzy";
      SF Pl Gen => x + "narcyz";
      SF Pl Dat => x + "narcyzom";
      SF Pl Acc => x + "narcyzy";
      SF Pl Instr => x + "narcyzami";
      SF Pl Loc => x + "narcyzach";
      SF Pl Voc => x + "narcyzy"
    };

    oper mkNTable0639: Str -> SubstForm => Str; --%
    oper mkNTable0639 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "nawrot";
      SF Sg Gen => x + "nawrota";
      SF Sg Dat => x + "nawrotowi";
      SF Sg Acc => x + "nawrota";
      SF Sg Instr => x + "nawrotem";
      SF Sg Loc => x + "nawrocie";
      SF Sg Voc => x + "nawrocie";
      SF Pl Nom => x + "Nawrotowie";
      SF Pl Gen => x + "nawrotów";
      SF Pl Dat => x + "nawrotom";
      SF Pl Acc => x + "nawrotów";
      SF Pl Instr => x + "nawrotami";
      SF Pl Loc => x + "nawrotach";
      SF Pl Voc => x + "Nawrotowie"
    };

    oper mkNTable0640: Str -> SubstForm => Str; --%
    oper mkNTable0640 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "nawrót";
      SF Sg Gen => x + "nawrota";
      SF Sg Dat => x + "nawrotowi";
      SF Sg Acc => x + "nawrota";
      SF Sg Instr => x + "nawrotem";
      SF Sg Loc => x + "nawrocie";
      SF Sg Voc => x + "nawrocie";
      SF Pl Nom => x + "Nawrotowie";
      SF Pl Gen => x + "nawrotów";
      SF Pl Dat => x + "nawrotom";
      SF Pl Acc => x + "nawrotów";
      SF Pl Instr => x + "nawrotami";
      SF Pl Loc => x + "nawrotach";
      SF Pl Voc => x + "Nawrotowie"
    };

    oper mkNTable0642: Str -> SubstForm => Str; --%
    oper mkNTable0642 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "nelson";
      SF Sg Gen => x + "nelsona";
      SF Sg Dat => x + "nelsonowi";
      SF Sg Acc => x + "nelsona";
      SF Sg Instr => x + "nelsonem";
      SF Sg Loc => x + "nelsonie";
      SF Sg Voc => x + "nelsonie";
      SF Pl Nom => x + "Nelsonowie";
      SF Pl Gen => x + "nelsonów";
      SF Pl Dat => x + "nelsonom";
      SF Pl Acc => x + "nelsonów";
      SF Pl Instr => x + "nelsonami";
      SF Pl Loc => x + "nelsonach";
      SF Pl Voc => x + "Nelsonowie"
    };

    oper mkNTable0643: Str -> SubstForm => Str; --%
    oper mkNTable0643 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "neptun";
      SF Sg Gen => x + "Neptuna";
      SF Sg Dat => x + "neptunowi";
      SF Sg Acc => x + "Neptuna";
      SF Sg Instr => x + "neptunem";
      SF Sg Loc => x + "neptunie";
      SF Sg Voc => x + "neptunie";
      SF Pl Nom => x + "neptuny";
      SF Pl Gen => x + "neptunów";
      SF Pl Dat => x + "neptunom";
      SF Pl Acc => x + "neptuny";
      SF Pl Instr => x + "neptunami";
      SF Pl Loc => x + "neptunach";
      SF Pl Voc => x + "neptuny"
    };

    oper mkNTable0644: Str -> SubstForm => Str; --%
    oper mkNTable0644 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "newton";
      SF Sg Gen => x + "newtona";
      SF Sg Dat => x + "newtonowi";
      SF Sg Acc => x + "newtona";
      SF Sg Instr => x + "newtonem";
      SF Sg Loc => x + "newtonie";
      SF Sg Voc => x + "newtonie";
      SF Pl Nom => x + "Newtonowie";
      SF Pl Gen => x + "newtonów";
      SF Pl Dat => x + "newtonom";
      SF Pl Acc => x + "newtonów";
      SF Pl Instr => x + "newtonami";
      SF Pl Loc => x + "newtonach";
      SF Pl Voc => x + "Newtonowie"
    };

    oper mkNTable0646: Str -> SubstForm => Str; --%
    oper mkNTable0646 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0648: Str -> SubstForm => Str; --%
    oper mkNTable0648 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cze";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable0649: Str -> SubstForm => Str; --%
    oper mkNTable0649 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "nobel";
      SF Sg Gen => x + "nobla";
      SF Sg Dat => x + "noblowi";
      SF Sg Acc => x + "nobla";
      SF Sg Instr => x + "noblem";
      SF Sg Loc => x + "noblu";
      SF Sg Voc => x + "noblu";
      SF Pl Nom => x + "Noblowie";
      SF Pl Gen => x + "Noblów";
      SF Pl Dat => x + "noblom";
      SF Pl Acc => x + "Noblów";
      SF Pl Instr => x + "noblami";
      SF Pl Loc => x + "noblach";
      SF Pl Voc => x + "Noblowie"
    };

    oper mkNTable0650: Str -> SubstForm => Str; --%
    oper mkNTable0650 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "norweg";
      SF Sg Gen => x + "norwega";
      SF Sg Dat => x + "norwegowi";
      SF Sg Acc => x + "norwega";
      SF Sg Instr => x + "norwegiem";
      SF Sg Loc => x + "norwegu";
      SF Sg Voc => x + "norwegu";
      SF Pl Nom => x + "Norwegowie";
      SF Pl Gen => x + "norwegów";
      SF Pl Dat => x + "norwegom";
      SF Pl Acc => x + "norwegów";
      SF Pl Instr => x + "norwegami";
      SF Pl Loc => x + "norwegach";
      SF Pl Voc => x + "Norwegowie"
    };

    oper mkNTable0651: Str -> SubstForm => Str; --%
    oper mkNTable0651 lexem = 
      let x = Predef.tk 16 lexem in
    table { 
      SF Sg Nom => x + "nowofundlandczyk";
      SF Sg Gen => x + "nowofundlandczyka";
      SF Sg Dat => x + "nowofundlandczykowi";
      SF Sg Acc => x + "nowofundlandczyka";
      SF Sg Instr => x + "nowofundlandczykiem";
      SF Sg Loc => x + "nowofundlandczyku";
      SF Sg Voc => x + "nowofundlandczyku";
      SF Pl Nom => x + "Nowofundlandczycy";
      SF Pl Gen => x + "nowofundlandczyków";
      SF Pl Dat => x + "nowofundlandczykom";
      SF Pl Acc => x + "nowofundlandczyków";
      SF Pl Instr => x + "nowofundlandczykami";
      SF Pl Loc => x + "nowofundlandczykach";
      SF Pl Voc => x + "Nowofundlandczycy"
    };

    oper mkNTable0653: Str -> SubstForm => Str; --%
    oper mkNTable0653 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "oczko";
      SF Sg Gen => x + "oczki";
      SF Sg Dat => x + "Oczce";
      SF Sg Acc => x + "Oczkę";
      SF Sg Instr => x + "Oczką";
      SF Sg Loc => x + "Oczce";
      SF Sg Voc => x + "oczko";
      SF Pl Nom => x + "Oczkowie";
      SF Pl Gen => x + "Oczków";
      SF Pl Dat => x + "oczkom";
      SF Pl Acc => x + "Oczków";
      SF Pl Instr => x + "oczkami";
      SF Pl Loc => x + "oczkach";
      SF Pl Voc => x + "Oczkowie"
    };

    oper mkNTable0654: Str -> SubstForm => Str; --%
    oper mkNTable0654 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "odyniec";
      SF Sg Gen => x + "odyńca";
      SF Sg Dat => x + "odyńcowi";
      SF Sg Acc => x + "odyńca";
      SF Sg Instr => x + "odyńcem";
      SF Sg Loc => x + "odyńcu";
      SF Sg Voc => x + "odyńcu";
      SF Pl Nom => x + "Odyńcowie";
      SF Pl Gen => x + "odyńców";
      SF Pl Dat => x + "odyńcom";
      SF Pl Acc => x + "odyńców";
      SF Pl Instr => x + "odyńcami";
      SF Pl Loc => x + "odyńcach";
      SF Pl Voc => x + "Odyńcowie"
    };

    oper mkNTable0656: Str -> SubstForm => Str; --%
    oper mkNTable0656 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ohm";
      SF Sg Gen => x + "ohma";
      SF Sg Dat => x + "ohmowi";
      SF Sg Acc => x + "ohma";
      SF Sg Instr => x + "ohmem";
      SF Sg Loc => x + "ohmie";
      SF Sg Voc => x + "ohmie";
      SF Pl Nom => x + "Ohmowie";
      SF Pl Gen => x + "ohmów";
      SF Pl Dat => x + "ohmom";
      SF Pl Acc => x + "ohmów";
      SF Pl Instr => x + "ohmami";
      SF Pl Loc => x + "ohmach";
      SF Pl Voc => x + "Ohmowie"
    };

    oper mkNTable0658: Str -> SubstForm => Str; --%
    oper mkNTable0658 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Oktawia";
      SF Sg Gen => x + "Oktawii";
      SF Sg Dat => x + "Oktawii";
      SF Sg Acc => x + "Oktawię";
      SF Sg Instr => x + "Oktawią";
      SF Sg Loc => x + "Oktawii";
      SF Sg Voc => x + "Oktawio";
      SF Pl Nom => x + "oktawie";
      SF Pl Gen => x + "Oktawii";
      SF Pl Dat => x + "Oktawiom";
      SF Pl Acc => x + "oktawie";
      SF Pl Instr => x + "Oktawiami";
      SF Pl Loc => x + "Oktawiach";
      SF Pl Voc => x + "oktawie"
    };

    oper mkNTable0659: Str -> SubstForm => Str; --%
    oper mkNTable0659 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Olimpia";
      SF Sg Gen => x + "Olimpii";
      SF Sg Dat => x + "Olimpii";
      SF Sg Acc => x + "Olimpię";
      SF Sg Instr => x + "Olimpią";
      SF Sg Loc => x + "Olimpii";
      SF Sg Voc => x + "Olimpio";
      SF Pl Nom => x + "olimpie";
      SF Pl Gen => x + "Olimpii";
      SF Pl Dat => x + "Olimpiom";
      SF Pl Acc => x + "olimpie";
      SF Pl Instr => x + "Olimpiami";
      SF Pl Loc => x + "Olimpiach";
      SF Pl Voc => x + "olimpie"
    };

    oper mkNTable0660: Str -> SubstForm => Str; --%
    oper mkNTable0660 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Oliwia";
      SF Sg Gen => x + "Oliwii";
      SF Sg Dat => x + "Oliwii";
      SF Sg Acc => x + "Oliwię";
      SF Sg Instr => x + "Oliwią";
      SF Sg Loc => x + "Oliwii";
      SF Sg Voc => x + "Oliwio";
      SF Pl Nom => x + "oliwie";
      SF Pl Gen => x + "Oliwii";
      SF Pl Dat => x + "Oliwiom";
      SF Pl Acc => x + "oliwie";
      SF Pl Instr => x + "Oliwiami";
      SF Pl Loc => x + "Oliwiach";
      SF Pl Voc => x + "oliwie"
    };

    oper mkNTable0664: Str -> SubstForm => Str; --%
    oper mkNTable0664 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "orkan";
      SF Sg Gen => x + "Orkana";
      SF Sg Dat => x + "orkanowi";
      SF Sg Acc => x + "Orkana";
      SF Sg Instr => x + "orkanem";
      SF Sg Loc => x + "orkanie";
      SF Sg Voc => x + "orkanie";
      SF Pl Nom => x + "Orkanowie";
      SF Pl Gen => x + "orkanów";
      SF Pl Dat => x + "orkanom";
      SF Pl Acc => x + "orkanów";
      SF Pl Instr => x + "orkanami";
      SF Pl Loc => x + "orkanach";
      SF Pl Voc => x + "Orkanowie"
    };

    oper mkNTable0665: Str -> SubstForm => Str; --%
    oper mkNTable0665 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "orzeł";
      SF Sg Gen => x + "orła";
      SF Sg Dat => x + "orłowi";
      SF Sg Acc => x + "orła";
      SF Sg Instr => x + "orłem";
      SF Sg Loc => x + "orle";
      SF Sg Voc => x + "orle";
      SF Pl Nom => x + "Orłowie";
      SF Pl Gen => x + "orłów";
      SF Pl Dat => x + "orłom";
      SF Pl Acc => x + "orłów";
      SF Pl Instr => x + "orłami";
      SF Pl Loc => x + "orłach";
      SF Pl Voc => x + "Orłowie"
    };

    oper mkNTable0667: Str -> SubstForm => Str; --%
    oper mkNTable0667 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óg";
      SF Sg Gen => x + "ogu";
      SF Sg Dat => x + "ogowi";
      SF Sg Acc => x + "óg";
      SF Sg Instr => x + "ogiem";
      SF Sg Loc => x + "ogu";
      SF Sg Voc => x + "ogu";
      SF Pl Nom => x + "ogi";
      SF Pl Gen => x + "ogów";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogi";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogi"
    };

    oper mkNTable0668: Str -> SubstForm => Str; --%
    oper mkNTable0668 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óg";
      SF Sg Gen => x + "oga";
      SF Sg Dat => x + "ogowi";
      SF Sg Acc => x + "óg";
      SF Sg Instr => x + "ogiem";
      SF Sg Loc => x + "ogu";
      SF Sg Voc => x + "ogu";
      SF Pl Nom => x + "ogi";
      SF Pl Gen => x + "ogów";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogi";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogi"
    };

    oper mkNTable0669: Str -> SubstForm => Str; --%
    oper mkNTable0669 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Otręba";
      SF Sg Gen => x + "otręby";
      SF Sg Dat => x + "Otrębie";
      SF Sg Acc => x + "Otrębę";
      SF Sg Instr => x + "Otrębą";
      SF Sg Loc => x + "Otrębie";
      SF Sg Voc => x + "Otrębo";
      SF Pl Nom => x + "Otrębowie";
      SF Pl Gen => x + "otrębów";
      SF Pl Dat => x + "otrębom";
      SF Pl Acc => x + "otrębów";
      SF Pl Instr => x + "otrębami";
      SF Pl Loc => x + "otrębach";
      SF Pl Voc => x + "Otrębowie"
    };

    oper mkNTable0670: Str -> SubstForm => Str; --%
    oper mkNTable0670 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "owczarek";
      SF Sg Gen => x + "owczarka";
      SF Sg Dat => x + "owczarkowi";
      SF Sg Acc => x + "owczarka";
      SF Sg Instr => x + "owczarkiem";
      SF Sg Loc => x + "owczarku";
      SF Sg Voc => x + "owczarku";
      SF Pl Nom => x + "Owczarkowie";
      SF Pl Gen => x + "owczarków";
      SF Pl Dat => x + "owczarkom";
      SF Pl Acc => x + "owczarków";
      SF Pl Instr => x + "owczarkami";
      SF Pl Loc => x + "owczarkach";
      SF Pl Voc => x + "Owczarkowie"
    };

    oper mkNTable0672: Str -> SubstForm => Str; --%
    oper mkNTable0672 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nie";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niu";
      SF Sg Acc => x + "nie";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "nia";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nia";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nia"
    };

    oper mkNTable0673: Str -> SubstForm => Str; --%
    oper mkNTable0673 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "x";
      SF Sg Gen => x + "ksu";
      SF Sg Dat => x + "ksowi";
      SF Sg Acc => x + "x";
      SF Sg Instr => x + "ksem";
      SF Sg Loc => x + "ksie";
      SF Sg Voc => x + "ksie";
      SF Pl Nom => x + "ksy";
      SF Pl Gen => x + "ksów";
      SF Pl Dat => x + "ksom";
      SF Pl Acc => x + "ksy";
      SF Pl Instr => x + "ksami";
      SF Pl Loc => x + "ksach";
      SF Pl Voc => x + "ksy"
    };

    oper mkNTable0674: Str -> SubstForm => Str; --%
    oper mkNTable0674 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0675: Str -> SubstForm => Str; --%
    oper mkNTable0675 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "pac";
      SF Sg Gen => x + "paca";
      SF Sg Dat => x + "pacowi";
      SF Sg Acc => x + "paca";
      SF Sg Instr => x + "pacem";
      SF Sg Loc => x + "pacu";
      SF Sg Voc => x + "pacu";
      SF Pl Nom => x + "Pacowie";
      SF Pl Gen => x + "pacy";
      SF Pl Dat => x + "pacom";
      SF Pl Acc => x + "pacy";
      SF Pl Instr => x + "pacami";
      SF Pl Loc => x + "pacach";
      SF Pl Voc => x + "Pacowie"
    };

    oper mkNTable0677: Str -> SubstForm => Str; --%
    oper mkNTable0677 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pająk";
      SF Sg Gen => x + "pająka";
      SF Sg Dat => x + "pająkowi";
      SF Sg Acc => x + "pająka";
      SF Sg Instr => x + "pająkiem";
      SF Sg Loc => x + "pająku";
      SF Sg Voc => x + "pająku";
      SF Pl Nom => x + "Pająkowie";
      SF Pl Gen => x + "pająków";
      SF Pl Dat => x + "pająkom";
      SF Pl Acc => x + "pająków";
      SF Pl Instr => x + "pająkami";
      SF Pl Loc => x + "pająkach";
      SF Pl Voc => x + "Pająkowie"
    };

    oper mkNTable0678: Str -> SubstForm => Str; --%
    oper mkNTable0678 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Pakuła";
      SF Sg Gen => x + "pakuły";
      SF Sg Dat => x + "Pakule";
      SF Sg Acc => x + "Pakułę";
      SF Sg Instr => x + "Pakułą";
      SF Sg Loc => x + "Pakule";
      SF Sg Voc => x + "Pakuło";
      SF Pl Nom => x + "Pakułowie";
      SF Pl Gen => x + "pakułów";
      SF Pl Dat => x + "pakułom";
      SF Pl Acc => x + "pakułów";
      SF Pl Instr => x + "pakułami";
      SF Pl Loc => x + "pakułach";
      SF Pl Voc => x + "Pakułowie"
    };

    oper mkNTable0679: Str -> SubstForm => Str; --%
    oper mkNTable0679 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "palatyn";
      SF Sg Gen => x + "Palatynu";
      SF Sg Dat => x + "palatynowi";
      SF Sg Acc => x + "palatyn";
      SF Sg Instr => x + "palatynem";
      SF Sg Loc => x + "palatynie";
      SF Sg Voc => x + "palatynie";
      SF Pl Nom => x + "palatyny";
      SF Pl Gen => x + "palatynów";
      SF Pl Dat => x + "palatynom";
      SF Pl Acc => x + "palatyny";
      SF Pl Instr => x + "palatynami";
      SF Pl Loc => x + "palatynach";
      SF Pl Voc => x + "palatyny"
    };

    oper mkNTable0680: Str -> SubstForm => Str; --%
    oper mkNTable0680 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "palma";
      SF Sg Gen => x + "palmy";
      SF Sg Dat => x + "palmie";
      SF Sg Acc => x + "palmę";
      SF Sg Instr => x + "palmą";
      SF Sg Loc => x + "palmie";
      SF Sg Voc => x + "palmo";
      SF Pl Nom => x + "Palmowie";
      SF Pl Gen => x + "palmów";
      SF Pl Dat => x + "palmom";
      SF Pl Acc => x + "palmów";
      SF Pl Instr => x + "palmami";
      SF Pl Loc => x + "palmach";
      SF Pl Voc => x + "Palmowie"
    };

    oper mkNTable0681: Str -> SubstForm => Str; --%
    oper mkNTable0681 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "paluch";
      SF Sg Gen => x + "palucha";
      SF Sg Dat => x + "paluchowi";
      SF Sg Acc => x + "palucha";
      SF Sg Instr => x + "paluchem";
      SF Sg Loc => x + "paluchu";
      SF Sg Voc => x + "paluchu";
      SF Pl Nom => x + "Paluchowie";
      SF Pl Gen => x + "paluchów";
      SF Pl Dat => x + "paluchom";
      SF Pl Acc => x + "paluchów";
      SF Pl Instr => x + "paluchami";
      SF Pl Loc => x + "paluchach";
      SF Pl Voc => x + "Paluchowie"
    };

    oper mkNTable0682: Str -> SubstForm => Str; --%
    oper mkNTable0682 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "pan";
      SF Sg Gen => x + "pana";
      SF Sg Dat => x + "Panowi";
      SF Sg Acc => x + "pana";
      SF Sg Instr => x + "panem";
      SF Sg Loc => x + "panie";
      SF Sg Voc => x + "panie";
      SF Pl Nom => x + "panowie";
      SF Pl Gen => x + "panów";
      SF Pl Dat => x + "panom";
      SF Pl Acc => x + "panów";
      SF Pl Instr => x + "panami";
      SF Pl Loc => x + "panach";
      SF Pl Voc => x + "panowie"
    };

    oper mkNTable0684: Str -> SubstForm => Str; --%
    oper mkNTable0684 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "parkinson";
      SF Sg Gen => x + "parkinsona";
      SF Sg Dat => x + "parkinsonowi";
      SF Sg Acc => x + "parkinsona";
      SF Sg Instr => x + "parkinsonem";
      SF Sg Loc => x + "parkinsonie";
      SF Sg Voc => x + "parkinsonie";
      SF Pl Nom => x + "Parkinsonowie";
      SF Pl Gen => x + "parkinsonów";
      SF Pl Dat => x + "parkinsonom";
      SF Pl Acc => x + "parkinsonów";
      SF Pl Instr => x + "parkinsonami";
      SF Pl Loc => x + "parkinsonach";
      SF Pl Voc => x + "Parkinsonowie"
    };

    oper mkNTable0685: Str -> SubstForm => Str; --%
    oper mkNTable0685 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pasek";
      SF Sg Gen => x + "paska";
      SF Sg Dat => x + "paskowi";
      SF Sg Acc => x + "paska";
      SF Sg Instr => x + "paskiem";
      SF Sg Loc => x + "pasku";
      SF Sg Voc => x + "pasku";
      SF Pl Nom => x + "Paskowie";
      SF Pl Gen => x + "pasków";
      SF Pl Dat => x + "paskom";
      SF Pl Acc => x + "pasków";
      SF Pl Instr => x + "paskami";
      SF Pl Loc => x + "paskach";
      SF Pl Voc => x + "Paskowie"
    };

    oper mkNTable0686: Str -> SubstForm => Str; --%
    oper mkNTable0686 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "pasternak";
      SF Sg Gen => x + "Pasternaka";
      SF Sg Dat => x + "pasternakowi";
      SF Sg Acc => x + "Pasternaka";
      SF Sg Instr => x + "pasternakiem";
      SF Sg Loc => x + "pasternaku";
      SF Sg Voc => x + "pasternaku";
      SF Pl Nom => x + "Pasternakowie";
      SF Pl Gen => x + "pasternaków";
      SF Pl Dat => x + "pasternakom";
      SF Pl Acc => x + "pasternaków";
      SF Pl Instr => x + "pasternakami";
      SF Pl Loc => x + "pasternakach";
      SF Pl Voc => x + "Pasternakowie"
    };

    oper mkNTable0688: Str -> SubstForm => Str; --%
    oper mkNTable0688 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "patrycy";
      SF Sg Gen => x + "Patrycego";
      SF Sg Dat => x + "Patrycemu";
      SF Sg Acc => x + "Patrycego";
      SF Sg Instr => x + "Patrycym";
      SF Sg Loc => x + "Patrycym";
      SF Sg Voc => x + "patrycy";
      SF Pl Nom => x + "Patrycowie";
      SF Pl Gen => x + "Patrycych";
      SF Pl Dat => x + "Patrycym";
      SF Pl Acc => x + "Patrycych";
      SF Pl Instr => x + "Patrycymi";
      SF Pl Loc => x + "Patrycych";
      SF Pl Voc => x + "Patrycowie"
    };

    oper mkNTable0689: Str -> SubstForm => Str; --%
    oper mkNTable0689 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "paulina";
      SF Sg Gen => x + "pauliny";
      SF Sg Dat => x + "paulinie";
      SF Sg Acc => x + "Paulinę";
      SF Sg Instr => x + "Pauliną";
      SF Sg Loc => x + "paulinie";
      SF Sg Voc => x + "Paulino";
      SF Pl Nom => x + "pauliny";
      SF Pl Gen => x + "paulin";
      SF Pl Dat => x + "paulinom";
      SF Pl Acc => x + "pauliny";
      SF Pl Instr => x + "paulinami";
      SF Pl Loc => x + "paulinach";
      SF Pl Voc => x + "pauliny"
    };

    oper mkNTable0690: Str -> SubstForm => Str; --%
    oper mkNTable0690 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Pawełek";
      SF Sg Gen => x + "Pawełka";
      SF Sg Dat => x + "Pawełkowi";
      SF Sg Acc => x + "Pawełka";
      SF Sg Instr => x + "Pawełkiem";
      SF Sg Loc => x + "Pawełku";
      SF Sg Voc => x + "Pawełku";
      SF Pl Nom => x + "Pawełkowie";
      SF Pl Gen => x + "pawełków";
      SF Pl Dat => x + "pawełkom";
      SF Pl Acc => x + "pawełków";
      SF Pl Instr => x + "pawełkami";
      SF Pl Loc => x + "pawełkach";
      SF Pl Voc => x + "Pawełkowie"
    };

    oper mkNTable0691: Str -> SubstForm => Str; --%
    oper mkNTable0691 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pawia";
      SF Sg Gen => x + "Pawii";
      SF Sg Dat => x + "Pawii";
      SF Sg Acc => x + "Pawię";
      SF Sg Instr => x + "Pawią";
      SF Sg Loc => x + "Pawii";
      SF Sg Voc => x + "Pawio";
      SF Pl Nom => x + "pawie";
      SF Pl Gen => x + "Pawii";
      SF Pl Dat => x + "pawiom";
      SF Pl Acc => x + "pawie";
      SF Pl Instr => x + "pawiami";
      SF Pl Loc => x + "pawiach";
      SF Pl Voc => x + "pawie"
    };

    oper mkNTable0692: Str -> SubstForm => Str; --%
    oper mkNTable0692 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pałka";
      SF Sg Gen => x + "pałki";
      SF Sg Dat => x + "pałce";
      SF Sg Acc => x + "pałkę";
      SF Sg Instr => x + "pałką";
      SF Sg Loc => x + "pałce";
      SF Sg Voc => x + "pałko";
      SF Pl Nom => x + "Pałkowie";
      SF Pl Gen => x + "Pałków";
      SF Pl Dat => x + "pałkom";
      SF Pl Acc => x + "Pałków";
      SF Pl Instr => x + "pałkami";
      SF Pl Loc => x + "pałkach";
      SF Pl Voc => x + "Pałkowie"
    };

    oper mkNTable0693: Str -> SubstForm => Str; --%
    oper mkNTable0693 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "peron";
      SF Sg Gen => x + "Perona";
      SF Sg Dat => x + "peronowi";
      SF Sg Acc => x + "Perona";
      SF Sg Instr => x + "peronem";
      SF Sg Loc => x + "peronie";
      SF Sg Voc => x + "peronie";
      SF Pl Nom => x + "Peronowie";
      SF Pl Gen => x + "peronów";
      SF Pl Dat => x + "peronom";
      SF Pl Acc => x + "peronów";
      SF Pl Instr => x + "peronami";
      SF Pl Loc => x + "peronach";
      SF Pl Voc => x + "Peronowie"
    };

    oper mkNTable0694: Str -> SubstForm => Str; --%
    oper mkNTable0694 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "pers";
      SF Sg Gen => x + "persa";
      SF Sg Dat => x + "persowi";
      SF Sg Acc => x + "persa";
      SF Sg Instr => x + "persem";
      SF Sg Loc => x + "persie";
      SF Sg Voc => x + "persie";
      SF Pl Nom => x + "Persowie";
      SF Pl Gen => x + "persów";
      SF Pl Dat => x + "persom";
      SF Pl Acc => x + "persów";
      SF Pl Instr => x + "persami";
      SF Pl Loc => x + "persach";
      SF Pl Voc => x + "Persowie"
    };

    oper mkNTable0696: Str -> SubstForm => Str; --%
    oper mkNTable0696 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "piecyk";
      SF Sg Gen => x + "piecyka";
      SF Sg Dat => x + "piecykowi";
      SF Sg Acc => x + "piecyka";
      SF Sg Instr => x + "piecykiem";
      SF Sg Loc => x + "piecyku";
      SF Sg Voc => x + "piecyku";
      SF Pl Nom => x + "Piecykowie";
      SF Pl Gen => x + "piecyków";
      SF Pl Dat => x + "piecykom";
      SF Pl Acc => x + "piecyków";
      SF Pl Instr => x + "piecykami";
      SF Pl Loc => x + "piecykach";
      SF Pl Voc => x + "Piecykowie"
    };

    oper mkNTable0697: Str -> SubstForm => Str; --%
    oper mkNTable0697 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "pieniążek";
      SF Sg Gen => x + "pieniążka";
      SF Sg Dat => x + "pieniążkowi";
      SF Sg Acc => x + "pieniążka";
      SF Sg Instr => x + "pieniążkiem";
      SF Sg Loc => x + "pieniążku";
      SF Sg Voc => x + "pieniążku";
      SF Pl Nom => x + "Pieniążkowie";
      SF Pl Gen => x + "pieniążków";
      SF Pl Dat => x + "pieniążkom";
      SF Pl Acc => x + "pieniążków";
      SF Pl Instr => x + "pieniążkami";
      SF Pl Loc => x + "pieniążkach";
      SF Pl Voc => x + "Pieniążkowie"
    };

    oper mkNTable0698: Str -> SubstForm => Str; --%
    oper mkNTable0698 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Pilawa";
      SF Sg Gen => x + "pilawy";
      SF Sg Dat => x + "pilawie";
      SF Sg Acc => x + "Pilawę";
      SF Sg Instr => x + "Pilawą";
      SF Sg Loc => x + "pilawie";
      SF Sg Voc => x + "Pilawo";
      SF Pl Nom => x + "pilawy";
      SF Pl Gen => x + "pilaw";
      SF Pl Dat => x + "pilawom";
      SF Pl Acc => x + "pilawy";
      SF Pl Instr => x + "pilawami";
      SF Pl Loc => x + "pilawach";
      SF Pl Voc => x + "pilawy"
    };

    oper mkNTable0700: Str -> SubstForm => Str; --%
    oper mkNTable0700 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "pisarek";
      SF Sg Gen => x + "pisarka";
      SF Sg Dat => x + "Pisarkowi";
      SF Sg Acc => x + "pisarka";
      SF Sg Instr => x + "Pisarkiem";
      SF Sg Loc => x + "Pisarku";
      SF Sg Voc => x + "Pisarku";
      SF Pl Nom => x + "Pisarkowie";
      SF Pl Gen => x + "Pisarków";
      SF Pl Dat => x + "pisarkom";
      SF Pl Acc => x + "Pisarków";
      SF Pl Instr => x + "pisarkami";
      SF Pl Loc => x + "pisarkach";
      SF Pl Voc => x + "Pisarkowie"
    };

    oper mkNTable0701: Str -> SubstForm => Str; --%
    oper mkNTable0701 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ro";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ro";
      SF Pl Nom => x + "rowie";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "rów";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "rowie"
    };

    oper mkNTable0702: Str -> SubstForm => Str; --%
    oper mkNTable0702 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "piątek";
      SF Sg Gen => x + "piątka";
      SF Sg Dat => x + "piątkowi";
      SF Sg Acc => x + "piątka";
      SF Sg Instr => x + "piątkiem";
      SF Sg Loc => x + "piątku";
      SF Sg Voc => x + "piątku";
      SF Pl Nom => x + "Piątkowie";
      SF Pl Gen => x + "piątków";
      SF Pl Dat => x + "piątkom";
      SF Pl Acc => x + "piątków";
      SF Pl Instr => x + "piątkami";
      SF Pl Loc => x + "piątkach";
      SF Pl Voc => x + "Piątkowie"
    };

    oper mkNTable0703: Str -> SubstForm => Str; --%
    oper mkNTable0703 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "piętak";
      SF Sg Gen => x + "piętaka";
      SF Sg Dat => x + "piętakowi";
      SF Sg Acc => x + "piętaka";
      SF Sg Instr => x + "piętakiem";
      SF Sg Loc => x + "piętaku";
      SF Sg Voc => x + "piętaku";
      SF Pl Nom => x + "Piętakowie";
      SF Pl Gen => x + "piętaków";
      SF Pl Dat => x + "piętakom";
      SF Pl Acc => x + "piętaków";
      SF Pl Instr => x + "piętakami";
      SF Pl Loc => x + "piętakach";
      SF Pl Voc => x + "Piętakowie"
    };

    oper mkNTable0704: Str -> SubstForm => Str; --%
    oper mkNTable0704 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "a";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "a";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "a";
      SF Pl Dat => x + "a";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "a";
      SF Pl Loc => x + "a";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0706: Str -> SubstForm => Str; --%
    oper mkNTable0706 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pluta";
      SF Sg Gen => x + "pluty";
      SF Sg Dat => x + "plucie";
      SF Sg Acc => x + "plutę";
      SF Sg Instr => x + "plutą";
      SF Sg Loc => x + "plucie";
      SF Sg Voc => x + "pluto";
      SF Pl Nom => x + "Plutowie";
      SF Pl Gen => x + "Plutów";
      SF Pl Dat => x + "plutom";
      SF Pl Acc => x + "Plutów";
      SF Pl Instr => x + "plutami";
      SF Pl Loc => x + "plutach";
      SF Pl Voc => x + "Plutowie"
    };

    oper mkNTable0707: Str -> SubstForm => Str; --%
    oper mkNTable0707 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "pluton";
      SF Sg Gen => x + "Plutona";
      SF Sg Dat => x + "plutonowi";
      SF Sg Acc => x + "Plutona";
      SF Sg Instr => x + "plutonem";
      SF Sg Loc => x + "plutonie";
      SF Sg Voc => x + "plutonie";
      SF Pl Nom => x + "plutony";
      SF Pl Gen => x + "plutonów";
      SF Pl Dat => x + "plutonom";
      SF Pl Acc => x + "plutony";
      SF Pl Instr => x + "plutonami";
      SF Pl Loc => x + "plutonach";
      SF Pl Voc => x + "plutony"
    };

    oper mkNTable0708: Str -> SubstForm => Str; --%
    oper mkNTable0708 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Pol";
      SF Sg Gen => x + "pola";
      SF Sg Dat => x + "Polowi";
      SF Sg Acc => x + "pola";
      SF Sg Instr => x + "polem";
      SF Sg Loc => x + "polu";
      SF Sg Voc => x + "polu";
      SF Pl Nom => x + "Polowie";
      SF Pl Gen => x + "Polów";
      SF Pl Dat => x + "polom";
      SF Pl Acc => x + "Polów";
      SF Pl Instr => x + "polami";
      SF Pl Loc => x + "polach";
      SF Pl Voc => x + "Polowie"
    };

    oper mkNTable0709: Str -> SubstForm => Str; --%
    oper mkNTable0709 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "pola";
      SF Sg Gen => x + "Poli";
      SF Sg Dat => x + "Poli";
      SF Sg Acc => x + "Polę";
      SF Sg Instr => x + "Polą";
      SF Sg Loc => x + "Poli";
      SF Sg Voc => x + "polu";
      SF Pl Nom => x + "pole";
      SF Pl Gen => x + "Pol";
      SF Pl Dat => x + "polom";
      SF Pl Acc => x + "pole";
      SF Pl Instr => x + "polami";
      SF Pl Loc => x + "polach";
      SF Pl Voc => x + "pole"
    };

    oper mkNTable0710: Str -> SubstForm => Str; --%
    oper mkNTable0710 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "polaczek";
      SF Sg Gen => x + "polaczka";
      SF Sg Dat => x + "polaczkowi";
      SF Sg Acc => x + "polaczka";
      SF Sg Instr => x + "polaczkiem";
      SF Sg Loc => x + "polaczku";
      SF Sg Voc => x + "polaczku";
      SF Pl Nom => x + "Polaczkowie";
      SF Pl Gen => x + "polaczków";
      SF Pl Dat => x + "polaczkom";
      SF Pl Acc => x + "polaczków";
      SF Pl Instr => x + "polaczkami";
      SF Pl Loc => x + "polaczkach";
      SF Pl Voc => x + "Polaczkowie"
    };

    oper mkNTable0711: Str -> SubstForm => Str; --%
    oper mkNTable0711 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "polak";
      SF Sg Gen => x + "polaka";
      SF Sg Dat => x + "polakowi";
      SF Sg Acc => x + "polaka";
      SF Sg Instr => x + "polakiem";
      SF Sg Loc => x + "polaku";
      SF Sg Voc => x + "polaku";
      SF Pl Nom => x + "Polacy";
      SF Pl Gen => x + "polaków";
      SF Pl Dat => x + "polakom";
      SF Pl Acc => x + "polaków";
      SF Pl Instr => x + "polakami";
      SF Pl Loc => x + "polakach";
      SF Pl Voc => x + "Polacy"
    };

    oper mkNTable0713: Str -> SubstForm => Str; --%
    oper mkNTable0713 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "polek";
      SF Sg Gen => x + "polka";
      SF Sg Dat => x + "Polkowi";
      SF Sg Acc => x + "polka";
      SF Sg Instr => x + "Polkiem";
      SF Sg Loc => x + "Polku";
      SF Sg Voc => x + "Polku";
      SF Pl Nom => x + "Polkowie";
      SF Pl Gen => x + "Polków";
      SF Pl Dat => x + "polkom";
      SF Pl Acc => x + "Polków";
      SF Pl Instr => x + "polkami";
      SF Pl Loc => x + "polkach";
      SF Pl Voc => x + "Polkowie"
    };

    oper mkNTable0714: Str -> SubstForm => Str; --%
    oper mkNTable0714 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Polo";
      SF Sg Gen => x + "pola";
      SF Sg Dat => x + "Polowi";
      SF Sg Acc => x + "pola";
      SF Sg Instr => x + "polem";
      SF Sg Loc => x + "polu";
      SF Sg Voc => x + "Polo";
      SF Pl Nom => x + "Polowie";
      SF Pl Gen => x + "Polów";
      SF Pl Dat => x + "polom";
      SF Pl Acc => x + "Polów";
      SF Pl Instr => x + "polami";
      SF Pl Loc => x + "polach";
      SF Pl Voc => x + "Polowie"
    };

    oper mkNTable0715: Str -> SubstForm => Str; --%
    oper mkNTable0715 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0716: Str -> SubstForm => Str; --%
    oper mkNTable0716 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "popiołek";
      SF Sg Gen => x + "Popiołka";
      SF Sg Dat => x + "popiołkowi";
      SF Sg Acc => x + "Popiołka";
      SF Sg Instr => x + "popiołkiem";
      SF Sg Loc => x + "popiołku";
      SF Sg Voc => x + "popiołku";
      SF Pl Nom => x + "Popiołkowie";
      SF Pl Gen => x + "popiołków";
      SF Pl Dat => x + "popiołkom";
      SF Pl Acc => x + "popiołków";
      SF Pl Instr => x + "popiołkami";
      SF Pl Loc => x + "popiołkach";
      SF Pl Voc => x + "Popiołkowie"
    };

    oper mkNTable0717: Str -> SubstForm => Str; --%
    oper mkNTable0717 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "popów";
      SF Sg Gen => x + "Popowa";
      SF Sg Dat => x + "Popowowi";
      SF Sg Acc => x + "popów";
      SF Sg Instr => x + "Popowem";
      SF Sg Loc => x + "Popowie";
      SF Sg Voc => x + "Popowie";
      SF Pl Nom => x + "Popowy";
      SF Pl Gen => x + "Popowów";
      SF Pl Dat => x + "Popowom";
      SF Pl Acc => x + "Popowy";
      SF Pl Instr => x + "Popowami";
      SF Pl Loc => x + "Popowach";
      SF Pl Voc => x + "Popowy"
    };

    oper mkNTable0718: Str -> SubstForm => Str; --%
    oper mkNTable0718 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "prot";
      SF Sg Gen => x + "Prota";
      SF Sg Dat => x + "protowi";
      SF Sg Acc => x + "Prota";
      SF Sg Instr => x + "protem";
      SF Sg Loc => x + "procie";
      SF Sg Voc => x + "procie";
      SF Pl Nom => x + "Protowie";
      SF Pl Gen => x + "protów";
      SF Pl Dat => x + "protom";
      SF Pl Acc => x + "protów";
      SF Pl Instr => x + "protami";
      SF Pl Loc => x + "protach";
      SF Pl Voc => x + "Protowie"
    };

    oper mkNTable0719: Str -> SubstForm => Str; --%
    oper mkNTable0719 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "protazy";
      SF Sg Gen => x + "Protazego";
      SF Sg Dat => x + "Protazemu";
      SF Sg Acc => x + "Protazego";
      SF Sg Instr => x + "Protazym";
      SF Sg Loc => x + "Protazym";
      SF Sg Voc => x + "protazy";
      SF Pl Nom => x + "Protazowie";
      SF Pl Gen => x + "Protazych";
      SF Pl Dat => x + "Protazym";
      SF Pl Acc => x + "Protazych";
      SF Pl Instr => x + "Protazymi";
      SF Pl Loc => x + "Protazych";
      SF Pl Voc => x + "Protazowie"
    };

    oper mkNTable0720: Str -> SubstForm => Str; --%
    oper mkNTable0720 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "prusak";
      SF Sg Gen => x + "prusaka";
      SF Sg Dat => x + "prusakowi";
      SF Sg Acc => x + "prusaka";
      SF Sg Instr => x + "prusakiem";
      SF Sg Loc => x + "prusaku";
      SF Sg Voc => x + "prusaku";
      SF Pl Nom => x + "Prusacy";
      SF Pl Gen => x + "prusaków";
      SF Pl Dat => x + "prusakom";
      SF Pl Acc => x + "prusaków";
      SF Pl Instr => x + "prusakami";
      SF Pl Loc => x + "prusakach";
      SF Pl Voc => x + "Prusacy"
    };

    oper mkNTable0722: Str -> SubstForm => Str; --%
    oper mkNTable0722 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "przemysł";
      SF Sg Gen => x + "Przemysła";
      SF Sg Dat => x + "przemysłowi";
      SF Sg Acc => x + "Przemysła";
      SF Sg Instr => x + "przemysłem";
      SF Sg Loc => x + "przemyśle";
      SF Sg Voc => x + "przemyśle";
      SF Pl Nom => x + "Przemysłowie";
      SF Pl Gen => x + "przemysłów";
      SF Pl Dat => x + "przemysłom";
      SF Pl Acc => x + "przemysłów";
      SF Pl Instr => x + "przemysłami";
      SF Pl Loc => x + "przemysłach";
      SF Pl Voc => x + "Przemysłowie"
    };

    oper mkNTable0723: Str -> SubstForm => Str; --%
    oper mkNTable0723 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Przybora";
      SF Sg Gen => x + "przybory";
      SF Sg Dat => x + "przyborze";
      SF Sg Acc => x + "Przyborę";
      SF Sg Instr => x + "Przyborą";
      SF Sg Loc => x + "przyborze";
      SF Sg Voc => x + "Przyboro";
      SF Pl Nom => x + "Przyborowie";
      SF Pl Gen => x + "przyborów";
      SF Pl Dat => x + "przyborom";
      SF Pl Acc => x + "przyborów";
      SF Pl Instr => x + "przyborami";
      SF Pl Loc => x + "przyborach";
      SF Pl Voc => x + "Przyborowie"
    };

    oper mkNTable0724: Str -> SubstForm => Str; --%
    oper mkNTable0724 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "przybysz";
      SF Sg Gen => x + "przybysza";
      SF Sg Dat => x + "przybyszowi";
      SF Sg Acc => x + "przybysza";
      SF Sg Instr => x + "przybyszem";
      SF Sg Loc => x + "przybyszu";
      SF Sg Voc => x + "przybyszu";
      SF Pl Nom => x + "Przybyszowie";
      SF Pl Gen => x + "przybyszów";
      SF Pl Dat => x + "przybyszom";
      SF Pl Acc => x + "przybyszów";
      SF Pl Instr => x + "przybyszami";
      SF Pl Loc => x + "przybyszach";
      SF Pl Voc => x + "Przybyszowie"
    };

    oper mkNTable0725: Str -> SubstForm => Str; --%
    oper mkNTable0725 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "przybyła";
      SF Sg Gen => x + "Przybyły";
      SF Sg Dat => x + "Przybyle";
      SF Sg Acc => x + "Przybyłę";
      SF Sg Instr => x + "przybyłą";
      SF Sg Loc => x + "Przybyle";
      SF Sg Voc => x + "Przybyło";
      SF Pl Nom => x + "Przybyłowie";
      SF Pl Gen => x + "Przybyłów";
      SF Pl Dat => x + "Przybyłom";
      SF Pl Acc => x + "Przybyłów";
      SF Pl Instr => x + "Przybyłami";
      SF Pl Loc => x + "Przybyłach";
      SF Pl Voc => x + "Przybyłowie"
    };

    oper mkNTable0726: Str -> SubstForm => Str; --%
    oper mkNTable0726 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ptak";
      SF Sg Gen => x + "ptaka";
      SF Sg Dat => x + "ptakowi";
      SF Sg Acc => x + "ptaka";
      SF Sg Instr => x + "ptakiem";
      SF Sg Loc => x + "ptaku";
      SF Sg Voc => x + "ptaku";
      SF Pl Nom => x + "Ptakowie";
      SF Pl Gen => x + "ptaków";
      SF Pl Dat => x + "ptakom";
      SF Pl Acc => x + "ptaków";
      SF Pl Instr => x + "ptakami";
      SF Pl Loc => x + "ptakach";
      SF Pl Voc => x + "Ptakowie"
    };

    oper mkNTable0727: Str -> SubstForm => Str; --%
    oper mkNTable0727 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Puck";
      SF Sg Gen => x + "pucka";
      SF Sg Dat => x + "puckowi";
      SF Sg Acc => x + "Puck";
      SF Sg Instr => x + "puckiem";
      SF Sg Loc => x + "pucku";
      SF Sg Voc => x + "pucku";
      SF Pl Nom => x + "pucki";
      SF Pl Gen => x + "pucków";
      SF Pl Dat => x + "puckom";
      SF Pl Acc => x + "pucki";
      SF Pl Instr => x + "puckami";
      SF Pl Loc => x + "puckach";
      SF Pl Voc => x + "pucki"
    };

    oper mkNTable0729: Str -> SubstForm => Str; --%
    oper mkNTable0729 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "pług";
      SF Sg Gen => x + "pługa";
      SF Sg Dat => x + "pługowi";
      SF Sg Acc => x + "pługa";
      SF Sg Instr => x + "pługiem";
      SF Sg Loc => x + "pługu";
      SF Sg Voc => x + "pługu";
      SF Pl Nom => x + "Pługowie";
      SF Pl Gen => x + "pługów";
      SF Pl Dat => x + "pługom";
      SF Pl Acc => x + "pługów";
      SF Pl Instr => x + "pługami";
      SF Pl Loc => x + "pługach";
      SF Pl Voc => x + "Pługowie"
    };

    oper mkNTable0730: Str -> SubstForm => Str; --%
    oper mkNTable0730 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0731: Str -> SubstForm => Str; --%
    oper mkNTable0731 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "raba";
      SF Sg Gen => x + "raby";
      SF Sg Dat => x + "rabie";
      SF Sg Acc => x + "Rabę";
      SF Sg Instr => x + "Rabą";
      SF Sg Loc => x + "rabie";
      SF Sg Voc => x + "Rabo";
      SF Pl Nom => x + "raby";
      SF Pl Gen => x + "rab";
      SF Pl Dat => x + "rabom";
      SF Pl Acc => x + "raby";
      SF Pl Instr => x + "rabami";
      SF Pl Loc => x + "rabach";
      SF Pl Voc => x + "raby"
    };

    oper mkNTable0732: Str -> SubstForm => Str; --%
    oper mkNTable0732 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "rak";
      SF Sg Gen => x + "raka";
      SF Sg Dat => x + "rakowi";
      SF Sg Acc => x + "raka";
      SF Sg Instr => x + "rakiem";
      SF Sg Loc => x + "raku";
      SF Sg Voc => x + "raku";
      SF Pl Nom => x + "Rakowie";
      SF Pl Gen => x + "raków";
      SF Pl Dat => x + "rakom";
      SF Pl Acc => x + "raków";
      SF Pl Instr => x + "rakami";
      SF Pl Loc => x + "rakach";
      SF Pl Voc => x + "Rakowie"
    };

    oper mkNTable0734: Str -> SubstForm => Str; --%
    oper mkNTable0734 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rataj";
      SF Sg Gen => x + "rataja";
      SF Sg Dat => x + "ratajowi";
      SF Sg Acc => x + "rataja";
      SF Sg Instr => x + "ratajem";
      SF Sg Loc => x + "rataju";
      SF Sg Voc => x + "rataju";
      SF Pl Nom => x + "Ratajowie";
      SF Pl Gen => x + "ratajów";
      SF Pl Dat => x + "ratajom";
      SF Pl Acc => x + "ratajów";
      SF Pl Instr => x + "ratajami";
      SF Pl Loc => x + "ratajach";
      SF Pl Voc => x + "Ratajowie"
    };

    oper mkNTable0735: Str -> SubstForm => Str; --%
    oper mkNTable0735 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "rebeka";
      SF Sg Gen => x + "rebeki";
      SF Sg Dat => x + "Rebece";
      SF Sg Acc => x + "Rebekę";
      SF Sg Instr => x + "Rebeką";
      SF Sg Loc => x + "Rebece";
      SF Sg Voc => x + "Rebeko";
      SF Pl Nom => x + "rebeki";
      SF Pl Gen => x + "rebek";
      SF Pl Dat => x + "rebekom";
      SF Pl Acc => x + "rebeki";
      SF Pl Instr => x + "rebekami";
      SF Pl Loc => x + "rebekach";
      SF Pl Voc => x + "rebeki"
    };

    oper mkNTable0736: Str -> SubstForm => Str; --%
    oper mkNTable0736 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Renia";
      SF Sg Gen => x + "Reni";
      SF Sg Dat => x + "Reni";
      SF Sg Acc => x + "Renię";
      SF Sg Instr => x + "Renią";
      SF Sg Loc => x + "Reni";
      SF Sg Voc => x + "Reniu";
      SF Pl Nom => x + "renie";
      SF Pl Gen => x + "Reń";
      SF Pl Dat => x + "Reniom";
      SF Pl Acc => x + "renie";
      SF Pl Instr => x + "Reniami";
      SF Pl Loc => x + "Reniach";
      SF Pl Voc => x + "renie"
    };

    oper mkNTable0737: Str -> SubstForm => Str; --%
    oper mkNTable0737 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Robin";
      SF Sg Gen => x + "Robina";
      SF Sg Dat => x + "Robinowi";
      SF Sg Acc => x + "Robina";
      SF Sg Instr => x + "Robinem";
      SF Sg Loc => x + "robinie";
      SF Sg Voc => x + "robinie";
      SF Pl Nom => x + "Robinowie";
      SF Pl Gen => x + "Robinów";
      SF Pl Dat => x + "Robinom";
      SF Pl Acc => x + "Robinów";
      SF Pl Instr => x + "Robinami";
      SF Pl Loc => x + "Robinach";
      SF Pl Voc => x + "Robinowie"
    };

    oper mkNTable0739: Str -> SubstForm => Str; --%
    oper mkNTable0739 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "rola";
      SF Sg Gen => x + "roli";
      SF Sg Dat => x + "roli";
      SF Sg Acc => x + "rolę";
      SF Sg Instr => x + "rolą";
      SF Sg Loc => x + "roli";
      SF Sg Voc => x + "rolo";
      SF Pl Nom => x + "Rolowie";
      SF Pl Gen => x + "Rolów";
      SF Pl Dat => x + "rolom";
      SF Pl Acc => x + "Rolów";
      SF Pl Instr => x + "rolami";
      SF Pl Loc => x + "rolach";
      SF Pl Voc => x + "Rolowie"
    };

    oper mkNTable0740: Str -> SubstForm => Str; --%
    oper mkNTable0740 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "o";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0741: Str -> SubstForm => Str; --%
    oper mkNTable0741 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "rosa";
      SF Sg Gen => x + "rosy";
      SF Sg Dat => x + "rosie";
      SF Sg Acc => x + "rosę";
      SF Sg Instr => x + "rosą";
      SF Sg Loc => x + "rosie";
      SF Sg Voc => x + "roso";
      SF Pl Nom => x + "Rosowie";
      SF Pl Gen => x + "Rosów";
      SF Pl Dat => x + "rosom";
      SF Pl Acc => x + "Rosów";
      SF Pl Instr => x + "rosami";
      SF Pl Loc => x + "rosach";
      SF Pl Voc => x + "Rosowie"
    };

    oper mkNTable0742: Str -> SubstForm => Str; --%
    oper mkNTable0742 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rosół";
      SF Sg Gen => x + "Rosoła";
      SF Sg Dat => x + "rosołowi";
      SF Sg Acc => x + "Rosoła";
      SF Sg Instr => x + "rosołem";
      SF Sg Loc => x + "rosole";
      SF Sg Voc => x + "rosole";
      SF Pl Nom => x + "Rosołowie";
      SF Pl Gen => x + "rosołów";
      SF Pl Dat => x + "rosołom";
      SF Pl Acc => x + "rosołów";
      SF Pl Instr => x + "rosołami";
      SF Pl Loc => x + "rosołach";
      SF Pl Voc => x + "Rosołowie"
    };

    oper mkNTable0743: Str -> SubstForm => Str; --%
    oper mkNTable0743 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Roth";
      SF Sg Gen => x + "Rotha";
      SF Sg Dat => x + "Rothowi";
      SF Sg Acc => x + "Rotha";
      SF Sg Instr => x + "Rothem";
      SF Sg Loc => x + "rocie";
      SF Sg Voc => x + "rocie";
      SF Pl Nom => x + "Rothowie";
      SF Pl Gen => x + "Rothów";
      SF Pl Dat => x + "Rothom";
      SF Pl Acc => x + "Rothów";
      SF Pl Instr => x + "Rothami";
      SF Pl Loc => x + "Rothach";
      SF Pl Voc => x + "Rothowie"
    };

    oper mkNTable0746: Str -> SubstForm => Str; --%
    oper mkNTable0746 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rumun";
      SF Sg Gen => x + "rumuna";
      SF Sg Dat => x + "rumunowi";
      SF Sg Acc => x + "rumuna";
      SF Sg Instr => x + "rumunem";
      SF Sg Loc => x + "rumunie";
      SF Sg Voc => x + "rumunie";
      SF Pl Nom => x + "Rumuni";
      SF Pl Gen => x + "rumunów";
      SF Pl Dat => x + "rumunom";
      SF Pl Acc => x + "rumunów";
      SF Pl Instr => x + "rumunami";
      SF Pl Loc => x + "rumunach";
      SF Pl Voc => x + "Rumuni"
    };

    oper mkNTable0747: Str -> SubstForm => Str; --%
    oper mkNTable0747 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "rus";
      SF Sg Gen => x + "rusa";
      SF Sg Dat => x + "rusowi";
      SF Sg Acc => x + "rusa";
      SF Sg Instr => x + "rusem";
      SF Sg Loc => x + "rusie";
      SF Sg Voc => x + "rusie";
      SF Pl Nom => x + "Rusowie";
      SF Pl Gen => x + "rusów";
      SF Pl Dat => x + "rusom";
      SF Pl Acc => x + "rusów";
      SF Pl Instr => x + "rusami";
      SF Pl Loc => x + "rusach";
      SF Pl Voc => x + "Rusowie"
    };

    oper mkNTable0748: Str -> SubstForm => Str; --%
    oper mkNTable0748 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rusek";
      SF Sg Gen => x + "ruska";
      SF Sg Dat => x + "ruskowi";
      SF Sg Acc => x + "ruska";
      SF Sg Instr => x + "ruskiem";
      SF Sg Loc => x + "rusku";
      SF Sg Voc => x + "rusku";
      SF Pl Nom => x + "Ruskowie";
      SF Pl Gen => x + "rusków";
      SF Pl Dat => x + "ruskom";
      SF Pl Acc => x + "rusków";
      SF Pl Instr => x + "ruskami";
      SF Pl Loc => x + "ruskach";
      SF Pl Voc => x + "Ruskowie"
    };

    oper mkNTable0750: Str -> SubstForm => Str; --%
    oper mkNTable0750 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "rutherford";
      SF Sg Gen => x + "rutherforda";
      SF Sg Dat => x + "rutherfordowi";
      SF Sg Acc => x + "rutherforda";
      SF Sg Instr => x + "rutherfordem";
      SF Sg Loc => x + "rutherfordzie";
      SF Sg Voc => x + "rutherfordzie";
      SF Pl Nom => x + "Rutherfordowie";
      SF Pl Gen => x + "rutherfordów";
      SF Pl Dat => x + "rutherfordom";
      SF Pl Acc => x + "rutherfordów";
      SF Pl Instr => x + "rutherfordami";
      SF Pl Loc => x + "rutherfordach";
      SF Pl Voc => x + "Rutherfordowie"
    };

    oper mkNTable0751: Str -> SubstForm => Str; --%
    oper mkNTable0751 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rybak";
      SF Sg Gen => x + "rybaka";
      SF Sg Dat => x + "rybakowi";
      SF Sg Acc => x + "rybaka";
      SF Sg Instr => x + "rybakiem";
      SF Sg Loc => x + "rybaku";
      SF Sg Voc => x + "rybaku";
      SF Pl Nom => x + "Rybakowie";
      SF Pl Gen => x + "rybaków";
      SF Pl Dat => x + "rybakom";
      SF Pl Acc => x + "rybaków";
      SF Pl Instr => x + "rybakami";
      SF Pl Loc => x + "rybakach";
      SF Pl Voc => x + "Rybakowie"
    };

    oper mkNTable0752: Str -> SubstForm => Str; --%
    oper mkNTable0752 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rydel";
      SF Sg Gen => x + "rydla";
      SF Sg Dat => x + "rydlowi";
      SF Sg Acc => x + "rydla";
      SF Sg Instr => x + "rydlem";
      SF Sg Loc => x + "rydlu";
      SF Sg Voc => x + "rydlu";
      SF Pl Nom => x + "Rydlowie";
      SF Pl Gen => x + "rydlów";
      SF Pl Dat => x + "rydlom";
      SF Pl Acc => x + "rydlów";
      SF Pl Instr => x + "rydlami";
      SF Pl Loc => x + "rydlach";
      SF Pl Voc => x + "Rydlowie"
    };

    oper mkNTable0753: Str -> SubstForm => Str; --%
    oper mkNTable0753 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Rysio";
      SF Sg Gen => x + "rysia";
      SF Sg Dat => x + "rysiowi";
      SF Sg Acc => x + "rysia";
      SF Sg Instr => x + "rysiem";
      SF Sg Loc => x + "rysiu";
      SF Sg Voc => x + "rysiu";
      SF Pl Nom => x + "Rysiowie";
      SF Pl Gen => x + "rysiów";
      SF Pl Dat => x + "rysiom";
      SF Pl Acc => x + "rysiów";
      SF Pl Instr => x + "rysiami";
      SF Pl Loc => x + "rysiach";
      SF Pl Voc => x + "Rysiowie"
    };

    oper mkNTable0754: Str -> SubstForm => Str; --%
    oper mkNTable0754 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "sabin";
      SF Sg Gen => x + "sabina";
      SF Sg Dat => x + "sabinowi";
      SF Sg Acc => x + "sabina";
      SF Sg Instr => x + "sabinem";
      SF Sg Loc => x + "sabinie";
      SF Sg Voc => x + "sabinie";
      SF Pl Nom => x + "Sabinowie";
      SF Pl Gen => x + "sabinów";
      SF Pl Dat => x + "sabinom";
      SF Pl Acc => x + "sabinów";
      SF Pl Instr => x + "sabinami";
      SF Pl Loc => x + "sabinach";
      SF Pl Voc => x + "Sabinowie"
    };

    oper mkNTable0755: Str -> SubstForm => Str; --%
    oper mkNTable0755 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "sabina";
      SF Sg Gen => x + "sabiny";
      SF Sg Dat => x + "sabinie";
      SF Sg Acc => x + "Sabinę";
      SF Sg Instr => x + "Sabiną";
      SF Sg Loc => x + "sabinie";
      SF Sg Voc => x + "Sabino";
      SF Pl Nom => x + "sabiny";
      SF Pl Gen => x + "sabin";
      SF Pl Dat => x + "sabinom";
      SF Pl Acc => x + "sabiny";
      SF Pl Instr => x + "sabinami";
      SF Pl Loc => x + "sabinach";
      SF Pl Voc => x + "sabiny"
    };

    oper mkNTable0757: Str -> SubstForm => Str; --%
    oper mkNTable0757 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sam";
      SF Sg Gen => x + "Sama";
      SF Sg Dat => x + "samowi";
      SF Sg Acc => x + "Sama";
      SF Sg Instr => x + "samem";
      SF Sg Loc => x + "samie";
      SF Sg Voc => x + "samie";
      SF Pl Nom => x + "Samowie";
      SF Pl Gen => x + "samów";
      SF Pl Dat => x + "samom";
      SF Pl Acc => x + "samów";
      SF Pl Instr => x + "samami";
      SF Pl Loc => x + "samach";
      SF Pl Voc => x + "Samowie"
    };

    oper mkNTable0759: Str -> SubstForm => Str; --%
    oper mkNTable0759 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "samojed";
      SF Sg Gen => x + "samojeda";
      SF Sg Dat => x + "samojedowi";
      SF Sg Acc => x + "samojeda";
      SF Sg Instr => x + "samojedem";
      SF Sg Loc => x + "samojedzie";
      SF Sg Voc => x + "samojedzie";
      SF Pl Nom => x + "Samojedzi";
      SF Pl Gen => x + "samojedów";
      SF Pl Dat => x + "samojedom";
      SF Pl Acc => x + "samojedów";
      SF Pl Instr => x + "samojedami";
      SF Pl Loc => x + "samojedach";
      SF Pl Voc => x + "Samojedzi"
    };

    oper mkNTable0760: Str -> SubstForm => Str; --%
    oper mkNTable0760 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "san";
      SF Sg Gen => x + "Sanu";
      SF Sg Dat => x + "sanowi";
      SF Sg Acc => x + "san";
      SF Sg Instr => x + "sanem";
      SF Sg Loc => x + "sanie";
      SF Sg Voc => x + "sanie";
      SF Pl Nom => x + "sany";
      SF Pl Gen => x + "sanów";
      SF Pl Dat => x + "sanom";
      SF Pl Acc => x + "sany";
      SF Pl Instr => x + "sanami";
      SF Pl Loc => x + "sanach";
      SF Pl Voc => x + "sany"
    };

    oper mkNTable0761: Str -> SubstForm => Str; --%
    oper mkNTable0761 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Sandra";
      SF Sg Gen => x + "sandry";
      SF Sg Dat => x + "sandrze";
      SF Sg Acc => x + "Sandrę";
      SF Sg Instr => x + "Sandrą";
      SF Sg Loc => x + "sandrze";
      SF Sg Voc => x + "Sandro";
      SF Pl Nom => x + "sandry";
      SF Pl Gen => x + "sandr";
      SF Pl Dat => x + "sandrom";
      SF Pl Acc => x + "sandry";
      SF Pl Instr => x + "sandrami";
      SF Pl Loc => x + "sandrach";
      SF Pl Voc => x + "sandry"
    };

    oper mkNTable0762: Str -> SubstForm => Str; --%
    oper mkNTable0762 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Santi";
      SF Sg Gen => x + "Santiego";
      SF Sg Dat => x + "Santiemu";
      SF Sg Acc => x + "Santiego";
      SF Sg Instr => x + "santim";
      SF Sg Loc => x + "santim";
      SF Sg Voc => x + "Santi";
      SF Pl Nom => x + "Santi";
      SF Pl Gen => x + "Santich";
      SF Pl Dat => x + "santim";
      SF Pl Acc => x + "Santich";
      SF Pl Instr => x + "Santimi";
      SF Pl Loc => x + "Santich";
      SF Pl Voc => x + "Santi"
    };

    oper mkNTable0763: Str -> SubstForm => Str; --%
    oper mkNTable0763 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ha";
      SF Sg Gen => x + "hy";
      SF Sg Dat => x + "że";
      SF Sg Acc => x + "hę";
      SF Sg Instr => x + "hą";
      SF Sg Loc => x + "że";
      SF Sg Voc => x + "ho";
      SF Pl Nom => x + "howie";
      SF Pl Gen => x + "hów";
      SF Pl Dat => x + "hom";
      SF Pl Acc => x + "hów";
      SF Pl Instr => x + "hami";
      SF Pl Loc => x + "hach";
      SF Pl Voc => x + "howie"
    };

    oper mkNTable0764: Str -> SubstForm => Str; --%
    oper mkNTable0764 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Saracen";
      SF Sg Gen => x + "Saracena";
      SF Sg Dat => x + "Saracenowi";
      SF Sg Acc => x + "Saracena";
      SF Sg Instr => x + "Saracenem";
      SF Sg Loc => x + "saracenie";
      SF Sg Voc => x + "saracenie";
      SF Pl Nom => x + "Saraceni";
      SF Pl Gen => x + "Saracenów";
      SF Pl Dat => x + "Saracenom";
      SF Pl Acc => x + "Saracenów";
      SF Pl Instr => x + "Saracenami";
      SF Pl Loc => x + "Saracenach";
      SF Pl Voc => x + "Saraceni"
    };

    oper mkNTable0765: Str -> SubstForm => Str; --%
    oper mkNTable0765 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sas";
      SF Sg Gen => x + "sasa";
      SF Sg Dat => x + "sasowi";
      SF Sg Acc => x + "sasa";
      SF Sg Instr => x + "sasem";
      SF Sg Loc => x + "sasie";
      SF Sg Voc => x + "sasie";
      SF Pl Nom => x + "Sasi";
      SF Pl Gen => x + "sasów";
      SF Pl Dat => x + "sasom";
      SF Pl Acc => x + "sasów";
      SF Pl Instr => x + "sasami";
      SF Pl Loc => x + "sasach";
      SF Pl Voc => x + "Sasi"
    };

    oper mkNTable0766: Str -> SubstForm => Str; --%
    oper mkNTable0766 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "serafina";
      SF Sg Gen => x + "serafiny";
      SF Sg Dat => x + "serafinie";
      SF Sg Acc => x + "Serafinę";
      SF Sg Instr => x + "Serafiną";
      SF Sg Loc => x + "serafinie";
      SF Sg Voc => x + "Serafino";
      SF Pl Nom => x + "serafiny";
      SF Pl Gen => x + "serafin";
      SF Pl Dat => x + "serafinom";
      SF Pl Acc => x + "serafiny";
      SF Pl Instr => x + "serafinami";
      SF Pl Loc => x + "serafinach";
      SF Pl Voc => x + "serafiny"
    };

    oper mkNTable0768: Str -> SubstForm => Str; --%
    oper mkNTable0768 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Sica";
      SF Sg Gen => x + "siki";
      SF Sg Dat => x + "sice";
      SF Sg Acc => x + "Sicę";
      SF Sg Instr => x + "Sicą";
      SF Sg Loc => x + "sice";
      SF Sg Voc => x + "Sico";
      SF Pl Nom => x + "Sicowie";
      SF Pl Gen => x + "Siców";
      SF Pl Dat => x + "Sicom";
      SF Pl Acc => x + "Siców";
      SF Pl Instr => x + "Sicami";
      SF Pl Loc => x + "Sicach";
      SF Pl Voc => x + "Sicowie"
    };

    oper mkNTable0771: Str -> SubstForm => Str; --%
    oper mkNTable0771 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "sikora";
      SF Sg Gen => x + "sikory";
      SF Sg Dat => x + "sikorze";
      SF Sg Acc => x + "sikorę";
      SF Sg Instr => x + "sikorą";
      SF Sg Loc => x + "sikorze";
      SF Sg Voc => x + "sikoro";
      SF Pl Nom => x + "Sikorowie";
      SF Pl Gen => x + "Sikorów";
      SF Pl Dat => x + "sikorom";
      SF Pl Acc => x + "Sikorów";
      SF Pl Instr => x + "sikorami";
      SF Pl Loc => x + "sikorach";
      SF Pl Voc => x + "Sikorowie"
    };

    oper mkNTable0772: Str -> SubstForm => Str; --%
    oper mkNTable0772 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "singer";
      SF Sg Gen => x + "singera";
      SF Sg Dat => x + "singerowi";
      SF Sg Acc => x + "singera";
      SF Sg Instr => x + "singerem";
      SF Sg Loc => x + "singerze";
      SF Sg Voc => x + "singerze";
      SF Pl Nom => x + "Singerowie";
      SF Pl Gen => x + "singerów";
      SF Pl Dat => x + "singerom";
      SF Pl Acc => x + "singerów";
      SF Pl Instr => x + "singerami";
      SF Pl Loc => x + "singerach";
      SF Pl Voc => x + "Singerowie"
    };

    oper mkNTable0773: Str -> SubstForm => Str; --%
    oper mkNTable0773 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "siwek";
      SF Sg Gen => x + "siwka";
      SF Sg Dat => x + "siwkowi";
      SF Sg Acc => x + "siwka";
      SF Sg Instr => x + "siwkiem";
      SF Sg Loc => x + "siwku";
      SF Sg Voc => x + "siwku";
      SF Pl Nom => x + "Siwkowie";
      SF Pl Gen => x + "siwków";
      SF Pl Dat => x + "siwkom";
      SF Pl Acc => x + "siwków";
      SF Pl Instr => x + "siwkami";
      SF Pl Loc => x + "siwkach";
      SF Pl Voc => x + "Siwkowie"
    };

    oper mkNTable0774: Str -> SubstForm => Str; --%
    oper mkNTable0774 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ek";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0775: Str -> SubstForm => Str; --%
    oper mkNTable0775 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "siwiec";
      SF Sg Gen => x + "siwca";
      SF Sg Dat => x + "siwcowi";
      SF Sg Acc => x + "siwca";
      SF Sg Instr => x + "siwcem";
      SF Sg Loc => x + "siwcu";
      SF Sg Voc => x + "siwcu";
      SF Pl Nom => x + "Siwcowie";
      SF Pl Gen => x + "siwców";
      SF Pl Dat => x + "siwcom";
      SF Pl Acc => x + "siwców";
      SF Pl Instr => x + "siwcami";
      SF Pl Loc => x + "siwcach";
      SF Pl Voc => x + "Siwcowie"
    };

    oper mkNTable0778: Str -> SubstForm => Str; --%
    oper mkNTable0778 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "skarga";
      SF Sg Gen => x + "skargi";
      SF Sg Dat => x + "skardze";
      SF Sg Acc => x + "skargę";
      SF Sg Instr => x + "skargą";
      SF Sg Loc => x + "skardze";
      SF Sg Voc => x + "skargo";
      SF Pl Nom => x + "Skargowie";
      SF Pl Gen => x + "Skargów";
      SF Pl Dat => x + "skargom";
      SF Pl Acc => x + "Skargów";
      SF Pl Instr => x + "skargami";
      SF Pl Loc => x + "skargach";
      SF Pl Voc => x + "Skargowie"
    };

    oper mkNTable0779: Str -> SubstForm => Str; --%
    oper mkNTable0779 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "skiba";
      SF Sg Gen => x + "skiby";
      SF Sg Dat => x + "skibie";
      SF Sg Acc => x + "skibę";
      SF Sg Instr => x + "skibą";
      SF Sg Loc => x + "skibie";
      SF Sg Voc => x + "skibo";
      SF Pl Nom => x + "Skibowie";
      SF Pl Gen => x + "Skibów";
      SF Pl Dat => x + "skibom";
      SF Pl Acc => x + "Skibów";
      SF Pl Instr => x + "skibami";
      SF Pl Loc => x + "skibach";
      SF Pl Voc => x + "Skibowie"
    };

    oper mkNTable0780: Str -> SubstForm => Str; --%
    oper mkNTable0780 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "e";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "e";
      SF Pl Dat => x + "e";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "e";
      SF Pl Loc => x + "e";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0781: Str -> SubstForm => Str; --%
    oper mkNTable0781 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "skorupka";
      SF Sg Gen => x + "skorupki";
      SF Sg Dat => x + "skorupce";
      SF Sg Acc => x + "skorupkę";
      SF Sg Instr => x + "skorupką";
      SF Sg Loc => x + "skorupce";
      SF Sg Voc => x + "skorupko";
      SF Pl Nom => x + "Skorupkowie";
      SF Pl Gen => x + "skorupek";
      SF Pl Dat => x + "skorupkom";
      SF Pl Acc => x + "skorupek";
      SF Pl Instr => x + "skorupkami";
      SF Pl Loc => x + "skorupkach";
      SF Pl Voc => x + "Skorupkowie"
    };

    oper mkNTable0782: Str -> SubstForm => Str; --%
    oper mkNTable0782 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "skowronek";
      SF Sg Gen => x + "skowronka";
      SF Sg Dat => x + "skowronkowi";
      SF Sg Acc => x + "skowronka";
      SF Sg Instr => x + "skowronkiem";
      SF Sg Loc => x + "skowronku";
      SF Sg Voc => x + "skowronku";
      SF Pl Nom => x + "Skowronkowie";
      SF Pl Gen => x + "skowronków";
      SF Pl Dat => x + "skowronkom";
      SF Pl Acc => x + "skowronków";
      SF Pl Instr => x + "skowronkami";
      SF Pl Loc => x + "skowronkach";
      SF Pl Voc => x + "Skowronkowie"
    };

    oper mkNTable0784: Str -> SubstForm => Str; --%
    oper mkNTable0784 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "soból";
      SF Sg Gen => x + "sobola";
      SF Sg Dat => x + "sobolowi";
      SF Sg Acc => x + "sobola";
      SF Sg Instr => x + "sobolem";
      SF Sg Loc => x + "sobolu";
      SF Sg Voc => x + "sobolu";
      SF Pl Nom => x + "Sobolowie";
      SF Pl Gen => x + "soboli";
      SF Pl Dat => x + "sobolom";
      SF Pl Acc => x + "soboli";
      SF Pl Instr => x + "sobolami";
      SF Pl Loc => x + "sobolach";
      SF Pl Voc => x + "Sobolowie"
    };

    oper mkNTable0785: Str -> SubstForm => Str; --%
    oper mkNTable0785 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "socha";
      SF Sg Gen => x + "sochy";
      SF Sg Dat => x + "sosze";
      SF Sg Acc => x + "sochę";
      SF Sg Instr => x + "sochą";
      SF Sg Loc => x + "sosze";
      SF Sg Voc => x + "socho";
      SF Pl Nom => x + "Sochowie";
      SF Pl Gen => x + "Sochów";
      SF Pl Dat => x + "sochom";
      SF Pl Acc => x + "Sochów";
      SF Pl Instr => x + "sochami";
      SF Pl Loc => x + "sochach";
      SF Pl Voc => x + "Sochowie"
    };

    oper mkNTable0787: Str -> SubstForm => Str; --%
    oper mkNTable0787 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "solana";
      SF Sg Gen => x + "Solany";
      SF Sg Dat => x + "solanie";
      SF Sg Acc => x + "Solanę";
      SF Sg Instr => x + "Solaną";
      SF Sg Loc => x + "solanie";
      SF Sg Voc => x + "solano";
      SF Pl Nom => x + "Solanowie";
      SF Pl Gen => x + "Solanów";
      SF Pl Dat => x + "solanom";
      SF Pl Acc => x + "Solanów";
      SF Pl Instr => x + "solanami";
      SF Pl Loc => x + "solanach";
      SF Pl Voc => x + "Solanowie"
    };

    oper mkNTable0788: Str -> SubstForm => Str; --%
    oper mkNTable0788 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "sowa";
      SF Sg Gen => x + "sowy";
      SF Sg Dat => x + "sowie";
      SF Sg Acc => x + "sowę";
      SF Sg Instr => x + "sową";
      SF Sg Loc => x + "sowie";
      SF Sg Voc => x + "sowo";
      SF Pl Nom => x + "Sowowie";
      SF Pl Gen => x + "Sowów";
      SF Pl Dat => x + "sowom";
      SF Pl Acc => x + "Sowów";
      SF Pl Instr => x + "sowami";
      SF Pl Loc => x + "sowach";
      SF Pl Voc => x + "Sowowie"
    };

    oper mkNTable0789: Str -> SubstForm => Str; --%
    oper mkNTable0789 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "spencer";
      SF Sg Gen => x + "spencera";
      SF Sg Dat => x + "spencerowi";
      SF Sg Acc => x + "spencera";
      SF Sg Instr => x + "spencerem";
      SF Sg Loc => x + "spencerze";
      SF Sg Voc => x + "spencerze";
      SF Pl Nom => x + "Spencerowie";
      SF Pl Gen => x + "spencerów";
      SF Pl Dat => x + "spencerom";
      SF Pl Acc => x + "spencerów";
      SF Pl Instr => x + "spencerami";
      SF Pl Loc => x + "spencerach";
      SF Pl Voc => x + "Spencerowie"
    };

    oper mkNTable0791: Str -> SubstForm => Str; --%
    oper mkNTable0791 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "sroka";
      SF Sg Gen => x + "sroki";
      SF Sg Dat => x + "sroce";
      SF Sg Acc => x + "srokę";
      SF Sg Instr => x + "sroką";
      SF Sg Loc => x + "sroce";
      SF Sg Voc => x + "sroko";
      SF Pl Nom => x + "Srokowie";
      SF Pl Gen => x + "Sroków";
      SF Pl Dat => x + "srokom";
      SF Pl Acc => x + "Sroków";
      SF Pl Instr => x + "srokami";
      SF Pl Loc => x + "srokach";
      SF Pl Voc => x + "Srokowie"
    };

    oper mkNTable0792: Str -> SubstForm => Str; --%
    oper mkNTable0792 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Starr";
      SF Sg Gen => x + "Starra";
      SF Sg Dat => x + "Starrowi";
      SF Sg Acc => x + "Starra";
      SF Sg Instr => x + "Starrem";
      SF Sg Loc => x + "starze";
      SF Sg Voc => x + "starze";
      SF Pl Nom => x + "Starrowie";
      SF Pl Gen => x + "Starrów";
      SF Pl Dat => x + "Starrom";
      SF Pl Acc => x + "Starrów";
      SF Pl Instr => x + "Starrami";
      SF Pl Loc => x + "Starrach";
      SF Pl Voc => x + "Starrowie"
    };

    oper mkNTable0793: Str -> SubstForm => Str; --%
    oper mkNTable0793 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0794: Str -> SubstForm => Str; --%
    oper mkNTable0794 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "stefanek";
      SF Sg Gen => x + "stefanka";
      SF Sg Dat => x + "Stefankowi";
      SF Sg Acc => x + "stefanka";
      SF Sg Instr => x + "Stefankiem";
      SF Sg Loc => x + "Stefanku";
      SF Sg Voc => x + "Stefanku";
      SF Pl Nom => x + "Stefankowie";
      SF Pl Gen => x + "Stefanków";
      SF Pl Dat => x + "stefankom";
      SF Pl Acc => x + "Stefanków";
      SF Pl Instr => x + "stefankami";
      SF Pl Loc => x + "stefankach";
      SF Pl Voc => x + "Stefankowie"
    };

    oper mkNTable0796: Str -> SubstForm => Str; --%
    oper mkNTable0796 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Stenia";
      SF Sg Gen => x + "Steni";
      SF Sg Dat => x + "Steni";
      SF Sg Acc => x + "Stenię";
      SF Sg Instr => x + "Stenią";
      SF Sg Loc => x + "Steni";
      SF Sg Voc => x + "Steniu";
      SF Pl Nom => x + "stenie";
      SF Pl Gen => x + "Steń";
      SF Pl Dat => x + "Steniom";
      SF Pl Acc => x + "stenie";
      SF Pl Instr => x + "Steniami";
      SF Pl Loc => x + "Steniach";
      SF Pl Voc => x + "stenie"
    };

    oper mkNTable0797: Str -> SubstForm => Str; --%
    oper mkNTable0797 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "stojan";
      SF Sg Gen => x + "stojana";
      SF Sg Dat => x + "stojanowi";
      SF Sg Acc => x + "stojana";
      SF Sg Instr => x + "stojanem";
      SF Sg Loc => x + "stojanie";
      SF Sg Voc => x + "stojanie";
      SF Pl Nom => x + "Stojanowie";
      SF Pl Gen => x + "stojanów";
      SF Pl Dat => x + "stojanom";
      SF Pl Acc => x + "stojanów";
      SF Pl Instr => x + "stojanami";
      SF Pl Loc => x + "stojanach";
      SF Pl Voc => x + "Stojanowie"
    };

    oper mkNTable0799: Str -> SubstForm => Str; --%
    oper mkNTable0799 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "strug";
      SF Sg Gen => x + "struga";
      SF Sg Dat => x + "strugowi";
      SF Sg Acc => x + "struga";
      SF Sg Instr => x + "strugiem";
      SF Sg Loc => x + "strugu";
      SF Sg Voc => x + "strugu";
      SF Pl Nom => x + "Strugowie";
      SF Pl Gen => x + "strugów";
      SF Pl Dat => x + "strugom";
      SF Pl Acc => x + "strugów";
      SF Pl Instr => x + "strugami";
      SF Pl Loc => x + "strugach";
      SF Pl Voc => x + "Strugowie"
    };

    oper mkNTable0801: Str -> SubstForm => Str; --%
    oper mkNTable0801 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cze";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable0802: Str -> SubstForm => Str; --%
    oper mkNTable0802 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "syjam";
      SF Sg Gen => x + "Syjamu";
      SF Sg Dat => x + "syjamowi";
      SF Sg Acc => x + "syjam";
      SF Sg Instr => x + "syjamem";
      SF Sg Loc => x + "syjamie";
      SF Sg Voc => x + "syjamie";
      SF Pl Nom => x + "syjamy";
      SF Pl Gen => x + "syjamów";
      SF Pl Dat => x + "syjamom";
      SF Pl Acc => x + "syjamy";
      SF Pl Instr => x + "syjamami";
      SF Pl Loc => x + "syjamach";
      SF Pl Voc => x + "syjamy"
    };

    oper mkNTable0803: Str -> SubstForm => Str; --%
    oper mkNTable0803 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "sylwek";
      SF Sg Gen => x + "sylwka";
      SF Sg Dat => x + "sylwkowi";
      SF Sg Acc => x + "sylwka";
      SF Sg Instr => x + "sylwkiem";
      SF Sg Loc => x + "sylwku";
      SF Sg Voc => x + "sylwku";
      SF Pl Nom => x + "Sylwkowie";
      SF Pl Gen => x + "sylwków";
      SF Pl Dat => x + "sylwkom";
      SF Pl Acc => x + "sylwków";
      SF Pl Instr => x + "sylwkami";
      SF Pl Loc => x + "sylwkach";
      SF Pl Voc => x + "Sylwkowie"
    };

    oper mkNTable0804: Str -> SubstForm => Str; --%
    oper mkNTable0804 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "sylwester";
      SF Sg Gen => x + "sylwestra";
      SF Sg Dat => x + "sylwestrowi";
      SF Sg Acc => x + "sylwestra";
      SF Sg Instr => x + "sylwestrem";
      SF Sg Loc => x + "sylwestrze";
      SF Sg Voc => x + "sylwestrze";
      SF Pl Nom => x + "Sylwestrowie";
      SF Pl Gen => x + "sylwestrów";
      SF Pl Dat => x + "sylwestrom";
      SF Pl Acc => x + "sylwestrów";
      SF Pl Instr => x + "sylwestrami";
      SF Pl Loc => x + "sylwestrach";
      SF Pl Voc => x + "Sylwestrowie"
    };

    oper mkNTable0805: Str -> SubstForm => Str; --%
    oper mkNTable0805 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Sylwia";
      SF Sg Gen => x + "Sylwii";
      SF Sg Dat => x + "Sylwii";
      SF Sg Acc => x + "Sylwię";
      SF Sg Instr => x + "Sylwią";
      SF Sg Loc => x + "Sylwii";
      SF Sg Voc => x + "Sylwio";
      SF Pl Nom => x + "sylwie";
      SF Pl Gen => x + "Sylwii";
      SF Pl Dat => x + "Sylwiom";
      SF Pl Acc => x + "sylwie";
      SF Pl Instr => x + "Sylwiami";
      SF Pl Loc => x + "Sylwiach";
      SF Pl Voc => x + "sylwie"
    };

    oper mkNTable0806: Str -> SubstForm => Str; --%
    oper mkNTable0806 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "sylwin";
      SF Sg Gen => x + "Sylwina";
      SF Sg Dat => x + "sylwinowi";
      SF Sg Acc => x + "Sylwina";
      SF Sg Instr => x + "sylwinem";
      SF Sg Loc => x + "sylwinie";
      SF Sg Voc => x + "sylwinie";
      SF Pl Nom => x + "Sylwinowie";
      SF Pl Gen => x + "sylwinów";
      SF Pl Dat => x + "sylwinom";
      SF Pl Acc => x + "sylwinów";
      SF Pl Instr => x + "sylwinami";
      SF Pl Loc => x + "sylwinach";
      SF Pl Voc => x + "Sylwinowie"
    };

    oper mkNTable0807: Str -> SubstForm => Str; --%
    oper mkNTable0807 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "szabat";
      SF Sg Gen => x + "Szabata";
      SF Sg Dat => x + "szabatowi";
      SF Sg Acc => x + "Szabata";
      SF Sg Instr => x + "szabatem";
      SF Sg Loc => x + "szabacie";
      SF Sg Voc => x + "szabacie";
      SF Pl Nom => x + "Szabatowie";
      SF Pl Gen => x + "szabatów";
      SF Pl Dat => x + "szabatom";
      SF Pl Acc => x + "szabatów";
      SF Pl Instr => x + "szabatami";
      SF Pl Loc => x + "szabatach";
      SF Pl Voc => x + "Szabatowie"
    };

    oper mkNTable0808: Str -> SubstForm => Str; --%
    oper mkNTable0808 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cha";
      SF Sg Gen => x + "chy";
      SF Sg Dat => x + "sze";
      SF Sg Acc => x + "chę";
      SF Sg Instr => x + "chą";
      SF Sg Loc => x + "sze";
      SF Sg Voc => x + "cho";
      SF Pl Nom => x + "chowie";
      SF Pl Gen => x + "chów";
      SF Pl Dat => x + "chom";
      SF Pl Acc => x + "chów";
      SF Pl Instr => x + "chami";
      SF Pl Loc => x + "chach";
      SF Pl Voc => x + "chowie"
    };

    oper mkNTable0809: Str -> SubstForm => Str; --%
    oper mkNTable0809 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "szarek";
      SF Sg Gen => x + "szarka";
      SF Sg Dat => x + "Szarkowi";
      SF Sg Acc => x + "szarka";
      SF Sg Instr => x + "Szarkiem";
      SF Sg Loc => x + "Szarku";
      SF Sg Voc => x + "Szarku";
      SF Pl Nom => x + "Szarkowie";
      SF Pl Gen => x + "Szarków";
      SF Pl Dat => x + "szarkom";
      SF Pl Acc => x + "Szarków";
      SF Pl Instr => x + "szarkami";
      SF Pl Loc => x + "szarkach";
      SF Pl Voc => x + "Szarkowie"
    };

    oper mkNTable0810: Str -> SubstForm => Str; --%
    oper mkNTable0810 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "szczepek";
      SF Sg Gen => x + "szczepka";
      SF Sg Dat => x + "szczepkowi";
      SF Sg Acc => x + "szczepka";
      SF Sg Instr => x + "szczepkiem";
      SF Sg Loc => x + "szczepku";
      SF Sg Voc => x + "szczepku";
      SF Pl Nom => x + "Szczepkowie";
      SF Pl Gen => x + "szczepków";
      SF Pl Dat => x + "szczepkom";
      SF Pl Acc => x + "szczepków";
      SF Pl Instr => x + "szczepkami";
      SF Pl Loc => x + "szczepkach";
      SF Pl Voc => x + "Szczepkowie"
    };

    oper mkNTable0811: Str -> SubstForm => Str; --%
    oper mkNTable0811 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "szczygieł";
      SF Sg Gen => x + "szczygła";
      SF Sg Dat => x + "szczygłowi";
      SF Sg Acc => x + "szczygła";
      SF Sg Instr => x + "szczygłem";
      SF Sg Loc => x + "szczygle";
      SF Sg Voc => x + "szczygle";
      SF Pl Nom => x + "Szczygłowie";
      SF Pl Gen => x + "szczygłów";
      SF Pl Dat => x + "szczygłom";
      SF Pl Acc => x + "szczygłów";
      SF Pl Instr => x + "szczygłami";
      SF Pl Loc => x + "szczygłach";
      SF Pl Voc => x + "Szczygłowie"
    };

    oper mkNTable0812: Str -> SubstForm => Str; --%
    oper mkNTable0812 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "szkot";
      SF Sg Gen => x + "szkota";
      SF Sg Dat => x + "szkotowi";
      SF Sg Acc => x + "szkota";
      SF Sg Instr => x + "szkotem";
      SF Sg Loc => x + "szkocie";
      SF Sg Voc => x + "szkocie";
      SF Pl Nom => x + "Szkoci";
      SF Pl Gen => x + "szkotów";
      SF Pl Dat => x + "szkotom";
      SF Pl Acc => x + "szkotów";
      SF Pl Instr => x + "szkotami";
      SF Pl Loc => x + "szkotach";
      SF Pl Voc => x + "Szkoci"
    };

    oper mkNTable0813: Str -> SubstForm => Str; --%
    oper mkNTable0813 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "szmaja";
      SF Sg Gen => x + "szmai";
      SF Sg Dat => x + "szmai";
      SF Sg Acc => x + "szmaję";
      SF Sg Instr => x + "szmają";
      SF Sg Loc => x + "szmai";
      SF Sg Voc => x + "szmajo";
      SF Pl Nom => x + "Szmajowie";
      SF Pl Gen => x + "szmajów";
      SF Pl Dat => x + "szmajom";
      SF Pl Acc => x + "szmajów";
      SF Pl Instr => x + "szmajami";
      SF Pl Loc => x + "szmajach";
      SF Pl Voc => x + "Szmajowie"
    };

    oper mkNTable0814: Str -> SubstForm => Str; --%
    oper mkNTable0814 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "szopen";
      SF Sg Gen => x + "szopena";
      SF Sg Dat => x + "szopenowi";
      SF Sg Acc => x + "szopena";
      SF Sg Instr => x + "szopenem";
      SF Sg Loc => x + "szopenie";
      SF Sg Voc => x + "szopenie";
      SF Pl Nom => x + "Szopenowie";
      SF Pl Gen => x + "szopenów";
      SF Pl Dat => x + "szopenom";
      SF Pl Acc => x + "szopenów";
      SF Pl Instr => x + "szopenami";
      SF Pl Loc => x + "szopenach";
      SF Pl Voc => x + "Szopenowie"
    };

    oper mkNTable0815: Str -> SubstForm => Str; --%
    oper mkNTable0815 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "sztuka";
      SF Sg Gen => x + "sztuki";
      SF Sg Dat => x + "sztuce";
      SF Sg Acc => x + "sztukę";
      SF Sg Instr => x + "sztuką";
      SF Sg Loc => x + "sztuce";
      SF Sg Voc => x + "sztuko";
      SF Pl Nom => x + "Sztukowie";
      SF Pl Gen => x + "Sztuków";
      SF Pl Dat => x + "sztukom";
      SF Pl Acc => x + "Sztuków";
      SF Pl Instr => x + "sztukami";
      SF Pl Loc => x + "sztukach";
      SF Pl Voc => x + "Sztukowie"
    };

    oper mkNTable0816: Str -> SubstForm => Str; --%
    oper mkNTable0816 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "szwab";
      SF Sg Gen => x + "szwaba";
      SF Sg Dat => x + "szwabowi";
      SF Sg Acc => x + "szwaba";
      SF Sg Instr => x + "szwabem";
      SF Sg Loc => x + "szwabie";
      SF Sg Voc => x + "szwabie";
      SF Pl Nom => x + "Szwabowie";
      SF Pl Gen => x + "szwabów";
      SF Pl Dat => x + "szwabom";
      SF Pl Acc => x + "szwabów";
      SF Pl Instr => x + "szwabami";
      SF Pl Loc => x + "szwabach";
      SF Pl Voc => x + "Szwabowie"
    };

    oper mkNTable0817: Str -> SubstForm => Str; --%
    oper mkNTable0817 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "szwed";
      SF Sg Gen => x + "szweda";
      SF Sg Dat => x + "szwedowi";
      SF Sg Acc => x + "szweda";
      SF Sg Instr => x + "szwedem";
      SF Sg Loc => x + "szwedzie";
      SF Sg Voc => x + "szwedzie";
      SF Pl Nom => x + "Szwedzi";
      SF Pl Gen => x + "szwedów";
      SF Pl Dat => x + "szwedom";
      SF Pl Acc => x + "szwedów";
      SF Pl Instr => x + "szwedami";
      SF Pl Loc => x + "szwedach";
      SF Pl Voc => x + "Szwedzi"
    };

    oper mkNTable0818: Str -> SubstForm => Str; --%
    oper mkNTable0818 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "szyszko";
      SF Sg Gen => x + "szyszki";
      SF Sg Dat => x + "szyszce";
      SF Sg Acc => x + "szyszkę";
      SF Sg Instr => x + "szyszką";
      SF Sg Loc => x + "szyszce";
      SF Sg Voc => x + "szyszko";
      SF Pl Nom => x + "Szyszkowie";
      SF Pl Gen => x + "Szyszków";
      SF Pl Dat => x + "szyszkom";
      SF Pl Acc => x + "Szyszków";
      SF Pl Instr => x + "szyszkami";
      SF Pl Loc => x + "szyszkach";
      SF Pl Voc => x + "Szyszkowie"
    };

    oper mkNTable0819: Str -> SubstForm => Str; --%
    oper mkNTable0819 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "słowik";
      SF Sg Gen => x + "słowika";
      SF Sg Dat => x + "słowikowi";
      SF Sg Acc => x + "słowika";
      SF Sg Instr => x + "słowikiem";
      SF Sg Loc => x + "słowiku";
      SF Sg Voc => x + "słowiku";
      SF Pl Nom => x + "Słowikowie";
      SF Pl Gen => x + "słowików";
      SF Pl Dat => x + "słowikom";
      SF Pl Acc => x + "słowików";
      SF Pl Instr => x + "słowikami";
      SF Pl Loc => x + "słowikach";
      SF Pl Voc => x + "Słowikowie"
    };

    oper mkNTable0820: Str -> SubstForm => Str; --%
    oper mkNTable0820 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ój";
      SF Sg Gen => x + "oja";
      SF Sg Dat => x + "ojowi";
      SF Sg Acc => x + "oja";
      SF Sg Instr => x + "ojem";
      SF Sg Loc => x + "oju";
      SF Sg Voc => x + "oju";
      SF Pl Nom => x + "ojowie";
      SF Pl Gen => x + "ojów";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "ojów";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "ojowie"
    };

    oper mkNTable0821: Str -> SubstForm => Str; --%
    oper mkNTable0821 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sęp";
      SF Sg Gen => x + "sępa";
      SF Sg Dat => x + "sępowi";
      SF Sg Acc => x + "sępa";
      SF Sg Instr => x + "sępem";
      SF Sg Loc => x + "sępie";
      SF Sg Voc => x + "sępie";
      SF Pl Nom => x + "Sępowie";
      SF Pl Gen => x + "sępów";
      SF Pl Dat => x + "sępom";
      SF Pl Acc => x + "sępów";
      SF Pl Instr => x + "sępami";
      SF Pl Loc => x + "sępach";
      SF Pl Voc => x + "Sępowie"
    };

    oper mkNTable0822: Str -> SubstForm => Str; --%
    oper mkNTable0822 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "taras";
      SF Sg Gen => x + "Tarasa";
      SF Sg Dat => x + "tarasowi";
      SF Sg Acc => x + "Tarasa";
      SF Sg Instr => x + "tarasem";
      SF Sg Loc => x + "tarasie";
      SF Sg Voc => x + "tarasie";
      SF Pl Nom => x + "Tarasowie";
      SF Pl Gen => x + "tarasów";
      SF Pl Dat => x + "tarasom";
      SF Pl Acc => x + "tarasów";
      SF Pl Instr => x + "tarasami";
      SF Pl Loc => x + "tarasach";
      SF Pl Voc => x + "Tarasowie"
    };

    oper mkNTable0823: Str -> SubstForm => Str; --%
    oper mkNTable0823 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "tatar";
      SF Sg Gen => x + "tatara";
      SF Sg Dat => x + "tatarowi";
      SF Sg Acc => x + "tatara";
      SF Sg Instr => x + "tatarem";
      SF Sg Loc => x + "tatarze";
      SF Sg Voc => x + "tatarze";
      SF Pl Nom => x + "Tatarzy";
      SF Pl Gen => x + "tatarów";
      SF Pl Dat => x + "tatarom";
      SF Pl Acc => x + "tatarów";
      SF Pl Instr => x + "tatarami";
      SF Pl Loc => x + "tatarach";
      SF Pl Voc => x + "Tatarzy"
    };

    oper mkNTable0824: Str -> SubstForm => Str; --%
    oper mkNTable0824 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "tell";
      SF Sg Gen => x + "Tella";
      SF Sg Dat => x + "tellowi";
      SF Sg Acc => x + "Tella";
      SF Sg Instr => x + "tellem";
      SF Sg Loc => x + "tellu";
      SF Sg Voc => x + "tellu";
      SF Pl Nom => x + "telle";
      SF Pl Gen => x + "tellów";
      SF Pl Dat => x + "tellom";
      SF Pl Acc => x + "tellów";
      SF Pl Instr => x + "tellami";
      SF Pl Loc => x + "tellach";
      SF Pl Voc => x + "telle"
    };

    oper mkNTable0825: Str -> SubstForm => Str; --%
    oper mkNTable0825 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Teofan";
      SF Sg Gen => x + "Teofana";
      SF Sg Dat => x + "Teofanowi";
      SF Sg Acc => x + "Teofana";
      SF Sg Instr => x + "Teofanem";
      SF Sg Loc => x + "teofanie";
      SF Sg Voc => x + "teofanie";
      SF Pl Nom => x + "Teofanowie";
      SF Pl Gen => x + "Teofanów";
      SF Pl Dat => x + "Teofanom";
      SF Pl Acc => x + "Teofanów";
      SF Pl Instr => x + "Teofanami";
      SF Pl Loc => x + "Teofanach";
      SF Pl Voc => x + "Teofanowie"
    };

    oper mkNTable0826: Str -> SubstForm => Str; --%
    oper mkNTable0826 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Terenia";
      SF Sg Gen => x + "Tereni";
      SF Sg Dat => x + "Tereni";
      SF Sg Acc => x + "Terenię";
      SF Sg Instr => x + "Terenią";
      SF Sg Loc => x + "Tereni";
      SF Sg Voc => x + "Tereniu";
      SF Pl Nom => x + "terenie";
      SF Pl Gen => x + "Tereń";
      SF Pl Dat => x + "Tereniom";
      SF Pl Acc => x + "terenie";
      SF Pl Instr => x + "Tereniami";
      SF Pl Loc => x + "Tereniach";
      SF Pl Voc => x + "terenie"
    };

    oper mkNTable0827: Str -> SubstForm => Str; --%
    oper mkNTable0827 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "o";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "o";
      SF Pl Dat => x + "o";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable0828: Str -> SubstForm => Str; --%
    oper mkNTable0828 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "tokarz";
      SF Sg Gen => x + "tokarza";
      SF Sg Dat => x + "tokarzowi";
      SF Sg Acc => x + "tokarza";
      SF Sg Instr => x + "tokarzem";
      SF Sg Loc => x + "tokarzu";
      SF Sg Voc => x + "tokarzu";
      SF Pl Nom => x + "Tokarzowie";
      SF Pl Gen => x + "tokarzów";
      SF Pl Dat => x + "tokarzom";
      SF Pl Acc => x + "tokarzów";
      SF Pl Instr => x + "tokarzami";
      SF Pl Loc => x + "tokarzach";
      SF Pl Voc => x + "Tokarzowie"
    };

    oper mkNTable0829: Str -> SubstForm => Str; --%
    oper mkNTable0829 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "tom";
      SF Sg Gen => x + "Toma";
      SF Sg Dat => x + "tomowi";
      SF Sg Acc => x + "Toma";
      SF Sg Instr => x + "tomem";
      SF Sg Loc => x + "tomie";
      SF Sg Voc => x + "tomie";
      SF Pl Nom => x + "Tomowie";
      SF Pl Gen => x + "tomów";
      SF Pl Dat => x + "tomom";
      SF Pl Acc => x + "tomów";
      SF Pl Instr => x + "tomami";
      SF Pl Loc => x + "tomach";
      SF Pl Voc => x + "Tomowie"
    };

    oper mkNTable0830: Str -> SubstForm => Str; --%
    oper mkNTable0830 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "tomek";
      SF Sg Gen => x + "tomka";
      SF Sg Dat => x + "Tomkowi";
      SF Sg Acc => x + "tomka";
      SF Sg Instr => x + "Tomkiem";
      SF Sg Loc => x + "Tomku";
      SF Sg Voc => x + "Tomku";
      SF Pl Nom => x + "Tomkowie";
      SF Pl Gen => x + "Tomków";
      SF Pl Dat => x + "tomkom";
      SF Pl Acc => x + "Tomków";
      SF Pl Instr => x + "tomkami";
      SF Pl Loc => x + "tomkach";
      SF Pl Voc => x + "Tomkowie"
    };

    oper mkNTable0831: Str -> SubstForm => Str; --%
    oper mkNTable0831 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "traczyk";
      SF Sg Gen => x + "traczyka";
      SF Sg Dat => x + "traczykowi";
      SF Sg Acc => x + "traczyka";
      SF Sg Instr => x + "traczykiem";
      SF Sg Loc => x + "traczyku";
      SF Sg Voc => x + "traczyku";
      SF Pl Nom => x + "Traczykowie";
      SF Pl Gen => x + "traczyków";
      SF Pl Dat => x + "traczykom";
      SF Pl Acc => x + "traczyków";
      SF Pl Instr => x + "traczykami";
      SF Pl Loc => x + "traczykach";
      SF Pl Voc => x + "Traczykowie"
    };

    oper mkNTable0832: Str -> SubstForm => Str; --%
    oper mkNTable0832 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "trak";
      SF Sg Gen => x + "traka";
      SF Sg Dat => x + "trakowi";
      SF Sg Acc => x + "traka";
      SF Sg Instr => x + "trakiem";
      SF Sg Loc => x + "traku";
      SF Sg Voc => x + "traku";
      SF Pl Nom => x + "Trakowie";
      SF Pl Gen => x + "traków";
      SF Pl Dat => x + "trakom";
      SF Pl Acc => x + "traków";
      SF Pl Instr => x + "trakami";
      SF Pl Loc => x + "trakach";
      SF Pl Voc => x + "Trakowie"
    };

    oper mkNTable0833: Str -> SubstForm => Str; --%
    oper mkNTable0833 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0834: Str -> SubstForm => Str; --%
    oper mkNTable0834 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "trojan";
      SF Sg Gen => x + "trojana";
      SF Sg Dat => x + "trojanowi";
      SF Sg Acc => x + "trojana";
      SF Sg Instr => x + "trojanem";
      SF Sg Loc => x + "trojanie";
      SF Sg Voc => x + "trojanie";
      SF Pl Nom => x + "Trojanowie";
      SF Pl Gen => x + "trojanów";
      SF Pl Dat => x + "trojanom";
      SF Pl Acc => x + "trojanów";
      SF Pl Instr => x + "trojanami";
      SF Pl Loc => x + "trojanach";
      SF Pl Voc => x + "Trojanowie"
    };

    oper mkNTable0836: Str -> SubstForm => Str; --%
    oper mkNTable0836 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "trybuła";
      SF Sg Gen => x + "trybuły";
      SF Sg Dat => x + "trybule";
      SF Sg Acc => x + "trybułę";
      SF Sg Instr => x + "trybułą";
      SF Sg Loc => x + "trybule";
      SF Sg Voc => x + "trybuło";
      SF Pl Nom => x + "Trybułowie";
      SF Pl Gen => x + "Trybułów";
      SF Pl Dat => x + "trybułom";
      SF Pl Acc => x + "Trybułów";
      SF Pl Instr => x + "trybułami";
      SF Pl Loc => x + "trybułach";
      SF Pl Voc => x + "Trybułowie"
    };

    oper mkNTable0837: Str -> SubstForm => Str; --%
    oper mkNTable0837 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "trzeciak";
      SF Sg Gen => x + "trzeciaka";
      SF Sg Dat => x + "trzeciakowi";
      SF Sg Acc => x + "trzeciaka";
      SF Sg Instr => x + "trzeciakiem";
      SF Sg Loc => x + "trzeciaku";
      SF Sg Voc => x + "trzeciaku";
      SF Pl Nom => x + "Trzeciakowie";
      SF Pl Gen => x + "trzeciaków";
      SF Pl Dat => x + "trzeciakom";
      SF Pl Acc => x + "trzeciaków";
      SF Pl Instr => x + "trzeciakami";
      SF Pl Loc => x + "trzeciakach";
      SF Pl Voc => x + "Trzeciakowie"
    };

    oper mkNTable0838: Str -> SubstForm => Str; --%
    oper mkNTable0838 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "asto";
      SF Sg Gen => x + "asta";
      SF Sg Dat => x + "astu";
      SF Sg Acc => x + "asto";
      SF Sg Instr => x + "astem";
      SF Sg Loc => x + "eście";
      SF Sg Voc => x + "asto";
      SF Pl Nom => x + "asta";
      SF Pl Gen => x + "ast";
      SF Pl Dat => x + "astom";
      SF Pl Acc => x + "asta";
      SF Pl Instr => x + "astami";
      SF Pl Loc => x + "astach";
      SF Pl Voc => x + "asta"
    };

    oper mkNTable0840: Str -> SubstForm => Str; --%
    oper mkNTable0840 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "turek";
      SF Sg Gen => x + "turka";
      SF Sg Dat => x + "turkowi";
      SF Sg Acc => x + "turka";
      SF Sg Instr => x + "turkiem";
      SF Sg Loc => x + "turku";
      SF Sg Voc => x + "turku";
      SF Pl Nom => x + "Turkowie";
      SF Pl Gen => x + "turków";
      SF Pl Dat => x + "turkom";
      SF Pl Acc => x + "turków";
      SF Pl Instr => x + "turkami";
      SF Pl Loc => x + "turkach";
      SF Pl Voc => x + "Turkowie"
    };

    oper mkNTable0841: Str -> SubstForm => Str; --%
    oper mkNTable0841 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ku";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ek";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0842: Str -> SubstForm => Str; --%
    oper mkNTable0842 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "tuła";
      SF Sg Gen => x + "tuły";
      SF Sg Dat => x + "tule";
      SF Sg Acc => x + "Tułę";
      SF Sg Instr => x + "Tułą";
      SF Sg Loc => x + "tule";
      SF Sg Voc => x + "Tuło";
      SF Pl Nom => x + "tuły";
      SF Pl Gen => x + "tuł";
      SF Pl Dat => x + "tułom";
      SF Pl Acc => x + "tuły";
      SF Pl Instr => x + "tułami";
      SF Pl Loc => x + "tułach";
      SF Pl Voc => x + "tuły"
    };

    oper mkNTable0844: Str -> SubstForm => Str; --%
    oper mkNTable0844 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "tygrys";
      SF Sg Gen => x + "Tygrysu";
      SF Sg Dat => x + "tygrysowi";
      SF Sg Acc => x + "tygrys";
      SF Sg Instr => x + "tygrysem";
      SF Sg Loc => x + "tygrysie";
      SF Sg Voc => x + "tygrysie";
      SF Pl Nom => x + "tygrysy";
      SF Pl Gen => x + "tygrysów";
      SF Pl Dat => x + "tygrysom";
      SF Pl Acc => x + "tygrysy";
      SF Pl Instr => x + "tygrysami";
      SF Pl Loc => x + "tygrysach";
      SF Pl Voc => x + "tygrysy"
    };

    oper mkNTable0845: Str -> SubstForm => Str; --%
    oper mkNTable0845 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Tylka";
      SF Sg Gen => x + "Tylki";
      SF Sg Dat => x + "tylce";
      SF Sg Acc => x + "Tylkę";
      SF Sg Instr => x + "Tylką";
      SF Sg Loc => x + "tylce";
      SF Sg Voc => x + "Tylko";
      SF Pl Nom => x + "Tylki";
      SF Pl Gen => x + "Tylek";
      SF Pl Dat => x + "Tylkom";
      SF Pl Acc => x + "Tylki";
      SF Pl Instr => x + "Tylkami";
      SF Pl Loc => x + "Tylkach";
      SF Pl Voc => x + "Tylki"
    };

    oper mkNTable0846: Str -> SubstForm => Str; --%
    oper mkNTable0846 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "niec";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcu";
      SF Pl Nom => x + "ńce";
      SF Pl Gen => x + "ńców";
      SF Pl Dat => x + "ńcom";
      SF Pl Acc => x + "ńce";
      SF Pl Instr => x + "ńcami";
      SF Pl Loc => x + "ńcach";
      SF Pl Voc => x + "ńce"
    };

    oper mkNTable0847: Str -> SubstForm => Str; --%
    oper mkNTable0847 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ór";
      SF Sg Gen => x + "oru";
      SF Sg Dat => x + "orowi";
      SF Sg Acc => x + "ór";
      SF Sg Instr => x + "orem";
      SF Sg Loc => x + "orze";
      SF Sg Voc => x + "orze";
      SF Pl Nom => x + "ory";
      SF Pl Gen => x + "orów";
      SF Pl Dat => x + "orom";
      SF Pl Acc => x + "ory";
      SF Pl Instr => x + "orami";
      SF Pl Loc => x + "orach";
      SF Pl Voc => x + "ory"
    };

    oper mkNTable0848: Str -> SubstForm => Str; --%
    oper mkNTable0848 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "-otu";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0849: Str -> SubstForm => Str; --%
    oper mkNTable0849 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ula";
      SF Sg Gen => x + "uli";
      SF Sg Dat => x + "uli";
      SF Sg Acc => x + "Ulę";
      SF Sg Instr => x + "Ulą";
      SF Sg Loc => x + "uli";
      SF Sg Voc => x + "ulu";
      SF Pl Nom => x + "ule";
      SF Pl Gen => x + "ul";
      SF Pl Dat => x + "ulom";
      SF Pl Acc => x + "ule";
      SF Pl Instr => x + "ulami";
      SF Pl Loc => x + "ulach";
      SF Pl Voc => x + "ule"
    };

    oper mkNTable0850: Str -> SubstForm => Str; --%
    oper mkNTable0850 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Ulster";
      SF Sg Gen => x + "Ulsteru";
      SF Sg Dat => x + "ulsterowi";
      SF Sg Acc => x + "Ulster";
      SF Sg Instr => x + "ulsterem";
      SF Sg Loc => x + "ulsterze";
      SF Sg Voc => x + "ulsterze";
      SF Pl Nom => x + "ulstery";
      SF Pl Gen => x + "ulsterów";
      SF Pl Dat => x + "ulsterom";
      SF Pl Acc => x + "ulstery";
      SF Pl Instr => x + "ulsterami";
      SF Pl Loc => x + "ulsterach";
      SF Pl Voc => x + "ulstery"
    };

    oper mkNTable0851: Str -> SubstForm => Str; --%
    oper mkNTable0851 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "uran";
      SF Sg Gen => x + "Urana";
      SF Sg Dat => x + "uranowi";
      SF Sg Acc => x + "Urana";
      SF Sg Instr => x + "uranem";
      SF Sg Loc => x + "uranie";
      SF Sg Voc => x + "uranie";
      SF Pl Nom => x + "urany";
      SF Pl Gen => x + "uranów";
      SF Pl Dat => x + "uranom";
      SF Pl Acc => x + "urany";
      SF Pl Instr => x + "uranami";
      SF Pl Loc => x + "uranach";
      SF Pl Voc => x + "urany"
    };

    oper mkNTable0853: Str -> SubstForm => Str; --%
    oper mkNTable0853 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0854: Str -> SubstForm => Str; --%
    oper mkNTable0854 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "wala";
      SF Sg Gen => x + "wali";
      SF Sg Dat => x + "wali";
      SF Sg Acc => x + "Walę";
      SF Sg Instr => x + "Walą";
      SF Sg Loc => x + "wali";
      SF Sg Voc => x + "walu";
      SF Pl Nom => x + "wale";
      SF Pl Gen => x + "wal";
      SF Pl Dat => x + "walom";
      SF Pl Acc => x + "wale";
      SF Pl Instr => x + "walami";
      SF Pl Loc => x + "walach";
      SF Pl Voc => x + "wale"
    };

    oper mkNTable0855: Str -> SubstForm => Str; --%
    oper mkNTable0855 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "walczak";
      SF Sg Gen => x + "walczaka";
      SF Sg Dat => x + "walczakowi";
      SF Sg Acc => x + "walczaka";
      SF Sg Instr => x + "walczakiem";
      SF Sg Loc => x + "walczaku";
      SF Sg Voc => x + "walczaku";
      SF Pl Nom => x + "Walczakowie";
      SF Pl Gen => x + "walczaków";
      SF Pl Dat => x + "walczakom";
      SF Pl Acc => x + "walczaków";
      SF Pl Instr => x + "walczakami";
      SF Pl Loc => x + "walczakach";
      SF Pl Voc => x + "Walczakowie"
    };

    oper mkNTable0856: Str -> SubstForm => Str; --%
    oper mkNTable0856 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Walek";
      SF Sg Gen => x + "walka";
      SF Sg Dat => x + "walkowi";
      SF Sg Acc => x + "walka";
      SF Sg Instr => x + "walkiem";
      SF Sg Loc => x + "walku";
      SF Sg Voc => x + "walku";
      SF Pl Nom => x + "Walkowie";
      SF Pl Gen => x + "walków";
      SF Pl Dat => x + "walkom";
      SF Pl Acc => x + "walków";
      SF Pl Instr => x + "walkami";
      SF Pl Loc => x + "walkach";
      SF Pl Voc => x + "Walkowie"
    };

    oper mkNTable0857: Str -> SubstForm => Str; --%
    oper mkNTable0857 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "walerian";
      SF Sg Gen => x + "waleriana";
      SF Sg Dat => x + "Walerianowi";
      SF Sg Acc => x + "waleriana";
      SF Sg Instr => x + "Walerianem";
      SF Sg Loc => x + "walerianie";
      SF Sg Voc => x + "walerianie";
      SF Pl Nom => x + "Walerianowie";
      SF Pl Gen => x + "Walerianów";
      SF Pl Dat => x + "walerianom";
      SF Pl Acc => x + "Walerianów";
      SF Pl Instr => x + "walerianami";
      SF Pl Loc => x + "walerianach";
      SF Pl Voc => x + "Walerianowie"
    };

    oper mkNTable0858: Str -> SubstForm => Str; --%
    oper mkNTable0858 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Wandzia";
      SF Sg Gen => x + "Wandzi";
      SF Sg Dat => x + "Wandzi";
      SF Sg Acc => x + "Wandzię";
      SF Sg Instr => x + "Wandzią";
      SF Sg Loc => x + "Wandzi";
      SF Sg Voc => x + "Wandziu";
      SF Pl Nom => x + "wandzie";
      SF Pl Gen => x + "Wandź";
      SF Pl Dat => x + "Wandziom";
      SF Pl Acc => x + "wandzie";
      SF Pl Instr => x + "Wandziami";
      SF Pl Loc => x + "Wandziach";
      SF Pl Voc => x + "wandzie"
    };

    oper mkNTable0859: Str -> SubstForm => Str; --%
    oper mkNTable0859 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "warchoł";
      SF Sg Gen => x + "warchoła";
      SF Sg Dat => x + "warchołowi";
      SF Sg Acc => x + "warchoła";
      SF Sg Instr => x + "warchołem";
      SF Sg Loc => x + "warchole";
      SF Sg Voc => x + "warchole";
      SF Pl Nom => x + "Warchołowie";
      SF Pl Gen => x + "warchołów";
      SF Pl Dat => x + "warchołom";
      SF Pl Acc => x + "warchołów";
      SF Pl Instr => x + "warchołami";
      SF Pl Loc => x + "warchołach";
      SF Pl Voc => x + "Warchołowie"
    };

    oper mkNTable0860: Str -> SubstForm => Str; --%
    oper mkNTable0860 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "Waszyngton";
      SF Sg Gen => x + "Waszyngtona";
      SF Sg Dat => x + "Waszyngtonowi";
      SF Sg Acc => x + "Waszyngtona";
      SF Sg Instr => x + "Waszyngtonem";
      SF Sg Loc => x + "waszyngtonie";
      SF Sg Voc => x + "waszyngtonie";
      SF Pl Nom => x + "Waszyngtonowie";
      SF Pl Gen => x + "Waszyngtonów";
      SF Pl Dat => x + "Waszyngtonom";
      SF Pl Acc => x + "Waszyngtonów";
      SF Pl Instr => x + "Waszyngtonami";
      SF Pl Loc => x + "Waszyngtonach";
      SF Pl Voc => x + "Waszyngtonowie"
    };

    oper mkNTable0861: Str -> SubstForm => Str; --%
    oper mkNTable0861 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "Waszyngton";
      SF Sg Gen => x + "Waszyngtonu";
      SF Sg Dat => x + "Waszyngtonowi";
      SF Sg Acc => x + "Waszyngton";
      SF Sg Instr => x + "Waszyngtonem";
      SF Sg Loc => x + "waszyngtonie";
      SF Sg Voc => x + "waszyngtonie";
      SF Pl Nom => x + "Waszyngtony";
      SF Pl Gen => x + "Waszyngtonów";
      SF Pl Dat => x + "Waszyngtonom";
      SF Pl Acc => x + "Waszyngtony";
      SF Pl Instr => x + "Waszyngtonami";
      SF Pl Loc => x + "Waszyngtonach";
      SF Pl Voc => x + "Waszyngtony"
    };

    oper mkNTable0862: Str -> SubstForm => Str; --%
    oper mkNTable0862 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "wat";
      SF Sg Gen => x + "wata";
      SF Sg Dat => x + "watowi";
      SF Sg Acc => x + "wata";
      SF Sg Instr => x + "watem";
      SF Sg Loc => x + "wacie";
      SF Sg Voc => x + "wacie";
      SF Pl Nom => x + "Watowie";
      SF Pl Gen => x + "watów";
      SF Pl Dat => x + "watom";
      SF Pl Acc => x + "watów";
      SF Pl Instr => x + "watami";
      SF Pl Loc => x + "watach";
      SF Pl Voc => x + "Watowie"
    };

    oper mkNTable0863: Str -> SubstForm => Str; --%
    oper mkNTable0863 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "watt";
      SF Sg Gen => x + "watta";
      SF Sg Dat => x + "wattowi";
      SF Sg Acc => x + "watta";
      SF Sg Instr => x + "wattem";
      SF Sg Loc => x + "watcie";
      SF Sg Voc => x + "watcie";
      SF Pl Nom => x + "Wattowie";
      SF Pl Gen => x + "wattów";
      SF Pl Dat => x + "wattom";
      SF Pl Acc => x + "wattów";
      SF Pl Instr => x + "wattami";
      SF Pl Loc => x + "wattach";
      SF Pl Voc => x + "Wattowie"
    };

    oper mkNTable0864: Str -> SubstForm => Str; --%
    oper mkNTable0864 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "er";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable0865: Str -> SubstForm => Str; --%
    oper mkNTable0865 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "ńca";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcze";
      SF Pl Nom => x + "ńcowie";
      SF Pl Gen => x + "ńców";
      SF Pl Dat => x + "ńcom";
      SF Pl Acc => x + "ńców";
      SF Pl Instr => x + "ńcami";
      SF Pl Loc => x + "ńcach";
      SF Pl Voc => x + "ńcowie"
    };

    oper mkNTable0866: Str -> SubstForm => Str; --%
    oper mkNTable0866 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "waza";
      SF Sg Gen => x + "wazy";
      SF Sg Dat => x + "wazie";
      SF Sg Acc => x + "wazę";
      SF Sg Instr => x + "wazą";
      SF Sg Loc => x + "wazie";
      SF Sg Voc => x + "wazo";
      SF Pl Nom => x + "Wazowie";
      SF Pl Gen => x + "Wazów";
      SF Pl Dat => x + "wazom";
      SF Pl Acc => x + "Wazów";
      SF Pl Instr => x + "wazami";
      SF Pl Loc => x + "wazach";
      SF Pl Voc => x + "Wazowie"
    };

    oper mkNTable0868: Str -> SubstForm => Str; --%
    oper mkNTable0868 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "weber";
      SF Sg Gen => x + "webera";
      SF Sg Dat => x + "weberowi";
      SF Sg Acc => x + "webera";
      SF Sg Instr => x + "weberem";
      SF Sg Loc => x + "weberze";
      SF Sg Voc => x + "weberze";
      SF Pl Nom => x + "Weberowie";
      SF Pl Gen => x + "weberów";
      SF Pl Dat => x + "weberom";
      SF Pl Acc => x + "weberów";
      SF Pl Instr => x + "weberami";
      SF Pl Loc => x + "weberach";
      SF Pl Voc => x + "Weberowie"
    };

    oper mkNTable0870: Str -> SubstForm => Str; --%
    oper mkNTable0870 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "wellington";
      SF Sg Gen => x + "wellingtona";
      SF Sg Dat => x + "wellingtonowi";
      SF Sg Acc => x + "wellingtona";
      SF Sg Instr => x + "wellingtonem";
      SF Sg Loc => x + "wellingtonie";
      SF Sg Voc => x + "wellingtonie";
      SF Pl Nom => x + "Wellingtonowie";
      SF Pl Gen => x + "wellingtonów";
      SF Pl Dat => x + "wellingtonom";
      SF Pl Acc => x + "wellingtonów";
      SF Pl Instr => x + "wellingtonami";
      SF Pl Loc => x + "wellingtonach";
      SF Pl Voc => x + "Wellingtonowie"
    };

    oper mkNTable0871: Str -> SubstForm => Str; --%
    oper mkNTable0871 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "e";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "e";
      SF Sg Loc => x + "e";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "e";
      SF Pl Loc => x + "e";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0873: Str -> SubstForm => Str; --%
    oper mkNTable0873 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "wicek";
      SF Sg Gen => x + "wicka";
      SF Sg Dat => x + "wickowi";
      SF Sg Acc => x + "wicka";
      SF Sg Instr => x + "wickiem";
      SF Sg Loc => x + "wicku";
      SF Sg Voc => x + "wicku";
      SF Pl Nom => x + "Wickowie";
      SF Pl Gen => x + "wicków";
      SF Pl Dat => x + "wickom";
      SF Pl Acc => x + "wicków";
      SF Pl Instr => x + "wickami";
      SF Pl Loc => x + "wickach";
      SF Pl Voc => x + "Wickowie"
    };

    oper mkNTable0874: Str -> SubstForm => Str; --%
    oper mkNTable0874 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "wiech";
      SF Sg Gen => x + "wiecha";
      SF Sg Dat => x + "wiechowi";
      SF Sg Acc => x + "wiecha";
      SF Sg Instr => x + "wiechem";
      SF Sg Loc => x + "wiechu";
      SF Sg Voc => x + "wiechu";
      SF Pl Nom => x + "Wiechowie";
      SF Pl Gen => x + "wiechów";
      SF Pl Dat => x + "wiechom";
      SF Pl Acc => x + "wiechów";
      SF Pl Instr => x + "wiechami";
      SF Pl Loc => x + "wiechach";
      SF Pl Voc => x + "Wiechowie"
    };

    oper mkNTable0875: Str -> SubstForm => Str; --%
    oper mkNTable0875 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "wieczorek";
      SF Sg Gen => x + "wieczorka";
      SF Sg Dat => x + "wieczorkowi";
      SF Sg Acc => x + "wieczorka";
      SF Sg Instr => x + "wieczorkiem";
      SF Sg Loc => x + "wieczorku";
      SF Sg Voc => x + "wieczorku";
      SF Pl Nom => x + "Wieczorkowie";
      SF Pl Gen => x + "wieczorków";
      SF Pl Dat => x + "wieczorkom";
      SF Pl Acc => x + "wieczorków";
      SF Pl Instr => x + "wieczorkami";
      SF Pl Loc => x + "wieczorkach";
      SF Pl Voc => x + "Wieczorkowie"
    };

    oper mkNTable0876: Str -> SubstForm => Str; --%
    oper mkNTable0876 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable0877: Str -> SubstForm => Str; --%
    oper mkNTable0877 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "anoc";
      SF Sg Gen => x + "iejnocy";
      SF Sg Dat => x + "iejnocy";
      SF Sg Acc => x + "ąnoc";
      SF Sg Instr => x + "ąnocą";
      SF Sg Loc => x + "iejnocy";
      SF Sg Voc => x + "anocy";
      SF Pl Nom => x + "ienoce";
      SF Pl Gen => x + "anocy";
      SF Pl Dat => x + "imnocom";
      SF Pl Acc => x + "ienoce";
      SF Pl Instr => x + "iminocami";
      SF Pl Loc => x + "ichnocach";
      SF Pl Voc => x + "ienoce"
    };

    oper mkNTable0878: Str -> SubstForm => Str; --%
    oper mkNTable0878 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0879: Str -> SubstForm => Str; --%
    oper mkNTable0879 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Wiera";
      SF Sg Gen => x + "Wiery";
      SF Sg Dat => x + "wierze";
      SF Sg Acc => x + "Wierę";
      SF Sg Instr => x + "Wierą";
      SF Sg Loc => x + "wierze";
      SF Sg Voc => x + "Wiero";
      SF Pl Nom => x + "Wiery";
      SF Pl Gen => x + "Wier";
      SF Pl Dat => x + "Wierom";
      SF Pl Acc => x + "Wiery";
      SF Pl Instr => x + "Wierami";
      SF Pl Loc => x + "Wierach";
      SF Pl Voc => x + "Wiery"
    };

    oper mkNTable0880: Str -> SubstForm => Str; --%
    oper mkNTable0880 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Wiesia";
      SF Sg Gen => x + "Wiesi";
      SF Sg Dat => x + "Wiesi";
      SF Sg Acc => x + "Wiesię";
      SF Sg Instr => x + "Wiesią";
      SF Sg Loc => x + "Wiesi";
      SF Sg Voc => x + "Wiesiu";
      SF Pl Nom => x + "Wiesie";
      SF Pl Gen => x + "wieś";
      SF Pl Dat => x + "Wiesiom";
      SF Pl Acc => x + "Wiesie";
      SF Pl Instr => x + "Wiesiami";
      SF Pl Loc => x + "Wiesiach";
      SF Pl Voc => x + "Wiesie"
    };

    oper mkNTable0881: Str -> SubstForm => Str; --%
    oper mkNTable0881 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "Wietnamka";
      SF Sg Gen => x + "Wietnamki";
      SF Sg Dat => x + "wietnamce";
      SF Sg Acc => x + "Wietnamkę";
      SF Sg Instr => x + "Wietnamką";
      SF Sg Loc => x + "wietnamce";
      SF Sg Voc => x + "Wietnamko";
      SF Pl Nom => x + "Wietnamki";
      SF Pl Gen => x + "Wietnamek";
      SF Pl Dat => x + "Wietnamkom";
      SF Pl Acc => x + "Wietnamki";
      SF Pl Instr => x + "Wietnamkami";
      SF Pl Loc => x + "Wietnamkach";
      SF Pl Voc => x + "Wietnamki"
    };

    oper mkNTable0882: Str -> SubstForm => Str; --%
    oper mkNTable0882 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Wikta";
      SF Sg Gen => x + "wikty";
      SF Sg Dat => x + "wikcie";
      SF Sg Acc => x + "Wiktę";
      SF Sg Instr => x + "Wiktą";
      SF Sg Loc => x + "wikcie";
      SF Sg Voc => x + "Wikto";
      SF Pl Nom => x + "wikty";
      SF Pl Gen => x + "wikt";
      SF Pl Dat => x + "wiktom";
      SF Pl Acc => x + "wikty";
      SF Pl Instr => x + "wiktami";
      SF Pl Loc => x + "wiktach";
      SF Pl Voc => x + "wikty"
    };

    oper mkNTable0883: Str -> SubstForm => Str; --%
    oper mkNTable0883 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "wiktor";
      SF Sg Gen => x + "wiktora";
      SF Sg Dat => x + "wiktorowi";
      SF Sg Acc => x + "wiktora";
      SF Sg Instr => x + "wiktorem";
      SF Sg Loc => x + "wiktorze";
      SF Sg Voc => x + "wiktorze";
      SF Pl Nom => x + "Wiktorowie";
      SF Pl Gen => x + "wiktorów";
      SF Pl Dat => x + "wiktorom";
      SF Pl Acc => x + "wiktorów";
      SF Pl Instr => x + "wiktorami";
      SF Pl Loc => x + "wiktorach";
      SF Pl Voc => x + "Wiktorowie"
    };

    oper mkNTable0884: Str -> SubstForm => Str; --%
    oper mkNTable0884 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "wilczek";
      SF Sg Gen => x + "wilczka";
      SF Sg Dat => x + "wilczkowi";
      SF Sg Acc => x + "wilczka";
      SF Sg Instr => x + "wilczkiem";
      SF Sg Loc => x + "wilczku";
      SF Sg Voc => x + "wilczku";
      SF Pl Nom => x + "Wilczkowie";
      SF Pl Gen => x + "wilczków";
      SF Pl Dat => x + "wilczkom";
      SF Pl Acc => x + "wilczków";
      SF Pl Instr => x + "wilczkami";
      SF Pl Loc => x + "wilczkach";
      SF Pl Voc => x + "Wilczkowie"
    };

    oper mkNTable0885: Str -> SubstForm => Str; --%
    oper mkNTable0885 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "wilk";
      SF Sg Gen => x + "wilka";
      SF Sg Dat => x + "wilkowi";
      SF Sg Acc => x + "wilka";
      SF Sg Instr => x + "wilkiem";
      SF Sg Loc => x + "wilku";
      SF Sg Voc => x + "wilku";
      SF Pl Nom => x + "Wilkowie";
      SF Pl Gen => x + "wilków";
      SF Pl Dat => x + "wilkom";
      SF Pl Acc => x + "wilków";
      SF Pl Instr => x + "wilkami";
      SF Pl Loc => x + "wilkach";
      SF Pl Voc => x + "Wilkowie"
    };

    oper mkNTable0887: Str -> SubstForm => Str; --%
    oper mkNTable0887 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Wit";
      SF Sg Gen => x + "Wita";
      SF Sg Dat => x + "Witowi";
      SF Sg Acc => x + "Wita";
      SF Sg Instr => x + "Witem";
      SF Sg Loc => x + "wicie";
      SF Sg Voc => x + "wicie";
      SF Pl Nom => x + "Witowie";
      SF Pl Gen => x + "Witów";
      SF Pl Dat => x + "Witom";
      SF Pl Acc => x + "Witów";
      SF Pl Instr => x + "Witami";
      SF Pl Loc => x + "Witach";
      SF Pl Voc => x + "Witowie"
    };

    oper mkNTable0888: Str -> SubstForm => Str; --%
    oper mkNTable0888 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Wita";
      SF Sg Gen => x + "Wity";
      SF Sg Dat => x + "wicie";
      SF Sg Acc => x + "Witę";
      SF Sg Instr => x + "Witą";
      SF Sg Loc => x + "wicie";
      SF Sg Voc => x + "Wito";
      SF Pl Nom => x + "Wity";
      SF Pl Gen => x + "Wit";
      SF Pl Dat => x + "Witom";
      SF Pl Acc => x + "Wity";
      SF Pl Instr => x + "Witami";
      SF Pl Loc => x + "Witach";
      SF Pl Voc => x + "Wity"
    };

    oper mkNTable0889: Str -> SubstForm => Str; --%
    oper mkNTable0889 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "witek";
      SF Sg Gen => x + "witka";
      SF Sg Dat => x + "Witkowi";
      SF Sg Acc => x + "witka";
      SF Sg Instr => x + "Witkiem";
      SF Sg Loc => x + "Witku";
      SF Sg Voc => x + "Witku";
      SF Pl Nom => x + "Witkowie";
      SF Pl Gen => x + "Witków";
      SF Pl Dat => x + "witkom";
      SF Pl Acc => x + "Witków";
      SF Pl Instr => x + "witkami";
      SF Pl Loc => x + "witkach";
      SF Pl Voc => x + "Witkowie"
    };

    oper mkNTable0891: Str -> SubstForm => Str; --%
    oper mkNTable0891 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "wojaczek";
      SF Sg Gen => x + "wojaczka";
      SF Sg Dat => x + "Wojaczkowi";
      SF Sg Acc => x + "wojaczka";
      SF Sg Instr => x + "Wojaczkiem";
      SF Sg Loc => x + "Wojaczku";
      SF Sg Voc => x + "Wojaczku";
      SF Pl Nom => x + "Wojaczkowie";
      SF Pl Gen => x + "Wojaczków";
      SF Pl Dat => x + "wojaczkom";
      SF Pl Acc => x + "Wojaczków";
      SF Pl Instr => x + "wojaczkami";
      SF Pl Loc => x + "wojaczkach";
      SF Pl Voc => x + "Wojaczkowie"
    };

    oper mkNTable0892: Str -> SubstForm => Str; --%
    oper mkNTable0892 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Wolf";
      SF Sg Gen => x + "Wolfa";
      SF Sg Dat => x + "Wolfowi";
      SF Sg Acc => x + "Wolfa";
      SF Sg Instr => x + "Wolfem";
      SF Sg Loc => x + "wolfie";
      SF Sg Voc => x + "wolfie";
      SF Pl Nom => x + "Wolfowie";
      SF Pl Gen => x + "Wolfów";
      SF Pl Dat => x + "Wolfom";
      SF Pl Acc => x + "Wolfów";
      SF Pl Instr => x + "Wolfami";
      SF Pl Loc => x + "Wolfach";
      SF Pl Voc => x + "Wolfowie"
    };

    oper mkNTable0894: Str -> SubstForm => Str; --%
    oper mkNTable0894 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "wrona";
      SF Sg Gen => x + "wrony";
      SF Sg Dat => x + "wronie";
      SF Sg Acc => x + "wronę";
      SF Sg Instr => x + "wroną";
      SF Sg Loc => x + "wronie";
      SF Sg Voc => x + "wrono";
      SF Pl Nom => x + "Wronowie";
      SF Pl Gen => x + "Wronów";
      SF Pl Dat => x + "wronom";
      SF Pl Acc => x + "Wronów";
      SF Pl Instr => x + "wronami";
      SF Pl Loc => x + "wronach";
      SF Pl Voc => x + "Wronowie"
    };

    oper mkNTable0895: Str -> SubstForm => Str; --%
    oper mkNTable0895 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "wszoła";
      SF Sg Gen => x + "wszoły";
      SF Sg Dat => x + "wszole";
      SF Sg Acc => x + "Wszołę";
      SF Sg Instr => x + "Wszołą";
      SF Sg Loc => x + "wszole";
      SF Sg Voc => x + "Wszoło";
      SF Pl Nom => x + "Wszołowie";
      SF Pl Gen => x + "wszołów";
      SF Pl Dat => x + "wszołom";
      SF Pl Acc => x + "wszołów";
      SF Pl Instr => x + "wszołami";
      SF Pl Loc => x + "wszołach";
      SF Pl Voc => x + "Wszołowie"
    };

    oper mkNTable0896: Str -> SubstForm => Str; --%
    oper mkNTable0896 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "wyka";
      SF Sg Gen => x + "wyki";
      SF Sg Dat => x + "wyce";
      SF Sg Acc => x + "wykę";
      SF Sg Instr => x + "wyką";
      SF Sg Loc => x + "wyce";
      SF Sg Voc => x + "wyko";
      SF Pl Nom => x + "Wykowie";
      SF Pl Gen => x + "Wyków";
      SF Pl Dat => x + "wykom";
      SF Pl Acc => x + "Wyków";
      SF Pl Instr => x + "wykami";
      SF Pl Loc => x + "wykach";
      SF Pl Voc => x + "Wykowie"
    };

    oper mkNTable0897: Str -> SubstForm => Str; --%
    oper mkNTable0897 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "wypych";
      SF Sg Gen => x + "Wypycha";
      SF Sg Dat => x + "wypychowi";
      SF Sg Acc => x + "Wypycha";
      SF Sg Instr => x + "wypychem";
      SF Sg Loc => x + "wypychu";
      SF Sg Voc => x + "wypychu";
      SF Pl Nom => x + "Wypychowie";
      SF Pl Gen => x + "wypychów";
      SF Pl Dat => x + "wypychom";
      SF Pl Acc => x + "wypychów";
      SF Pl Instr => x + "wypychami";
      SF Pl Loc => x + "wypychach";
      SF Pl Voc => x + "Wypychowie"
    };

    oper mkNTable0898: Str -> SubstForm => Str; --%
    oper mkNTable0898 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Władka";
      SF Sg Gen => x + "Władki";
      SF Sg Dat => x + "władce";
      SF Sg Acc => x + "Władkę";
      SF Sg Instr => x + "Władką";
      SF Sg Loc => x + "władce";
      SF Sg Voc => x + "Władko";
      SF Pl Nom => x + "Władki";
      SF Pl Gen => x + "Władek";
      SF Pl Dat => x + "Władkom";
      SF Pl Acc => x + "Władki";
      SF Pl Instr => x + "Władkami";
      SF Pl Loc => x + "Władkach";
      SF Pl Voc => x + "Władki"
    };

    oper mkNTable0899: Str -> SubstForm => Str; --%
    oper mkNTable0899 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Włoch";
      SF Sg Gen => x + "Włocha";
      SF Sg Dat => x + "Włochowi";
      SF Sg Acc => x + "Włocha";
      SF Sg Instr => x + "Włochem";
      SF Sg Loc => x + "Włochu";
      SF Sg Voc => x + "Włochu";
      SF Pl Nom => x + "włosi";
      SF Pl Gen => x + "włochów";
      SF Pl Dat => x + "włochom";
      SF Pl Acc => x + "włochów";
      SF Pl Instr => x + "włochami";
      SF Pl Loc => x + "włochach";
      SF Pl Voc => x + "włosi"
    };

    oper mkNTable0901: Str -> SubstForm => Str; --%
    oper mkNTable0901 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ier";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "rzy";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "rów";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "rzy"
    };

    oper mkNTable0902: Str -> SubstForm => Str; --%
    oper mkNTable0902 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zeł";
      SF Sg Gen => x + "zła";
      SF Sg Dat => x + "złowi";
      SF Sg Acc => x + "zła";
      SF Sg Instr => x + "złem";
      SF Sg Loc => x + "źle";
      SF Sg Voc => x + "źle";
      SF Pl Nom => x + "zły";
      SF Pl Gen => x + "złów";
      SF Pl Dat => x + "złom";
      SF Pl Acc => x + "zły";
      SF Pl Instr => x + "złami";
      SF Pl Loc => x + "złach";
      SF Pl Voc => x + "zły"
    };

    oper mkNTable0903: Str -> SubstForm => Str; --%
    oper mkNTable0903 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "wójcik";
      SF Sg Gen => x + "wójcika";
      SF Sg Dat => x + "wójcikowi";
      SF Sg Acc => x + "wójcika";
      SF Sg Instr => x + "wójcikiem";
      SF Sg Loc => x + "wójciku";
      SF Sg Voc => x + "wójciku";
      SF Pl Nom => x + "Wójcikowie";
      SF Pl Gen => x + "wójcików";
      SF Pl Dat => x + "wójcikom";
      SF Pl Acc => x + "wójcików";
      SF Pl Instr => x + "wójcikami";
      SF Pl Loc => x + "wójcikach";
      SF Pl Voc => x + "Wójcikowie"
    };

    oper mkNTable0905: Str -> SubstForm => Str; --%
    oper mkNTable0905 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "zair";
      SF Sg Gen => x + "Zairu";
      SF Sg Dat => x + "zairowi";
      SF Sg Acc => x + "zair";
      SF Sg Instr => x + "zairem";
      SF Sg Loc => x + "zairze";
      SF Sg Voc => x + "zairze";
      SF Pl Nom => x + "zairy";
      SF Pl Gen => x + "zairów";
      SF Pl Dat => x + "zairom";
      SF Pl Acc => x + "zairy";
      SF Pl Instr => x + "zairami";
      SF Pl Loc => x + "zairach";
      SF Pl Voc => x + "zairy"
    };

    oper mkNTable0906: Str -> SubstForm => Str; --%
    oper mkNTable0906 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "zając";
      SF Sg Gen => x + "zająca";
      SF Sg Dat => x + "zającowi";
      SF Sg Acc => x + "zająca";
      SF Sg Instr => x + "zającem";
      SF Sg Loc => x + "zającu";
      SF Sg Voc => x + "zającu";
      SF Pl Nom => x + "Zającowie";
      SF Pl Gen => x + "zająców";
      SF Pl Dat => x + "zającom";
      SF Pl Acc => x + "zająców";
      SF Pl Instr => x + "zającami";
      SF Pl Loc => x + "zającach";
      SF Pl Voc => x + "Zającowie"
    };

    oper mkNTable0907: Str -> SubstForm => Str; --%
    oper mkNTable0907 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "zajączek";
      SF Sg Gen => x + "zajączka";
      SF Sg Dat => x + "zajączkowi";
      SF Sg Acc => x + "zajączka";
      SF Sg Instr => x + "zajączkiem";
      SF Sg Loc => x + "zajączku";
      SF Sg Voc => x + "zajączku";
      SF Pl Nom => x + "Zajączkowie";
      SF Pl Gen => x + "zajączków";
      SF Pl Dat => x + "zajączkom";
      SF Pl Acc => x + "zajączków";
      SF Pl Instr => x + "zajączkami";
      SF Pl Loc => x + "zajączkach";
      SF Pl Voc => x + "Zajączkowie"
    };

    oper mkNTable0908: Str -> SubstForm => Str; --%
    oper mkNTable0908 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0909: Str -> SubstForm => Str; --%
    oper mkNTable0909 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "zawada";
      SF Sg Gen => x + "zawady";
      SF Sg Dat => x + "zawadzie";
      SF Sg Acc => x + "zawadę";
      SF Sg Instr => x + "zawadą";
      SF Sg Loc => x + "zawadzie";
      SF Sg Voc => x + "zawado";
      SF Pl Nom => x + "Zawadowie";
      SF Pl Gen => x + "Zawadów";
      SF Pl Dat => x + "zawadom";
      SF Pl Acc => x + "Zawadów";
      SF Pl Instr => x + "zawadami";
      SF Pl Loc => x + "zawadach";
      SF Pl Voc => x + "Zawadowie"
    };

    oper mkNTable0912: Str -> SubstForm => Str; --%
    oper mkNTable0912 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ia";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ię";
      SF Sg Instr => x + "ią";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "io";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0913: Str -> SubstForm => Str; --%
    oper mkNTable0913 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "zięba";
      SF Sg Gen => x + "zięby";
      SF Sg Dat => x + "ziębie";
      SF Sg Acc => x + "ziębę";
      SF Sg Instr => x + "ziębą";
      SF Sg Loc => x + "ziębie";
      SF Sg Voc => x + "ziębo";
      SF Pl Nom => x + "Ziębowie";
      SF Pl Gen => x + "Ziębów";
      SF Pl Dat => x + "ziębom";
      SF Pl Acc => x + "Ziębów";
      SF Pl Instr => x + "ziębami";
      SF Pl Loc => x + "ziębach";
      SF Pl Voc => x + "Ziębowie"
    };

    oper mkNTable0914: Str -> SubstForm => Str; --%
    oper mkNTable0914 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Zofia";
      SF Sg Gen => x + "zofii";
      SF Sg Dat => x + "zofii";
      SF Sg Acc => x + "Zofię";
      SF Sg Instr => x + "Zofią";
      SF Sg Loc => x + "zofii";
      SF Sg Voc => x + "Zofio";
      SF Pl Nom => x + "Zofie";
      SF Pl Gen => x + "zofij";
      SF Pl Dat => x + "Zofiom";
      SF Pl Acc => x + "Zofie";
      SF Pl Instr => x + "Zofiami";
      SF Pl Loc => x + "Zofiach";
      SF Pl Voc => x + "Zofie"
    };

    oper mkNTable0915: Str -> SubstForm => Str; --%
    oper mkNTable0915 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Zola";
      SF Sg Gen => x + "zoli";
      SF Sg Dat => x + "zoli";
      SF Sg Acc => x + "Zolę";
      SF Sg Instr => x + "Zolą";
      SF Sg Loc => x + "zoli";
      SF Sg Voc => x + "Zolo";
      SF Pl Nom => x + "Zolowie";
      SF Pl Gen => x + "zolów";
      SF Pl Dat => x + "zolom";
      SF Pl Acc => x + "zolów";
      SF Pl Instr => x + "zolami";
      SF Pl Loc => x + "zolach";
      SF Pl Voc => x + "Zolowie"
    };

    oper mkNTable0917: Str -> SubstForm => Str; --%
    oper mkNTable0917 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ło";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ło";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ła";
      SF Pl Gen => x + "eł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ła";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ła"
    };

    oper mkNTable0918: Str -> SubstForm => Str; --%
    oper mkNTable0918 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ier";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ier";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable0919: Str -> SubstForm => Str; --%
    oper mkNTable0919 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sta";
      SF Sg Gen => x + "sty";
      SF Sg Dat => x + "ście";
      SF Sg Acc => x + "stę";
      SF Sg Instr => x + "stą";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "sto";
      SF Pl Nom => x + "ści";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "stów";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "ści"
    };

    oper mkNTable0920: Str -> SubstForm => Str; --%
    oper mkNTable0920 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0921: Str -> SubstForm => Str; --%
    oper mkNTable0921 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ta";
      SF Sg Gen => x + "ty";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "tę";
      SF Sg Instr => x + "tą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable0922: Str -> SubstForm => Str; --%
    oper mkNTable0922 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0923: Str -> SubstForm => Str; --%
    oper mkNTable0923 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ni";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "nią";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "ni";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0924: Str -> SubstForm => Str; --%
    oper mkNTable0924 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable0925: Str -> SubstForm => Str; --%
    oper mkNTable0925 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0927: Str -> SubstForm => Str; --%
    oper mkNTable0927 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "t";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable0928: Str -> SubstForm => Str; --%
    oper mkNTable0928 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0929: Str -> SubstForm => Str; --%
    oper mkNTable0929 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "ej";
      SF Sg Dat => x + "ej";
      SF Sg Acc => x + "ą";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ej";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0930: Str -> SubstForm => Str; --%
    oper mkNTable0930 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "c";
      SF Sg Gen => x + "cu";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "c";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0931: Str -> SubstForm => Str; --%
    oper mkNTable0931 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "g";
      SF Sg Gen => x + "ga";
      SF Sg Dat => x + "gowi";
      SF Sg Acc => x + "ga";
      SF Sg Instr => x + "giem";
      SF Sg Loc => x + "gu";
      SF Sg Voc => x + "gu";
      SF Pl Nom => x + "dzy";
      SF Pl Gen => x + "gów";
      SF Pl Dat => x + "gom";
      SF Pl Acc => x + "gów";
      SF Pl Instr => x + "gami";
      SF Pl Loc => x + "gach";
      SF Pl Voc => x + "dzy"
    };

    oper mkNTable0934: Str -> SubstForm => Str; --%
    oper mkNTable0934 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0935: Str -> SubstForm => Str; --%
    oper mkNTable0935 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "stu";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "st";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => x + "sty";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "sty";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "sty"
    };

    oper mkNTable0936: Str -> SubstForm => Str; --%
    oper mkNTable0936 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "to";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "tu";
      SF Sg Acc => x + "to";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "ta";
      SF Pl Gen => x + "t";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ta";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ta"
    };

    oper mkNTable0937: Str -> SubstForm => Str; --%
    oper mkNTable0937 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ka";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0938: Str -> SubstForm => Str; --%
    oper mkNTable0938 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "el";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable0939: Str -> SubstForm => Str; --%
    oper mkNTable0939 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0941: Str -> SubstForm => Str; --%
    oper mkNTable0941 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ru";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "er";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable0942: Str -> SubstForm => Str; --%
    oper mkNTable0942 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0943: Str -> SubstForm => Str; --%
    oper mkNTable0943 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0944: Str -> SubstForm => Str; --%
    oper mkNTable0944 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "zi";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "zi"
    };

    oper mkNTable0945: Str -> SubstForm => Str; --%
    oper mkNTable0945 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "owa";
      SF Sg Gen => x + "owy";
      SF Sg Dat => x + "owie";
      SF Sg Acc => x + "owę";
      SF Sg Instr => x + "ową";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owo";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable0946: Str -> SubstForm => Str; --%
    oper mkNTable0946 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0947: Str -> SubstForm => Str; --%
    oper mkNTable0947 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0948: Str -> SubstForm => Str; --%
    oper mkNTable0948 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable0949: Str -> SubstForm => Str; --%
    oper mkNTable0949 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ier";
      SF Sg Gen => x + "ru";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ier";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable0950: Str -> SubstForm => Str; --%
    oper mkNTable0950 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ój";
      SF Sg Gen => x + "oju";
      SF Sg Dat => x + "ojowi";
      SF Sg Acc => x + "ój";
      SF Sg Instr => x + "ojem";
      SF Sg Loc => x + "oju";
      SF Sg Voc => x + "oju";
      SF Pl Nom => x + "oje";
      SF Pl Gen => x + "ojów";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "oje";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "oje"
    };

    oper mkNTable0951: Str -> SubstForm => Str; --%
    oper mkNTable0951 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nia";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "nię";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "nio";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0952: Str -> SubstForm => Str; --%
    oper mkNTable0952 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "e";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "e";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "e";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "e";
      SF Pl Loc => x + "e";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0953: Str -> SubstForm => Str; --%
    oper mkNTable0953 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ze";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0954: Str -> SubstForm => Str; --%
    oper mkNTable0954 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "oł";
      SF Sg Gen => x + "oła";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "oła";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ele";
      SF Sg Voc => x + "ele";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable0955: Str -> SubstForm => Str; --%
    oper mkNTable0955 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sta";
      SF Sg Gen => x + "sty";
      SF Sg Dat => x + "ście";
      SF Sg Acc => x + "stę";
      SF Sg Instr => x + "stą";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "sto";
      SF Pl Nom => x + "sty";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "sty";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "sty"
    };

    oper mkNTable0956: Str -> SubstForm => Str; --%
    oper mkNTable0956 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ł";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable0957: Str -> SubstForm => Str; --%
    oper mkNTable0957 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ziec";
      SF Sg Gen => x + "źca";
      SF Sg Dat => x + "źcowi";
      SF Sg Acc => x + "ziec";
      SF Sg Instr => x + "źcem";
      SF Sg Loc => x + "źcu";
      SF Sg Voc => x + "źcu";
      SF Pl Nom => x + "źce";
      SF Pl Gen => x + "źców";
      SF Pl Dat => x + "źcom";
      SF Pl Acc => x + "źce";
      SF Pl Instr => x + "źcami";
      SF Pl Loc => x + "źcach";
      SF Pl Voc => x + "źce"
    };

    oper mkNTable0958: Str -> SubstForm => Str; --%
    oper mkNTable0958 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ało";
      SF Sg Gen => x + "ała";
      SF Sg Dat => x + "ału";
      SF Sg Acc => x + "ało";
      SF Sg Instr => x + "ałem";
      SF Sg Loc => x + "ele";
      SF Sg Voc => x + "ało";
      SF Pl Nom => x + "ała";
      SF Pl Gen => x + "ał";
      SF Pl Dat => x + "ałom";
      SF Pl Acc => x + "ała";
      SF Pl Instr => x + "ałami";
      SF Pl Loc => x + "ałach";
      SF Pl Voc => x + "ała"
    };

    oper mkNTable0959: Str -> SubstForm => Str; --%
    oper mkNTable0959 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ro";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "ru";
      SF Sg Acc => x + "ro";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "ro";
      SF Pl Nom => x + "ra";
      SF Pl Gen => x + "er";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ra";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ra"
    };

    oper mkNTable0960: Str -> SubstForm => Str; --%
    oper mkNTable0960 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oza";
      SF Sg Gen => x + "ozy";
      SF Sg Dat => x + "ozie";
      SF Sg Acc => x + "ozę";
      SF Sg Instr => x + "ozą";
      SF Sg Loc => x + "ozie";
      SF Sg Voc => x + "ozo";
      SF Pl Nom => x + "ozy";
      SF Pl Gen => x + "óz";
      SF Pl Dat => x + "ozom";
      SF Pl Acc => x + "ozy";
      SF Pl Instr => x + "ozami";
      SF Pl Loc => x + "ozach";
      SF Pl Voc => x + "ozy"
    };

    oper mkNTable0961: Str -> SubstForm => Str; --%
    oper mkNTable0961 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0963: Str -> SubstForm => Str; --%
    oper mkNTable0963 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0964: Str -> SubstForm => Str; --%
    oper mkNTable0964 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0965: Str -> SubstForm => Str; --%
    oper mkNTable0965 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "rzy";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "rów";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "rzy"
    };

    oper mkNTable0966: Str -> SubstForm => Str; --%
    oper mkNTable0966 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ło";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ło";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ła";
      SF Pl Gen => x + "ł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ła";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ła"
    };

    oper mkNTable0967: Str -> SubstForm => Str; --%
    oper mkNTable0967 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "lu";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "iel";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable0968: Str -> SubstForm => Str; --%
    oper mkNTable0968 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ążę";
      SF Sg Gen => x + "ęcia";
      SF Sg Dat => x + "ęciu";
      SF Sg Acc => x + "ęcia";
      SF Sg Instr => x + "ęciem";
      SF Sg Loc => x + "ęciu";
      SF Sg Voc => x + "ążę";
      SF Pl Nom => x + "ążęta";
      SF Pl Gen => x + "ążąt";
      SF Pl Dat => x + "ążętom";
      SF Pl Acc => x + "ążąt";
      SF Pl Instr => x + "ążętami";
      SF Pl Loc => x + "ążętach";
      SF Pl Voc => x + "ążęta"
    };

    oper mkNTable0969: Str -> SubstForm => Str; --%
    oper mkNTable0969 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0970: Str -> SubstForm => Str; --%
    oper mkNTable0970 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ni";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "nię";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "ni";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0971: Str -> SubstForm => Str; --%
    oper mkNTable0971 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable0972: Str -> SubstForm => Str; --%
    oper mkNTable0972 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "sta";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "st";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => x + "sty";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "sty";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "sty"
    };

    oper mkNTable0973: Str -> SubstForm => Str; --%
    oper mkNTable0973 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0974: Str -> SubstForm => Str; --%
    oper mkNTable0974 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "autosan";
      SF Sg Gen => x + "Autosanu";
      SF Sg Dat => x + "autosanowi";
      SF Sg Acc => x + "autosan";
      SF Sg Instr => x + "autosanem";
      SF Sg Loc => x + "autosanie";
      SF Sg Voc => x + "autosanie";
      SF Pl Nom => x + "autosany";
      SF Pl Gen => x + "autosanów";
      SF Pl Dat => x + "autosanom";
      SF Pl Acc => x + "autosany";
      SF Pl Instr => x + "autosanami";
      SF Pl Loc => x + "autosanach";
      SF Pl Voc => x + "autosany"
    };

    oper mkNTable0975: Str -> SubstForm => Str; --%
    oper mkNTable0975 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0976: Str -> SubstForm => Str; --%
    oper mkNTable0976 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0977: Str -> SubstForm => Str; --%
    oper mkNTable0977 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "ym";
      SF Sg Loc => x + "ym";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0978: Str -> SubstForm => Str; --%
    oper mkNTable0978 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "no";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nu";
      SF Sg Acc => x + "no";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "no";
      SF Pl Nom => x + "na";
      SF Pl Gen => x + "ien";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "na";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "na"
    };

    oper mkNTable0979: Str -> SubstForm => Str; --%
    oper mkNTable0979 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "iel";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable0980: Str -> SubstForm => Str; --%
    oper mkNTable0980 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "bajorek";
      SF Sg Gen => x + "bajorka";
      SF Sg Dat => x + "Bajorkowi";
      SF Sg Acc => x + "bajorek";
      SF Sg Instr => x + "bajorkiem";
      SF Sg Loc => x + "bajorku";
      SF Sg Voc => x + "bajorku";
      SF Pl Nom => x + "Bajorki";
      SF Pl Gen => x + "Bajorków";
      SF Pl Dat => x + "bajorkom";
      SF Pl Acc => x + "Bajorki";
      SF Pl Instr => x + "bajorkami";
      SF Pl Loc => x + "bajorkach";
      SF Pl Voc => x + "Bajorki"
    };

    oper mkNTable0981: Str -> SubstForm => Str; --%
    oper mkNTable0981 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "lu";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "el";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable0982: Str -> SubstForm => Str; --%
    oper mkNTable0982 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "at";
      SF Sg Gen => x + "atu";
      SF Sg Dat => x + "atowi";
      SF Sg Acc => x + "at";
      SF Sg Instr => x + "atem";
      SF Sg Loc => x + "ecie";
      SF Sg Voc => x + "ecie";
      SF Pl Nom => x + "aty";
      SF Pl Gen => x + "atów";
      SF Pl Dat => x + "atom";
      SF Pl Acc => x + "aty";
      SF Pl Instr => x + "atami";
      SF Pl Loc => x + "atach";
      SF Pl Voc => x + "aty"
    };

    oper mkNTable0983: Str -> SubstForm => Str; --%
    oper mkNTable0983 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "balik";
      SF Sg Gen => x + "Balika";
      SF Sg Dat => x + "balikowi";
      SF Sg Acc => x + "balik";
      SF Sg Instr => x + "balikiem";
      SF Sg Loc => x + "baliku";
      SF Sg Voc => x + "baliku";
      SF Pl Nom => x + "baliki";
      SF Pl Gen => x + "balików";
      SF Pl Dat => x + "balikom";
      SF Pl Acc => x + "baliki";
      SF Pl Instr => x + "balikami";
      SF Pl Loc => x + "balikach";
      SF Pl Voc => x + "baliki"
    };

    oper mkNTable0984: Str -> SubstForm => Str; --%
    oper mkNTable0984 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable0985: Str -> SubstForm => Str; --%
    oper mkNTable0985 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0986: Str -> SubstForm => Str; --%
    oper mkNTable0986 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ień";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0987: Str -> SubstForm => Str; --%
    oper mkNTable0987 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óz";
      SF Sg Gen => x + "ozu";
      SF Sg Dat => x + "ozowi";
      SF Sg Acc => x + "óz";
      SF Sg Instr => x + "ozem";
      SF Sg Loc => x + "ozie";
      SF Sg Voc => x + "ozie";
      SF Pl Nom => x + "ozy";
      SF Pl Gen => x + "ozów";
      SF Pl Dat => x + "ozom";
      SF Pl Acc => x + "ozy";
      SF Pl Instr => x + "ozami";
      SF Pl Loc => x + "ozach";
      SF Pl Voc => x + "ozy"
    };

    oper mkNTable0988: Str -> SubstForm => Str; --%
    oper mkNTable0988 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0989: Str -> SubstForm => Str; --%
    oper mkNTable0989 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable0990: Str -> SubstForm => Str; --%
    oper mkNTable0990 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable0991: Str -> SubstForm => Str; --%
    oper mkNTable0991 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "bas";
      SF Sg Gen => x + "basa";
      SF Sg Dat => x + "basowi";
      SF Sg Acc => x + "basa";
      SF Sg Instr => x + "basem";
      SF Sg Loc => x + "basie";
      SF Sg Voc => x + "basie";
      SF Pl Nom => x + "Basowie";
      SF Pl Gen => x + "basów";
      SF Pl Dat => x + "basom";
      SF Pl Acc => x + "basów";
      SF Pl Instr => x + "basami";
      SF Pl Loc => x + "basach";
      SF Pl Voc => x + "Basowie"
    };

    oper mkNTable0992: Str -> SubstForm => Str; --%
    oper mkNTable0992 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ół";
      SF Sg Gen => x + "ołu";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "ołu";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ole";
      SF Sg Voc => x + "ole";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable0993: Str -> SubstForm => Str; --%
    oper mkNTable0993 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0994: Str -> SubstForm => Str; --%
    oper mkNTable0994 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "beczek";
      SF Sg Gen => x + "beczka";
      SF Sg Dat => x + "Beczkowi";
      SF Sg Acc => x + "beczka";
      SF Sg Instr => x + "Beczkiem";
      SF Sg Loc => x + "Beczku";
      SF Sg Voc => x + "Beczku";
      SF Pl Nom => x + "Beczkowie";
      SF Pl Gen => x + "Beczków";
      SF Pl Dat => x + "beczkom";
      SF Pl Acc => x + "Beczków";
      SF Pl Instr => x + "beczkami";
      SF Pl Loc => x + "beczkach";
      SF Pl Voc => x + "Beczkowie"
    };

    oper mkNTable0995: Str -> SubstForm => Str; --%
    oper mkNTable0995 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "li";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable0996: Str -> SubstForm => Str; --%
    oper mkNTable0996 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cie";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciu";
      SF Sg Acc => x + "cie";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "cia";
      SF Pl Gen => x + "ć";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cia";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cia"
    };

    oper mkNTable0997: Str -> SubstForm => Str; --%
    oper mkNTable0997 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable0998: Str -> SubstForm => Str; --%
    oper mkNTable0998 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ez";
      SF Sg Gen => x + "zu";
      SF Sg Dat => x + "zowi";
      SF Sg Acc => x + "ez";
      SF Sg Instr => x + "zem";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "zów";
      SF Pl Dat => x + "zom";
      SF Pl Acc => x + "zy";
      SF Pl Instr => x + "zami";
      SF Pl Loc => x + "zach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable0999: Str -> SubstForm => Str; --%
    oper mkNTable0999 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "no";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nu";
      SF Sg Acc => x + "no";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "no";
      SF Pl Nom => x + "na";
      SF Pl Gen => x + "en";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "na";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "na"
    };

    oper mkNTable1001: Str -> SubstForm => Str; --%
    oper mkNTable1001 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable1002: Str -> SubstForm => Str; --%
    oper mkNTable1002 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "białek";
      SF Sg Gen => x + "białka";
      SF Sg Dat => x + "Białkowi";
      SF Sg Acc => x + "białek";
      SF Sg Instr => x + "białkiem";
      SF Sg Loc => x + "białku";
      SF Sg Voc => x + "białku";
      SF Pl Nom => x + "białki";
      SF Pl Gen => x + "Białków";
      SF Pl Dat => x + "białkom";
      SF Pl Acc => x + "białki";
      SF Pl Instr => x + "białkami";
      SF Pl Loc => x + "białkach";
      SF Pl Voc => x + "białki"
    };

    oper mkNTable1003: Str -> SubstForm => Str; --%
    oper mkNTable1003 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1004: Str -> SubstForm => Str; --%
    oper mkNTable1004 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ór";
      SF Sg Gen => x + "ora";
      SF Sg Dat => x + "orowi";
      SF Sg Acc => x + "ora";
      SF Sg Instr => x + "orem";
      SF Sg Loc => x + "orze";
      SF Sg Voc => x + "orze";
      SF Pl Nom => x + "ory";
      SF Pl Gen => x + "orów";
      SF Pl Dat => x + "orom";
      SF Pl Acc => x + "ory";
      SF Pl Instr => x + "orami";
      SF Pl Loc => x + "orach";
      SF Pl Voc => x + "ory"
    };

    oper mkNTable1005: Str -> SubstForm => Str; --%
    oper mkNTable1005 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1006: Str -> SubstForm => Str; --%
    oper mkNTable1006 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ków";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable1007: Str -> SubstForm => Str; --%
    oper mkNTable1007 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "ńca";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcu";
      SF Pl Nom => x + "ńce";
      SF Pl Gen => x + "ńców";
      SF Pl Dat => x + "ńcom";
      SF Pl Acc => x + "ńce";
      SF Pl Instr => x + "ńcami";
      SF Pl Loc => x + "ńcach";
      SF Pl Voc => x + "ńce"
    };

    oper mkNTable1008: Str -> SubstForm => Str; --%
    oper mkNTable1008 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1009: Str -> SubstForm => Str; --%
    oper mkNTable1009 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ole";
      SF Sg Gen => x + "ola";
      SF Sg Dat => x + "olu";
      SF Sg Acc => x + "ole";
      SF Sg Instr => x + "olem";
      SF Sg Loc => x + "olu";
      SF Sg Voc => x + "ole";
      SF Pl Nom => x + "ola";
      SF Pl Gen => x + "ól";
      SF Pl Dat => x + "olom";
      SF Pl Acc => x + "ola";
      SF Pl Instr => x + "olami";
      SF Pl Loc => x + "olach";
      SF Pl Voc => x + "ola"
    };

    oper mkNTable1010: Str -> SubstForm => Str; --%
    oper mkNTable1010 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "wa";
      SF Sg Gen => x + "wy";
      SF Sg Dat => x + "wie";
      SF Sg Acc => x + "wę";
      SF Sg Instr => x + "wą";
      SF Sg Loc => x + "wie";
      SF Sg Voc => x + "wo";
      SF Pl Nom => x + "wy";
      SF Pl Gen => x + "ew";
      SF Pl Dat => x + "wom";
      SF Pl Acc => x + "wy";
      SF Pl Instr => x + "wami";
      SF Pl Loc => x + "wach";
      SF Pl Voc => x + "wy"
    };

    oper mkNTable1012: Str -> SubstForm => Str; --%
    oper mkNTable1012 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bobik";
      SF Sg Gen => x + "Bobika";
      SF Sg Dat => x + "bobikowi";
      SF Sg Acc => x + "bobik";
      SF Sg Instr => x + "bobikiem";
      SF Sg Loc => x + "bobiku";
      SF Sg Voc => x + "bobiku";
      SF Pl Nom => x + "bobiki";
      SF Pl Gen => x + "bobików";
      SF Pl Dat => x + "bobikom";
      SF Pl Acc => x + "bobiki";
      SF Pl Instr => x + "bobikami";
      SF Pl Loc => x + "bobikach";
      SF Pl Voc => x + "bobiki"
    };

    oper mkNTable1013: Str -> SubstForm => Str; --%
    oper mkNTable1013 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "en";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nowi";
      SF Sg Acc => x + "en";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "ny";
      SF Pl Gen => x + "nów";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "ny";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "ny"
    };

    oper mkNTable1014: Str -> SubstForm => Str; --%
    oper mkNTable1014 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ciek";
      SF Sg Gen => x + "ćka";
      SF Sg Dat => x + "ćkowi";
      SF Sg Acc => x + "ćka";
      SF Sg Instr => x + "ćkiem";
      SF Sg Loc => x + "ćku";
      SF Sg Voc => x + "ćku";
      SF Pl Nom => x + "ćki";
      SF Pl Gen => x + "ćków";
      SF Pl Dat => x + "ćkom";
      SF Pl Acc => x + "ćki";
      SF Pl Instr => x + "ćkami";
      SF Pl Loc => x + "ćkach";
      SF Pl Voc => x + "ćki"
    };

    oper mkNTable1015: Str -> SubstForm => Str; --%
    oper mkNTable1015 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "m";
      SF Sg Loc => x + "m";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ch";
      SF Pl Dat => x + "m";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "mi";
      SF Pl Loc => x + "ch";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1016: Str -> SubstForm => Str; --%
    oper mkNTable1016 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ziec";
      SF Sg Gen => x + "źca";
      SF Sg Dat => x + "źcowi";
      SF Sg Acc => x + "źca";
      SF Sg Instr => x + "źcem";
      SF Sg Loc => x + "źcu";
      SF Sg Voc => x + "źcu";
      SF Pl Nom => x + "źce";
      SF Pl Gen => x + "źców";
      SF Pl Dat => x + "źcom";
      SF Pl Acc => x + "źce";
      SF Pl Instr => x + "źcami";
      SF Pl Loc => x + "źcach";
      SF Pl Voc => x + "źce"
    };

    oper mkNTable1017: Str -> SubstForm => Str; --%
    oper mkNTable1017 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable1018: Str -> SubstForm => Str; --%
    oper mkNTable1018 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1019: Str -> SubstForm => Str; --%
    oper mkNTable1019 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "iel";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1020: Str -> SubstForm => Str; --%
    oper mkNTable1020 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ora";
      SF Sg Gen => x + "ory";
      SF Sg Dat => x + "orze";
      SF Sg Acc => x + "orę";
      SF Sg Instr => x + "orą";
      SF Sg Loc => x + "orze";
      SF Sg Voc => x + "oro";
      SF Pl Nom => x + "ory";
      SF Pl Gen => x + "ór";
      SF Pl Dat => x + "orom";
      SF Pl Acc => x + "ory";
      SF Pl Instr => x + "orami";
      SF Pl Loc => x + "orach";
      SF Pl Voc => x + "ory"
    };

    oper mkNTable1021: Str -> SubstForm => Str; --%
    oper mkNTable1021 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Boy";
      SF Sg Gen => x + "Boya";
      SF Sg Dat => x + "boyowi";
      SF Sg Acc => x + "Boya";
      SF Sg Instr => x + "boyem";
      SF Sg Loc => x + "boyu";
      SF Sg Voc => x + "boyu";
      SF Pl Nom => x + "boye";
      SF Pl Gen => x + "boyów";
      SF Pl Dat => x + "boyom";
      SF Pl Acc => x + "boyów";
      SF Pl Instr => x + "boyami";
      SF Pl Loc => x + "boyach";
      SF Pl Voc => x + "boye"
    };

    oper mkNTable1022: Str -> SubstForm => Str; --%
    oper mkNTable1022 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bożek";
      SF Sg Gen => x + "bożka";
      SF Sg Dat => x + "bożkowi";
      SF Sg Acc => x + "bożka";
      SF Sg Instr => x + "bożkiem";
      SF Sg Loc => x + "bożku";
      SF Sg Voc => x + "bożku";
      SF Pl Nom => x + "Bożkowie";
      SF Pl Gen => x + "bożków";
      SF Pl Dat => x + "bożkom";
      SF Pl Acc => x + "bożków";
      SF Pl Instr => x + "bożkami";
      SF Pl Loc => x + "bożkach";
      SF Pl Voc => x + "Bożkowie"
    };

    oper mkNTable1023: Str -> SubstForm => Str; --%
    oper mkNTable1023 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ha";
      SF Sg Gen => x + "hy";
      SF Sg Dat => x + "że";
      SF Sg Acc => x + "hę";
      SF Sg Instr => x + "hą";
      SF Sg Loc => x + "że";
      SF Sg Voc => x + "ho";
      SF Pl Nom => x + "hy";
      SF Pl Gen => x + "h";
      SF Pl Dat => x + "hom";
      SF Pl Acc => x + "hy";
      SF Pl Instr => x + "hami";
      SF Pl Loc => x + "hach";
      SF Pl Voc => x + "hy"
    };

    oper mkNTable1024: Str -> SubstForm => Str; --%
    oper mkNTable1024 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "tu";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "cia";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cia"
    };

    oper mkNTable1025: Str -> SubstForm => Str; --%
    oper mkNTable1025 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ew";
      SF Sg Gen => x + "wi";
      SF Sg Dat => x + "wi";
      SF Sg Acc => x + "ew";
      SF Sg Instr => x + "wią";
      SF Sg Loc => x + "wi";
      SF Sg Voc => x + "wi";
      SF Pl Nom => x + "wi";
      SF Pl Gen => x + "wi";
      SF Pl Dat => x + "wiom";
      SF Pl Acc => x + "wi";
      SF Pl Instr => x + "wiami";
      SF Pl Loc => x + "wiach";
      SF Pl Voc => x + "wi"
    };

    oper mkNTable1026: Str -> SubstForm => Str; --%
    oper mkNTable1026 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1027: Str -> SubstForm => Str; --%
    oper mkNTable1027 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zda";
      SF Sg Gen => x + "zdy";
      SF Sg Dat => x + "ździe";
      SF Sg Acc => x + "zdę";
      SF Sg Instr => x + "zdą";
      SF Sg Loc => x + "ździe";
      SF Sg Voc => x + "zdo";
      SF Pl Nom => x + "zdy";
      SF Pl Gen => x + "zd";
      SF Pl Dat => x + "zdom";
      SF Pl Acc => x + "zdy";
      SF Pl Instr => x + "zdami";
      SF Pl Loc => x + "zdach";
      SF Pl Voc => x + "zdy"
    };

    oper mkNTable1028: Str -> SubstForm => Str; --%
    oper mkNTable1028 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "sia";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "siów";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1029: Str -> SubstForm => Str; --%
    oper mkNTable1029 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ę";
      SF Sg Gen => x + "enia";
      SF Sg Dat => x + "eniu";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "eniem";
      SF Sg Loc => x + "eniu";
      SF Sg Voc => x + "ę";
      SF Pl Nom => x + "ona";
      SF Pl Gen => x + "on";
      SF Pl Dat => x + "onom";
      SF Pl Acc => x + "ona";
      SF Pl Instr => x + "onami";
      SF Pl Loc => x + "onach";
      SF Pl Voc => x + "ona"
    };

    oper mkNTable1030: Str -> SubstForm => Str; --%
    oper mkNTable1030 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1031: Str -> SubstForm => Str; --%
    oper mkNTable1031 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óg";
      SF Sg Gen => x + "oga";
      SF Sg Dat => x + "ogowi";
      SF Sg Acc => x + "oga";
      SF Sg Instr => x + "ogiem";
      SF Sg Loc => x + "ogu";
      SF Sg Voc => x + "ogu";
      SF Pl Nom => x + "ogi";
      SF Pl Gen => x + "ogów";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogi";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogi"
    };

    oper mkNTable1032: Str -> SubstForm => Str; --%
    oper mkNTable1032 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "siec";
      SF Sg Gen => x + "śca";
      SF Sg Dat => x + "ścowi";
      SF Sg Acc => x + "siec";
      SF Sg Instr => x + "ścem";
      SF Sg Loc => x + "ścu";
      SF Sg Voc => x + "ścu";
      SF Pl Nom => x + "śce";
      SF Pl Gen => x + "śców";
      SF Pl Dat => x + "ścom";
      SF Pl Acc => x + "śce";
      SF Pl Instr => x + "ścami";
      SF Pl Loc => x + "ścach";
      SF Pl Voc => x + "śce"
    };

    oper mkNTable1033: Str -> SubstForm => Str; --%
    oper mkNTable1033 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1034: Str -> SubstForm => Str; --%
    oper mkNTable1034 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ób";
      SF Sg Gen => x + "oba";
      SF Sg Dat => x + "obowi";
      SF Sg Acc => x + "oba";
      SF Sg Instr => x + "obem";
      SF Sg Loc => x + "obie";
      SF Sg Voc => x + "obie";
      SF Pl Nom => x + "oby";
      SF Pl Gen => x + "obów";
      SF Pl Dat => x + "obom";
      SF Pl Acc => x + "oby";
      SF Pl Instr => x + "obami";
      SF Pl Loc => x + "obach";
      SF Pl Voc => x + "oby"
    };

    oper mkNTable1035: Str -> SubstForm => Str; --%
    oper mkNTable1035 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ód";
      SF Sg Gen => x + "odu";
      SF Sg Dat => x + "odowi";
      SF Sg Acc => x + "ód";
      SF Sg Instr => x + "odem";
      SF Sg Loc => x + "odzie";
      SF Sg Voc => x + "odzie";
      SF Pl Nom => x + "ody";
      SF Pl Gen => x + "odów";
      SF Pl Dat => x + "odom";
      SF Pl Acc => x + "ody";
      SF Pl Instr => x + "odami";
      SF Pl Loc => x + "odach";
      SF Pl Voc => x + "ody"
    };

    oper mkNTable1036: Str -> SubstForm => Str; --%
    oper mkNTable1036 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bubek";
      SF Sg Gen => x + "bubka";
      SF Sg Dat => x + "bubkowi";
      SF Sg Acc => x + "bubka";
      SF Sg Instr => x + "bubkiem";
      SF Sg Loc => x + "bubku";
      SF Sg Voc => x + "bubku";
      SF Pl Nom => x + "Bubkowie";
      SF Pl Gen => x + "bubków";
      SF Pl Dat => x + "bubkom";
      SF Pl Acc => x + "bubków";
      SF Pl Instr => x + "bubkami";
      SF Pl Loc => x + "bubkach";
      SF Pl Voc => x + "Bubkowie"
    };

    oper mkNTable1037: Str -> SubstForm => Str; --%
    oper mkNTable1037 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1038: Str -> SubstForm => Str; --%
    oper mkNTable1038 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "niu";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1039: Str -> SubstForm => Str; --%
    oper mkNTable1039 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "m";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1040: Str -> SubstForm => Str; --%
    oper mkNTable1040 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "na";
      SF Sg Gen => x + "ny";
      SF Sg Dat => x + "nie";
      SF Sg Acc => x + "nę";
      SF Sg Instr => x + "ną";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "no";
      SF Pl Nom => x + "ny";
      SF Pl Gen => x + "en";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "ny";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "ny"
    };

    oper mkNTable1041: Str -> SubstForm => Str; --%
    oper mkNTable1041 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "byczek";
      SF Sg Gen => x + "byczka";
      SF Sg Dat => x + "byczkowi";
      SF Sg Acc => x + "byczka";
      SF Sg Instr => x + "byczkiem";
      SF Sg Loc => x + "byczku";
      SF Sg Voc => x + "byczku";
      SF Pl Nom => x + "Byczkowie";
      SF Pl Gen => x + "byczków";
      SF Pl Dat => x + "byczkom";
      SF Pl Acc => x + "byczków";
      SF Pl Instr => x + "byczkami";
      SF Pl Loc => x + "byczkach";
      SF Pl Voc => x + "Byczkowie"
    };

    oper mkNTable1042: Str -> SubstForm => Str; --%
    oper mkNTable1042 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1043: Str -> SubstForm => Str; --%
    oper mkNTable1043 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1044: Str -> SubstForm => Str; --%
    oper mkNTable1044 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zen";
      SF Sg Gen => x + "zna";
      SF Sg Dat => x + "znowi";
      SF Sg Acc => x + "zna";
      SF Sg Instr => x + "znem";
      SF Sg Loc => x + "źnie";
      SF Sg Voc => x + "źnie";
      SF Pl Nom => x + "źni";
      SF Pl Gen => x + "znów";
      SF Pl Dat => x + "znom";
      SF Pl Acc => x + "znów";
      SF Pl Instr => x + "znami";
      SF Pl Loc => x + "znach";
      SF Pl Voc => x + "źni"
    };

    oper mkNTable1045: Str -> SubstForm => Str; --%
    oper mkNTable1045 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąd";
      SF Sg Gen => x + "ędu";
      SF Sg Dat => x + "ędowi";
      SF Sg Acc => x + "ąd";
      SF Sg Instr => x + "ędem";
      SF Sg Loc => x + "ędzie";
      SF Sg Voc => x + "ędzie";
      SF Pl Nom => x + "ędy";
      SF Pl Gen => x + "ędów";
      SF Pl Dat => x + "ędom";
      SF Pl Acc => x + "ędy";
      SF Pl Instr => x + "ędami";
      SF Pl Loc => x + "ędach";
      SF Pl Voc => x + "ędy"
    };

    oper mkNTable1046: Str -> SubstForm => Str; --%
    oper mkNTable1046 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "en";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nowi";
      SF Sg Acc => x + "na";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "ny";
      SF Pl Gen => x + "nów";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "ny";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "ny"
    };

    oper mkNTable1047: Str -> SubstForm => Str; --%
    oper mkNTable1047 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ób";
      SF Sg Gen => x + "obu";
      SF Sg Dat => x + "obowi";
      SF Sg Acc => x + "ób";
      SF Sg Instr => x + "obem";
      SF Sg Loc => x + "obie";
      SF Sg Voc => x + "obie";
      SF Pl Nom => x + "oby";
      SF Pl Gen => x + "obów";
      SF Pl Dat => x + "obom";
      SF Pl Acc => x + "oby";
      SF Pl Instr => x + "obami";
      SF Pl Loc => x + "obach";
      SF Pl Voc => x + "oby"
    };

    oper mkNTable1048: Str -> SubstForm => Str; --%
    oper mkNTable1048 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "óbr";
      SF Sg Gen => x + "obra";
      SF Sg Dat => x + "obrowi";
      SF Sg Acc => x + "obra";
      SF Sg Instr => x + "obrem";
      SF Sg Loc => x + "obrze";
      SF Sg Voc => x + "obrze";
      SF Pl Nom => x + "obry";
      SF Pl Gen => x + "obrów";
      SF Pl Dat => x + "obrom";
      SF Pl Acc => x + "obry";
      SF Pl Instr => x + "obrami";
      SF Pl Loc => x + "obrach";
      SF Pl Voc => x + "obry"
    };

    oper mkNTable1049: Str -> SubstForm => Str; --%
    oper mkNTable1049 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óg";
      SF Sg Gen => x + "oga";
      SF Sg Dat => x + "ogu";
      SF Sg Acc => x + "oga";
      SF Sg Instr => x + "ogiem";
      SF Sg Loc => x + "ogu";
      SF Sg Voc => x + "oże";
      SF Pl Nom => x + "ogowie";
      SF Pl Gen => x + "ogów";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogów";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogowie"
    };

    oper mkNTable1050: Str -> SubstForm => Str; --%
    oper mkNTable1050 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "c";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable1051: Str -> SubstForm => Str; --%
    oper mkNTable1051 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1052: Str -> SubstForm => Str; --%
    oper mkNTable1052 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ze";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "a";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1053: Str -> SubstForm => Str; --%
    oper mkNTable1053 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ca";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "cę";
      SF Sg Instr => x + "cą";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "co";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "c";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable1054: Str -> SubstForm => Str; --%
    oper mkNTable1054 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "ły";
      SF Sg Dat => x + "le";
      SF Sg Acc => x + "łę";
      SF Sg Instr => x + "łą";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "ieł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1055: Str -> SubstForm => Str; --%
    oper mkNTable1055 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ź";
      SF Sg Gen => x + "zia";
      SF Sg Dat => x + "ziowi";
      SF Sg Acc => x + "ź";
      SF Sg Instr => x + "ziem";
      SF Sg Loc => x + "ziu";
      SF Sg Voc => x + "ziu";
      SF Pl Nom => x + "zie";
      SF Pl Gen => x + "zi";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zie";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zie"
    };

    oper mkNTable1056: Str -> SubstForm => Str; --%
    oper mkNTable1056 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "ś";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "siów";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1057: Str -> SubstForm => Str; --%
    oper mkNTable1057 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "ym";
      SF Sg Loc => x + "ym";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1058: Str -> SubstForm => Str; --%
    oper mkNTable1058 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "chomik";
      SF Sg Gen => x + "chomika";
      SF Sg Dat => x + "chomikowi";
      SF Sg Acc => x + "chomika";
      SF Sg Instr => x + "chomikiem";
      SF Sg Loc => x + "chomiku";
      SF Sg Voc => x + "chomiku";
      SF Pl Nom => x + "Chomikowie";
      SF Pl Gen => x + "chomików";
      SF Pl Dat => x + "chomikom";
      SF Pl Acc => x + "chomików";
      SF Pl Instr => x + "chomikami";
      SF Pl Loc => x + "chomikach";
      SF Pl Voc => x + "Chomikowie"
    };

    oper mkNTable1059: Str -> SubstForm => Str; --%
    oper mkNTable1059 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oba";
      SF Sg Gen => x + "oby";
      SF Sg Dat => x + "obie";
      SF Sg Acc => x + "obę";
      SF Sg Instr => x + "obą";
      SF Sg Loc => x + "obie";
      SF Sg Voc => x + "obo";
      SF Pl Nom => x + "oby";
      SF Pl Gen => x + "ób";
      SF Pl Dat => x + "obom";
      SF Pl Acc => x + "oby";
      SF Pl Instr => x + "obami";
      SF Pl Loc => x + "obach";
      SF Pl Voc => x + "oby"
    };

    oper mkNTable1061: Str -> SubstForm => Str; --%
    oper mkNTable1061 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "est";
      SF Sg Gen => x + "tu";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "est";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable1062: Str -> SubstForm => Str; --%
    oper mkNTable1062 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cu";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cze";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ców";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable1064: Str -> SubstForm => Str; --%
    oper mkNTable1064 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owu";
      SF Sg Dat => x + "owowi";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "owów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable1065: Str -> SubstForm => Str; --%
    oper mkNTable1065 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1066: Str -> SubstForm => Str; --%
    oper mkNTable1066 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "o";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable1067: Str -> SubstForm => Str; --%
    oper mkNTable1067 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "e";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "e";
      SF Pl Loc => x + "e";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1068: Str -> SubstForm => Str; --%
    oper mkNTable1068 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "ia";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1069: Str -> SubstForm => Str; --%
    oper mkNTable1069 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ciów";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1070: Str -> SubstForm => Str; --%
    oper mkNTable1070 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sła";
      SF Sg Gen => x + "sły";
      SF Sg Dat => x + "śle";
      SF Sg Acc => x + "słę";
      SF Sg Instr => x + "słą";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "sło";
      SF Pl Nom => x + "sły";
      SF Pl Gen => x + "seł";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "sły";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "sły"
    };

    oper mkNTable1071: Str -> SubstForm => Str; --%
    oper mkNTable1071 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "ciura";
      SF Sg Gen => x + "ciury";
      SF Sg Dat => x + "ciurze";
      SF Sg Acc => x + "ciurę";
      SF Sg Instr => x + "ciurą";
      SF Sg Loc => x + "ciurze";
      SF Sg Voc => x + "ciuro";
      SF Pl Nom => x + "Ciurowie";
      SF Pl Gen => x + "ciurów";
      SF Pl Dat => x + "ciurom";
      SF Pl Acc => x + "ciurów";
      SF Pl Instr => x + "ciurami";
      SF Pl Loc => x + "ciurach";
      SF Pl Voc => x + "Ciurowie"
    };

    oper mkNTable1072: Str -> SubstForm => Str; --%
    oper mkNTable1072 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ło";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ło";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ła";
      SF Pl Gen => x + "ieł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ła";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ła"
    };

    oper mkNTable1073: Str -> SubstForm => Str; --%
    oper mkNTable1073 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ota";
      SF Sg Gen => x + "oty";
      SF Sg Dat => x + "ocie";
      SF Sg Acc => x + "otę";
      SF Sg Instr => x + "otą";
      SF Sg Loc => x + "ocie";
      SF Sg Voc => x + "oto";
      SF Pl Nom => x + "oty";
      SF Pl Gen => x + "ót";
      SF Pl Dat => x + "otom";
      SF Pl Acc => x + "oty";
      SF Pl Instr => x + "otami";
      SF Pl Loc => x + "otach";
      SF Pl Voc => x + "oty"
    };

    oper mkNTable1074: Str -> SubstForm => Str; --%
    oper mkNTable1074 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ół";
      SF Sg Gen => x + "ołu";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "ół";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ole";
      SF Sg Voc => x + "ole";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1075: Str -> SubstForm => Str; --%
    oper mkNTable1075 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "o";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable1076: Str -> SubstForm => Str; --%
    oper mkNTable1076 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1078: Str -> SubstForm => Str; --%
    oper mkNTable1078 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "cymbał";
      SF Sg Gen => x + "cymbała";
      SF Sg Dat => x + "cymbałowi";
      SF Sg Acc => x + "cymbała";
      SF Sg Instr => x + "cymbałem";
      SF Sg Loc => x + "cymbale";
      SF Sg Voc => x + "cymbale";
      SF Pl Nom => x + "Cymbałowie";
      SF Pl Gen => x + "cymbałów";
      SF Pl Dat => x + "cymbałom";
      SF Pl Acc => x + "cymbałów";
      SF Pl Instr => x + "cymbałami";
      SF Pl Loc => x + "cymbałach";
      SF Pl Voc => x + "Cymbałowie"
    };

    oper mkNTable1079: Str -> SubstForm => Str; --%
    oper mkNTable1079 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "el";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1080: Str -> SubstForm => Str; --%
    oper mkNTable1080 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "tu";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable1081: Str -> SubstForm => Str; --%
    oper mkNTable1081 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "tu";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable1082: Str -> SubstForm => Str; --%
    oper mkNTable1082 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "smo";
      SF Sg Gen => x + "sma";
      SF Sg Dat => x + "smu";
      SF Sg Acc => x + "smo";
      SF Sg Instr => x + "smem";
      SF Sg Loc => x + "śmie";
      SF Sg Voc => x + "smo";
      SF Pl Nom => x + "sma";
      SF Pl Gen => x + "sm";
      SF Pl Dat => x + "smom";
      SF Pl Acc => x + "sma";
      SF Pl Instr => x + "smami";
      SF Pl Loc => x + "smach";
      SF Pl Voc => x + "sma"
    };

    oper mkNTable1083: Str -> SubstForm => Str; --%
    oper mkNTable1083 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ź";
      SF Sg Gen => x + "zi";
      SF Sg Dat => x + "zi";
      SF Sg Acc => x + "ź";
      SF Sg Instr => x + "zią";
      SF Sg Loc => x + "zi";
      SF Sg Voc => x + "zi";
      SF Pl Nom => x + "zie";
      SF Pl Gen => x + "zi";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zie";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zie"
    };

    oper mkNTable1084: Str -> SubstForm => Str; --%
    oper mkNTable1084 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "iu";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1085: Str -> SubstForm => Str; --%
    oper mkNTable1085 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "eść";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "eść";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable1086: Str -> SubstForm => Str; --%
    oper mkNTable1086 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oło";
      SF Sg Gen => x + "oła";
      SF Sg Dat => x + "ołu";
      SF Sg Acc => x + "oło";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ole";
      SF Sg Voc => x + "oło";
      SF Pl Nom => x + "oła";
      SF Pl Gen => x + "ół";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oła";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oła"
    };

    oper mkNTable1087: Str -> SubstForm => Str; --%
    oper mkNTable1087 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "czubek";
      SF Sg Gen => x + "czubka";
      SF Sg Dat => x + "czubkowi";
      SF Sg Acc => x + "czubka";
      SF Sg Instr => x + "czubkiem";
      SF Sg Loc => x + "czubku";
      SF Sg Voc => x + "czubku";
      SF Pl Nom => x + "Czubkowie";
      SF Pl Gen => x + "czubków";
      SF Pl Dat => x + "czubkom";
      SF Pl Acc => x + "czubków";
      SF Pl Instr => x + "czubkami";
      SF Pl Loc => x + "czubkach";
      SF Pl Voc => x + "Czubkowie"
    };

    oper mkNTable1088: Str -> SubstForm => Str; --%
    oper mkNTable1088 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "y";
      SF Sg Instr => x + "ym";
      SF Sg Loc => x + "ym";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1089: Str -> SubstForm => Str; --%
    oper mkNTable1089 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ciec";
      SF Sg Gen => x + "ćca";
      SF Sg Dat => x + "ćcowi";
      SF Sg Acc => x + "ćca";
      SF Sg Instr => x + "ćcem";
      SF Sg Loc => x + "ćcu";
      SF Sg Voc => x + "ćcu";
      SF Pl Nom => x + "ćce";
      SF Pl Gen => x + "ćców";
      SF Pl Dat => x + "ćcom";
      SF Pl Acc => x + "ćce";
      SF Pl Instr => x + "ćcami";
      SF Pl Loc => x + "ćcach";
      SF Pl Voc => x + "ćce"
    };

    oper mkNTable1090: Str -> SubstForm => Str; --%
    oper mkNTable1090 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ciec";
      SF Sg Gen => x + "ćca";
      SF Sg Dat => x + "ćcowi";
      SF Sg Acc => x + "ciec";
      SF Sg Instr => x + "ćcem";
      SF Sg Loc => x + "ćcu";
      SF Sg Voc => x + "ćcu";
      SF Pl Nom => x + "ćce";
      SF Pl Gen => x + "ćców";
      SF Pl Dat => x + "ćcom";
      SF Pl Acc => x + "ćce";
      SF Pl Instr => x + "ćcami";
      SF Pl Loc => x + "ćcach";
      SF Pl Voc => x + "ćce"
    };

    oper mkNTable1091: Str -> SubstForm => Str; --%
    oper mkNTable1091 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "człowiek";
      SF Sg Gen => x + "człowieka";
      SF Sg Dat => x + "człowiekowi";
      SF Sg Acc => x + "człowieka";
      SF Sg Instr => x + "człowiekiem";
      SF Sg Loc => x + "człowieku";
      SF Sg Voc => x + "człowieku";
      SF Pl Nom => x + "ludzie";
      SF Pl Gen => x + "ludzi";
      SF Pl Dat => x + "ludziom";
      SF Pl Acc => x + "ludzi";
      SF Pl Instr => x + "ludźmi";
      SF Pl Loc => x + "ludziach";
      SF Pl Voc => x + "ludzie"
    };

    oper mkNTable1094: Str -> SubstForm => Str; --%
    oper mkNTable1094 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "si";
      SF Sg Dat => x + "si";
      SF Sg Acc => x + "ś";
      SF Sg Instr => x + "sią";
      SF Sg Loc => x + "si";
      SF Sg Voc => x + "ś";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1097: Str -> SubstForm => Str; --%
    oper mkNTable1097 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "ni";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "ńmi";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1098: Str -> SubstForm => Str; --%
    oper mkNTable1098 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1099: Str -> SubstForm => Str; --%
    oper mkNTable1099 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "dekapol";
      SF Sg Gen => x + "Dekapolu";
      SF Sg Dat => x + "Dekapolowi";
      SF Sg Acc => x + "dekapol";
      SF Sg Instr => x + "Dekapolem";
      SF Sg Loc => x + "Dekapolu";
      SF Sg Voc => x + "Dekapolu";
      SF Pl Nom => x + "dekapole";
      SF Pl Gen => x + "dekapoli";
      SF Pl Dat => x + "dekapolom";
      SF Pl Acc => x + "dekapole";
      SF Pl Instr => x + "dekapolami";
      SF Pl Loc => x + "dekapolach";
      SF Pl Voc => x + "dekapole"
    };

    oper mkNTable1100: Str -> SubstForm => Str; --%
    oper mkNTable1100 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "niu";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1101: Str -> SubstForm => Str; --%
    oper mkNTable1101 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "eszcz";
      SF Sg Gen => x + "żdżu";
      SF Sg Dat => x + "żdżowi";
      SF Sg Acc => x + "eszcz";
      SF Sg Instr => x + "żdżem";
      SF Sg Loc => x + "żdżu";
      SF Sg Voc => x + "żdżu";
      SF Pl Nom => x + "żdże";
      SF Pl Gen => x + "żdżów";
      SF Pl Dat => x + "żdżom";
      SF Pl Acc => x + "żdże";
      SF Pl Instr => x + "żdżami";
      SF Pl Loc => x + "żdżach";
      SF Pl Voc => x + "żdże"
    };

    oper mkNTable1102: Str -> SubstForm => Str; --%
    oper mkNTable1102 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "li";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "łów";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "li"
    };

    oper mkNTable1103: Str -> SubstForm => Str; --%
    oper mkNTable1103 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1105: Str -> SubstForm => Str; --%
    oper mkNTable1105 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "obro";
      SF Sg Gen => x + "obra";
      SF Sg Dat => x + "obru";
      SF Sg Acc => x + "obro";
      SF Sg Instr => x + "obrem";
      SF Sg Loc => x + "obru";
      SF Sg Voc => x + "obro";
      SF Pl Nom => x + "obra";
      SF Pl Gen => x + "óbr";
      SF Pl Dat => x + "obrom";
      SF Pl Acc => x + "obra";
      SF Pl Instr => x + "obrami";
      SF Pl Loc => x + "obrach";
      SF Pl Voc => x + "obra"
    };

    oper mkNTable1106: Str -> SubstForm => Str; --%
    oper mkNTable1106 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "azd";
      SF Sg Gen => x + "azdu";
      SF Sg Dat => x + "azdowi";
      SF Sg Acc => x + "azd";
      SF Sg Instr => x + "azdem";
      SF Sg Loc => x + "eździe";
      SF Sg Voc => x + "eździe";
      SF Pl Nom => x + "azdy";
      SF Pl Gen => x + "azdów";
      SF Pl Dat => x + "azdom";
      SF Pl Acc => x + "azdy";
      SF Pl Instr => x + "azdami";
      SF Pl Loc => x + "azdach";
      SF Pl Voc => x + "azdy"
    };

    oper mkNTable1107: Str -> SubstForm => Str; --%
    oper mkNTable1107 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ór";
      SF Sg Gen => x + "ora";
      SF Sg Dat => x + "orowi";
      SF Sg Acc => x + "ora";
      SF Sg Instr => x + "orem";
      SF Sg Loc => x + "orze";
      SF Sg Voc => x + "orze";
      SF Pl Nom => x + "orzy";
      SF Pl Gen => x + "orów";
      SF Pl Dat => x + "orom";
      SF Pl Acc => x + "orów";
      SF Pl Instr => x + "orami";
      SF Pl Loc => x + "orach";
      SF Pl Voc => x + "orzy"
    };

    oper mkNTable1108: Str -> SubstForm => Str; --%
    oper mkNTable1108 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ola";
      SF Sg Gen => x + "oli";
      SF Sg Dat => x + "oli";
      SF Sg Acc => x + "olę";
      SF Sg Instr => x + "olą";
      SF Sg Loc => x + "oli";
      SF Sg Voc => x + "olo";
      SF Pl Nom => x + "ole";
      SF Pl Gen => x + "ól";
      SF Pl Dat => x + "olom";
      SF Pl Acc => x + "ole";
      SF Pl Instr => x + "olami";
      SF Pl Loc => x + "olach";
      SF Pl Voc => x + "ole"
    };

    oper mkNTable1109: Str -> SubstForm => Str; --%
    oper mkNTable1109 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "sł";
      SF Sg Gen => x + "słu";
      SF Sg Dat => x + "słowi";
      SF Sg Acc => x + "sł";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "śle";
      SF Pl Nom => x + "sły";
      SF Pl Gen => x + "słów";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "sły";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "sły"
    };

    oper mkNTable1112: Str -> SubstForm => Str; --%
    oper mkNTable1112 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oga";
      SF Sg Gen => x + "ogi";
      SF Sg Dat => x + "odze";
      SF Sg Acc => x + "ogę";
      SF Sg Instr => x + "ogą";
      SF Sg Loc => x + "odze";
      SF Sg Voc => x + "ogo";
      SF Pl Nom => x + "ogi";
      SF Pl Gen => x + "óg";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogi";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogi"
    };

    oper mkNTable1114: Str -> SubstForm => Str; --%
    oper mkNTable1114 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "ia";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "iów";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1115: Str -> SubstForm => Str; --%
    oper mkNTable1115 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "zd";
      SF Sg Gen => x + "zda";
      SF Sg Dat => x + "zdowi";
      SF Sg Acc => x + "zda";
      SF Sg Instr => x + "zdem";
      SF Sg Loc => x + "ździe";
      SF Sg Voc => x + "ździe";
      SF Pl Nom => x + "zdy";
      SF Pl Gen => x + "zdów";
      SF Pl Dat => x + "zdom";
      SF Pl Acc => x + "zdy";
      SF Pl Instr => x + "zdami";
      SF Pl Loc => x + "zdach";
      SF Pl Voc => x + "zdy"
    };

    oper mkNTable1117: Str -> SubstForm => Str; --%
    oper mkNTable1117 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "em";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "e";
      SF Pl Loc => x + "e";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1118: Str -> SubstForm => Str; --%
    oper mkNTable1118 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ha";
      SF Sg Gen => x + "hy";
      SF Sg Dat => x + "sze";
      SF Sg Acc => x + "hę";
      SF Sg Instr => x + "hą";
      SF Sg Loc => x + "sze";
      SF Sg Voc => x + "ho";
      SF Pl Nom => x + "hy";
      SF Pl Gen => x + "h";
      SF Pl Dat => x + "hom";
      SF Pl Acc => x + "hy";
      SF Pl Instr => x + "hami";
      SF Pl Loc => x + "hach";
      SF Pl Voc => x + "hy"
    };

    oper mkNTable1119: Str -> SubstForm => Str; --%
    oper mkNTable1119 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "duk";
      SF Sg Gen => x + "duka";
      SF Sg Dat => x + "Dukowi";
      SF Sg Acc => x + "duka";
      SF Sg Instr => x + "Dukiem";
      SF Sg Loc => x + "Duku";
      SF Sg Voc => x + "Duku";
      SF Pl Nom => x + "Dukowie";
      SF Pl Gen => x + "Duków";
      SF Pl Dat => x + "dukom";
      SF Pl Acc => x + "Duków";
      SF Pl Instr => x + "dukami";
      SF Pl Loc => x + "dukach";
      SF Pl Voc => x + "Dukowie"
    };

    oper mkNTable1120: Str -> SubstForm => Str; --%
    oper mkNTable1120 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1121: Str -> SubstForm => Str; --%
    oper mkNTable1121 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "niów";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1122: Str -> SubstForm => Str; --%
    oper mkNTable1122 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1123: Str -> SubstForm => Str; --%
    oper mkNTable1123 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "dworaczek";
      SF Sg Gen => x + "dworaczka";
      SF Sg Dat => x + "Dworaczkowi";
      SF Sg Acc => x + "dworaczka";
      SF Sg Instr => x + "Dworaczkiem";
      SF Sg Loc => x + "Dworaczku";
      SF Sg Voc => x + "Dworaczku";
      SF Pl Nom => x + "Dworaczkowie";
      SF Pl Gen => x + "Dworaczków";
      SF Pl Dat => x + "dworaczkom";
      SF Pl Acc => x + "Dworaczków";
      SF Pl Instr => x + "dworaczkami";
      SF Pl Loc => x + "dworaczkach";
      SF Pl Voc => x + "Dworaczkowie"
    };

    oper mkNTable1124: Str -> SubstForm => Str; --%
    oper mkNTable1124 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "zec";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable1125: Str -> SubstForm => Str; --%
    oper mkNTable1125 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable1126: Str -> SubstForm => Str; --%
    oper mkNTable1126 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1127: Str -> SubstForm => Str; --%
    oper mkNTable1127 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1128: Str -> SubstForm => Str; --%
    oper mkNTable1128 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cko";
      SF Sg Gen => x + "cka";
      SF Sg Dat => x + "cku";
      SF Sg Acc => x + "cko";
      SF Sg Instr => x + "ckiem";
      SF Sg Loc => x + "cku";
      SF Sg Voc => x + "cko";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable1129: Str -> SubstForm => Str; --%
    oper mkNTable1129 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieć";
      SF Sg Gen => x + "ciu";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ieć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1130: Str -> SubstForm => Str; --%
    oper mkNTable1130 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ęba";
      SF Sg Dat => x + "ębowi";
      SF Sg Acc => x + "ąb";
      SF Sg Instr => x + "ębem";
      SF Sg Loc => x + "ębie";
      SF Sg Voc => x + "ębie";
      SF Pl Nom => x + "ęby";
      SF Pl Gen => x + "ębów";
      SF Pl Dat => x + "ębom";
      SF Pl Acc => x + "ęby";
      SF Pl Instr => x + "ębami";
      SF Pl Loc => x + "ębach";
      SF Pl Voc => x + "ęby"
    };

    oper mkNTable1131: Str -> SubstForm => Str; --%
    oper mkNTable1131 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "zień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "zień";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1133: Str -> SubstForm => Str; --%
    oper mkNTable1133 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ęba";
      SF Sg Dat => x + "ębowi";
      SF Sg Acc => x + "ęba";
      SF Sg Instr => x + "ębem";
      SF Sg Loc => x + "ębie";
      SF Sg Voc => x + "ębie";
      SF Pl Nom => x + "ęby";
      SF Pl Gen => x + "ębów";
      SF Pl Dat => x + "ębom";
      SF Pl Acc => x + "ęby";
      SF Pl Instr => x + "ębami";
      SF Pl Loc => x + "ębach";
      SF Pl Voc => x + "ęby"
    };

    oper mkNTable1134: Str -> SubstForm => Str; --%
    oper mkNTable1134 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ębu";
      SF Sg Dat => x + "ębowi";
      SF Sg Acc => x + "ąb";
      SF Sg Instr => x + "ębem";
      SF Sg Loc => x + "ębie";
      SF Sg Voc => x + "ębie";
      SF Pl Nom => x + "ęby";
      SF Pl Gen => x + "ębów";
      SF Pl Dat => x + "ębom";
      SF Pl Acc => x + "ęby";
      SF Pl Instr => x + "ębami";
      SF Pl Loc => x + "ębach";
      SF Pl Voc => x + "ęby"
    };

    oper mkNTable1135: Str -> SubstForm => Str; --%
    oper mkNTable1135 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ół";
      SF Sg Gen => x + "oła";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "oła";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ole";
      SF Sg Voc => x + "ole";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1136: Str -> SubstForm => Str; --%
    oper mkNTable1136 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "en";
      SF Sg Gen => x + "nu";
      SF Sg Dat => x + "nowi";
      SF Sg Acc => x + "en";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "ny";
      SF Pl Gen => x + "nów";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "ny";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "ny"
    };

    oper mkNTable1137: Str -> SubstForm => Str; --%
    oper mkNTable1137 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "e";
      SF Sg Dat => x + "e";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "e";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "e";
      SF Pl Dat => x + "e";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "e";
      SF Pl Loc => x + "e";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1138: Str -> SubstForm => Str; --%
    oper mkNTable1138 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1139: Str -> SubstForm => Str; --%
    oper mkNTable1139 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "on";
      SF Sg Gen => x + "onu";
      SF Sg Dat => x + "onowi";
      SF Sg Acc => x + "on";
      SF Sg Instr => x + "onem";
      SF Sg Loc => x + "onie";
      SF Sg Voc => x + "onie";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1140: Str -> SubstForm => Str; --%
    oper mkNTable1140 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "u";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1141: Str -> SubstForm => Str; --%
    oper mkNTable1141 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ier";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable1142: Str -> SubstForm => Str; --%
    oper mkNTable1142 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1143: Str -> SubstForm => Str; --%
    oper mkNTable1143 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Filaret";
      SF Sg Gen => x + "filareta";
      SF Sg Dat => x + "Filaretowi";
      SF Sg Acc => x + "filareta";
      SF Sg Instr => x + "Filaretem";
      SF Sg Loc => x + "filarecie";
      SF Sg Voc => x + "filarecie";
      SF Pl Nom => x + "filareci";
      SF Pl Gen => x + "filaretów";
      SF Pl Dat => x + "filaretom";
      SF Pl Acc => x + "filaretów";
      SF Pl Instr => x + "filaretami";
      SF Pl Loc => x + "filaretach";
      SF Pl Voc => x + "filareci"
    };

    oper mkNTable1144: Str -> SubstForm => Str; --%
    oper mkNTable1144 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ja";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ję";
      SF Sg Instr => x + "ją";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "jo";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "jów";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "jów";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable1145: Str -> SubstForm => Str; --%
    oper mkNTable1145 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ze";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable1146: Str -> SubstForm => Str; --%
    oper mkNTable1146 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ź";
      SF Sg Gen => x + "zia";
      SF Sg Dat => x + "ziowi";
      SF Sg Acc => x + "ź";
      SF Sg Instr => x + "ziem";
      SF Sg Loc => x + "ziu";
      SF Sg Voc => x + "ziu";
      SF Pl Nom => x + "zie";
      SF Pl Gen => x + "ziów";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zie";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zie"
    };

    oper mkNTable1147: Str -> SubstForm => Str; --%
    oper mkNTable1147 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "tu";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "t";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ta";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ta";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ta"
    };

    oper mkNTable1148: Str -> SubstForm => Str; --%
    oper mkNTable1148 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "futura";
      SF Sg Gen => x + "Futury";
      SF Sg Dat => x + "Futurze";
      SF Sg Acc => x + "Futurę";
      SF Sg Instr => x + "Futurą";
      SF Sg Loc => x + "Futurze";
      SF Sg Voc => x + "Futuro";
      SF Pl Nom => x + "Futury";
      SF Pl Gen => x + "Futur";
      SF Pl Dat => x + "futurom";
      SF Pl Acc => x + "Futury";
      SF Pl Instr => x + "futurami";
      SF Pl Loc => x + "futurach";
      SF Pl Voc => x + "Futury"
    };

    oper mkNTable1149: Str -> SubstForm => Str; --%
    oper mkNTable1149 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zda";
      SF Sg Gen => x + "zdy";
      SF Sg Dat => x + "ździe";
      SF Sg Acc => x + "zdę";
      SF Sg Instr => x + "zdą";
      SF Sg Loc => x + "ździe";
      SF Sg Voc => x + "zdo";
      SF Pl Nom => x + "zdowie";
      SF Pl Gen => x + "zdów";
      SF Pl Dat => x + "zdom";
      SF Pl Acc => x + "zdów";
      SF Pl Instr => x + "zdami";
      SF Pl Loc => x + "zdach";
      SF Pl Voc => x + "zdowie"
    };

    oper mkNTable1150: Str -> SubstForm => Str; --%
    oper mkNTable1150 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąź";
      SF Sg Gen => x + "ęzi";
      SF Sg Dat => x + "ęzi";
      SF Sg Acc => x + "ąź";
      SF Sg Instr => x + "ęzią";
      SF Sg Loc => x + "ęzi";
      SF Sg Voc => x + "ęzi";
      SF Pl Nom => x + "ęzie";
      SF Pl Gen => x + "ęzi";
      SF Pl Dat => x + "ęziom";
      SF Pl Acc => x + "ęzie";
      SF Pl Instr => x + "ęźmi";
      SF Pl Loc => x + "ęziach";
      SF Pl Voc => x + "ęzie"
    };

    oper mkNTable1152: Str -> SubstForm => Str; --%
    oper mkNTable1152 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1153: Str -> SubstForm => Str; --%
    oper mkNTable1153 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iez";
      SF Sg Gen => x + "za";
      SF Sg Dat => x + "zowi";
      SF Sg Acc => x + "za";
      SF Sg Instr => x + "zem";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "zów";
      SF Pl Dat => x + "zom";
      SF Pl Acc => x + "zy";
      SF Pl Instr => x + "zami";
      SF Pl Loc => x + "zach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable1154: Str -> SubstForm => Str; --%
    oper mkNTable1154 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zło";
      SF Sg Gen => x + "zła";
      SF Sg Dat => x + "złu";
      SF Sg Acc => x + "zło";
      SF Sg Instr => x + "złem";
      SF Sg Loc => x + "źle";
      SF Sg Voc => x + "zło";
      SF Pl Nom => x + "zła";
      SF Pl Gen => x + "zł";
      SF Pl Dat => x + "złom";
      SF Pl Acc => x + "zła";
      SF Pl Instr => x + "złami";
      SF Pl Loc => x + "złach";
      SF Pl Voc => x + "zła"
    };

    oper mkNTable1155: Str -> SubstForm => Str; --%
    oper mkNTable1155 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "azdo";
      SF Sg Gen => x + "azda";
      SF Sg Dat => x + "azdu";
      SF Sg Acc => x + "azdo";
      SF Sg Instr => x + "azdem";
      SF Sg Loc => x + "eździe";
      SF Sg Voc => x + "azdo";
      SF Pl Nom => x + "azda";
      SF Pl Gen => x + "azd";
      SF Pl Dat => x + "azdom";
      SF Pl Acc => x + "azda";
      SF Pl Instr => x + "azdami";
      SF Pl Loc => x + "azdach";
      SF Pl Voc => x + "azda"
    };

    oper mkNTable1156: Str -> SubstForm => Str; --%
    oper mkNTable1156 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ój";
      SF Sg Gen => x + "oja";
      SF Sg Dat => x + "ojowi";
      SF Sg Acc => x + "oja";
      SF Sg Instr => x + "ojem";
      SF Sg Loc => x + "oju";
      SF Sg Voc => x + "oju";
      SF Pl Nom => x + "oje";
      SF Pl Gen => x + "ojów";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "ojów";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "oje"
    };

    oper mkNTable1157: Str -> SubstForm => Str; --%
    oper mkNTable1157 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ź";
      SF Sg Gen => x + "zi";
      SF Sg Dat => x + "zi";
      SF Sg Acc => x + "ź";
      SF Sg Instr => x + "zią";
      SF Sg Loc => x + "zi";
      SF Sg Voc => x + "zi";
      SF Pl Nom => x + "zi";
      SF Pl Gen => x + "zi";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zi";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zi"
    };

    oper mkNTable1158: Str -> SubstForm => Str; --%
    oper mkNTable1158 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ębia";
      SF Sg Dat => x + "ębiowi";
      SF Sg Acc => x + "ębia";
      SF Sg Instr => x + "ębiem";
      SF Sg Loc => x + "ębiu";
      SF Sg Voc => x + "ębiu";
      SF Pl Nom => x + "ębie";
      SF Pl Gen => x + "ębi";
      SF Pl Dat => x + "ębiom";
      SF Pl Acc => x + "ębie";
      SF Pl Instr => x + "ębiami";
      SF Pl Loc => x + "ębiach";
      SF Pl Voc => x + "ębie"
    };

    oper mkNTable1159: Str -> SubstForm => Str; --%
    oper mkNTable1159 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1161: Str -> SubstForm => Str; --%
    oper mkNTable1161 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ra";
      SF Sg Gen => x + "ry";
      SF Sg Dat => x + "rze";
      SF Sg Acc => x + "rę";
      SF Sg Instr => x + "rą";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "ro";
      SF Pl Nom => x + "ry";
      SF Pl Gen => x + "ier";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "ry";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "ry"
    };

    oper mkNTable1162: Str -> SubstForm => Str; --%
    oper mkNTable1162 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Grabka";
      SF Sg Gen => x + "grabki";
      SF Sg Dat => x + "Grabce";
      SF Sg Acc => x + "Grabkę";
      SF Sg Instr => x + "Grabką";
      SF Sg Loc => x + "Grabce";
      SF Sg Voc => x + "Grabko";
      SF Pl Nom => x + "grabki";
      SF Pl Gen => x + "grabek";
      SF Pl Dat => x + "grabkom";
      SF Pl Acc => x + "grabki";
      SF Pl Instr => x + "grabkami";
      SF Pl Loc => x + "grabkach";
      SF Pl Voc => x + "grabki"
    };

    oper mkNTable1163: Str -> SubstForm => Str; --%
    oper mkNTable1163 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "odza";
      SF Sg Gen => x + "odzy";
      SF Sg Dat => x + "odzy";
      SF Sg Acc => x + "odzę";
      SF Sg Instr => x + "odzą";
      SF Sg Loc => x + "odzy";
      SF Sg Voc => x + "odzo";
      SF Pl Nom => x + "odze";
      SF Pl Gen => x + "ódz";
      SF Pl Dat => x + "odzom";
      SF Pl Acc => x + "odze";
      SF Pl Instr => x + "odzami";
      SF Pl Loc => x + "odzach";
      SF Pl Voc => x + "odze"
    };

    oper mkNTable1165: Str -> SubstForm => Str; --%
    oper mkNTable1165 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "oźba";
      SF Sg Gen => x + "oźby";
      SF Sg Dat => x + "oźbie";
      SF Sg Acc => x + "oźbę";
      SF Sg Instr => x + "oźbą";
      SF Sg Loc => x + "oźbie";
      SF Sg Voc => x + "oźbo";
      SF Pl Nom => x + "oźby";
      SF Pl Gen => x + "óźb";
      SF Pl Dat => x + "oźbom";
      SF Pl Acc => x + "oźby";
      SF Pl Instr => x + "oźbami";
      SF Pl Loc => x + "oźbach";
      SF Pl Voc => x + "oźby"
    };

    oper mkNTable1166: Str -> SubstForm => Str; --%
    oper mkNTable1166 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "zień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "zień";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1167: Str -> SubstForm => Str; --%
    oper mkNTable1167 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zeł";
      SF Sg Gen => x + "zła";
      SF Sg Dat => x + "złowi";
      SF Sg Acc => x + "zeł";
      SF Sg Instr => x + "złem";
      SF Sg Loc => x + "źle";
      SF Sg Voc => x + "źle";
      SF Pl Nom => x + "zły";
      SF Pl Gen => x + "złów";
      SF Pl Dat => x + "złom";
      SF Pl Acc => x + "zły";
      SF Pl Instr => x + "złami";
      SF Pl Loc => x + "złach";
      SF Pl Voc => x + "zły"
    };

    oper mkNTable1168: Str -> SubstForm => Str; --%
    oper mkNTable1168 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ód";
      SF Sg Gen => x + "oda";
      SF Sg Dat => x + "odowi";
      SF Sg Acc => x + "oda";
      SF Sg Instr => x + "odem";
      SF Sg Loc => x + "odzie";
      SF Sg Voc => x + "odzie";
      SF Pl Nom => x + "ody";
      SF Pl Gen => x + "odów";
      SF Pl Dat => x + "odom";
      SF Pl Acc => x + "ody";
      SF Pl Instr => x + "odami";
      SF Pl Loc => x + "odach";
      SF Pl Voc => x + "ody"
    };

    oper mkNTable1170: Str -> SubstForm => Str; --%
    oper mkNTable1170 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ódź";
      SF Sg Gen => x + "odzi";
      SF Sg Dat => x + "odzi";
      SF Sg Acc => x + "ódź";
      SF Sg Instr => x + "odzią";
      SF Sg Loc => x + "odzi";
      SF Sg Voc => x + "odzi";
      SF Pl Nom => x + "odzie";
      SF Pl Gen => x + "odzi";
      SF Pl Dat => x + "odziom";
      SF Pl Acc => x + "odzie";
      SF Pl Instr => x + "odziami";
      SF Pl Loc => x + "odziach";
      SF Pl Voc => x + "odzie"
    };

    oper mkNTable1173: Str -> SubstForm => Str; --%
    oper mkNTable1173 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "azda";
      SF Sg Gen => x + "azdy";
      SF Sg Dat => x + "eździe";
      SF Sg Acc => x + "azdę";
      SF Sg Instr => x + "azdą";
      SF Sg Loc => x + "eździe";
      SF Sg Voc => x + "azdo";
      SF Pl Nom => x + "azdy";
      SF Pl Gen => x + "azd";
      SF Pl Dat => x + "azdom";
      SF Pl Acc => x + "azdy";
      SF Pl Instr => x + "azdami";
      SF Pl Loc => x + "azdach";
      SF Pl Voc => x + "azdy"
    };

    oper mkNTable1174: Str -> SubstForm => Str; --%
    oper mkNTable1174 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "zd";
      SF Sg Gen => x + "zdu";
      SF Sg Dat => x + "zdowi";
      SF Sg Acc => x + "zd";
      SF Sg Instr => x + "zdem";
      SF Sg Loc => x + "ździe";
      SF Sg Voc => x + "ździe";
      SF Pl Nom => x + "zdy";
      SF Pl Gen => x + "zdów";
      SF Pl Dat => x + "zdom";
      SF Pl Acc => x + "zdy";
      SF Pl Instr => x + "zdami";
      SF Pl Loc => x + "zdach";
      SF Pl Voc => x + "zdy"
    };

    oper mkNTable1175: Str -> SubstForm => Str; --%
    oper mkNTable1175 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "óźdź";
      SF Sg Gen => x + "oździa";
      SF Sg Dat => x + "oździowi";
      SF Sg Acc => x + "oździa";
      SF Sg Instr => x + "oździem";
      SF Sg Loc => x + "oździu";
      SF Sg Voc => x + "oździu";
      SF Pl Nom => x + "oździe";
      SF Pl Gen => x + "oździ";
      SF Pl Dat => x + "oździom";
      SF Pl Acc => x + "oździe";
      SF Pl Instr => x + "oździami";
      SF Pl Loc => x + "oździach";
      SF Pl Voc => x + "oździe"
    };

    oper mkNTable1176: Str -> SubstForm => Str; --%
    oper mkNTable1176 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "óźdź";
      SF Sg Gen => x + "oździa";
      SF Sg Dat => x + "oździowi";
      SF Sg Acc => x + "óźdź";
      SF Sg Instr => x + "oździem";
      SF Sg Loc => x + "oździu";
      SF Sg Voc => x + "oździu";
      SF Pl Nom => x + "oździe";
      SF Pl Gen => x + "oździ";
      SF Pl Dat => x + "oździom";
      SF Pl Acc => x + "oździe";
      SF Pl Instr => x + "oźdźmi";
      SF Pl Loc => x + "oździach";
      SF Pl Voc => x + "oździe"
    };

    oper mkNTable1177: Str -> SubstForm => Str; --%
    oper mkNTable1177 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "za";
      SF Sg Gen => x + "zy";
      SF Sg Dat => x + "zie";
      SF Sg Acc => x + "zę";
      SF Sg Instr => x + "zą";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zo";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "iez";
      SF Pl Dat => x + "zom";
      SF Pl Acc => x + "zy";
      SF Pl Instr => x + "zami";
      SF Pl Loc => x + "zach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable1178: Str -> SubstForm => Str; --%
    oper mkNTable1178 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zło";
      SF Sg Gen => x + "zła";
      SF Sg Dat => x + "złu";
      SF Sg Acc => x + "zło";
      SF Sg Instr => x + "złem";
      SF Sg Loc => x + "źle";
      SF Sg Voc => x + "zło";
      SF Pl Nom => x + "zła";
      SF Pl Gen => x + "zeł";
      SF Pl Dat => x + "złom";
      SF Pl Acc => x + "zła";
      SF Pl Instr => x + "złami";
      SF Pl Loc => x + "złach";
      SF Pl Voc => x + "zła"
    };

    oper mkNTable1179: Str -> SubstForm => Str; --%
    oper mkNTable1179 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owia";
      SF Sg Dat => x + "owiowi";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owiem";
      SF Sg Loc => x + "owiu";
      SF Sg Voc => x + "owiu";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "owi";
      SF Pl Dat => x + "owiom";
      SF Pl Acc => x + "owie";
      SF Pl Instr => x + "owiami";
      SF Pl Loc => x + "owiach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1180: Str -> SubstForm => Str; --%
    oper mkNTable1180 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Głuch";
      SF Sg Gen => x + "głucha";
      SF Sg Dat => x + "Głuchowi";
      SF Sg Acc => x + "głucha";
      SF Sg Instr => x + "Głuchem";
      SF Sg Loc => x + "Głuchu";
      SF Sg Voc => x + "Głuchu";
      SF Pl Nom => x + "Głuchowie";
      SF Pl Gen => x + "Głuchów";
      SF Pl Dat => x + "Głuchom";
      SF Pl Acc => x + "Głuchów";
      SF Pl Instr => x + "Głuchami";
      SF Pl Loc => x + "Głuchach";
      SF Pl Voc => x + "Głuchowie"
    };

    oper mkNTable1181: Str -> SubstForm => Str; --%
    oper mkNTable1181 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "ej";
      SF Sg Dat => x + "ej";
      SF Sg Acc => x + "ą";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ej";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ch";
      SF Pl Dat => x + "m";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "mi";
      SF Pl Loc => x + "ch";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1182: Str -> SubstForm => Str; --%
    oper mkNTable1182 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ębi";
      SF Sg Dat => x + "ębi";
      SF Sg Acc => x + "ąb";
      SF Sg Instr => x + "ębią";
      SF Sg Loc => x + "ębi";
      SF Sg Voc => x + "ębi";
      SF Pl Nom => x + "ębie";
      SF Pl Gen => x + "ębi";
      SF Pl Dat => x + "ębiom";
      SF Pl Acc => x + "ębie";
      SF Pl Instr => x + "ębiami";
      SF Pl Loc => x + "ębiach";
      SF Pl Voc => x + "ębie"
    };

    oper mkNTable1183: Str -> SubstForm => Str; --%
    oper mkNTable1183 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "si";
      SF Sg Dat => x + "si";
      SF Sg Acc => x + "ś";
      SF Sg Instr => x + "sią";
      SF Sg Loc => x + "si";
      SF Sg Voc => x + "si";
      SF Pl Nom => x + "si";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "si";
      SF Pl Instr => x + "śmi";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "si"
    };

    oper mkNTable1184: Str -> SubstForm => Str; --%
    oper mkNTable1184 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "góralczyk";
      SF Sg Gen => x + "góralczyka";
      SF Sg Dat => x + "góralczykowi";
      SF Sg Acc => x + "góralczyka";
      SF Sg Instr => x + "góralczykiem";
      SF Sg Loc => x + "góralczyku";
      SF Sg Voc => x + "góralczyku";
      SF Pl Nom => x + "Góralczykowie";
      SF Pl Gen => x + "góralczyków";
      SF Pl Dat => x + "góralczykom";
      SF Pl Acc => x + "góralczyków";
      SF Pl Instr => x + "góralczykami";
      SF Pl Loc => x + "góralczykach";
      SF Pl Voc => x + "Góralczykowie"
    };

    oper mkNTable1185: Str -> SubstForm => Str; --%
    oper mkNTable1185 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "haraburda";
      SF Sg Gen => x + "haraburdy";
      SF Sg Dat => x + "haraburdzie";
      SF Sg Acc => x + "haraburdę";
      SF Sg Instr => x + "haraburdą";
      SF Sg Loc => x + "haraburdzie";
      SF Sg Voc => x + "haraburdo";
      SF Pl Nom => x + "Haraburdowie";
      SF Pl Gen => x + "haraburdów";
      SF Pl Dat => x + "haraburdom";
      SF Pl Acc => x + "haraburdów";
      SF Pl Instr => x + "haraburdami";
      SF Pl Loc => x + "haraburdach";
      SF Pl Voc => x + "Haraburdowie"
    };

    oper mkNTable1186: Str -> SubstForm => Str; --%
    oper mkNTable1186 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "huczek";
      SF Sg Gen => x + "huczka";
      SF Sg Dat => x + "huczkowi";
      SF Sg Acc => x + "huczka";
      SF Sg Instr => x + "huczkiem";
      SF Sg Loc => x + "huczku";
      SF Sg Voc => x + "huczku";
      SF Pl Nom => x + "Huczkowie";
      SF Pl Gen => x + "huczków";
      SF Pl Dat => x + "huczkom";
      SF Pl Acc => x + "huczków";
      SF Pl Instr => x + "huczkami";
      SF Pl Loc => x + "huczkach";
      SF Pl Voc => x + "Huczkowie"
    };

    oper mkNTable1187: Str -> SubstForm => Str; --%
    oper mkNTable1187 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1188: Str -> SubstForm => Str; --%
    oper mkNTable1188 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "lów";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1189: Str -> SubstForm => Str; --%
    oper mkNTable1189 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ól";
      SF Sg Gen => x + "oli";
      SF Sg Dat => x + "oli";
      SF Sg Acc => x + "ól";
      SF Sg Instr => x + "olą";
      SF Sg Loc => x + "oli";
      SF Sg Voc => x + "oli";
      SF Pl Nom => x + "ole";
      SF Pl Gen => x + "oli";
      SF Pl Dat => x + "olom";
      SF Pl Acc => x + "ole";
      SF Pl Instr => x + "olami";
      SF Pl Loc => x + "olach";
      SF Pl Voc => x + "ole"
    };

    oper mkNTable1191: Str -> SubstForm => Str; --%
    oper mkNTable1191 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "igrek";
      SF Sg Gen => x + "igreka";
      SF Sg Dat => x + "igrekowi";
      SF Sg Acc => x + "igreka";
      SF Sg Instr => x + "igrekiem";
      SF Sg Loc => x + "igreku";
      SF Sg Voc => x + "igreku";
      SF Pl Nom => x + "Igrekowie";
      SF Pl Gen => x + "igreków";
      SF Pl Dat => x + "igrekom";
      SF Pl Acc => x + "igreków";
      SF Pl Instr => x + "igrekami";
      SF Pl Loc => x + "igrekach";
      SF Pl Voc => x + "Igrekowie"
    };

    oper mkNTable1193: Str -> SubstForm => Str; --%
    oper mkNTable1193 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iks";
      SF Sg Gen => x + "iksa";
      SF Sg Dat => x + "iksowi";
      SF Sg Acc => x + "iksa";
      SF Sg Instr => x + "iksem";
      SF Sg Loc => x + "iksie";
      SF Sg Voc => x + "iksie";
      SF Pl Nom => x + "Iksowie";
      SF Pl Gen => x + "iksów";
      SF Pl Dat => x + "iksom";
      SF Pl Acc => x + "iksów";
      SF Pl Instr => x + "iksami";
      SF Pl Loc => x + "iksach";
      SF Pl Voc => x + "Iksowie"
    };

    oper mkNTable1196: Str -> SubstForm => Str; --%
    oper mkNTable1196 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "co";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cu";
      SF Sg Acc => x + "co";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "co";
      SF Pl Nom => x + "ca";
      SF Pl Gen => x + "ec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ca";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ca"
    };

    oper mkNTable1197: Str -> SubstForm => Str; --%
    oper mkNTable1197 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "jarek";
      SF Sg Gen => x + "jarka";
      SF Sg Dat => x + "Jarkowi";
      SF Sg Acc => x + "jarek";
      SF Sg Instr => x + "Jarkiem";
      SF Sg Loc => x + "Jarku";
      SF Sg Voc => x + "Jarku";
      SF Pl Nom => x + "jarki";
      SF Pl Gen => x + "Jarków";
      SF Pl Dat => x + "jarkom";
      SF Pl Acc => x + "jarki";
      SF Pl Instr => x + "jarkami";
      SF Pl Loc => x + "jarkach";
      SF Pl Voc => x + "jarki"
    };

    oper mkNTable1198: Str -> SubstForm => Str; --%
    oper mkNTable1198 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąb";
      SF Sg Gen => x + "ębu";
      SF Sg Dat => x + "ębowi";
      SF Sg Acc => x + "ąb";
      SF Sg Instr => x + "ębiem";
      SF Sg Loc => x + "ębiu";
      SF Sg Voc => x + "ębiu";
      SF Pl Nom => x + "ęby";
      SF Pl Gen => x + "ębów";
      SF Pl Dat => x + "ębom";
      SF Pl Acc => x + "ęby";
      SF Pl Instr => x + "ębiami";
      SF Pl Loc => x + "ębiach";
      SF Pl Voc => x + "ęby"
    };

    oper mkNTable1199: Str -> SubstForm => Str; --%
    oper mkNTable1199 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "siek";
      SF Sg Gen => x + "śka";
      SF Sg Dat => x + "śkowi";
      SF Sg Acc => x + "siek";
      SF Sg Instr => x + "śkiem";
      SF Sg Loc => x + "śku";
      SF Sg Voc => x + "śku";
      SF Pl Nom => x + "śki";
      SF Pl Gen => x + "śków";
      SF Pl Dat => x + "śkom";
      SF Pl Acc => x + "śki";
      SF Pl Instr => x + "śkami";
      SF Pl Loc => x + "śkach";
      SF Pl Voc => x + "śki"
    };

    oper mkNTable1200: Str -> SubstForm => Str; --%
    oper mkNTable1200 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ź";
      SF Sg Gen => x + "zia";
      SF Sg Dat => x + "ziowi";
      SF Sg Acc => x + "zia";
      SF Sg Instr => x + "ziem";
      SF Sg Loc => x + "ziu";
      SF Sg Voc => x + "ziu";
      SF Pl Nom => x + "zie";
      SF Pl Gen => x + "zi";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zie";
      SF Pl Instr => x + "ziami";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zie"
    };

    oper mkNTable1201: Str -> SubstForm => Str; --%
    oper mkNTable1201 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "iu";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "iów";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1202: Str -> SubstForm => Str; --%
    oper mkNTable1202 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "ni";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1203: Str -> SubstForm => Str; --%
    oper mkNTable1203 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ziec";
      SF Sg Gen => x + "źca";
      SF Sg Dat => x + "źcowi";
      SF Sg Acc => x + "źca";
      SF Sg Instr => x + "źcem";
      SF Sg Loc => x + "źcu";
      SF Sg Voc => x + "źcze";
      SF Pl Nom => x + "źcy";
      SF Pl Gen => x + "źców";
      SF Pl Dat => x + "źcom";
      SF Pl Acc => x + "źców";
      SF Pl Instr => x + "źcami";
      SF Pl Loc => x + "źcach";
      SF Pl Voc => x + "źcy"
    };

    oper mkNTable1204: Str -> SubstForm => Str; --%
    oper mkNTable1204 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ya";
      SF Sg Dat => x + "yowi";
      SF Sg Acc => x + "ya";
      SF Sg Instr => x + "yem";
      SF Sg Loc => x + "yu";
      SF Sg Voc => x + "yu";
      SF Pl Nom => x + "ye";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "yom";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "yami";
      SF Pl Loc => x + "yach";
      SF Pl Voc => x + "ye"
    };

    oper mkNTable1205: Str -> SubstForm => Str; --%
    oper mkNTable1205 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "ły";
      SF Sg Dat => x + "le";
      SF Sg Acc => x + "łę";
      SF Sg Instr => x + "łą";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "eł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1206: Str -> SubstForm => Str; --%
    oper mkNTable1206 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Kalita";
      SF Sg Gen => x + "kality";
      SF Sg Dat => x + "kalicie";
      SF Sg Acc => x + "Kalitę";
      SF Sg Instr => x + "Kalitą";
      SF Sg Loc => x + "kalicie";
      SF Sg Voc => x + "Kalito";
      SF Pl Nom => x + "kality";
      SF Pl Gen => x + "kalit";
      SF Pl Dat => x + "kalitom";
      SF Pl Acc => x + "kality";
      SF Pl Instr => x + "kalitami";
      SF Pl Loc => x + "kalitach";
      SF Pl Voc => x + "kality"
    };

    oper mkNTable1207: Str -> SubstForm => Str; --%
    oper mkNTable1207 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "ły";
      SF Sg Dat => x + "le";
      SF Sg Acc => x + "łę";
      SF Sg Instr => x + "łą";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "li";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "łów";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "li"
    };

    oper mkNTable1208: Str -> SubstForm => Str; --%
    oper mkNTable1208 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kanar";
      SF Sg Gen => x + "kanara";
      SF Sg Dat => x + "kanarowi";
      SF Sg Acc => x + "kanara";
      SF Sg Instr => x + "kanarem";
      SF Sg Loc => x + "kanarze";
      SF Sg Voc => x + "kanarze";
      SF Pl Nom => x + "Kanarowie";
      SF Pl Gen => x + "kanarów";
      SF Pl Dat => x + "kanarom";
      SF Pl Acc => x + "kanarów";
      SF Pl Instr => x + "kanarami";
      SF Pl Loc => x + "kanarach";
      SF Pl Voc => x + "Kanarowie"
    };

    oper mkNTable1209: Str -> SubstForm => Str; --%
    oper mkNTable1209 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1210: Str -> SubstForm => Str; --%
    oper mkNTable1210 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "eć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1211: Str -> SubstForm => Str; --%
    oper mkNTable1211 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "sia";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1212: Str -> SubstForm => Str; --%
    oper mkNTable1212 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ma";
      SF Sg Gen => x + "my";
      SF Sg Dat => x + "mie";
      SF Sg Acc => x + "mę";
      SF Sg Instr => x + "mą";
      SF Sg Loc => x + "mie";
      SF Sg Voc => x + "mo";
      SF Pl Nom => x + "my";
      SF Pl Gen => x + "em";
      SF Pl Dat => x + "mom";
      SF Pl Acc => x + "my";
      SF Pl Instr => x + "mami";
      SF Pl Loc => x + "mach";
      SF Pl Voc => x + "my"
    };

    oper mkNTable1213: Str -> SubstForm => Str; --%
    oper mkNTable1213 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zeł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "łowie";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "łów";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "łowie"
    };

    oper mkNTable1214: Str -> SubstForm => Str; --%
    oper mkNTable1214 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zeł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1215: Str -> SubstForm => Str; --%
    oper mkNTable1215 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "lu";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "el";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1216: Str -> SubstForm => Str; --%
    oper mkNTable1216 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iep";
      SF Sg Gen => x + "pa";
      SF Sg Dat => x + "powi";
      SF Sg Acc => x + "iep";
      SF Sg Instr => x + "pem";
      SF Sg Loc => x + "pie";
      SF Sg Voc => x + "pie";
      SF Pl Nom => x + "py";
      SF Pl Gen => x + "pów";
      SF Pl Dat => x + "pom";
      SF Pl Acc => x + "py";
      SF Pl Instr => x + "pami";
      SF Pl Loc => x + "pach";
      SF Pl Voc => x + "py"
    };

    oper mkNTable1218: Str -> SubstForm => Str; --%
    oper mkNTable1218 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1219: Str -> SubstForm => Str; --%
    oper mkNTable1219 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ieł";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1220: Str -> SubstForm => Str; --%
    oper mkNTable1220 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zno";
      SF Sg Gen => x + "zna";
      SF Sg Dat => x + "znu";
      SF Sg Acc => x + "zno";
      SF Sg Instr => x + "znem";
      SF Sg Loc => x + "źnie";
      SF Sg Voc => x + "zno";
      SF Pl Nom => x + "zna";
      SF Pl Gen => x + "zn";
      SF Pl Dat => x + "znom";
      SF Pl Acc => x + "zna";
      SF Pl Instr => x + "znami";
      SF Pl Loc => x + "znach";
      SF Pl Voc => x + "zna"
    };

    oper mkNTable1221: Str -> SubstForm => Str; --%
    oper mkNTable1221 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1222: Str -> SubstForm => Str; --%
    oper mkNTable1222 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1223: Str -> SubstForm => Str; --%
    oper mkNTable1223 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1224: Str -> SubstForm => Str; --%
    oper mkNTable1224 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ieć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1225: Str -> SubstForm => Str; --%
    oper mkNTable1225 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "cioł";
      SF Sg Gen => x + "tła";
      SF Sg Dat => x + "tłowi";
      SF Sg Acc => x + "cioł";
      SF Sg Instr => x + "tłem";
      SF Sg Loc => x + "tle";
      SF Sg Voc => x + "tle";
      SF Pl Nom => x + "tły";
      SF Pl Gen => x + "tłów";
      SF Pl Dat => x + "tłom";
      SF Pl Acc => x + "tły";
      SF Pl Instr => x + "tłami";
      SF Pl Loc => x + "tłach";
      SF Pl Voc => x + "tły"
    };

    oper mkNTable1226: Str -> SubstForm => Str; --%
    oper mkNTable1226 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kogut";
      SF Sg Gen => x + "koguta";
      SF Sg Dat => x + "kogutowi";
      SF Sg Acc => x + "koguta";
      SF Sg Instr => x + "kogutem";
      SF Sg Loc => x + "kogucie";
      SF Sg Voc => x + "kogucie";
      SF Pl Nom => x + "Kogutowie";
      SF Pl Gen => x + "kogutów";
      SF Pl Dat => x + "kogutom";
      SF Pl Acc => x + "kogutów";
      SF Pl Instr => x + "kogutami";
      SF Pl Loc => x + "kogutach";
      SF Pl Voc => x + "Kogutowie"
    };

    oper mkNTable1227: Str -> SubstForm => Str; --%
    oper mkNTable1227 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kokot";
      SF Sg Gen => x + "kokota";
      SF Sg Dat => x + "Kokotowi";
      SF Sg Acc => x + "kokota";
      SF Sg Instr => x + "Kokotem";
      SF Sg Loc => x + "kokocie";
      SF Sg Voc => x + "kokocie";
      SF Pl Nom => x + "kokoty";
      SF Pl Gen => x + "Kokotów";
      SF Pl Dat => x + "kokotom";
      SF Pl Acc => x + "kokoty";
      SF Pl Instr => x + "kokotami";
      SF Pl Loc => x + "kokotach";
      SF Pl Voc => x + "kokoty"
    };

    oper mkNTable1228: Str -> SubstForm => Str; --%
    oper mkNTable1228 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owowi";
      SF Sg Acc => x + "owa";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "owów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable1229: Str -> SubstForm => Str; --%
    oper mkNTable1229 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ga";
      SF Sg Gen => x + "gi";
      SF Sg Dat => x + "dze";
      SF Sg Acc => x + "gę";
      SF Sg Instr => x + "gą";
      SF Sg Loc => x + "dze";
      SF Sg Voc => x + "go";
      SF Pl Nom => x + "dzy";
      SF Pl Gen => x + "gów";
      SF Pl Dat => x + "gom";
      SF Pl Acc => x + "gów";
      SF Pl Instr => x + "gami";
      SF Pl Loc => x + "gach";
      SF Pl Voc => x + "dzy"
    };

    oper mkNTable1230: Str -> SubstForm => Str; --%
    oper mkNTable1230 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "j";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "j";
      SF Sg Instr => x + "ją";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "je";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable1232: Str -> SubstForm => Str; --%
    oper mkNTable1232 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Koleśnik";
      SF Sg Gen => x + "Koleśnika";
      SF Sg Dat => x + "Koleśnikowi";
      SF Sg Acc => x + "Koleśnika";
      SF Sg Instr => x + "Koleśnikiem";
      SF Sg Loc => x + "Koleśniku";
      SF Sg Voc => x + "Koleśniku";
      SF Pl Nom => x + "koleśnicy";
      SF Pl Gen => x + "Koleśników";
      SF Pl Dat => x + "Koleśnikom";
      SF Pl Acc => x + "Koleśników";
      SF Pl Instr => x + "Koleśnikami";
      SF Pl Loc => x + "Koleśnikach";
      SF Pl Voc => x + "koleśnicy"
    };

    oper mkNTable1233: Str -> SubstForm => Str; --%
    oper mkNTable1233 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ew";
      SF Sg Gen => x + "wi";
      SF Sg Dat => x + "wi";
      SF Sg Acc => x + "ew";
      SF Sg Instr => x + "wią";
      SF Sg Loc => x + "wi";
      SF Sg Voc => x + "wi";
      SF Pl Nom => x + "wie";
      SF Pl Gen => x + "wi";
      SF Pl Dat => x + "wiom";
      SF Pl Acc => x + "wie";
      SF Pl Instr => x + "wiami";
      SF Pl Loc => x + "wiach";
      SF Pl Voc => x + "wie"
    };

    oper mkNTable1234: Str -> SubstForm => Str; --%
    oper mkNTable1234 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "konik";
      SF Sg Gen => x + "konika";
      SF Sg Dat => x + "konikowi";
      SF Sg Acc => x + "konika";
      SF Sg Instr => x + "konikiem";
      SF Sg Loc => x + "koniku";
      SF Sg Voc => x + "koniku";
      SF Pl Nom => x + "Konikowie";
      SF Pl Gen => x + "koników";
      SF Pl Dat => x + "konikom";
      SF Pl Acc => x + "koników";
      SF Pl Instr => x + "konikami";
      SF Pl Loc => x + "konikach";
      SF Pl Voc => x + "Konikowie"
    };

    oper mkNTable1235: Str -> SubstForm => Str; --%
    oper mkNTable1235 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kopa";
      SF Sg Gen => x + "kopy";
      SF Sg Dat => x + "kopie";
      SF Sg Acc => x + "Kopę";
      SF Sg Instr => x + "Kopą";
      SF Sg Loc => x + "kopie";
      SF Sg Voc => x + "Kopo";
      SF Pl Nom => x + "kopy";
      SF Pl Gen => x + "kop";
      SF Pl Dat => x + "kopom";
      SF Pl Acc => x + "kopy";
      SF Pl Instr => x + "kopami";
      SF Pl Loc => x + "kopach";
      SF Pl Voc => x + "kopy"
    };

    oper mkNTable1236: Str -> SubstForm => Str; --%
    oper mkNTable1236 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "ciu";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "eć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1237: Str -> SubstForm => Str; --%
    oper mkNTable1237 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "iów";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1238: Str -> SubstForm => Str; --%
    oper mkNTable1238 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "kot";
      SF Sg Gen => x + "kota";
      SF Sg Dat => x + "kotu";
      SF Sg Acc => x + "kota";
      SF Sg Instr => x + "kotem";
      SF Sg Loc => x + "kocie";
      SF Sg Voc => x + "kocie";
      SF Pl Nom => x + "Kotowie";
      SF Pl Gen => x + "kotów";
      SF Pl Dat => x + "kotom";
      SF Pl Acc => x + "kotów";
      SF Pl Instr => x + "kotami";
      SF Pl Loc => x + "kotach";
      SF Pl Voc => x + "Kotowie"
    };

    oper mkNTable1239: Str -> SubstForm => Str; --%
    oper mkNTable1239 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Kozieł";
      SF Sg Gen => x + "kozła";
      SF Sg Dat => x + "Kozłowi";
      SF Sg Acc => x + "kozła";
      SF Sg Instr => x + "kozłem";
      SF Sg Loc => x + "koźle";
      SF Sg Voc => x + "koźle";
      SF Pl Nom => x + "kozły";
      SF Pl Gen => x + "kozłów";
      SF Pl Dat => x + "kozłom";
      SF Pl Acc => x + "kozły";
      SF Pl Instr => x + "kozłami";
      SF Pl Loc => x + "kozłach";
      SF Pl Voc => x + "kozły"
    };

    oper mkNTable1240: Str -> SubstForm => Str; --%
    oper mkNTable1240 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kozioł";
      SF Sg Gen => x + "kozła";
      SF Sg Dat => x + "Kozłowi";
      SF Sg Acc => x + "kozła";
      SF Sg Instr => x + "kozłem";
      SF Sg Loc => x + "koźle";
      SF Sg Voc => x + "koźle";
      SF Pl Nom => x + "kozły";
      SF Pl Gen => x + "kozłów";
      SF Pl Dat => x + "kozłom";
      SF Pl Acc => x + "kozły";
      SF Pl Instr => x + "kozłami";
      SF Pl Loc => x + "kozłach";
      SF Pl Voc => x + "kozły"
    };

    oper mkNTable1241: Str -> SubstForm => Str; --%
    oper mkNTable1241 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kozioł";
      SF Sg Gen => x + "kozła";
      SF Sg Dat => x + "Kozłowi";
      SF Sg Acc => x + "kozioł";
      SF Sg Instr => x + "kozłem";
      SF Sg Loc => x + "koźle";
      SF Sg Voc => x + "koźle";
      SF Pl Nom => x + "kozły";
      SF Pl Gen => x + "kozłów";
      SF Pl Dat => x + "kozłom";
      SF Pl Acc => x + "kozły";
      SF Pl Instr => x + "kozłami";
      SF Pl Loc => x + "kozłach";
      SF Pl Voc => x + "kozły"
    };

    oper mkNTable1242: Str -> SubstForm => Str; --%
    oper mkNTable1242 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ój";
      SF Sg Gen => x + "oja";
      SF Sg Dat => x + "ojowi";
      SF Sg Acc => x + "oja";
      SF Sg Instr => x + "ojem";
      SF Sg Loc => x + "oju";
      SF Sg Voc => x + "oju";
      SF Pl Nom => x + "oje";
      SF Pl Gen => x + "ojów";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "oje";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "oje"
    };

    oper mkNTable1244: Str -> SubstForm => Str; --%
    oper mkNTable1244 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kołacz";
      SF Sg Gen => x + "kołacza";
      SF Sg Dat => x + "kołaczowi";
      SF Sg Acc => x + "kołacza";
      SF Sg Instr => x + "kołaczem";
      SF Sg Loc => x + "kołaczu";
      SF Sg Voc => x + "kołaczu";
      SF Pl Nom => x + "kołacze";
      SF Pl Gen => x + "Kołaczów";
      SF Pl Dat => x + "kołaczom";
      SF Pl Acc => x + "kołacze";
      SF Pl Instr => x + "kołaczami";
      SF Pl Loc => x + "kołaczach";
      SF Pl Voc => x + "kołacze"
    };

    oper mkNTable1245: Str -> SubstForm => Str; --%
    oper mkNTable1245 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kołek";
      SF Sg Gen => x + "kołka";
      SF Sg Dat => x + "kołkowi";
      SF Sg Acc => x + "kołka";
      SF Sg Instr => x + "kołkiem";
      SF Sg Loc => x + "kołku";
      SF Sg Voc => x + "kołku";
      SF Pl Nom => x + "Kołkowie";
      SF Pl Gen => x + "kołków";
      SF Pl Dat => x + "kołkom";
      SF Pl Acc => x + "kołków";
      SF Pl Instr => x + "kołkami";
      SF Pl Loc => x + "kołkach";
      SF Pl Voc => x + "Kołkowie"
    };

    oper mkNTable1246: Str -> SubstForm => Str; --%
    oper mkNTable1246 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ót";
      SF Sg Gen => x + "otu";
      SF Sg Dat => x + "otowi";
      SF Sg Acc => x + "ót";
      SF Sg Instr => x + "otem";
      SF Sg Loc => x + "ocie";
      SF Sg Voc => x + "ocie";
      SF Pl Nom => x + "oty";
      SF Pl Gen => x + "otów";
      SF Pl Dat => x + "otom";
      SF Pl Acc => x + "oty";
      SF Pl Instr => x + "otami";
      SF Pl Loc => x + "otach";
      SF Pl Voc => x + "oty"
    };

    oper mkNTable1248: Str -> SubstForm => Str; --%
    oper mkNTable1248 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ół";
      SF Sg Gen => x + "oła";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "ół";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ele";
      SF Sg Voc => x + "ele";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1249: Str -> SubstForm => Str; --%
    oper mkNTable1249 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable1250: Str -> SubstForm => Str; --%
    oper mkNTable1250 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "ńmi";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1251: Str -> SubstForm => Str; --%
    oper mkNTable1251 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kret";
      SF Sg Gen => x + "kreta";
      SF Sg Dat => x + "kretowi";
      SF Sg Acc => x + "kreta";
      SF Sg Instr => x + "kretem";
      SF Sg Loc => x + "krecie";
      SF Sg Voc => x + "krecie";
      SF Pl Nom => x + "Kretowie";
      SF Pl Gen => x + "kretów";
      SF Pl Dat => x + "kretom";
      SF Pl Acc => x + "kretów";
      SF Pl Instr => x + "kretami";
      SF Pl Loc => x + "kretach";
      SF Pl Voc => x + "Kretowie"
    };

    oper mkNTable1252: Str -> SubstForm => Str; --%
    oper mkNTable1252 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sno";
      SF Sg Gen => x + "sna";
      SF Sg Dat => x + "snu";
      SF Sg Acc => x + "sno";
      SF Sg Instr => x + "snem";
      SF Sg Loc => x + "śnie";
      SF Sg Voc => x + "sno";
      SF Pl Nom => x + "sna";
      SF Pl Gen => x + "sien";
      SF Pl Dat => x + "snom";
      SF Pl Acc => x + "sna";
      SF Pl Instr => x + "snami";
      SF Pl Loc => x + "snach";
      SF Pl Voc => x + "sna"
    };

    oper mkNTable1253: Str -> SubstForm => Str; --%
    oper mkNTable1253 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "cu";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ec";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable1254: Str -> SubstForm => Str; --%
    oper mkNTable1254 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "eć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1255: Str -> SubstForm => Str; --%
    oper mkNTable1255 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "krzykała";
      SF Sg Gen => x + "krzykały";
      SF Sg Dat => x + "krzykale";
      SF Sg Acc => x + "krzykałę";
      SF Sg Instr => x + "krzykałą";
      SF Sg Loc => x + "krzykale";
      SF Sg Voc => x + "krzykało";
      SF Pl Nom => x + "Krzykałowie";
      SF Pl Gen => x + "krzykałów";
      SF Pl Dat => x + "krzykałom";
      SF Pl Acc => x + "krzykałów";
      SF Pl Instr => x + "krzykałami";
      SF Pl Loc => x + "krzykałach";
      SF Pl Voc => x + "Krzykałowie"
    };

    oper mkNTable1256: Str -> SubstForm => Str; --%
    oper mkNTable1256 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąg";
      SF Sg Gen => x + "ęgu";
      SF Sg Dat => x + "ęgowi";
      SF Sg Acc => x + "ąg";
      SF Sg Instr => x + "ęgiem";
      SF Sg Loc => x + "ęgu";
      SF Sg Voc => x + "ęgu";
      SF Pl Nom => x + "ęgi";
      SF Pl Gen => x + "ęgów";
      SF Pl Dat => x + "ęgom";
      SF Pl Acc => x + "ęgi";
      SF Pl Instr => x + "ęgami";
      SF Pl Loc => x + "ęgach";
      SF Pl Voc => x + "ęgi"
    };

    oper mkNTable1257: Str -> SubstForm => Str; --%
    oper mkNTable1257 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ądz";
      SF Sg Gen => x + "ędza";
      SF Sg Dat => x + "ędzu";
      SF Sg Acc => x + "ędza";
      SF Sg Instr => x + "ędzem";
      SF Sg Loc => x + "ędzu";
      SF Sg Voc => x + "ęże";
      SF Pl Nom => x + "ęża";
      SF Pl Gen => x + "ęży";
      SF Pl Dat => x + "ężom";
      SF Pl Acc => x + "ęży";
      SF Pl Instr => x + "ężmi";
      SF Pl Loc => x + "ężach";
      SF Pl Voc => x + "ęża"
    };

    oper mkNTable1258: Str -> SubstForm => Str; --%
    oper mkNTable1258 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ęga";
      SF Sg Gen => x + "ęgi";
      SF Sg Dat => x + "ędze";
      SF Sg Acc => x + "ęgę";
      SF Sg Instr => x + "ęgą";
      SF Sg Loc => x + "ędze";
      SF Sg Voc => x + "ęgo";
      SF Pl Nom => x + "ęgi";
      SF Pl Gen => x + "ąg";
      SF Pl Dat => x + "ęgom";
      SF Pl Acc => x + "ęgi";
      SF Pl Instr => x + "ęgami";
      SF Pl Loc => x + "ęgach";
      SF Pl Voc => x + "ęgi"
    };

    oper mkNTable1259: Str -> SubstForm => Str; --%
    oper mkNTable1259 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "eł";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1260: Str -> SubstForm => Str; --%
    oper mkNTable1260 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kudła";
      SF Sg Gen => x + "kudły";
      SF Sg Dat => x + "Kudle";
      SF Sg Acc => x + "Kudłę";
      SF Sg Instr => x + "Kudłą";
      SF Sg Loc => x + "Kudle";
      SF Sg Voc => x + "Kudło";
      SF Pl Nom => x + "kudły";
      SF Pl Gen => x + "kudeł";
      SF Pl Dat => x + "kudłom";
      SF Pl Acc => x + "kudły";
      SF Pl Instr => x + "kudłami";
      SF Pl Loc => x + "kudłach";
      SF Pl Voc => x + "kudły"
    };

    oper mkNTable1261: Str -> SubstForm => Str; --%
    oper mkNTable1261 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kudła";
      SF Sg Gen => x + "kudły";
      SF Sg Dat => x + "Kudle";
      SF Sg Acc => x + "Kudłę";
      SF Sg Instr => x + "Kudłą";
      SF Sg Loc => x + "Kudle";
      SF Sg Voc => x + "Kudło";
      SF Pl Nom => x + "Kudłowie";
      SF Pl Gen => x + "kudłów";
      SF Pl Dat => x + "kudłom";
      SF Pl Acc => x + "kudłów";
      SF Pl Instr => x + "kudłami";
      SF Pl Loc => x + "kudłach";
      SF Pl Voc => x + "Kudłowie"
    };

    oper mkNTable1262: Str -> SubstForm => Str; --%
    oper mkNTable1262 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "sta";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "sta";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => x + "ści";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "stów";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "ści"
    };

    oper mkNTable1263: Str -> SubstForm => Str; --%
    oper mkNTable1263 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "kusz";
      SF Sg Gen => x + "Kuszu";
      SF Sg Dat => x + "Kuszowi";
      SF Sg Acc => x + "kusz";
      SF Sg Instr => x + "Kuszem";
      SF Sg Loc => x + "Kuszu";
      SF Sg Voc => x + "Kuszu";
      SF Pl Nom => x + "kusze";
      SF Pl Gen => x + "kuszy";
      SF Pl Dat => x + "kuszom";
      SF Pl Acc => x + "kusze";
      SF Pl Instr => x + "kuszami";
      SF Pl Loc => x + "kuszach";
      SF Pl Voc => x + "kusze"
    };

    oper mkNTable1264: Str -> SubstForm => Str; --%
    oper mkNTable1264 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Kuta";
      SF Sg Gen => x + "Kuty";
      SF Sg Dat => x + "kucie";
      SF Sg Acc => x + "Kutę";
      SF Sg Instr => x + "Kutą";
      SF Sg Loc => x + "kucie";
      SF Sg Voc => x + "Kuto";
      SF Pl Nom => x + "Kuty";
      SF Pl Gen => x + "Kut";
      SF Pl Dat => x + "Kutom";
      SF Pl Acc => x + "Kuty";
      SF Pl Instr => x + "Kutami";
      SF Pl Loc => x + "Kutach";
      SF Pl Voc => x + "Kuty"
    };

    oper mkNTable1266: Str -> SubstForm => Str; --%
    oper mkNTable1266 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Kuźnik";
      SF Sg Gen => x + "Kuźnika";
      SF Sg Dat => x + "Kuźnikowi";
      SF Sg Acc => x + "Kuźnika";
      SF Sg Instr => x + "Kuźnikiem";
      SF Sg Loc => x + "Kuźniku";
      SF Sg Voc => x + "Kuźniku";
      SF Pl Nom => x + "kuźnicy";
      SF Pl Gen => x + "Kuźników";
      SF Pl Dat => x + "Kuźnikom";
      SF Pl Acc => x + "Kuźników";
      SF Pl Instr => x + "Kuźnikami";
      SF Pl Loc => x + "Kuźnikach";
      SF Pl Voc => x + "kuźnicy"
    };

    oper mkNTable1267: Str -> SubstForm => Str; --%
    oper mkNTable1267 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1268: Str -> SubstForm => Str; --%
    oper mkNTable1268 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "cień";
      SF Sg Gen => x + "tnia";
      SF Sg Dat => x + "tniowi";
      SF Sg Acc => x + "cień";
      SF Sg Instr => x + "tniem";
      SF Sg Loc => x + "tniu";
      SF Sg Voc => x + "tniu";
      SF Pl Nom => x + "tnie";
      SF Pl Gen => x + "tniów";
      SF Pl Dat => x + "tniom";
      SF Pl Acc => x + "tnie";
      SF Pl Instr => x + "tniami";
      SF Pl Loc => x + "tniach";
      SF Pl Voc => x + "tnie"
    };

    oper mkNTable1269: Str -> SubstForm => Str; --%
    oper mkNTable1269 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "u";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1270: Str -> SubstForm => Str; --%
    oper mkNTable1270 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "o";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable1271: Str -> SubstForm => Str; --%
    oper mkNTable1271 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "as";
      SF Sg Gen => x + "asu";
      SF Sg Dat => x + "asowi";
      SF Sg Acc => x + "as";
      SF Sg Instr => x + "asem";
      SF Sg Loc => x + "esie";
      SF Sg Voc => x + "esie";
      SF Pl Nom => x + "asy";
      SF Pl Gen => x + "asów";
      SF Pl Dat => x + "asom";
      SF Pl Acc => x + "asy";
      SF Pl Instr => x + "asami";
      SF Pl Loc => x + "asach";
      SF Pl Voc => x + "asy"
    };

    oper mkNTable1272: Str -> SubstForm => Str; --%
    oper mkNTable1272 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "co";
      SF Sg Gen => x + "co";
      SF Sg Dat => x + "cu";
      SF Sg Acc => x + "co";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "co";
      SF Pl Nom => x + "co";
      SF Pl Gen => x + "co";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "co";
      SF Pl Instr => x + "co";
      SF Pl Loc => x + "co";
      SF Pl Voc => x + "co"
    };

    oper mkNTable1273: Str -> SubstForm => Str; --%
    oper mkNTable1273 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cze";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable1274: Str -> SubstForm => Str; --%
    oper mkNTable1274 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ato";
      SF Sg Gen => x + "ata";
      SF Sg Dat => x + "atu";
      SF Sg Acc => x + "ato";
      SF Sg Instr => x + "atem";
      SF Sg Loc => x + "ecie";
      SF Sg Voc => x + "ato";
      SF Pl Nom => x + "ata";
      SF Pl Gen => x + "at";
      SF Pl Dat => x + "atom";
      SF Pl Acc => x + "ata";
      SF Pl Instr => x + "atami";
      SF Pl Loc => x + "atach";
      SF Pl Voc => x + "ata"
    };

    oper mkNTable1275: Str -> SubstForm => Str; --%
    oper mkNTable1275 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "j";
      SF Sg Gen => x + "ja";
      SF Sg Dat => x + "jowi";
      SF Sg Acc => x + "ja";
      SF Sg Instr => x + "jem";
      SF Sg Loc => x + "ju";
      SF Sg Voc => x + "ju";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "je";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable1276: Str -> SubstForm => Str; --%
    oper mkNTable1276 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "lepsze";
      SF Sg Gen => x + "Lepszego";
      SF Sg Dat => x + "Lepszemu";
      SF Sg Acc => x + "lepsze";
      SF Sg Instr => x + "Lepszym";
      SF Sg Loc => x + "Lepszym";
      SF Sg Voc => x + "lepsze";
      SF Pl Nom => x + "lepsze";
      SF Pl Gen => x + "Lepszych";
      SF Pl Dat => x + "Lepszym";
      SF Pl Acc => x + "lepsze";
      SF Pl Instr => x + "Lepszymi";
      SF Pl Loc => x + "Lepszych";
      SF Pl Voc => x + "lepsze"
    };

    oper mkNTable1278: Str -> SubstForm => Str; --%
    oper mkNTable1278 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1279: Str -> SubstForm => Str; --%
    oper mkNTable1279 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1280: Str -> SubstForm => Str; --%
    oper mkNTable1280 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "um";
      SF Sg Gen => x + "um";
      SF Sg Dat => x + "um";
      SF Sg Acc => x + "um";
      SF Sg Instr => x + "um";
      SF Sg Loc => x + "um";
      SF Sg Voc => x + "um";
      SF Pl Nom => x + "um";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "um";
      SF Pl Acc => x + "um";
      SF Pl Instr => x + "um";
      SF Pl Loc => x + "um";
      SF Pl Voc => x + "um"
    };

    oper mkNTable1281: Str -> SubstForm => Str; --%
    oper mkNTable1281 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oża";
      SF Sg Gen => x + "oży";
      SF Sg Dat => x + "oży";
      SF Sg Acc => x + "ożę";
      SF Sg Instr => x + "ożą";
      SF Sg Loc => x + "oży";
      SF Sg Voc => x + "ożo";
      SF Pl Nom => x + "oże";
      SF Pl Gen => x + "óż";
      SF Pl Dat => x + "ożom";
      SF Pl Acc => x + "oże";
      SF Pl Instr => x + "ożami";
      SF Pl Loc => x + "ożach";
      SF Pl Voc => x + "oże"
    };

    oper mkNTable1283: Str -> SubstForm => Str; --%
    oper mkNTable1283 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable1284: Str -> SubstForm => Str; --%
    oper mkNTable1284 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "śka";
      SF Sg Gen => x + "śki";
      SF Sg Dat => x + "śce";
      SF Sg Acc => x + "śkę";
      SF Sg Instr => x + "śką";
      SF Sg Loc => x + "śce";
      SF Sg Voc => x + "śku";
      SF Pl Nom => x + "śki";
      SF Pl Gen => x + "siek";
      SF Pl Dat => x + "śkom";
      SF Pl Acc => x + "śki";
      SF Pl Instr => x + "śkami";
      SF Pl Loc => x + "śkach";
      SF Pl Voc => x + "śki"
    };

    oper mkNTable1285: Str -> SubstForm => Str; --%
    oper mkNTable1285 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "lu";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "iel";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "li";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "le";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1287: Str -> SubstForm => Str; --%
    oper mkNTable1287 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ech";
      SF Sg Gen => x + "chu";
      SF Sg Dat => x + "chowi";
      SF Sg Acc => x + "ech";
      SF Sg Instr => x + "chem";
      SF Sg Loc => x + "chu";
      SF Sg Voc => x + "chu";
      SF Pl Nom => x + "chy";
      SF Pl Gen => x + "chów";
      SF Pl Dat => x + "chom";
      SF Pl Acc => x + "chy";
      SF Pl Instr => x + "chami";
      SF Pl Loc => x + "chach";
      SF Pl Voc => x + "chy"
    };

    oper mkNTable1288: Str -> SubstForm => Str; --%
    oper mkNTable1288 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "x";
      SF Sg Gen => x + "ksa";
      SF Sg Dat => x + "ksowi";
      SF Sg Acc => x + "ksa";
      SF Sg Instr => x + "ksem";
      SF Sg Loc => x + "ksie";
      SF Sg Voc => x + "ksie";
      SF Pl Nom => x + "ksy";
      SF Pl Gen => x + "ksów";
      SF Pl Dat => x + "ksom";
      SF Pl Acc => x + "ksy";
      SF Pl Instr => x + "ksami";
      SF Pl Loc => x + "ksach";
      SF Pl Voc => x + "ksy"
    };

    oper mkNTable1289: Str -> SubstForm => Str; --%
    oper mkNTable1289 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ków";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable1290: Str -> SubstForm => Str; --%
    oper mkNTable1290 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ara";
      SF Sg Gen => x + "ary";
      SF Sg Dat => x + "erze";
      SF Sg Acc => x + "arę";
      SF Sg Instr => x + "arą";
      SF Sg Loc => x + "erze";
      SF Sg Voc => x + "aro";
      SF Pl Nom => x + "ary";
      SF Pl Gen => x + "ar";
      SF Pl Dat => x + "arom";
      SF Pl Acc => x + "ary";
      SF Pl Instr => x + "arami";
      SF Pl Loc => x + "arach";
      SF Pl Voc => x + "ary"
    };

    oper mkNTable1291: Str -> SubstForm => Str; --%
    oper mkNTable1291 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąc";
      SF Sg Gen => x + "ąca";
      SF Sg Dat => x + "ącowi";
      SF Sg Acc => x + "ąc";
      SF Sg Instr => x + "ącem";
      SF Sg Loc => x + "ącu";
      SF Sg Voc => x + "ącu";
      SF Pl Nom => x + "ące";
      SF Pl Gen => x + "ęcy";
      SF Pl Dat => x + "ącom";
      SF Pl Acc => x + "ące";
      SF Pl Instr => x + "ącami";
      SF Pl Loc => x + "ącach";
      SF Pl Voc => x + "ące"
    };

    oper mkNTable1292: Str -> SubstForm => Str; --%
    oper mkNTable1292 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "at";
      SF Sg Gen => x + "atu";
      SF Sg Dat => x + "atu";
      SF Sg Acc => x + "at";
      SF Sg Instr => x + "atem";
      SF Sg Loc => x + "ecie";
      SF Sg Voc => x + "ecie";
      SF Pl Nom => x + "aty";
      SF Pl Gen => x + "atów";
      SF Pl Dat => x + "atom";
      SF Pl Acc => x + "aty";
      SF Pl Instr => x + "atami";
      SF Pl Loc => x + "atach";
      SF Pl Voc => x + "aty"
    };

    oper mkNTable1293: Str -> SubstForm => Str; --%
    oper mkNTable1293 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "sta";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "sta";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => x + "sty";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "sty";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "sty"
    };

    oper mkNTable1294: Str -> SubstForm => Str; --%
    oper mkNTable1294 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "siek";
      SF Sg Gen => x + "śka";
      SF Sg Dat => x + "śkowi";
      SF Sg Acc => x + "śka";
      SF Sg Instr => x + "śkiem";
      SF Sg Loc => x + "śku";
      SF Sg Voc => x + "śku";
      SF Pl Nom => x + "śki";
      SF Pl Gen => x + "śków";
      SF Pl Dat => x + "śkom";
      SF Pl Acc => x + "śki";
      SF Pl Instr => x + "śkami";
      SF Pl Loc => x + "śkach";
      SF Pl Voc => x + "śki"
    };

    oper mkNTable1295: Str -> SubstForm => Str; --%
    oper mkNTable1295 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "sień";
      SF Sg Gen => x + "śnia";
      SF Sg Dat => x + "śniowi";
      SF Sg Acc => x + "sień";
      SF Sg Instr => x + "śniem";
      SF Sg Loc => x + "śniu";
      SF Sg Voc => x + "śniu";
      SF Pl Nom => x + "śnie";
      SF Pl Gen => x + "śni";
      SF Pl Dat => x + "śniom";
      SF Pl Acc => x + "śnie";
      SF Pl Instr => x + "śniami";
      SF Pl Loc => x + "śniach";
      SF Pl Voc => x + "śnie"
    };

    oper mkNTable1296: Str -> SubstForm => Str; --%
    oper mkNTable1296 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1297: Str -> SubstForm => Str; --%
    oper mkNTable1297 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "orga";
      SF Sg Gen => x + "orgi";
      SF Sg Dat => x + "ordze";
      SF Sg Acc => x + "orgę";
      SF Sg Instr => x + "orgą";
      SF Sg Loc => x + "ordze";
      SF Sg Voc => x + "orgo";
      SF Pl Nom => x + "orgi";
      SF Pl Gen => x + "órg";
      SF Pl Dat => x + "orgom";
      SF Pl Acc => x + "orgi";
      SF Pl Instr => x + "orgami";
      SF Pl Loc => x + "orgach";
      SF Pl Voc => x + "orgi"
    };

    oper mkNTable1298: Str -> SubstForm => Str; --%
    oper mkNTable1298 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "orze";
      SF Sg Gen => x + "orza";
      SF Sg Dat => x + "orzu";
      SF Sg Acc => x + "orze";
      SF Sg Instr => x + "orzem";
      SF Sg Loc => x + "orzu";
      SF Sg Voc => x + "orze";
      SF Pl Nom => x + "orza";
      SF Pl Gen => x + "órz";
      SF Pl Dat => x + "orzom";
      SF Pl Acc => x + "orza";
      SF Pl Instr => x + "orzami";
      SF Pl Loc => x + "orzach";
      SF Pl Voc => x + "orza"
    };

    oper mkNTable1299: Str -> SubstForm => Str; --%
    oper mkNTable1299 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "łła";
      SF Sg Gen => x + "łły";
      SF Sg Dat => x + "lle";
      SF Sg Acc => x + "łłę";
      SF Sg Instr => x + "łłą";
      SF Sg Loc => x + "lle";
      SF Sg Voc => x + "łło";
      SF Pl Nom => x + "łłowie";
      SF Pl Gen => x + "łłów";
      SF Pl Dat => x + "łłom";
      SF Pl Acc => x + "łłów";
      SF Pl Instr => x + "łłami";
      SF Pl Loc => x + "łłach";
      SF Pl Voc => x + "łłowie"
    };

    oper mkNTable1301: Str -> SubstForm => Str; --%
    oper mkNTable1301 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "mruk";
      SF Sg Gen => x + "mruka";
      SF Sg Dat => x + "mrukowi";
      SF Sg Acc => x + "mruka";
      SF Sg Instr => x + "mrukiem";
      SF Sg Loc => x + "mruku";
      SF Sg Voc => x + "mruku";
      SF Pl Nom => x + "Mrukowie";
      SF Pl Gen => x + "mruków";
      SF Pl Dat => x + "mrukom";
      SF Pl Acc => x + "mruków";
      SF Pl Instr => x + "mrukami";
      SF Pl Loc => x + "mrukach";
      SF Pl Voc => x + "Mrukowie"
    };

    oper mkNTable1303: Str -> SubstForm => Str; --%
    oper mkNTable1303 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1304: Str -> SubstForm => Str; --%
    oper mkNTable1304 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable1305: Str -> SubstForm => Str; --%
    oper mkNTable1305 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąż";
      SF Sg Gen => x + "ęża";
      SF Sg Dat => x + "ężowi";
      SF Sg Acc => x + "ęża";
      SF Sg Instr => x + "ężem";
      SF Sg Loc => x + "ężu";
      SF Sg Voc => x + "ężu";
      SF Pl Nom => x + "ężowie";
      SF Pl Gen => x + "ężów";
      SF Pl Dat => x + "ężom";
      SF Pl Acc => x + "ężów";
      SF Pl Instr => x + "ężami";
      SF Pl Loc => x + "ężach";
      SF Pl Voc => x + "ężowie"
    };

    oper mkNTable1306: Str -> SubstForm => Str; --%
    oper mkNTable1306 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "młocek";
      SF Sg Gen => x + "młocka";
      SF Sg Dat => x + "młockowi";
      SF Sg Acc => x + "młocka";
      SF Sg Instr => x + "młockiem";
      SF Sg Loc => x + "młocku";
      SF Sg Voc => x + "młocku";
      SF Pl Nom => x + "Młockowie";
      SF Pl Gen => x + "młocków";
      SF Pl Dat => x + "młockom";
      SF Pl Acc => x + "młocków";
      SF Pl Instr => x + "młockami";
      SF Pl Loc => x + "młockach";
      SF Pl Voc => x + "Młockowie"
    };

    oper mkNTable1308: Str -> SubstForm => Str; --%
    oper mkNTable1308 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "młotek";
      SF Sg Gen => x + "młotka";
      SF Sg Dat => x + "młotkowi";
      SF Sg Acc => x + "młotka";
      SF Sg Instr => x + "młotkiem";
      SF Sg Loc => x + "młotku";
      SF Sg Voc => x + "młotku";
      SF Pl Nom => x + "Młotkowie";
      SF Pl Gen => x + "młotków";
      SF Pl Dat => x + "młotkom";
      SF Pl Acc => x + "młotków";
      SF Pl Instr => x + "młotkami";
      SF Pl Loc => x + "młotkach";
      SF Pl Voc => x + "Młotkowie"
    };

    oper mkNTable1310: Str -> SubstForm => Str; --%
    oper mkNTable1310 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zna";
      SF Sg Gen => x + "zny";
      SF Sg Dat => x + "źnie";
      SF Sg Acc => x + "znę";
      SF Sg Instr => x + "zną";
      SF Sg Loc => x + "źnie";
      SF Sg Voc => x + "zno";
      SF Pl Nom => x + "źni";
      SF Pl Gen => x + "zn";
      SF Pl Dat => x + "znom";
      SF Pl Acc => x + "zn";
      SF Pl Instr => x + "znami";
      SF Pl Loc => x + "znach";
      SF Pl Voc => x + "źni"
    };

    oper mkNTable1311: Str -> SubstForm => Str; --%
    oper mkNTable1311 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ól";
      SF Sg Gen => x + "ola";
      SF Sg Dat => x + "olowi";
      SF Sg Acc => x + "ola";
      SF Sg Instr => x + "olem";
      SF Sg Loc => x + "olu";
      SF Sg Voc => x + "olu";
      SF Pl Nom => x + "ole";
      SF Pl Gen => x + "oli";
      SF Pl Dat => x + "olom";
      SF Pl Acc => x + "ole";
      SF Pl Instr => x + "olami";
      SF Pl Loc => x + "olach";
      SF Pl Voc => x + "ole"
    };

    oper mkNTable1312: Str -> SubstForm => Str; --%
    oper mkNTable1312 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "órg";
      SF Sg Gen => x + "orga";
      SF Sg Dat => x + "orgowi";
      SF Sg Acc => x + "órg";
      SF Sg Instr => x + "orgiem";
      SF Sg Loc => x + "orgu";
      SF Sg Voc => x + "orgu";
      SF Pl Nom => x + "orgi";
      SF Pl Gen => x + "orgów";
      SF Pl Dat => x + "orgom";
      SF Pl Acc => x + "orgi";
      SF Pl Instr => x + "orgami";
      SF Pl Loc => x + "orgach";
      SF Pl Voc => x + "orgi"
    };

    oper mkNTable1313: Str -> SubstForm => Str; --%
    oper mkNTable1313 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ńko";
      SF Sg Gen => x + "ńka";
      SF Sg Dat => x + "ńku";
      SF Sg Acc => x + "ńko";
      SF Sg Instr => x + "ńkiem";
      SF Sg Loc => x + "ńku";
      SF Sg Voc => x + "ńko";
      SF Pl Nom => x + "ńka";
      SF Pl Gen => x + "niek";
      SF Pl Dat => x + "ńkom";
      SF Pl Acc => x + "ńka";
      SF Pl Instr => x + "ńkami";
      SF Pl Loc => x + "ńkach";
      SF Pl Voc => x + "ńka"
    };

    oper mkNTable1314: Str -> SubstForm => Str; --%
    oper mkNTable1314 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "em";
      SF Sg Gen => x + "mu";
      SF Sg Dat => x + "mowi";
      SF Sg Acc => x + "em";
      SF Sg Instr => x + "mem";
      SF Sg Loc => x + "mie";
      SF Sg Voc => x + "mie";
      SF Pl Nom => x + "my";
      SF Pl Gen => x + "mów";
      SF Pl Dat => x + "mom";
      SF Pl Acc => x + "my";
      SF Pl Instr => x + "mami";
      SF Pl Loc => x + "mach";
      SF Pl Voc => x + "my"
    };

    oper mkNTable1315: Str -> SubstForm => Str; --%
    oper mkNTable1315 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "enie";
      SF Sg Gen => x + "enia";
      SF Sg Dat => x + "eniu";
      SF Sg Acc => x + "enie";
      SF Sg Instr => x + "eniem";
      SF Sg Loc => x + "eniu";
      SF Sg Voc => x + "enie";
      SF Pl Nom => x + "ona";
      SF Pl Gen => x + "on";
      SF Pl Dat => x + "onom";
      SF Pl Acc => x + "ona";
      SF Pl Instr => x + "onami";
      SF Pl Loc => x + "onach";
      SF Pl Voc => x + "ona"
    };

    oper mkNTable1316: Str -> SubstForm => Str; --%
    oper mkNTable1316 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ca";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "cę";
      SF Sg Instr => x + "cą";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "co";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable1317: Str -> SubstForm => Str; --%
    oper mkNTable1317 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "ela";
      SF Sg Dat => x + "elowi";
      SF Sg Acc => x + "ela";
      SF Sg Instr => x + "elem";
      SF Sg Loc => x + "elu";
      SF Sg Voc => x + "elu";
      SF Pl Nom => x + "ele";
      SF Pl Gen => x + "ół";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "ół";
      SF Pl Instr => x + "ółmi";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "ele"
    };

    oper mkNTable1318: Str -> SubstForm => Str; --%
    oper mkNTable1318 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "asta";
      SF Sg Gen => x + "asty";
      SF Sg Dat => x + "eście";
      SF Sg Acc => x + "astę";
      SF Sg Instr => x + "astą";
      SF Sg Loc => x + "eście";
      SF Sg Voc => x + "asto";
      SF Pl Nom => x + "asty";
      SF Pl Gen => x + "ast";
      SF Pl Dat => x + "astom";
      SF Pl Acc => x + "asty";
      SF Pl Instr => x + "astami";
      SF Pl Loc => x + "astach";
      SF Pl Voc => x + "asty"
    };

    oper mkNTable1321: Str -> SubstForm => Str; --%
    oper mkNTable1321 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "si";
      SF Sg Dat => x + "si";
      SF Sg Acc => x + "ś";
      SF Sg Instr => x + "sią";
      SF Sg Loc => x + "si";
      SF Sg Voc => x + "si";
      SF Pl Nom => x + "si";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "si";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "si"
    };

    oper mkNTable1322: Str -> SubstForm => Str; --%
    oper mkNTable1322 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owiu";
      SF Sg Dat => x + "owiowi";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owiem";
      SF Sg Loc => x + "owiu";
      SF Sg Voc => x + "owiu";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "owiów";
      SF Pl Dat => x + "owiom";
      SF Pl Acc => x + "owie";
      SF Pl Instr => x + "owiami";
      SF Pl Loc => x + "owiach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1323: Str -> SubstForm => Str; --%
    oper mkNTable1323 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "óż";
      SF Sg Gen => x + "oża";
      SF Sg Dat => x + "ożowi";
      SF Sg Acc => x + "óż";
      SF Sg Instr => x + "ożem";
      SF Sg Loc => x + "ożu";
      SF Sg Voc => x + "ożu";
      SF Pl Nom => x + "oże";
      SF Pl Gen => x + "oży";
      SF Pl Dat => x + "ożom";
      SF Pl Acc => x + "oże";
      SF Pl Instr => x + "ożami";
      SF Pl Loc => x + "ożach";
      SF Pl Voc => x + "oże"
    };

    oper mkNTable1324: Str -> SubstForm => Str; --%
    oper mkNTable1324 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ad";
      SF Sg Gen => x + "adu";
      SF Sg Dat => x + "adowi";
      SF Sg Acc => x + "ad";
      SF Sg Instr => x + "adem";
      SF Sg Loc => x + "edzie";
      SF Sg Voc => x + "edzie";
      SF Pl Nom => x + "ady";
      SF Pl Gen => x + "adów";
      SF Pl Dat => x + "adom";
      SF Pl Acc => x + "ady";
      SF Pl Instr => x + "adami";
      SF Pl Loc => x + "adach";
      SF Pl Voc => x + "ady"
    };

    oper mkNTable1328: Str -> SubstForm => Str; --%
    oper mkNTable1328 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "et";
      SF Sg Gen => x + "tu";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "et";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => x + "ty";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ty";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ty"
    };

    oper mkNTable1329: Str -> SubstForm => Str; --%
    oper mkNTable1329 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "atr";
      SF Sg Gen => x + "atru";
      SF Sg Dat => x + "atrowi";
      SF Sg Acc => x + "atr";
      SF Sg Instr => x + "atrem";
      SF Sg Loc => x + "etrze";
      SF Sg Voc => x + "etrze";
      SF Pl Nom => x + "atry";
      SF Pl Gen => x + "atrów";
      SF Pl Dat => x + "atrom";
      SF Pl Acc => x + "atry";
      SF Pl Instr => x + "atrami";
      SF Pl Loc => x + "atrach";
      SF Pl Voc => x + "atry"
    };

    oper mkNTable1330: Str -> SubstForm => Str; --%
    oper mkNTable1330 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niek";
      SF Sg Gen => x + "ńka";
      SF Sg Dat => x + "ńkowi";
      SF Sg Acc => x + "niek";
      SF Sg Instr => x + "ńkiem";
      SF Sg Loc => x + "ńku";
      SF Sg Voc => x + "ńku";
      SF Pl Nom => x + "ńki";
      SF Pl Gen => x + "ńków";
      SF Pl Dat => x + "ńkom";
      SF Pl Acc => x + "ńki";
      SF Pl Instr => x + "ńkami";
      SF Pl Loc => x + "ńkach";
      SF Pl Voc => x + "ńki"
    };

    oper mkNTable1331: Str -> SubstForm => Str; --%
    oper mkNTable1331 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable1332: Str -> SubstForm => Str; --%
    oper mkNTable1332 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oko";
      SF Sg Gen => x + "oka";
      SF Sg Dat => x + "oku";
      SF Sg Acc => x + "oko";
      SF Sg Instr => x + "okiem";
      SF Sg Loc => x + "oku";
      SF Sg Voc => x + "oko";
      SF Pl Nom => x + "oczy";
      SF Pl Gen => x + "ócz";
      SF Pl Dat => x + "oczom";
      SF Pl Acc => x + "oczy";
      SF Pl Instr => x + "oczyma";
      SF Pl Loc => x + "oczach";
      SF Pl Voc => x + "oczy"
    };

    oper mkNTable1333: Str -> SubstForm => Str; --%
    oper mkNTable1333 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niek";
      SF Sg Gen => x + "ńka";
      SF Sg Dat => x + "ńkowi";
      SF Sg Acc => x + "ńka";
      SF Sg Instr => x + "ńkiem";
      SF Sg Loc => x + "ńku";
      SF Sg Voc => x + "ńku";
      SF Pl Nom => x + "ńki";
      SF Pl Gen => x + "ńków";
      SF Pl Dat => x + "ńkom";
      SF Pl Acc => x + "ńki";
      SF Pl Instr => x + "ńkami";
      SF Pl Loc => x + "ńkach";
      SF Pl Voc => x + "ńki"
    };

    oper mkNTable1334: Str -> SubstForm => Str; --%
    oper mkNTable1334 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1336: Str -> SubstForm => Str; --%
    oper mkNTable1336 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ół";
      SF Sg Gen => x + "oła";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "ół";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ole";
      SF Sg Voc => x + "ole";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1337: Str -> SubstForm => Str; --%
    oper mkNTable1337 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "orzeł";
      SF Sg Gen => x + "orła";
      SF Sg Dat => x + "orłu";
      SF Sg Acc => x + "orła";
      SF Sg Instr => x + "orłem";
      SF Sg Loc => x + "orle";
      SF Sg Voc => x + "orle";
      SF Pl Nom => x + "Orłowie";
      SF Pl Gen => x + "orłów";
      SF Pl Dat => x + "orłom";
      SF Pl Acc => x + "orłów";
      SF Pl Instr => x + "orłami";
      SF Pl Loc => x + "orłach";
      SF Pl Voc => x + "Orłowie"
    };

    oper mkNTable1338: Str -> SubstForm => Str; --%
    oper mkNTable1338 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zeł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1339: Str -> SubstForm => Str; --%
    oper mkNTable1339 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ep";
      SF Sg Gen => x + "pu";
      SF Sg Dat => x + "powi";
      SF Sg Acc => x + "ep";
      SF Sg Instr => x + "pem";
      SF Sg Loc => x + "pie";
      SF Sg Voc => x + "pie";
      SF Pl Nom => x + "py";
      SF Pl Gen => x + "pów";
      SF Pl Dat => x + "pom";
      SF Pl Acc => x + "py";
      SF Pl Instr => x + "pami";
      SF Pl Loc => x + "pach";
      SF Pl Voc => x + "py"
    };

    oper mkNTable1340: Str -> SubstForm => Str; --%
    oper mkNTable1340 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "set";
      SF Sg Gen => x + "stu";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "set";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => x + "sty";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "sty";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "sty"
    };

    oper mkNTable1341: Str -> SubstForm => Str; --%
    oper mkNTable1341 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "siec";
      SF Sg Gen => x + "śca";
      SF Sg Dat => x + "ścowi";
      SF Sg Acc => x + "śca";
      SF Sg Instr => x + "ścem";
      SF Sg Loc => x + "ścu";
      SF Sg Voc => x + "ścu";
      SF Pl Nom => x + "śce";
      SF Pl Gen => x + "śców";
      SF Pl Dat => x + "ścom";
      SF Pl Acc => x + "śce";
      SF Pl Instr => x + "ścami";
      SF Pl Loc => x + "ścach";
      SF Pl Voc => x + "śce"
    };

    oper mkNTable1342: Str -> SubstForm => Str; --%
    oper mkNTable1342 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "sioł";
      SF Sg Gen => x + "sła";
      SF Sg Dat => x + "słu";
      SF Sg Acc => x + "sła";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "śle";
      SF Pl Nom => x + "sły";
      SF Pl Gen => x + "słów";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "sły";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "sły"
    };

    oper mkNTable1343: Str -> SubstForm => Str; --%
    oper mkNTable1343 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oła";
      SF Sg Gen => x + "oły";
      SF Sg Dat => x + "ole";
      SF Sg Acc => x + "ołę";
      SF Sg Instr => x + "ołą";
      SF Sg Loc => x + "ole";
      SF Sg Voc => x + "oło";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ół";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1344: Str -> SubstForm => Str; --%
    oper mkNTable1344 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "eń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1345: Str -> SubstForm => Str; --%
    oper mkNTable1345 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ca";
      SF Sg Gen => x + "cy";
      SF Sg Dat => x + "cy";
      SF Sg Acc => x + "cę";
      SF Sg Instr => x + "cą";
      SF Sg Loc => x + "cy";
      SF Sg Voc => x + "co";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "iec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable1346: Str -> SubstForm => Str; --%
    oper mkNTable1346 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ies";
      SF Sg Gen => x + "sa";
      SF Sg Dat => x + "sowi";
      SF Sg Acc => x + "ies";
      SF Sg Instr => x + "sem";
      SF Sg Loc => x + "sie";
      SF Sg Voc => x + "sie";
      SF Pl Nom => x + "sy";
      SF Pl Gen => x + "sów";
      SF Pl Dat => x + "som";
      SF Pl Acc => x + "sy";
      SF Pl Instr => x + "sami";
      SF Pl Loc => x + "sach";
      SF Pl Voc => x + "sy"
    };

    oper mkNTable1348: Str -> SubstForm => Str; --%
    oper mkNTable1348 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ór";
      SF Sg Gen => x + "ora";
      SF Sg Dat => x + "orowi";
      SF Sg Acc => x + "ór";
      SF Sg Instr => x + "orem";
      SF Sg Loc => x + "orze";
      SF Sg Voc => x + "orze";
      SF Pl Nom => x + "ory";
      SF Pl Gen => x + "orów";
      SF Pl Dat => x + "orom";
      SF Pl Acc => x + "ory";
      SF Pl Instr => x + "orami";
      SF Pl Loc => x + "orach";
      SF Pl Voc => x + "ory"
    };

    oper mkNTable1349: Str -> SubstForm => Str; --%
    oper mkNTable1349 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "si";
      SF Sg Dat => x + "si";
      SF Sg Acc => x + "ś";
      SF Sg Instr => x + "sią";
      SF Sg Loc => x + "si";
      SF Sg Voc => x + "si";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1350: Str -> SubstForm => Str; --%
    oper mkNTable1350 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Pakuła";
      SF Sg Gen => x + "pakuły";
      SF Sg Dat => x + "Pakule";
      SF Sg Acc => x + "Pakułę";
      SF Sg Instr => x + "Pakułą";
      SF Sg Loc => x + "Pakule";
      SF Sg Voc => x + "Pakuło";
      SF Pl Nom => x + "pakuły";
      SF Pl Gen => x + "pakuł";
      SF Pl Dat => x + "pakułom";
      SF Pl Acc => x + "pakuły";
      SF Pl Instr => x + "pakułami";
      SF Pl Loc => x + "pakułach";
      SF Pl Voc => x + "pakuły"
    };

    oper mkNTable1351: Str -> SubstForm => Str; --%
    oper mkNTable1351 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "pala";
      SF Sg Gen => x + "pali";
      SF Sg Dat => x + "pali";
      SF Sg Acc => x + "Palę";
      SF Sg Instr => x + "Palą";
      SF Sg Loc => x + "pali";
      SF Sg Voc => x + "Palo";
      SF Pl Nom => x + "pale";
      SF Pl Gen => x + "pali";
      SF Pl Dat => x + "palom";
      SF Pl Acc => x + "pale";
      SF Pl Instr => x + "palami";
      SF Pl Loc => x + "palach";
      SF Pl Voc => x + "pale"
    };

    oper mkNTable1352: Str -> SubstForm => Str; --%
    oper mkNTable1352 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable1353: Str -> SubstForm => Str; --%
    oper mkNTable1353 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "c";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "c";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ców";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable1355: Str -> SubstForm => Str; --%
    oper mkNTable1355 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1356: Str -> SubstForm => Str; --%
    oper mkNTable1356 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1357: Str -> SubstForm => Str; --%
    oper mkNTable1357 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1358: Str -> SubstForm => Str; --%
    oper mkNTable1358 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "parch";
      SF Sg Gen => x + "parcha";
      SF Sg Dat => x + "parchowi";
      SF Sg Acc => x + "parcha";
      SF Sg Instr => x + "parchem";
      SF Sg Loc => x + "parchu";
      SF Sg Voc => x + "parchu";
      SF Pl Nom => x + "Parchowie";
      SF Pl Gen => x + "parchów";
      SF Pl Dat => x + "parchom";
      SF Pl Acc => x + "parchów";
      SF Pl Instr => x + "parchami";
      SF Pl Loc => x + "parchach";
      SF Pl Voc => x + "Parchowie"
    };

    oper mkNTable1359: Str -> SubstForm => Str; --%
    oper mkNTable1359 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąz";
      SF Sg Gen => x + "ęzu";
      SF Sg Dat => x + "ęzowi";
      SF Sg Acc => x + "ąz";
      SF Sg Instr => x + "ęzem";
      SF Sg Loc => x + "ęzie";
      SF Sg Voc => x + "ęzie";
      SF Pl Nom => x + "ęzy";
      SF Pl Gen => x + "ęzów";
      SF Pl Dat => x + "ęzom";
      SF Pl Acc => x + "ęzy";
      SF Pl Instr => x + "ęzami";
      SF Pl Loc => x + "ęzach";
      SF Pl Voc => x + "ęzy"
    };

    oper mkNTable1360: Str -> SubstForm => Str; --%
    oper mkNTable1360 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1361: Str -> SubstForm => Str; --%
    oper mkNTable1361 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ieć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1362: Str -> SubstForm => Str; --%
    oper mkNTable1362 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "Paździora";
      SF Sg Gen => x + "paździory";
      SF Sg Dat => x + "paździorze";
      SF Sg Acc => x + "Paździorę";
      SF Sg Instr => x + "Paździorą";
      SF Sg Loc => x + "paździorze";
      SF Sg Voc => x + "Paździoro";
      SF Pl Nom => x + "paździory";
      SF Pl Gen => x + "paździor";
      SF Pl Dat => x + "paździorom";
      SF Pl Acc => x + "paździory";
      SF Pl Instr => x + "paździorami";
      SF Pl Loc => x + "paździorach";
      SF Pl Voc => x + "paździory"
    };

    oper mkNTable1363: Str -> SubstForm => Str; --%
    oper mkNTable1363 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ćka";
      SF Sg Gen => x + "ćki";
      SF Sg Dat => x + "ćce";
      SF Sg Acc => x + "ćkę";
      SF Sg Instr => x + "ćką";
      SF Sg Loc => x + "ćce";
      SF Sg Voc => x + "ćko";
      SF Pl Nom => x + "ćki";
      SF Pl Gen => x + "ciek";
      SF Pl Dat => x + "ćkom";
      SF Pl Acc => x + "ćki";
      SF Pl Instr => x + "ćkami";
      SF Pl Loc => x + "ćkach";
      SF Pl Voc => x + "ćki"
    };

    oper mkNTable1364: Str -> SubstForm => Str; --%
    oper mkNTable1364 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "piekarczyk";
      SF Sg Gen => x + "piekarczyka";
      SF Sg Dat => x + "piekarczykowi";
      SF Sg Acc => x + "piekarczyka";
      SF Sg Instr => x + "piekarczykiem";
      SF Sg Loc => x + "piekarczyku";
      SF Sg Voc => x + "piekarczyku";
      SF Pl Nom => x + "Piekarczykowie";
      SF Pl Gen => x + "piekarczyków";
      SF Pl Dat => x + "piekarczykom";
      SF Pl Acc => x + "piekarczyków";
      SF Pl Instr => x + "piekarczykami";
      SF Pl Loc => x + "piekarczykach";
      SF Pl Voc => x + "Piekarczykowie"
    };

    oper mkNTable1366: Str -> SubstForm => Str; --%
    oper mkNTable1366 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ądz";
      SF Sg Gen => x + "ądza";
      SF Sg Dat => x + "ądzowi";
      SF Sg Acc => x + "ądz";
      SF Sg Instr => x + "ądzem";
      SF Sg Loc => x + "ądzu";
      SF Sg Voc => x + "ądzu";
      SF Pl Nom => x + "ądze";
      SF Pl Gen => x + "ędzy";
      SF Pl Dat => x + "ądzom";
      SF Pl Acc => x + "ądze";
      SF Pl Instr => x + "ędzmi";
      SF Pl Loc => x + "ądzach";
      SF Pl Voc => x + "ądze"
    };

    oper mkNTable1367: Str -> SubstForm => Str; --%
    oper mkNTable1367 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "pieniężnik";
      SF Sg Gen => x + "pieniężnika";
      SF Sg Dat => x + "pieniężnikowi";
      SF Sg Acc => x + "pieniężnika";
      SF Sg Instr => x + "pieniężnikiem";
      SF Sg Loc => x + "pieniężniku";
      SF Sg Voc => x + "pieniężniku";
      SF Pl Nom => x + "Pieniężnicy";
      SF Pl Gen => x + "pieniężników";
      SF Pl Dat => x + "pieniężnikom";
      SF Pl Acc => x + "pieniężników";
      SF Pl Instr => x + "pieniężnikami";
      SF Pl Loc => x + "pieniężnikach";
      SF Pl Voc => x + "Pieniężnicy"
    };

    oper mkNTable1369: Str -> SubstForm => Str; --%
    oper mkNTable1369 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Pierz";
      SF Sg Gen => x + "pierza";
      SF Sg Dat => x + "Pierzowi";
      SF Sg Acc => x + "Pierz";
      SF Sg Instr => x + "pierzem";
      SF Sg Loc => x + "pierzu";
      SF Sg Voc => x + "pierzu";
      SF Pl Nom => x + "pierze";
      SF Pl Gen => x + "pierzy";
      SF Pl Dat => x + "pierzom";
      SF Pl Acc => x + "pierze";
      SF Pl Instr => x + "pierzami";
      SF Pl Loc => x + "pierzach";
      SF Pl Voc => x + "pierze"
    };

    oper mkNTable1370: Str -> SubstForm => Str; --%
    oper mkNTable1370 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ies";
      SF Sg Gen => x + "sa";
      SF Sg Dat => x + "su";
      SF Sg Acc => x + "sa";
      SF Sg Instr => x + "sem";
      SF Sg Loc => x + "sie";
      SF Sg Voc => x + "sie";
      SF Pl Nom => x + "sy";
      SF Pl Gen => x + "sów";
      SF Pl Dat => x + "som";
      SF Pl Acc => x + "sy";
      SF Pl Instr => x + "sami";
      SF Pl Loc => x + "sach";
      SF Pl Voc => x + "sy"
    };

    oper mkNTable1371: Str -> SubstForm => Str; --%
    oper mkNTable1371 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "ni";
      SF Pl Nom => x + "ni";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "ni";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "ni"
    };

    oper mkNTable1372: Str -> SubstForm => Str; --%
    oper mkNTable1372 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "wa";
      SF Sg Gen => x + "wy";
      SF Sg Dat => x + "wie";
      SF Sg Acc => x + "wę";
      SF Sg Instr => x + "wą";
      SF Sg Loc => x + "wie";
      SF Sg Voc => x + "wo";
      SF Pl Nom => x + "wy";
      SF Pl Gen => x + "iew";
      SF Pl Dat => x + "wom";
      SF Pl Acc => x + "wy";
      SF Pl Instr => x + "wami";
      SF Pl Loc => x + "wach";
      SF Pl Voc => x + "wy"
    };

    oper mkNTable1373: Str -> SubstForm => Str; --%
    oper mkNTable1373 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ój";
      SF Sg Gen => x + "oja";
      SF Sg Dat => x + "ojowi";
      SF Sg Acc => x + "oja";
      SF Sg Instr => x + "ojem";
      SF Sg Loc => x + "oju";
      SF Sg Voc => x + "oju";
      SF Pl Nom => x + "oje";
      SF Pl Gen => x + "oi";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "oje";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "oje"
    };

    oper mkNTable1374: Str -> SubstForm => Str; --%
    oper mkNTable1374 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ół";
      SF Sg Gen => x + "ołu";
      SF Sg Dat => x + "ołowi";
      SF Sg Acc => x + "ół";
      SF Sg Instr => x + "ołem";
      SF Sg Loc => x + "ele";
      SF Sg Voc => x + "ele";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ołów";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1375: Str -> SubstForm => Str; --%
    oper mkNTable1375 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "porter";
      SF Sg Gen => x + "Portera";
      SF Sg Dat => x + "porterowi";
      SF Sg Acc => x + "Portera";
      SF Sg Instr => x + "porterem";
      SF Sg Loc => x + "porterze";
      SF Sg Voc => x + "porterze";
      SF Pl Nom => x + "portery";
      SF Pl Gen => x + "porterów";
      SF Pl Dat => x + "porterom";
      SF Pl Acc => x + "portery";
      SF Pl Instr => x + "porterami";
      SF Pl Loc => x + "porterach";
      SF Pl Voc => x + "portery"
    };

    oper mkNTable1376: Str -> SubstForm => Str; --%
    oper mkNTable1376 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "seł";
      SF Sg Gen => x + "sła";
      SF Sg Dat => x + "słowi";
      SF Sg Acc => x + "sła";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "śle";
      SF Pl Nom => x + "słowie";
      SF Pl Gen => x + "słów";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "słów";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "słowie"
    };

    oper mkNTable1377: Str -> SubstForm => Str; --%
    oper mkNTable1377 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ód";
      SF Sg Gen => x + "oda";
      SF Sg Dat => x + "odowi";
      SF Sg Acc => x + "oda";
      SF Sg Instr => x + "odem";
      SF Sg Loc => x + "odzie";
      SF Sg Voc => x + "odzie";
      SF Pl Nom => x + "odowie";
      SF Pl Gen => x + "odów";
      SF Pl Dat => x + "odom";
      SF Pl Acc => x + "odów";
      SF Pl Instr => x + "odami";
      SF Pl Loc => x + "odach";
      SF Pl Voc => x + "odowie"
    };

    oper mkNTable1378: Str -> SubstForm => Str; --%
    oper mkNTable1378 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ew";
      SF Sg Gen => x + "wu";
      SF Sg Dat => x + "wowi";
      SF Sg Acc => x + "ew";
      SF Sg Instr => x + "wem";
      SF Sg Loc => x + "wie";
      SF Sg Voc => x + "wie";
      SF Pl Nom => x + "wy";
      SF Pl Gen => x + "wów";
      SF Pl Dat => x + "wom";
      SF Pl Acc => x + "wy";
      SF Pl Instr => x + "wami";
      SF Pl Loc => x + "wach";
      SF Pl Voc => x + "wy"
    };

    oper mkNTable1380: Str -> SubstForm => Str; --%
    oper mkNTable1380 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1381: Str -> SubstForm => Str; --%
    oper mkNTable1381 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ośba";
      SF Sg Gen => x + "ośby";
      SF Sg Dat => x + "ośbie";
      SF Sg Acc => x + "ośbę";
      SF Sg Instr => x + "ośbą";
      SF Sg Loc => x + "ośbie";
      SF Sg Voc => x + "ośbo";
      SF Pl Nom => x + "ośby";
      SF Pl Gen => x + "óśb";
      SF Pl Dat => x + "ośbom";
      SF Pl Acc => x + "ośby";
      SF Pl Instr => x + "ośbami";
      SF Pl Loc => x + "ośbach";
      SF Pl Voc => x + "ośby"
    };

    oper mkNTable1382: Str -> SubstForm => Str; --%
    oper mkNTable1382 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "pryk";
      SF Sg Gen => x + "pryka";
      SF Sg Dat => x + "prykowi";
      SF Sg Acc => x + "pryka";
      SF Sg Instr => x + "prykiem";
      SF Sg Loc => x + "pryku";
      SF Sg Voc => x + "pryku";
      SF Pl Nom => x + "Prykowie";
      SF Pl Gen => x + "pryków";
      SF Pl Dat => x + "prykom";
      SF Pl Acc => x + "pryków";
      SF Pl Instr => x + "prykami";
      SF Pl Loc => x + "prykach";
      SF Pl Voc => x + "Prykowie"
    };

    oper mkNTable1383: Str -> SubstForm => Str; --%
    oper mkNTable1383 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "zień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "niów";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1384: Str -> SubstForm => Str; --%
    oper mkNTable1384 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "niów";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1385: Str -> SubstForm => Str; --%
    oper mkNTable1385 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1386: Str -> SubstForm => Str; --%
    oper mkNTable1386 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "zie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1387: Str -> SubstForm => Str; --%
    oper mkNTable1387 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "owie";
      SF Sg Gen => x + "owia";
      SF Sg Dat => x + "owiu";
      SF Sg Acc => x + "owie";
      SF Sg Instr => x + "owiem";
      SF Sg Loc => x + "owiu";
      SF Sg Voc => x + "owie";
      SF Pl Nom => x + "owia";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "owiom";
      SF Pl Acc => x + "owia";
      SF Pl Instr => x + "owiami";
      SF Pl Loc => x + "owiach";
      SF Pl Voc => x + "owia"
    };

    oper mkNTable1388: Str -> SubstForm => Str; --%
    oper mkNTable1388 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "ptaszek";
      SF Sg Gen => x + "ptaszka";
      SF Sg Dat => x + "ptaszkowi";
      SF Sg Acc => x + "ptaszka";
      SF Sg Instr => x + "ptaszkiem";
      SF Sg Loc => x + "ptaszku";
      SF Sg Voc => x + "ptaszku";
      SF Pl Nom => x + "Ptaszkowie";
      SF Pl Gen => x + "ptaszków";
      SF Pl Dat => x + "ptaszkom";
      SF Pl Acc => x + "ptaszków";
      SF Pl Instr => x + "ptaszkami";
      SF Pl Loc => x + "ptaszkach";
      SF Pl Voc => x + "Ptaszkowie"
    };

    oper mkNTable1389: Str -> SubstForm => Str; --%
    oper mkNTable1389 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ś";
      SF Sg Gen => x + "sia";
      SF Sg Dat => x + "siowi";
      SF Sg Acc => x + "ś";
      SF Sg Instr => x + "siem";
      SF Sg Loc => x + "siu";
      SF Sg Voc => x + "siu";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1390: Str -> SubstForm => Str; --%
    oper mkNTable1390 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pucek";
      SF Sg Gen => x + "pucka";
      SF Sg Dat => x + "puckowi";
      SF Sg Acc => x + "pucka";
      SF Sg Instr => x + "puckiem";
      SF Sg Loc => x + "pucku";
      SF Sg Voc => x + "pucku";
      SF Pl Nom => x + "Puckowie";
      SF Pl Gen => x + "pucków";
      SF Pl Dat => x + "puckom";
      SF Pl Acc => x + "pucków";
      SF Pl Instr => x + "puckami";
      SF Pl Loc => x + "puckach";
      SF Pl Voc => x + "Puckowie"
    };

    oper mkNTable1391: Str -> SubstForm => Str; --%
    oper mkNTable1391 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "pupka";
      SF Sg Gen => x + "pupki";
      SF Sg Dat => x + "pupce";
      SF Sg Acc => x + "pupkę";
      SF Sg Instr => x + "pupką";
      SF Sg Loc => x + "pupce";
      SF Sg Voc => x + "pupko";
      SF Pl Nom => x + "Pupkowie";
      SF Pl Gen => x + "pupek";
      SF Pl Dat => x + "pupkom";
      SF Pl Acc => x + "pupek";
      SF Pl Instr => x + "pupkami";
      SF Pl Loc => x + "pupkach";
      SF Pl Voc => x + "Pupkowie"
    };

    oper mkNTable1392: Str -> SubstForm => Str; --%
    oper mkNTable1392 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "to";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "tu";
      SF Sg Acc => x + "to";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "ta";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "ta";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ta"
    };

    oper mkNTable1393: Str -> SubstForm => Str; --%
    oper mkNTable1393 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1394: Str -> SubstForm => Str; --%
    oper mkNTable1394 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "pyra";
      SF Sg Gen => x + "pyry";
      SF Sg Dat => x + "pyrze";
      SF Sg Acc => x + "pyrę";
      SF Sg Instr => x + "pyrą";
      SF Sg Loc => x + "pyrze";
      SF Sg Voc => x + "pyro";
      SF Pl Nom => x + "Pyrowie";
      SF Pl Gen => x + "pyrów";
      SF Pl Dat => x + "pyrom";
      SF Pl Acc => x + "pyrów";
      SF Pl Instr => x + "pyrami";
      SF Pl Loc => x + "pyrach";
      SF Pl Voc => x + "Pyrowie"
    };

    oper mkNTable1395: Str -> SubstForm => Str; --%
    oper mkNTable1395 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "Pyś";
      SF Sg Gen => x + "pysia";
      SF Sg Dat => x + "pysiowi";
      SF Sg Acc => x + "Pyś";
      SF Sg Instr => x + "pysiem";
      SF Sg Loc => x + "pysiu";
      SF Sg Voc => x + "pysiu";
      SF Pl Nom => x + "pysie";
      SF Pl Gen => x + "pysiów";
      SF Pl Dat => x + "pysiom";
      SF Pl Acc => x + "pysie";
      SF Pl Instr => x + "pysiami";
      SF Pl Loc => x + "pysiach";
      SF Pl Voc => x + "pysie"
    };

    oper mkNTable1396: Str -> SubstForm => Str; --%
    oper mkNTable1396 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "eć";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cie";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1397: Str -> SubstForm => Str; --%
    oper mkNTable1397 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "tno";
      SF Sg Gen => x + "tna";
      SF Sg Dat => x + "tnu";
      SF Sg Acc => x + "tno";
      SF Sg Instr => x + "tnem";
      SF Sg Loc => x + "tnie";
      SF Sg Voc => x + "tno";
      SF Pl Nom => x + "tna";
      SF Pl Gen => x + "cien";
      SF Pl Dat => x + "tnom";
      SF Pl Acc => x + "tna";
      SF Pl Instr => x + "tnami";
      SF Pl Loc => x + "tnach";
      SF Pl Voc => x + "tna"
    };

    oper mkNTable1398: Str -> SubstForm => Str; --%
    oper mkNTable1398 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sen";
      SF Sg Gen => x + "snu";
      SF Sg Dat => x + "snowi";
      SF Sg Acc => x + "sen";
      SF Sg Instr => x + "snem";
      SF Sg Loc => x + "śnie";
      SF Sg Voc => x + "śnie";
      SF Pl Nom => x + "sny";
      SF Pl Gen => x + "snów";
      SF Pl Dat => x + "snom";
      SF Pl Acc => x + "sny";
      SF Pl Instr => x + "snami";
      SF Pl Loc => x + "snach";
      SF Pl Voc => x + "sny"
    };

    oper mkNTable1399: Str -> SubstForm => Str; --%
    oper mkNTable1399 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ieś";
      SF Sg Gen => x + "si";
      SF Sg Dat => x + "si";
      SF Sg Acc => x + "ieś";
      SF Sg Instr => x + "sią";
      SF Sg Loc => x + "si";
      SF Sg Voc => x + "si";
      SF Pl Nom => x + "sie";
      SF Pl Gen => x + "si";
      SF Pl Dat => x + "siom";
      SF Pl Acc => x + "sie";
      SF Pl Instr => x + "siami";
      SF Pl Loc => x + "siach";
      SF Pl Voc => x + "sie"
    };

    oper mkNTable1400: Str -> SubstForm => Str; --%
    oper mkNTable1400 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "atło";
      SF Sg Gen => x + "atła";
      SF Sg Dat => x + "atłu";
      SF Sg Acc => x + "atło";
      SF Sg Instr => x + "atłem";
      SF Sg Loc => x + "etle";
      SF Sg Voc => x + "atło";
      SF Pl Nom => x + "atła";
      SF Pl Gen => x + "ateł";
      SF Pl Dat => x + "atłom";
      SF Pl Acc => x + "atła";
      SF Pl Instr => x + "atłami";
      SF Pl Loc => x + "atłach";
      SF Pl Voc => x + "atła"
    };

    oper mkNTable1401: Str -> SubstForm => Str; --%
    oper mkNTable1401 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "o";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "o";
      SF Sg Loc => x + "o";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "o";
      SF Pl Dat => x + "o";
      SF Pl Acc => x + "o";
      SF Pl Instr => x + "o";
      SF Pl Loc => x + "o";
      SF Pl Voc => x + "o"
    };

    oper mkNTable1402: Str -> SubstForm => Str; --%
    oper mkNTable1402 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "e";
      SF Sg Dat => x + "e";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "e";
      SF Sg Loc => x + "e";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "ia";
      SF Pl Gen => x + "iów";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ia";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ia"
    };

    oper mkNTable1403: Str -> SubstForm => Str; --%
    oper mkNTable1403 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1404: Str -> SubstForm => Str; --%
    oper mkNTable1404 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1405: Str -> SubstForm => Str; --%
    oper mkNTable1405 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "m";
      SF Sg Loc => x + "m";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ch";
      SF Pl Dat => x + "m";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "mi";
      SF Pl Loc => x + "ch";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1409: Str -> SubstForm => Str; --%
    oper mkNTable1409 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "u";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable1410: Str -> SubstForm => Str; --%
    oper mkNTable1410 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "pospolita";
      SF Sg Gen => x + "ypospolitej";
      SF Sg Dat => x + "ypospolitej";
      SF Sg Acc => x + "ąpospolitą";
      SF Sg Instr => x + "ąpospolitą";
      SF Sg Loc => x + "ypospolitej";
      SF Sg Voc => x + "ypospolita";
      SF Pl Nom => x + "ypospolite";
      SF Pl Gen => x + "pospolitych";
      SF Pl Dat => x + "pospolitym";
      SF Pl Acc => x + "ypospolite";
      SF Pl Instr => x + "pospolitymi";
      SF Pl Loc => x + "pospolitych";
      SF Pl Voc => x + "ypospolite"
    };

    oper mkNTable1411: Str -> SubstForm => Str; --%
    oper mkNTable1411 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sło";
      SF Sg Gen => x + "sła";
      SF Sg Dat => x + "słu";
      SF Sg Acc => x + "sło";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "sło";
      SF Pl Nom => x + "sła";
      SF Pl Gen => x + "sł";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "sła";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "sła"
    };

    oper mkNTable1412: Str -> SubstForm => Str; --%
    oper mkNTable1412 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ęka";
      SF Sg Gen => x + "ęki";
      SF Sg Dat => x + "ęce";
      SF Sg Acc => x + "ękę";
      SF Sg Instr => x + "ęką";
      SF Sg Loc => x + "ęce";
      SF Sg Voc => x + "ęko";
      SF Pl Nom => x + "ęce";
      SF Pl Gen => x + "ąk";
      SF Pl Dat => x + "ękom";
      SF Pl Acc => x + "ęce";
      SF Pl Instr => x + "ękoma";
      SF Pl Loc => x + "ęku";
      SF Pl Voc => x + "ęce"
    };

    oper mkNTable1414: Str -> SubstForm => Str; --%
    oper mkNTable1414 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "sierota";
      SF Sg Gen => x + "sieroty";
      SF Sg Dat => x + "sierocie";
      SF Sg Acc => x + "sierotę";
      SF Sg Instr => x + "sierotą";
      SF Sg Loc => x + "sierocie";
      SF Sg Voc => x + "sieroto";
      SF Pl Nom => x + "sieroty";
      SF Pl Gen => x + "Sierotów";
      SF Pl Dat => x + "sierotom";
      SF Pl Acc => x + "sieroty";
      SF Pl Instr => x + "sierotami";
      SF Pl Loc => x + "sierotach";
      SF Pl Voc => x + "sieroty"
    };

    oper mkNTable1415: Str -> SubstForm => Str; --%
    oper mkNTable1415 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ień";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1416: Str -> SubstForm => Str; --%
    oper mkNTable1416 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iel";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => x + "le";
      SF Pl Gen => x + "lów";
      SF Pl Dat => x + "lom";
      SF Pl Acc => x + "lów";
      SF Pl Instr => x + "lami";
      SF Pl Loc => x + "lach";
      SF Pl Voc => x + "le"
    };

    oper mkNTable1417: Str -> SubstForm => Str; --%
    oper mkNTable1417 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "ostra";
      SF Sg Gen => x + "ostry";
      SF Sg Dat => x + "ostrze";
      SF Sg Acc => x + "ostrę";
      SF Sg Instr => x + "ostrą";
      SF Sg Loc => x + "ostrze";
      SF Sg Voc => x + "ostro";
      SF Pl Nom => x + "ostry";
      SF Pl Gen => x + "óstr";
      SF Pl Dat => x + "ostrom";
      SF Pl Acc => x + "ostry";
      SF Pl Instr => x + "ostrami";
      SF Pl Loc => x + "ostrach";
      SF Pl Voc => x + "ostry"
    };

    oper mkNTable1418: Str -> SubstForm => Str; --%
    oper mkNTable1418 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cco";
      SF Sg Gen => x + "cco";
      SF Sg Dat => x + "ccu";
      SF Sg Acc => x + "cco";
      SF Sg Instr => x + "kkiem";
      SF Sg Loc => x + "ccu";
      SF Sg Voc => x + "cco";
      SF Pl Nom => x + "cco";
      SF Pl Gen => x + "cco";
      SF Pl Dat => x + "ccom";
      SF Pl Acc => x + "cco";
      SF Pl Instr => x + "cco";
      SF Pl Loc => x + "cco";
      SF Pl Voc => x + "cco"
    };

    oper mkNTable1419: Str -> SubstForm => Str; --%
    oper mkNTable1419 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable1420: Str -> SubstForm => Str; --%
    oper mkNTable1420 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "smyk";
      SF Sg Gen => x + "smyka";
      SF Sg Dat => x + "smykowi";
      SF Sg Acc => x + "smyka";
      SF Sg Instr => x + "smykiem";
      SF Sg Loc => x + "smyku";
      SF Sg Voc => x + "smyku";
      SF Pl Nom => x + "Smykowie";
      SF Pl Gen => x + "smyków";
      SF Pl Dat => x + "smykom";
      SF Pl Acc => x + "smyków";
      SF Pl Instr => x + "smykami";
      SF Pl Loc => x + "smykach";
      SF Pl Voc => x + "Smykowie"
    };

    oper mkNTable1421: Str -> SubstForm => Str; --%
    oper mkNTable1421 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "sokół";
      SF Sg Gen => x + "sokoła";
      SF Sg Dat => x + "sokołowi";
      SF Sg Acc => x + "sokoła";
      SF Sg Instr => x + "sokołem";
      SF Sg Loc => x + "sokole";
      SF Sg Voc => x + "sokole";
      SF Pl Nom => x + "Sokołowie";
      SF Pl Gen => x + "sokołów";
      SF Pl Dat => x + "sokołom";
      SF Pl Acc => x + "sokołów";
      SF Pl Instr => x + "sokołami";
      SF Pl Loc => x + "sokołach";
      SF Pl Voc => x + "Sokołowie"
    };

    oper mkNTable1422: Str -> SubstForm => Str; --%
    oper mkNTable1422 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sna";
      SF Sg Gen => x + "sny";
      SF Sg Dat => x + "śnie";
      SF Sg Acc => x + "snę";
      SF Sg Instr => x + "sną";
      SF Sg Loc => x + "śnie";
      SF Sg Voc => x + "sno";
      SF Pl Nom => x + "sny";
      SF Pl Gen => x + "sen";
      SF Pl Dat => x + "snom";
      SF Pl Acc => x + "sny";
      SF Pl Instr => x + "snami";
      SF Pl Loc => x + "snach";
      SF Pl Voc => x + "sny"
    };

    oper mkNTable1423: Str -> SubstForm => Str; --%
    oper mkNTable1423 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "starek";
      SF Sg Gen => x + "starka";
      SF Sg Dat => x + "Starkowi";
      SF Sg Acc => x + "starka";
      SF Sg Instr => x + "Starkiem";
      SF Sg Loc => x + "Starku";
      SF Sg Voc => x + "Starku";
      SF Pl Nom => x + "Starkowie";
      SF Pl Gen => x + "Starków";
      SF Pl Dat => x + "starkom";
      SF Pl Acc => x + "Starków";
      SF Pl Instr => x + "starkami";
      SF Pl Loc => x + "starkach";
      SF Pl Voc => x + "Starkowie"
    };

    oper mkNTable1424: Str -> SubstForm => Str; --%
    oper mkNTable1424 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "sta";
      SF Sg Gen => x + "sty";
      SF Sg Dat => x + "ście";
      SF Sg Acc => x + "stę";
      SF Sg Instr => x + "stą";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "sto";
      SF Pl Nom => x + "stowie";
      SF Pl Gen => x + "stów";
      SF Pl Dat => x + "stom";
      SF Pl Acc => x + "stów";
      SF Pl Instr => x + "stami";
      SF Pl Loc => x + "stach";
      SF Pl Voc => x + "stowie"
    };

    oper mkNTable1425: Str -> SubstForm => Str; --%
    oper mkNTable1425 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "starzyk";
      SF Sg Gen => x + "starzyka";
      SF Sg Dat => x + "starzykowi";
      SF Sg Acc => x + "starzyka";
      SF Sg Instr => x + "starzykiem";
      SF Sg Loc => x + "starzyku";
      SF Sg Voc => x + "starzyku";
      SF Pl Nom => x + "Starzykowie";
      SF Pl Gen => x + "starzyków";
      SF Pl Dat => x + "starzykom";
      SF Pl Acc => x + "starzyków";
      SF Pl Instr => x + "starzykami";
      SF Pl Loc => x + "starzykach";
      SF Pl Voc => x + "Starzykowie"
    };

    oper mkNTable1426: Str -> SubstForm => Str; --%
    oper mkNTable1426 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "opa";
      SF Sg Gen => x + "opy";
      SF Sg Dat => x + "opie";
      SF Sg Acc => x + "opę";
      SF Sg Instr => x + "opą";
      SF Sg Loc => x + "opie";
      SF Sg Voc => x + "opo";
      SF Pl Nom => x + "opy";
      SF Pl Gen => x + "óp";
      SF Pl Dat => x + "opom";
      SF Pl Acc => x + "opy";
      SF Pl Instr => x + "opami";
      SF Pl Loc => x + "opach";
      SF Pl Voc => x + "opy"
    };

    oper mkNTable1427: Str -> SubstForm => Str; --%
    oper mkNTable1427 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "strzelczyk";
      SF Sg Gen => x + "strzelczyka";
      SF Sg Dat => x + "strzelczykowi";
      SF Sg Acc => x + "strzelczyka";
      SF Sg Instr => x + "strzelczykiem";
      SF Sg Loc => x + "strzelczyku";
      SF Sg Voc => x + "strzelczyku";
      SF Pl Nom => x + "Strzelczykowie";
      SF Pl Gen => x + "strzelczyków";
      SF Pl Dat => x + "strzelczykom";
      SF Pl Acc => x + "strzelczyków";
      SF Pl Instr => x + "strzelczykami";
      SF Pl Loc => x + "strzelczykach";
      SF Pl Voc => x + "Strzelczykowie"
    };

    oper mkNTable1428: Str -> SubstForm => Str; --%
    oper mkNTable1428 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nia";
      SF Sg Gen => x + "ni";
      SF Sg Dat => x + "ni";
      SF Sg Acc => x + "nię";
      SF Sg Instr => x + "nią";
      SF Sg Loc => x + "ni";
      SF Sg Voc => x + "nio";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "zien";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1429: Str -> SubstForm => Str; --%
    oper mkNTable1429 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "eń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1430: Str -> SubstForm => Str; --%
    oper mkNTable1430 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "seł";
      SF Sg Gen => x + "sła";
      SF Sg Dat => x + "słowi";
      SF Sg Acc => x + "sła";
      SF Sg Instr => x + "słem";
      SF Sg Loc => x + "śle";
      SF Sg Voc => x + "śle";
      SF Pl Nom => x + "sły";
      SF Pl Gen => x + "słów";
      SF Pl Dat => x + "słom";
      SF Pl Acc => x + "sły";
      SF Pl Instr => x + "słami";
      SF Pl Loc => x + "słach";
      SF Pl Voc => x + "sły"
    };

    oper mkNTable1431: Str -> SubstForm => Str; --%
    oper mkNTable1431 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1432: Str -> SubstForm => Str; --%
    oper mkNTable1432 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "ze";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1434: Str -> SubstForm => Str; --%
    oper mkNTable1434 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Szlaga";
      SF Sg Gen => x + "szlagi";
      SF Sg Dat => x + "Szladze";
      SF Sg Acc => x + "Szlagę";
      SF Sg Instr => x + "Szlagą";
      SF Sg Loc => x + "Szladze";
      SF Sg Voc => x + "Szlago";
      SF Pl Nom => x + "szlagi";
      SF Pl Gen => x + "szlag";
      SF Pl Dat => x + "szlagom";
      SF Pl Acc => x + "szlagi";
      SF Pl Instr => x + "szlagami";
      SF Pl Loc => x + "szlagach";
      SF Pl Voc => x + "szlagi"
    };

    oper mkNTable1435: Str -> SubstForm => Str; --%
    oper mkNTable1435 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Szlaga";
      SF Sg Gen => x + "szlagi";
      SF Sg Dat => x + "Szladze";
      SF Sg Acc => x + "Szlagę";
      SF Sg Instr => x + "Szlagą";
      SF Sg Loc => x + "Szladze";
      SF Sg Voc => x + "Szlago";
      SF Pl Nom => x + "Szlagowie";
      SF Pl Gen => x + "szlagów";
      SF Pl Dat => x + "szlagom";
      SF Pl Acc => x + "szlagów";
      SF Pl Instr => x + "szlagami";
      SF Pl Loc => x + "szlagach";
      SF Pl Voc => x + "Szlagowie"
    };

    oper mkNTable1436: Str -> SubstForm => Str; --%
    oper mkNTable1436 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "sznura";
      SF Sg Gen => x + "sznury";
      SF Sg Dat => x + "sznurze";
      SF Sg Acc => x + "Sznurę";
      SF Sg Instr => x + "Sznurą";
      SF Sg Loc => x + "sznurze";
      SF Sg Voc => x + "Sznuro";
      SF Pl Nom => x + "sznury";
      SF Pl Gen => x + "sznur";
      SF Pl Dat => x + "sznurom";
      SF Pl Acc => x + "sznury";
      SF Pl Instr => x + "sznurami";
      SF Pl Loc => x + "sznurach";
      SF Pl Voc => x + "sznury"
    };

    oper mkNTable1437: Str -> SubstForm => Str; --%
    oper mkNTable1437 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "szot";
      SF Sg Gen => x + "szota";
      SF Sg Dat => x + "szotowi";
      SF Sg Acc => x + "szota";
      SF Sg Instr => x + "szotem";
      SF Sg Loc => x + "szocie";
      SF Sg Voc => x + "szocie";
      SF Pl Nom => x + "Szotowie";
      SF Pl Gen => x + "szotów";
      SF Pl Dat => x + "szotom";
      SF Pl Acc => x + "szotów";
      SF Pl Instr => x + "szotami";
      SF Pl Loc => x + "szotach";
      SF Pl Voc => x + "Szotowie"
    };

    oper mkNTable1439: Str -> SubstForm => Str; --%
    oper mkNTable1439 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ier";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => x + "rowie";
      SF Pl Gen => x + "rów";
      SF Pl Dat => x + "rom";
      SF Pl Acc => x + "rów";
      SF Pl Instr => x + "rami";
      SF Pl Loc => x + "rach";
      SF Pl Voc => x + "rowie"
    };

    oper mkNTable1440: Str -> SubstForm => Str; --%
    oper mkNTable1440 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ią";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "iom";
      SF Pl Acc => x + "ie";
      SF Pl Instr => x + "iami";
      SF Pl Loc => x + "iach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable1441: Str -> SubstForm => Str; --%
    oper mkNTable1441 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ad";
      SF Sg Gen => x + "ada";
      SF Sg Dat => x + "adowi";
      SF Sg Acc => x + "ada";
      SF Sg Instr => x + "adem";
      SF Sg Loc => x + "edzie";
      SF Sg Voc => x + "edzie";
      SF Pl Nom => x + "edzi";
      SF Pl Gen => x + "adów";
      SF Pl Dat => x + "adom";
      SF Pl Acc => x + "adów";
      SF Pl Instr => x + "adami";
      SF Pl Loc => x + "adach";
      SF Pl Voc => x + "edzi"
    };

    oper mkNTable1442: Str -> SubstForm => Str; --%
    oper mkNTable1442 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "owo";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owu";
      SF Sg Acc => x + "owo";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owo";
      SF Pl Nom => x + "owa";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owa";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owa"
    };

    oper mkNTable1443: Str -> SubstForm => Str; --%
    oper mkNTable1443 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ój";
      SF Sg Gen => x + "oja";
      SF Sg Dat => x + "ojowi";
      SF Sg Acc => x + "ój";
      SF Sg Instr => x + "ojem";
      SF Sg Loc => x + "oju";
      SF Sg Voc => x + "oju";
      SF Pl Nom => x + "oje";
      SF Pl Gen => x + "ojów";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "oje";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "oje"
    };

    oper mkNTable1444: Str -> SubstForm => Str; --%
    oper mkNTable1444 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "tabak";
      SF Sg Gen => x + "Tabaku";
      SF Sg Dat => x + "Tabakowi";
      SF Sg Acc => x + "tabak";
      SF Sg Instr => x + "Tabakiem";
      SF Sg Loc => x + "Tabaku";
      SF Sg Voc => x + "Tabaku";
      SF Pl Nom => x + "tabaki";
      SF Pl Gen => x + "Tabaków";
      SF Pl Dat => x + "tabakom";
      SF Pl Acc => x + "tabaki";
      SF Pl Instr => x + "tabakami";
      SF Pl Loc => x + "tabakach";
      SF Pl Voc => x + "tabaki"
    };

    oper mkNTable1445: Str -> SubstForm => Str; --%
    oper mkNTable1445 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "tantal";
      SF Sg Gen => x + "Tantala";
      SF Sg Dat => x + "tantalowi";
      SF Sg Acc => x + "tantal";
      SF Sg Instr => x + "tantalem";
      SF Sg Loc => x + "tantalu";
      SF Sg Voc => x + "tantalu";
      SF Pl Nom => x + "tantale";
      SF Pl Gen => x + "tantali";
      SF Pl Dat => x + "tantalom";
      SF Pl Acc => x + "tantale";
      SF Pl Instr => x + "tantalami";
      SF Pl Loc => x + "tantalach";
      SF Pl Voc => x + "tantale"
    };

    oper mkNTable1446: Str -> SubstForm => Str; --%
    oper mkNTable1446 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ki";
      SF Sg Dat => x + "ce";
      SF Sg Acc => x + "kę";
      SF Sg Instr => x + "ką";
      SF Sg Loc => x + "ce";
      SF Sg Voc => x + "ko";
      SF Pl Nom => x + "kowie";
      SF Pl Gen => x + "ek";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ek";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "kowie"
    };

    oper mkNTable1447: Str -> SubstForm => Str; --%
    oper mkNTable1447 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "to";
      SF Sg Gen => x + "ty";
      SF Sg Dat => x + "cie";
      SF Sg Acc => x + "tę";
      SF Sg Instr => x + "tą";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "to";
      SF Pl Nom => x + "towie";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "towie"
    };

    oper mkNTable1448: Str -> SubstForm => Str; --%
    oper mkNTable1448 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ień";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1449: Str -> SubstForm => Str; --%
    oper mkNTable1449 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ba";
      SF Sg Gen => x + "by";
      SF Sg Dat => x + "bie";
      SF Sg Acc => x + "bę";
      SF Sg Instr => x + "bą";
      SF Sg Loc => x + "bie";
      SF Sg Voc => x + "bo";
      SF Pl Nom => x + "by";
      SF Pl Gen => x + "eb";
      SF Pl Dat => x + "bom";
      SF Pl Acc => x + "by";
      SF Pl Instr => x + "bami";
      SF Pl Loc => x + "bach";
      SF Pl Voc => x + "by"
    };

    oper mkNTable1450: Str -> SubstForm => Str; --%
    oper mkNTable1450 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ni";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1451: Str -> SubstForm => Str; --%
    oper mkNTable1451 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Trześń";
      SF Sg Gen => x + "trześni";
      SF Sg Dat => x + "trześni";
      SF Sg Acc => x + "Trześń";
      SF Sg Instr => x + "trześnią";
      SF Sg Loc => x + "trześni";
      SF Sg Voc => x + "trześni";
      SF Pl Nom => x + "trześnie";
      SF Pl Gen => x + "trześni";
      SF Pl Dat => x + "trześniom";
      SF Pl Acc => x + "trześnie";
      SF Pl Instr => x + "trześniami";
      SF Pl Loc => x + "trześniach";
      SF Pl Voc => x + "trześnie"
    };

    oper mkNTable1452: Str -> SubstForm => Str; --%
    oper mkNTable1452 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ele";
      SF Sg Gen => x + "ela";
      SF Sg Dat => x + "elu";
      SF Sg Acc => x + "ele";
      SF Sg Instr => x + "elem";
      SF Sg Loc => x + "elu";
      SF Sg Voc => x + "ele";
      SF Pl Nom => x + "oła";
      SF Pl Gen => x + "ół";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oła";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oła"
    };

    oper mkNTable1453: Str -> SubstForm => Str; --%
    oper mkNTable1453 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable1454: Str -> SubstForm => Str; --%
    oper mkNTable1454 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "dzień";
      SF Sg Gen => x + "godnia";
      SF Sg Dat => x + "godniowi";
      SF Sg Acc => x + "dzień";
      SF Sg Instr => x + "godniem";
      SF Sg Loc => x + "godniu";
      SF Sg Voc => x + "godniu";
      SF Pl Nom => x + "godnie";
      SF Pl Gen => x + "godni";
      SF Pl Dat => x + "godniom";
      SF Pl Acc => x + "godnie";
      SF Pl Instr => x + "godniami";
      SF Pl Loc => x + "godniach";
      SF Pl Voc => x + "godnie"
    };

    oper mkNTable1455: Str -> SubstForm => Str; --%
    oper mkNTable1455 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąc";
      SF Sg Gen => x + "ąca";
      SF Sg Dat => x + "ącowi";
      SF Sg Acc => x + "ąca";
      SF Sg Instr => x + "ącem";
      SF Sg Loc => x + "ącu";
      SF Sg Voc => x + "ącu";
      SF Pl Nom => x + "ące";
      SF Pl Gen => x + "ęcy";
      SF Pl Dat => x + "ącom";
      SF Pl Acc => x + "ące";
      SF Pl Instr => x + "ącami";
      SF Pl Loc => x + "ącach";
      SF Pl Voc => x + "ące"
    };

    oper mkNTable1456: Str -> SubstForm => Str; --%
    oper mkNTable1456 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cho";
      SF Sg Gen => x + "cha";
      SF Sg Dat => x + "chu";
      SF Sg Acc => x + "cho";
      SF Sg Instr => x + "chem";
      SF Sg Loc => x + "chu";
      SF Sg Voc => x + "cho";
      SF Pl Nom => x + "szy";
      SF Pl Gen => x + "szów";
      SF Pl Dat => x + "szom";
      SF Pl Acc => x + "szy";
      SF Pl Instr => x + "szyma";
      SF Pl Loc => x + "szach";
      SF Pl Voc => x + "szy"
    };

    oper mkNTable1457: Str -> SubstForm => Str; --%
    oper mkNTable1457 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => x + "niowie";
      SF Pl Gen => x + "niów";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "niów";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "niowie"
    };

    oper mkNTable1458: Str -> SubstForm => Str; --%
    oper mkNTable1458 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Ulster";
      SF Sg Gen => x + "Ulsteru";
      SF Sg Dat => x + "ulstrowi";
      SF Sg Acc => x + "Ulster";
      SF Sg Instr => x + "ulstrem";
      SF Sg Loc => x + "ulstrze";
      SF Sg Voc => x + "ulstrze";
      SF Pl Nom => x + "ulstry";
      SF Pl Gen => x + "ulstrów";
      SF Pl Dat => x + "ulstrom";
      SF Pl Acc => x + "ulstry";
      SF Pl Instr => x + "ulstrami";
      SF Pl Loc => x + "ulstrach";
      SF Pl Voc => x + "ulstry"
    };

    oper mkNTable1459: Str -> SubstForm => Str; --%
    oper mkNTable1459 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąż";
      SF Sg Gen => x + "ęży";
      SF Sg Dat => x + "ęży";
      SF Sg Acc => x + "ąż";
      SF Sg Instr => x + "ężą";
      SF Sg Loc => x + "ęży";
      SF Sg Voc => x + "ęży";
      SF Pl Nom => x + "ęże";
      SF Pl Gen => x + "ęży";
      SF Pl Dat => x + "ężom";
      SF Pl Acc => x + "ęże";
      SF Pl Instr => x + "ężami";
      SF Pl Loc => x + "ężach";
      SF Pl Voc => x + "ęże"
    };

    oper mkNTable1460: Str -> SubstForm => Str; --%
    oper mkNTable1460 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => x + "cie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ciów";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cie"
    };

    oper mkNTable1461: Str -> SubstForm => Str; --%
    oper mkNTable1461 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "o";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1462: Str -> SubstForm => Str; --%
    oper mkNTable1462 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Wacha";
      SF Sg Gen => x + "Wachy";
      SF Sg Dat => x + "Wasze";
      SF Sg Acc => x + "Wachę";
      SF Sg Instr => x + "Wachą";
      SF Sg Loc => x + "Wasze";
      SF Sg Voc => x + "Wacho";
      SF Pl Nom => x + "Wachy";
      SF Pl Gen => x + "wach";
      SF Pl Dat => x + "Wachom";
      SF Pl Acc => x + "Wachy";
      SF Pl Instr => x + "Wachami";
      SF Pl Loc => x + "Wachach";
      SF Pl Voc => x + "Wachy"
    };

    oper mkNTable1463: Str -> SubstForm => Str; --%
    oper mkNTable1463 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1464: Str -> SubstForm => Str; --%
    oper mkNTable1464 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ci";
      SF Sg Acc => x + "ci";
      SF Sg Instr => x + "cią";
      SF Sg Loc => x + "ci";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "ciowie";
      SF Pl Gen => x + "ciów";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ciów";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ciowie"
    };

    oper mkNTable1465: Str -> SubstForm => Str; --%
    oper mkNTable1465 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "esz";
      SF Sg Gen => x + "szy";
      SF Sg Dat => x + "szy";
      SF Sg Acc => x + "esz";
      SF Sg Instr => x + "szą";
      SF Sg Loc => x + "szy";
      SF Sg Voc => x + "szy";
      SF Pl Nom => x + "szy";
      SF Pl Gen => x + "szy";
      SF Pl Dat => x + "szom";
      SF Pl Acc => x + "szy";
      SF Pl Instr => x + "szami";
      SF Pl Loc => x + "szach";
      SF Pl Voc => x + "szy"
    };

    oper mkNTable1469: Str -> SubstForm => Str; --%
    oper mkNTable1469 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ego";
      SF Sg Dat => x + "emu";
      SF Sg Acc => x + "ego";
      SF Sg Instr => x + "ym";
      SF Sg Loc => x + "ym";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "ych";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable1470: Str -> SubstForm => Str; --%
    oper mkNTable1470 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + ""
    };

    oper mkNTable1471: Str -> SubstForm => Str; --%
    oper mkNTable1471 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "zień";
      SF Sg Gen => x + "źnia";
      SF Sg Dat => x + "źniowi";
      SF Sg Acc => x + "źnia";
      SF Sg Instr => x + "źniem";
      SF Sg Loc => x + "źniu";
      SF Sg Voc => x + "źniu";
      SF Pl Nom => x + "źniowie";
      SF Pl Gen => x + "źniów";
      SF Pl Dat => x + "źniom";
      SF Pl Acc => x + "źniów";
      SF Pl Instr => x + "źniami";
      SF Pl Loc => x + "źniach";
      SF Pl Voc => x + "źniowie"
    };

    oper mkNTable1473: Str -> SubstForm => Str; --%
    oper mkNTable1473 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "sień";
      SF Sg Gen => x + "śnia";
      SF Sg Dat => x + "śniowi";
      SF Sg Acc => x + "sień";
      SF Sg Instr => x + "śniem";
      SF Sg Loc => x + "śniu";
      SF Sg Voc => x + "śniu";
      SF Pl Nom => x + "śnie";
      SF Pl Gen => x + "śniów";
      SF Pl Dat => x + "śniom";
      SF Pl Acc => x + "śnie";
      SF Pl Instr => x + "śniami";
      SF Pl Loc => x + "śniach";
      SF Pl Voc => x + "śnie"
    };

    oper mkNTable1474: Str -> SubstForm => Str; --%
    oper mkNTable1474 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "at";
      SF Sg Gen => x + "ata";
      SF Sg Dat => x + "atowi";
      SF Sg Acc => x + "at";
      SF Sg Instr => x + "atem";
      SF Sg Loc => x + "ecie";
      SF Sg Voc => x + "ecie";
      SF Pl Nom => x + "aty";
      SF Pl Gen => x + "atów";
      SF Pl Dat => x + "atom";
      SF Pl Acc => x + "aty";
      SF Pl Instr => x + "atami";
      SF Pl Loc => x + "atach";
      SF Pl Voc => x + "aty"
    };

    oper mkNTable1475: Str -> SubstForm => Str; --%
    oper mkNTable1475 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "wyrostek";
      SF Sg Gen => x + "wyrostka";
      SF Sg Dat => x + "wyrostkowi";
      SF Sg Acc => x + "wyrostka";
      SF Sg Instr => x + "wyrostkiem";
      SF Sg Loc => x + "wyrostku";
      SF Sg Voc => x + "wyrostku";
      SF Pl Nom => x + "Wyrostkowie";
      SF Pl Gen => x + "wyrostków";
      SF Pl Dat => x + "wyrostkom";
      SF Pl Acc => x + "wyrostków";
      SF Pl Instr => x + "wyrostkami";
      SF Pl Loc => x + "wyrostkach";
      SF Pl Voc => x + "Wyrostkowie"
    };

    oper mkNTable1476: Str -> SubstForm => Str; --%
    oper mkNTable1476 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eł";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "łów";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1477: Str -> SubstForm => Str; --%
    oper mkNTable1477 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąż";
      SF Sg Gen => x + "ęża";
      SF Sg Dat => x + "ężowi";
      SF Sg Acc => x + "ęża";
      SF Sg Instr => x + "ężem";
      SF Sg Loc => x + "ężu";
      SF Sg Voc => x + "ężu";
      SF Pl Nom => x + "ęże";
      SF Pl Gen => x + "ężów";
      SF Pl Dat => x + "ężom";
      SF Pl Acc => x + "ęże";
      SF Pl Instr => x + "ężami";
      SF Pl Loc => x + "ężach";
      SF Pl Voc => x + "ęże"
    };

    oper mkNTable1478: Str -> SubstForm => Str; --%
    oper mkNTable1478 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ąż";
      SF Sg Gen => x + "ęża";
      SF Sg Dat => x + "ężowi";
      SF Sg Acc => x + "ąż";
      SF Sg Instr => x + "ężem";
      SF Sg Loc => x + "ężu";
      SF Sg Voc => x + "ężu";
      SF Pl Nom => x + "ęże";
      SF Pl Gen => x + "ężów";
      SF Pl Dat => x + "ężom";
      SF Pl Acc => x + "ęże";
      SF Pl Instr => x + "ężami";
      SF Pl Loc => x + "ężach";
      SF Pl Voc => x + "ęże"
    };

    oper mkNTable1479: Str -> SubstForm => Str; --%
    oper mkNTable1479 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "sień";
      SF Sg Gen => x + "śnia";
      SF Sg Dat => x + "śniowi";
      SF Sg Acc => x + "śnia";
      SF Sg Instr => x + "śniem";
      SF Sg Loc => x + "śniu";
      SF Sg Voc => x + "śniu";
      SF Pl Nom => x + "śnie";
      SF Pl Gen => x + "śni";
      SF Pl Dat => x + "śniom";
      SF Pl Acc => x + "śnie";
      SF Pl Instr => x + "śniami";
      SF Pl Loc => x + "śniach";
      SF Pl Voc => x + "śnie"
    };

    oper mkNTable1480: Str -> SubstForm => Str; --%
    oper mkNTable1480 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ódz";
      SF Sg Gen => x + "odza";
      SF Sg Dat => x + "odzowi";
      SF Sg Acc => x + "odza";
      SF Sg Instr => x + "odzem";
      SF Sg Loc => x + "odzu";
      SF Sg Voc => x + "odzu";
      SF Pl Nom => x + "odzowie";
      SF Pl Gen => x + "odzów";
      SF Pl Dat => x + "odzom";
      SF Pl Acc => x + "odzów";
      SF Pl Instr => x + "odzami";
      SF Pl Loc => x + "odzach";
      SF Pl Voc => x + "odzowie"
    };

    oper mkNTable1481: Str -> SubstForm => Str; --%
    oper mkNTable1481 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oże";
      SF Sg Gen => x + "oża";
      SF Sg Dat => x + "ożu";
      SF Sg Acc => x + "oże";
      SF Sg Instr => x + "ożem";
      SF Sg Loc => x + "ożu";
      SF Sg Voc => x + "oże";
      SF Pl Nom => x + "oża";
      SF Pl Gen => x + "óż";
      SF Pl Dat => x + "ożom";
      SF Pl Acc => x + "oża";
      SF Pl Instr => x + "ożami";
      SF Pl Loc => x + "ożach";
      SF Pl Voc => x + "oża"
    };

    oper mkNTable1482: Str -> SubstForm => Str; --%
    oper mkNTable1482 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oja";
      SF Sg Gen => x + "oi";
      SF Sg Dat => x + "oi";
      SF Sg Acc => x + "oję";
      SF Sg Instr => x + "oją";
      SF Sg Loc => x + "oi";
      SF Sg Voc => x + "ojo";
      SF Pl Nom => x + "oje";
      SF Pl Gen => x + "ój";
      SF Pl Dat => x + "ojom";
      SF Pl Acc => x + "oje";
      SF Pl Instr => x + "ojami";
      SF Pl Loc => x + "ojach";
      SF Pl Voc => x + "oje"
    };

    oper mkNTable1483: Str -> SubstForm => Str; --%
    oper mkNTable1483 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "zefir";
      SF Sg Gen => x + "Zefira";
      SF Sg Dat => x + "zefirowi";
      SF Sg Acc => x + "Zefira";
      SF Sg Instr => x + "zefirem";
      SF Sg Loc => x + "zefirze";
      SF Sg Voc => x + "zefirze";
      SF Pl Nom => x + "zefiry";
      SF Pl Gen => x + "zefirów";
      SF Pl Dat => x + "zefirom";
      SF Pl Acc => x + "zefiry";
      SF Pl Instr => x + "zefirami";
      SF Pl Loc => x + "zefirach";
      SF Pl Voc => x + "zefiry"
    };

    oper mkNTable1485: Str -> SubstForm => Str; --%
    oper mkNTable1485 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zet";
      SF Sg Gen => x + "zeta";
      SF Sg Dat => x + "zetowi";
      SF Sg Acc => x + "zeta";
      SF Sg Instr => x + "zetem";
      SF Sg Loc => x + "zecie";
      SF Sg Voc => x + "zecie";
      SF Pl Nom => x + "Zetowie";
      SF Pl Gen => x + "zetów";
      SF Pl Dat => x + "zetom";
      SF Pl Acc => x + "zetów";
      SF Pl Instr => x + "zetami";
      SF Pl Loc => x + "zetach";
      SF Pl Voc => x + "Zetowie"
    };

    oper mkNTable1487: Str -> SubstForm => Str; --%
    oper mkNTable1487 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "orza";
      SF Sg Gen => x + "orzy";
      SF Sg Dat => x + "orzy";
      SF Sg Acc => x + "orzę";
      SF Sg Instr => x + "orzą";
      SF Sg Loc => x + "orzy";
      SF Sg Voc => x + "orzo";
      SF Pl Nom => x + "orze";
      SF Pl Gen => x + "órz";
      SF Pl Dat => x + "orzom";
      SF Pl Acc => x + "orze";
      SF Pl Instr => x + "orzami";
      SF Pl Loc => x + "orzach";
      SF Pl Voc => x + "orze"
    };

    oper mkNTable1488: Str -> SubstForm => Str; --%
    oper mkNTable1488 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ło";
      SF Sg Gen => x + "ła";
      SF Sg Dat => x + "łu";
      SF Sg Acc => x + "ło";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "łu";
      SF Sg Voc => x + "ło";
      SF Pl Nom => x + "ła";
      SF Pl Gen => x + "eł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ła";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ła"
    };

    oper mkNTable1489: Str -> SubstForm => Str; --%
    oper mkNTable1489 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owu";
      SF Sg Dat => x + "owowi";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owiem";
      SF Sg Loc => x + "owiu";
      SF Sg Voc => x + "owiu";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "owów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owiami";
      SF Pl Loc => x + "owiach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable1491: Str -> SubstForm => Str; --%
    oper mkNTable1491 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "łoś";
      SF Sg Gen => x + "łosia";
      SF Sg Dat => x + "łosiowi";
      SF Sg Acc => x + "łosia";
      SF Sg Instr => x + "łosiem";
      SF Sg Loc => x + "łosiu";
      SF Sg Voc => x + "łosiu";
      SF Pl Nom => x + "Łosiowie";
      SF Pl Gen => x + "Łosiów";
      SF Pl Dat => x + "łosiom";
      SF Pl Acc => x + "Łosiów";
      SF Pl Instr => x + "łosiami";
      SF Pl Loc => x + "łosiach";
      SF Pl Voc => x + "Łosiowie"
    };

    oper mkNTable1494: Str -> SubstForm => Str; --%
    oper mkNTable1494 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "śliwa";
      SF Sg Gen => x + "śliwy";
      SF Sg Dat => x + "śliwie";
      SF Sg Acc => x + "śliwę";
      SF Sg Instr => x + "śliwą";
      SF Sg Loc => x + "śliwie";
      SF Sg Voc => x + "śliwo";
      SF Pl Nom => x + "Śliwowie";
      SF Pl Gen => x + "Śliwów";
      SF Pl Dat => x + "śliwom";
      SF Pl Acc => x + "Śliwów";
      SF Pl Instr => x + "śliwami";
      SF Pl Loc => x + "śliwach";
      SF Pl Voc => x + "Śliwowie"
    };

    oper mkNTable1495: Str -> SubstForm => Str; --%
    oper mkNTable1495 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "świątek";
      SF Sg Gen => x + "świątka";
      SF Sg Dat => x + "świątkowi";
      SF Sg Acc => x + "świątka";
      SF Sg Instr => x + "świątkiem";
      SF Sg Loc => x + "świątku";
      SF Sg Voc => x + "świątku";
      SF Pl Nom => x + "Świątkowie";
      SF Pl Gen => x + "świątków";
      SF Pl Dat => x + "świątkom";
      SF Pl Acc => x + "świątków";
      SF Pl Instr => x + "świątkami";
      SF Pl Loc => x + "świątkach";
      SF Pl Voc => x + "Świątkowie"
    };

    oper mkNTable1496: Str -> SubstForm => Str; --%
    oper mkNTable1496 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "żak";
      SF Sg Gen => x + "żaka";
      SF Sg Dat => x + "żakowi";
      SF Sg Acc => x + "żaka";
      SF Sg Instr => x + "żakiem";
      SF Sg Loc => x + "żaku";
      SF Sg Voc => x + "żaku";
      SF Pl Nom => x + "Żakowie";
      SF Pl Gen => x + "żaków";
      SF Pl Dat => x + "żakom";
      SF Pl Acc => x + "żaków";
      SF Pl Instr => x + "żakami";
      SF Pl Loc => x + "żakach";
      SF Pl Voc => x + "Żakowie"
    };

    oper mkNTable1498: Str -> SubstForm => Str; --%
    oper mkNTable1498 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "żegota";
      SF Sg Gen => x + "żegoty";
      SF Sg Dat => x + "żegocie";
      SF Sg Acc => x + "żegotę";
      SF Sg Instr => x + "żegotą";
      SF Sg Loc => x + "żegocie";
      SF Sg Voc => x + "żegoto";
      SF Pl Nom => x + "Żegotowie";
      SF Pl Gen => x + "Żegotów";
      SF Pl Dat => x + "żegotom";
      SF Pl Acc => x + "Żegotów";
      SF Pl Instr => x + "żegotami";
      SF Pl Loc => x + "żegotach";
      SF Pl Voc => x + "Żegotowie"
    };

    oper mkNTable1500: Str -> SubstForm => Str; --%
    oper mkNTable1500 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "a";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "a";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "a";
      SF Pl Dat => x + "a";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "a";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1501: Str -> SubstForm => Str; --%
    oper mkNTable1501 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Żukowo";
      SF Sg Gen => x + "Żukowa";
      SF Sg Dat => x + "Żukowu";
      SF Sg Acc => x + "Żukowo";
      SF Sg Instr => x + "Żukowem";
      SF Sg Loc => x + "Żukowie";
      SF Sg Voc => x + "Żukowo";
      SF Pl Nom => x + "Żukowa";
      SF Pl Gen => x + "żuków";
      SF Pl Dat => x + "Żukowom";
      SF Pl Acc => x + "Żukowa";
      SF Pl Instr => x + "Żukowami";
      SF Pl Loc => x + "Żukowach";
      SF Pl Voc => x + "Żukowa"
    };

    oper mkNTable1502: Str -> SubstForm => Str; --%
    oper mkNTable1502 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "żurek";
      SF Sg Gen => x + "Żurka";
      SF Sg Dat => x + "żurkowi";
      SF Sg Acc => x + "Żurka";
      SF Sg Instr => x + "żurkiem";
      SF Sg Loc => x + "żurku";
      SF Sg Voc => x + "żurku";
      SF Pl Nom => x + "Żurkowie";
      SF Pl Gen => x + "żurków";
      SF Pl Dat => x + "żurkom";
      SF Pl Acc => x + "żurków";
      SF Pl Instr => x + "żurkami";
      SF Pl Loc => x + "żurkach";
      SF Pl Voc => x + "Żurkowie"
    };

    oper mkNTable1503: Str -> SubstForm => Str; --%
    oper mkNTable1503 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Żwirko";
      SF Sg Gen => x + "żwirki";
      SF Sg Dat => x + "Żwirce";
      SF Sg Acc => x + "Żwirkę";
      SF Sg Instr => x + "Żwirką";
      SF Sg Loc => x + "Żwirce";
      SF Sg Voc => x + "Żwirko";
      SF Pl Nom => x + "Żwirkowie";
      SF Pl Gen => x + "żwirków";
      SF Pl Dat => x + "żwirkom";
      SF Pl Acc => x + "żwirków";
      SF Pl Instr => x + "żwirkami";
      SF Pl Loc => x + "żwirkach";
      SF Pl Voc => x + "Żwirkowie"
    };

    oper mkNTable1504: Str -> SubstForm => Str; --%
    oper mkNTable1504 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "żydek";
      SF Sg Gen => x + "żydka";
      SF Sg Dat => x + "żydkowi";
      SF Sg Acc => x + "żydka";
      SF Sg Instr => x + "żydkiem";
      SF Sg Loc => x + "żydku";
      SF Sg Voc => x + "żydku";
      SF Pl Nom => x + "Żydkowie";
      SF Pl Gen => x + "żydków";
      SF Pl Dat => x + "żydkom";
      SF Pl Acc => x + "żydków";
      SF Pl Instr => x + "żydkami";
      SF Pl Loc => x + "żydkach";
      SF Pl Voc => x + "Żydkowie"
    };

    oper mkNTable1505: Str -> SubstForm => Str; --%
    oper mkNTable1505 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Łakomiec";
      SF Sg Gen => x + "łakomca";
      SF Sg Dat => x + "Łakomcowi";
      SF Sg Acc => x + "łakomca";
      SF Sg Instr => x + "Łakomcem";
      SF Sg Loc => x + "Łakomcu";
      SF Sg Voc => x + "Łakomcu";
      SF Pl Nom => x + "łakomcy";
      SF Pl Gen => x + "łakomców";
      SF Pl Dat => x + "łakomcom";
      SF Pl Acc => x + "łakomców";
      SF Pl Instr => x + "łakomcami";
      SF Pl Loc => x + "łakomcach";
      SF Pl Voc => x + "łakomcy"
    };

    oper mkNTable1506: Str -> SubstForm => Str; --%
    oper mkNTable1506 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "łatek";
      SF Sg Gen => x + "łatka";
      SF Sg Dat => x + "łatkowi";
      SF Sg Acc => x + "łatka";
      SF Sg Instr => x + "łatkiem";
      SF Sg Loc => x + "łatku";
      SF Sg Voc => x + "łatku";
      SF Pl Nom => x + "Łatkowie";
      SF Pl Gen => x + "łatków";
      SF Pl Dat => x + "łatkom";
      SF Pl Acc => x + "łatków";
      SF Pl Instr => x + "łatkami";
      SF Pl Loc => x + "łatkach";
      SF Pl Voc => x + "Łatkowie"
    };

    oper mkNTable1507: Str -> SubstForm => Str; --%
    oper mkNTable1507 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eb";
      SF Sg Gen => x + "ba";
      SF Sg Dat => x + "bu";
      SF Sg Acc => x + "ba";
      SF Sg Instr => x + "bem";
      SF Sg Loc => x + "bie";
      SF Sg Voc => x + "bie";
      SF Pl Nom => x + "by";
      SF Pl Gen => x + "bów";
      SF Pl Dat => x + "bom";
      SF Pl Acc => x + "by";
      SF Pl Instr => x + "bami";
      SF Pl Loc => x + "bach";
      SF Pl Voc => x + "by"
    };

    oper mkNTable1508: Str -> SubstForm => Str; --%
    oper mkNTable1508 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "eb";
      SF Sg Gen => x + "ba";
      SF Sg Dat => x + "bu";
      SF Sg Acc => x + "eb";
      SF Sg Instr => x + "bem";
      SF Sg Loc => x + "bie";
      SF Sg Voc => x + "bie";
      SF Pl Nom => x + "by";
      SF Pl Gen => x + "bów";
      SF Pl Dat => x + "bom";
      SF Pl Acc => x + "by";
      SF Pl Instr => x + "bami";
      SF Pl Loc => x + "bach";
      SF Pl Voc => x + "by"
    };

    oper mkNTable1509: Str -> SubstForm => Str; --%
    oper mkNTable1509 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "łebek";
      SF Sg Gen => x + "łebka";
      SF Sg Dat => x + "łebkowi";
      SF Sg Acc => x + "łebka";
      SF Sg Instr => x + "łebkiem";
      SF Sg Loc => x + "łebku";
      SF Sg Voc => x + "łebku";
      SF Pl Nom => x + "Łebkowie";
      SF Pl Gen => x + "łebków";
      SF Pl Dat => x + "łebkom";
      SF Pl Acc => x + "łebków";
      SF Pl Instr => x + "łebkami";
      SF Pl Loc => x + "łebkach";
      SF Pl Voc => x + "Łebkowie"
    };

    oper mkNTable1510: Str -> SubstForm => Str; --%
    oper mkNTable1510 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "łepek";
      SF Sg Gen => x + "łepka";
      SF Sg Dat => x + "łepkowi";
      SF Sg Acc => x + "łepka";
      SF Sg Instr => x + "łepkiem";
      SF Sg Loc => x + "łepku";
      SF Sg Voc => x + "łepku";
      SF Pl Nom => x + "Łepkowie";
      SF Pl Gen => x + "łepków";
      SF Pl Dat => x + "łepkom";
      SF Pl Acc => x + "łepków";
      SF Pl Instr => x + "łepkami";
      SF Pl Loc => x + "łepkach";
      SF Pl Voc => x + "Łepkowie"
    };

    oper mkNTable1511: Str -> SubstForm => Str; --%
    oper mkNTable1511 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "za";
      SF Sg Gen => x + "zy";
      SF Sg Dat => x + "zie";
      SF Sg Acc => x + "zę";
      SF Sg Instr => x + "zą";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zo";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "ez";
      SF Pl Dat => x + "zom";
      SF Pl Acc => x + "zy";
      SF Pl Instr => x + "zami";
      SF Pl Loc => x + "zach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable1513: Str -> SubstForm => Str; --%
    oper mkNTable1513 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "świtek";
      SF Sg Gen => x + "Świtku";
      SF Sg Dat => x + "Świtkowi";
      SF Sg Acc => x + "świtek";
      SF Sg Instr => x + "Świtkiem";
      SF Sg Loc => x + "Świtku";
      SF Sg Voc => x + "Świtku";
      SF Pl Nom => x + "świtki";
      SF Pl Gen => x + "Świtków";
      SF Pl Dat => x + "świtkom";
      SF Pl Acc => x + "świtki";
      SF Pl Instr => x + "świtkami";
      SF Pl Loc => x + "świtkach";
      SF Pl Voc => x + "świtki"
    };

    oper mkNTable1514: Str -> SubstForm => Str; --%
    oper mkNTable1514 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ęto";
      SF Sg Gen => x + "ęta";
      SF Sg Dat => x + "ętu";
      SF Sg Acc => x + "ęto";
      SF Sg Instr => x + "ętem";
      SF Sg Loc => x + "ęcie";
      SF Sg Voc => x + "ęto";
      SF Pl Nom => x + "ęta";
      SF Pl Gen => x + "ąt";
      SF Pl Dat => x + "ętom";
      SF Pl Acc => x + "ęta";
      SF Pl Instr => x + "ętami";
      SF Pl Loc => x + "ętach";
      SF Pl Voc => x + "ęta"
    };

    oper mkNTable1515: Str -> SubstForm => Str; --%
    oper mkNTable1515 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "źce";
      SF Sg Gen => x + "źca";
      SF Sg Dat => x + "źcu";
      SF Sg Acc => x + "źce";
      SF Sg Instr => x + "źcem";
      SF Sg Loc => x + "źcu";
      SF Sg Voc => x + "źce";
      SF Pl Nom => x + "źca";
      SF Pl Gen => x + "ziec";
      SF Pl Dat => x + "źcom";
      SF Pl Acc => x + "źca";
      SF Pl Instr => x + "źcami";
      SF Pl Loc => x + "źcach";
      SF Pl Voc => x + "źca"
    };

    oper mkNTable1516: Str -> SubstForm => Str; --%
    oper mkNTable1516 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ądź";
      SF Sg Gen => x + "ędzi";
      SF Sg Dat => x + "ędzi";
      SF Sg Acc => x + "ądź";
      SF Sg Instr => x + "ędzią";
      SF Sg Loc => x + "ędzi";
      SF Sg Voc => x + "ędzi";
      SF Pl Nom => x + "ędzie";
      SF Pl Gen => x + "ędzi";
      SF Pl Dat => x + "ędziom";
      SF Pl Acc => x + "ędzie";
      SF Pl Instr => x + "ędziami";
      SF Pl Loc => x + "ędziach";
      SF Pl Voc => x + "ędzie"
    };

    oper mkNTable1517: Str -> SubstForm => Str; --%
    oper mkNTable1517 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ądź";
      SF Sg Gen => x + "ędzia";
      SF Sg Dat => x + "ędziowi";
      SF Sg Acc => x + "ędzia";
      SF Sg Instr => x + "ędziem";
      SF Sg Loc => x + "ędziu";
      SF Sg Voc => x + "ędziu";
      SF Pl Nom => x + "ędzie";
      SF Pl Gen => x + "ędzi";
      SF Pl Dat => x + "ędziom";
      SF Pl Acc => x + "ędzie";
      SF Pl Instr => x + "ędziami";
      SF Pl Loc => x + "ędziach";
      SF Pl Voc => x + "ędzie"
    };

    oper mkNTable1518: Str -> SubstForm => Str; --%
    oper mkNTable1518 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ądź";
      SF Sg Gen => x + "ędzia";
      SF Sg Dat => x + "ędziowi";
      SF Sg Acc => x + "ądź";
      SF Sg Instr => x + "ędziem";
      SF Sg Loc => x + "ędziu";
      SF Sg Voc => x + "ędziu";
      SF Pl Nom => x + "ędzie";
      SF Pl Gen => x + "ędzi";
      SF Pl Dat => x + "ędziom";
      SF Pl Acc => x + "ędzie";
      SF Pl Instr => x + "ędziami";
      SF Pl Loc => x + "ędziach";
      SF Pl Voc => x + "ędzie"
    };

    oper mkNTable1519: Str -> SubstForm => Str; --%
    oper mkNTable1519 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "żółtek";
      SF Sg Gen => x + "żółtka";
      SF Sg Dat => x + "żółtkowi";
      SF Sg Acc => x + "żółtka";
      SF Sg Instr => x + "żółtkiem";
      SF Sg Loc => x + "żółtku";
      SF Sg Voc => x + "żółtku";
      SF Pl Nom => x + "Żółtkowie";
      SF Pl Gen => x + "żółtków";
      SF Pl Dat => x + "żółtkom";
      SF Pl Acc => x + "żółtków";
      SF Pl Instr => x + "żółtkami";
      SF Pl Loc => x + "żółtkach";
      SF Pl Voc => x + "Żółtkowie"
    };

    oper mkNTable1520: Str -> SubstForm => Str; --%
    oper mkNTable1520 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ćma";
      SF Sg Gen => x + "ćmy";
      SF Sg Dat => x + "ćmie";
      SF Sg Acc => x + "ćmę";
      SF Sg Instr => x + "ćmą";
      SF Sg Loc => x + "ćmie";
      SF Sg Voc => x + "ćmo";
      SF Pl Nom => x + "ćmy";
      SF Pl Gen => x + "ciem";
      SF Pl Dat => x + "ćmom";
      SF Pl Acc => x + "ćmy";
      SF Pl Instr => x + "ćmami";
      SF Pl Loc => x + "ćmach";
      SF Pl Voc => x + "ćmy"
    };

    oper mkNTable1521: Str -> SubstForm => Str; --%
    oper mkNTable1521 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ćwik";
      SF Sg Gen => x + "ćwika";
      SF Sg Dat => x + "ćwikowi";
      SF Sg Acc => x + "ćwika";
      SF Sg Instr => x + "ćwikiem";
      SF Sg Loc => x + "ćwiku";
      SF Sg Voc => x + "ćwiku";
      SF Pl Nom => x + "Ćwikowie";
      SF Pl Gen => x + "ćwików";
      SF Pl Dat => x + "ćwikom";
      SF Pl Acc => x + "ćwików";
      SF Pl Instr => x + "ćwikami";
      SF Pl Loc => x + "ćwikach";
      SF Pl Voc => x + "Ćwikowie"
    };

    oper mkNTable0005: Str -> SubstForm => Str; --%
    oper mkNTable0005 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0014: Str -> SubstForm => Str; --%
    oper mkNTable0014 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owu";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0019: Str -> SubstForm => Str; --%
    oper mkNTable0019 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0020: Str -> SubstForm => Str; --%
    oper mkNTable0020 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0027: Str -> SubstForm => Str; --%
    oper mkNTable0027 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0034: Str -> SubstForm => Str; --%
    oper mkNTable0034 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0041: Str -> SubstForm => Str; --%
    oper mkNTable0041 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0048: Str -> SubstForm => Str; --%
    oper mkNTable0048 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0053: Str -> SubstForm => Str; --%
    oper mkNTable0053 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0066: Str -> SubstForm => Str; --%
    oper mkNTable0066 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owowi";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0075: Str -> SubstForm => Str; --%
    oper mkNTable0075 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0085: Str -> SubstForm => Str; --%
    oper mkNTable0085 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "tu";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "t";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0086: Str -> SubstForm => Str; --%
    oper mkNTable0086 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0094: Str -> SubstForm => Str; --%
    oper mkNTable0094 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "x";
      SF Sg Gen => x + "ksa";
      SF Sg Dat => x + "ksowi";
      SF Sg Acc => x + "ksa";
      SF Sg Instr => x + "ksem";
      SF Sg Loc => x + "ksie";
      SF Sg Voc => x + "ksie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0101: Str -> SubstForm => Str; --%
    oper mkNTable0101 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "augustów";
      SF Sg Gen => x + "Augustowa";
      SF Sg Dat => x + "Augustowu";
      SF Sg Acc => x + "augustów";
      SF Sg Instr => x + "Augustowem";
      SF Sg Loc => x + "Augustowie";
      SF Sg Voc => x + "Augustowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0108: Str -> SubstForm => Str; --%
    oper mkNTable0108 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "x";
      SF Sg Gen => x + "ksu";
      SF Sg Dat => x + "ksowi";
      SF Sg Acc => x + "x";
      SF Sg Instr => x + "ksem";
      SF Sg Loc => x + "ksie";
      SF Sg Voc => x + "ksie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0110: Str -> SubstForm => Str; --%
    oper mkNTable0110 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "stu";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "st";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0115: Str -> SubstForm => Str; --%
    oper mkNTable0115 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ł";
      SF Sg Gen => x + "łu";
      SF Sg Dat => x + "łowi";
      SF Sg Acc => x + "ł";
      SF Sg Instr => x + "łem";
      SF Sg Loc => x + "le";
      SF Sg Voc => x + "le";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0130: Str -> SubstForm => Str; --%
    oper mkNTable0130 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "bałtów";
      SF Sg Gen => x + "Bałtowa";
      SF Sg Dat => x + "Bałtowowi";
      SF Sg Acc => x + "bałtów";
      SF Sg Instr => x + "Bałtowem";
      SF Sg Loc => x + "Bałtowie";
      SF Sg Voc => x + "Bałtowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0135: Str -> SubstForm => Str; --%
    oper mkNTable0135 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0146: Str -> SubstForm => Str; --%
    oper mkNTable0146 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ec";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0152: Str -> SubstForm => Str; --%
    oper mkNTable0152 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "ń";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0162: Str -> SubstForm => Str; --%
    oper mkNTable0162 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "niec";
      SF Sg Gen => x + "ńca";
      SF Sg Dat => x + "ńcowi";
      SF Sg Acc => x + "niec";
      SF Sg Instr => x + "ńcem";
      SF Sg Loc => x + "ńcu";
      SF Sg Voc => x + "ńcu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0172: Str -> SubstForm => Str; --%
    oper mkNTable0172 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "bolków";
      SF Sg Gen => x + "Bolkowa";
      SF Sg Dat => x + "Bolkowowi";
      SF Sg Acc => x + "bolków";
      SF Sg Instr => x + "Bolkowem";
      SF Sg Loc => x + "Bolkowie";
      SF Sg Voc => x + "Bolkowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0178: Str -> SubstForm => Str; --%
    oper mkNTable0178 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "borów";
      SF Sg Gen => x + "Borowa";
      SF Sg Dat => x + "Borowu";
      SF Sg Acc => x + "borów";
      SF Sg Instr => x + "Borowem";
      SF Sg Loc => x + "Borowie";
      SF Sg Voc => x + "Borowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0191: Str -> SubstForm => Str; --%
    oper mkNTable0191 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ć";
      SF Sg Gen => x + "cia";
      SF Sg Dat => x + "ciowi";
      SF Sg Acc => x + "ć";
      SF Sg Instr => x + "ciem";
      SF Sg Loc => x + "ciu";
      SF Sg Voc => x + "ciu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0198: Str -> SubstForm => Str; --%
    oper mkNTable0198 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "ń";
      SF Sg Gen => x + "nia";
      SF Sg Dat => x + "niowi";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niem";
      SF Sg Loc => x + "niu";
      SF Sg Voc => x + "niu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0200: Str -> SubstForm => Str; --%
    oper mkNTable0200 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bytów";
      SF Sg Gen => x + "Bytowa";
      SF Sg Dat => x + "Bytowowi";
      SF Sg Acc => x + "bytów";
      SF Sg Instr => x + "Bytowem";
      SF Sg Loc => x + "Bytowie";
      SF Sg Voc => x + "Bytowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0202: Str -> SubstForm => Str; --%
    oper mkNTable0202 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "bąków";
      SF Sg Gen => x + "Bąkowa";
      SF Sg Dat => x + "Bąkowu";
      SF Sg Acc => x + "bąków";
      SF Sg Instr => x + "Bąkowem";
      SF Sg Loc => x + "Bąkowie";
      SF Sg Voc => x + "Bąkowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0204: Str -> SubstForm => Str; --%
    oper mkNTable0204 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "błędów";
      SF Sg Gen => x + "Błędowa";
      SF Sg Dat => x + "Błędowu";
      SF Sg Acc => x + "błędów";
      SF Sg Instr => x + "Błędowem";
      SF Sg Loc => x + "Błędowie";
      SF Sg Voc => x + "Błędowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0210: Str -> SubstForm => Str; --%
    oper mkNTable0210 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "celestynów";
      SF Sg Gen => x + "Celestynowa";
      SF Sg Dat => x + "Celestynowowi";
      SF Sg Acc => x + "celestynów";
      SF Sg Instr => x + "Celestynowem";
      SF Sg Loc => x + "Celestynowie";
      SF Sg Voc => x + "Celestynowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0216: Str -> SubstForm => Str; --%
    oper mkNTable0216 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ek";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0219: Str -> SubstForm => Str; --%
    oper mkNTable0219 lexem = 
      let x = Predef.tk 9 lexem in
    table { 
      SF Sg Nom => x + "chochołów";
      SF Sg Gen => x + "Chochołowa";
      SF Sg Dat => x + "Chochołowowi";
      SF Sg Acc => x + "chochołów";
      SF Sg Instr => x + "Chochołowem";
      SF Sg Loc => x + "Chochołowie";
      SF Sg Voc => x + "Chochołowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0220: Str -> SubstForm => Str; --%
    oper mkNTable0220 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "chodów";
      SF Sg Gen => x + "Chodowa";
      SF Sg Dat => x + "Chodowowi";
      SF Sg Acc => x + "chodów";
      SF Sg Instr => x + "Chodowem";
      SF Sg Loc => x + "Chodowie";
      SF Sg Voc => x + "Chodowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0225: Str -> SubstForm => Str; --%
    oper mkNTable0225 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "chrzanów";
      SF Sg Gen => x + "Chrzanowa";
      SF Sg Dat => x + "Chrzanowu";
      SF Sg Acc => x + "chrzanów";
      SF Sg Instr => x + "Chrzanowem";
      SF Sg Loc => x + "Chrzanowie";
      SF Sg Voc => x + "Chrzanowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0229: Str -> SubstForm => Str; --%
    oper mkNTable0229 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0234: Str -> SubstForm => Str; --%
    oper mkNTable0234 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "cycero";
      SF Sg Gen => x + "Cycerona";
      SF Sg Dat => x + "Cyceronowi";
      SF Sg Acc => x + "Cycerona";
      SF Sg Instr => x + "Cyceronem";
      SF Sg Loc => x + "Cyceronie";
      SF Sg Voc => x + "cycero";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0235: Str -> SubstForm => Str; --%
    oper mkNTable0235 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "cyców";
      SF Sg Gen => x + "Cycowa";
      SF Sg Dat => x + "Cycowowi";
      SF Sg Acc => x + "cyców";
      SF Sg Instr => x + "Cycowem";
      SF Sg Loc => x + "Cycowie";
      SF Sg Voc => x + "Cycowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0248: Str -> SubstForm => Str; --%
    oper mkNTable0248 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "czerniaków";
      SF Sg Gen => x + "Czerniakowa";
      SF Sg Dat => x + "Czerniakowowi";
      SF Sg Acc => x + "Czerniakowa";
      SF Sg Instr => x + "Czerniakowem";
      SF Sg Loc => x + "Czerniakowie";
      SF Sg Voc => x + "Czerniakowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0249: Str -> SubstForm => Str; --%
    oper mkNTable0249 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "czerniaków";
      SF Sg Gen => x + "Czerniakowa";
      SF Sg Dat => x + "Czerniakowowi";
      SF Sg Acc => x + "czerniaków";
      SF Sg Instr => x + "Czerniakowem";
      SF Sg Loc => x + "Czerniakowie";
      SF Sg Voc => x + "Czerniakowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0255: Str -> SubstForm => Str; --%
    oper mkNTable0255 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0270: Str -> SubstForm => Str; --%
    oper mkNTable0270 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "ta";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0288: Str -> SubstForm => Str; --%
    oper mkNTable0288 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "ie";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0291: Str -> SubstForm => Str; --%
    oper mkNTable0291 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "dynów";
      SF Sg Gen => x + "Dynowa";
      SF Sg Dat => x + "Dynowowi";
      SF Sg Acc => x + "dynów";
      SF Sg Instr => x + "Dynowem";
      SF Sg Loc => x + "Dynowie";
      SF Sg Voc => x + "Dynowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0292: Str -> SubstForm => Str; --%
    oper mkNTable0292 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "iec";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0293: Str -> SubstForm => Str; --%
    oper mkNTable0293 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "dzików";
      SF Sg Gen => x + "Dzikowa";
      SF Sg Dat => x + "Dzikowu";
      SF Sg Acc => x + "dzików";
      SF Sg Instr => x + "Dzikowem";
      SF Sg Loc => x + "Dzikowie";
      SF Sg Voc => x + "Dzikowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0299: Str -> SubstForm => Str; --%
    oper mkNTable0299 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0308: Str -> SubstForm => Str; --%
    oper mkNTable0308 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "st";
      SF Sg Gen => x + "sta";
      SF Sg Dat => x + "stowi";
      SF Sg Acc => x + "sta";
      SF Sg Instr => x + "stem";
      SF Sg Loc => x + "ście";
      SF Sg Voc => x + "ście";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0317: Str -> SubstForm => Str; --%
    oper mkNTable0317 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "filipów";
      SF Sg Gen => x + "Filipowa";
      SF Sg Dat => x + "Filipowowi";
      SF Sg Acc => x + "filipów";
      SF Sg Instr => x + "Filipowem";
      SF Sg Loc => x + "Filipowie";
      SF Sg Voc => x + "Filipowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0336: Str -> SubstForm => Str; --%
    oper mkNTable0336 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "garbów";
      SF Sg Gen => x + "Garbowa";
      SF Sg Dat => x + "Garbowowi";
      SF Sg Acc => x + "garbów";
      SF Sg Instr => x + "Garbowem";
      SF Sg Loc => x + "Garbowie";
      SF Sg Voc => x + "Garbowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0347: Str -> SubstForm => Str; --%
    oper mkNTable0347 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "gniewoszów";
      SF Sg Gen => x + "Gniewoszowa";
      SF Sg Dat => x + "Gniewoszowowi";
      SF Sg Acc => x + "gniewoszów";
      SF Sg Instr => x + "Gniewoszowem";
      SF Sg Loc => x + "Gniewoszowie";
      SF Sg Voc => x + "Gniewoszowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0348: Str -> SubstForm => Str; --%
    oper mkNTable0348 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "ia";
      SF Sg Dat => x + "iowi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "iem";
      SF Sg Loc => x + "iu";
      SF Sg Voc => x + "iu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0362: Str -> SubstForm => Str; --%
    oper mkNTable0362 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "grabów";
      SF Sg Gen => x + "Grabowa";
      SF Sg Dat => x + "Grabowu";
      SF Sg Acc => x + "grabów";
      SF Sg Instr => x + "Grabowem";
      SF Sg Loc => x + "Grabowie";
      SF Sg Voc => x + "Grabowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0368: Str -> SubstForm => Str; --%
    oper mkNTable0368 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "grochów";
      SF Sg Gen => x + "grochowa";
      SF Sg Dat => x + "Grochowu";
      SF Sg Acc => x + "grochów";
      SF Sg Instr => x + "Grochowem";
      SF Sg Loc => x + "Grochowie";
      SF Sg Voc => x + "Grochowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0376: Str -> SubstForm => Str; --%
    oper mkNTable0376 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "grzybów";
      SF Sg Gen => x + "grzybowa";
      SF Sg Dat => x + "Grzybowu";
      SF Sg Acc => x + "grzybów";
      SF Sg Instr => x + "Grzybowem";
      SF Sg Loc => x + "Grzybowie";
      SF Sg Voc => x + "Grzybowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0380: Str -> SubstForm => Str; --%
    oper mkNTable0380 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "głogów";
      SF Sg Gen => x + "Głogowa";
      SF Sg Dat => x + "Głogowu";
      SF Sg Acc => x + "głogów";
      SF Sg Instr => x + "Głogowem";
      SF Sg Loc => x + "Głogowie";
      SF Sg Voc => x + "Głogowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0394: Str -> SubstForm => Str; --%
    oper mkNTable0394 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0403: Str -> SubstForm => Str; --%
    oper mkNTable0403 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "m";
      SF Sg Loc => x + "m";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0405: Str -> SubstForm => Str; --%
    oper mkNTable0405 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ódz";
      SF Sg Gen => x + "odza";
      SF Sg Dat => x + "odzowi";
      SF Sg Acc => x + "ódz";
      SF Sg Instr => x + "odzem";
      SF Sg Loc => x + "odzu";
      SF Sg Voc => x + "odzu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0418: Str -> SubstForm => Str; --%
    oper mkNTable0418 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "em";
      SF Sg Voc => x + "e";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0422: Str -> SubstForm => Str; --%
    oper mkNTable0422 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ów";
      SF Sg Gen => x + "owa";
      SF Sg Dat => x + "owowi";
      SF Sg Acc => x + "owa";
      SF Sg Instr => x + "owem";
      SF Sg Loc => x + "owie";
      SF Sg Voc => x + "owie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0432: Str -> SubstForm => Str; --%
    oper mkNTable0432 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "jaworów";
      SF Sg Gen => x + "Jaworowa";
      SF Sg Dat => x + "Jaworowowi";
      SF Sg Acc => x + "jaworów";
      SF Sg Instr => x + "Jaworowem";
      SF Sg Loc => x + "Jaworowie";
      SF Sg Voc => x + "Jaworowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0439: Str -> SubstForm => Str; --%
    oper mkNTable0439 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "jeżów";
      SF Sg Gen => x + "Jeżowa";
      SF Sg Dat => x + "Jeżowowi";
      SF Sg Acc => x + "jeżów";
      SF Sg Instr => x + "Jeżowem";
      SF Sg Loc => x + "Jeżowie";
      SF Sg Voc => x + "Jeżowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0443: Str -> SubstForm => Str; --%
    oper mkNTable0443 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "jordanów";
      SF Sg Gen => x + "Jordanowa";
      SF Sg Dat => x + "Jordanowu";
      SF Sg Acc => x + "jordanów";
      SF Sg Instr => x + "Jordanowem";
      SF Sg Loc => x + "Jordanowie";
      SF Sg Voc => x + "Jordanowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0450: Str -> SubstForm => Str; --%
    oper mkNTable0450 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "karczów";
      SF Sg Gen => x + "Karczowa";
      SF Sg Dat => x + "Karczowowi";
      SF Sg Acc => x + "karczów";
      SF Sg Instr => x + "Karczowem";
      SF Sg Loc => x + "Karczowie";
      SF Sg Voc => x + "Karczowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0469: Str -> SubstForm => Str; --%
    oper mkNTable0469 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kijów";
      SF Sg Gen => x + "Kijowa";
      SF Sg Dat => x + "Kijowowi";
      SF Sg Acc => x + "kijów";
      SF Sg Instr => x + "Kijowem";
      SF Sg Loc => x + "Kijowie";
      SF Sg Voc => x + "Kijowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0476: Str -> SubstForm => Str; --%
    oper mkNTable0476 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "knurów";
      SF Sg Gen => x + "Knurowa";
      SF Sg Dat => x + "Knurowowi";
      SF Sg Acc => x + "knurów";
      SF Sg Instr => x + "Knurowem";
      SF Sg Loc => x + "Knurowie";
      SF Sg Voc => x + "Knurowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0478: Str -> SubstForm => Str; --%
    oper mkNTable0478 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Kolbe";
      SF Sg Gen => x + "Kolbego";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "Kolbego";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "Kolbe";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0480: Str -> SubstForm => Str; --%
    oper mkNTable0480 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "komarów";
      SF Sg Gen => x + "Komarowa";
      SF Sg Dat => x + "Komarowu";
      SF Sg Acc => x + "komarów";
      SF Sg Instr => x + "Komarowem";
      SF Sg Loc => x + "Komarowie";
      SF Sg Voc => x + "Komarowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0482: Str -> SubstForm => Str; --%
    oper mkNTable0482 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "koniaków";
      SF Sg Gen => x + "Koniakowa";
      SF Sg Dat => x + "Koniakowowi";
      SF Sg Acc => x + "koniaków";
      SF Sg Instr => x + "Koniakowem";
      SF Sg Loc => x + "Koniakowie";
      SF Sg Voc => x + "Koniakowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0492: Str -> SubstForm => Str; --%
    oper mkNTable0492 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kosów";
      SF Sg Gen => x + "Kosowa";
      SF Sg Dat => x + "Kosowu";
      SF Sg Acc => x + "kosów";
      SF Sg Instr => x + "Kosowem";
      SF Sg Loc => x + "Kosowie";
      SF Sg Voc => x + "Kosowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0499: Str -> SubstForm => Str; --%
    oper mkNTable0499 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "kozłów";
      SF Sg Gen => x + "Kozłowa";
      SF Sg Dat => x + "Kozłowu";
      SF Sg Acc => x + "kozłów";
      SF Sg Instr => x + "Kozłowem";
      SF Sg Loc => x + "Kozłowie";
      SF Sg Voc => x + "Kozłowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0501: Str -> SubstForm => Str; --%
    oper mkNTable0501 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "kożuchów";
      SF Sg Gen => x + "Kożuchowa";
      SF Sg Dat => x + "Kożuchowowi";
      SF Sg Acc => x + "kożuchów";
      SF Sg Instr => x + "Kożuchowem";
      SF Sg Loc => x + "Kożuchowie";
      SF Sg Voc => x + "Kożuchowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0524: Str -> SubstForm => Str; --%
    oper mkNTable0524 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "kurów";
      SF Sg Gen => x + "Kurowa";
      SF Sg Dat => x + "Kurowu";
      SF Sg Acc => x + "kurów";
      SF Sg Instr => x + "Kurowem";
      SF Sg Loc => x + "Kurowie";
      SF Sg Voc => x + "Kurowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0530: Str -> SubstForm => Str; --%
    oper mkNTable0530 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "Lampe";
      SF Sg Gen => x + "Lampego";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "Lampego";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "Lampe";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0546: Str -> SubstForm => Str; --%
    oper mkNTable0546 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0551: Str -> SubstForm => Str; --%
    oper mkNTable0551 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "lisków";
      SF Sg Gen => x + "Liskowa";
      SF Sg Dat => x + "Liskowowi";
      SF Sg Acc => x + "lisków";
      SF Sg Instr => x + "Liskowem";
      SF Sg Loc => x + "Liskowie";
      SF Sg Voc => x + "Liskowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0556: Str -> SubstForm => Str; --%
    oper mkNTable0556 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "lwów";
      SF Sg Gen => x + "Lwowa";
      SF Sg Dat => x + "Lwowu";
      SF Sg Acc => x + "lwów";
      SF Sg Instr => x + "Lwowem";
      SF Sg Loc => x + "Lwowie";
      SF Sg Voc => x + "Lwowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0559: Str -> SubstForm => Str; --%
    oper mkNTable0559 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "machów";
      SF Sg Gen => x + "Machowa";
      SF Sg Dat => x + "Machowowi";
      SF Sg Acc => x + "machów";
      SF Sg Instr => x + "Machowem";
      SF Sg Loc => x + "Machowie";
      SF Sg Voc => x + "Machowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0569: Str -> SubstForm => Str; --%
    oper mkNTable0569 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "maków";
      SF Sg Gen => x + "Makowa";
      SF Sg Dat => x + "Makowu";
      SF Sg Acc => x + "maków";
      SF Sg Instr => x + "Makowem";
      SF Sg Loc => x + "Makowie";
      SF Sg Voc => x + "Makowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0582: Str -> SubstForm => Str; --%
    oper mkNTable0582 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "t";
      SF Sg Gen => x + "ta";
      SF Sg Dat => x + "towi";
      SF Sg Acc => x + "t";
      SF Sg Instr => x + "tem";
      SF Sg Loc => x + "cie";
      SF Sg Voc => x + "cie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0602: Str -> SubstForm => Str; --%
    oper mkNTable0602 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0603: Str -> SubstForm => Str; --%
    oper mkNTable0603 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "o";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0604: Str -> SubstForm => Str; --%
    oper mkNTable0604 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "miechów";
      SF Sg Gen => x + "Miechowa";
      SF Sg Dat => x + "Miechowu";
      SF Sg Acc => x + "miechów";
      SF Sg Instr => x + "Miechowem";
      SF Sg Loc => x + "Miechowie";
      SF Sg Voc => x + "Miechowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0612: Str -> SubstForm => Str; --%
    oper mkNTable0612 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Minh";
      SF Sg Gen => x + "Minha";
      SF Sg Dat => x + "Minhowi";
      SF Sg Acc => x + "Minha";
      SF Sg Instr => x + "Minhem";
      SF Sg Loc => x + "minie";
      SF Sg Voc => x + "minie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0613: Str -> SubstForm => Str; --%
    oper mkNTable0613 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Minh";
      SF Sg Gen => x + "Minhu";
      SF Sg Dat => x + "Minhowi";
      SF Sg Acc => x + "Minh";
      SF Sg Instr => x + "Minhem";
      SF Sg Loc => x + "minie";
      SF Sg Voc => x + "minie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0619: Str -> SubstForm => Str; --%
    oper mkNTable0619 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "mniszków";
      SF Sg Gen => x + "Mniszkowa";
      SF Sg Dat => x + "Mniszkowowi";
      SF Sg Acc => x + "mniszków";
      SF Sg Instr => x + "Mniszkowem";
      SF Sg Loc => x + "mniszkowie";
      SF Sg Voc => x + "mniszkowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0630: Str -> SubstForm => Str; --%
    oper mkNTable0630 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "murów";
      SF Sg Gen => x + "Murowa";
      SF Sg Dat => x + "Murowowi";
      SF Sg Acc => x + "murów";
      SF Sg Instr => x + "Murowem";
      SF Sg Loc => x + "Murowie";
      SF Sg Voc => x + "Murowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0634: Str -> SubstForm => Str; --%
    oper mkNTable0634 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "namysłów";
      SF Sg Gen => x + "Namysłowa";
      SF Sg Dat => x + "Namysłowowi";
      SF Sg Acc => x + "namysłów";
      SF Sg Instr => x + "Namysłowem";
      SF Sg Loc => x + "Namysłowie";
      SF Sg Voc => x + "Namysłowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0641: Str -> SubstForm => Str; --%
    oper mkNTable0641 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "nałęczów";
      SF Sg Gen => x + "Nałęczowa";
      SF Sg Dat => x + "Nałęczowowi";
      SF Sg Acc => x + "nałęczów";
      SF Sg Instr => x + "Nałęczowem";
      SF Sg Loc => x + "Nałęczowie";
      SF Sg Voc => x + "Nałęczowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0647: Str -> SubstForm => Str; --%
    oper mkNTable0647 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "en";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nowi";
      SF Sg Acc => x + "en";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0652: Str -> SubstForm => Str; --%
    oper mkNTable0652 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ód";
      SF Sg Gen => x + "odu";
      SF Sg Dat => x + "odowi";
      SF Sg Acc => x + "ód";
      SF Sg Instr => x + "odem";
      SF Sg Loc => x + "odzie";
      SF Sg Voc => x + "odzie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0655: Str -> SubstForm => Str; --%
    oper mkNTable0655 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0657: Str -> SubstForm => Str; --%
    oper mkNTable0657 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "ojców";
      SF Sg Gen => x + "Ojcowa";
      SF Sg Dat => x + "Ojcowowi";
      SF Sg Acc => x + "ojców";
      SF Sg Instr => x + "Ojcowem";
      SF Sg Loc => x + "ojcowie";
      SF Sg Voc => x + "ojcowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0661: Str -> SubstForm => Str; --%
    oper mkNTable0661 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ka";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ka";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0662: Str -> SubstForm => Str; --%
    oper mkNTable0662 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "opatów";
      SF Sg Gen => x + "Opatowa";
      SF Sg Dat => x + "Opatowowi";
      SF Sg Acc => x + "opatów";
      SF Sg Instr => x + "Opatowem";
      SF Sg Loc => x + "Opatowie";
      SF Sg Voc => x + "Opatowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0663: Str -> SubstForm => Str; --%
    oper mkNTable0663 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "oporów";
      SF Sg Gen => x + "Oporowa";
      SF Sg Dat => x + "Oporowu";
      SF Sg Acc => x + "oporów";
      SF Sg Instr => x + "Oporowem";
      SF Sg Loc => x + "Oporowie";
      SF Sg Voc => x + "Oporowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0666: Str -> SubstForm => Str; --%
    oper mkNTable0666 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "osiek";
      SF Sg Gen => x + "Osieku";
      SF Sg Dat => x + "Osiekowi";
      SF Sg Acc => x + "osiek";
      SF Sg Instr => x + "Osiekiem";
      SF Sg Loc => x + "Osieku";
      SF Sg Voc => x + "Osieku";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0671: Str -> SubstForm => Str; --%
    oper mkNTable0671 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "ozorków";
      SF Sg Gen => x + "Ozorkowa";
      SF Sg Dat => x + "Ozorkowowi";
      SF Sg Acc => x + "ozorków";
      SF Sg Instr => x + "Ozorkowem";
      SF Sg Loc => x + "Ozorkowie";
      SF Sg Voc => x + "Ozorkowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0676: Str -> SubstForm => Str; --%
    oper mkNTable0676 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "pacanów";
      SF Sg Gen => x + "Pacanowa";
      SF Sg Dat => x + "Pacanowowi";
      SF Sg Acc => x + "pacanów";
      SF Sg Instr => x + "Pacanowem";
      SF Sg Loc => x + "Pacanowie";
      SF Sg Voc => x + "Pacanowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0683: Str -> SubstForm => Str; --%
    oper mkNTable0683 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "i";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "i";
      SF Sg Voc => x + "o";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0687: Str -> SubstForm => Str; --%
    oper mkNTable0687 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0695: Str -> SubstForm => Str; --%
    oper mkNTable0695 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "piastów";
      SF Sg Gen => x + "Piastowa";
      SF Sg Dat => x + "Piastowu";
      SF Sg Acc => x + "piastów";
      SF Sg Instr => x + "Piastowem";
      SF Sg Loc => x + "piastowie";
      SF Sg Voc => x + "piastowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0699: Str -> SubstForm => Str; --%
    oper mkNTable0699 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0705: Str -> SubstForm => Str; --%
    oper mkNTable0705 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "na";
      SF Sg Dat => x + "nowi";
      SF Sg Acc => x + "na";
      SF Sg Instr => x + "nem";
      SF Sg Loc => x + "nie";
      SF Sg Voc => x + "nie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0712: Str -> SubstForm => Str; --%
    oper mkNTable0712 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "polanów";
      SF Sg Gen => x + "Polanowa";
      SF Sg Dat => x + "Polanowu";
      SF Sg Acc => x + "polanów";
      SF Sg Instr => x + "Polanowem";
      SF Sg Loc => x + "Polanowie";
      SF Sg Voc => x + "Polanowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0721: Str -> SubstForm => Str; --%
    oper mkNTable0721 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "Prut";
      SF Sg Gen => x + "Prutu";
      SF Sg Dat => x + "Prutowi";
      SF Sg Acc => x + "Prut";
      SF Sg Instr => x + "Prutem";
      SF Sg Loc => x + "prucie";
      SF Sg Voc => x + "prucie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0728: Str -> SubstForm => Str; --%
    oper mkNTable0728 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "u";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0733: Str -> SubstForm => Str; --%
    oper mkNTable0733 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "raków";
      SF Sg Gen => x + "Rakowa";
      SF Sg Dat => x + "Rakowu";
      SF Sg Acc => x + "raków";
      SF Sg Instr => x + "Rakowem";
      SF Sg Loc => x + "Rakowie";
      SF Sg Voc => x + "Rakowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0738: Str -> SubstForm => Str; --%
    oper mkNTable0738 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "rogów";
      SF Sg Gen => x + "Rogowa";
      SF Sg Dat => x + "Rogowu";
      SF Sg Acc => x + "rogów";
      SF Sg Instr => x + "Rogowem";
      SF Sg Loc => x + "Rogowie";
      SF Sg Voc => x + "Rogowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0744: Str -> SubstForm => Str; --%
    oper mkNTable0744 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "ę";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "o";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0745: Str -> SubstForm => Str; --%
    oper mkNTable0745 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "rożnów";
      SF Sg Gen => x + "Rożnowa";
      SF Sg Dat => x + "Rożnowu";
      SF Sg Acc => x + "rożnów";
      SF Sg Instr => x + "Rożnowem";
      SF Sg Loc => x + "Rożnowie";
      SF Sg Voc => x + "Rożnowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0749: Str -> SubstForm => Str; --%
    oper mkNTable0749 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "siec";
      SF Sg Gen => x + "śca";
      SF Sg Dat => x + "ścowi";
      SF Sg Acc => x + "siec";
      SF Sg Instr => x + "ścem";
      SF Sg Loc => x + "ścu";
      SF Sg Voc => x + "ścu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0756: Str -> SubstForm => Str; --%
    oper mkNTable0756 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "owi";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0758: Str -> SubstForm => Str; --%
    oper mkNTable0758 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Sambor";
      SF Sg Gen => x + "Sambora";
      SF Sg Dat => x + "Samborowi";
      SF Sg Acc => x + "Sambor";
      SF Sg Instr => x + "Samborem";
      SF Sg Loc => x + "samborze";
      SF Sg Voc => x + "samborze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0767: Str -> SubstForm => Str; --%
    oper mkNTable0767 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "Sforza";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0770: Str -> SubstForm => Str; --%
    oper mkNTable0770 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Siemień";
      SF Sg Gen => x + "siemienia";
      SF Sg Dat => x + "Siemieniowi";
      SF Sg Acc => x + "Siemień";
      SF Sg Instr => x + "siemieniem";
      SF Sg Loc => x + "siemieniu";
      SF Sg Voc => x + "siemieniu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0776: Str -> SubstForm => Str; --%
    oper mkNTable0776 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "ra";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0777: Str -> SubstForm => Str; --%
    oper mkNTable0777 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ra";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "er";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0783: Str -> SubstForm => Str; --%
    oper mkNTable0783 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ór";
      SF Sg Gen => x + "oru";
      SF Sg Dat => x + "orowi";
      SF Sg Acc => x + "ór";
      SF Sg Instr => x + "orem";
      SF Sg Loc => x + "orze";
      SF Sg Voc => x + "orze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0786: Str -> SubstForm => Str; --%
    oper mkNTable0786 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "sokołów";
      SF Sg Gen => x + "Sokołowa";
      SF Sg Dat => x + "Sokołowowi";
      SF Sg Acc => x + "sokołów";
      SF Sg Instr => x + "Sokołowem";
      SF Sg Loc => x + "Sokołowie";
      SF Sg Voc => x + "Sokołowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0790: Str -> SubstForm => Str; --%
    oper mkNTable0790 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0800: Str -> SubstForm => Str; --%
    oper mkNTable0800 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "stryków";
      SF Sg Gen => x + "Strykowa";
      SF Sg Dat => x + "Strykowu";
      SF Sg Acc => x + "stryków";
      SF Sg Instr => x + "Strykowem";
      SF Sg Loc => x + "strykowie";
      SF Sg Voc => x + "strykowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0835: Str -> SubstForm => Str; --%
    oper mkNTable0835 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "trojanów";
      SF Sg Gen => x + "Trojanowa";
      SF Sg Dat => x + "Trojanowu";
      SF Sg Acc => x + "trojanów";
      SF Sg Instr => x + "Trojanowem";
      SF Sg Loc => x + "Trojanowie";
      SF Sg Voc => x + "Trojanowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0839: Str -> SubstForm => Str; --%
    oper mkNTable0839 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0843: Str -> SubstForm => Str; --%
    oper mkNTable0843 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "er";
      SF Sg Gen => x + "ru";
      SF Sg Dat => x + "rowi";
      SF Sg Acc => x + "er";
      SF Sg Instr => x + "rem";
      SF Sg Loc => x + "rze";
      SF Sg Voc => x + "rze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0852: Str -> SubstForm => Str; --%
    oper mkNTable0852 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "urzędów";
      SF Sg Gen => x + "Urzędowa";
      SF Sg Dat => x + "Urzędowowi";
      SF Sg Acc => x + "urzędów";
      SF Sg Instr => x + "Urzędowem";
      SF Sg Loc => x + "Urzędowie";
      SF Sg Voc => x + "Urzędowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0869: Str -> SubstForm => Str; --%
    oper mkNTable0869 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "el";
      SF Sg Gen => x + "la";
      SF Sg Dat => x + "lowi";
      SF Sg Acc => x + "la";
      SF Sg Instr => x + "lem";
      SF Sg Loc => x + "lu";
      SF Sg Voc => x + "lu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0872: Str -> SubstForm => Str; --%
    oper mkNTable0872 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0886: Str -> SubstForm => Str; --%
    oper mkNTable0886 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "wilków";
      SF Sg Gen => x + "Wilkowa";
      SF Sg Dat => x + "Wilkowu";
      SF Sg Acc => x + "wilków";
      SF Sg Instr => x + "Wilkowem";
      SF Sg Loc => x + "Wilkowie";
      SF Sg Voc => x + "Wilkowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0890: Str -> SubstForm => Str; --%
    oper mkNTable0890 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "wiązów";
      SF Sg Gen => x + "Wiązowa";
      SF Sg Dat => x + "Wiązowowi";
      SF Sg Acc => x + "wiązów";
      SF Sg Instr => x + "Wiązowem";
      SF Sg Loc => x + "Wiązowie";
      SF Sg Voc => x + "Wiązowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0893: Str -> SubstForm => Str; --%
    oper mkNTable0893 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "wołów";
      SF Sg Gen => x + "Wołowa";
      SF Sg Dat => x + "Wołowowi";
      SF Sg Acc => x + "wołów";
      SF Sg Instr => x + "Wołowem";
      SF Sg Loc => x + "Wołowie";
      SF Sg Voc => x + "Wołowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0904: Str -> SubstForm => Str; --%
    oper mkNTable0904 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "zaborów";
      SF Sg Gen => x + "Zaborowa";
      SF Sg Dat => x + "Zaborowu";
      SF Sg Acc => x + "zaborów";
      SF Sg Instr => x + "Zaborowem";
      SF Sg Loc => x + "Zaborowie";
      SF Sg Voc => x + "Zaborowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0910: Str -> SubstForm => Str; --%
    oper mkNTable0910 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "zelów";
      SF Sg Gen => x + "Zelowa";
      SF Sg Dat => x + "Zelowowi";
      SF Sg Acc => x + "zelów";
      SF Sg Instr => x + "Zelowem";
      SF Sg Loc => x + "Zelowie";
      SF Sg Voc => x + "Zelowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0911: Str -> SubstForm => Str; --%
    oper mkNTable0911 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "u";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0916: Str -> SubstForm => Str; --%
    oper mkNTable0916 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "złotów";
      SF Sg Gen => x + "Złotowa";
      SF Sg Dat => x + "Złotowu";
      SF Sg Acc => x + "złotów";
      SF Sg Instr => x + "Złotowem";
      SF Sg Loc => x + "Złotowie";
      SF Sg Voc => x + "Złotowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0962: Str -> SubstForm => Str; --%
    oper mkNTable0962 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1011: Str -> SubstForm => Str; --%
    oper mkNTable1011 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1060: Str -> SubstForm => Str; --%
    oper mkNTable1060 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1063: Str -> SubstForm => Str; --%
    oper mkNTable1063 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1077: Str -> SubstForm => Str; --%
    oper mkNTable1077 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1093: Str -> SubstForm => Str; --%
    oper mkNTable1093 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1095: Str -> SubstForm => Str; --%
    oper mkNTable1095 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1096: Str -> SubstForm => Str; --%
    oper mkNTable1096 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "dana";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "Daną";
      SF Sg Instr => x + "Daną";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "dana";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1110: Str -> SubstForm => Str; --%
    oper mkNTable1110 lexem = 
      let x = lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1132: Str -> SubstForm => Str; --%
    oper mkNTable1132 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1151: Str -> SubstForm => Str; --%
    oper mkNTable1151 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "e";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1160: Str -> SubstForm => Str; --%
    oper mkNTable1160 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1164: Str -> SubstForm => Str; --%
    oper mkNTable1164 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "ziec";
      SF Sg Gen => x + "źca";
      SF Sg Dat => x + "źcowi";
      SF Sg Acc => x + "ziec";
      SF Sg Instr => x + "źcem";
      SF Sg Loc => x + "źcu";
      SF Sg Voc => x + "źcu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1169: Str -> SubstForm => Str; --%
    oper mkNTable1169 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1171: Str -> SubstForm => Str; --%
    oper mkNTable1171 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1192: Str -> SubstForm => Str; --%
    oper mkNTable1192 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1194: Str -> SubstForm => Str; --%
    oper mkNTable1194 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1217: Str -> SubstForm => Str; --%
    oper mkNTable1217 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1286: Str -> SubstForm => Str; --%
    oper mkNTable1286 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1300: Str -> SubstForm => Str; --%
    oper mkNTable1300 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "y";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "ą";
      SF Sg Loc => x + "y";
      SF Sg Voc => x + "y";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1302: Str -> SubstForm => Str; --%
    oper mkNTable1302 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1319: Str -> SubstForm => Str; --%
    oper mkNTable1319 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1326: Str -> SubstForm => Str; --%
    oper mkNTable1326 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "zie";
      SF Sg Voc => x + "zie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1327: Str -> SubstForm => Str; --%
    oper mkNTable1327 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1335: Str -> SubstForm => Str; --%
    oper mkNTable1335 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1347: Str -> SubstForm => Str; --%
    oper mkNTable1347 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ek";
      SF Sg Gen => x + "ku";
      SF Sg Dat => x + "kowi";
      SF Sg Acc => x + "ek";
      SF Sg Instr => x + "kiem";
      SF Sg Loc => x + "ku";
      SF Sg Voc => x + "ku";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1354: Str -> SubstForm => Str; --%
    oper mkNTable1354 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1365: Str -> SubstForm => Str; --%
    oper mkNTable1365 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1379: Str -> SubstForm => Str; --%
    oper mkNTable1379 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1408: Str -> SubstForm => Str; --%
    oper mkNTable1408 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1413: Str -> SubstForm => Str; --%
    oper mkNTable1413 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cie";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "cie";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "cie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1438: Str -> SubstForm => Str; --%
    oper mkNTable1438 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1466: Str -> SubstForm => Str; --%
    oper mkNTable1466 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1467: Str -> SubstForm => Str; --%
    oper mkNTable1467 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "iec";
      SF Sg Gen => x + "ca";
      SF Sg Dat => x + "cowi";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cem";
      SF Sg Loc => x + "cu";
      SF Sg Voc => x + "cu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1484: Str -> SubstForm => Str; --%
    oper mkNTable1484 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "[sg,loc]";
      SF Sg Voc => x + "[sg,voc]";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1486: Str -> SubstForm => Str; --%
    oper mkNTable1486 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "[sg,gen]";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "o";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "o";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1490: Str -> SubstForm => Str; --%
    oper mkNTable1490 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "[sg,acc]";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "ie";
      SF Sg Voc => x + "ie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1492: Str -> SubstForm => Str; --%
    oper mkNTable1492 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "łuków";
      SF Sg Gen => x + "Łukowa";
      SF Sg Dat => x + "Łukowowi";
      SF Sg Acc => x + "łuków";
      SF Sg Instr => x + "Łukowem";
      SF Sg Loc => x + "Łukowie";
      SF Sg Voc => x + "Łukowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1493: Str -> SubstForm => Str; --%
    oper mkNTable1493 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "łupków";
      SF Sg Gen => x + "Łupkowa";
      SF Sg Dat => x + "Łupkowowi";
      SF Sg Acc => x + "łupków";
      SF Sg Instr => x + "Łupkowem";
      SF Sg Loc => x + "Łupkowie";
      SF Sg Voc => x + "Łupkowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1497: Str -> SubstForm => Str; --%
    oper mkNTable1497 lexem = 
      let x = Predef.tk 5 lexem in
    table { 
      SF Sg Nom => x + "żarów";
      SF Sg Gen => x + "Żarowa";
      SF Sg Dat => x + "Żarowu";
      SF Sg Acc => x + "żarów";
      SF Sg Instr => x + "Żarowem";
      SF Sg Loc => x + "Żarowie";
      SF Sg Voc => x + "Żarowie";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1499: Str -> SubstForm => Str; --%
    oper mkNTable1499 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "órz";
      SF Sg Gen => x + "orza";
      SF Sg Dat => x + "orzowi";
      SF Sg Acc => x + "órz";
      SF Sg Instr => x + "orzem";
      SF Sg Loc => x + "orzu";
      SF Sg Voc => x + "orzu";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable1512: Str -> SubstForm => Str; --%
    oper mkNTable1512 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "[sg,nom]";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "[sg,dat]";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "[sg,inst]";
      SF Sg Loc => x + "ze";
      SF Sg Voc => x + "ze";
      SF Pl Nom => [];
      SF Pl Gen => [];
      SF Pl Dat => [];
      SF Pl Acc => [];
      SF Pl Instr => [];
      SF Pl Loc => [];
      SF Pl Voc => []
    };

    oper mkNTable0046: Str -> SubstForm => Str; --%
    oper mkNTable0046 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "y";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0054: Str -> SubstForm => Str; --%
    oper mkNTable0054 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "y";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "y";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable0081: Str -> SubstForm => Str; --%
    oper mkNTable0081 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0087: Str -> SubstForm => Str; --%
    oper mkNTable0087 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ci";
      SF Sg Gen => x + "tów";
      SF Sg Dat => x + "tom";
      SF Sg Acc => x + "tów";
      SF Sg Instr => x + "tami";
      SF Sg Loc => x + "tach";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "tów";
      SF Pl Dat => x + "tom";
      SF Pl Acc => x + "tów";
      SF Pl Instr => x + "tami";
      SF Pl Loc => x + "tach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable0107: Str -> SubstForm => Str; --%
    oper mkNTable0107 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "";
      SF Sg Loc => x + "";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "";
      SF Pl Loc => x + "";
      SF Pl Voc => x + ""
    };

    oper mkNTable0109: Str -> SubstForm => Str; --%
    oper mkNTable0109 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0149: Str -> SubstForm => Str; --%
    oper mkNTable0149 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "i";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "i";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0157: Str -> SubstForm => Str; --%
    oper mkNTable0157 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ęta";
      SF Sg Gen => x + "ąt";
      SF Sg Dat => x + "ętom";
      SF Sg Acc => x + "ęta";
      SF Sg Instr => x + "ętami";
      SF Sg Loc => x + "ętach";
      SF Sg Voc => x + "ęta";
      SF Pl Nom => x + "ęta";
      SF Pl Gen => x + "ąt";
      SF Pl Dat => x + "ętom";
      SF Pl Acc => x + "ęta";
      SF Pl Instr => x + "ętami";
      SF Pl Loc => x + "ętach";
      SF Pl Voc => x + "ęta"
    };

    oper mkNTable0160: Str -> SubstForm => Str; --%
    oper mkNTable0160 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "i";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "i";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "i";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable0181: Str -> SubstForm => Str; --%
    oper mkNTable0181 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ćki";
      SF Sg Gen => x + "ciek";
      SF Sg Dat => x + "ćkom";
      SF Sg Acc => x + "ćki";
      SF Sg Instr => x + "ćkami";
      SF Sg Loc => x + "ćkach";
      SF Sg Voc => x + "ćki";
      SF Pl Nom => x + "ćki";
      SF Pl Gen => x + "ciek";
      SF Pl Dat => x + "ćkom";
      SF Pl Acc => x + "ćki";
      SF Pl Instr => x + "ćkami";
      SF Pl Loc => x + "ćkach";
      SF Pl Voc => x + "ćki"
    };

    oper mkNTable0214: Str -> SubstForm => Str; --%
    oper mkNTable0214 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "owy";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "owom";
      SF Sg Acc => x + "owy";
      SF Sg Instr => x + "owami";
      SF Sg Loc => x + "owach";
      SF Sg Voc => x + "owy";
      SF Pl Nom => x + "owy";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "owom";
      SF Pl Acc => x + "owy";
      SF Pl Instr => x + "owami";
      SF Pl Loc => x + "owach";
      SF Pl Voc => x + "owy"
    };

    oper mkNTable0218: Str -> SubstForm => Str; --%
    oper mkNTable0218 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0230: Str -> SubstForm => Str; --%
    oper mkNTable0230 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ody";
      SF Sg Gen => x + "ód";
      SF Sg Dat => x + "odom";
      SF Sg Acc => x + "ody";
      SF Sg Instr => x + "odami";
      SF Sg Loc => x + "odach";
      SF Sg Voc => x + "ody";
      SF Pl Nom => x + "ody";
      SF Pl Gen => x + "ód";
      SF Pl Dat => x + "odom";
      SF Pl Acc => x + "ody";
      SF Pl Instr => x + "odami";
      SF Pl Loc => x + "odach";
      SF Pl Voc => x + "ody"
    };

    oper mkNTable0257: Str -> SubstForm => Str; --%
    oper mkNTable0257 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "owie";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "owie";
      SF Pl Nom => x + "owie";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "owie"
    };

    oper mkNTable0275: Str -> SubstForm => Str; --%
    oper mkNTable0275 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0354: Str -> SubstForm => Str; --%
    oper mkNTable0354 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ie";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "ie";
      SF Pl Nom => x + "ie";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "ie"
    };

    oper mkNTable0361: Str -> SubstForm => Str; --%
    oper mkNTable0361 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ki";
      SF Sg Gen => x + "ek";
      SF Sg Dat => x + "kom";
      SF Sg Acc => x + "ki";
      SF Sg Instr => x + "kami";
      SF Sg Loc => x + "kach";
      SF Sg Voc => x + "ki";
      SF Pl Nom => x + "ki";
      SF Pl Gen => x + "ek";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ki";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ki"
    };

    oper mkNTable0410: Str -> SubstForm => Str; --%
    oper mkNTable0410 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0421: Str -> SubstForm => Str; --%
    oper mkNTable0421 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "o";
      SF Sg Gen => x + "a";
      SF Sg Dat => x + "u";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "em";
      SF Sg Loc => x + "u";
      SF Sg Voc => x + "o";
      SF Pl Nom => x + "o";
      SF Pl Gen => x + "a";
      SF Pl Dat => x + "u";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "em";
      SF Pl Loc => x + "u";
      SF Pl Voc => x + "o"
    };

    oper mkNTable0438: Str -> SubstForm => Str; --%
    oper mkNTable0438 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "Jeziorki";
      SF Sg Gen => x + "jeziorek";
      SF Sg Dat => x + "jeziorkom";
      SF Sg Acc => x + "Jeziorki";
      SF Sg Instr => x + "jeziorkami";
      SF Sg Loc => x + "jeziorkach";
      SF Sg Voc => x + "Jeziorki";
      SF Pl Nom => x + "Jeziorki";
      SF Pl Gen => x + "jeziorek";
      SF Pl Dat => x + "jeziorkom";
      SF Pl Acc => x + "Jeziorki";
      SF Pl Instr => x + "jeziorkami";
      SF Pl Loc => x + "jeziorkach";
      SF Pl Voc => x + "Jeziorki"
    };

    oper mkNTable0451: Str -> SubstForm => Str; --%
    oper mkNTable0451 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0485: Str -> SubstForm => Str; --%
    oper mkNTable0485 lexem = 
      let x = Predef.tk 10 lexem in
    table { 
      SF Sg Nom => x + "kordyliery";
      SF Sg Gen => x + "Kordylierów";
      SF Sg Dat => x + "kordylierom";
      SF Sg Acc => x + "kordyliery";
      SF Sg Instr => x + "kordylierami";
      SF Sg Loc => x + "kordylierach";
      SF Sg Voc => x + "kordyliery";
      SF Pl Nom => x + "kordyliery";
      SF Pl Gen => x + "Kordylierów";
      SF Pl Dat => x + "kordylierom";
      SF Pl Acc => x + "kordyliery";
      SF Pl Instr => x + "kordylierami";
      SF Pl Loc => x + "kordylierach";
      SF Pl Voc => x + "kordyliery"
    };

    oper mkNTable0547: Str -> SubstForm => Str; --%
    oper mkNTable0547 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ce";
      SF Sg Gen => x + "iec";
      SF Sg Dat => x + "com";
      SF Sg Acc => x + "ce";
      SF Sg Instr => x + "cami";
      SF Sg Loc => x + "cach";
      SF Sg Voc => x + "ce";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "iec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable0626: Str -> SubstForm => Str; --%
    oper mkNTable0626 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ńki";
      SF Sg Gen => x + "niek";
      SF Sg Dat => x + "ńkom";
      SF Sg Acc => x + "ńki";
      SF Sg Instr => x + "ńkami";
      SF Sg Loc => x + "ńkach";
      SF Sg Voc => x + "ńki";
      SF Pl Nom => x + "ńki";
      SF Pl Gen => x + "niek";
      SF Pl Dat => x + "ńkom";
      SF Pl Acc => x + "ńki";
      SF Pl Instr => x + "ńkami";
      SF Pl Loc => x + "ńkach";
      SF Pl Voc => x + "ńki"
    };

    oper mkNTable0631: Str -> SubstForm => Str; --%
    oper mkNTable0631 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "wy";
      SF Sg Gen => x + "ew";
      SF Sg Dat => x + "wom";
      SF Sg Acc => x + "wy";
      SF Sg Instr => x + "wami";
      SF Sg Loc => x + "wach";
      SF Sg Voc => x + "wy";
      SF Pl Nom => x + "wy";
      SF Pl Gen => x + "ew";
      SF Pl Dat => x + "wom";
      SF Pl Acc => x + "wy";
      SF Pl Instr => x + "wami";
      SF Pl Loc => x + "wach";
      SF Pl Voc => x + "wy"
    };

    oper mkNTable0645: Str -> SubstForm => Str; --%
    oper mkNTable0645 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "cy";
      SF Sg Gen => x + "iec";
      SF Sg Dat => x + "com";
      SF Sg Acc => x + "cy";
      SF Sg Instr => x + "cami";
      SF Sg Loc => x + "czech";
      SF Sg Voc => x + "cy";
      SF Pl Nom => x + "cy";
      SF Pl Gen => x + "iec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "cy";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "czech";
      SF Pl Voc => x + "cy"
    };

    oper mkNTable0769: Str -> SubstForm => Str; --%
    oper mkNTable0769 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ce";
      SF Sg Gen => x + "ec";
      SF Sg Dat => x + "com";
      SF Sg Acc => x + "ce";
      SF Sg Instr => x + "cami";
      SF Sg Loc => x + "cach";
      SF Sg Voc => x + "ce";
      SF Pl Nom => x + "ce";
      SF Pl Gen => x + "ec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ce";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ce"
    };

    oper mkNTable0795: Str -> SubstForm => Str; --%
    oper mkNTable0795 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ny";
      SF Sg Gen => x + "ien";
      SF Sg Dat => x + "nom";
      SF Sg Acc => x + "ny";
      SF Sg Instr => x + "nami";
      SF Sg Loc => x + "nach";
      SF Sg Voc => x + "ny";
      SF Pl Nom => x + "ny";
      SF Pl Gen => x + "ien";
      SF Pl Dat => x + "nom";
      SF Pl Acc => x + "ny";
      SF Pl Instr => x + "nami";
      SF Pl Loc => x + "nach";
      SF Pl Voc => x + "ny"
    };

    oper mkNTable0798: Str -> SubstForm => Str; --%
    oper mkNTable0798 lexem = 
      let x = Predef.tk 8 lexem in
    table { 
      SF Sg Nom => x + "stokłosy";
      SF Sg Gen => x + "Stokłosów";
      SF Sg Dat => x + "stokłosom";
      SF Sg Acc => x + "stokłosy";
      SF Sg Instr => x + "stokłosami";
      SF Sg Loc => x + "stokłosach";
      SF Sg Voc => x + "stokłosy";
      SF Pl Nom => x + "stokłosy";
      SF Pl Gen => x + "Stokłosów";
      SF Pl Dat => x + "stokłosom";
      SF Pl Acc => x + "stokłosy";
      SF Pl Instr => x + "stokłosami";
      SF Pl Loc => x + "stokłosach";
      SF Pl Voc => x + "stokłosy"
    };

    oper mkNTable0867: Str -> SubstForm => Str; --%
    oper mkNTable0867 lexem = 
      let x = Predef.tk 7 lexem in
    table { 
      SF Sg Nom => x + "Wazowie";
      SF Sg Gen => x + "Wazów";
      SF Sg Dat => x + "wazom";
      SF Sg Acc => x + "Wazów";
      SF Sg Instr => x + "wazami";
      SF Sg Loc => x + "wazach";
      SF Sg Voc => x + "Wazowie";
      SF Pl Nom => x + "Wazowie";
      SF Pl Gen => x + "Wazów";
      SF Pl Dat => x + "wazom";
      SF Pl Acc => x + "Wazów";
      SF Pl Instr => x + "wazami";
      SF Pl Loc => x + "wazach";
      SF Pl Voc => x + "Wazowie"
    };

    oper mkNTable0900: Str -> SubstForm => Str; --%
    oper mkNTable0900 lexem = 
      let x = Predef.tk 6 lexem in
    table { 
      SF Sg Nom => x + "włochy";
      SF Sg Gen => x + "Włoch";
      SF Sg Dat => x + "włochom";
      SF Sg Acc => x + "włochy";
      SF Sg Instr => x + "włochami";
      SF Sg Loc => x + "włochach";
      SF Sg Voc => x + "włochy";
      SF Pl Nom => x + "włochy";
      SF Pl Gen => x + "Włoch";
      SF Pl Dat => x + "włochom";
      SF Pl Acc => x + "włochy";
      SF Pl Instr => x + "włochami";
      SF Pl Loc => x + "włochach";
      SF Pl Voc => x + "włochy"
    };

    oper mkNTable0926: Str -> SubstForm => Str; --%
    oper mkNTable0926 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable0932: Str -> SubstForm => Str; --%
    oper mkNTable0932 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nie";
      SF Sg Gen => x + "ń";
      SF Sg Dat => x + "niom";
      SF Sg Acc => x + "nie";
      SF Sg Instr => x + "ńmi";
      SF Sg Loc => x + "niach";
      SF Sg Voc => x + "nie";
      SF Pl Nom => x + "nie";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nie";
      SF Pl Instr => x + "ńmi";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nie"
    };

    oper mkNTable0933: Str -> SubstForm => Str; --%
    oper mkNTable0933 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "ych";
      SF Sg Dat => x + "ym";
      SF Sg Acc => x + "e";
      SF Sg Instr => x + "ymi";
      SF Sg Loc => x + "ych";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "e";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "e"
    };

    oper mkNTable0940: Str -> SubstForm => Str; --%
    oper mkNTable0940 lexem = 
      let x = Predef.tk 0 lexem in
    table { 
      SF Sg Nom => x + "";
      SF Sg Gen => x + "";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "";
      SF Pl Nom => x + "";
      SF Pl Gen => x + "";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + ""
    };

    oper mkNTable1000: Str -> SubstForm => Str; --%
    oper mkNTable1000 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "a";
      SF Sg Gen => x + "y";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "a";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "a";
      SF Pl Nom => x + "a";
      SF Pl Gen => x + "y";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "a";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "a"
    };

    oper mkNTable1092: Str -> SubstForm => Str; --%
    oper mkNTable1092 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ka";
      SF Sg Gen => x + "ek";
      SF Sg Dat => x + "kom";
      SF Sg Acc => x + "ka";
      SF Sg Instr => x + "kami";
      SF Sg Loc => x + "kach";
      SF Sg Voc => x + "ka";
      SF Pl Nom => x + "ka";
      SF Pl Gen => x + "ek";
      SF Pl Dat => x + "kom";
      SF Pl Acc => x + "ka";
      SF Pl Instr => x + "kami";
      SF Pl Loc => x + "kach";
      SF Pl Voc => x + "ka"
    };

    oper mkNTable1104: Str -> SubstForm => Str; --%
    oper mkNTable1104 lexem = 
      let x = Predef.tk 4 lexem in
    table { 
      SF Sg Nom => x + "obra";
      SF Sg Gen => x + "óbr";
      SF Sg Dat => x + "obrom";
      SF Sg Acc => x + "obra";
      SF Sg Instr => x + "obrami";
      SF Sg Loc => x + "obrach";
      SF Sg Voc => x + "obra";
      SF Pl Nom => x + "obra";
      SF Pl Gen => x + "óbr";
      SF Pl Dat => x + "obrom";
      SF Pl Acc => x + "obra";
      SF Pl Instr => x + "obrami";
      SF Pl Loc => x + "obrach";
      SF Pl Voc => x + "obra"
    };

    oper mkNTable1111: Str -> SubstForm => Str; --%
    oper mkNTable1111 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "nia";
      SF Sg Gen => x + "ń";
      SF Sg Dat => x + "niom";
      SF Sg Acc => x + "nia";
      SF Sg Instr => x + "niami";
      SF Sg Loc => x + "niach";
      SF Sg Voc => x + "nia";
      SF Pl Nom => x + "nia";
      SF Pl Gen => x + "ń";
      SF Pl Dat => x + "niom";
      SF Pl Acc => x + "nia";
      SF Pl Instr => x + "niami";
      SF Pl Loc => x + "niach";
      SF Pl Voc => x + "nia"
    };

    oper mkNTable1113: Str -> SubstForm => Str; --%
    oper mkNTable1113 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ogi";
      SF Sg Gen => x + "óg";
      SF Sg Dat => x + "ogom";
      SF Sg Acc => x + "ogi";
      SF Sg Instr => x + "ogami";
      SF Sg Loc => x + "ogach";
      SF Sg Voc => x + "ogi";
      SF Pl Nom => x + "ogi";
      SF Pl Gen => x + "óg";
      SF Pl Dat => x + "ogom";
      SF Pl Acc => x + "ogi";
      SF Pl Instr => x + "ogami";
      SF Pl Loc => x + "ogach";
      SF Pl Voc => x + "ogi"
    };

    oper mkNTable1116: Str -> SubstForm => Str; --%
    oper mkNTable1116 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "wa";
      SF Sg Gen => x + "ew";
      SF Sg Dat => x + "wom";
      SF Sg Acc => x + "wa";
      SF Sg Instr => x + "wami";
      SF Sg Loc => x + "wach";
      SF Sg Voc => x + "wa";
      SF Pl Nom => x + "wa";
      SF Pl Gen => x + "ew";
      SF Pl Dat => x + "wom";
      SF Pl Acc => x + "wa";
      SF Pl Instr => x + "wami";
      SF Pl Loc => x + "wach";
      SF Pl Voc => x + "wa"
    };

    oper mkNTable1172: Str -> SubstForm => Str; --%
    oper mkNTable1172 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "eł";
      SF Sg Dat => x + "łom";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łami";
      SF Sg Loc => x + "łach";
      SF Sg Voc => x + "ła";
      SF Pl Nom => x + "ła";
      SF Pl Gen => x + "eł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ła";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ła"
    };

    oper mkNTable1190: Str -> SubstForm => Str; --%
    oper mkNTable1190 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "e";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "e";
      SF Pl Nom => x + "e";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "e"
    };

    oper mkNTable1195: Str -> SubstForm => Str; --%
    oper mkNTable1195 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ca";
      SF Sg Gen => x + "ec";
      SF Sg Dat => x + "com";
      SF Sg Acc => x + "ca";
      SF Sg Instr => x + "cami";
      SF Sg Loc => x + "cach";
      SF Sg Voc => x + "ca";
      SF Pl Nom => x + "ca";
      SF Pl Gen => x + "ec";
      SF Pl Dat => x + "com";
      SF Pl Acc => x + "ca";
      SF Pl Instr => x + "cami";
      SF Pl Loc => x + "cach";
      SF Pl Voc => x + "ca"
    };

    oper mkNTable1231: Str -> SubstForm => Str; --%
    oper mkNTable1231 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "je";
      SF Sg Gen => x + "i";
      SF Sg Dat => x + "jom";
      SF Sg Acc => x + "je";
      SF Sg Instr => x + "jami";
      SF Sg Loc => x + "jach";
      SF Sg Voc => x + "je";
      SF Pl Nom => x + "je";
      SF Pl Gen => x + "i";
      SF Pl Dat => x + "jom";
      SF Pl Acc => x + "je";
      SF Pl Instr => x + "jami";
      SF Pl Loc => x + "jach";
      SF Pl Voc => x + "je"
    };

    oper mkNTable1243: Str -> SubstForm => Str; --%
    oper mkNTable1243 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oła";
      SF Sg Gen => x + "ół";
      SF Sg Dat => x + "ołom";
      SF Sg Acc => x + "oła";
      SF Sg Instr => x + "ołami";
      SF Sg Loc => x + "ołach";
      SF Sg Voc => x + "oła";
      SF Pl Nom => x + "oła";
      SF Pl Gen => x + "ół";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oła";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oła"
    };

    oper mkNTable1247: Str -> SubstForm => Str; --%
    oper mkNTable1247 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ci";
      SF Sg Gen => x + "ci";
      SF Sg Dat => x + "ciom";
      SF Sg Acc => x + "ci";
      SF Sg Instr => x + "ćmi";
      SF Sg Loc => x + "ciach";
      SF Sg Voc => x + "ci";
      SF Pl Nom => x + "ci";
      SF Pl Gen => x + "ci";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "ci";
      SF Pl Instr => x + "ćmi";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "ci"
    };

    oper mkNTable1265: Str -> SubstForm => Str; --%
    oper mkNTable1265 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "i";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "i";
      SF Pl Nom => x + "i";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "i"
    };

    oper mkNTable1277: Str -> SubstForm => Str; --%
    oper mkNTable1277 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "zy";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "zy";
      SF Pl Nom => x + "zy";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "zy"
    };

    oper mkNTable1282: Str -> SubstForm => Str; --%
    oper mkNTable1282 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "zie";
      SF Sg Gen => x + "zi";
      SF Sg Dat => x + "ziom";
      SF Sg Acc => x + "zi";
      SF Sg Instr => x + "źmi";
      SF Sg Loc => x + "ziach";
      SF Sg Voc => x + "zie";
      SF Pl Nom => x + "zie";
      SF Pl Gen => x + "zi";
      SF Pl Dat => x + "ziom";
      SF Pl Acc => x + "zi";
      SF Pl Instr => x + "źmi";
      SF Pl Loc => x + "ziach";
      SF Pl Voc => x + "zie"
    };

    oper mkNTable1307: Str -> SubstForm => Str; --%
    oper mkNTable1307 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "zi";
      SF Sg Gen => x + "ych";
      SF Sg Dat => x + "ym";
      SF Sg Acc => x + "ych";
      SF Sg Instr => x + "ymi";
      SF Sg Loc => x + "ych";
      SF Sg Voc => x + "zi";
      SF Pl Nom => x + "zi";
      SF Pl Gen => x + "ych";
      SF Pl Dat => x + "ym";
      SF Pl Acc => x + "ych";
      SF Pl Instr => x + "ymi";
      SF Pl Loc => x + "ych";
      SF Pl Voc => x + "zi"
    };

    oper mkNTable1309: Str -> SubstForm => Str; --%
    oper mkNTable1309 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ęki";
      SF Sg Gen => x + "ąk";
      SF Sg Dat => x + "ękom";
      SF Sg Acc => x + "ęki";
      SF Sg Instr => x + "ękami";
      SF Sg Loc => x + "ękach";
      SF Sg Voc => x + "ęki";
      SF Pl Nom => x + "ęki";
      SF Pl Gen => x + "ąk";
      SF Pl Dat => x + "ękom";
      SF Pl Acc => x + "ęki";
      SF Pl Instr => x + "ękami";
      SF Pl Loc => x + "ękach";
      SF Pl Voc => x + "ęki"
    };

    oper mkNTable1320: Str -> SubstForm => Str; --%
    oper mkNTable1320 lexem = 
      let x = Predef.tk 1 lexem in
    table { 
      SF Sg Nom => x + "y";
      SF Sg Gen => x + "ów";
      SF Sg Dat => x + "om";
      SF Sg Acc => x + "ów";
      SF Sg Instr => x + "ami";
      SF Sg Loc => x + "ach";
      SF Sg Voc => x + "y";
      SF Pl Nom => x + "y";
      SF Pl Gen => x + "ów";
      SF Pl Dat => x + "om";
      SF Pl Acc => x + "ów";
      SF Pl Instr => x + "ami";
      SF Pl Loc => x + "ach";
      SF Pl Voc => x + "y"
    };

    oper mkNTable1325: Str -> SubstForm => Str; --%
    oper mkNTable1325 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "cia";
      SF Sg Gen => x + "ć";
      SF Sg Dat => x + "ciom";
      SF Sg Acc => x + "cia";
      SF Sg Instr => x + "ciami";
      SF Sg Loc => x + "ciach";
      SF Sg Voc => x + "cia";
      SF Pl Nom => x + "cia";
      SF Pl Gen => x + "ć";
      SF Pl Dat => x + "ciom";
      SF Pl Acc => x + "cia";
      SF Pl Instr => x + "ciami";
      SF Pl Loc => x + "ciach";
      SF Pl Voc => x + "cia"
    };

    oper mkNTable1368: Str -> SubstForm => Str; --%
    oper mkNTable1368 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oły";
      SF Sg Gen => x + "ół";
      SF Sg Dat => x + "ołom";
      SF Sg Acc => x + "oły";
      SF Sg Instr => x + "ołami";
      SF Sg Loc => x + "ołach";
      SF Sg Voc => x + "oły";
      SF Pl Nom => x + "oły";
      SF Pl Gen => x + "ół";
      SF Pl Dat => x + "ołom";
      SF Pl Acc => x + "oły";
      SF Pl Instr => x + "ołami";
      SF Pl Loc => x + "ołach";
      SF Pl Voc => x + "oły"
    };

    oper mkNTable1406: Str -> SubstForm => Str; --%
    oper mkNTable1406 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "oty";
      SF Sg Gen => x + "ót";
      SF Sg Dat => x + "otom";
      SF Sg Acc => x + "oty";
      SF Sg Instr => x + "otami";
      SF Sg Loc => x + "otach";
      SF Sg Voc => x + "oty";
      SF Pl Nom => x + "oty";
      SF Pl Gen => x + "ót";
      SF Pl Dat => x + "otom";
      SF Pl Acc => x + "oty";
      SF Pl Instr => x + "otami";
      SF Pl Loc => x + "otach";
      SF Pl Voc => x + "oty"
    };

    oper mkNTable1407: Str -> SubstForm => Str; --%
    oper mkNTable1407 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "eni";
      SF Sg Gen => x + "ionych";
      SF Sg Dat => x + "ionym";
      SF Sg Acc => x + "ionych";
      SF Sg Instr => x + "ionymi";
      SF Sg Loc => x + "ionych";
      SF Sg Voc => x + "eni";
      SF Pl Nom => x + "eni";
      SF Pl Gen => x + "ionych";
      SF Pl Dat => x + "ionym";
      SF Pl Acc => x + "ionych";
      SF Pl Instr => x + "ionymi";
      SF Pl Loc => x + "ionych";
      SF Pl Voc => x + "eni"
    };

    oper mkNTable1433: Str -> SubstForm => Str; --%
    oper mkNTable1433 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ła";
      SF Sg Gen => x + "ieł";
      SF Sg Dat => x + "łom";
      SF Sg Acc => x + "ła";
      SF Sg Instr => x + "łami";
      SF Sg Loc => x + "łach";
      SF Sg Voc => x + "ła";
      SF Pl Nom => x + "ła";
      SF Pl Gen => x + "ieł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ła";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ła"
    };

    oper mkNTable1468: Str -> SubstForm => Str; --%
    oper mkNTable1468 lexem = 
      let x = Predef.tk 2 lexem in
    table { 
      SF Sg Nom => x + "ły";
      SF Sg Gen => x + "eł";
      SF Sg Dat => x + "łom";
      SF Sg Acc => x + "ły";
      SF Sg Instr => x + "łami";
      SF Sg Loc => x + "łach";
      SF Sg Voc => x + "ły";
      SF Pl Nom => x + "ły";
      SF Pl Gen => x + "eł";
      SF Pl Dat => x + "łom";
      SF Pl Acc => x + "ły";
      SF Pl Instr => x + "łami";
      SF Pl Loc => x + "łach";
      SF Pl Voc => x + "ły"
    };

    oper mkNTable1472: Str -> SubstForm => Str; --%
    oper mkNTable1472 lexem = 
      let x = Predef.tk 3 lexem in
    table { 
      SF Sg Nom => x + "ota";
      SF Sg Gen => x + "ót";
      SF Sg Dat => x + "otom";
      SF Sg Acc => x + "ota";
      SF Sg Instr => x + "otami";
      SF Sg Loc => x + "otach";
      SF Sg Voc => x + "ota";
      SF Pl Nom => x + "ota";
      SF Pl Gen => x + "ót";
      SF Pl Dat => x + "otom";
      SF Pl Acc => x + "ota";
      SF Pl Instr => x + "otami";
      SF Pl Loc => x + "otach";
      SF Pl Voc => x + "ota"
    };

}
