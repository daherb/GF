-- English lexicon for GF, produced from:
-- Oxford advanced learner's dictionary of current English:
--    expanded 'computer usable' version compiled by Roger Mitton
-- The computer usable version is transcribed from:
--   Oxford advanced learner's dictionary of current English
--   A.S. Hornby ; with the assistance of A.P. Cowie [and] J. Windsor Lewis.
--   3rd. ed., London : Oxford University Press, 1974.
-- Distributed as 'dict0710' by:
--   Oxford Text Archive
--   Oxford University Computing Services
--   13 Banbury Road
--   Oxford
--   OX2 6NN
-- Under these conditions:
--   Freely available for non-commercial use provided that this header is
--   included in its entirety with any copy distributed.
--
-- GF version generated by asc2gf, Bjorn Bringert Nov 2008
--    based on asc2lex, Matthew Purver Nov 2001
--    http://www.stanford.edu/~mpurver/software.html

--# -path=.:alltenses
concrete OaldStructuralEng of OaldStructural = CatEng ** open ParadigmsEng in {
lin abaft_Prep = mkPrep "abaft";
lin aboard_Prep = mkPrep "aboard";
lin about_Prep = mkPrep "about";
lin above_Prep = mkPrep "above";
lin according_as_Conj = mkConj "according as";
lin according_to_Prep = mkPrep "according to";
lin across_Prep = mkPrep "across";
lin afore_Prep = mkPrep "afore";
lin after_Conj = mkConj "after";
lin after_Prep = mkPrep "after";
lin against_Prep = mkPrep "against";
lin agin_Prep = mkPrep "agin";
lin albeit_Conj = mkConj "albeit";
lin along_Prep = mkPrep "along";
lin alongside_Prep = mkPrep "alongside";
lin although_Conj = mkConj "although";
lin amid_Prep = mkPrep "amid";
lin amidst_Prep = mkPrep "amidst";
lin among_Prep = mkPrep "among";
lin amongst_Prep = mkPrep "amongst";
lin an_Conj = mkConj "an";
lin and_Conj = mkConj "and";
lin anent_Prep = mkPrep "anent";
lin around_Prep = mkPrep "around";
lin as_Conj = mkConj "as";
lin aslant_Prep = mkPrep "aslant";
lin astride_Prep = mkPrep "astride";
lin at_Prep = mkPrep "at";
lin athwart_Prep = mkPrep "athwart";
lin bar_Prep = mkPrep "bar";
lin barring_Prep = mkPrep "barring";
lin because_Conj = mkConj "because";
lin before_Conj = mkConj "before";
lin before_Prep = mkPrep "before";
lin behind_Prep = mkPrep "behind";
lin below_Prep = mkPrep "below";
lin beneath_Prep = mkPrep "beneath";
lin beside_Prep = mkPrep "beside";
lin besides_Prep = mkPrep "besides";
lin between_Prep = mkPrep "between";
lin betwixt_Prep = mkPrep "betwixt";
lin beyond_Prep = mkPrep "beyond";
lin but_Conj = mkConj "but";
lin but_Prep = mkPrep "but";
lin by_Prep = mkPrep "by";
lin circa_Prep = mkPrep "circa";
lin concerning_Prep = mkPrep "concerning";
lin considering_Prep = mkPrep "considering";
lin cos_Conj = mkConj "cos";
lin despite_Prep = mkPrep "despite";
lin directly_Conj = mkConj "directly";
lin down_Prep = mkPrep "down";
lin during_Prep = mkPrep "during";
lin either_Conj = mkConj "either";
lin ere_Prep = mkPrep "ere";
lin except_Conj = mkConj "except";
lin except_Prep = mkPrep "except";
lin excepting_Prep = mkPrep "excepting";
lin failing_Prep = mkPrep "failing";
lin for_Conj = mkConj "for";
lin for_Prep = mkPrep "for";
lin forasmuch_as_Conj = mkConj "forasmuch as";
lin from_Prep = mkPrep "from";
lin howbeit_Conj = mkConj "howbeit";
lin if_Conj = mkConj "if";
lin immediately_Conj = mkConj "immediately";
lin in_Prep = mkPrep "in";
lin inside_Prep = mkPrep "inside";
lin instantly_Conj = mkConj "instantly";
lin into_Prep = mkPrep "into";
lin less_Prep = mkPrep "less";
lin lest_Conj = mkConj "lest";
lin like_Conj = mkConj "like";
lin like_Prep = mkPrep "like";
lin likewise_Conj = mkConj "likewise";
lin mid_Prep = mkPrep "mid";
lin midst_Prep = mkPrep "midst";
lin minus_Prep = mkPrep "minus";
lin near_Prep = mkPrep "near";
lin neath_Prep = mkPrep "'neath";
lin neither_Conj = mkConj "neither";
lin nevertheless_Conj = mkConj "nevertheless";
lin next_Prep = mkPrep "next";
lin nigh_Prep = mkPrep "nigh";
lin nigher_Prep = mkPrep "nigher";
lin nighest_Prep = mkPrep "nighest";
lin nisi_Conj = mkConj "nisi";
lin nor_Conj = mkConj "nor";
lin notwithstanding_Conj = mkConj "notwithstanding";
lin notwithstanding_Prep = mkPrep "notwithstanding";
lin now_Conj = mkConj "now";
lin o'er_Prep = mkPrep "o'er";
lin of_Prep = mkPrep "of";
lin off_Prep = mkPrep "off";
lin on_Prep = mkPrep "on";
lin on_to_Prep = mkPrep "on to";
lin only_Conj = mkConj "only";
lin onto_Prep = mkPrep "onto";
lin or_Conj = mkConj "or";
lin otherwise_Conj = mkConj "otherwise";
lin outside_Prep = mkPrep "outside";
lin over_Prep = mkPrep "over";
lin past_Prep = mkPrep "past";
lin pending_Prep = mkPrep "pending";
lin per_Prep = mkPrep "per";
lin plus_Prep = mkPrep "plus";
lin provided_Conj = mkConj "provided";
lin providing_Conj = mkConj "providing";
lin qua_Conj = mkConj "qua";
lin qua_Prep = mkPrep "qua";
lin re_Prep = mkPrep "re";
lin respecting_Prep = mkPrep "respecting";
lin round_Prep = mkPrep "round";
lin sans_Prep = mkPrep "sans";
lin save_Prep = mkPrep "save";
lin saving_Prep = mkPrep "saving";
lin since_Conj = mkConj "since";
lin since_Prep = mkPrep "since";
lin so_Conj = mkConj "so";
lin supposing_Conj = mkConj "supposing";
lin than_Conj = mkConj "than";
lin that_Conj = mkConj "that";
lin tho'_Conj = mkConj "tho'";
lin though_Conj = mkConj "though";
lin thro'_Prep = mkPrep "thro'";
lin through_Prep = mkPrep "through";
lin throughout_Prep = mkPrep "throughout";
lin thru_Prep = mkPrep "thru";
lin till_Conj = mkConj "till";
lin till_Prep = mkPrep "till";
lin to_Prep = mkPrep "to";
lin touching_Prep = mkPrep "touching";
lin toward_Prep = mkPrep "toward";
lin towards_Prep = mkPrep "towards";
lin tween_Prep = mkPrep "'tween";
lin twixt_Prep = mkPrep "'twixt";
lin under_Prep = mkPrep "under";
lin underneath_Prep = mkPrep "underneath";
lin unless_Conj = mkConj "unless";
lin unlike_Prep = mkPrep "unlike";
lin until_Conj = mkConj "until";
lin until_Prep = mkPrep "until";
lin unto_Prep = mkPrep "unto";
lin up_Prep = mkPrep "up";
lin upon_Prep = mkPrep "upon";
lin versus_Prep = mkPrep "versus";
lin via_Prep = mkPrep "via";
lin vice_Prep = mkPrep "vice";
lin vis_à_vis_Prep = mkPrep "vis-à-vis";
lin wanting_Prep = mkPrep "wanting";
lin when_Conj = mkConj "when";
lin whencesoever_Conj = mkConj "whencesoever";
lin whenever_Conj = mkConj "whenever";
lin whereas_Conj = mkConj "whereas";
lin whether_Conj = mkConj "whether";
lin while_Conj = mkConj "while";
lin whilst_Conj = mkConj "whilst";
lin with_Prep = mkPrep "with";
lin within_Prep = mkPrep "within";
lin without_Prep = mkPrep "without";
lin yet_Conj = mkConj "yet";
}