--# -path=.:../romance:../abstract:../common:prelude

-- machine-generated GF file from Andersson & Söderberg's MSc work

concrete IrregSpa of IrregSpaAbs = CatSpa ** 
  open CommonRomance, ParadigmsSpa, BeschSpa in {

flags optimize=values ;

lin ser_V = verboV 
 {s = table {
    VI Infn => "ser" ;
    VI Ger => "siendo" ;
    VI Part => "sido" ;
    VP (Pres Ind Sg P1) => "soy" ;
    VP (Pres Ind Sg P2) => "eres" ;
    VP (Pres Ind Sg P3) => "es" ;
    VP (Pres Ind Pl P1) => "somos" ;
    VP (Pres Ind Pl P2) => "sois" ;
    VP (Pres Ind Pl P3) => "son" ;
    VP (Pres Subj Sg P1) => "sea" ;
    VP (Pres Subj Sg P2) => "seas" ;
    VP (Pres Subj Sg P3) => "sea" ;
    VP (Pres Subj Pl P1) => "seamos" ;
    VP (Pres Subj Pl P2) => "seáis" ;
    VP (Pres Subj Pl P3) => "sean" ;
    VP (Impf Ind Sg P1) => "era" ;--# notpresent
    VP (Impf Ind Sg P2) => "eras" ;--# notpresent
    VP (Impf Ind Sg P3) => "era" ;--# notpresent
    VP (Impf Ind Pl P1) => "éramos" ;--# notpresent
    VP (Impf Ind Pl P2) => "erais" ;--# notpresent
    VP (Impf Ind Pl P3) => "eran" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fuera" ; "fuese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fueras" ; "fueses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fuera" ; "fuese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fuéramos" ; "fuésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fuerais" ; "fueseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fueran" ; "fuesen"} ;--# notpresent
    VP (Pret Sg P1) => "fui" ;--# notpresent
    VP (Pret Sg P2) => "fuiste" ;--# notpresent
    VP (Pret Sg P3) => "fue" ;--# notpresent
    VP (Pret Pl P1) => "fuimos" ;--# notpresent
    VP (Pret Pl P2) => "fuisteis" ;--# notpresent
    VP (Pret Pl P3) => "fueron" ;--# notpresent
    VP (Fut Ind Sg P1) => "seré" ;--# notpresent
    VP (Fut Ind Sg P2) => "serás" ;--# notpresent
    VP (Fut Ind Sg P3) => "será" ;--# notpresent
    VP (Fut Ind Pl P1) => "seremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "seréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "serán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fuere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fueres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fuere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fuéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fuereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fueren" ;--# notpresent
    VP (Cond Sg P1) => "sería" ;--# notpresent
    VP (Cond Sg P2) => "serías" ;--# notpresent
    VP (Cond Sg P3) => "sería" ;--# notpresent
    VP (Cond Pl P1) => "seríamos" ;--# notpresent
    VP (Cond Pl P2) => "seríais" ;--# notpresent
    VP (Cond Pl P3) => "serían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sé" ;
    VP (Imp Sg P3) => "sea" ;
    VP (Imp Pl P1) => "seamos" ;
    VP (Imp Pl P2) => "sed" ;
    VP (Imp Pl P3) => "sean" ;
    VP (Pass Sg Masc) => "sido" ;
    VP (Pass Sg Fem) => "sida" ;
    VP (Pass Pl Masc) => "sidos" ;
    VP (Pass Pl Fem) => "sidas"
    }
  } ;

lin ir_V = verboV 
 {s = table {
    VI Infn => "ir" ;
    VI Ger => "yendo" ;
    VI Part => "ido" ;
    VP (Pres Ind Sg P1) => "voy" ;
    VP (Pres Ind Sg P2) => "vas" ;
    VP (Pres Ind Sg P3) => "va" ;
    VP (Pres Ind Pl P1) => "vamos" ;
    VP (Pres Ind Pl P2) => "vais" ;
    VP (Pres Ind Pl P3) => "van" ;
    VP (Pres Subj Sg P1) => "vaya" ;
    VP (Pres Subj Sg P2) => "vayas" ;
    VP (Pres Subj Sg P3) => "vaya" ;
    VP (Pres Subj Pl P1) => "vayamos" ;
    VP (Pres Subj Pl P2) => "vayáis" ;
    VP (Pres Subj Pl P3) => "vayan" ;
    VP (Impf Ind Sg P1) => "iba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ibas" ;--# notpresent
    VP (Impf Ind Sg P3) => "iba" ;--# notpresent
    VP (Impf Ind Pl P1) => "íbamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ibais" ;--# notpresent
    VP (Impf Ind Pl P3) => "iban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fuera" ; "fuese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fueras" ; "fueses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fuera" ; "fuese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fuéramos" ; "fuésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fuerais" ; "fueseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fueran" ; "fuesen"} ;--# notpresent
    VP (Pret Sg P1) => "fui" ;--# notpresent
    VP (Pret Sg P2) => "fuiste" ;--# notpresent
    VP (Pret Sg P3) => "fue" ;--# notpresent
    VP (Pret Pl P1) => "fuimos" ;--# notpresent
    VP (Pret Pl P2) => "fuisteis" ;--# notpresent
    VP (Pret Pl P3) => "fueron" ;--# notpresent
    VP (Fut Ind Sg P1) => "iré" ;--# notpresent
    VP (Fut Ind Sg P2) => "irás" ;--# notpresent
    VP (Fut Ind Sg P3) => "irá" ;--# notpresent
    VP (Fut Ind Pl P1) => "iremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "iréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "irán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fuere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fueres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fuere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fuéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fuereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fueren" ;--# notpresent
    VP (Cond Sg P1) => "iría" ;--# notpresent
    VP (Cond Sg P2) => "irías" ;--# notpresent
    VP (Cond Sg P3) => "iría" ;--# notpresent
    VP (Cond Pl P1) => "iríamos" ;--# notpresent
    VP (Cond Pl P2) => "iríais" ;--# notpresent
    VP (Cond Pl P3) => "irían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ve" ;
    VP (Imp Sg P3) => "vaya" ;
    VP (Imp Pl P1) => variants {"vamos" ; "vayamos"} ;
    VP (Imp Pl P2) => "id" ;
    VP (Imp Pl P3) => "vayan" ;
    VP (Pass Sg Masc) => "ido" ;
    VP (Pass Sg Fem) => "ida" ;
    VP (Pass Pl Masc) => "idos" ;
    VP (Pass Pl Fem) => "idas"
    }
  } ;

lin estar_V = verboV 
 {s = table {
    VI Infn => "estar" ;
    VI Ger => "estando" ;
    VI Part => "estado" ;
    VP (Pres Ind Sg P1) => "estoy" ;
    VP (Pres Ind Sg P2) => "estás" ;
    VP (Pres Ind Sg P3) => "está" ;
    VP (Pres Ind Pl P1) => "estamos" ;
    VP (Pres Ind Pl P2) => "estáis" ;
    VP (Pres Ind Pl P3) => "están" ;
    VP (Pres Subj Sg P1) => "esté" ;
    VP (Pres Subj Sg P2) => "estés" ;
    VP (Pres Subj Sg P3) => "esté" ;
    VP (Pres Subj Pl P1) => "estemos" ;
    VP (Pres Subj Pl P2) => "estéis" ;
    VP (Pres Subj Pl P3) => "estén" ;
    VP (Impf Ind Sg P1) => "estaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "estabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "estaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "estábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "estabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "estaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estuviera" ; "estuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"estuvieras" ; "estuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estuviera" ; "estuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estuviéramos" ; "estuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"estuvierais" ; "estuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"estuvieran" ; "estuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "estuve" ;--# notpresent
    VP (Pret Sg P2) => "estuviste" ;--# notpresent
    VP (Pret Sg P3) => "estuvo" ;--# notpresent
    VP (Pret Pl P1) => "estuvimos" ;--# notpresent
    VP (Pret Pl P2) => "estuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "estuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "estarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "estará" ;--# notpresent
    VP (Fut Ind Pl P1) => "estaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "estarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "estuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "estuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "estuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "estuvieren" ;--# notpresent
    VP (Cond Sg P1) => "estaría" ;--# notpresent
    VP (Cond Sg P2) => "estarías" ;--# notpresent
    VP (Cond Sg P3) => "estaría" ;--# notpresent
    VP (Cond Pl P1) => "estaríamos" ;--# notpresent
    VP (Cond Pl P2) => "estaríais" ;--# notpresent
    VP (Cond Pl P3) => "estarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "está" ;
    VP (Imp Sg P3) => "esté" ;
    VP (Imp Pl P1) => "estemos" ;
    VP (Imp Pl P2) => "estad" ;
    VP (Imp Pl P3) => "estén" ;
    VP (Pass Sg Masc) => "estado" ;
    VP (Pass Sg Fem) => "estada" ;
    VP (Pass Pl Masc) => "estados" ;
    VP (Pass Pl Fem) => "estadas"
    }
  } ;

lin haber_V = verboV 
 {s = table {
    VI Infn => "haber" ;
    VI Ger => "habiendo" ;
    VI Part => "habido" ;
    VP (Pres Ind Sg P1) => "he" ;
    VP (Pres Ind Sg P2) => "has" ;
    VP (Pres Ind Sg P3) => variants {"ha" ; "hay"} ;
    VP (Pres Ind Pl P1) => "hemos" ;
    VP (Pres Ind Pl P2) => "habéis" ;
    VP (Pres Ind Pl P3) => "han" ;
    VP (Pres Subj Sg P1) => "haya" ;
    VP (Pres Subj Sg P2) => "hayas" ;
    VP (Pres Subj Sg P3) => "haya" ;
    VP (Pres Subj Pl P1) => "hayamos" ;
    VP (Pres Subj Pl P2) => "hayáis" ;
    VP (Pres Subj Pl P3) => "hayan" ;
    VP (Impf Ind Sg P1) => "había" ;--# notpresent
    VP (Impf Ind Sg P2) => "habías" ;--# notpresent
    VP (Impf Ind Sg P3) => "había" ;--# notpresent
    VP (Impf Ind Pl P1) => "habíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "habíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "habían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hubiera" ; "hubiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hubieras" ; "hubieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hubiera" ; "hubiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hubiéramos" ; "hubiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hubierais" ; "hubieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hubieran" ; "hubiesen"} ;--# notpresent
    VP (Pret Sg P1) => "hube" ;--# notpresent
    VP (Pret Sg P2) => "hubiste" ;--# notpresent
    VP (Pret Sg P3) => "hubo" ;--# notpresent
    VP (Pret Pl P1) => "hubimos" ;--# notpresent
    VP (Pret Pl P2) => "hubisteis" ;--# notpresent
    VP (Pret Pl P3) => "hubieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "habré" ;--# notpresent
    VP (Fut Ind Sg P2) => "habrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "habrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "habremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "habréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "habrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hubiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hubieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hubiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hubiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hubiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hubieren" ;--# notpresent
    VP (Cond Sg P1) => "habría" ;--# notpresent
    VP (Cond Sg P2) => "habrías" ;--# notpresent
    VP (Cond Sg P3) => "habría" ;--# notpresent
    VP (Cond Pl P1) => "habríamos" ;--# notpresent
    VP (Cond Pl P2) => "habríais" ;--# notpresent
    VP (Cond Pl P3) => "habrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "habido" ;
    VP (Pass Sg Fem) => "habida" ;
    VP (Pass Pl Masc) => "habidos" ;
    VP (Pass Pl Fem) => "habidas"
    }
  } ;

lin caber_V = verboV 
 {s = table {
    VI Infn => "caber" ;
    VI Ger => "cabiendo" ;
    VI Part => "cabido" ;
    VP (Pres Ind Sg P1) => "quepo" ;
    VP (Pres Ind Sg P2) => "cabes" ;
    VP (Pres Ind Sg P3) => "cabe" ;
    VP (Pres Ind Pl P1) => "cabemos" ;
    VP (Pres Ind Pl P2) => "cabéis" ;
    VP (Pres Ind Pl P3) => "caben" ;
    VP (Pres Subj Sg P1) => "quepa" ;
    VP (Pres Subj Sg P2) => "quepas" ;
    VP (Pres Subj Sg P3) => "quepa" ;
    VP (Pres Subj Pl P1) => "quepamos" ;
    VP (Pres Subj Pl P2) => "quepáis" ;
    VP (Pres Subj Pl P3) => "quepan" ;
    VP (Impf Ind Sg P1) => "cabía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cabías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cabía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cabíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cabíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cabían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cupiera" ; "cupiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cupieras" ; "cupieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cupiera" ; "cupiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cupiéramos" ; "cupiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cupierais" ; "cupieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cupieran" ; "cupiesen"} ;--# notpresent
    VP (Pret Sg P1) => "cupe" ;--# notpresent
    VP (Pret Sg P2) => "cupiste" ;--# notpresent
    VP (Pret Sg P3) => "cupo" ;--# notpresent
    VP (Pret Pl P1) => "cupimos" ;--# notpresent
    VP (Pret Pl P2) => "cupisteis" ;--# notpresent
    VP (Pret Pl P3) => "cupieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cabré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cabrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cabrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cabremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cabréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cabrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cupiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cupieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cupiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cupiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cupiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cupieren" ;--# notpresent
    VP (Cond Sg P1) => "cabría" ;--# notpresent
    VP (Cond Sg P2) => "cabrías" ;--# notpresent
    VP (Cond Sg P3) => "cabría" ;--# notpresent
    VP (Cond Pl P1) => "cabríamos" ;--# notpresent
    VP (Cond Pl P2) => "cabríais" ;--# notpresent
    VP (Cond Pl P3) => "cabrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cabe" ;
    VP (Imp Sg P3) => "quepa" ;
    VP (Imp Pl P1) => "quepamos" ;
    VP (Imp Pl P2) => "cabed" ;
    VP (Imp Pl P3) => "quepan" ;
    VP (Pass Sg Masc) => "cabido" ;
    VP (Pass Sg Fem) => "cabida" ;
    VP (Pass Pl Masc) => "cabidos" ;
    VP (Pass Pl Fem) => "cabidas"
    }
  } ;

lin resaber_V = verboV 
 {s = table {
    VI Infn => "resaber" ;
    VI Ger => "resabiendo" ;
    VI Part => "resabido" ;
    VP (Pres Ind Sg P1) => "resé" ;
    VP (Pres Ind Sg P2) => "resabes" ;
    VP (Pres Ind Sg P3) => "resabe" ;
    VP (Pres Ind Pl P1) => "resabemos" ;
    VP (Pres Ind Pl P2) => "resabéis" ;
    VP (Pres Ind Pl P3) => "resaben" ;
    VP (Pres Subj Sg P1) => "resepa" ;
    VP (Pres Subj Sg P2) => "resepas" ;
    VP (Pres Subj Sg P3) => "resepa" ;
    VP (Pres Subj Pl P1) => "resepamos" ;
    VP (Pres Subj Pl P2) => "resepáis" ;
    VP (Pres Subj Pl P3) => "resepan" ;
    VP (Impf Ind Sg P1) => "resabía" ;--# notpresent
    VP (Impf Ind Sg P2) => "resabías" ;--# notpresent
    VP (Impf Ind Sg P3) => "resabía" ;--# notpresent
    VP (Impf Ind Pl P1) => "resabíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resabíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resabían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resupiera" ; "resupiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resupieras" ; "resupieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resupiera" ; "resupiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resupiéramos" ; "resupiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resupierais" ; "resupieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resupieran" ; "resupiesen"} ;--# notpresent
    VP (Pret Sg P1) => "resupe" ;--# notpresent
    VP (Pret Sg P2) => "resupiste" ;--# notpresent
    VP (Pret Sg P3) => "resupo" ;--# notpresent
    VP (Pret Pl P1) => "resupimos" ;--# notpresent
    VP (Pret Pl P2) => "resupisteis" ;--# notpresent
    VP (Pret Pl P3) => "resupieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resabré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resabrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resabrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "resabremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resabréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resabrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resupiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resupieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resupiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resupiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resupiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resupieren" ;--# notpresent
    VP (Cond Sg P1) => "resabría" ;--# notpresent
    VP (Cond Sg P2) => "resabrías" ;--# notpresent
    VP (Cond Sg P3) => "resabría" ;--# notpresent
    VP (Cond Pl P1) => "resabríamos" ;--# notpresent
    VP (Cond Pl P2) => "resabríais" ;--# notpresent
    VP (Cond Pl P3) => "resabrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resabe" ;
    VP (Imp Sg P3) => "resepa" ;
    VP (Imp Pl P1) => "resepamos" ;
    VP (Imp Pl P2) => "resabed" ;
    VP (Imp Pl P3) => "resepan" ;
    VP (Pass Sg Masc) => "resabido" ;
    VP (Pass Sg Fem) => "resabida" ;
    VP (Pass Pl Masc) => "resabidos" ;
    VP (Pass Pl Fem) => "resabidas"
    }
  } ;

lin saber_V = verboV 
 {s = table {
    VI Infn => "saber" ;
    VI Ger => "sabiendo" ;
    VI Part => "sabido" ;
    VP (Pres Ind Sg P1) => "sé" ;
    VP (Pres Ind Sg P2) => "sabes" ;
    VP (Pres Ind Sg P3) => "sabe" ;
    VP (Pres Ind Pl P1) => "sabemos" ;
    VP (Pres Ind Pl P2) => "sabéis" ;
    VP (Pres Ind Pl P3) => "saben" ;
    VP (Pres Subj Sg P1) => "sepa" ;
    VP (Pres Subj Sg P2) => "sepas" ;
    VP (Pres Subj Sg P3) => "sepa" ;
    VP (Pres Subj Pl P1) => "sepamos" ;
    VP (Pres Subj Pl P2) => "sepáis" ;
    VP (Pres Subj Pl P3) => "sepan" ;
    VP (Impf Ind Sg P1) => "sabía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sabías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sabía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sabíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sabíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sabían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"supiera" ; "supiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"supieras" ; "supieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"supiera" ; "supiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"supiéramos" ; "supiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"supierais" ; "supieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"supieran" ; "supiesen"} ;--# notpresent
    VP (Pret Sg P1) => "supe" ;--# notpresent
    VP (Pret Sg P2) => "supiste" ;--# notpresent
    VP (Pret Sg P3) => "supo" ;--# notpresent
    VP (Pret Pl P1) => "supimos" ;--# notpresent
    VP (Pret Pl P2) => "supisteis" ;--# notpresent
    VP (Pret Pl P3) => "supieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sabré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sabrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sabrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sabremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sabréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sabrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "supiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "supieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "supiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "supiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "supiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "supieren" ;--# notpresent
    VP (Cond Sg P1) => "sabría" ;--# notpresent
    VP (Cond Sg P2) => "sabrías" ;--# notpresent
    VP (Cond Sg P3) => "sabría" ;--# notpresent
    VP (Cond Pl P1) => "sabríamos" ;--# notpresent
    VP (Cond Pl P2) => "sabríais" ;--# notpresent
    VP (Cond Pl P3) => "sabrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sabe" ;
    VP (Imp Sg P3) => "sepa" ;
    VP (Imp Pl P1) => "sepamos" ;
    VP (Imp Pl P2) => "sabed" ;
    VP (Imp Pl P3) => "sepan" ;
    VP (Pass Sg Masc) => "sabido" ;
    VP (Pass Sg Fem) => "sabida" ;
    VP (Pass Pl Masc) => "sabidos" ;
    VP (Pass Pl Fem) => "sabidas"
    }
  } ;

lin abstener_V = verboV 
 {s = table {
    VI Infn => "abstener" ;
    VI Ger => "absteniendo" ;
    VI Part => "abstenido" ;
    VP (Pres Ind Sg P1) => "abstengo" ;
    VP (Pres Ind Sg P2) => "abstienes" ;
    VP (Pres Ind Sg P3) => "abstiene" ;
    VP (Pres Ind Pl P1) => "abstenemos" ;
    VP (Pres Ind Pl P2) => "abstenéis" ;
    VP (Pres Ind Pl P3) => "abstienen" ;
    VP (Pres Subj Sg P1) => "abstenga" ;
    VP (Pres Subj Sg P2) => "abstengas" ;
    VP (Pres Subj Sg P3) => "abstenga" ;
    VP (Pres Subj Pl P1) => "abstengamos" ;
    VP (Pres Subj Pl P2) => "abstengáis" ;
    VP (Pres Subj Pl P3) => "abstengan" ;
    VP (Impf Ind Sg P1) => "abstenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abstenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abstenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "absteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "absteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abstenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abstuviera" ; "abstuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abstuvieras" ; "abstuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abstuviera" ; "abstuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abstuviéramos" ; "abstuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abstuvierais" ; "abstuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abstuvieran" ; "abstuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "abstuve" ;--# notpresent
    VP (Pret Sg P2) => "abstuviste" ;--# notpresent
    VP (Pret Sg P3) => "abstuvo" ;--# notpresent
    VP (Pret Pl P1) => "abstuvimos" ;--# notpresent
    VP (Pret Pl P2) => "abstuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "abstuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abstendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abstendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abstendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abstendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abstendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abstendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abstuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abstuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abstuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abstuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abstuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abstuvieren" ;--# notpresent
    VP (Cond Sg P1) => "abstendría" ;--# notpresent
    VP (Cond Sg P2) => "abstendrías" ;--# notpresent
    VP (Cond Sg P3) => "abstendría" ;--# notpresent
    VP (Cond Pl P1) => "abstendríamos" ;--# notpresent
    VP (Cond Pl P2) => "abstendríais" ;--# notpresent
    VP (Cond Pl P3) => "abstendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "absten" ;
    VP (Imp Sg P3) => "abstenga" ;
    VP (Imp Pl P1) => "abstengamos" ;
    VP (Imp Pl P2) => "abstened" ;
    VP (Imp Pl P3) => "abstengan" ;
    VP (Pass Sg Masc) => "abstenido" ;
    VP (Pass Sg Fem) => "abstenida" ;
    VP (Pass Pl Masc) => "abstenidos" ;
    VP (Pass Pl Fem) => "abstenidas"
    }
  } ;

lin contener_V = verboV 
 {s = table {
    VI Infn => "contener" ;
    VI Ger => "conteniendo" ;
    VI Part => "contenido" ;
    VP (Pres Ind Sg P1) => "contengo" ;
    VP (Pres Ind Sg P2) => "contienes" ;
    VP (Pres Ind Sg P3) => "contiene" ;
    VP (Pres Ind Pl P1) => "contenemos" ;
    VP (Pres Ind Pl P2) => "contenéis" ;
    VP (Pres Ind Pl P3) => "contienen" ;
    VP (Pres Subj Sg P1) => "contenga" ;
    VP (Pres Subj Sg P2) => "contengas" ;
    VP (Pres Subj Sg P3) => "contenga" ;
    VP (Pres Subj Pl P1) => "contengamos" ;
    VP (Pres Subj Pl P2) => "contengáis" ;
    VP (Pres Subj Pl P3) => "contengan" ;
    VP (Impf Ind Sg P1) => "contenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "conteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contuviera" ; "contuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contuvieras" ; "contuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contuviera" ; "contuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contuviéramos" ; "contuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contuvierais" ; "contuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contuvieran" ; "contuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "contuve" ;--# notpresent
    VP (Pret Sg P2) => "contuviste" ;--# notpresent
    VP (Pret Sg P3) => "contuvo" ;--# notpresent
    VP (Pret Pl P1) => "contuvimos" ;--# notpresent
    VP (Pret Pl P2) => "contuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "contuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contuvieren" ;--# notpresent
    VP (Cond Sg P1) => "contendría" ;--# notpresent
    VP (Cond Sg P2) => "contendrías" ;--# notpresent
    VP (Cond Sg P3) => "contendría" ;--# notpresent
    VP (Cond Pl P1) => "contendríamos" ;--# notpresent
    VP (Cond Pl P2) => "contendríais" ;--# notpresent
    VP (Cond Pl P3) => "contendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "conten" ;
    VP (Imp Sg P3) => "contenga" ;
    VP (Imp Pl P1) => "contengamos" ;
    VP (Imp Pl P2) => "contened" ;
    VP (Imp Pl P3) => "contengan" ;
    VP (Pass Sg Masc) => "contenido" ;
    VP (Pass Sg Fem) => "contenida" ;
    VP (Pass Pl Masc) => "contenidos" ;
    VP (Pass Pl Fem) => "contenidas"
    }
  } ;

lin detener_V = verboV 
 {s = table {
    VI Infn => "detener" ;
    VI Ger => "deteniendo" ;
    VI Part => "detenido" ;
    VP (Pres Ind Sg P1) => "detengo" ;
    VP (Pres Ind Sg P2) => "detienes" ;
    VP (Pres Ind Sg P3) => "detiene" ;
    VP (Pres Ind Pl P1) => "detenemos" ;
    VP (Pres Ind Pl P2) => "detenéis" ;
    VP (Pres Ind Pl P3) => "detienen" ;
    VP (Pres Subj Sg P1) => "detenga" ;
    VP (Pres Subj Sg P2) => "detengas" ;
    VP (Pres Subj Sg P3) => "detenga" ;
    VP (Pres Subj Pl P1) => "detengamos" ;
    VP (Pres Subj Pl P2) => "detengáis" ;
    VP (Pres Subj Pl P3) => "detengan" ;
    VP (Impf Ind Sg P1) => "detenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "detenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "detenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "detenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"detuviera" ; "detuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"detuvieras" ; "detuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"detuviera" ; "detuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"detuviéramos" ; "detuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"detuvierais" ; "detuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"detuvieran" ; "detuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "detuve" ;--# notpresent
    VP (Pret Sg P2) => "detuviste" ;--# notpresent
    VP (Pret Sg P3) => "detuvo" ;--# notpresent
    VP (Pret Pl P1) => "detuvimos" ;--# notpresent
    VP (Pret Pl P2) => "detuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "detuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "detendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "detendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "detendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "detendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "detendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "detendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "detuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "detuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "detuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "detuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "detuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "detuvieren" ;--# notpresent
    VP (Cond Sg P1) => "detendría" ;--# notpresent
    VP (Cond Sg P2) => "detendrías" ;--# notpresent
    VP (Cond Sg P3) => "detendría" ;--# notpresent
    VP (Cond Pl P1) => "detendríamos" ;--# notpresent
    VP (Cond Pl P2) => "detendríais" ;--# notpresent
    VP (Cond Pl P3) => "detendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deten" ;
    VP (Imp Sg P3) => "detenga" ;
    VP (Imp Pl P1) => "detengamos" ;
    VP (Imp Pl P2) => "detened" ;
    VP (Imp Pl P3) => "detengan" ;
    VP (Pass Sg Masc) => "detenido" ;
    VP (Pass Sg Fem) => "detenida" ;
    VP (Pass Pl Masc) => "detenidos" ;
    VP (Pass Pl Fem) => "detenidas"
    }
  } ;

lin entretener_V = verboV 
 {s = table {
    VI Infn => "entretener" ;
    VI Ger => "entreteniendo" ;
    VI Part => "entretenido" ;
    VP (Pres Ind Sg P1) => "entretengo" ;
    VP (Pres Ind Sg P2) => "entretienes" ;
    VP (Pres Ind Sg P3) => "entretiene" ;
    VP (Pres Ind Pl P1) => "entretenemos" ;
    VP (Pres Ind Pl P2) => "entretenéis" ;
    VP (Pres Ind Pl P3) => "entretienen" ;
    VP (Pres Subj Sg P1) => "entretenga" ;
    VP (Pres Subj Sg P2) => "entretengas" ;
    VP (Pres Subj Sg P3) => "entretenga" ;
    VP (Pres Subj Pl P1) => "entretengamos" ;
    VP (Pres Subj Pl P2) => "entretengáis" ;
    VP (Pres Subj Pl P3) => "entretengan" ;
    VP (Impf Ind Sg P1) => "entretenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entretenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entretenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entreteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entreteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entretenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entretuviera" ; "entretuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entretuvieras" ; "entretuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entretuviera" ; "entretuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entretuviéramos" ; "entretuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entretuvierais" ; "entretuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entretuvieran" ; "entretuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "entretuve" ;--# notpresent
    VP (Pret Sg P2) => "entretuviste" ;--# notpresent
    VP (Pret Sg P3) => "entretuvo" ;--# notpresent
    VP (Pret Pl P1) => "entretuvimos" ;--# notpresent
    VP (Pret Pl P2) => "entretuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "entretuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entretendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entretendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entretendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entretendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entretendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entretendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entretuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entretuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entretuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entretuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entretuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entretuvieren" ;--# notpresent
    VP (Cond Sg P1) => "entretendría" ;--# notpresent
    VP (Cond Sg P2) => "entretendrías" ;--# notpresent
    VP (Cond Sg P3) => "entretendría" ;--# notpresent
    VP (Cond Pl P1) => "entretendríamos" ;--# notpresent
    VP (Cond Pl P2) => "entretendríais" ;--# notpresent
    VP (Cond Pl P3) => "entretendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entreten" ;
    VP (Imp Sg P3) => "entretenga" ;
    VP (Imp Pl P1) => "entretengamos" ;
    VP (Imp Pl P2) => "entretened" ;
    VP (Imp Pl P3) => "entretengan" ;
    VP (Pass Sg Masc) => "entretenido" ;
    VP (Pass Sg Fem) => "entretenida" ;
    VP (Pass Pl Masc) => "entretenidos" ;
    VP (Pass Pl Fem) => "entretenidas"
    }
  } ;

lin mantener_V = verboV 
 {s = table {
    VI Infn => "mantener" ;
    VI Ger => "manteniendo" ;
    VI Part => "mantenido" ;
    VP (Pres Ind Sg P1) => "mantengo" ;
    VP (Pres Ind Sg P2) => "mantienes" ;
    VP (Pres Ind Sg P3) => "mantiene" ;
    VP (Pres Ind Pl P1) => "mantenemos" ;
    VP (Pres Ind Pl P2) => "mantenéis" ;
    VP (Pres Ind Pl P3) => "mantienen" ;
    VP (Pres Subj Sg P1) => "mantenga" ;
    VP (Pres Subj Sg P2) => "mantengas" ;
    VP (Pres Subj Sg P3) => "mantenga" ;
    VP (Pres Subj Pl P1) => "mantengamos" ;
    VP (Pres Subj Pl P2) => "mantengáis" ;
    VP (Pres Subj Pl P3) => "mantengan" ;
    VP (Impf Ind Sg P1) => "mantenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mantenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mantenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "manteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "manteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mantenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mantuviera" ; "mantuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mantuvieras" ; "mantuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mantuviera" ; "mantuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mantuviéramos" ; "mantuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mantuvierais" ; "mantuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mantuvieran" ; "mantuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "mantuve" ;--# notpresent
    VP (Pret Sg P2) => "mantuviste" ;--# notpresent
    VP (Pret Sg P3) => "mantuvo" ;--# notpresent
    VP (Pret Pl P1) => "mantuvimos" ;--# notpresent
    VP (Pret Pl P2) => "mantuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "mantuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mantendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mantendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mantendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "mantendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mantendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mantendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mantuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mantuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "mantuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "mantuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mantuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mantuvieren" ;--# notpresent
    VP (Cond Sg P1) => "mantendría" ;--# notpresent
    VP (Cond Sg P2) => "mantendrías" ;--# notpresent
    VP (Cond Sg P3) => "mantendría" ;--# notpresent
    VP (Cond Pl P1) => "mantendríamos" ;--# notpresent
    VP (Cond Pl P2) => "mantendríais" ;--# notpresent
    VP (Cond Pl P3) => "mantendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "manten" ;
    VP (Imp Sg P3) => "mantenga" ;
    VP (Imp Pl P1) => "mantengamos" ;
    VP (Imp Pl P2) => "mantened" ;
    VP (Imp Pl P3) => "mantengan" ;
    VP (Pass Sg Masc) => "mantenido" ;
    VP (Pass Sg Fem) => "mantenida" ;
    VP (Pass Pl Masc) => "mantenidos" ;
    VP (Pass Pl Fem) => "mantenidas"
    }
  } ;

lin manutener_V = verboV 
 {s = table {
    VI Infn => "manutener" ;
    VI Ger => "manuteniendo" ;
    VI Part => "manutenido" ;
    VP (Pres Ind Sg P1) => "manutengo" ;
    VP (Pres Ind Sg P2) => "manutienes" ;
    VP (Pres Ind Sg P3) => "manutiene" ;
    VP (Pres Ind Pl P1) => "manutenemos" ;
    VP (Pres Ind Pl P2) => "manutenéis" ;
    VP (Pres Ind Pl P3) => "manutienen" ;
    VP (Pres Subj Sg P1) => "manutenga" ;
    VP (Pres Subj Sg P2) => "manutengas" ;
    VP (Pres Subj Sg P3) => "manutenga" ;
    VP (Pres Subj Pl P1) => "manutengamos" ;
    VP (Pres Subj Pl P2) => "manutengáis" ;
    VP (Pres Subj Pl P3) => "manutengan" ;
    VP (Impf Ind Sg P1) => "manutenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "manutenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "manutenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "manuteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "manuteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "manutenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"manutuviera" ; "manutuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"manutuvieras" ; "manutuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"manutuviera" ; "manutuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"manutuviéramos" ; "manutuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"manutuvierais" ; "manutuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"manutuvieran" ; "manutuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "manutuve" ;--# notpresent
    VP (Pret Sg P2) => "manutuviste" ;--# notpresent
    VP (Pret Sg P3) => "manutuvo" ;--# notpresent
    VP (Pret Pl P1) => "manutuvimos" ;--# notpresent
    VP (Pret Pl P2) => "manutuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "manutuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "manutendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "manutendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "manutendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "manutendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "manutendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "manutendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "manutuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "manutuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "manutuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "manutuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "manutuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "manutuvieren" ;--# notpresent
    VP (Cond Sg P1) => "manutendría" ;--# notpresent
    VP (Cond Sg P2) => "manutendrías" ;--# notpresent
    VP (Cond Sg P3) => "manutendría" ;--# notpresent
    VP (Cond Pl P1) => "manutendríamos" ;--# notpresent
    VP (Cond Pl P2) => "manutendríais" ;--# notpresent
    VP (Cond Pl P3) => "manutendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "manuten" ;
    VP (Imp Sg P3) => "manutenga" ;
    VP (Imp Pl P1) => "manutengamos" ;
    VP (Imp Pl P2) => "manutened" ;
    VP (Imp Pl P3) => "manutengan" ;
    VP (Pass Sg Masc) => "manutenido" ;
    VP (Pass Sg Fem) => "manutenida" ;
    VP (Pass Pl Masc) => "manutenidos" ;
    VP (Pass Pl Fem) => "manutenidas"
    }
  } ;

lin obtener_V = verboV 
 {s = table {
    VI Infn => "obtener" ;
    VI Ger => "obteniendo" ;
    VI Part => "obtenido" ;
    VP (Pres Ind Sg P1) => "obtengo" ;
    VP (Pres Ind Sg P2) => "obtienes" ;
    VP (Pres Ind Sg P3) => "obtiene" ;
    VP (Pres Ind Pl P1) => "obtenemos" ;
    VP (Pres Ind Pl P2) => "obtenéis" ;
    VP (Pres Ind Pl P3) => "obtienen" ;
    VP (Pres Subj Sg P1) => "obtenga" ;
    VP (Pres Subj Sg P2) => "obtengas" ;
    VP (Pres Subj Sg P3) => "obtenga" ;
    VP (Pres Subj Pl P1) => "obtengamos" ;
    VP (Pres Subj Pl P2) => "obtengáis" ;
    VP (Pres Subj Pl P3) => "obtengan" ;
    VP (Impf Ind Sg P1) => "obtenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "obtenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "obtenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "obteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "obteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "obtenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"obtuviera" ; "obtuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"obtuvieras" ; "obtuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"obtuviera" ; "obtuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"obtuviéramos" ; "obtuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"obtuvierais" ; "obtuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"obtuvieran" ; "obtuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "obtuve" ;--# notpresent
    VP (Pret Sg P2) => "obtuviste" ;--# notpresent
    VP (Pret Sg P3) => "obtuvo" ;--# notpresent
    VP (Pret Pl P1) => "obtuvimos" ;--# notpresent
    VP (Pret Pl P2) => "obtuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "obtuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "obtendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "obtendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "obtendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "obtendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "obtendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "obtendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "obtuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "obtuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "obtuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "obtuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "obtuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "obtuvieren" ;--# notpresent
    VP (Cond Sg P1) => "obtendría" ;--# notpresent
    VP (Cond Sg P2) => "obtendrías" ;--# notpresent
    VP (Cond Sg P3) => "obtendría" ;--# notpresent
    VP (Cond Pl P1) => "obtendríamos" ;--# notpresent
    VP (Cond Pl P2) => "obtendríais" ;--# notpresent
    VP (Cond Pl P3) => "obtendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "obten" ;
    VP (Imp Sg P3) => "obtenga" ;
    VP (Imp Pl P1) => "obtengamos" ;
    VP (Imp Pl P2) => "obtened" ;
    VP (Imp Pl P3) => "obtengan" ;
    VP (Pass Sg Masc) => "obtenido" ;
    VP (Pass Sg Fem) => "obtenida" ;
    VP (Pass Pl Masc) => "obtenidos" ;
    VP (Pass Pl Fem) => "obtenidas"
    }
  } ;

lin retener_V = verboV 
 {s = table {
    VI Infn => "retener" ;
    VI Ger => "reteniendo" ;
    VI Part => "retenido" ;
    VP (Pres Ind Sg P1) => "retengo" ;
    VP (Pres Ind Sg P2) => "retienes" ;
    VP (Pres Ind Sg P3) => "retiene" ;
    VP (Pres Ind Pl P1) => "retenemos" ;
    VP (Pres Ind Pl P2) => "retenéis" ;
    VP (Pres Ind Pl P3) => "retienen" ;
    VP (Pres Subj Sg P1) => "retenga" ;
    VP (Pres Subj Sg P2) => "retengas" ;
    VP (Pres Subj Sg P3) => "retenga" ;
    VP (Pres Subj Pl P1) => "retengamos" ;
    VP (Pres Subj Pl P2) => "retengáis" ;
    VP (Pres Subj Pl P3) => "retengan" ;
    VP (Impf Ind Sg P1) => "retenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retuviera" ; "retuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retuvieras" ; "retuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retuviera" ; "retuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retuviéramos" ; "retuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retuvierais" ; "retuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retuvieran" ; "retuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "retuve" ;--# notpresent
    VP (Pret Sg P2) => "retuviste" ;--# notpresent
    VP (Pret Sg P3) => "retuvo" ;--# notpresent
    VP (Pret Pl P1) => "retuvimos" ;--# notpresent
    VP (Pret Pl P2) => "retuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "retuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retuvieren" ;--# notpresent
    VP (Cond Sg P1) => "retendría" ;--# notpresent
    VP (Cond Sg P2) => "retendrías" ;--# notpresent
    VP (Cond Sg P3) => "retendría" ;--# notpresent
    VP (Cond Pl P1) => "retendríamos" ;--# notpresent
    VP (Cond Pl P2) => "retendríais" ;--# notpresent
    VP (Cond Pl P3) => "retendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reten" ;
    VP (Imp Sg P3) => "retenga" ;
    VP (Imp Pl P1) => "retengamos" ;
    VP (Imp Pl P2) => "retened" ;
    VP (Imp Pl P3) => "retengan" ;
    VP (Pass Sg Masc) => "retenido" ;
    VP (Pass Sg Fem) => "retenida" ;
    VP (Pass Pl Masc) => "retenidos" ;
    VP (Pass Pl Fem) => "retenidas"
    }
  } ;

lin sostener_V = verboV 
 {s = table {
    VI Infn => "sostener" ;
    VI Ger => "sosteniendo" ;
    VI Part => "sostenido" ;
    VP (Pres Ind Sg P1) => "sostengo" ;
    VP (Pres Ind Sg P2) => "sostienes" ;
    VP (Pres Ind Sg P3) => "sostiene" ;
    VP (Pres Ind Pl P1) => "sostenemos" ;
    VP (Pres Ind Pl P2) => "sostenéis" ;
    VP (Pres Ind Pl P3) => "sostienen" ;
    VP (Pres Subj Sg P1) => "sostenga" ;
    VP (Pres Subj Sg P2) => "sostengas" ;
    VP (Pres Subj Sg P3) => "sostenga" ;
    VP (Pres Subj Pl P1) => "sostengamos" ;
    VP (Pres Subj Pl P2) => "sostengáis" ;
    VP (Pres Subj Pl P3) => "sostengan" ;
    VP (Impf Ind Sg P1) => "sostenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sostenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sostenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sosteníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sosteníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sostenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sostuviera" ; "sostuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sostuvieras" ; "sostuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sostuviera" ; "sostuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sostuviéramos" ; "sostuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sostuvierais" ; "sostuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sostuvieran" ; "sostuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "sostuve" ;--# notpresent
    VP (Pret Sg P2) => "sostuviste" ;--# notpresent
    VP (Pret Sg P3) => "sostuvo" ;--# notpresent
    VP (Pret Pl P1) => "sostuvimos" ;--# notpresent
    VP (Pret Pl P2) => "sostuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "sostuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sostendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sostendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sostendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sostendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sostendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sostendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sostuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sostuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sostuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sostuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sostuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sostuvieren" ;--# notpresent
    VP (Cond Sg P1) => "sostendría" ;--# notpresent
    VP (Cond Sg P2) => "sostendrías" ;--# notpresent
    VP (Cond Sg P3) => "sostendría" ;--# notpresent
    VP (Cond Pl P1) => "sostendríamos" ;--# notpresent
    VP (Cond Pl P2) => "sostendríais" ;--# notpresent
    VP (Cond Pl P3) => "sostendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sosten" ;
    VP (Imp Sg P3) => "sostenga" ;
    VP (Imp Pl P1) => "sostengamos" ;
    VP (Imp Pl P2) => "sostened" ;
    VP (Imp Pl P3) => "sostengan" ;
    VP (Pass Sg Masc) => "sostenido" ;
    VP (Pass Sg Fem) => "sostenida" ;
    VP (Pass Pl Masc) => "sostenidos" ;
    VP (Pass Pl Fem) => "sostenidas"
    }
  } ;

lin tener_V = verboV 
 {s = table {
    VI Infn => "tener" ;
    VI Ger => "teniendo" ;
    VI Part => "tenido" ;
    VP (Pres Ind Sg P1) => "tengo" ;
    VP (Pres Ind Sg P2) => "tienes" ;
    VP (Pres Ind Sg P3) => "tiene" ;
    VP (Pres Ind Pl P1) => "tenemos" ;
    VP (Pres Ind Pl P2) => "tenéis" ;
    VP (Pres Ind Pl P3) => "tienen" ;
    VP (Pres Subj Sg P1) => "tenga" ;
    VP (Pres Subj Sg P2) => "tengas" ;
    VP (Pres Subj Sg P3) => "tenga" ;
    VP (Pres Subj Pl P1) => "tengamos" ;
    VP (Pres Subj Pl P2) => "tengáis" ;
    VP (Pres Subj Pl P3) => "tengan" ;
    VP (Impf Ind Sg P1) => "tenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "teníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "teníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tuviera" ; "tuviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tuvieras" ; "tuvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tuviera" ; "tuviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tuviéramos" ; "tuviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tuvierais" ; "tuvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tuvieran" ; "tuviesen"} ;--# notpresent
    VP (Pret Sg P1) => "tuve" ;--# notpresent
    VP (Pret Sg P2) => "tuviste" ;--# notpresent
    VP (Pret Sg P3) => "tuvo" ;--# notpresent
    VP (Pret Pl P1) => "tuvimos" ;--# notpresent
    VP (Pret Pl P2) => "tuvisteis" ;--# notpresent
    VP (Pret Pl P3) => "tuvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "tendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tuviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tuvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tuviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tuviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tuviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tuvieren" ;--# notpresent
    VP (Cond Sg P1) => "tendría" ;--# notpresent
    VP (Cond Sg P2) => "tendrías" ;--# notpresent
    VP (Cond Sg P3) => "tendría" ;--# notpresent
    VP (Cond Pl P1) => "tendríamos" ;--# notpresent
    VP (Cond Pl P2) => "tendríais" ;--# notpresent
    VP (Cond Pl P3) => "tendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ten" ;
    VP (Imp Sg P3) => "tenga" ;
    VP (Imp Pl P1) => "tengamos" ;
    VP (Imp Pl P2) => "tened" ;
    VP (Imp Pl P3) => "tengan" ;
    VP (Pass Sg Masc) => "tenido" ;
    VP (Pass Sg Fem) => "tenida" ;
    VP (Pass Pl Masc) => "tenidos" ;
    VP (Pass Pl Fem) => "tenidas"
    }
  } ;

lin anteponer_V = verboV 
 {s = table {
    VI Infn => "anteponer" ;
    VI Ger => "anteponiendo" ;
    VI Part => "antepuesto" ;
    VP (Pres Ind Sg P1) => "antepongo" ;
    VP (Pres Ind Sg P2) => "antepones" ;
    VP (Pres Ind Sg P3) => "antepone" ;
    VP (Pres Ind Pl P1) => "anteponemos" ;
    VP (Pres Ind Pl P2) => "anteponéis" ;
    VP (Pres Ind Pl P3) => "anteponen" ;
    VP (Pres Subj Sg P1) => "anteponga" ;
    VP (Pres Subj Sg P2) => "antepongas" ;
    VP (Pres Subj Sg P3) => "anteponga" ;
    VP (Pres Subj Pl P1) => "antepongamos" ;
    VP (Pres Subj Pl P2) => "antepongáis" ;
    VP (Pres Subj Pl P3) => "antepongan" ;
    VP (Impf Ind Sg P1) => "anteponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "anteponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "anteponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "anteponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "anteponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "anteponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"antepusiera" ; "antepusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"antepusieras" ; "antepusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"antepusiera" ; "antepusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"antepusiéramos" ; "antepusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"antepusierais" ; "antepusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"antepusieran" ; "antepusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "antepuse" ;--# notpresent
    VP (Pret Sg P2) => "antepusiste" ;--# notpresent
    VP (Pret Sg P3) => "antepuso" ;--# notpresent
    VP (Pret Pl P1) => "antepusimos" ;--# notpresent
    VP (Pret Pl P2) => "antepusisteis" ;--# notpresent
    VP (Pret Pl P3) => "antepusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "antepondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "antepondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "antepondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "antepondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "antepondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "antepondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "antepusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "antepusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "antepusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "antepusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "antepusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "antepusieren" ;--# notpresent
    VP (Cond Sg P1) => "antepondría" ;--# notpresent
    VP (Cond Sg P2) => "antepondrías" ;--# notpresent
    VP (Cond Sg P3) => "antepondría" ;--# notpresent
    VP (Cond Pl P1) => "antepondríamos" ;--# notpresent
    VP (Cond Pl P2) => "antepondríais" ;--# notpresent
    VP (Cond Pl P3) => "antepondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "antepon" ;
    VP (Imp Sg P3) => "anteponga" ;
    VP (Imp Pl P1) => "antepongamos" ;
    VP (Imp Pl P2) => "anteponed" ;
    VP (Imp Pl P3) => "antepongan" ;
    VP (Pass Sg Masc) => "antepuesto" ;
    VP (Pass Sg Fem) => "antepuesta" ;
    VP (Pass Pl Masc) => "antepuestos" ;
    VP (Pass Pl Fem) => "antepuestas"
    }
  } ;

lin aponer_V = verboV 
 {s = table {
    VI Infn => "aponer" ;
    VI Ger => "aponiendo" ;
    VI Part => "apuesto" ;
    VP (Pres Ind Sg P1) => "apongo" ;
    VP (Pres Ind Sg P2) => "apones" ;
    VP (Pres Ind Sg P3) => "apone" ;
    VP (Pres Ind Pl P1) => "aponemos" ;
    VP (Pres Ind Pl P2) => "aponéis" ;
    VP (Pres Ind Pl P3) => "aponen" ;
    VP (Pres Subj Sg P1) => "aponga" ;
    VP (Pres Subj Sg P2) => "apongas" ;
    VP (Pres Subj Sg P3) => "aponga" ;
    VP (Pres Subj Pl P1) => "apongamos" ;
    VP (Pres Subj Pl P2) => "apongáis" ;
    VP (Pres Subj Pl P3) => "apongan" ;
    VP (Impf Ind Sg P1) => "aponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apusiera" ; "apusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apusieras" ; "apusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apusiera" ; "apusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apusiéramos" ; "apusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apusierais" ; "apusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apusieran" ; "apusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "apuse" ;--# notpresent
    VP (Pret Sg P2) => "apusiste" ;--# notpresent
    VP (Pret Sg P3) => "apuso" ;--# notpresent
    VP (Pret Pl P1) => "apusimos" ;--# notpresent
    VP (Pret Pl P2) => "apusisteis" ;--# notpresent
    VP (Pret Pl P3) => "apusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "apondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "apusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "apusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "apusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apusieren" ;--# notpresent
    VP (Cond Sg P1) => "apondría" ;--# notpresent
    VP (Cond Sg P2) => "apondrías" ;--# notpresent
    VP (Cond Sg P3) => "apondría" ;--# notpresent
    VP (Cond Pl P1) => "apondríamos" ;--# notpresent
    VP (Cond Pl P2) => "apondríais" ;--# notpresent
    VP (Cond Pl P3) => "apondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apon" ;
    VP (Imp Sg P3) => "aponga" ;
    VP (Imp Pl P1) => "apongamos" ;
    VP (Imp Pl P2) => "aponed" ;
    VP (Imp Pl P3) => "apongan" ;
    VP (Pass Sg Masc) => "apuesto" ;
    VP (Pass Sg Fem) => "apuesta" ;
    VP (Pass Pl Masc) => "apuestos" ;
    VP (Pass Pl Fem) => "apuestas"
    }
  } ;

lin componer_V = verboV 
 {s = table {
    VI Infn => "componer" ;
    VI Ger => "componiendo" ;
    VI Part => "compuesto" ;
    VP (Pres Ind Sg P1) => "compongo" ;
    VP (Pres Ind Sg P2) => "compones" ;
    VP (Pres Ind Sg P3) => "compone" ;
    VP (Pres Ind Pl P1) => "componemos" ;
    VP (Pres Ind Pl P2) => "componéis" ;
    VP (Pres Ind Pl P3) => "componen" ;
    VP (Pres Subj Sg P1) => "componga" ;
    VP (Pres Subj Sg P2) => "compongas" ;
    VP (Pres Subj Sg P3) => "componga" ;
    VP (Pres Subj Pl P1) => "compongamos" ;
    VP (Pres Subj Pl P2) => "compongáis" ;
    VP (Pres Subj Pl P3) => "compongan" ;
    VP (Impf Ind Sg P1) => "componía" ;--# notpresent
    VP (Impf Ind Sg P2) => "componías" ;--# notpresent
    VP (Impf Ind Sg P3) => "componía" ;--# notpresent
    VP (Impf Ind Pl P1) => "componíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "componíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "componían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"compusiera" ; "compusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"compusieras" ; "compusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"compusiera" ; "compusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"compusiéramos" ; "compusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"compusierais" ; "compusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"compusieran" ; "compusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "compuse" ;--# notpresent
    VP (Pret Sg P2) => "compusiste" ;--# notpresent
    VP (Pret Sg P3) => "compuso" ;--# notpresent
    VP (Pret Pl P1) => "compusimos" ;--# notpresent
    VP (Pret Pl P2) => "compusisteis" ;--# notpresent
    VP (Pret Pl P3) => "compusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "compondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "compondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "compondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "compondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "compondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "compondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "compusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "compusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "compusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "compusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "compusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "compusieren" ;--# notpresent
    VP (Cond Sg P1) => "compondría" ;--# notpresent
    VP (Cond Sg P2) => "compondrías" ;--# notpresent
    VP (Cond Sg P3) => "compondría" ;--# notpresent
    VP (Cond Pl P1) => "compondríamos" ;--# notpresent
    VP (Cond Pl P2) => "compondríais" ;--# notpresent
    VP (Cond Pl P3) => "compondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "compon" ;
    VP (Imp Sg P3) => "componga" ;
    VP (Imp Pl P1) => "compongamos" ;
    VP (Imp Pl P2) => "componed" ;
    VP (Imp Pl P3) => "compongan" ;
    VP (Pass Sg Masc) => "compuesto" ;
    VP (Pass Sg Fem) => "compuesta" ;
    VP (Pass Pl Masc) => "compuestos" ;
    VP (Pass Pl Fem) => "compuestas"
    }
  } ;

lin contraponer_V = verboV 
 {s = table {
    VI Infn => "contraponer" ;
    VI Ger => "contraponiendo" ;
    VI Part => "contrapuesto" ;
    VP (Pres Ind Sg P1) => "contrapongo" ;
    VP (Pres Ind Sg P2) => "contrapones" ;
    VP (Pres Ind Sg P3) => "contrapone" ;
    VP (Pres Ind Pl P1) => "contraponemos" ;
    VP (Pres Ind Pl P2) => "contraponéis" ;
    VP (Pres Ind Pl P3) => "contraponen" ;
    VP (Pres Subj Sg P1) => "contraponga" ;
    VP (Pres Subj Sg P2) => "contrapongas" ;
    VP (Pres Subj Sg P3) => "contraponga" ;
    VP (Pres Subj Pl P1) => "contrapongamos" ;
    VP (Pres Subj Pl P2) => "contrapongáis" ;
    VP (Pres Subj Pl P3) => "contrapongan" ;
    VP (Impf Ind Sg P1) => "contraponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contraponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contraponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contraponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contraponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contraponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contrapusiera" ; "contrapusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contrapusieras" ; "contrapusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contrapusiera" ; "contrapusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contrapusiéramos" ; "contrapusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contrapusierais" ; "contrapusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contrapusieran" ; "contrapusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "contrapuse" ;--# notpresent
    VP (Pret Sg P2) => "contrapusiste" ;--# notpresent
    VP (Pret Sg P3) => "contrapuso" ;--# notpresent
    VP (Pret Pl P1) => "contrapusimos" ;--# notpresent
    VP (Pret Pl P2) => "contrapusisteis" ;--# notpresent
    VP (Pret Pl P3) => "contrapusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contrapondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contrapondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contrapondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contrapondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contrapondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contrapondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contrapusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contrapusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contrapusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contrapusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contrapusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contrapusieren" ;--# notpresent
    VP (Cond Sg P1) => "contrapondría" ;--# notpresent
    VP (Cond Sg P2) => "contrapondrías" ;--# notpresent
    VP (Cond Sg P3) => "contrapondría" ;--# notpresent
    VP (Cond Pl P1) => "contrapondríamos" ;--# notpresent
    VP (Cond Pl P2) => "contrapondríais" ;--# notpresent
    VP (Cond Pl P3) => "contrapondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contrapon" ;
    VP (Imp Sg P3) => "contraponga" ;
    VP (Imp Pl P1) => "contrapongamos" ;
    VP (Imp Pl P2) => "contraponed" ;
    VP (Imp Pl P3) => "contrapongan" ;
    VP (Pass Sg Masc) => "contrapuesto" ;
    VP (Pass Sg Fem) => "contrapuesta" ;
    VP (Pass Pl Masc) => "contrapuestos" ;
    VP (Pass Pl Fem) => "contrapuestas"
    }
  } ;

lin deponer_V = verboV 
 {s = table {
    VI Infn => "deponer" ;
    VI Ger => "deponiendo" ;
    VI Part => "depuesto" ;
    VP (Pres Ind Sg P1) => "depongo" ;
    VP (Pres Ind Sg P2) => "depones" ;
    VP (Pres Ind Sg P3) => "depone" ;
    VP (Pres Ind Pl P1) => "deponemos" ;
    VP (Pres Ind Pl P2) => "deponéis" ;
    VP (Pres Ind Pl P3) => "deponen" ;
    VP (Pres Subj Sg P1) => "deponga" ;
    VP (Pres Subj Sg P2) => "depongas" ;
    VP (Pres Subj Sg P3) => "deponga" ;
    VP (Pres Subj Pl P1) => "depongamos" ;
    VP (Pres Subj Pl P2) => "depongáis" ;
    VP (Pres Subj Pl P3) => "depongan" ;
    VP (Impf Ind Sg P1) => "deponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "deponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "deponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"depusiera" ; "depusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"depusieras" ; "depusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"depusiera" ; "depusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"depusiéramos" ; "depusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"depusierais" ; "depusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"depusieran" ; "depusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "depuse" ;--# notpresent
    VP (Pret Sg P2) => "depusiste" ;--# notpresent
    VP (Pret Sg P3) => "depuso" ;--# notpresent
    VP (Pret Pl P1) => "depusimos" ;--# notpresent
    VP (Pret Pl P2) => "depusisteis" ;--# notpresent
    VP (Pret Pl P3) => "depusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "depondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "depondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "depondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "depondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "depondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "depondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "depusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "depusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "depusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "depusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "depusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "depusieren" ;--# notpresent
    VP (Cond Sg P1) => "depondría" ;--# notpresent
    VP (Cond Sg P2) => "depondrías" ;--# notpresent
    VP (Cond Sg P3) => "depondría" ;--# notpresent
    VP (Cond Pl P1) => "depondríamos" ;--# notpresent
    VP (Cond Pl P2) => "depondríais" ;--# notpresent
    VP (Cond Pl P3) => "depondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "depon" ;
    VP (Imp Sg P3) => "deponga" ;
    VP (Imp Pl P1) => "depongamos" ;
    VP (Imp Pl P2) => "deponed" ;
    VP (Imp Pl P3) => "depongan" ;
    VP (Pass Sg Masc) => "depuesto" ;
    VP (Pass Sg Fem) => "depuesta" ;
    VP (Pass Pl Masc) => "depuestos" ;
    VP (Pass Pl Fem) => "depuestas"
    }
  } ;

lin descomponer_V = verboV 
 {s = table {
    VI Infn => "descomponer" ;
    VI Ger => "descomponiendo" ;
    VI Part => "descompuesto" ;
    VP (Pres Ind Sg P1) => "descompongo" ;
    VP (Pres Ind Sg P2) => "descompones" ;
    VP (Pres Ind Sg P3) => "descompone" ;
    VP (Pres Ind Pl P1) => "descomponemos" ;
    VP (Pres Ind Pl P2) => "descomponéis" ;
    VP (Pres Ind Pl P3) => "descomponen" ;
    VP (Pres Subj Sg P1) => "descomponga" ;
    VP (Pres Subj Sg P2) => "descompongas" ;
    VP (Pres Subj Sg P3) => "descomponga" ;
    VP (Pres Subj Pl P1) => "descompongamos" ;
    VP (Pres Subj Pl P2) => "descompongáis" ;
    VP (Pres Subj Pl P3) => "descompongan" ;
    VP (Impf Ind Sg P1) => "descomponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descomponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descomponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descomponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descomponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descomponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descompusiera" ; "descompusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descompusieras" ; "descompusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descompusiera" ; "descompusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descompusiéramos" ; "descompusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descompusierais" ; "descompusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descompusieran" ; "descompusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "descompuse" ;--# notpresent
    VP (Pret Sg P2) => "descompusiste" ;--# notpresent
    VP (Pret Sg P3) => "descompuso" ;--# notpresent
    VP (Pret Pl P1) => "descompusimos" ;--# notpresent
    VP (Pret Pl P2) => "descompusisteis" ;--# notpresent
    VP (Pret Pl P3) => "descompusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descompondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descompondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descompondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descompondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descompondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descompondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descompusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descompusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descompusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descompusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descompusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descompusieren" ;--# notpresent
    VP (Cond Sg P1) => "descompondría" ;--# notpresent
    VP (Cond Sg P2) => "descompondrías" ;--# notpresent
    VP (Cond Sg P3) => "descompondría" ;--# notpresent
    VP (Cond Pl P1) => "descompondríamos" ;--# notpresent
    VP (Cond Pl P2) => "descompondríais" ;--# notpresent
    VP (Cond Pl P3) => "descompondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descompon" ;
    VP (Imp Sg P3) => "descomponga" ;
    VP (Imp Pl P1) => "descompongamos" ;
    VP (Imp Pl P2) => "descomponed" ;
    VP (Imp Pl P3) => "descompongan" ;
    VP (Pass Sg Masc) => "descompuesto" ;
    VP (Pass Sg Fem) => "descompuesta" ;
    VP (Pass Pl Masc) => "descompuestos" ;
    VP (Pass Pl Fem) => "descompuestas"
    }
  } ;

lin desimponer_V = verboV 
 {s = table {
    VI Infn => "desimponer" ;
    VI Ger => "desimponiendo" ;
    VI Part => "desimpuesto" ;
    VP (Pres Ind Sg P1) => "desimpongo" ;
    VP (Pres Ind Sg P2) => "desimpones" ;
    VP (Pres Ind Sg P3) => "desimpone" ;
    VP (Pres Ind Pl P1) => "desimponemos" ;
    VP (Pres Ind Pl P2) => "desimponéis" ;
    VP (Pres Ind Pl P3) => "desimponen" ;
    VP (Pres Subj Sg P1) => "desimponga" ;
    VP (Pres Subj Sg P2) => "desimpongas" ;
    VP (Pres Subj Sg P3) => "desimponga" ;
    VP (Pres Subj Pl P1) => "desimpongamos" ;
    VP (Pres Subj Pl P2) => "desimpongáis" ;
    VP (Pres Subj Pl P3) => "desimpongan" ;
    VP (Impf Ind Sg P1) => "desimponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desimponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desimponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desimponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desimponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desimponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desimpusiera" ; "desimpusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desimpusieras" ; "desimpusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desimpusiera" ; "desimpusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desimpusiéramos" ; "desimpusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desimpusierais" ; "desimpusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desimpusieran" ; "desimpusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desimpuse" ;--# notpresent
    VP (Pret Sg P2) => "desimpusiste" ;--# notpresent
    VP (Pret Sg P3) => "desimpuso" ;--# notpresent
    VP (Pret Pl P1) => "desimpusimos" ;--# notpresent
    VP (Pret Pl P2) => "desimpusisteis" ;--# notpresent
    VP (Pret Pl P3) => "desimpusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desimpondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desimpondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desimpondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desimpondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desimpondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desimpondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desimpusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desimpusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desimpusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desimpusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desimpusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desimpusieren" ;--# notpresent
    VP (Cond Sg P1) => "desimpondría" ;--# notpresent
    VP (Cond Sg P2) => "desimpondrías" ;--# notpresent
    VP (Cond Sg P3) => "desimpondría" ;--# notpresent
    VP (Cond Pl P1) => "desimpondríamos" ;--# notpresent
    VP (Cond Pl P2) => "desimpondríais" ;--# notpresent
    VP (Cond Pl P3) => "desimpondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desimpon" ;
    VP (Imp Sg P3) => "desimponga" ;
    VP (Imp Pl P1) => "desimpongamos" ;
    VP (Imp Pl P2) => "desimponed" ;
    VP (Imp Pl P3) => "desimpongan" ;
    VP (Pass Sg Masc) => "desimpuesto" ;
    VP (Pass Sg Fem) => "desimpuesta" ;
    VP (Pass Pl Masc) => "desimpuestos" ;
    VP (Pass Pl Fem) => "desimpuestas"
    }
  } ;

lin disponer_V = verboV 
 {s = table {
    VI Infn => "disponer" ;
    VI Ger => "disponiendo" ;
    VI Part => "dispuesto" ;
    VP (Pres Ind Sg P1) => "dispongo" ;
    VP (Pres Ind Sg P2) => "dispones" ;
    VP (Pres Ind Sg P3) => "dispone" ;
    VP (Pres Ind Pl P1) => "disponemos" ;
    VP (Pres Ind Pl P2) => "disponéis" ;
    VP (Pres Ind Pl P3) => "disponen" ;
    VP (Pres Subj Sg P1) => "disponga" ;
    VP (Pres Subj Sg P2) => "dispongas" ;
    VP (Pres Subj Sg P3) => "disponga" ;
    VP (Pres Subj Pl P1) => "dispongamos" ;
    VP (Pres Subj Pl P2) => "dispongáis" ;
    VP (Pres Subj Pl P3) => "dispongan" ;
    VP (Impf Ind Sg P1) => "disponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "disponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "disponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "disponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "disponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "disponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dispusiera" ; "dispusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dispusieras" ; "dispusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dispusiera" ; "dispusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"dispusiéramos" ; "dispusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dispusierais" ; "dispusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dispusieran" ; "dispusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "dispuse" ;--# notpresent
    VP (Pret Sg P2) => "dispusiste" ;--# notpresent
    VP (Pret Sg P3) => "dispuso" ;--# notpresent
    VP (Pret Pl P1) => "dispusimos" ;--# notpresent
    VP (Pret Pl P2) => "dispusisteis" ;--# notpresent
    VP (Pret Pl P3) => "dispusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "dispondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dispondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dispondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "dispondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "dispondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dispondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dispusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "dispusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "dispusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "dispusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dispusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dispusieren" ;--# notpresent
    VP (Cond Sg P1) => "dispondría" ;--# notpresent
    VP (Cond Sg P2) => "dispondrías" ;--# notpresent
    VP (Cond Sg P3) => "dispondría" ;--# notpresent
    VP (Cond Pl P1) => "dispondríamos" ;--# notpresent
    VP (Cond Pl P2) => "dispondríais" ;--# notpresent
    VP (Cond Pl P3) => "dispondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "dispon" ;
    VP (Imp Sg P3) => "disponga" ;
    VP (Imp Pl P1) => "dispongamos" ;
    VP (Imp Pl P2) => "disponed" ;
    VP (Imp Pl P3) => "dispongan" ;
    VP (Pass Sg Masc) => "dispuesto" ;
    VP (Pass Sg Fem) => "dispuesta" ;
    VP (Pass Pl Masc) => "dispuestos" ;
    VP (Pass Pl Fem) => "dispuestas"
    }
  } ;

lin exponer_V = verboV 
 {s = table {
    VI Infn => "exponer" ;
    VI Ger => "exponiendo" ;
    VI Part => "expuesto" ;
    VP (Pres Ind Sg P1) => "expongo" ;
    VP (Pres Ind Sg P2) => "expones" ;
    VP (Pres Ind Sg P3) => "expone" ;
    VP (Pres Ind Pl P1) => "exponemos" ;
    VP (Pres Ind Pl P2) => "exponéis" ;
    VP (Pres Ind Pl P3) => "exponen" ;
    VP (Pres Subj Sg P1) => "exponga" ;
    VP (Pres Subj Sg P2) => "expongas" ;
    VP (Pres Subj Sg P3) => "exponga" ;
    VP (Pres Subj Pl P1) => "expongamos" ;
    VP (Pres Subj Pl P2) => "expongáis" ;
    VP (Pres Subj Pl P3) => "expongan" ;
    VP (Impf Ind Sg P1) => "exponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "exponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "exponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "exponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "exponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "exponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"expusiera" ; "expusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"expusieras" ; "expusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"expusiera" ; "expusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"expusiéramos" ; "expusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"expusierais" ; "expusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"expusieran" ; "expusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "expuse" ;--# notpresent
    VP (Pret Sg P2) => "expusiste" ;--# notpresent
    VP (Pret Sg P3) => "expuso" ;--# notpresent
    VP (Pret Pl P1) => "expusimos" ;--# notpresent
    VP (Pret Pl P2) => "expusisteis" ;--# notpresent
    VP (Pret Pl P3) => "expusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "expondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "expondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "expondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "expondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "expondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "expondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "expusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "expusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "expusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "expusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "expusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "expusieren" ;--# notpresent
    VP (Cond Sg P1) => "expondría" ;--# notpresent
    VP (Cond Sg P2) => "expondrías" ;--# notpresent
    VP (Cond Sg P3) => "expondría" ;--# notpresent
    VP (Cond Pl P1) => "expondríamos" ;--# notpresent
    VP (Cond Pl P2) => "expondríais" ;--# notpresent
    VP (Cond Pl P3) => "expondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "expon" ;
    VP (Imp Sg P3) => "exponga" ;
    VP (Imp Pl P1) => "expongamos" ;
    VP (Imp Pl P2) => "exponed" ;
    VP (Imp Pl P3) => "expongan" ;
    VP (Pass Sg Masc) => "expuesto" ;
    VP (Pass Sg Fem) => "expuesta" ;
    VP (Pass Pl Masc) => "expuestos" ;
    VP (Pass Pl Fem) => "expuestas"
    }
  } ;

lin fotocomponer_V = verboV 
 {s = table {
    VI Infn => "fotocomponer" ;
    VI Ger => "fotocomponiendo" ;
    VI Part => "fotocompuesto" ;
    VP (Pres Ind Sg P1) => "fotocompongo" ;
    VP (Pres Ind Sg P2) => "fotocompones" ;
    VP (Pres Ind Sg P3) => "fotocompone" ;
    VP (Pres Ind Pl P1) => "fotocomponemos" ;
    VP (Pres Ind Pl P2) => "fotocomponéis" ;
    VP (Pres Ind Pl P3) => "fotocomponen" ;
    VP (Pres Subj Sg P1) => "fotocomponga" ;
    VP (Pres Subj Sg P2) => "fotocompongas" ;
    VP (Pres Subj Sg P3) => "fotocomponga" ;
    VP (Pres Subj Pl P1) => "fotocompongamos" ;
    VP (Pres Subj Pl P2) => "fotocompongáis" ;
    VP (Pres Subj Pl P3) => "fotocompongan" ;
    VP (Impf Ind Sg P1) => "fotocomponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fotocomponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fotocomponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fotocomponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fotocomponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fotocomponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fotocompusiera" ; "fotocompusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fotocompusieras" ; "fotocompusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fotocompusiera" ; "fotocompusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fotocompusiéramos" ; "fotocompusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fotocompusierais" ; "fotocompusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fotocompusieran" ; "fotocompusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "fotocompuse" ;--# notpresent
    VP (Pret Sg P2) => "fotocompusiste" ;--# notpresent
    VP (Pret Sg P3) => "fotocompuso" ;--# notpresent
    VP (Pret Pl P1) => "fotocompusimos" ;--# notpresent
    VP (Pret Pl P2) => "fotocompusisteis" ;--# notpresent
    VP (Pret Pl P3) => "fotocompusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fotocompondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fotocompondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fotocompondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fotocompondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fotocompondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fotocompondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fotocompusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fotocompusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fotocompusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fotocompusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fotocompusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fotocompusieren" ;--# notpresent
    VP (Cond Sg P1) => "fotocompondría" ;--# notpresent
    VP (Cond Sg P2) => "fotocompondrías" ;--# notpresent
    VP (Cond Sg P3) => "fotocompondría" ;--# notpresent
    VP (Cond Pl P1) => "fotocompondríamos" ;--# notpresent
    VP (Cond Pl P2) => "fotocompondríais" ;--# notpresent
    VP (Cond Pl P3) => "fotocompondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fotocompon" ;
    VP (Imp Sg P3) => "fotocomponga" ;
    VP (Imp Pl P1) => "fotocompongamos" ;
    VP (Imp Pl P2) => "fotocomponed" ;
    VP (Imp Pl P3) => "fotocompongan" ;
    VP (Pass Sg Masc) => "fotocompuesto" ;
    VP (Pass Sg Fem) => "fotocompuesta" ;
    VP (Pass Pl Masc) => "fotocompuestos" ;
    VP (Pass Pl Fem) => "fotocompuestas"
    }
  } ;

lin imponer_V = verboV 
 {s = table {
    VI Infn => "imponer" ;
    VI Ger => "imponiendo" ;
    VI Part => "impuesto" ;
    VP (Pres Ind Sg P1) => "impongo" ;
    VP (Pres Ind Sg P2) => "impones" ;
    VP (Pres Ind Sg P3) => "impone" ;
    VP (Pres Ind Pl P1) => "imponemos" ;
    VP (Pres Ind Pl P2) => "imponéis" ;
    VP (Pres Ind Pl P3) => "imponen" ;
    VP (Pres Subj Sg P1) => "imponga" ;
    VP (Pres Subj Sg P2) => "impongas" ;
    VP (Pres Subj Sg P3) => "imponga" ;
    VP (Pres Subj Pl P1) => "impongamos" ;
    VP (Pres Subj Pl P2) => "impongáis" ;
    VP (Pres Subj Pl P3) => "impongan" ;
    VP (Impf Ind Sg P1) => "imponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "imponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "imponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "imponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "imponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "imponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"impusiera" ; "impusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"impusieras" ; "impusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"impusiera" ; "impusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"impusiéramos" ; "impusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"impusierais" ; "impusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"impusieran" ; "impusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "impuse" ;--# notpresent
    VP (Pret Sg P2) => "impusiste" ;--# notpresent
    VP (Pret Sg P3) => "impuso" ;--# notpresent
    VP (Pret Pl P1) => "impusimos" ;--# notpresent
    VP (Pret Pl P2) => "impusisteis" ;--# notpresent
    VP (Pret Pl P3) => "impusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "impondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "impondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "impondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "impondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "impondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "impondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "impusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "impusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "impusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "impusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "impusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "impusieren" ;--# notpresent
    VP (Cond Sg P1) => "impondría" ;--# notpresent
    VP (Cond Sg P2) => "impondrías" ;--# notpresent
    VP (Cond Sg P3) => "impondría" ;--# notpresent
    VP (Cond Pl P1) => "impondríamos" ;--# notpresent
    VP (Cond Pl P2) => "impondríais" ;--# notpresent
    VP (Cond Pl P3) => "impondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "impon" ;
    VP (Imp Sg P3) => "imponga" ;
    VP (Imp Pl P1) => "impongamos" ;
    VP (Imp Pl P2) => "imponed" ;
    VP (Imp Pl P3) => "impongan" ;
    VP (Pass Sg Masc) => "impuesto" ;
    VP (Pass Sg Fem) => "impuesta" ;
    VP (Pass Pl Masc) => "impuestos" ;
    VP (Pass Pl Fem) => "impuestas"
    }
  } ;

lin indisponer_V = verboV 
 {s = table {
    VI Infn => "indisponer" ;
    VI Ger => "indisponiendo" ;
    VI Part => "indispuesto" ;
    VP (Pres Ind Sg P1) => "indispongo" ;
    VP (Pres Ind Sg P2) => "indispones" ;
    VP (Pres Ind Sg P3) => "indispone" ;
    VP (Pres Ind Pl P1) => "indisponemos" ;
    VP (Pres Ind Pl P2) => "indisponéis" ;
    VP (Pres Ind Pl P3) => "indisponen" ;
    VP (Pres Subj Sg P1) => "indisponga" ;
    VP (Pres Subj Sg P2) => "indispongas" ;
    VP (Pres Subj Sg P3) => "indisponga" ;
    VP (Pres Subj Pl P1) => "indispongamos" ;
    VP (Pres Subj Pl P2) => "indispongáis" ;
    VP (Pres Subj Pl P3) => "indispongan" ;
    VP (Impf Ind Sg P1) => "indisponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "indisponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "indisponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "indisponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "indisponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "indisponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"indispusiera" ; "indispusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"indispusieras" ; "indispusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"indispusiera" ; "indispusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"indispusiéramos" ; "indispusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"indispusierais" ; "indispusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"indispusieran" ; "indispusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "indispuse" ;--# notpresent
    VP (Pret Sg P2) => "indispusiste" ;--# notpresent
    VP (Pret Sg P3) => "indispuso" ;--# notpresent
    VP (Pret Pl P1) => "indispusimos" ;--# notpresent
    VP (Pret Pl P2) => "indispusisteis" ;--# notpresent
    VP (Pret Pl P3) => "indispusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "indispondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "indispondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "indispondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "indispondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "indispondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "indispondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "indispusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "indispusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "indispusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "indispusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "indispusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "indispusieren" ;--# notpresent
    VP (Cond Sg P1) => "indispondría" ;--# notpresent
    VP (Cond Sg P2) => "indispondrías" ;--# notpresent
    VP (Cond Sg P3) => "indispondría" ;--# notpresent
    VP (Cond Pl P1) => "indispondríamos" ;--# notpresent
    VP (Cond Pl P2) => "indispondríais" ;--# notpresent
    VP (Cond Pl P3) => "indispondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "indispon" ;
    VP (Imp Sg P3) => "indisponga" ;
    VP (Imp Pl P1) => "indispongamos" ;
    VP (Imp Pl P2) => "indisponed" ;
    VP (Imp Pl P3) => "indispongan" ;
    VP (Pass Sg Masc) => "indispuesto" ;
    VP (Pass Sg Fem) => "indispuesta" ;
    VP (Pass Pl Masc) => "indispuestos" ;
    VP (Pass Pl Fem) => "indispuestas"
    }
  } ;

lin interponer_V = verboV 
 {s = table {
    VI Infn => "interponer" ;
    VI Ger => "interponiendo" ;
    VI Part => "interpuesto" ;
    VP (Pres Ind Sg P1) => "interpongo" ;
    VP (Pres Ind Sg P2) => "interpones" ;
    VP (Pres Ind Sg P3) => "interpone" ;
    VP (Pres Ind Pl P1) => "interponemos" ;
    VP (Pres Ind Pl P2) => "interponéis" ;
    VP (Pres Ind Pl P3) => "interponen" ;
    VP (Pres Subj Sg P1) => "interponga" ;
    VP (Pres Subj Sg P2) => "interpongas" ;
    VP (Pres Subj Sg P3) => "interponga" ;
    VP (Pres Subj Pl P1) => "interpongamos" ;
    VP (Pres Subj Pl P2) => "interpongáis" ;
    VP (Pres Subj Pl P3) => "interpongan" ;
    VP (Impf Ind Sg P1) => "interponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "interponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "interponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "interponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "interponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "interponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"interpusiera" ; "interpusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"interpusieras" ; "interpusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"interpusiera" ; "interpusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"interpusiéramos" ; "interpusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"interpusierais" ; "interpusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"interpusieran" ; "interpusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "interpuse" ;--# notpresent
    VP (Pret Sg P2) => "interpusiste" ;--# notpresent
    VP (Pret Sg P3) => "interpuso" ;--# notpresent
    VP (Pret Pl P1) => "interpusimos" ;--# notpresent
    VP (Pret Pl P2) => "interpusisteis" ;--# notpresent
    VP (Pret Pl P3) => "interpusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "interpondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "interpondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "interpondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "interpondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "interpondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "interpondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "interpusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "interpusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "interpusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "interpusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "interpusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "interpusieren" ;--# notpresent
    VP (Cond Sg P1) => "interpondría" ;--# notpresent
    VP (Cond Sg P2) => "interpondrías" ;--# notpresent
    VP (Cond Sg P3) => "interpondría" ;--# notpresent
    VP (Cond Pl P1) => "interpondríamos" ;--# notpresent
    VP (Cond Pl P2) => "interpondríais" ;--# notpresent
    VP (Cond Pl P3) => "interpondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "interpon" ;
    VP (Imp Sg P3) => "interponga" ;
    VP (Imp Pl P1) => "interpongamos" ;
    VP (Imp Pl P2) => "interponed" ;
    VP (Imp Pl P3) => "interpongan" ;
    VP (Pass Sg Masc) => "interpuesto" ;
    VP (Pass Sg Fem) => "interpuesta" ;
    VP (Pass Pl Masc) => "interpuestos" ;
    VP (Pass Pl Fem) => "interpuestas"
    }
  } ;

lin oponer_V = verboV 
 {s = table {
    VI Infn => "oponer" ;
    VI Ger => "oponiendo" ;
    VI Part => "opuesto" ;
    VP (Pres Ind Sg P1) => "opongo" ;
    VP (Pres Ind Sg P2) => "opones" ;
    VP (Pres Ind Sg P3) => "opone" ;
    VP (Pres Ind Pl P1) => "oponemos" ;
    VP (Pres Ind Pl P2) => "oponéis" ;
    VP (Pres Ind Pl P3) => "oponen" ;
    VP (Pres Subj Sg P1) => "oponga" ;
    VP (Pres Subj Sg P2) => "opongas" ;
    VP (Pres Subj Sg P3) => "oponga" ;
    VP (Pres Subj Pl P1) => "opongamos" ;
    VP (Pres Subj Pl P2) => "opongáis" ;
    VP (Pres Subj Pl P3) => "opongan" ;
    VP (Impf Ind Sg P1) => "oponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "oponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "oponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "oponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "oponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "oponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"opusiera" ; "opusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"opusieras" ; "opusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"opusiera" ; "opusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"opusiéramos" ; "opusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"opusierais" ; "opusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"opusieran" ; "opusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "opuse" ;--# notpresent
    VP (Pret Sg P2) => "opusiste" ;--# notpresent
    VP (Pret Sg P3) => "opuso" ;--# notpresent
    VP (Pret Pl P1) => "opusimos" ;--# notpresent
    VP (Pret Pl P2) => "opusisteis" ;--# notpresent
    VP (Pret Pl P3) => "opusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "opondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "opondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "opondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "opondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "opondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "opondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "opusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "opusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "opusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "opusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "opusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "opusieren" ;--# notpresent
    VP (Cond Sg P1) => "opondría" ;--# notpresent
    VP (Cond Sg P2) => "opondrías" ;--# notpresent
    VP (Cond Sg P3) => "opondría" ;--# notpresent
    VP (Cond Pl P1) => "opondríamos" ;--# notpresent
    VP (Cond Pl P2) => "opondríais" ;--# notpresent
    VP (Cond Pl P3) => "opondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "opon" ;
    VP (Imp Sg P3) => "oponga" ;
    VP (Imp Pl P1) => "opongamos" ;
    VP (Imp Pl P2) => "oponed" ;
    VP (Imp Pl P3) => "opongan" ;
    VP (Pass Sg Masc) => "opuesto" ;
    VP (Pass Sg Fem) => "opuesta" ;
    VP (Pass Pl Masc) => "opuestos" ;
    VP (Pass Pl Fem) => "opuestas"
    }
  } ;

lin poner_V = verboV 
 {s = table {
    VI Infn => "poner" ;
    VI Ger => "poniendo" ;
    VI Part => "puesto" ;
    VP (Pres Ind Sg P1) => "pongo" ;
    VP (Pres Ind Sg P2) => "pones" ;
    VP (Pres Ind Sg P3) => "pone" ;
    VP (Pres Ind Pl P1) => "ponemos" ;
    VP (Pres Ind Pl P2) => "ponéis" ;
    VP (Pres Ind Pl P3) => "ponen" ;
    VP (Pres Subj Sg P1) => "ponga" ;
    VP (Pres Subj Sg P2) => "pongas" ;
    VP (Pres Subj Sg P3) => "ponga" ;
    VP (Pres Subj Pl P1) => "pongamos" ;
    VP (Pres Subj Pl P2) => "pongáis" ;
    VP (Pres Subj Pl P3) => "pongan" ;
    VP (Impf Ind Sg P1) => "ponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "poníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "poníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pusiera" ; "pusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pusieras" ; "pusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pusiera" ; "pusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pusiéramos" ; "pusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pusierais" ; "pusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pusieran" ; "pusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "puse" ;--# notpresent
    VP (Pret Sg P2) => "pusiste" ;--# notpresent
    VP (Pret Sg P3) => "puso" ;--# notpresent
    VP (Pret Pl P1) => "pusimos" ;--# notpresent
    VP (Pret Pl P2) => "pusisteis" ;--# notpresent
    VP (Pret Pl P3) => "pusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pusieren" ;--# notpresent
    VP (Cond Sg P1) => "pondría" ;--# notpresent
    VP (Cond Sg P2) => "pondrías" ;--# notpresent
    VP (Cond Sg P3) => "pondría" ;--# notpresent
    VP (Cond Pl P1) => "pondríamos" ;--# notpresent
    VP (Cond Pl P2) => "pondríais" ;--# notpresent
    VP (Cond Pl P3) => "pondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pon" ;
    VP (Imp Sg P3) => "ponga" ;
    VP (Imp Pl P1) => "pongamos" ;
    VP (Imp Pl P2) => "poned" ;
    VP (Imp Pl P3) => "pongan" ;
    VP (Pass Sg Masc) => "puesto" ;
    VP (Pass Sg Fem) => "puesta" ;
    VP (Pass Pl Masc) => "puestos" ;
    VP (Pass Pl Fem) => "puestas"
    }
  } ;

lin posponer_V = verboV 
 {s = table {
    VI Infn => "posponer" ;
    VI Ger => "posponiendo" ;
    VI Part => "pospuesto" ;
    VP (Pres Ind Sg P1) => "pospongo" ;
    VP (Pres Ind Sg P2) => "pospones" ;
    VP (Pres Ind Sg P3) => "pospone" ;
    VP (Pres Ind Pl P1) => "posponemos" ;
    VP (Pres Ind Pl P2) => "posponéis" ;
    VP (Pres Ind Pl P3) => "posponen" ;
    VP (Pres Subj Sg P1) => "posponga" ;
    VP (Pres Subj Sg P2) => "pospongas" ;
    VP (Pres Subj Sg P3) => "posponga" ;
    VP (Pres Subj Pl P1) => "pospongamos" ;
    VP (Pres Subj Pl P2) => "pospongáis" ;
    VP (Pres Subj Pl P3) => "pospongan" ;
    VP (Impf Ind Sg P1) => "posponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "posponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "posponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "posponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "posponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "posponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pospusiera" ; "pospusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pospusieras" ; "pospusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pospusiera" ; "pospusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pospusiéramos" ; "pospusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pospusierais" ; "pospusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pospusieran" ; "pospusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "pospuse" ;--# notpresent
    VP (Pret Sg P2) => "pospusiste" ;--# notpresent
    VP (Pret Sg P3) => "pospuso" ;--# notpresent
    VP (Pret Pl P1) => "pospusimos" ;--# notpresent
    VP (Pret Pl P2) => "pospusisteis" ;--# notpresent
    VP (Pret Pl P3) => "pospusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pospondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pospondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pospondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pospondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pospondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pospondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pospusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pospusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pospusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pospusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pospusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pospusieren" ;--# notpresent
    VP (Cond Sg P1) => "pospondría" ;--# notpresent
    VP (Cond Sg P2) => "pospondrías" ;--# notpresent
    VP (Cond Sg P3) => "pospondría" ;--# notpresent
    VP (Cond Pl P1) => "pospondríamos" ;--# notpresent
    VP (Cond Pl P2) => "pospondríais" ;--# notpresent
    VP (Cond Pl P3) => "pospondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pospon" ;
    VP (Imp Sg P3) => "posponga" ;
    VP (Imp Pl P1) => "pospongamos" ;
    VP (Imp Pl P2) => "posponed" ;
    VP (Imp Pl P3) => "pospongan" ;
    VP (Pass Sg Masc) => "pospuesto" ;
    VP (Pass Sg Fem) => "pospuesta" ;
    VP (Pass Pl Masc) => "pospuestos" ;
    VP (Pass Pl Fem) => "pospuestas"
    }
  } ;

lin predisponer_V = verboV 
 {s = table {
    VI Infn => "predisponer" ;
    VI Ger => "predisponiendo" ;
    VI Part => "predispuesto" ;
    VP (Pres Ind Sg P1) => "predispongo" ;
    VP (Pres Ind Sg P2) => "predispones" ;
    VP (Pres Ind Sg P3) => "predispone" ;
    VP (Pres Ind Pl P1) => "predisponemos" ;
    VP (Pres Ind Pl P2) => "predisponéis" ;
    VP (Pres Ind Pl P3) => "predisponen" ;
    VP (Pres Subj Sg P1) => "predisponga" ;
    VP (Pres Subj Sg P2) => "predispongas" ;
    VP (Pres Subj Sg P3) => "predisponga" ;
    VP (Pres Subj Pl P1) => "predispongamos" ;
    VP (Pres Subj Pl P2) => "predispongáis" ;
    VP (Pres Subj Pl P3) => "predispongan" ;
    VP (Impf Ind Sg P1) => "predisponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "predisponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "predisponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "predisponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "predisponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "predisponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"predispusiera" ; "predispusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"predispusieras" ; "predispusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"predispusiera" ; "predispusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"predispusiéramos" ; "predispusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"predispusierais" ; "predispusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"predispusieran" ; "predispusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "predispuse" ;--# notpresent
    VP (Pret Sg P2) => "predispusiste" ;--# notpresent
    VP (Pret Sg P3) => "predispuso" ;--# notpresent
    VP (Pret Pl P1) => "predispusimos" ;--# notpresent
    VP (Pret Pl P2) => "predispusisteis" ;--# notpresent
    VP (Pret Pl P3) => "predispusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "predispondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "predispondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "predispondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "predispondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "predispondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "predispondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "predispusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "predispusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "predispusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "predispusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "predispusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "predispusieren" ;--# notpresent
    VP (Cond Sg P1) => "predispondría" ;--# notpresent
    VP (Cond Sg P2) => "predispondrías" ;--# notpresent
    VP (Cond Sg P3) => "predispondría" ;--# notpresent
    VP (Cond Pl P1) => "predispondríamos" ;--# notpresent
    VP (Cond Pl P2) => "predispondríais" ;--# notpresent
    VP (Cond Pl P3) => "predispondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "predispon" ;
    VP (Imp Sg P3) => "predisponga" ;
    VP (Imp Pl P1) => "predispongamos" ;
    VP (Imp Pl P2) => "predisponed" ;
    VP (Imp Pl P3) => "predispongan" ;
    VP (Pass Sg Masc) => "predispuesto" ;
    VP (Pass Sg Fem) => "predispuesta" ;
    VP (Pass Pl Masc) => "predispuestos" ;
    VP (Pass Pl Fem) => "predispuestas"
    }
  } ;

lin preponer_V = verboV 
 {s = table {
    VI Infn => "preponer" ;
    VI Ger => "preponiendo" ;
    VI Part => "prepuesto" ;
    VP (Pres Ind Sg P1) => "prepongo" ;
    VP (Pres Ind Sg P2) => "prepones" ;
    VP (Pres Ind Sg P3) => "prepone" ;
    VP (Pres Ind Pl P1) => "preponemos" ;
    VP (Pres Ind Pl P2) => "preponéis" ;
    VP (Pres Ind Pl P3) => "preponen" ;
    VP (Pres Subj Sg P1) => "preponga" ;
    VP (Pres Subj Sg P2) => "prepongas" ;
    VP (Pres Subj Sg P3) => "preponga" ;
    VP (Pres Subj Pl P1) => "prepongamos" ;
    VP (Pres Subj Pl P2) => "prepongáis" ;
    VP (Pres Subj Pl P3) => "prepongan" ;
    VP (Impf Ind Sg P1) => "preponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "preponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "preponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prepusiera" ; "prepusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prepusieras" ; "prepusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prepusiera" ; "prepusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prepusiéramos" ; "prepusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prepusierais" ; "prepusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prepusieran" ; "prepusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "prepuse" ;--# notpresent
    VP (Pret Sg P2) => "prepusiste" ;--# notpresent
    VP (Pret Sg P3) => "prepuso" ;--# notpresent
    VP (Pret Pl P1) => "prepusimos" ;--# notpresent
    VP (Pret Pl P2) => "prepusisteis" ;--# notpresent
    VP (Pret Pl P3) => "prepusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prepondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prepondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prepondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prepondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prepondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prepondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prepusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prepusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prepusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prepusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prepusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prepusieren" ;--# notpresent
    VP (Cond Sg P1) => "prepondría" ;--# notpresent
    VP (Cond Sg P2) => "prepondrías" ;--# notpresent
    VP (Cond Sg P3) => "prepondría" ;--# notpresent
    VP (Cond Pl P1) => "prepondríamos" ;--# notpresent
    VP (Cond Pl P2) => "prepondríais" ;--# notpresent
    VP (Cond Pl P3) => "prepondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prepon" ;
    VP (Imp Sg P3) => "preponga" ;
    VP (Imp Pl P1) => "prepongamos" ;
    VP (Imp Pl P2) => "preponed" ;
    VP (Imp Pl P3) => "prepongan" ;
    VP (Pass Sg Masc) => "prepuesto" ;
    VP (Pass Sg Fem) => "prepuesta" ;
    VP (Pass Pl Masc) => "prepuestos" ;
    VP (Pass Pl Fem) => "prepuestas"
    }
  } ;

lin presuponer_V = verboV 
 {s = table {
    VI Infn => "presuponer" ;
    VI Ger => "presuponiendo" ;
    VI Part => "presupuesto" ;
    VP (Pres Ind Sg P1) => "presupongo" ;
    VP (Pres Ind Sg P2) => "presupones" ;
    VP (Pres Ind Sg P3) => "presupone" ;
    VP (Pres Ind Pl P1) => "presuponemos" ;
    VP (Pres Ind Pl P2) => "presuponéis" ;
    VP (Pres Ind Pl P3) => "presuponen" ;
    VP (Pres Subj Sg P1) => "presuponga" ;
    VP (Pres Subj Sg P2) => "presupongas" ;
    VP (Pres Subj Sg P3) => "presuponga" ;
    VP (Pres Subj Pl P1) => "presupongamos" ;
    VP (Pres Subj Pl P2) => "presupongáis" ;
    VP (Pres Subj Pl P3) => "presupongan" ;
    VP (Impf Ind Sg P1) => "presuponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "presuponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "presuponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "presuponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "presuponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "presuponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"presupusiera" ; "presupusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"presupusieras" ; "presupusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"presupusiera" ; "presupusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"presupusiéramos" ; "presupusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"presupusierais" ; "presupusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"presupusieran" ; "presupusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "presupuse" ;--# notpresent
    VP (Pret Sg P2) => "presupusiste" ;--# notpresent
    VP (Pret Sg P3) => "presupuso" ;--# notpresent
    VP (Pret Pl P1) => "presupusimos" ;--# notpresent
    VP (Pret Pl P2) => "presupusisteis" ;--# notpresent
    VP (Pret Pl P3) => "presupusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "presupondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "presupondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "presupondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "presupondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "presupondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "presupondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "presupusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "presupusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "presupusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "presupusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "presupusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "presupusieren" ;--# notpresent
    VP (Cond Sg P1) => "presupondría" ;--# notpresent
    VP (Cond Sg P2) => "presupondrías" ;--# notpresent
    VP (Cond Sg P3) => "presupondría" ;--# notpresent
    VP (Cond Pl P1) => "presupondríamos" ;--# notpresent
    VP (Cond Pl P2) => "presupondríais" ;--# notpresent
    VP (Cond Pl P3) => "presupondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "presupon" ;
    VP (Imp Sg P3) => "presuponga" ;
    VP (Imp Pl P1) => "presupongamos" ;
    VP (Imp Pl P2) => "presuponed" ;
    VP (Imp Pl P3) => "presupongan" ;
    VP (Pass Sg Masc) => "presupuesto" ;
    VP (Pass Sg Fem) => "presupuesta" ;
    VP (Pass Pl Masc) => "presupuestos" ;
    VP (Pass Pl Fem) => "presupuestas"
    }
  } ;

lin proponer_V = verboV 
 {s = table {
    VI Infn => "proponer" ;
    VI Ger => "proponiendo" ;
    VI Part => "propuesto" ;
    VP (Pres Ind Sg P1) => "propongo" ;
    VP (Pres Ind Sg P2) => "propones" ;
    VP (Pres Ind Sg P3) => "propone" ;
    VP (Pres Ind Pl P1) => "proponemos" ;
    VP (Pres Ind Pl P2) => "proponéis" ;
    VP (Pres Ind Pl P3) => "proponen" ;
    VP (Pres Subj Sg P1) => "proponga" ;
    VP (Pres Subj Sg P2) => "propongas" ;
    VP (Pres Subj Sg P3) => "proponga" ;
    VP (Pres Subj Pl P1) => "propongamos" ;
    VP (Pres Subj Pl P2) => "propongáis" ;
    VP (Pres Subj Pl P3) => "propongan" ;
    VP (Impf Ind Sg P1) => "proponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "proponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "proponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "proponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "proponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "proponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"propusiera" ; "propusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"propusieras" ; "propusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"propusiera" ; "propusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"propusiéramos" ; "propusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"propusierais" ; "propusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"propusieran" ; "propusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "propuse" ;--# notpresent
    VP (Pret Sg P2) => "propusiste" ;--# notpresent
    VP (Pret Sg P3) => "propuso" ;--# notpresent
    VP (Pret Pl P1) => "propusimos" ;--# notpresent
    VP (Pret Pl P2) => "propusisteis" ;--# notpresent
    VP (Pret Pl P3) => "propusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "propondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "propondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "propondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "propondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "propondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "propondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "propusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "propusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "propusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "propusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "propusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "propusieren" ;--# notpresent
    VP (Cond Sg P1) => "propondría" ;--# notpresent
    VP (Cond Sg P2) => "propondrías" ;--# notpresent
    VP (Cond Sg P3) => "propondría" ;--# notpresent
    VP (Cond Pl P1) => "propondríamos" ;--# notpresent
    VP (Cond Pl P2) => "propondríais" ;--# notpresent
    VP (Cond Pl P3) => "propondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "propon" ;
    VP (Imp Sg P3) => "proponga" ;
    VP (Imp Pl P1) => "propongamos" ;
    VP (Imp Pl P2) => "proponed" ;
    VP (Imp Pl P3) => "propongan" ;
    VP (Pass Sg Masc) => "propuesto" ;
    VP (Pass Sg Fem) => "propuesta" ;
    VP (Pass Pl Masc) => "propuestos" ;
    VP (Pass Pl Fem) => "propuestas"
    }
  } ;

lin recomponer_V = verboV 
 {s = table {
    VI Infn => "recomponer" ;
    VI Ger => "recomponiendo" ;
    VI Part => "recompuesto" ;
    VP (Pres Ind Sg P1) => "recompongo" ;
    VP (Pres Ind Sg P2) => "recompones" ;
    VP (Pres Ind Sg P3) => "recompone" ;
    VP (Pres Ind Pl P1) => "recomponemos" ;
    VP (Pres Ind Pl P2) => "recomponéis" ;
    VP (Pres Ind Pl P3) => "recomponen" ;
    VP (Pres Subj Sg P1) => "recomponga" ;
    VP (Pres Subj Sg P2) => "recompongas" ;
    VP (Pres Subj Sg P3) => "recomponga" ;
    VP (Pres Subj Pl P1) => "recompongamos" ;
    VP (Pres Subj Pl P2) => "recompongáis" ;
    VP (Pres Subj Pl P3) => "recompongan" ;
    VP (Impf Ind Sg P1) => "recomponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recomponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recomponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recomponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recomponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recomponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recompusiera" ; "recompusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recompusieras" ; "recompusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recompusiera" ; "recompusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recompusiéramos" ; "recompusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recompusierais" ; "recompusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recompusieran" ; "recompusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "recompuse" ;--# notpresent
    VP (Pret Sg P2) => "recompusiste" ;--# notpresent
    VP (Pret Sg P3) => "recompuso" ;--# notpresent
    VP (Pret Pl P1) => "recompusimos" ;--# notpresent
    VP (Pret Pl P2) => "recompusisteis" ;--# notpresent
    VP (Pret Pl P3) => "recompusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recompondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recompondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recompondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recompondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recompondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recompondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recompusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recompusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recompusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recompusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recompusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recompusieren" ;--# notpresent
    VP (Cond Sg P1) => "recompondría" ;--# notpresent
    VP (Cond Sg P2) => "recompondrías" ;--# notpresent
    VP (Cond Sg P3) => "recompondría" ;--# notpresent
    VP (Cond Pl P1) => "recompondríamos" ;--# notpresent
    VP (Cond Pl P2) => "recompondríais" ;--# notpresent
    VP (Cond Pl P3) => "recompondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recompon" ;
    VP (Imp Sg P3) => "recomponga" ;
    VP (Imp Pl P1) => "recompongamos" ;
    VP (Imp Pl P2) => "recomponed" ;
    VP (Imp Pl P3) => "recompongan" ;
    VP (Pass Sg Masc) => "recompuesto" ;
    VP (Pass Sg Fem) => "recompuesta" ;
    VP (Pass Pl Masc) => "recompuestos" ;
    VP (Pass Pl Fem) => "recompuestas"
    }
  } ;

lin reponer_V = verboV 
 {s = table {
    VI Infn => "reponer" ;
    VI Ger => "reponiendo" ;
    VI Part => "repuesto" ;
    VP (Pres Ind Sg P1) => "repongo" ;
    VP (Pres Ind Sg P2) => "repones" ;
    VP (Pres Ind Sg P3) => "repone" ;
    VP (Pres Ind Pl P1) => "reponemos" ;
    VP (Pres Ind Pl P2) => "reponéis" ;
    VP (Pres Ind Pl P3) => "reponen" ;
    VP (Pres Subj Sg P1) => "reponga" ;
    VP (Pres Subj Sg P2) => "repongas" ;
    VP (Pres Subj Sg P3) => "reponga" ;
    VP (Pres Subj Pl P1) => "repongamos" ;
    VP (Pres Subj Pl P2) => "repongáis" ;
    VP (Pres Subj Pl P3) => "repongan" ;
    VP (Impf Ind Sg P1) => "reponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"repusiera" ; "repusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"repusieras" ; "repusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"repusiera" ; "repusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"repusiéramos" ; "repusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"repusierais" ; "repusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"repusieran" ; "repusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "repuse" ;--# notpresent
    VP (Pret Sg P2) => "repusiste" ;--# notpresent
    VP (Pret Sg P3) => "repuso" ;--# notpresent
    VP (Pret Pl P1) => "repusimos" ;--# notpresent
    VP (Pret Pl P2) => "repusisteis" ;--# notpresent
    VP (Pret Pl P3) => "repusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "repondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "repondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "repondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "repondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "repondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "repondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "repusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "repusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "repusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "repusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "repusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "repusieren" ;--# notpresent
    VP (Cond Sg P1) => "repondría" ;--# notpresent
    VP (Cond Sg P2) => "repondrías" ;--# notpresent
    VP (Cond Sg P3) => "repondría" ;--# notpresent
    VP (Cond Pl P1) => "repondríamos" ;--# notpresent
    VP (Cond Pl P2) => "repondríais" ;--# notpresent
    VP (Cond Pl P3) => "repondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "repon" ;
    VP (Imp Sg P3) => "reponga" ;
    VP (Imp Pl P1) => "repongamos" ;
    VP (Imp Pl P2) => "reponed" ;
    VP (Imp Pl P3) => "repongan" ;
    VP (Pass Sg Masc) => "repuesto" ;
    VP (Pass Sg Fem) => "repuesta" ;
    VP (Pass Pl Masc) => "repuestos" ;
    VP (Pass Pl Fem) => "repuestas"
    }
  } ;

lin sobreexponer_V = verboV 
 {s = table {
    VI Infn => "sobreexponer" ;
    VI Ger => "sobreexponiendo" ;
    VI Part => "sobreexpuesto" ;
    VP (Pres Ind Sg P1) => "sobreexpongo" ;
    VP (Pres Ind Sg P2) => "sobreexpones" ;
    VP (Pres Ind Sg P3) => "sobreexpone" ;
    VP (Pres Ind Pl P1) => "sobreexponemos" ;
    VP (Pres Ind Pl P2) => "sobreexponéis" ;
    VP (Pres Ind Pl P3) => "sobreexponen" ;
    VP (Pres Subj Sg P1) => "sobreexponga" ;
    VP (Pres Subj Sg P2) => "sobreexpongas" ;
    VP (Pres Subj Sg P3) => "sobreexponga" ;
    VP (Pres Subj Pl P1) => "sobreexpongamos" ;
    VP (Pres Subj Pl P2) => "sobreexpongáis" ;
    VP (Pres Subj Pl P3) => "sobreexpongan" ;
    VP (Impf Ind Sg P1) => "sobreexponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobreexponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobreexponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobreexponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobreexponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobreexponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobreexpusiera" ; "sobreexpusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobreexpusieras" ; "sobreexpusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobreexpusiera" ; "sobreexpusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobreexpusiéramos" ; "sobreexpusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobreexpusierais" ; "sobreexpusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobreexpusieran" ; "sobreexpusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobreexpuse" ;--# notpresent
    VP (Pret Sg P2) => "sobreexpusiste" ;--# notpresent
    VP (Pret Sg P3) => "sobreexpuso" ;--# notpresent
    VP (Pret Pl P1) => "sobreexpusimos" ;--# notpresent
    VP (Pret Pl P2) => "sobreexpusisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobreexpusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobreexpondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobreexpondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobreexpondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobreexpondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobreexpondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobreexpondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobreexpusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobreexpusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobreexpusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobreexpusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobreexpusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobreexpusieren" ;--# notpresent
    VP (Cond Sg P1) => "sobreexpondría" ;--# notpresent
    VP (Cond Sg P2) => "sobreexpondrías" ;--# notpresent
    VP (Cond Sg P3) => "sobreexpondría" ;--# notpresent
    VP (Cond Pl P1) => "sobreexpondríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobreexpondríais" ;--# notpresent
    VP (Cond Pl P3) => "sobreexpondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobreexpon" ;
    VP (Imp Sg P3) => "sobreexponga" ;
    VP (Imp Pl P1) => "sobreexpongamos" ;
    VP (Imp Pl P2) => "sobreexponed" ;
    VP (Imp Pl P3) => "sobreexpongan" ;
    VP (Pass Sg Masc) => "sobreexpuesto" ;
    VP (Pass Sg Fem) => "sobreexpuesta" ;
    VP (Pass Pl Masc) => "sobreexpuestos" ;
    VP (Pass Pl Fem) => "sobreexpuestas"
    }
  } ;

lin sobreponer_V = verboV 
 {s = table {
    VI Infn => "sobreponer" ;
    VI Ger => "sobreponiendo" ;
    VI Part => "sobrepuesto" ;
    VP (Pres Ind Sg P1) => "sobrepongo" ;
    VP (Pres Ind Sg P2) => "sobrepones" ;
    VP (Pres Ind Sg P3) => "sobrepone" ;
    VP (Pres Ind Pl P1) => "sobreponemos" ;
    VP (Pres Ind Pl P2) => "sobreponéis" ;
    VP (Pres Ind Pl P3) => "sobreponen" ;
    VP (Pres Subj Sg P1) => "sobreponga" ;
    VP (Pres Subj Sg P2) => "sobrepongas" ;
    VP (Pres Subj Sg P3) => "sobreponga" ;
    VP (Pres Subj Pl P1) => "sobrepongamos" ;
    VP (Pres Subj Pl P2) => "sobrepongáis" ;
    VP (Pres Subj Pl P3) => "sobrepongan" ;
    VP (Impf Ind Sg P1) => "sobreponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobreponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobreponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobreponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobreponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobreponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrepusiera" ; "sobrepusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrepusieras" ; "sobrepusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrepusiera" ; "sobrepusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrepusiéramos" ; "sobrepusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrepusierais" ; "sobrepusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrepusieran" ; "sobrepusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrepuse" ;--# notpresent
    VP (Pret Sg P2) => "sobrepusiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrepuso" ;--# notpresent
    VP (Pret Pl P1) => "sobrepusimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrepusisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrepusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrepondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrepondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrepondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrepondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrepondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrepondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrepusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrepusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrepusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrepusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrepusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrepusieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrepondría" ;--# notpresent
    VP (Cond Sg P2) => "sobrepondrías" ;--# notpresent
    VP (Cond Sg P3) => "sobrepondría" ;--# notpresent
    VP (Cond Pl P1) => "sobrepondríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrepondríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrepondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrepon" ;
    VP (Imp Sg P3) => "sobreponga" ;
    VP (Imp Pl P1) => "sobrepongamos" ;
    VP (Imp Pl P2) => "sobreponed" ;
    VP (Imp Pl P3) => "sobrepongan" ;
    VP (Pass Sg Masc) => "sobrepuesto" ;
    VP (Pass Sg Fem) => "sobrepuesta" ;
    VP (Pass Pl Masc) => "sobrepuestos" ;
    VP (Pass Pl Fem) => "sobrepuestas"
    }
  } ;

lin subexponer_V = verboV 
 {s = table {
    VI Infn => "subexponer" ;
    VI Ger => "subexponiendo" ;
    VI Part => "subexpuesto" ;
    VP (Pres Ind Sg P1) => "subexpongo" ;
    VP (Pres Ind Sg P2) => "subexpones" ;
    VP (Pres Ind Sg P3) => "subexpone" ;
    VP (Pres Ind Pl P1) => "subexponemos" ;
    VP (Pres Ind Pl P2) => "subexponéis" ;
    VP (Pres Ind Pl P3) => "subexponen" ;
    VP (Pres Subj Sg P1) => "subexponga" ;
    VP (Pres Subj Sg P2) => "subexpongas" ;
    VP (Pres Subj Sg P3) => "subexponga" ;
    VP (Pres Subj Pl P1) => "subexpongamos" ;
    VP (Pres Subj Pl P2) => "subexpongáis" ;
    VP (Pres Subj Pl P3) => "subexpongan" ;
    VP (Impf Ind Sg P1) => "subexponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subexponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subexponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subexponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subexponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subexponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subexpusiera" ; "subexpusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subexpusieras" ; "subexpusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subexpusiera" ; "subexpusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subexpusiéramos" ; "subexpusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subexpusierais" ; "subexpusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subexpusieran" ; "subexpusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subexpuse" ;--# notpresent
    VP (Pret Sg P2) => "subexpusiste" ;--# notpresent
    VP (Pret Sg P3) => "subexpuso" ;--# notpresent
    VP (Pret Pl P1) => "subexpusimos" ;--# notpresent
    VP (Pret Pl P2) => "subexpusisteis" ;--# notpresent
    VP (Pret Pl P3) => "subexpusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subexpondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subexpondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subexpondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subexpondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subexpondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subexpondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subexpusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subexpusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subexpusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subexpusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subexpusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subexpusieren" ;--# notpresent
    VP (Cond Sg P1) => "subexpondría" ;--# notpresent
    VP (Cond Sg P2) => "subexpondrías" ;--# notpresent
    VP (Cond Sg P3) => "subexpondría" ;--# notpresent
    VP (Cond Pl P1) => "subexpondríamos" ;--# notpresent
    VP (Cond Pl P2) => "subexpondríais" ;--# notpresent
    VP (Cond Pl P3) => "subexpondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subexpon" ;
    VP (Imp Sg P3) => "subexponga" ;
    VP (Imp Pl P1) => "subexpongamos" ;
    VP (Imp Pl P2) => "subexponed" ;
    VP (Imp Pl P3) => "subexpongan" ;
    VP (Pass Sg Masc) => "subexpuesto" ;
    VP (Pass Sg Fem) => "subexpuesta" ;
    VP (Pass Pl Masc) => "subexpuestos" ;
    VP (Pass Pl Fem) => "subexpuestas"
    }
  } ;

lin superponer_V = verboV 
 {s = table {
    VI Infn => "superponer" ;
    VI Ger => "superponiendo" ;
    VI Part => "superpuesto" ;
    VP (Pres Ind Sg P1) => "superpongo" ;
    VP (Pres Ind Sg P2) => "superpones" ;
    VP (Pres Ind Sg P3) => "superpone" ;
    VP (Pres Ind Pl P1) => "superponemos" ;
    VP (Pres Ind Pl P2) => "superponéis" ;
    VP (Pres Ind Pl P3) => "superponen" ;
    VP (Pres Subj Sg P1) => "superponga" ;
    VP (Pres Subj Sg P2) => "superpongas" ;
    VP (Pres Subj Sg P3) => "superponga" ;
    VP (Pres Subj Pl P1) => "superpongamos" ;
    VP (Pres Subj Pl P2) => "superpongáis" ;
    VP (Pres Subj Pl P3) => "superpongan" ;
    VP (Impf Ind Sg P1) => "superponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "superponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "superponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "superponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "superponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "superponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"superpusiera" ; "superpusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"superpusieras" ; "superpusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"superpusiera" ; "superpusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"superpusiéramos" ; "superpusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"superpusierais" ; "superpusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"superpusieran" ; "superpusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "superpuse" ;--# notpresent
    VP (Pret Sg P2) => "superpusiste" ;--# notpresent
    VP (Pret Sg P3) => "superpuso" ;--# notpresent
    VP (Pret Pl P1) => "superpusimos" ;--# notpresent
    VP (Pret Pl P2) => "superpusisteis" ;--# notpresent
    VP (Pret Pl P3) => "superpusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "superpondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "superpondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "superpondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "superpondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "superpondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "superpondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "superpusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "superpusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "superpusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "superpusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "superpusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "superpusieren" ;--# notpresent
    VP (Cond Sg P1) => "superpondría" ;--# notpresent
    VP (Cond Sg P2) => "superpondrías" ;--# notpresent
    VP (Cond Sg P3) => "superpondría" ;--# notpresent
    VP (Cond Pl P1) => "superpondríamos" ;--# notpresent
    VP (Cond Pl P2) => "superpondríais" ;--# notpresent
    VP (Cond Pl P3) => "superpondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "superpon" ;
    VP (Imp Sg P3) => "superponga" ;
    VP (Imp Pl P1) => "superpongamos" ;
    VP (Imp Pl P2) => "superponed" ;
    VP (Imp Pl P3) => "superpongan" ;
    VP (Pass Sg Masc) => "superpuesto" ;
    VP (Pass Sg Fem) => "superpuesta" ;
    VP (Pass Pl Masc) => "superpuestos" ;
    VP (Pass Pl Fem) => "superpuestas"
    }
  } ;

lin suponer_V = verboV 
 {s = table {
    VI Infn => "suponer" ;
    VI Ger => "suponiendo" ;
    VI Part => "supuesto" ;
    VP (Pres Ind Sg P1) => "supongo" ;
    VP (Pres Ind Sg P2) => "supones" ;
    VP (Pres Ind Sg P3) => "supone" ;
    VP (Pres Ind Pl P1) => "suponemos" ;
    VP (Pres Ind Pl P2) => "suponéis" ;
    VP (Pres Ind Pl P3) => "suponen" ;
    VP (Pres Subj Sg P1) => "suponga" ;
    VP (Pres Subj Sg P2) => "supongas" ;
    VP (Pres Subj Sg P3) => "suponga" ;
    VP (Pres Subj Pl P1) => "supongamos" ;
    VP (Pres Subj Pl P2) => "supongáis" ;
    VP (Pres Subj Pl P3) => "supongan" ;
    VP (Impf Ind Sg P1) => "suponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "suponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "suponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "suponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "suponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "suponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"supusiera" ; "supusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"supusieras" ; "supusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"supusiera" ; "supusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"supusiéramos" ; "supusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"supusierais" ; "supusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"supusieran" ; "supusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "supuse" ;--# notpresent
    VP (Pret Sg P2) => "supusiste" ;--# notpresent
    VP (Pret Sg P3) => "supuso" ;--# notpresent
    VP (Pret Pl P1) => "supusimos" ;--# notpresent
    VP (Pret Pl P2) => "supusisteis" ;--# notpresent
    VP (Pret Pl P3) => "supusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "supondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "supondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "supondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "supondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "supondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "supondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "supusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "supusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "supusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "supusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "supusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "supusieren" ;--# notpresent
    VP (Cond Sg P1) => "supondría" ;--# notpresent
    VP (Cond Sg P2) => "supondrías" ;--# notpresent
    VP (Cond Sg P3) => "supondría" ;--# notpresent
    VP (Cond Pl P1) => "supondríamos" ;--# notpresent
    VP (Cond Pl P2) => "supondríais" ;--# notpresent
    VP (Cond Pl P3) => "supondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "supon" ;
    VP (Imp Sg P3) => "suponga" ;
    VP (Imp Pl P1) => "supongamos" ;
    VP (Imp Pl P2) => "suponed" ;
    VP (Imp Pl P3) => "supongan" ;
    VP (Pass Sg Masc) => "supuesto" ;
    VP (Pass Sg Fem) => "supuesta" ;
    VP (Pass Pl Masc) => "supuestos" ;
    VP (Pass Pl Fem) => "supuestas"
    }
  } ;

lin telecomponer_V = verboV 
 {s = table {
    VI Infn => "telecomponer" ;
    VI Ger => "telecomponiendo" ;
    VI Part => "telecompuesto" ;
    VP (Pres Ind Sg P1) => "telecompongo" ;
    VP (Pres Ind Sg P2) => "telecompones" ;
    VP (Pres Ind Sg P3) => "telecompone" ;
    VP (Pres Ind Pl P1) => "telecomponemos" ;
    VP (Pres Ind Pl P2) => "telecomponéis" ;
    VP (Pres Ind Pl P3) => "telecomponen" ;
    VP (Pres Subj Sg P1) => "telecomponga" ;
    VP (Pres Subj Sg P2) => "telecompongas" ;
    VP (Pres Subj Sg P3) => "telecomponga" ;
    VP (Pres Subj Pl P1) => "telecompongamos" ;
    VP (Pres Subj Pl P2) => "telecompongáis" ;
    VP (Pres Subj Pl P3) => "telecompongan" ;
    VP (Impf Ind Sg P1) => "telecomponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "telecomponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "telecomponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "telecomponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "telecomponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "telecomponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"telecompusiera" ; "telecompusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"telecompusieras" ; "telecompusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"telecompusiera" ; "telecompusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"telecompusiéramos" ; "telecompusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"telecompusierais" ; "telecompusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"telecompusieran" ; "telecompusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "telecompuse" ;--# notpresent
    VP (Pret Sg P2) => "telecompusiste" ;--# notpresent
    VP (Pret Sg P3) => "telecompuso" ;--# notpresent
    VP (Pret Pl P1) => "telecompusimos" ;--# notpresent
    VP (Pret Pl P2) => "telecompusisteis" ;--# notpresent
    VP (Pret Pl P3) => "telecompusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "telecompondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "telecompondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "telecompondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "telecompondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "telecompondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "telecompondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "telecompusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "telecompusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "telecompusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "telecompusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "telecompusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "telecompusieren" ;--# notpresent
    VP (Cond Sg P1) => "telecompondría" ;--# notpresent
    VP (Cond Sg P2) => "telecompondrías" ;--# notpresent
    VP (Cond Sg P3) => "telecompondría" ;--# notpresent
    VP (Cond Pl P1) => "telecompondríamos" ;--# notpresent
    VP (Cond Pl P2) => "telecompondríais" ;--# notpresent
    VP (Cond Pl P3) => "telecompondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "telecompon" ;
    VP (Imp Sg P3) => "telecomponga" ;
    VP (Imp Pl P1) => "telecompongamos" ;
    VP (Imp Pl P2) => "telecomponed" ;
    VP (Imp Pl P3) => "telecompongan" ;
    VP (Pass Sg Masc) => "telecompuesto" ;
    VP (Pass Sg Fem) => "telecompuesta" ;
    VP (Pass Pl Masc) => "telecompuestos" ;
    VP (Pass Pl Fem) => "telecompuestas"
    }
  } ;

lin transponer_V = verboV 
 {s = table {
    VI Infn => "transponer" ;
    VI Ger => "transponiendo" ;
    VI Part => "transpuesto" ;
    VP (Pres Ind Sg P1) => "transpongo" ;
    VP (Pres Ind Sg P2) => "transpones" ;
    VP (Pres Ind Sg P3) => "transpone" ;
    VP (Pres Ind Pl P1) => "transponemos" ;
    VP (Pres Ind Pl P2) => "transponéis" ;
    VP (Pres Ind Pl P3) => "transponen" ;
    VP (Pres Subj Sg P1) => "transponga" ;
    VP (Pres Subj Sg P2) => "transpongas" ;
    VP (Pres Subj Sg P3) => "transponga" ;
    VP (Pres Subj Pl P1) => "transpongamos" ;
    VP (Pres Subj Pl P2) => "transpongáis" ;
    VP (Pres Subj Pl P3) => "transpongan" ;
    VP (Impf Ind Sg P1) => "transponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "transponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "transponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "transponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "transponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "transponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transpusiera" ; "transpusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"transpusieras" ; "transpusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transpusiera" ; "transpusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transpusiéramos" ; "transpusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"transpusierais" ; "transpusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"transpusieran" ; "transpusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "transpuse" ;--# notpresent
    VP (Pret Sg P2) => "transpusiste" ;--# notpresent
    VP (Pret Sg P3) => "transpuso" ;--# notpresent
    VP (Pret Pl P1) => "transpusimos" ;--# notpresent
    VP (Pret Pl P2) => "transpusisteis" ;--# notpresent
    VP (Pret Pl P3) => "transpusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transpondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "transpondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "transpondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transpondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transpondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "transpondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transpusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "transpusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transpusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transpusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transpusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "transpusieren" ;--# notpresent
    VP (Cond Sg P1) => "transpondría" ;--# notpresent
    VP (Cond Sg P2) => "transpondrías" ;--# notpresent
    VP (Cond Sg P3) => "transpondría" ;--# notpresent
    VP (Cond Pl P1) => "transpondríamos" ;--# notpresent
    VP (Cond Pl P2) => "transpondríais" ;--# notpresent
    VP (Cond Pl P3) => "transpondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "transpon" ;
    VP (Imp Sg P3) => "transponga" ;
    VP (Imp Pl P1) => "transpongamos" ;
    VP (Imp Pl P2) => "transponed" ;
    VP (Imp Pl P3) => "transpongan" ;
    VP (Pass Sg Masc) => "transpuesto" ;
    VP (Pass Sg Fem) => "transpuesta" ;
    VP (Pass Pl Masc) => "transpuestos" ;
    VP (Pass Pl Fem) => "transpuestas"
    }
  } ;

lin trasponer_V = verboV 
 {s = table {
    VI Infn => "trasponer" ;
    VI Ger => "trasponiendo" ;
    VI Part => "traspuesto" ;
    VP (Pres Ind Sg P1) => "traspongo" ;
    VP (Pres Ind Sg P2) => "traspones" ;
    VP (Pres Ind Sg P3) => "traspone" ;
    VP (Pres Ind Pl P1) => "trasponemos" ;
    VP (Pres Ind Pl P2) => "trasponéis" ;
    VP (Pres Ind Pl P3) => "trasponen" ;
    VP (Pres Subj Sg P1) => "trasponga" ;
    VP (Pres Subj Sg P2) => "traspongas" ;
    VP (Pres Subj Sg P3) => "trasponga" ;
    VP (Pres Subj Pl P1) => "traspongamos" ;
    VP (Pres Subj Pl P2) => "traspongáis" ;
    VP (Pres Subj Pl P3) => "traspongan" ;
    VP (Impf Ind Sg P1) => "trasponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"traspusiera" ; "traspusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"traspusieras" ; "traspusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"traspusiera" ; "traspusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"traspusiéramos" ; "traspusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"traspusierais" ; "traspusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"traspusieran" ; "traspusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "traspuse" ;--# notpresent
    VP (Pret Sg P2) => "traspusiste" ;--# notpresent
    VP (Pret Sg P3) => "traspuso" ;--# notpresent
    VP (Pret Pl P1) => "traspusimos" ;--# notpresent
    VP (Pret Pl P2) => "traspusisteis" ;--# notpresent
    VP (Pret Pl P3) => "traspusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "traspondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "traspondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "traspondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "traspondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "traspondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "traspondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "traspusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "traspusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "traspusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "traspusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "traspusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "traspusieren" ;--# notpresent
    VP (Cond Sg P1) => "traspondría" ;--# notpresent
    VP (Cond Sg P2) => "traspondrías" ;--# notpresent
    VP (Cond Sg P3) => "traspondría" ;--# notpresent
    VP (Cond Pl P1) => "traspondríamos" ;--# notpresent
    VP (Cond Pl P2) => "traspondríais" ;--# notpresent
    VP (Cond Pl P3) => "traspondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "traspon" ;
    VP (Imp Sg P3) => "trasponga" ;
    VP (Imp Pl P1) => "traspongamos" ;
    VP (Imp Pl P2) => "trasponed" ;
    VP (Imp Pl P3) => "traspongan" ;
    VP (Pass Sg Masc) => "traspuesto" ;
    VP (Pass Sg Fem) => "traspuesta" ;
    VP (Pass Pl Masc) => "traspuestos" ;
    VP (Pass Pl Fem) => "traspuestas"
    }
  } ;

lin yuxtaponer_V = verboV 
 {s = table {
    VI Infn => "yuxtaponer" ;
    VI Ger => "yuxtaponiendo" ;
    VI Part => "yuxtapuesto" ;
    VP (Pres Ind Sg P1) => "yuxtapongo" ;
    VP (Pres Ind Sg P2) => "yuxtapones" ;
    VP (Pres Ind Sg P3) => "yuxtapone" ;
    VP (Pres Ind Pl P1) => "yuxtaponemos" ;
    VP (Pres Ind Pl P2) => "yuxtaponéis" ;
    VP (Pres Ind Pl P3) => "yuxtaponen" ;
    VP (Pres Subj Sg P1) => "yuxtaponga" ;
    VP (Pres Subj Sg P2) => "yuxtapongas" ;
    VP (Pres Subj Sg P3) => "yuxtaponga" ;
    VP (Pres Subj Pl P1) => "yuxtapongamos" ;
    VP (Pres Subj Pl P2) => "yuxtapongáis" ;
    VP (Pres Subj Pl P3) => "yuxtapongan" ;
    VP (Impf Ind Sg P1) => "yuxtaponía" ;--# notpresent
    VP (Impf Ind Sg P2) => "yuxtaponías" ;--# notpresent
    VP (Impf Ind Sg P3) => "yuxtaponía" ;--# notpresent
    VP (Impf Ind Pl P1) => "yuxtaponíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "yuxtaponíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "yuxtaponían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"yuxtapusiera" ; "yuxtapusiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"yuxtapusieras" ; "yuxtapusieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"yuxtapusiera" ; "yuxtapusiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"yuxtapusiéramos" ; "yuxtapusiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"yuxtapusierais" ; "yuxtapusieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"yuxtapusieran" ; "yuxtapusiesen"} ;--# notpresent
    VP (Pret Sg P1) => "yuxtapuse" ;--# notpresent
    VP (Pret Sg P2) => "yuxtapusiste" ;--# notpresent
    VP (Pret Sg P3) => "yuxtapuso" ;--# notpresent
    VP (Pret Pl P1) => "yuxtapusimos" ;--# notpresent
    VP (Pret Pl P2) => "yuxtapusisteis" ;--# notpresent
    VP (Pret Pl P3) => "yuxtapusieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "yuxtapondré" ;--# notpresent
    VP (Fut Ind Sg P2) => "yuxtapondrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "yuxtapondrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "yuxtapondremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "yuxtapondréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "yuxtapondrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "yuxtapusiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "yuxtapusieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "yuxtapusiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "yuxtapusiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "yuxtapusiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "yuxtapusieren" ;--# notpresent
    VP (Cond Sg P1) => "yuxtapondría" ;--# notpresent
    VP (Cond Sg P2) => "yuxtapondrías" ;--# notpresent
    VP (Cond Sg P3) => "yuxtapondría" ;--# notpresent
    VP (Cond Pl P1) => "yuxtapondríamos" ;--# notpresent
    VP (Cond Pl P2) => "yuxtapondríais" ;--# notpresent
    VP (Cond Pl P3) => "yuxtapondrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "yuxtapon" ;
    VP (Imp Sg P3) => "yuxtaponga" ;
    VP (Imp Pl P1) => "yuxtapongamos" ;
    VP (Imp Pl P2) => "yuxtaponed" ;
    VP (Imp Pl P3) => "yuxtapongan" ;
    VP (Pass Sg Masc) => "yuxtapuesto" ;
    VP (Pass Sg Fem) => "yuxtapuesta" ;
    VP (Pass Pl Masc) => "yuxtapuestos" ;
    VP (Pass Pl Fem) => "yuxtapuestas"
    }
  } ;

lin advenir_V = verboV 
 {s = table {
    VI Infn => "advenir" ;
    VI Ger => "adveniendo" ;
    VI Part => "advenido" ;
    VP (Pres Ind Sg P1) => "advengo" ;
    VP (Pres Ind Sg P2) => "advienes" ;
    VP (Pres Ind Sg P3) => "adviene" ;
    VP (Pres Ind Pl P1) => "advenimos" ;
    VP (Pres Ind Pl P2) => "advenís" ;
    VP (Pres Ind Pl P3) => "advienen" ;
    VP (Pres Subj Sg P1) => "advenga" ;
    VP (Pres Subj Sg P2) => "advengas" ;
    VP (Pres Subj Sg P3) => "advenga" ;
    VP (Pres Subj Pl P1) => "advengamos" ;
    VP (Pres Subj Pl P2) => "advengáis" ;
    VP (Pres Subj Pl P3) => "advengan" ;
    VP (Impf Ind Sg P1) => "advenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "advenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "advenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "adveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "advenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adviniera" ; "adviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"advinieras" ; "advinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adviniera" ; "adviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adviniéramos" ; "adviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"advinierais" ; "advinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"advinieran" ; "adviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "advine" ;--# notpresent
    VP (Pret Sg P2) => "adviniste" ;--# notpresent
    VP (Pret Sg P3) => "advino" ;--# notpresent
    VP (Pret Pl P1) => "advinimos" ;--# notpresent
    VP (Pret Pl P2) => "advinisteis" ;--# notpresent
    VP (Pret Pl P3) => "advinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "advendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "advendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "advendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "advendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "advendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "advendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "advinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "advinieren" ;--# notpresent
    VP (Cond Sg P1) => "advendría" ;--# notpresent
    VP (Cond Sg P2) => "advendrías" ;--# notpresent
    VP (Cond Sg P3) => "advendría" ;--# notpresent
    VP (Cond Pl P1) => "advendríamos" ;--# notpresent
    VP (Cond Pl P2) => "advendríais" ;--# notpresent
    VP (Cond Pl P3) => "advendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adven" ;
    VP (Imp Sg P3) => "advenga" ;
    VP (Imp Pl P1) => "advengamos" ;
    VP (Imp Pl P2) => "advenid" ;
    VP (Imp Pl P3) => "advengan" ;
    VP (Pass Sg Masc) => "advenido" ;
    VP (Pass Sg Fem) => "advenida" ;
    VP (Pass Pl Masc) => "advenidos" ;
    VP (Pass Pl Fem) => "advenidas"
    }
  } ;

lin antevenir_V = verboV 
 {s = table {
    VI Infn => "antevenir" ;
    VI Ger => "anteveniendo" ;
    VI Part => "antevenido" ;
    VP (Pres Ind Sg P1) => "antevengo" ;
    VP (Pres Ind Sg P2) => "antevienes" ;
    VP (Pres Ind Sg P3) => "anteviene" ;
    VP (Pres Ind Pl P1) => "antevenimos" ;
    VP (Pres Ind Pl P2) => "antevenís" ;
    VP (Pres Ind Pl P3) => "antevienen" ;
    VP (Pres Subj Sg P1) => "antevenga" ;
    VP (Pres Subj Sg P2) => "antevengas" ;
    VP (Pres Subj Sg P3) => "antevenga" ;
    VP (Pres Subj Pl P1) => "antevengamos" ;
    VP (Pres Subj Pl P2) => "antevengáis" ;
    VP (Pres Subj Pl P3) => "antevengan" ;
    VP (Impf Ind Sg P1) => "antevenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "antevenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "antevenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "anteveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "anteveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "antevenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"anteviniera" ; "anteviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"antevinieras" ; "antevinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"anteviniera" ; "anteviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"anteviniéramos" ; "anteviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"antevinierais" ; "antevinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"antevinieran" ; "anteviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "antevine" ;--# notpresent
    VP (Pret Sg P2) => "anteviniste" ;--# notpresent
    VP (Pret Sg P3) => "antevino" ;--# notpresent
    VP (Pret Pl P1) => "antevinimos" ;--# notpresent
    VP (Pret Pl P2) => "antevinisteis" ;--# notpresent
    VP (Pret Pl P3) => "antevinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "antevendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "antevendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "antevendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "antevendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "antevendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "antevendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "anteviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "antevinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "anteviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "anteviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "anteviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "antevinieren" ;--# notpresent
    VP (Cond Sg P1) => "antevendría" ;--# notpresent
    VP (Cond Sg P2) => "antevendrías" ;--# notpresent
    VP (Cond Sg P3) => "antevendría" ;--# notpresent
    VP (Cond Pl P1) => "antevendríamos" ;--# notpresent
    VP (Cond Pl P2) => "antevendríais" ;--# notpresent
    VP (Cond Pl P3) => "antevendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "anteven" ;
    VP (Imp Sg P3) => "antevenga" ;
    VP (Imp Pl P1) => "antevengamos" ;
    VP (Imp Pl P2) => "antevenid" ;
    VP (Imp Pl P3) => "antevengan" ;
    VP (Pass Sg Masc) => "antevenido" ;
    VP (Pass Sg Fem) => "antevenida" ;
    VP (Pass Pl Masc) => "antevenidos" ;
    VP (Pass Pl Fem) => "antevenidas"
    }
  } ;

lin aprevenir_V = verboV 
 {s = table {
    VI Infn => "aprevenir" ;
    VI Ger => "apreveniendo" ;
    VI Part => "aprevenido" ;
    VP (Pres Ind Sg P1) => "aprevengo" ;
    VP (Pres Ind Sg P2) => "aprevienes" ;
    VP (Pres Ind Sg P3) => "apreviene" ;
    VP (Pres Ind Pl P1) => "aprevenimos" ;
    VP (Pres Ind Pl P2) => "aprevenís" ;
    VP (Pres Ind Pl P3) => "aprevienen" ;
    VP (Pres Subj Sg P1) => "aprevenga" ;
    VP (Pres Subj Sg P2) => "aprevengas" ;
    VP (Pres Subj Sg P3) => "aprevenga" ;
    VP (Pres Subj Pl P1) => "aprevengamos" ;
    VP (Pres Subj Pl P2) => "aprevengáis" ;
    VP (Pres Subj Pl P3) => "aprevengan" ;
    VP (Impf Ind Sg P1) => "aprevenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aprevenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aprevenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "apreveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apreveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aprevenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apreviniera" ; "apreviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aprevinieras" ; "aprevinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apreviniera" ; "apreviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apreviniéramos" ; "apreviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aprevinierais" ; "aprevinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aprevinieran" ; "apreviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "aprevine" ;--# notpresent
    VP (Pret Sg P2) => "apreviniste" ;--# notpresent
    VP (Pret Sg P3) => "aprevino" ;--# notpresent
    VP (Pret Pl P1) => "aprevinimos" ;--# notpresent
    VP (Pret Pl P2) => "aprevinisteis" ;--# notpresent
    VP (Pret Pl P3) => "aprevinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aprevendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aprevendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aprevendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aprevendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aprevendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aprevendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apreviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aprevinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "apreviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "apreviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apreviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aprevinieren" ;--# notpresent
    VP (Cond Sg P1) => "aprevendría" ;--# notpresent
    VP (Cond Sg P2) => "aprevendrías" ;--# notpresent
    VP (Cond Sg P3) => "aprevendría" ;--# notpresent
    VP (Cond Pl P1) => "aprevendríamos" ;--# notpresent
    VP (Cond Pl P2) => "aprevendríais" ;--# notpresent
    VP (Cond Pl P3) => "aprevendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apreven" ;
    VP (Imp Sg P3) => "aprevenga" ;
    VP (Imp Pl P1) => "aprevengamos" ;
    VP (Imp Pl P2) => "aprevenid" ;
    VP (Imp Pl P3) => "aprevengan" ;
    VP (Pass Sg Masc) => "aprevenido" ;
    VP (Pass Sg Fem) => "aprevenida" ;
    VP (Pass Pl Masc) => "aprevenidos" ;
    VP (Pass Pl Fem) => "aprevenidas"
    }
  } ;

lin avenir_V = verboV 
 {s = table {
    VI Infn => "avenir" ;
    VI Ger => "aveniendo" ;
    VI Part => "avenido" ;
    VP (Pres Ind Sg P1) => "avengo" ;
    VP (Pres Ind Sg P2) => "avienes" ;
    VP (Pres Ind Sg P3) => "aviene" ;
    VP (Pres Ind Pl P1) => "avenimos" ;
    VP (Pres Ind Pl P2) => "avenís" ;
    VP (Pres Ind Pl P3) => "avienen" ;
    VP (Pres Subj Sg P1) => "avenga" ;
    VP (Pres Subj Sg P2) => "avengas" ;
    VP (Pres Subj Sg P3) => "avenga" ;
    VP (Pres Subj Pl P1) => "avengamos" ;
    VP (Pres Subj Pl P2) => "avengáis" ;
    VP (Pres Subj Pl P3) => "avengan" ;
    VP (Impf Ind Sg P1) => "avenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "avenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "avenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "avenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aviniera" ; "aviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"avinieras" ; "avinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aviniera" ; "aviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aviniéramos" ; "aviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"avinierais" ; "avinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"avinieran" ; "aviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "avine" ;--# notpresent
    VP (Pret Sg P2) => "aviniste" ;--# notpresent
    VP (Pret Sg P3) => "avino" ;--# notpresent
    VP (Pret Pl P1) => "avinimos" ;--# notpresent
    VP (Pret Pl P2) => "avinisteis" ;--# notpresent
    VP (Pret Pl P3) => "avinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "avendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "avendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "avendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "avendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "avendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "avendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "avinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "avinieren" ;--# notpresent
    VP (Cond Sg P1) => "avendría" ;--# notpresent
    VP (Cond Sg P2) => "avendrías" ;--# notpresent
    VP (Cond Sg P3) => "avendría" ;--# notpresent
    VP (Cond Pl P1) => "avendríamos" ;--# notpresent
    VP (Cond Pl P2) => "avendríais" ;--# notpresent
    VP (Cond Pl P3) => "avendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aven" ;
    VP (Imp Sg P3) => "avenga" ;
    VP (Imp Pl P1) => "avengamos" ;
    VP (Imp Pl P2) => "avenid" ;
    VP (Imp Pl P3) => "avengan" ;
    VP (Pass Sg Masc) => "avenido" ;
    VP (Pass Sg Fem) => "avenida" ;
    VP (Pass Pl Masc) => "avenidos" ;
    VP (Pass Pl Fem) => "avenidas"
    }
  } ;

lin contravenir_V = verboV 
 {s = table {
    VI Infn => "contravenir" ;
    VI Ger => "contraveniendo" ;
    VI Part => "contravenido" ;
    VP (Pres Ind Sg P1) => "contravengo" ;
    VP (Pres Ind Sg P2) => "contravienes" ;
    VP (Pres Ind Sg P3) => "contraviene" ;
    VP (Pres Ind Pl P1) => "contravenimos" ;
    VP (Pres Ind Pl P2) => "contravenís" ;
    VP (Pres Ind Pl P3) => "contravienen" ;
    VP (Pres Subj Sg P1) => "contravenga" ;
    VP (Pres Subj Sg P2) => "contravengas" ;
    VP (Pres Subj Sg P3) => "contravenga" ;
    VP (Pres Subj Pl P1) => "contravengamos" ;
    VP (Pres Subj Pl P2) => "contravengáis" ;
    VP (Pres Subj Pl P3) => "contravengan" ;
    VP (Impf Ind Sg P1) => "contravenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contravenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contravenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contraveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contraveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contravenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contraviniera" ; "contraviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contravinieras" ; "contravinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contraviniera" ; "contraviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contraviniéramos" ; "contraviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contravinierais" ; "contravinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contravinieran" ; "contraviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "contravine" ;--# notpresent
    VP (Pret Sg P2) => "contraviniste" ;--# notpresent
    VP (Pret Sg P3) => "contravino" ;--# notpresent
    VP (Pret Pl P1) => "contravinimos" ;--# notpresent
    VP (Pret Pl P2) => "contravinisteis" ;--# notpresent
    VP (Pret Pl P3) => "contravinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contravendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contravendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contravendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contravendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contravendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contravendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contraviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contravinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contraviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contraviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contraviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contravinieren" ;--# notpresent
    VP (Cond Sg P1) => "contravendría" ;--# notpresent
    VP (Cond Sg P2) => "contravendrías" ;--# notpresent
    VP (Cond Sg P3) => "contravendría" ;--# notpresent
    VP (Cond Pl P1) => "contravendríamos" ;--# notpresent
    VP (Cond Pl P2) => "contravendríais" ;--# notpresent
    VP (Cond Pl P3) => "contravendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contraven" ;
    VP (Imp Sg P3) => "contravenga" ;
    VP (Imp Pl P1) => "contravengamos" ;
    VP (Imp Pl P2) => "contravenid" ;
    VP (Imp Pl P3) => "contravengan" ;
    VP (Pass Sg Masc) => "contravenido" ;
    VP (Pass Sg Fem) => "contravenida" ;
    VP (Pass Pl Masc) => "contravenidos" ;
    VP (Pass Pl Fem) => "contravenidas"
    }
  } ;

lin convenir_V = verboV 
 {s = table {
    VI Infn => "convenir" ;
    VI Ger => "conveniendo" ;
    VI Part => "convenido" ;
    VP (Pres Ind Sg P1) => "convengo" ;
    VP (Pres Ind Sg P2) => "convienes" ;
    VP (Pres Ind Sg P3) => "conviene" ;
    VP (Pres Ind Pl P1) => "convenimos" ;
    VP (Pres Ind Pl P2) => "convenís" ;
    VP (Pres Ind Pl P3) => "convienen" ;
    VP (Pres Subj Sg P1) => "convenga" ;
    VP (Pres Subj Sg P2) => "convengas" ;
    VP (Pres Subj Sg P3) => "convenga" ;
    VP (Pres Subj Pl P1) => "convengamos" ;
    VP (Pres Subj Pl P2) => "convengáis" ;
    VP (Pres Subj Pl P3) => "convengan" ;
    VP (Impf Ind Sg P1) => "convenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "conveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"conviniera" ; "conviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convinieras" ; "convinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"conviniera" ; "conviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"conviniéramos" ; "conviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convinierais" ; "convinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convinieran" ; "conviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "convine" ;--# notpresent
    VP (Pret Sg P2) => "conviniste" ;--# notpresent
    VP (Pret Sg P3) => "convino" ;--# notpresent
    VP (Pret Pl P1) => "convinimos" ;--# notpresent
    VP (Pret Pl P2) => "convinisteis" ;--# notpresent
    VP (Pret Pl P3) => "convinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "conviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "conviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "conviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "conviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convinieren" ;--# notpresent
    VP (Cond Sg P1) => "convendría" ;--# notpresent
    VP (Cond Sg P2) => "convendrías" ;--# notpresent
    VP (Cond Sg P3) => "convendría" ;--# notpresent
    VP (Cond Pl P1) => "convendríamos" ;--# notpresent
    VP (Cond Pl P2) => "convendríais" ;--# notpresent
    VP (Cond Pl P3) => "convendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "conven" ;
    VP (Imp Sg P3) => "convenga" ;
    VP (Imp Pl P1) => "convengamos" ;
    VP (Imp Pl P2) => "convenid" ;
    VP (Imp Pl P3) => "convengan" ;
    VP (Pass Sg Masc) => "convenido" ;
    VP (Pass Sg Fem) => "convenida" ;
    VP (Pass Pl Masc) => "convenidos" ;
    VP (Pass Pl Fem) => "convenidas"
    }
  } ;

lin desavenir_V = verboV 
 {s = table {
    VI Infn => "desavenir" ;
    VI Ger => "desaveniendo" ;
    VI Part => "desavenido" ;
    VP (Pres Ind Sg P1) => "desavengo" ;
    VP (Pres Ind Sg P2) => "desavienes" ;
    VP (Pres Ind Sg P3) => "desaviene" ;
    VP (Pres Ind Pl P1) => "desavenimos" ;
    VP (Pres Ind Pl P2) => "desavenís" ;
    VP (Pres Ind Pl P3) => "desavienen" ;
    VP (Pres Subj Sg P1) => "desavenga" ;
    VP (Pres Subj Sg P2) => "desavengas" ;
    VP (Pres Subj Sg P3) => "desavenga" ;
    VP (Pres Subj Pl P1) => "desavengamos" ;
    VP (Pres Subj Pl P2) => "desavengáis" ;
    VP (Pres Subj Pl P3) => "desavengan" ;
    VP (Impf Ind Sg P1) => "desavenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desavenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desavenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desaveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desaveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desavenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desaviniera" ; "desaviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desavinieras" ; "desavinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desaviniera" ; "desaviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desaviniéramos" ; "desaviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desavinierais" ; "desavinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desavinieran" ; "desaviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "desavine" ;--# notpresent
    VP (Pret Sg P2) => "desaviniste" ;--# notpresent
    VP (Pret Sg P3) => "desavino" ;--# notpresent
    VP (Pret Pl P1) => "desavinimos" ;--# notpresent
    VP (Pret Pl P2) => "desavinisteis" ;--# notpresent
    VP (Pret Pl P3) => "desavinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desavendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desavendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desavendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desavendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desavendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desavendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desaviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desavinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desaviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desaviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desaviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desavinieren" ;--# notpresent
    VP (Cond Sg P1) => "desavendría" ;--# notpresent
    VP (Cond Sg P2) => "desavendrías" ;--# notpresent
    VP (Cond Sg P3) => "desavendría" ;--# notpresent
    VP (Cond Pl P1) => "desavendríamos" ;--# notpresent
    VP (Cond Pl P2) => "desavendríais" ;--# notpresent
    VP (Cond Pl P3) => "desavendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desaven" ;
    VP (Imp Sg P3) => "desavenga" ;
    VP (Imp Pl P1) => "desavengamos" ;
    VP (Imp Pl P2) => "desavenid" ;
    VP (Imp Pl P3) => "desavengan" ;
    VP (Pass Sg Masc) => "desavenido" ;
    VP (Pass Sg Fem) => "desavenida" ;
    VP (Pass Pl Masc) => "desavenidos" ;
    VP (Pass Pl Fem) => "desavenidas"
    }
  } ;

lin desconvenir_V = verboV 
 {s = table {
    VI Infn => "desconvenir" ;
    VI Ger => "desconveniendo" ;
    VI Part => "desconvenido" ;
    VP (Pres Ind Sg P1) => "desconvengo" ;
    VP (Pres Ind Sg P2) => "desconvienes" ;
    VP (Pres Ind Sg P3) => "desconviene" ;
    VP (Pres Ind Pl P1) => "desconvenimos" ;
    VP (Pres Ind Pl P2) => "desconvenís" ;
    VP (Pres Ind Pl P3) => "desconvienen" ;
    VP (Pres Subj Sg P1) => "desconvenga" ;
    VP (Pres Subj Sg P2) => "desconvengas" ;
    VP (Pres Subj Sg P3) => "desconvenga" ;
    VP (Pres Subj Pl P1) => "desconvengamos" ;
    VP (Pres Subj Pl P2) => "desconvengáis" ;
    VP (Pres Subj Pl P3) => "desconvengan" ;
    VP (Impf Ind Sg P1) => "desconvenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desconvenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desconvenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desconveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desconveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desconvenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desconviniera" ; "desconviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desconvinieras" ; "desconvinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desconviniera" ; "desconviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desconviniéramos" ; "desconviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desconvinierais" ; "desconvinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desconvinieran" ; "desconviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "desconvine" ;--# notpresent
    VP (Pret Sg P2) => "desconviniste" ;--# notpresent
    VP (Pret Sg P3) => "desconvino" ;--# notpresent
    VP (Pret Pl P1) => "desconvinimos" ;--# notpresent
    VP (Pret Pl P2) => "desconvinisteis" ;--# notpresent
    VP (Pret Pl P3) => "desconvinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desconvendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desconvendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desconvendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desconvendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desconvendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desconvendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desconviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desconvinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desconviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desconviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desconviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desconvinieren" ;--# notpresent
    VP (Cond Sg P1) => "desconvendría" ;--# notpresent
    VP (Cond Sg P2) => "desconvendrías" ;--# notpresent
    VP (Cond Sg P3) => "desconvendría" ;--# notpresent
    VP (Cond Pl P1) => "desconvendríamos" ;--# notpresent
    VP (Cond Pl P2) => "desconvendríais" ;--# notpresent
    VP (Cond Pl P3) => "desconvendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desconven" ;
    VP (Imp Sg P3) => "desconvenga" ;
    VP (Imp Pl P1) => "desconvengamos" ;
    VP (Imp Pl P2) => "desconvenid" ;
    VP (Imp Pl P3) => "desconvengan" ;
    VP (Pass Sg Masc) => "desconvenido" ;
    VP (Pass Sg Fem) => "desconvenida" ;
    VP (Pass Pl Masc) => "desconvenidos" ;
    VP (Pass Pl Fem) => "desconvenidas"
    }
  } ;

lin devenir_V = verboV 
 {s = table {
    VI Infn => "devenir" ;
    VI Ger => "deveniendo" ;
    VI Part => "devenido" ;
    VP (Pres Ind Sg P1) => "devengo" ;
    VP (Pres Ind Sg P2) => "devienes" ;
    VP (Pres Ind Sg P3) => "deviene" ;
    VP (Pres Ind Pl P1) => "devenimos" ;
    VP (Pres Ind Pl P2) => "devenís" ;
    VP (Pres Ind Pl P3) => "devienen" ;
    VP (Pres Subj Sg P1) => "devenga" ;
    VP (Pres Subj Sg P2) => "devengas" ;
    VP (Pres Subj Sg P3) => "devenga" ;
    VP (Pres Subj Pl P1) => "devengamos" ;
    VP (Pres Subj Pl P2) => "devengáis" ;
    VP (Pres Subj Pl P3) => "devengan" ;
    VP (Impf Ind Sg P1) => "devenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "devenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "devenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "devenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"deviniera" ; "deviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"devinieras" ; "devinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"deviniera" ; "deviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"deviniéramos" ; "deviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"devinierais" ; "devinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"devinieran" ; "deviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "devine" ;--# notpresent
    VP (Pret Sg P2) => "deviniste" ;--# notpresent
    VP (Pret Sg P3) => "devino" ;--# notpresent
    VP (Pret Pl P1) => "devinimos" ;--# notpresent
    VP (Pret Pl P2) => "devinisteis" ;--# notpresent
    VP (Pret Pl P3) => "devinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "devendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "devendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "devendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "devendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "devendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "devendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "deviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "devinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "deviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "deviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "deviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "devinieren" ;--# notpresent
    VP (Cond Sg P1) => "devendría" ;--# notpresent
    VP (Cond Sg P2) => "devendrías" ;--# notpresent
    VP (Cond Sg P3) => "devendría" ;--# notpresent
    VP (Cond Pl P1) => "devendríamos" ;--# notpresent
    VP (Cond Pl P2) => "devendríais" ;--# notpresent
    VP (Cond Pl P3) => "devendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deven" ;
    VP (Imp Sg P3) => "devenga" ;
    VP (Imp Pl P1) => "devengamos" ;
    VP (Imp Pl P2) => "devenid" ;
    VP (Imp Pl P3) => "devengan" ;
    VP (Pass Sg Masc) => "devenido" ;
    VP (Pass Sg Fem) => "devenida" ;
    VP (Pass Pl Masc) => "devenidos" ;
    VP (Pass Pl Fem) => "devenidas"
    }
  } ;

lin disconvenir_V = verboV 
 {s = table {
    VI Infn => "disconvenir" ;
    VI Ger => "disconveniendo" ;
    VI Part => "disconvenido" ;
    VP (Pres Ind Sg P1) => "disconvengo" ;
    VP (Pres Ind Sg P2) => "disconvienes" ;
    VP (Pres Ind Sg P3) => "disconviene" ;
    VP (Pres Ind Pl P1) => "disconvenimos" ;
    VP (Pres Ind Pl P2) => "disconvenís" ;
    VP (Pres Ind Pl P3) => "disconvienen" ;
    VP (Pres Subj Sg P1) => "disconvenga" ;
    VP (Pres Subj Sg P2) => "disconvengas" ;
    VP (Pres Subj Sg P3) => "disconvenga" ;
    VP (Pres Subj Pl P1) => "disconvengamos" ;
    VP (Pres Subj Pl P2) => "disconvengáis" ;
    VP (Pres Subj Pl P3) => "disconvengan" ;
    VP (Impf Ind Sg P1) => "disconvenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "disconvenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "disconvenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "disconveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "disconveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "disconvenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"disconviniera" ; "disconviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"disconvinieras" ; "disconvinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"disconviniera" ; "disconviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"disconviniéramos" ; "disconviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"disconvinierais" ; "disconvinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"disconvinieran" ; "disconviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "disconvine" ;--# notpresent
    VP (Pret Sg P2) => "disconviniste" ;--# notpresent
    VP (Pret Sg P3) => "disconvino" ;--# notpresent
    VP (Pret Pl P1) => "disconvinimos" ;--# notpresent
    VP (Pret Pl P2) => "disconvinisteis" ;--# notpresent
    VP (Pret Pl P3) => "disconvinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "disconvendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "disconvendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "disconvendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "disconvendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "disconvendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "disconvendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "disconviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "disconvinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "disconviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "disconviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "disconviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "disconvinieren" ;--# notpresent
    VP (Cond Sg P1) => "disconvendría" ;--# notpresent
    VP (Cond Sg P2) => "disconvendrías" ;--# notpresent
    VP (Cond Sg P3) => "disconvendría" ;--# notpresent
    VP (Cond Pl P1) => "disconvendríamos" ;--# notpresent
    VP (Cond Pl P2) => "disconvendríais" ;--# notpresent
    VP (Cond Pl P3) => "disconvendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "disconven" ;
    VP (Imp Sg P3) => "disconvenga" ;
    VP (Imp Pl P1) => "disconvengamos" ;
    VP (Imp Pl P2) => "disconvenid" ;
    VP (Imp Pl P3) => "disconvengan" ;
    VP (Pass Sg Masc) => "disconvenido" ;
    VP (Pass Sg Fem) => "disconvenida" ;
    VP (Pass Pl Masc) => "disconvenidos" ;
    VP (Pass Pl Fem) => "disconvenidas"
    }
  } ;

lin intervenir_V = verboV 
 {s = table {
    VI Infn => "intervenir" ;
    VI Ger => "interveniendo" ;
    VI Part => "intervenido" ;
    VP (Pres Ind Sg P1) => "intervengo" ;
    VP (Pres Ind Sg P2) => "intervienes" ;
    VP (Pres Ind Sg P3) => "interviene" ;
    VP (Pres Ind Pl P1) => "intervenimos" ;
    VP (Pres Ind Pl P2) => "intervenís" ;
    VP (Pres Ind Pl P3) => "intervienen" ;
    VP (Pres Subj Sg P1) => "intervenga" ;
    VP (Pres Subj Sg P2) => "intervengas" ;
    VP (Pres Subj Sg P3) => "intervenga" ;
    VP (Pres Subj Pl P1) => "intervengamos" ;
    VP (Pres Subj Pl P2) => "intervengáis" ;
    VP (Pres Subj Pl P3) => "intervengan" ;
    VP (Impf Ind Sg P1) => "intervenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "intervenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "intervenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "interveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "interveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "intervenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"interviniera" ; "interviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"intervinieras" ; "intervinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"interviniera" ; "interviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"interviniéramos" ; "interviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"intervinierais" ; "intervinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"intervinieran" ; "interviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "intervine" ;--# notpresent
    VP (Pret Sg P2) => "interviniste" ;--# notpresent
    VP (Pret Sg P3) => "intervino" ;--# notpresent
    VP (Pret Pl P1) => "intervinimos" ;--# notpresent
    VP (Pret Pl P2) => "intervinisteis" ;--# notpresent
    VP (Pret Pl P3) => "intervinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "intervendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "intervendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "intervendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "intervendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "intervendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "intervendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "interviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "intervinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "interviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "interviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "interviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "intervinieren" ;--# notpresent
    VP (Cond Sg P1) => "intervendría" ;--# notpresent
    VP (Cond Sg P2) => "intervendrías" ;--# notpresent
    VP (Cond Sg P3) => "intervendría" ;--# notpresent
    VP (Cond Pl P1) => "intervendríamos" ;--# notpresent
    VP (Cond Pl P2) => "intervendríais" ;--# notpresent
    VP (Cond Pl P3) => "intervendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "interven" ;
    VP (Imp Sg P3) => "intervenga" ;
    VP (Imp Pl P1) => "intervengamos" ;
    VP (Imp Pl P2) => "intervenid" ;
    VP (Imp Pl P3) => "intervengan" ;
    VP (Pass Sg Masc) => "intervenido" ;
    VP (Pass Sg Fem) => "intervenida" ;
    VP (Pass Pl Masc) => "intervenidos" ;
    VP (Pass Pl Fem) => "intervenidas"
    }
  } ;

lin prevenir_V = verboV 
 {s = table {
    VI Infn => "prevenir" ;
    VI Ger => "preveniendo" ;
    VI Part => "prevenido" ;
    VP (Pres Ind Sg P1) => "prevengo" ;
    VP (Pres Ind Sg P2) => "previenes" ;
    VP (Pres Ind Sg P3) => "previene" ;
    VP (Pres Ind Pl P1) => "prevenimos" ;
    VP (Pres Ind Pl P2) => "prevenís" ;
    VP (Pres Ind Pl P3) => "previenen" ;
    VP (Pres Subj Sg P1) => "prevenga" ;
    VP (Pres Subj Sg P2) => "prevengas" ;
    VP (Pres Subj Sg P3) => "prevenga" ;
    VP (Pres Subj Pl P1) => "prevengamos" ;
    VP (Pres Subj Pl P2) => "prevengáis" ;
    VP (Pres Subj Pl P3) => "prevengan" ;
    VP (Impf Ind Sg P1) => "prevenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prevenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prevenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prevenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"previniera" ; "previniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"previnieras" ; "previnieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"previniera" ; "previniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"previniéramos" ; "previniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"previnierais" ; "previnieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"previnieran" ; "previniesen"} ;--# notpresent
    VP (Pret Sg P1) => "previne" ;--# notpresent
    VP (Pret Sg P2) => "previniste" ;--# notpresent
    VP (Pret Sg P3) => "previno" ;--# notpresent
    VP (Pret Pl P1) => "previnimos" ;--# notpresent
    VP (Pret Pl P2) => "previnisteis" ;--# notpresent
    VP (Pret Pl P3) => "previnieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prevendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prevendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prevendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prevendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prevendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prevendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "previniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "previnieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "previniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "previniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "previniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "previnieren" ;--# notpresent
    VP (Cond Sg P1) => "prevendría" ;--# notpresent
    VP (Cond Sg P2) => "prevendrías" ;--# notpresent
    VP (Cond Sg P3) => "prevendría" ;--# notpresent
    VP (Cond Pl P1) => "prevendríamos" ;--# notpresent
    VP (Cond Pl P2) => "prevendríais" ;--# notpresent
    VP (Cond Pl P3) => "prevendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preven" ;
    VP (Imp Sg P3) => "prevenga" ;
    VP (Imp Pl P1) => "prevengamos" ;
    VP (Imp Pl P2) => "prevenid" ;
    VP (Imp Pl P3) => "prevengan" ;
    VP (Pass Sg Masc) => "prevenido" ;
    VP (Pass Sg Fem) => "prevenida" ;
    VP (Pass Pl Masc) => "prevenidos" ;
    VP (Pass Pl Fem) => "prevenidas"
    }
  } ;

lin provenir_V = verboV 
 {s = table {
    VI Infn => "provenir" ;
    VI Ger => "proveniendo" ;
    VI Part => "provenido" ;
    VP (Pres Ind Sg P1) => "provengo" ;
    VP (Pres Ind Sg P2) => "provienes" ;
    VP (Pres Ind Sg P3) => "proviene" ;
    VP (Pres Ind Pl P1) => "provenimos" ;
    VP (Pres Ind Pl P2) => "provenís" ;
    VP (Pres Ind Pl P3) => "provienen" ;
    VP (Pres Subj Sg P1) => "provenga" ;
    VP (Pres Subj Sg P2) => "provengas" ;
    VP (Pres Subj Sg P3) => "provenga" ;
    VP (Pres Subj Pl P1) => "provengamos" ;
    VP (Pres Subj Pl P2) => "provengáis" ;
    VP (Pres Subj Pl P3) => "provengan" ;
    VP (Impf Ind Sg P1) => "provenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "provenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "provenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "proveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "proveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "provenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"proviniera" ; "proviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"provinieras" ; "provinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"proviniera" ; "proviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"proviniéramos" ; "proviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"provinierais" ; "provinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"provinieran" ; "proviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "provine" ;--# notpresent
    VP (Pret Sg P2) => "proviniste" ;--# notpresent
    VP (Pret Sg P3) => "provino" ;--# notpresent
    VP (Pret Pl P1) => "provinimos" ;--# notpresent
    VP (Pret Pl P2) => "provinisteis" ;--# notpresent
    VP (Pret Pl P3) => "provinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "provendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "provendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "provendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "provendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "provendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "provendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "proviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "provinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "proviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "proviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "proviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "provinieren" ;--# notpresent
    VP (Cond Sg P1) => "provendría" ;--# notpresent
    VP (Cond Sg P2) => "provendrías" ;--# notpresent
    VP (Cond Sg P3) => "provendría" ;--# notpresent
    VP (Cond Pl P1) => "provendríamos" ;--# notpresent
    VP (Cond Pl P2) => "provendríais" ;--# notpresent
    VP (Cond Pl P3) => "provendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "proven" ;
    VP (Imp Sg P3) => "provenga" ;
    VP (Imp Pl P1) => "provengamos" ;
    VP (Imp Pl P2) => "provenid" ;
    VP (Imp Pl P3) => "provengan" ;
    VP (Pass Sg Masc) => "provenido" ;
    VP (Pass Sg Fem) => "provenida" ;
    VP (Pass Pl Masc) => "provenidos" ;
    VP (Pass Pl Fem) => "provenidas"
    }
  } ;

lin reconvenir_V = verboV 
 {s = table {
    VI Infn => "reconvenir" ;
    VI Ger => "reconveniendo" ;
    VI Part => "reconvenido" ;
    VP (Pres Ind Sg P1) => "reconvengo" ;
    VP (Pres Ind Sg P2) => "reconvienes" ;
    VP (Pres Ind Sg P3) => "reconviene" ;
    VP (Pres Ind Pl P1) => "reconvenimos" ;
    VP (Pres Ind Pl P2) => "reconvenís" ;
    VP (Pres Ind Pl P3) => "reconvienen" ;
    VP (Pres Subj Sg P1) => "reconvenga" ;
    VP (Pres Subj Sg P2) => "reconvengas" ;
    VP (Pres Subj Sg P3) => "reconvenga" ;
    VP (Pres Subj Pl P1) => "reconvengamos" ;
    VP (Pres Subj Pl P2) => "reconvengáis" ;
    VP (Pres Subj Pl P3) => "reconvengan" ;
    VP (Impf Ind Sg P1) => "reconvenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconvenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconvenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconvenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reconviniera" ; "reconviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reconvinieras" ; "reconvinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reconviniera" ; "reconviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reconviniéramos" ; "reconviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reconvinierais" ; "reconvinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reconvinieran" ; "reconviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconvine" ;--# notpresent
    VP (Pret Sg P2) => "reconviniste" ;--# notpresent
    VP (Pret Sg P3) => "reconvino" ;--# notpresent
    VP (Pret Pl P1) => "reconvinimos" ;--# notpresent
    VP (Pret Pl P2) => "reconvinisteis" ;--# notpresent
    VP (Pret Pl P3) => "reconvinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconvendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconvendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconvendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconvendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconvendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconvendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reconviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reconvinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reconviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reconviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reconviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reconvinieren" ;--# notpresent
    VP (Cond Sg P1) => "reconvendría" ;--# notpresent
    VP (Cond Sg P2) => "reconvendrías" ;--# notpresent
    VP (Cond Sg P3) => "reconvendría" ;--# notpresent
    VP (Cond Pl P1) => "reconvendríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconvendríais" ;--# notpresent
    VP (Cond Pl P3) => "reconvendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconven" ;
    VP (Imp Sg P3) => "reconvenga" ;
    VP (Imp Pl P1) => "reconvengamos" ;
    VP (Imp Pl P2) => "reconvenid" ;
    VP (Imp Pl P3) => "reconvengan" ;
    VP (Pass Sg Masc) => "reconvenido" ;
    VP (Pass Sg Fem) => "reconvenida" ;
    VP (Pass Pl Masc) => "reconvenidos" ;
    VP (Pass Pl Fem) => "reconvenidas"
    }
  } ;

lin revenir_V = verboV 
 {s = table {
    VI Infn => "revenir" ;
    VI Ger => "reveniendo" ;
    VI Part => "revenido" ;
    VP (Pres Ind Sg P1) => "revengo" ;
    VP (Pres Ind Sg P2) => "revienes" ;
    VP (Pres Ind Sg P3) => "reviene" ;
    VP (Pres Ind Pl P1) => "revenimos" ;
    VP (Pres Ind Pl P2) => "revenís" ;
    VP (Pres Ind Pl P3) => "revienen" ;
    VP (Pres Subj Sg P1) => "revenga" ;
    VP (Pres Subj Sg P2) => "revengas" ;
    VP (Pres Subj Sg P3) => "revenga" ;
    VP (Pres Subj Pl P1) => "revengamos" ;
    VP (Pres Subj Pl P2) => "revengáis" ;
    VP (Pres Subj Pl P3) => "revengan" ;
    VP (Impf Ind Sg P1) => "revenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "revenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "revenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reviniera" ; "reviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revinieras" ; "revinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reviniera" ; "reviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reviniéramos" ; "reviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revinierais" ; "revinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revinieran" ; "reviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "revine" ;--# notpresent
    VP (Pret Sg P2) => "reviniste" ;--# notpresent
    VP (Pret Sg P3) => "revino" ;--# notpresent
    VP (Pret Pl P1) => "revinimos" ;--# notpresent
    VP (Pret Pl P2) => "revinisteis" ;--# notpresent
    VP (Pret Pl P3) => "revinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "revendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revinieren" ;--# notpresent
    VP (Cond Sg P1) => "revendría" ;--# notpresent
    VP (Cond Sg P2) => "revendrías" ;--# notpresent
    VP (Cond Sg P3) => "revendría" ;--# notpresent
    VP (Cond Pl P1) => "revendríamos" ;--# notpresent
    VP (Cond Pl P2) => "revendríais" ;--# notpresent
    VP (Cond Pl P3) => "revendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reven" ;
    VP (Imp Sg P3) => "revenga" ;
    VP (Imp Pl P1) => "revengamos" ;
    VP (Imp Pl P2) => "revenid" ;
    VP (Imp Pl P3) => "revengan" ;
    VP (Pass Sg Masc) => "revenido" ;
    VP (Pass Sg Fem) => "revenida" ;
    VP (Pass Pl Masc) => "revenidos" ;
    VP (Pass Pl Fem) => "revenidas"
    }
  } ;

lin sobrevenir_V = verboV 
 {s = table {
    VI Infn => "sobrevenir" ;
    VI Ger => "sobreveniendo" ;
    VI Part => "sobrevenido" ;
    VP (Pres Ind Sg P1) => "sobrevengo" ;
    VP (Pres Ind Sg P2) => "sobrevienes" ;
    VP (Pres Ind Sg P3) => "sobreviene" ;
    VP (Pres Ind Pl P1) => "sobrevenimos" ;
    VP (Pres Ind Pl P2) => "sobrevenís" ;
    VP (Pres Ind Pl P3) => "sobrevienen" ;
    VP (Pres Subj Sg P1) => "sobrevenga" ;
    VP (Pres Subj Sg P2) => "sobrevengas" ;
    VP (Pres Subj Sg P3) => "sobrevenga" ;
    VP (Pres Subj Pl P1) => "sobrevengamos" ;
    VP (Pres Subj Pl P2) => "sobrevengáis" ;
    VP (Pres Subj Pl P3) => "sobrevengan" ;
    VP (Impf Ind Sg P1) => "sobrevenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrevenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrevenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobreveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobreveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrevenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobreviniera" ; "sobreviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrevinieras" ; "sobrevinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobreviniera" ; "sobreviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobreviniéramos" ; "sobreviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrevinierais" ; "sobrevinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrevinieran" ; "sobreviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrevine" ;--# notpresent
    VP (Pret Sg P2) => "sobreviniste" ;--# notpresent
    VP (Pret Sg P3) => "sobrevino" ;--# notpresent
    VP (Pret Pl P1) => "sobrevinimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrevinisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrevinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrevendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrevendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrevendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrevendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrevendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrevendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobreviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrevinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobreviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobreviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobreviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrevinieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrevendría" ;--# notpresent
    VP (Cond Sg P2) => "sobrevendrías" ;--# notpresent
    VP (Cond Sg P3) => "sobrevendría" ;--# notpresent
    VP (Cond Pl P1) => "sobrevendríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrevendríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrevendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobreven" ;
    VP (Imp Sg P3) => "sobrevenga" ;
    VP (Imp Pl P1) => "sobrevengamos" ;
    VP (Imp Pl P2) => "sobrevenid" ;
    VP (Imp Pl P3) => "sobrevengan" ;
    VP (Pass Sg Masc) => "sobrevenido" ;
    VP (Pass Sg Fem) => "sobrevenida" ;
    VP (Pass Pl Masc) => "sobrevenidos" ;
    VP (Pass Pl Fem) => "sobrevenidas"
    }
  } ;

lin subvenir_V = verboV 
 {s = table {
    VI Infn => "subvenir" ;
    VI Ger => "subveniendo" ;
    VI Part => "subvenido" ;
    VP (Pres Ind Sg P1) => "subvengo" ;
    VP (Pres Ind Sg P2) => "subvienes" ;
    VP (Pres Ind Sg P3) => "subviene" ;
    VP (Pres Ind Pl P1) => "subvenimos" ;
    VP (Pres Ind Pl P2) => "subvenís" ;
    VP (Pres Ind Pl P3) => "subvienen" ;
    VP (Pres Subj Sg P1) => "subvenga" ;
    VP (Pres Subj Sg P2) => "subvengas" ;
    VP (Pres Subj Sg P3) => "subvenga" ;
    VP (Pres Subj Pl P1) => "subvengamos" ;
    VP (Pres Subj Pl P2) => "subvengáis" ;
    VP (Pres Subj Pl P3) => "subvengan" ;
    VP (Impf Ind Sg P1) => "subvenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subvenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subvenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subvenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subviniera" ; "subviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subvinieras" ; "subvinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subviniera" ; "subviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subviniéramos" ; "subviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subvinierais" ; "subvinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subvinieran" ; "subviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "subvine" ;--# notpresent
    VP (Pret Sg P2) => "subviniste" ;--# notpresent
    VP (Pret Sg P3) => "subvino" ;--# notpresent
    VP (Pret Pl P1) => "subvinimos" ;--# notpresent
    VP (Pret Pl P2) => "subvinisteis" ;--# notpresent
    VP (Pret Pl P3) => "subvinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subvendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subvendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subvendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subvendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subvendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subvendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subvinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subvinieren" ;--# notpresent
    VP (Cond Sg P1) => "subvendría" ;--# notpresent
    VP (Cond Sg P2) => "subvendrías" ;--# notpresent
    VP (Cond Sg P3) => "subvendría" ;--# notpresent
    VP (Cond Pl P1) => "subvendríamos" ;--# notpresent
    VP (Cond Pl P2) => "subvendríais" ;--# notpresent
    VP (Cond Pl P3) => "subvendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subven" ;
    VP (Imp Sg P3) => "subvenga" ;
    VP (Imp Pl P1) => "subvengamos" ;
    VP (Imp Pl P2) => "subvenid" ;
    VP (Imp Pl P3) => "subvengan" ;
    VP (Pass Sg Masc) => "subvenido" ;
    VP (Pass Sg Fem) => "subvenida" ;
    VP (Pass Pl Masc) => "subvenidos" ;
    VP (Pass Pl Fem) => "subvenidas"
    }
  } ;

lin supervenir_V = verboV 
 {s = table {
    VI Infn => "supervenir" ;
    VI Ger => "superveniendo" ;
    VI Part => "supervenido" ;
    VP (Pres Ind Sg P1) => "supervengo" ;
    VP (Pres Ind Sg P2) => "supervienes" ;
    VP (Pres Ind Sg P3) => "superviene" ;
    VP (Pres Ind Pl P1) => "supervenimos" ;
    VP (Pres Ind Pl P2) => "supervenís" ;
    VP (Pres Ind Pl P3) => "supervienen" ;
    VP (Pres Subj Sg P1) => "supervenga" ;
    VP (Pres Subj Sg P2) => "supervengas" ;
    VP (Pres Subj Sg P3) => "supervenga" ;
    VP (Pres Subj Pl P1) => "supervengamos" ;
    VP (Pres Subj Pl P2) => "supervengáis" ;
    VP (Pres Subj Pl P3) => "supervengan" ;
    VP (Impf Ind Sg P1) => "supervenía" ;--# notpresent
    VP (Impf Ind Sg P2) => "supervenías" ;--# notpresent
    VP (Impf Ind Sg P3) => "supervenía" ;--# notpresent
    VP (Impf Ind Pl P1) => "superveníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "superveníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "supervenían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"superviniera" ; "superviniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"supervinieras" ; "supervinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"superviniera" ; "superviniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"superviniéramos" ; "superviniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"supervinierais" ; "supervinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"supervinieran" ; "superviniesen"} ;--# notpresent
    VP (Pret Sg P1) => "supervine" ;--# notpresent
    VP (Pret Sg P2) => "superviniste" ;--# notpresent
    VP (Pret Sg P3) => "supervino" ;--# notpresent
    VP (Pret Pl P1) => "supervinimos" ;--# notpresent
    VP (Pret Pl P2) => "supervinisteis" ;--# notpresent
    VP (Pret Pl P3) => "supervinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "supervendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "supervendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "supervendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "supervendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "supervendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "supervendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "superviniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "supervinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "superviniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "superviniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "superviniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "supervinieren" ;--# notpresent
    VP (Cond Sg P1) => "supervendría" ;--# notpresent
    VP (Cond Sg P2) => "supervendrías" ;--# notpresent
    VP (Cond Sg P3) => "supervendría" ;--# notpresent
    VP (Cond Pl P1) => "supervendríamos" ;--# notpresent
    VP (Cond Pl P2) => "supervendríais" ;--# notpresent
    VP (Cond Pl P3) => "supervendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "superven" ;
    VP (Imp Sg P3) => "supervenga" ;
    VP (Imp Pl P1) => "supervengamos" ;
    VP (Imp Pl P2) => "supervenid" ;
    VP (Imp Pl P3) => "supervengan" ;
    VP (Pass Sg Masc) => "supervenido" ;
    VP (Pass Sg Fem) => "supervenida" ;
    VP (Pass Pl Masc) => "supervenidos" ;
    VP (Pass Pl Fem) => "supervenidas"
    }
  } ;

lin venir_V = verboV 
 {s = table {
    VI Infn => "venir" ;
    VI Ger => "viniendo" ;
    VI Part => "venido" ;
    VP (Pres Ind Sg P1) => "vengo" ;
    VP (Pres Ind Sg P2) => "vienes" ;
    VP (Pres Ind Sg P3) => "viene" ;
    VP (Pres Ind Pl P1) => "venimos" ;
    VP (Pres Ind Pl P2) => "venís" ;
    VP (Pres Ind Pl P3) => "vienen" ;
    VP (Pres Subj Sg P1) => "venga" ;
    VP (Pres Subj Sg P2) => "vengas" ;
    VP (Pres Subj Sg P3) => "venga" ;
    VP (Pres Subj Pl P1) => "vengamos" ;
    VP (Pres Subj Pl P2) => "vengáis" ;
    VP (Pres Subj Pl P3) => "vengan" ;
    VP (Impf Ind Sg P1) => "venía" ;--# notpresent
    VP (Impf Ind Sg P2) => "venías" ;--# notpresent
    VP (Impf Ind Sg P3) => "venía" ;--# notpresent
    VP (Impf Ind Pl P1) => "veníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "veníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "venían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"viniera" ; "viniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"vinieras" ; "vinieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"viniera" ; "viniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"viniéramos" ; "viniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"vinierais" ; "vinieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"vinieran" ; "viniesen"} ;--# notpresent
    VP (Pret Sg P1) => "vine" ;--# notpresent
    VP (Pret Sg P2) => "viniste" ;--# notpresent
    VP (Pret Sg P3) => "vino" ;--# notpresent
    VP (Pret Pl P1) => "vinimos" ;--# notpresent
    VP (Pret Pl P2) => "vinisteis" ;--# notpresent
    VP (Pret Pl P3) => "vinieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "vendré" ;--# notpresent
    VP (Fut Ind Sg P2) => "vendrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "vendrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "vendremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "vendréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "vendrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "viniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "vinieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "viniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "viniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "viniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "vinieren" ;--# notpresent
    VP (Cond Sg P1) => "vendría" ;--# notpresent
    VP (Cond Sg P2) => "vendrías" ;--# notpresent
    VP (Cond Sg P3) => "vendría" ;--# notpresent
    VP (Cond Pl P1) => "vendríamos" ;--# notpresent
    VP (Cond Pl P2) => "vendríais" ;--# notpresent
    VP (Cond Pl P3) => "vendrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ven" ;
    VP (Imp Sg P3) => "venga" ;
    VP (Imp Pl P1) => "vengamos" ;
    VP (Imp Pl P2) => "venid" ;
    VP (Imp Pl P3) => "vengan" ;
    VP (Pass Sg Masc) => "venido" ;
    VP (Pass Sg Fem) => "venida" ;
    VP (Pass Pl Masc) => "venidos" ;
    VP (Pass Pl Fem) => "venidas"
    }
  } ;

lin romper_V = verboV 
 {s = table {
    VI Infn => "romper" ;
    VI Ger => "rompiendo" ;
    VI Part => "roto" ;
    VP (Pres Ind Sg P1) => "rompo" ;
    VP (Pres Ind Sg P2) => "rompes" ;
    VP (Pres Ind Sg P3) => "rompe" ;
    VP (Pres Ind Pl P1) => "rompemos" ;
    VP (Pres Ind Pl P2) => "rompéis" ;
    VP (Pres Ind Pl P3) => "rompen" ;
    VP (Pres Subj Sg P1) => "rompa" ;
    VP (Pres Subj Sg P2) => "rompas" ;
    VP (Pres Subj Sg P3) => "rompa" ;
    VP (Pres Subj Pl P1) => "rompamos" ;
    VP (Pres Subj Pl P2) => "rompáis" ;
    VP (Pres Subj Pl P3) => "rompan" ;
    VP (Impf Ind Sg P1) => "rompía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rompías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rompía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rompíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rompíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rompían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rompiera" ; "rompiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rompieras" ; "rompieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rompiera" ; "rompiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rompiéramos" ; "rompiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rompierais" ; "rompieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rompieran" ; "rompiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rompí" ;--# notpresent
    VP (Pret Sg P2) => "rompiste" ;--# notpresent
    VP (Pret Sg P3) => "rompió" ;--# notpresent
    VP (Pret Pl P1) => "rompimos" ;--# notpresent
    VP (Pret Pl P2) => "rompisteis" ;--# notpresent
    VP (Pret Pl P3) => "rompieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "romperé" ;--# notpresent
    VP (Fut Ind Sg P2) => "romperás" ;--# notpresent
    VP (Fut Ind Sg P3) => "romperá" ;--# notpresent
    VP (Fut Ind Pl P1) => "romperemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "romperéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "romperán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rompiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rompieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rompiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rompiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rompiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rompieren" ;--# notpresent
    VP (Cond Sg P1) => "rompería" ;--# notpresent
    VP (Cond Sg P2) => "romperías" ;--# notpresent
    VP (Cond Sg P3) => "rompería" ;--# notpresent
    VP (Cond Pl P1) => "romperíamos" ;--# notpresent
    VP (Cond Pl P2) => "romperíais" ;--# notpresent
    VP (Cond Pl P3) => "romperían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rompe" ;
    VP (Imp Sg P3) => "rompa" ;
    VP (Imp Pl P1) => "rompamos" ;
    VP (Imp Pl P2) => "romped" ;
    VP (Imp Pl P3) => "rompan" ;
    VP (Pass Sg Masc) => "roto" ;
    VP (Pass Sg Fem) => "rota" ;
    VP (Pass Pl Masc) => "rotos" ;
    VP (Pass Pl Fem) => "rotas"
    }
  } ;

lin volver_V = verboV 
 {s = table {
    VI Infn => "volver" ;
    VI Ger => "volviendo" ;
    VI Part => "vuelto" ;
    VP (Pres Ind Sg P1) => "vuelvo" ;
    VP (Pres Ind Sg P2) => "vuelves" ;
    VP (Pres Ind Sg P3) => "vuelve" ;
    VP (Pres Ind Pl P1) => "volvemos" ;
    VP (Pres Ind Pl P2) => "volvéis" ;
    VP (Pres Ind Pl P3) => "vuelven" ;
    VP (Pres Subj Sg P1) => "vuelva" ;
    VP (Pres Subj Sg P2) => "vuelvas" ;
    VP (Pres Subj Sg P3) => "vuelva" ;
    VP (Pres Subj Pl P1) => "volvamos" ;
    VP (Pres Subj Pl P2) => "volváis" ;
    VP (Pres Subj Pl P3) => "vuelvan" ;
    VP (Impf Ind Sg P1) => "volvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "volvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "volvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "volvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "volvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "volvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"volviera" ; "volviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"volvieras" ; "volvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"volviera" ; "volviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"volviéramos" ; "volviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"volvierais" ; "volvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"volvieran" ; "volviesen"} ;--# notpresent
    VP (Pret Sg P1) => "volví" ;--# notpresent
    VP (Pret Sg P2) => "volviste" ;--# notpresent
    VP (Pret Sg P3) => "volvió" ;--# notpresent
    VP (Pret Pl P1) => "volvimos" ;--# notpresent
    VP (Pret Pl P2) => "volvisteis" ;--# notpresent
    VP (Pret Pl P3) => "volvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "volveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "volverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "volverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "volveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "volveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "volverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "volviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "volvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "volviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "volviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "volviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "volvieren" ;--# notpresent
    VP (Cond Sg P1) => "volvería" ;--# notpresent
    VP (Cond Sg P2) => "volverías" ;--# notpresent
    VP (Cond Sg P3) => "volvería" ;--# notpresent
    VP (Cond Pl P1) => "volveríamos" ;--# notpresent
    VP (Cond Pl P2) => "volveríais" ;--# notpresent
    VP (Cond Pl P3) => "volverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vuelve" ;
    VP (Imp Sg P3) => "vuelva" ;
    VP (Imp Pl P1) => "volvamos" ;
    VP (Imp Pl P2) => "volved" ;
    VP (Imp Pl P3) => "vuelvan" ;
    VP (Pass Sg Masc) => "vuelto" ;
    VP (Pass Sg Fem) => "vuelta" ;
    VP (Pass Pl Masc) => "vueltos" ;
    VP (Pass Pl Fem) => "vueltas"
    }
  } ;

lin pudrir_V = verboV 
 {s = table {
    VI Infn => variants {"pudrir" ; "podrir"} ;
    VI Ger => "pudriendo" ;
    VI Part => "podrido" ;
    VP (Pres Ind Sg P1) => "pudro" ;
    VP (Pres Ind Sg P2) => "pudres" ;
    VP (Pres Ind Sg P3) => "pudre" ;
    VP (Pres Ind Pl P1) => "pudrimos" ;
    VP (Pres Ind Pl P2) => "pudrís" ;
    VP (Pres Ind Pl P3) => "pudren" ;
    VP (Pres Subj Sg P1) => "pudra" ;
    VP (Pres Subj Sg P2) => "pudras" ;
    VP (Pres Subj Sg P3) => "pudra" ;
    VP (Pres Subj Pl P1) => "pudramos" ;
    VP (Pres Subj Pl P2) => "pudráis" ;
    VP (Pres Subj Pl P3) => "pudran" ;
    VP (Impf Ind Sg P1) => "pudría" ;--# notpresent
    VP (Impf Ind Sg P2) => "pudrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pudría" ;--# notpresent
    VP (Impf Ind Pl P1) => "pudríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pudríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pudrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pudriera" ; "pudriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pudrieras" ; "pudrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pudriera" ; "pudriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pudriéramos" ; "pudriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pudrierais" ; "pudrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pudrieran" ; "pudriesen"} ;--# notpresent
    VP (Pret Sg P1) => "pudrí" ;--# notpresent
    VP (Pret Sg P2) => "pudriste" ;--# notpresent
    VP (Pret Sg P3) => "pudrió" ;--# notpresent
    VP (Pret Pl P1) => "pudrimos" ;--# notpresent
    VP (Pret Pl P2) => "pudristeis" ;--# notpresent
    VP (Pret Pl P3) => "pudrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pudriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pudrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pudrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pudriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pudriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pudrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pudriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pudrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pudriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pudriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pudriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pudrieren" ;--# notpresent
    VP (Cond Sg P1) => "pudriría" ;--# notpresent
    VP (Cond Sg P2) => "pudrirías" ;--# notpresent
    VP (Cond Sg P3) => "pudriría" ;--# notpresent
    VP (Cond Pl P1) => "pudriríamos" ;--# notpresent
    VP (Cond Pl P2) => "pudriríais" ;--# notpresent
    VP (Cond Pl P3) => "pudrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pudre" ;
    VP (Imp Sg P3) => "pudra" ;
    VP (Imp Pl P1) => "pudramos" ;
    VP (Imp Pl P2) => "pudrid" ;
    VP (Imp Pl P3) => "pudran" ;
    VP (Pass Sg Masc) => "podrido" ;
    VP (Pass Sg Fem) => "podrida" ;
    VP (Pass Pl Masc) => "podridos" ;
    VP (Pass Pl Fem) => "podridas"
    }
  } ;

lin adir_V = verboV 
 {s = table {
    VI Infn => "adir" ;
    VI Ger => variants {} ;
    VI Part => variants {} ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin denegrir_V = verboV 
 {s = table {
    VI Infn => "denegrir" ;
    VI Ger => "denegriendo" ;
    VI Part => "denegrido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin descolorir_V = verboV 
 {s = table {
    VI Infn => "descolorir" ;
    VI Ger => variants {} ;
    VI Part => "descolorido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin fallir_V = verboV 
 {s = table {
    VI Infn => "fallir" ;
    VI Ger => variants {} ;
    VI Part => "fallido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin preterir_V = verboV 
 {s = table {
    VI Infn => "preterir" ;
    VI Ger => variants {} ;
    VI Part => "preterido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin usucapir_V = verboV 
 {s = table {
    VI Infn => "usucapir" ;
    VI Ger => "usucapiendo" ;
    VI Part => "usucapido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin abrir_V = verboV 
 {s = table {
    VI Infn => "abrir" ;
    VI Ger => "abriendo" ;
    VI Part => "abierto" ;
    VP (Pres Ind Sg P1) => "abro" ;
    VP (Pres Ind Sg P2) => "abres" ;
    VP (Pres Ind Sg P3) => "abre" ;
    VP (Pres Ind Pl P1) => "abrimos" ;
    VP (Pres Ind Pl P2) => "abrís" ;
    VP (Pres Ind Pl P3) => "abren" ;
    VP (Pres Subj Sg P1) => "abra" ;
    VP (Pres Subj Sg P2) => "abras" ;
    VP (Pres Subj Sg P3) => "abra" ;
    VP (Pres Subj Pl P1) => "abramos" ;
    VP (Pres Subj Pl P2) => "abráis" ;
    VP (Pres Subj Pl P3) => "abran" ;
    VP (Impf Ind Sg P1) => "abría" ;--# notpresent
    VP (Impf Ind Sg P2) => "abrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abría" ;--# notpresent
    VP (Impf Ind Pl P1) => "abríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abriera" ; "abriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abrieras" ; "abrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abriera" ; "abriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abriéramos" ; "abriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abrierais" ; "abrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abrieran" ; "abriesen"} ;--# notpresent
    VP (Pret Sg P1) => "abrí" ;--# notpresent
    VP (Pret Sg P2) => "abriste" ;--# notpresent
    VP (Pret Sg P3) => "abrió" ;--# notpresent
    VP (Pret Pl P1) => "abrimos" ;--# notpresent
    VP (Pret Pl P2) => "abristeis" ;--# notpresent
    VP (Pret Pl P3) => "abrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abrieren" ;--# notpresent
    VP (Cond Sg P1) => "abriría" ;--# notpresent
    VP (Cond Sg P2) => "abrirías" ;--# notpresent
    VP (Cond Sg P3) => "abriría" ;--# notpresent
    VP (Cond Pl P1) => "abriríamos" ;--# notpresent
    VP (Cond Pl P2) => "abriríais" ;--# notpresent
    VP (Cond Pl P3) => "abrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abre" ;
    VP (Imp Sg P3) => "abra" ;
    VP (Imp Pl P1) => "abramos" ;
    VP (Imp Pl P2) => "abrid" ;
    VP (Imp Pl P3) => "abran" ;
    VP (Pass Sg Masc) => "abrido" ;
    VP (Pass Sg Fem) => "abrida" ;
    VP (Pass Pl Masc) => "abridos" ;
    VP (Pass Pl Fem) => "abridas"
    }
  } ;

lin adscribir_V = verboV 
 {s = table {
    VI Infn => "adscribir" ;
    VI Ger => "adscribiendo" ;
    VI Part => "adscrito" ;
    VP (Pres Ind Sg P1) => "adscribo" ;
    VP (Pres Ind Sg P2) => "adscribes" ;
    VP (Pres Ind Sg P3) => "adscribe" ;
    VP (Pres Ind Pl P1) => "adscribimos" ;
    VP (Pres Ind Pl P2) => "adscribís" ;
    VP (Pres Ind Pl P3) => "adscriben" ;
    VP (Pres Subj Sg P1) => "adscriba" ;
    VP (Pres Subj Sg P2) => "adscribas" ;
    VP (Pres Subj Sg P3) => "adscriba" ;
    VP (Pres Subj Pl P1) => "adscribamos" ;
    VP (Pres Subj Pl P2) => "adscribáis" ;
    VP (Pres Subj Pl P3) => "adscriban" ;
    VP (Impf Ind Sg P1) => "adscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "adscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "adscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adscribiera" ; "adscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adscribieras" ; "adscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adscribiera" ; "adscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adscribiéramos" ; "adscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adscribierais" ; "adscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adscribieran" ; "adscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "adscribí" ;--# notpresent
    VP (Pret Sg P2) => "adscribiste" ;--# notpresent
    VP (Pret Sg P3) => "adscribió" ;--# notpresent
    VP (Pret Pl P1) => "adscribimos" ;--# notpresent
    VP (Pret Pl P2) => "adscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "adscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adscribieren" ;--# notpresent
    VP (Cond Sg P1) => "adscribiría" ;--# notpresent
    VP (Cond Sg P2) => "adscribirías" ;--# notpresent
    VP (Cond Sg P3) => "adscribiría" ;--# notpresent
    VP (Cond Pl P1) => "adscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "adscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "adscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adscribe" ;
    VP (Imp Sg P3) => "adscriba" ;
    VP (Imp Pl P1) => "adscribamos" ;
    VP (Imp Pl P2) => "adscribid" ;
    VP (Imp Pl P3) => "adscriban" ;
    VP (Pass Sg Masc) => "adscribido" ;
    VP (Pass Sg Fem) => "adscribida" ;
    VP (Pass Pl Masc) => "adscribidos" ;
    VP (Pass Pl Fem) => "adscribidas"
    }
  } ;

lin circunscribir_V = verboV 
 {s = table {
    VI Infn => "circunscribir" ;
    VI Ger => "circunscribiendo" ;
    VI Part => "circunscrito" ;
    VP (Pres Ind Sg P1) => "circunscribo" ;
    VP (Pres Ind Sg P2) => "circunscribes" ;
    VP (Pres Ind Sg P3) => "circunscribe" ;
    VP (Pres Ind Pl P1) => "circunscribimos" ;
    VP (Pres Ind Pl P2) => "circunscribís" ;
    VP (Pres Ind Pl P3) => "circunscriben" ;
    VP (Pres Subj Sg P1) => "circunscriba" ;
    VP (Pres Subj Sg P2) => "circunscribas" ;
    VP (Pres Subj Sg P3) => "circunscriba" ;
    VP (Pres Subj Pl P1) => "circunscribamos" ;
    VP (Pres Subj Pl P2) => "circunscribáis" ;
    VP (Pres Subj Pl P3) => "circunscriban" ;
    VP (Impf Ind Sg P1) => "circunscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "circunscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "circunscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "circunscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "circunscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "circunscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"circunscribiera" ; "circunscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"circunscribieras" ; "circunscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"circunscribiera" ; "circunscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"circunscribiéramos" ; "circunscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"circunscribierais" ; "circunscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"circunscribieran" ; "circunscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "circunscribí" ;--# notpresent
    VP (Pret Sg P2) => "circunscribiste" ;--# notpresent
    VP (Pret Sg P3) => "circunscribió" ;--# notpresent
    VP (Pret Pl P1) => "circunscribimos" ;--# notpresent
    VP (Pret Pl P2) => "circunscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "circunscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "circunscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "circunscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "circunscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "circunscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "circunscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "circunscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "circunscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "circunscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "circunscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "circunscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "circunscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "circunscribieren" ;--# notpresent
    VP (Cond Sg P1) => "circunscribiría" ;--# notpresent
    VP (Cond Sg P2) => "circunscribirías" ;--# notpresent
    VP (Cond Sg P3) => "circunscribiría" ;--# notpresent
    VP (Cond Pl P1) => "circunscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "circunscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "circunscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "circunscribe" ;
    VP (Imp Sg P3) => "circunscriba" ;
    VP (Imp Pl P1) => "circunscribamos" ;
    VP (Imp Pl P2) => "circunscribid" ;
    VP (Imp Pl P3) => "circunscriban" ;
    VP (Pass Sg Masc) => "circunscribido" ;
    VP (Pass Sg Fem) => "circunscribida" ;
    VP (Pass Pl Masc) => "circunscribidos" ;
    VP (Pass Pl Fem) => "circunscribidas"
    }
  } ;

lin cubrir_V = verboV 
 {s = table {
    VI Infn => "cubrir" ;
    VI Ger => "cubriendo" ;
    VI Part => "cubierto" ;
    VP (Pres Ind Sg P1) => "cubro" ;
    VP (Pres Ind Sg P2) => "cubres" ;
    VP (Pres Ind Sg P3) => "cubre" ;
    VP (Pres Ind Pl P1) => "cubrimos" ;
    VP (Pres Ind Pl P2) => "cubrís" ;
    VP (Pres Ind Pl P3) => "cubren" ;
    VP (Pres Subj Sg P1) => "cubra" ;
    VP (Pres Subj Sg P2) => "cubras" ;
    VP (Pres Subj Sg P3) => "cubra" ;
    VP (Pres Subj Pl P1) => "cubramos" ;
    VP (Pres Subj Pl P2) => "cubráis" ;
    VP (Pres Subj Pl P3) => "cubran" ;
    VP (Impf Ind Sg P1) => "cubría" ;--# notpresent
    VP (Impf Ind Sg P2) => "cubrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cubría" ;--# notpresent
    VP (Impf Ind Pl P1) => "cubríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cubríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cubrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cubriera" ; "cubriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cubrieras" ; "cubrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cubriera" ; "cubriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cubriéramos" ; "cubriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cubrierais" ; "cubrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cubrieran" ; "cubriesen"} ;--# notpresent
    VP (Pret Sg P1) => "cubrí" ;--# notpresent
    VP (Pret Sg P2) => "cubriste" ;--# notpresent
    VP (Pret Sg P3) => "cubrió" ;--# notpresent
    VP (Pret Pl P1) => "cubrimos" ;--# notpresent
    VP (Pret Pl P2) => "cubristeis" ;--# notpresent
    VP (Pret Pl P3) => "cubrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cubriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cubrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cubrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cubriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cubriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cubrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cubriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cubrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cubriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cubriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cubriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cubrieren" ;--# notpresent
    VP (Cond Sg P1) => "cubriría" ;--# notpresent
    VP (Cond Sg P2) => "cubrirías" ;--# notpresent
    VP (Cond Sg P3) => "cubriría" ;--# notpresent
    VP (Cond Pl P1) => "cubriríamos" ;--# notpresent
    VP (Cond Pl P2) => "cubriríais" ;--# notpresent
    VP (Cond Pl P3) => "cubrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cubre" ;
    VP (Imp Sg P3) => "cubra" ;
    VP (Imp Pl P1) => "cubramos" ;
    VP (Imp Pl P2) => "cubrid" ;
    VP (Imp Pl P3) => "cubran" ;
    VP (Pass Sg Masc) => "cubrido" ;
    VP (Pass Sg Fem) => "cubrida" ;
    VP (Pass Pl Masc) => "cubridos" ;
    VP (Pass Pl Fem) => "cubridas"
    }
  } ;

lin describir_V = verboV 
 {s = table {
    VI Infn => "describir" ;
    VI Ger => "describiendo" ;
    VI Part => "descrito" ;
    VP (Pres Ind Sg P1) => "describo" ;
    VP (Pres Ind Sg P2) => "describes" ;
    VP (Pres Ind Sg P3) => "describe" ;
    VP (Pres Ind Pl P1) => "describimos" ;
    VP (Pres Ind Pl P2) => "describís" ;
    VP (Pres Ind Pl P3) => "describen" ;
    VP (Pres Subj Sg P1) => "describa" ;
    VP (Pres Subj Sg P2) => "describas" ;
    VP (Pres Subj Sg P3) => "describa" ;
    VP (Pres Subj Pl P1) => "describamos" ;
    VP (Pres Subj Pl P2) => "describáis" ;
    VP (Pres Subj Pl P3) => "describan" ;
    VP (Impf Ind Sg P1) => "describía" ;--# notpresent
    VP (Impf Ind Sg P2) => "describías" ;--# notpresent
    VP (Impf Ind Sg P3) => "describía" ;--# notpresent
    VP (Impf Ind Pl P1) => "describíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "describíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "describían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"describiera" ; "describiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"describieras" ; "describieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"describiera" ; "describiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"describiéramos" ; "describiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"describierais" ; "describieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"describieran" ; "describiesen"} ;--# notpresent
    VP (Pret Sg P1) => "describí" ;--# notpresent
    VP (Pret Sg P2) => "describiste" ;--# notpresent
    VP (Pret Sg P3) => "describió" ;--# notpresent
    VP (Pret Pl P1) => "describimos" ;--# notpresent
    VP (Pret Pl P2) => "describisteis" ;--# notpresent
    VP (Pret Pl P3) => "describieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "describiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "describirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "describirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "describiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "describiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "describirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "describiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "describieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "describiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "describiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "describiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "describieren" ;--# notpresent
    VP (Cond Sg P1) => "describiría" ;--# notpresent
    VP (Cond Sg P2) => "describirías" ;--# notpresent
    VP (Cond Sg P3) => "describiría" ;--# notpresent
    VP (Cond Pl P1) => "describiríamos" ;--# notpresent
    VP (Cond Pl P2) => "describiríais" ;--# notpresent
    VP (Cond Pl P3) => "describirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "describe" ;
    VP (Imp Sg P3) => "describa" ;
    VP (Imp Pl P1) => "describamos" ;
    VP (Imp Pl P2) => "describid" ;
    VP (Imp Pl P3) => "describan" ;
    VP (Pass Sg Masc) => "describido" ;
    VP (Pass Sg Fem) => "describida" ;
    VP (Pass Pl Masc) => "describidos" ;
    VP (Pass Pl Fem) => "describidas"
    }
  } ;

lin descubrir_V = verboV 
 {s = table {
    VI Infn => "descubrir" ;
    VI Ger => "descubriendo" ;
    VI Part => "descubierto" ;
    VP (Pres Ind Sg P1) => "descubro" ;
    VP (Pres Ind Sg P2) => "descubres" ;
    VP (Pres Ind Sg P3) => "descubre" ;
    VP (Pres Ind Pl P1) => "descubrimos" ;
    VP (Pres Ind Pl P2) => "descubrís" ;
    VP (Pres Ind Pl P3) => "descubren" ;
    VP (Pres Subj Sg P1) => "descubra" ;
    VP (Pres Subj Sg P2) => "descubras" ;
    VP (Pres Subj Sg P3) => "descubra" ;
    VP (Pres Subj Pl P1) => "descubramos" ;
    VP (Pres Subj Pl P2) => "descubráis" ;
    VP (Pres Subj Pl P3) => "descubran" ;
    VP (Impf Ind Sg P1) => "descubría" ;--# notpresent
    VP (Impf Ind Sg P2) => "descubrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descubría" ;--# notpresent
    VP (Impf Ind Pl P1) => "descubríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descubríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descubrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descubriera" ; "descubriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descubrieras" ; "descubrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descubriera" ; "descubriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descubriéramos" ; "descubriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descubrierais" ; "descubrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descubrieran" ; "descubriesen"} ;--# notpresent
    VP (Pret Sg P1) => "descubrí" ;--# notpresent
    VP (Pret Sg P2) => "descubriste" ;--# notpresent
    VP (Pret Sg P3) => "descubrió" ;--# notpresent
    VP (Pret Pl P1) => "descubrimos" ;--# notpresent
    VP (Pret Pl P2) => "descubristeis" ;--# notpresent
    VP (Pret Pl P3) => "descubrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descubriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descubrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descubrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descubriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descubriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descubrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descubriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descubrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descubriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descubriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descubriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descubrieren" ;--# notpresent
    VP (Cond Sg P1) => "descubriría" ;--# notpresent
    VP (Cond Sg P2) => "descubrirías" ;--# notpresent
    VP (Cond Sg P3) => "descubriría" ;--# notpresent
    VP (Cond Pl P1) => "descubriríamos" ;--# notpresent
    VP (Cond Pl P2) => "descubriríais" ;--# notpresent
    VP (Cond Pl P3) => "descubrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descubre" ;
    VP (Imp Sg P3) => "descubra" ;
    VP (Imp Pl P1) => "descubramos" ;
    VP (Imp Pl P2) => "descubrid" ;
    VP (Imp Pl P3) => "descubran" ;
    VP (Pass Sg Masc) => "descubrido" ;
    VP (Pass Sg Fem) => "descubrida" ;
    VP (Pass Pl Masc) => "descubridos" ;
    VP (Pass Pl Fem) => "descubridas"
    }
  } ;

lin encubrir_V = verboV 
 {s = table {
    VI Infn => "encubrir" ;
    VI Ger => "encubriendo" ;
    VI Part => "encubierto" ;
    VP (Pres Ind Sg P1) => "encubro" ;
    VP (Pres Ind Sg P2) => "encubres" ;
    VP (Pres Ind Sg P3) => "encubre" ;
    VP (Pres Ind Pl P1) => "encubrimos" ;
    VP (Pres Ind Pl P2) => "encubrís" ;
    VP (Pres Ind Pl P3) => "encubren" ;
    VP (Pres Subj Sg P1) => "encubra" ;
    VP (Pres Subj Sg P2) => "encubras" ;
    VP (Pres Subj Sg P3) => "encubra" ;
    VP (Pres Subj Pl P1) => "encubramos" ;
    VP (Pres Subj Pl P2) => "encubráis" ;
    VP (Pres Subj Pl P3) => "encubran" ;
    VP (Impf Ind Sg P1) => "encubría" ;--# notpresent
    VP (Impf Ind Sg P2) => "encubrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encubría" ;--# notpresent
    VP (Impf Ind Pl P1) => "encubríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encubríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encubrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encubriera" ; "encubriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encubrieras" ; "encubrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encubriera" ; "encubriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encubriéramos" ; "encubriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encubrierais" ; "encubrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encubrieran" ; "encubriesen"} ;--# notpresent
    VP (Pret Sg P1) => "encubrí" ;--# notpresent
    VP (Pret Sg P2) => "encubriste" ;--# notpresent
    VP (Pret Sg P3) => "encubrió" ;--# notpresent
    VP (Pret Pl P1) => "encubrimos" ;--# notpresent
    VP (Pret Pl P2) => "encubristeis" ;--# notpresent
    VP (Pret Pl P3) => "encubrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encubriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encubrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encubrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encubriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encubriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encubrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encubriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encubrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encubriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encubriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encubriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encubrieren" ;--# notpresent
    VP (Cond Sg P1) => "encubriría" ;--# notpresent
    VP (Cond Sg P2) => "encubrirías" ;--# notpresent
    VP (Cond Sg P3) => "encubriría" ;--# notpresent
    VP (Cond Pl P1) => "encubriríamos" ;--# notpresent
    VP (Cond Pl P2) => "encubriríais" ;--# notpresent
    VP (Cond Pl P3) => "encubrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encubre" ;
    VP (Imp Sg P3) => "encubra" ;
    VP (Imp Pl P1) => "encubramos" ;
    VP (Imp Pl P2) => "encubrid" ;
    VP (Imp Pl P3) => "encubran" ;
    VP (Pass Sg Masc) => "encubrido" ;
    VP (Pass Sg Fem) => "encubrida" ;
    VP (Pass Pl Masc) => "encubridos" ;
    VP (Pass Pl Fem) => "encubridas"
    }
  } ;

lin entreabrir_V = verboV 
 {s = table {
    VI Infn => "entreabrir" ;
    VI Ger => "entreabriendo" ;
    VI Part => "entreabierto" ;
    VP (Pres Ind Sg P1) => "entreabro" ;
    VP (Pres Ind Sg P2) => "entreabres" ;
    VP (Pres Ind Sg P3) => "entreabre" ;
    VP (Pres Ind Pl P1) => "entreabrimos" ;
    VP (Pres Ind Pl P2) => "entreabrís" ;
    VP (Pres Ind Pl P3) => "entreabren" ;
    VP (Pres Subj Sg P1) => "entreabra" ;
    VP (Pres Subj Sg P2) => "entreabras" ;
    VP (Pres Subj Sg P3) => "entreabra" ;
    VP (Pres Subj Pl P1) => "entreabramos" ;
    VP (Pres Subj Pl P2) => "entreabráis" ;
    VP (Pres Subj Pl P3) => "entreabran" ;
    VP (Impf Ind Sg P1) => "entreabría" ;--# notpresent
    VP (Impf Ind Sg P2) => "entreabrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entreabría" ;--# notpresent
    VP (Impf Ind Pl P1) => "entreabríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entreabríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entreabrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entreabriera" ; "entreabriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entreabrieras" ; "entreabrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entreabriera" ; "entreabriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entreabriéramos" ; "entreabriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entreabrierais" ; "entreabrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entreabrieran" ; "entreabriesen"} ;--# notpresent
    VP (Pret Sg P1) => "entreabrí" ;--# notpresent
    VP (Pret Sg P2) => "entreabriste" ;--# notpresent
    VP (Pret Sg P3) => "entreabrió" ;--# notpresent
    VP (Pret Pl P1) => "entreabrimos" ;--# notpresent
    VP (Pret Pl P2) => "entreabristeis" ;--# notpresent
    VP (Pret Pl P3) => "entreabrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entreabriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entreabrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entreabrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entreabriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entreabriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entreabrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entreabriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entreabrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entreabriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entreabriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entreabriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entreabrieren" ;--# notpresent
    VP (Cond Sg P1) => "entreabriría" ;--# notpresent
    VP (Cond Sg P2) => "entreabrirías" ;--# notpresent
    VP (Cond Sg P3) => "entreabriría" ;--# notpresent
    VP (Cond Pl P1) => "entreabriríamos" ;--# notpresent
    VP (Cond Pl P2) => "entreabriríais" ;--# notpresent
    VP (Cond Pl P3) => "entreabrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entreabre" ;
    VP (Imp Sg P3) => "entreabra" ;
    VP (Imp Pl P1) => "entreabramos" ;
    VP (Imp Pl P2) => "entreabrid" ;
    VP (Imp Pl P3) => "entreabran" ;
    VP (Pass Sg Masc) => "entreabrido" ;
    VP (Pass Sg Fem) => "entreabrida" ;
    VP (Pass Pl Masc) => "entreabridos" ;
    VP (Pass Pl Fem) => "entreabridas"
    }
  } ;

lin escribir_V = verboV 
 {s = table {
    VI Infn => "escribir" ;
    VI Ger => "escribiendo" ;
    VI Part => "escrito" ;
    VP (Pres Ind Sg P1) => "escribo" ;
    VP (Pres Ind Sg P2) => "escribes" ;
    VP (Pres Ind Sg P3) => "escribe" ;
    VP (Pres Ind Pl P1) => "escribimos" ;
    VP (Pres Ind Pl P2) => "escribís" ;
    VP (Pres Ind Pl P3) => "escriben" ;
    VP (Pres Subj Sg P1) => "escriba" ;
    VP (Pres Subj Sg P2) => "escribas" ;
    VP (Pres Subj Sg P3) => "escriba" ;
    VP (Pres Subj Pl P1) => "escribamos" ;
    VP (Pres Subj Pl P2) => "escribáis" ;
    VP (Pres Subj Pl P3) => "escriban" ;
    VP (Impf Ind Sg P1) => "escribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escribiera" ; "escribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escribieras" ; "escribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escribiera" ; "escribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escribiéramos" ; "escribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escribierais" ; "escribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escribieran" ; "escribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "escribí" ;--# notpresent
    VP (Pret Sg P2) => "escribiste" ;--# notpresent
    VP (Pret Sg P3) => "escribió" ;--# notpresent
    VP (Pret Pl P1) => "escribimos" ;--# notpresent
    VP (Pret Pl P2) => "escribisteis" ;--# notpresent
    VP (Pret Pl P3) => "escribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escribieren" ;--# notpresent
    VP (Cond Sg P1) => "escribiría" ;--# notpresent
    VP (Cond Sg P2) => "escribirías" ;--# notpresent
    VP (Cond Sg P3) => "escribiría" ;--# notpresent
    VP (Cond Pl P1) => "escribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "escribiríais" ;--# notpresent
    VP (Cond Pl P3) => "escribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escribe" ;
    VP (Imp Sg P3) => "escriba" ;
    VP (Imp Pl P1) => "escribamos" ;
    VP (Imp Pl P2) => "escribid" ;
    VP (Imp Pl P3) => "escriban" ;
    VP (Pass Sg Masc) => "escribido" ;
    VP (Pass Sg Fem) => "escribida" ;
    VP (Pass Pl Masc) => "escribidos" ;
    VP (Pass Pl Fem) => "escribidas"
    }
  } ;

lin inscribir_V = verboV 
 {s = table {
    VI Infn => "inscribir" ;
    VI Ger => "inscribiendo" ;
    VI Part => "inscrito" ;
    VP (Pres Ind Sg P1) => "inscribo" ;
    VP (Pres Ind Sg P2) => "inscribes" ;
    VP (Pres Ind Sg P3) => "inscribe" ;
    VP (Pres Ind Pl P1) => "inscribimos" ;
    VP (Pres Ind Pl P2) => "inscribís" ;
    VP (Pres Ind Pl P3) => "inscriben" ;
    VP (Pres Subj Sg P1) => "inscriba" ;
    VP (Pres Subj Sg P2) => "inscribas" ;
    VP (Pres Subj Sg P3) => "inscriba" ;
    VP (Pres Subj Pl P1) => "inscribamos" ;
    VP (Pres Subj Pl P2) => "inscribáis" ;
    VP (Pres Subj Pl P3) => "inscriban" ;
    VP (Impf Ind Sg P1) => "inscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "inscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "inscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "inscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"inscribiera" ; "inscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"inscribieras" ; "inscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"inscribiera" ; "inscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"inscribiéramos" ; "inscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"inscribierais" ; "inscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"inscribieran" ; "inscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "inscribí" ;--# notpresent
    VP (Pret Sg P2) => "inscribiste" ;--# notpresent
    VP (Pret Sg P3) => "inscribió" ;--# notpresent
    VP (Pret Pl P1) => "inscribimos" ;--# notpresent
    VP (Pret Pl P2) => "inscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "inscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "inscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "inscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "inscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "inscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "inscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "inscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "inscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "inscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "inscribieren" ;--# notpresent
    VP (Cond Sg P1) => "inscribiría" ;--# notpresent
    VP (Cond Sg P2) => "inscribirías" ;--# notpresent
    VP (Cond Sg P3) => "inscribiría" ;--# notpresent
    VP (Cond Pl P1) => "inscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "inscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "inscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inscribe" ;
    VP (Imp Sg P3) => "inscriba" ;
    VP (Imp Pl P1) => "inscribamos" ;
    VP (Imp Pl P2) => "inscribid" ;
    VP (Imp Pl P3) => "inscriban" ;
    VP (Pass Sg Masc) => "inscribido" ;
    VP (Pass Sg Fem) => "inscribida" ;
    VP (Pass Pl Masc) => "inscribidos" ;
    VP (Pass Pl Fem) => "inscribidas"
    }
  } ;

lin manuscribir_V = verboV 
 {s = table {
    VI Infn => "manuscribir" ;
    VI Ger => "manuscribiendo" ;
    VI Part => "manuscrito" ;
    VP (Pres Ind Sg P1) => "manuscribo" ;
    VP (Pres Ind Sg P2) => "manuscribes" ;
    VP (Pres Ind Sg P3) => "manuscribe" ;
    VP (Pres Ind Pl P1) => "manuscribimos" ;
    VP (Pres Ind Pl P2) => "manuscribís" ;
    VP (Pres Ind Pl P3) => "manuscriben" ;
    VP (Pres Subj Sg P1) => "manuscriba" ;
    VP (Pres Subj Sg P2) => "manuscribas" ;
    VP (Pres Subj Sg P3) => "manuscriba" ;
    VP (Pres Subj Pl P1) => "manuscribamos" ;
    VP (Pres Subj Pl P2) => "manuscribáis" ;
    VP (Pres Subj Pl P3) => "manuscriban" ;
    VP (Impf Ind Sg P1) => "manuscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "manuscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "manuscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "manuscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "manuscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "manuscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"manuscribiera" ; "manuscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"manuscribieras" ; "manuscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"manuscribiera" ; "manuscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"manuscribiéramos" ; "manuscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"manuscribierais" ; "manuscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"manuscribieran" ; "manuscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "manuscribí" ;--# notpresent
    VP (Pret Sg P2) => "manuscribiste" ;--# notpresent
    VP (Pret Sg P3) => "manuscribió" ;--# notpresent
    VP (Pret Pl P1) => "manuscribimos" ;--# notpresent
    VP (Pret Pl P2) => "manuscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "manuscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "manuscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "manuscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "manuscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "manuscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "manuscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "manuscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "manuscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "manuscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "manuscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "manuscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "manuscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "manuscribieren" ;--# notpresent
    VP (Cond Sg P1) => "manuscribiría" ;--# notpresent
    VP (Cond Sg P2) => "manuscribirías" ;--# notpresent
    VP (Cond Sg P3) => "manuscribiría" ;--# notpresent
    VP (Cond Pl P1) => "manuscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "manuscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "manuscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "manuscribe" ;
    VP (Imp Sg P3) => "manuscriba" ;
    VP (Imp Pl P1) => "manuscribamos" ;
    VP (Imp Pl P2) => "manuscribid" ;
    VP (Imp Pl P3) => "manuscriban" ;
    VP (Pass Sg Masc) => "manuscribido" ;
    VP (Pass Sg Fem) => "manuscribida" ;
    VP (Pass Pl Masc) => "manuscribidos" ;
    VP (Pass Pl Fem) => "manuscribidas"
    }
  } ;

lin prescribir_V = verboV 
 {s = table {
    VI Infn => "prescribir" ;
    VI Ger => "prescribiendo" ;
    VI Part => "prescrito" ;
    VP (Pres Ind Sg P1) => "prescribo" ;
    VP (Pres Ind Sg P2) => "prescribes" ;
    VP (Pres Ind Sg P3) => "prescribe" ;
    VP (Pres Ind Pl P1) => "prescribimos" ;
    VP (Pres Ind Pl P2) => "prescribís" ;
    VP (Pres Ind Pl P3) => "prescriben" ;
    VP (Pres Subj Sg P1) => "prescriba" ;
    VP (Pres Subj Sg P2) => "prescribas" ;
    VP (Pres Subj Sg P3) => "prescriba" ;
    VP (Pres Subj Pl P1) => "prescribamos" ;
    VP (Pres Subj Pl P2) => "prescribáis" ;
    VP (Pres Subj Pl P3) => "prescriban" ;
    VP (Impf Ind Sg P1) => "prescribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prescribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prescribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prescribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prescribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prescribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prescribiera" ; "prescribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prescribieras" ; "prescribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prescribiera" ; "prescribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prescribiéramos" ; "prescribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prescribierais" ; "prescribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prescribieran" ; "prescribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "prescribí" ;--# notpresent
    VP (Pret Sg P2) => "prescribiste" ;--# notpresent
    VP (Pret Sg P3) => "prescribió" ;--# notpresent
    VP (Pret Pl P1) => "prescribimos" ;--# notpresent
    VP (Pret Pl P2) => "prescribisteis" ;--# notpresent
    VP (Pret Pl P3) => "prescribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prescribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prescribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prescribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prescribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prescribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prescribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prescribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prescribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prescribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prescribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prescribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prescribieren" ;--# notpresent
    VP (Cond Sg P1) => "prescribiría" ;--# notpresent
    VP (Cond Sg P2) => "prescribirías" ;--# notpresent
    VP (Cond Sg P3) => "prescribiría" ;--# notpresent
    VP (Cond Pl P1) => "prescribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "prescribiríais" ;--# notpresent
    VP (Cond Pl P3) => "prescribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prescribe" ;
    VP (Imp Sg P3) => "prescriba" ;
    VP (Imp Pl P1) => "prescribamos" ;
    VP (Imp Pl P2) => "prescribid" ;
    VP (Imp Pl P3) => "prescriban" ;
    VP (Pass Sg Masc) => "prescribido" ;
    VP (Pass Sg Fem) => "prescribida" ;
    VP (Pass Pl Masc) => "prescribidos" ;
    VP (Pass Pl Fem) => "prescribidas"
    }
  } ;

lin proscribir_V = verboV 
 {s = table {
    VI Infn => "proscribir" ;
    VI Ger => "proscribiendo" ;
    VI Part => "proscrito" ;
    VP (Pres Ind Sg P1) => "proscribo" ;
    VP (Pres Ind Sg P2) => "proscribes" ;
    VP (Pres Ind Sg P3) => "proscribe" ;
    VP (Pres Ind Pl P1) => "proscribimos" ;
    VP (Pres Ind Pl P2) => "proscribís" ;
    VP (Pres Ind Pl P3) => "proscriben" ;
    VP (Pres Subj Sg P1) => "proscriba" ;
    VP (Pres Subj Sg P2) => "proscribas" ;
    VP (Pres Subj Sg P3) => "proscriba" ;
    VP (Pres Subj Pl P1) => "proscribamos" ;
    VP (Pres Subj Pl P2) => "proscribáis" ;
    VP (Pres Subj Pl P3) => "proscriban" ;
    VP (Impf Ind Sg P1) => "proscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "proscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "proscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "proscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "proscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "proscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"proscribiera" ; "proscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"proscribieras" ; "proscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"proscribiera" ; "proscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"proscribiéramos" ; "proscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"proscribierais" ; "proscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"proscribieran" ; "proscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "proscribí" ;--# notpresent
    VP (Pret Sg P2) => "proscribiste" ;--# notpresent
    VP (Pret Sg P3) => "proscribió" ;--# notpresent
    VP (Pret Pl P1) => "proscribimos" ;--# notpresent
    VP (Pret Pl P2) => "proscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "proscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "proscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "proscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "proscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "proscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "proscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "proscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "proscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "proscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "proscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "proscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "proscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "proscribieren" ;--# notpresent
    VP (Cond Sg P1) => "proscribiría" ;--# notpresent
    VP (Cond Sg P2) => "proscribirías" ;--# notpresent
    VP (Cond Sg P3) => "proscribiría" ;--# notpresent
    VP (Cond Pl P1) => "proscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "proscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "proscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "proscribe" ;
    VP (Imp Sg P3) => "proscriba" ;
    VP (Imp Pl P1) => "proscribamos" ;
    VP (Imp Pl P2) => "proscribid" ;
    VP (Imp Pl P3) => "proscriban" ;
    VP (Pass Sg Masc) => "proscribido" ;
    VP (Pass Sg Fem) => "proscribida" ;
    VP (Pass Pl Masc) => "proscribidos" ;
    VP (Pass Pl Fem) => "proscribidas"
    }
  } ;

lin reabrir_V = verboV 
 {s = table {
    VI Infn => "reabrir" ;
    VI Ger => "reabriendo" ;
    VI Part => "reabierto" ;
    VP (Pres Ind Sg P1) => "reabro" ;
    VP (Pres Ind Sg P2) => "reabres" ;
    VP (Pres Ind Sg P3) => "reabre" ;
    VP (Pres Ind Pl P1) => "reabrimos" ;
    VP (Pres Ind Pl P2) => "reabrís" ;
    VP (Pres Ind Pl P3) => "reabren" ;
    VP (Pres Subj Sg P1) => "reabra" ;
    VP (Pres Subj Sg P2) => "reabras" ;
    VP (Pres Subj Sg P3) => "reabra" ;
    VP (Pres Subj Pl P1) => "reabramos" ;
    VP (Pres Subj Pl P2) => "reabráis" ;
    VP (Pres Subj Pl P3) => "reabran" ;
    VP (Impf Ind Sg P1) => "reabría" ;--# notpresent
    VP (Impf Ind Sg P2) => "reabrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reabría" ;--# notpresent
    VP (Impf Ind Pl P1) => "reabríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reabríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reabrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reabriera" ; "reabriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reabrieras" ; "reabrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reabriera" ; "reabriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reabriéramos" ; "reabriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reabrierais" ; "reabrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reabrieran" ; "reabriesen"} ;--# notpresent
    VP (Pret Sg P1) => "reabrí" ;--# notpresent
    VP (Pret Sg P2) => "reabriste" ;--# notpresent
    VP (Pret Sg P3) => "reabrió" ;--# notpresent
    VP (Pret Pl P1) => "reabrimos" ;--# notpresent
    VP (Pret Pl P2) => "reabristeis" ;--# notpresent
    VP (Pret Pl P3) => "reabrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reabriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reabrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reabrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reabriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reabriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reabrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reabriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reabrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reabriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reabriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reabriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reabrieren" ;--# notpresent
    VP (Cond Sg P1) => "reabriría" ;--# notpresent
    VP (Cond Sg P2) => "reabrirías" ;--# notpresent
    VP (Cond Sg P3) => "reabriría" ;--# notpresent
    VP (Cond Pl P1) => "reabriríamos" ;--# notpresent
    VP (Cond Pl P2) => "reabriríais" ;--# notpresent
    VP (Cond Pl P3) => "reabrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reabre" ;
    VP (Imp Sg P3) => "reabra" ;
    VP (Imp Pl P1) => "reabramos" ;
    VP (Imp Pl P2) => "reabrid" ;
    VP (Imp Pl P3) => "reabran" ;
    VP (Pass Sg Masc) => "reabrido" ;
    VP (Pass Sg Fem) => "reabrida" ;
    VP (Pass Pl Masc) => "reabridos" ;
    VP (Pass Pl Fem) => "reabridas"
    }
  } ;

lin reinscribir_V = verboV 
 {s = table {
    VI Infn => "reinscribir" ;
    VI Ger => "reinscribiendo" ;
    VI Part => "reinscrito" ;
    VP (Pres Ind Sg P1) => "reinscribo" ;
    VP (Pres Ind Sg P2) => "reinscribes" ;
    VP (Pres Ind Sg P3) => "reinscribe" ;
    VP (Pres Ind Pl P1) => "reinscribimos" ;
    VP (Pres Ind Pl P2) => "reinscribís" ;
    VP (Pres Ind Pl P3) => "reinscriben" ;
    VP (Pres Subj Sg P1) => "reinscriba" ;
    VP (Pres Subj Sg P2) => "reinscribas" ;
    VP (Pres Subj Sg P3) => "reinscriba" ;
    VP (Pres Subj Pl P1) => "reinscribamos" ;
    VP (Pres Subj Pl P2) => "reinscribáis" ;
    VP (Pres Subj Pl P3) => "reinscriban" ;
    VP (Impf Ind Sg P1) => "reinscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reinscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reinscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reinscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reinscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reinscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reinscribiera" ; "reinscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reinscribieras" ; "reinscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reinscribiera" ; "reinscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reinscribiéramos" ; "reinscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reinscribierais" ; "reinscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reinscribieran" ; "reinscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "reinscribí" ;--# notpresent
    VP (Pret Sg P2) => "reinscribiste" ;--# notpresent
    VP (Pret Sg P3) => "reinscribió" ;--# notpresent
    VP (Pret Pl P1) => "reinscribimos" ;--# notpresent
    VP (Pret Pl P2) => "reinscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "reinscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reinscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reinscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reinscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reinscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reinscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reinscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reinscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reinscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reinscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reinscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reinscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reinscribieren" ;--# notpresent
    VP (Cond Sg P1) => "reinscribiría" ;--# notpresent
    VP (Cond Sg P2) => "reinscribirías" ;--# notpresent
    VP (Cond Sg P3) => "reinscribiría" ;--# notpresent
    VP (Cond Pl P1) => "reinscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reinscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "reinscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reinscribe" ;
    VP (Imp Sg P3) => "reinscriba" ;
    VP (Imp Pl P1) => "reinscribamos" ;
    VP (Imp Pl P2) => "reinscribid" ;
    VP (Imp Pl P3) => "reinscriban" ;
    VP (Pass Sg Masc) => "reinscribido" ;
    VP (Pass Sg Fem) => "reinscribida" ;
    VP (Pass Pl Masc) => "reinscribidos" ;
    VP (Pass Pl Fem) => "reinscribidas"
    }
  } ;

lin rescribir_V = verboV 
 {s = table {
    VI Infn => "rescribir" ;
    VI Ger => "rescribiendo" ;
    VI Part => "rescrito" ;
    VP (Pres Ind Sg P1) => "rescribo" ;
    VP (Pres Ind Sg P2) => "rescribes" ;
    VP (Pres Ind Sg P3) => "rescribe" ;
    VP (Pres Ind Pl P1) => "rescribimos" ;
    VP (Pres Ind Pl P2) => "rescribís" ;
    VP (Pres Ind Pl P3) => "rescriben" ;
    VP (Pres Subj Sg P1) => "rescriba" ;
    VP (Pres Subj Sg P2) => "rescribas" ;
    VP (Pres Subj Sg P3) => "rescriba" ;
    VP (Pres Subj Pl P1) => "rescribamos" ;
    VP (Pres Subj Pl P2) => "rescribáis" ;
    VP (Pres Subj Pl P3) => "rescriban" ;
    VP (Impf Ind Sg P1) => "rescribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rescribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rescribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rescribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rescribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rescribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rescribiera" ; "rescribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rescribieras" ; "rescribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rescribiera" ; "rescribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rescribiéramos" ; "rescribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rescribierais" ; "rescribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rescribieran" ; "rescribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rescribí" ;--# notpresent
    VP (Pret Sg P2) => "rescribiste" ;--# notpresent
    VP (Pret Sg P3) => "rescribió" ;--# notpresent
    VP (Pret Pl P1) => "rescribimos" ;--# notpresent
    VP (Pret Pl P2) => "rescribisteis" ;--# notpresent
    VP (Pret Pl P3) => "rescribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rescribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rescribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rescribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rescribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rescribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rescribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rescribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rescribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rescribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rescribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rescribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rescribieren" ;--# notpresent
    VP (Cond Sg P1) => "rescribiría" ;--# notpresent
    VP (Cond Sg P2) => "rescribirías" ;--# notpresent
    VP (Cond Sg P3) => "rescribiría" ;--# notpresent
    VP (Cond Pl P1) => "rescribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "rescribiríais" ;--# notpresent
    VP (Cond Pl P3) => "rescribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rescribe" ;
    VP (Imp Sg P3) => "rescriba" ;
    VP (Imp Pl P1) => "rescribamos" ;
    VP (Imp Pl P2) => "rescribid" ;
    VP (Imp Pl P3) => "rescriban" ;
    VP (Pass Sg Masc) => "rescribido" ;
    VP (Pass Sg Fem) => "rescribida" ;
    VP (Pass Pl Masc) => "rescribidos" ;
    VP (Pass Pl Fem) => "rescribidas"
    }
  } ;

lin sobrescribir_V = verboV 
 {s = table {
    VI Infn => "sobrescribir" ;
    VI Ger => "sobrescribiendo" ;
    VI Part => "sobrescrito" ;
    VP (Pres Ind Sg P1) => "sobrescribo" ;
    VP (Pres Ind Sg P2) => "sobrescribes" ;
    VP (Pres Ind Sg P3) => "sobrescribe" ;
    VP (Pres Ind Pl P1) => "sobrescribimos" ;
    VP (Pres Ind Pl P2) => "sobrescribís" ;
    VP (Pres Ind Pl P3) => "sobrescriben" ;
    VP (Pres Subj Sg P1) => "sobrescriba" ;
    VP (Pres Subj Sg P2) => "sobrescribas" ;
    VP (Pres Subj Sg P3) => "sobrescriba" ;
    VP (Pres Subj Pl P1) => "sobrescribamos" ;
    VP (Pres Subj Pl P2) => "sobrescribáis" ;
    VP (Pres Subj Pl P3) => "sobrescriban" ;
    VP (Impf Ind Sg P1) => "sobrescribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrescribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrescribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrescribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrescribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrescribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrescribiera" ; "sobrescribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrescribieras" ; "sobrescribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrescribiera" ; "sobrescribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrescribiéramos" ; "sobrescribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrescribierais" ; "sobrescribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrescribieran" ; "sobrescribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrescribí" ;--# notpresent
    VP (Pret Sg P2) => "sobrescribiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrescribió" ;--# notpresent
    VP (Pret Pl P1) => "sobrescribimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrescribisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrescribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrescribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrescribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrescribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrescribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrescribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrescribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrescribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrescribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrescribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrescribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrescribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrescribieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrescribiría" ;--# notpresent
    VP (Cond Sg P2) => "sobrescribirías" ;--# notpresent
    VP (Cond Sg P3) => "sobrescribiría" ;--# notpresent
    VP (Cond Pl P1) => "sobrescribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrescribiríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrescribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrescribe" ;
    VP (Imp Sg P3) => "sobrescriba" ;
    VP (Imp Pl P1) => "sobrescribamos" ;
    VP (Imp Pl P2) => "sobrescribid" ;
    VP (Imp Pl P3) => "sobrescriban" ;
    VP (Pass Sg Masc) => "sobrescribido" ;
    VP (Pass Sg Fem) => "sobrescribida" ;
    VP (Pass Pl Masc) => "sobrescribidos" ;
    VP (Pass Pl Fem) => "sobrescribidas"
    }
  } ;

lin subscribir_V = verboV 
 {s = table {
    VI Infn => "subscribir" ;
    VI Ger => "subscribiendo" ;
    VI Part => "subscrito" ;
    VP (Pres Ind Sg P1) => "subscribo" ;
    VP (Pres Ind Sg P2) => "subscribes" ;
    VP (Pres Ind Sg P3) => "subscribe" ;
    VP (Pres Ind Pl P1) => "subscribimos" ;
    VP (Pres Ind Pl P2) => "subscribís" ;
    VP (Pres Ind Pl P3) => "subscriben" ;
    VP (Pres Subj Sg P1) => "subscriba" ;
    VP (Pres Subj Sg P2) => "subscribas" ;
    VP (Pres Subj Sg P3) => "subscriba" ;
    VP (Pres Subj Pl P1) => "subscribamos" ;
    VP (Pres Subj Pl P2) => "subscribáis" ;
    VP (Pres Subj Pl P3) => "subscriban" ;
    VP (Impf Ind Sg P1) => "subscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subscribiera" ; "subscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subscribieras" ; "subscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subscribiera" ; "subscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subscribiéramos" ; "subscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subscribierais" ; "subscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subscribieran" ; "subscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subscribí" ;--# notpresent
    VP (Pret Sg P2) => "subscribiste" ;--# notpresent
    VP (Pret Sg P3) => "subscribió" ;--# notpresent
    VP (Pret Pl P1) => "subscribimos" ;--# notpresent
    VP (Pret Pl P2) => "subscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "subscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subscribieren" ;--# notpresent
    VP (Cond Sg P1) => "subscribiría" ;--# notpresent
    VP (Cond Sg P2) => "subscribirías" ;--# notpresent
    VP (Cond Sg P3) => "subscribiría" ;--# notpresent
    VP (Cond Pl P1) => "subscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "subscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "subscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subscribe" ;
    VP (Imp Sg P3) => "subscriba" ;
    VP (Imp Pl P1) => "subscribamos" ;
    VP (Imp Pl P2) => "subscribid" ;
    VP (Imp Pl P3) => "subscriban" ;
    VP (Pass Sg Masc) => "subscribido" ;
    VP (Pass Sg Fem) => "subscribida" ;
    VP (Pass Pl Masc) => "subscribidos" ;
    VP (Pass Pl Fem) => "subscribidas"
    }
  } ;

lin suscribir_V = verboV 
 {s = table {
    VI Infn => "suscribir" ;
    VI Ger => "suscribiendo" ;
    VI Part => "suscrito" ;
    VP (Pres Ind Sg P1) => "suscribo" ;
    VP (Pres Ind Sg P2) => "suscribes" ;
    VP (Pres Ind Sg P3) => "suscribe" ;
    VP (Pres Ind Pl P1) => "suscribimos" ;
    VP (Pres Ind Pl P2) => "suscribís" ;
    VP (Pres Ind Pl P3) => "suscriben" ;
    VP (Pres Subj Sg P1) => "suscriba" ;
    VP (Pres Subj Sg P2) => "suscribas" ;
    VP (Pres Subj Sg P3) => "suscriba" ;
    VP (Pres Subj Pl P1) => "suscribamos" ;
    VP (Pres Subj Pl P2) => "suscribáis" ;
    VP (Pres Subj Pl P3) => "suscriban" ;
    VP (Impf Ind Sg P1) => "suscribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "suscribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "suscribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "suscribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "suscribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "suscribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"suscribiera" ; "suscribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"suscribieras" ; "suscribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"suscribiera" ; "suscribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"suscribiéramos" ; "suscribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"suscribierais" ; "suscribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"suscribieran" ; "suscribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "suscribí" ;--# notpresent
    VP (Pret Sg P2) => "suscribiste" ;--# notpresent
    VP (Pret Sg P3) => "suscribió" ;--# notpresent
    VP (Pret Pl P1) => "suscribimos" ;--# notpresent
    VP (Pret Pl P2) => "suscribisteis" ;--# notpresent
    VP (Pret Pl P3) => "suscribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "suscribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "suscribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "suscribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "suscribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "suscribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "suscribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "suscribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "suscribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "suscribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "suscribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "suscribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "suscribieren" ;--# notpresent
    VP (Cond Sg P1) => "suscribiría" ;--# notpresent
    VP (Cond Sg P2) => "suscribirías" ;--# notpresent
    VP (Cond Sg P3) => "suscribiría" ;--# notpresent
    VP (Cond Pl P1) => "suscribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "suscribiríais" ;--# notpresent
    VP (Cond Pl P3) => "suscribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "suscribe" ;
    VP (Imp Sg P3) => "suscriba" ;
    VP (Imp Pl P1) => "suscribamos" ;
    VP (Imp Pl P2) => "suscribid" ;
    VP (Imp Pl P3) => "suscriban" ;
    VP (Pass Sg Masc) => "suscribido" ;
    VP (Pass Sg Fem) => "suscribida" ;
    VP (Pass Pl Masc) => "suscribidos" ;
    VP (Pass Pl Fem) => "suscribidas"
    }
  } ;

lin transcribir_V = verboV 
 {s = table {
    VI Infn => "transcribir" ;
    VI Ger => "transcribiendo" ;
    VI Part => "transcrito" ;
    VP (Pres Ind Sg P1) => "transcribo" ;
    VP (Pres Ind Sg P2) => "transcribes" ;
    VP (Pres Ind Sg P3) => "transcribe" ;
    VP (Pres Ind Pl P1) => "transcribimos" ;
    VP (Pres Ind Pl P2) => "transcribís" ;
    VP (Pres Ind Pl P3) => "transcriben" ;
    VP (Pres Subj Sg P1) => "transcriba" ;
    VP (Pres Subj Sg P2) => "transcribas" ;
    VP (Pres Subj Sg P3) => "transcriba" ;
    VP (Pres Subj Pl P1) => "transcribamos" ;
    VP (Pres Subj Pl P2) => "transcribáis" ;
    VP (Pres Subj Pl P3) => "transcriban" ;
    VP (Impf Ind Sg P1) => "transcribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "transcribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "transcribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "transcribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "transcribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "transcribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transcribiera" ; "transcribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"transcribieras" ; "transcribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transcribiera" ; "transcribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transcribiéramos" ; "transcribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"transcribierais" ; "transcribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"transcribieran" ; "transcribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "transcribí" ;--# notpresent
    VP (Pret Sg P2) => "transcribiste" ;--# notpresent
    VP (Pret Sg P3) => "transcribió" ;--# notpresent
    VP (Pret Pl P1) => "transcribimos" ;--# notpresent
    VP (Pret Pl P2) => "transcribisteis" ;--# notpresent
    VP (Pret Pl P3) => "transcribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transcribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "transcribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "transcribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transcribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transcribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "transcribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transcribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "transcribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transcribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transcribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transcribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "transcribieren" ;--# notpresent
    VP (Cond Sg P1) => "transcribiría" ;--# notpresent
    VP (Cond Sg P2) => "transcribirías" ;--# notpresent
    VP (Cond Sg P3) => "transcribiría" ;--# notpresent
    VP (Cond Pl P1) => "transcribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "transcribiríais" ;--# notpresent
    VP (Cond Pl P3) => "transcribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "transcribe" ;
    VP (Imp Sg P3) => "transcriba" ;
    VP (Imp Pl P1) => "transcribamos" ;
    VP (Imp Pl P2) => "transcribid" ;
    VP (Imp Pl P3) => "transcriban" ;
    VP (Pass Sg Masc) => "transcribido" ;
    VP (Pass Sg Fem) => "transcribida" ;
    VP (Pass Pl Masc) => "transcribidos" ;
    VP (Pass Pl Fem) => "transcribidas"
    }
  } ;

lin trascribir_V = verboV 
 {s = table {
    VI Infn => "trascribir" ;
    VI Ger => "trascribiendo" ;
    VI Part => "trascrito" ;
    VP (Pres Ind Sg P1) => "trascribo" ;
    VP (Pres Ind Sg P2) => "trascribes" ;
    VP (Pres Ind Sg P3) => "trascribe" ;
    VP (Pres Ind Pl P1) => "trascribimos" ;
    VP (Pres Ind Pl P2) => "trascribís" ;
    VP (Pres Ind Pl P3) => "trascriben" ;
    VP (Pres Subj Sg P1) => "trascriba" ;
    VP (Pres Subj Sg P2) => "trascribas" ;
    VP (Pres Subj Sg P3) => "trascriba" ;
    VP (Pres Subj Pl P1) => "trascribamos" ;
    VP (Pres Subj Pl P2) => "trascribáis" ;
    VP (Pres Subj Pl P3) => "trascriban" ;
    VP (Impf Ind Sg P1) => "trascribía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trascribías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trascribía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trascribíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trascribíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trascribían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trascribiera" ; "trascribiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trascribieras" ; "trascribieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trascribiera" ; "trascribiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trascribiéramos" ; "trascribiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trascribierais" ; "trascribieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trascribieran" ; "trascribiesen"} ;--# notpresent
    VP (Pret Sg P1) => "trascribí" ;--# notpresent
    VP (Pret Sg P2) => "trascribiste" ;--# notpresent
    VP (Pret Sg P3) => "trascribió" ;--# notpresent
    VP (Pret Pl P1) => "trascribimos" ;--# notpresent
    VP (Pret Pl P2) => "trascribisteis" ;--# notpresent
    VP (Pret Pl P3) => "trascribieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trascribiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trascribirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trascribirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trascribiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trascribiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trascribirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trascribiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trascribieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trascribiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trascribiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trascribiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trascribieren" ;--# notpresent
    VP (Cond Sg P1) => "trascribiría" ;--# notpresent
    VP (Cond Sg P2) => "trascribirías" ;--# notpresent
    VP (Cond Sg P3) => "trascribiría" ;--# notpresent
    VP (Cond Pl P1) => "trascribiríamos" ;--# notpresent
    VP (Cond Pl P2) => "trascribiríais" ;--# notpresent
    VP (Cond Pl P3) => "trascribirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trascribe" ;
    VP (Imp Sg P3) => "trascriba" ;
    VP (Imp Pl P1) => "trascribamos" ;
    VP (Imp Pl P2) => "trascribid" ;
    VP (Imp Pl P3) => "trascriban" ;
    VP (Pass Sg Masc) => "trascribido" ;
    VP (Pass Sg Fem) => "trascribida" ;
    VP (Pass Pl Masc) => "trascribidos" ;
    VP (Pass Pl Fem) => "trascribidas"
    }
  } ;

lin abolir_V = verboV 
 {s = table {
    VI Infn => "abolir" ;
    VI Ger => "aboliendo" ;
    VI Part => "abolido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "abolimos" ;
    VP (Pres Ind Pl P2) => "abolís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "abolía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abolías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abolía" ;--# notpresent
    VP (Impf Ind Pl P1) => "abolíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abolíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abolían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aboliera" ; "aboliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abolieras" ; "abolieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aboliera" ; "aboliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aboliéramos" ; "aboliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abolierais" ; "abolieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abolieran" ; "aboliesen"} ;--# notpresent
    VP (Pret Sg P1) => "abolí" ;--# notpresent
    VP (Pret Sg P2) => "aboliste" ;--# notpresent
    VP (Pret Sg P3) => "abolió" ;--# notpresent
    VP (Pret Pl P1) => "abolimos" ;--# notpresent
    VP (Pret Pl P2) => "abolisteis" ;--# notpresent
    VP (Pret Pl P3) => "abolieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aboliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abolirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abolirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aboliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aboliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abolirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aboliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abolieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aboliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aboliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aboliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abolieren" ;--# notpresent
    VP (Cond Sg P1) => "aboliría" ;--# notpresent
    VP (Cond Sg P2) => "abolirías" ;--# notpresent
    VP (Cond Sg P3) => "aboliría" ;--# notpresent
    VP (Cond Pl P1) => "aboliríamos" ;--# notpresent
    VP (Cond Pl P2) => "aboliríais" ;--# notpresent
    VP (Cond Pl P3) => "abolirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "abolid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "abolido" ;
    VP (Pass Sg Fem) => "abolida" ;
    VP (Pass Pl Masc) => "abolidos" ;
    VP (Pass Pl Fem) => "abolidas"
    }
  } ;

lin agredir_V = verboV 
 {s = table {
    VI Infn => "agredir" ;
    VI Ger => "agrediendo" ;
    VI Part => "agredido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "agredimos" ;
    VP (Pres Ind Pl P2) => "agredís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "agredía" ;--# notpresent
    VP (Impf Ind Sg P2) => "agredías" ;--# notpresent
    VP (Impf Ind Sg P3) => "agredía" ;--# notpresent
    VP (Impf Ind Pl P1) => "agredíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "agredíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "agredían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"agrediera" ; "agrediese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"agredieras" ; "agredieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"agrediera" ; "agrediese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"agrediéramos" ; "agrediésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"agredierais" ; "agredieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"agredieran" ; "agrediesen"} ;--# notpresent
    VP (Pret Sg P1) => "agredí" ;--# notpresent
    VP (Pret Sg P2) => "agrediste" ;--# notpresent
    VP (Pret Sg P3) => "agredió" ;--# notpresent
    VP (Pret Pl P1) => "agredimos" ;--# notpresent
    VP (Pret Pl P2) => "agredisteis" ;--# notpresent
    VP (Pret Pl P3) => "agredieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "agrediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "agredirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "agredirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "agrediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "agrediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "agredirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "agrediere" ;--# notpresent
    VP (Fut Subj Sg P2) => "agredieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "agrediere" ;--# notpresent
    VP (Fut Subj Pl P1) => "agrediéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "agrediereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "agredieren" ;--# notpresent
    VP (Cond Sg P1) => "agrediría" ;--# notpresent
    VP (Cond Sg P2) => "agredirías" ;--# notpresent
    VP (Cond Sg P3) => "agrediría" ;--# notpresent
    VP (Cond Pl P1) => "agrediríamos" ;--# notpresent
    VP (Cond Pl P2) => "agrediríais" ;--# notpresent
    VP (Cond Pl P3) => "agredirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "agredid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "agredido" ;
    VP (Pass Sg Fem) => "agredida" ;
    VP (Pass Pl Masc) => "agredidos" ;
    VP (Pass Pl Fem) => "agredidas"
    }
  } ;

lin aguerrir_V = verboV 
 {s = table {
    VI Infn => "aguerrir" ;
    VI Ger => "aguerriendo" ;
    VI Part => "aguerrido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "aguerrimos" ;
    VP (Pres Ind Pl P2) => "aguerrís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "aguerría" ;--# notpresent
    VP (Impf Ind Sg P2) => "aguerrías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aguerría" ;--# notpresent
    VP (Impf Ind Pl P1) => "aguerríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aguerríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aguerrían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aguerriera" ; "aguerriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aguerrieras" ; "aguerrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aguerriera" ; "aguerriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aguerriéramos" ; "aguerriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aguerrierais" ; "aguerrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aguerrieran" ; "aguerriesen"} ;--# notpresent
    VP (Pret Sg P1) => "aguerrí" ;--# notpresent
    VP (Pret Sg P2) => "aguerriste" ;--# notpresent
    VP (Pret Sg P3) => "aguerrió" ;--# notpresent
    VP (Pret Pl P1) => "aguerrimos" ;--# notpresent
    VP (Pret Pl P2) => "aguerristeis" ;--# notpresent
    VP (Pret Pl P3) => "aguerrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aguerriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aguerrirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aguerrirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aguerriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aguerriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aguerrirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aguerriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aguerrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aguerriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aguerriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aguerriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aguerrieren" ;--# notpresent
    VP (Cond Sg P1) => "aguerriría" ;--# notpresent
    VP (Cond Sg P2) => "aguerrirías" ;--# notpresent
    VP (Cond Sg P3) => "aguerriría" ;--# notpresent
    VP (Cond Pl P1) => "aguerriríamos" ;--# notpresent
    VP (Cond Pl P2) => "aguerriríais" ;--# notpresent
    VP (Cond Pl P3) => "aguerrirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "aguerrid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "aguerrido" ;
    VP (Pass Sg Fem) => "aguerrida" ;
    VP (Pass Pl Masc) => "aguerridos" ;
    VP (Pass Pl Fem) => "aguerridas"
    }
  } ;

lin arrecir_V = verboV 
 {s = table {
    VI Infn => "arrecir" ;
    VI Ger => "arreciendo" ;
    VI Part => "arrecido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "arrecimos" ;
    VP (Pres Ind Pl P2) => "arrecís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "arrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "arrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "arrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "arrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "arrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "arrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arreciera" ; "arreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"arrecieras" ; "arrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arreciera" ; "arreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arreciéramos" ; "arreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"arrecierais" ; "arrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"arrecieran" ; "arreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "arrecí" ;--# notpresent
    VP (Pret Sg P2) => "arreciste" ;--# notpresent
    VP (Pret Sg P3) => "arreció" ;--# notpresent
    VP (Pret Pl P1) => "arrecimos" ;--# notpresent
    VP (Pret Pl P2) => "arrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "arrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arreciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "arrecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "arrecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "arreciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arreciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "arrecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "arrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "arreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "arreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "arrecieren" ;--# notpresent
    VP (Cond Sg P1) => "arreciría" ;--# notpresent
    VP (Cond Sg P2) => "arrecirías" ;--# notpresent
    VP (Cond Sg P3) => "arreciría" ;--# notpresent
    VP (Cond Pl P1) => "arreciríamos" ;--# notpresent
    VP (Cond Pl P2) => "arreciríais" ;--# notpresent
    VP (Cond Pl P3) => "arrecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "arrecid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "arrecido" ;
    VP (Pass Sg Fem) => "arrecida" ;
    VP (Pass Pl Masc) => "arrecidos" ;
    VP (Pass Pl Fem) => "arrecidas"
    }
  } ;

lin aterir_V = verboV 
 {s = table {
    VI Infn => "aterir" ;
    VI Ger => "ateriendo" ;
    VI Part => "aterido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "aterimos" ;
    VP (Pres Ind Pl P2) => "aterís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "atería" ;--# notpresent
    VP (Impf Ind Sg P2) => "aterías" ;--# notpresent
    VP (Impf Ind Sg P3) => "atería" ;--# notpresent
    VP (Impf Ind Pl P1) => "ateríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ateríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aterían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ateriera" ; "ateriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aterieras" ; "aterieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ateriera" ; "ateriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ateriéramos" ; "ateriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aterierais" ; "aterieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aterieran" ; "ateriesen"} ;--# notpresent
    VP (Pret Sg P1) => "aterí" ;--# notpresent
    VP (Pret Sg P2) => "ateriste" ;--# notpresent
    VP (Pret Sg P3) => "aterió" ;--# notpresent
    VP (Pret Pl P1) => "aterimos" ;--# notpresent
    VP (Pret Pl P2) => "ateristeis" ;--# notpresent
    VP (Pret Pl P3) => "aterieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ateriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aterirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aterirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ateriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ateriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aterirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ateriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aterieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ateriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ateriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ateriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aterieren" ;--# notpresent
    VP (Cond Sg P1) => "ateriría" ;--# notpresent
    VP (Cond Sg P2) => "aterirías" ;--# notpresent
    VP (Cond Sg P3) => "ateriría" ;--# notpresent
    VP (Cond Pl P1) => "ateriríamos" ;--# notpresent
    VP (Cond Pl P2) => "ateriríais" ;--# notpresent
    VP (Cond Pl P3) => "aterirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "aterid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "aterido" ;
    VP (Pass Sg Fem) => "aterida" ;
    VP (Pass Pl Masc) => "ateridos" ;
    VP (Pass Pl Fem) => "ateridas"
    }
  } ;

lin blandir_V = verboV 
 {s = table {
    VI Infn => "blandir" ;
    VI Ger => "blandiendo" ;
    VI Part => "blandido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "blandimos" ;
    VP (Pres Ind Pl P2) => "blandís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "blandía" ;--# notpresent
    VP (Impf Ind Sg P2) => "blandías" ;--# notpresent
    VP (Impf Ind Sg P3) => "blandía" ;--# notpresent
    VP (Impf Ind Pl P1) => "blandíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "blandíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "blandían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"blandiera" ; "blandiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"blandieras" ; "blandieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"blandiera" ; "blandiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"blandiéramos" ; "blandiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"blandierais" ; "blandieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"blandieran" ; "blandiesen"} ;--# notpresent
    VP (Pret Sg P1) => "blandí" ;--# notpresent
    VP (Pret Sg P2) => "blandiste" ;--# notpresent
    VP (Pret Sg P3) => "blandió" ;--# notpresent
    VP (Pret Pl P1) => "blandimos" ;--# notpresent
    VP (Pret Pl P2) => "blandisteis" ;--# notpresent
    VP (Pret Pl P3) => "blandieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "blandiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "blandirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "blandirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "blandiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "blandiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "blandirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "blandiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "blandieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "blandiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "blandiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "blandiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "blandieren" ;--# notpresent
    VP (Cond Sg P1) => "blandiría" ;--# notpresent
    VP (Cond Sg P2) => "blandirías" ;--# notpresent
    VP (Cond Sg P3) => "blandiría" ;--# notpresent
    VP (Cond Pl P1) => "blandiríamos" ;--# notpresent
    VP (Cond Pl P2) => "blandiríais" ;--# notpresent
    VP (Cond Pl P3) => "blandirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "blandid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "blandido" ;
    VP (Pass Sg Fem) => "blandida" ;
    VP (Pass Pl Masc) => "blandidos" ;
    VP (Pass Pl Fem) => "blandidas"
    }
  } ;

lin colorir_V = verboV 
 {s = table {
    VI Infn => "colorir" ;
    VI Ger => "coloriendo" ;
    VI Part => "colorido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "colorimos" ;
    VP (Pres Ind Pl P2) => "colorís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "coloría" ;--# notpresent
    VP (Impf Ind Sg P2) => "colorías" ;--# notpresent
    VP (Impf Ind Sg P3) => "coloría" ;--# notpresent
    VP (Impf Ind Pl P1) => "coloríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "coloríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "colorían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"coloriera" ; "coloriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"colorieras" ; "colorieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"coloriera" ; "coloriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coloriéramos" ; "coloriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"colorierais" ; "colorieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"colorieran" ; "coloriesen"} ;--# notpresent
    VP (Pret Sg P1) => "colorí" ;--# notpresent
    VP (Pret Sg P2) => "coloriste" ;--# notpresent
    VP (Pret Sg P3) => "colorió" ;--# notpresent
    VP (Pret Pl P1) => "colorimos" ;--# notpresent
    VP (Pret Pl P2) => "coloristeis" ;--# notpresent
    VP (Pret Pl P3) => "colorieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "coloriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "colorirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "colorirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "coloriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "coloriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "colorirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "coloriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "colorieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "coloriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "coloriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "coloriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "colorieren" ;--# notpresent
    VP (Cond Sg P1) => "coloriría" ;--# notpresent
    VP (Cond Sg P2) => "colorirías" ;--# notpresent
    VP (Cond Sg P3) => "coloriría" ;--# notpresent
    VP (Cond Pl P1) => "coloriríamos" ;--# notpresent
    VP (Cond Pl P2) => "coloriríais" ;--# notpresent
    VP (Cond Pl P3) => "colorirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "colorid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "colorido" ;
    VP (Pass Sg Fem) => "colorida" ;
    VP (Pass Pl Masc) => "coloridos" ;
    VP (Pass Pl Fem) => "coloridas"
    }
  } ;

lin concernir_V = verboV 
 {s = table {
    VI Infn => "concernir" ;
    VI Ger => "concerniendo" ;
    VI Part => "concernido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "concernimos" ;
    VP (Pres Ind Pl P2) => "concernís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "concernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "concernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "concernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "concerníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "concerníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "concernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"concerniera" ; "concerniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"concernieras" ; "concernieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"concerniera" ; "concerniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"concerniéramos" ; "concerniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"concernierais" ; "concernieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"concernieran" ; "concerniesen"} ;--# notpresent
    VP (Pret Sg P1) => "concerní" ;--# notpresent
    VP (Pret Sg P2) => "concerniste" ;--# notpresent
    VP (Pret Sg P3) => "concernió" ;--# notpresent
    VP (Pret Pl P1) => "concernimos" ;--# notpresent
    VP (Pret Pl P2) => "concernisteis" ;--# notpresent
    VP (Pret Pl P3) => "concernieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "concerniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "concernirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "concernirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "concerniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "concerniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "concernirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "concerniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "concernieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "concerniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "concerniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "concerniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "concernieren" ;--# notpresent
    VP (Cond Sg P1) => "concerniría" ;--# notpresent
    VP (Cond Sg P2) => "concernirías" ;--# notpresent
    VP (Cond Sg P3) => "concerniría" ;--# notpresent
    VP (Cond Pl P1) => "concerniríamos" ;--# notpresent
    VP (Cond Pl P2) => "concerniríais" ;--# notpresent
    VP (Cond Pl P3) => "concernirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "concernid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "concernido" ;
    VP (Pass Sg Fem) => "concernida" ;
    VP (Pass Pl Masc) => "concernidos" ;
    VP (Pass Pl Fem) => "concernidas"
    }
  } ;

lin empedernir_V = verboV 
 {s = table {
    VI Infn => "empedernir" ;
    VI Ger => "empederniendo" ;
    VI Part => "empedernido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "empedernimos" ;
    VP (Pres Ind Pl P2) => "empedernís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "empedernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empedernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empedernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empederníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empederníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empedernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empederniera" ; "empederniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empedernieras" ; "empedernieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empederniera" ; "empederniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empederniéramos" ; "empederniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empedernierais" ; "empedernieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empedernieran" ; "empederniesen"} ;--# notpresent
    VP (Pret Sg P1) => "empederní" ;--# notpresent
    VP (Pret Sg P2) => "empederniste" ;--# notpresent
    VP (Pret Sg P3) => "empedernió" ;--# notpresent
    VP (Pret Pl P1) => "empedernimos" ;--# notpresent
    VP (Pret Pl P2) => "empedernisteis" ;--# notpresent
    VP (Pret Pl P3) => "empedernieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empederniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empedernirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empedernirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empederniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empederniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empedernirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empederniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empedernieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empederniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empederniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empederniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empedernieren" ;--# notpresent
    VP (Cond Sg P1) => "empederniría" ;--# notpresent
    VP (Cond Sg P2) => "empedernirías" ;--# notpresent
    VP (Cond Sg P3) => "empederniría" ;--# notpresent
    VP (Cond Pl P1) => "empederniríamos" ;--# notpresent
    VP (Cond Pl P2) => "empederniríais" ;--# notpresent
    VP (Cond Pl P3) => "empedernirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "empedernid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "empedernido" ;
    VP (Pass Sg Fem) => "empedernida" ;
    VP (Pass Pl Masc) => "empedernidos" ;
    VP (Pass Pl Fem) => "empedernidas"
    }
  } ;

lin garantir_V = verboV 
 {s = table {
    VI Infn => "garantir" ;
    VI Ger => "garantiendo" ;
    VI Part => "garantido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "garantimos" ;
    VP (Pres Ind Pl P2) => "garantís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "garantía" ;--# notpresent
    VP (Impf Ind Sg P2) => "garantías" ;--# notpresent
    VP (Impf Ind Sg P3) => "garantía" ;--# notpresent
    VP (Impf Ind Pl P1) => "garantíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "garantíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "garantían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"garantiera" ; "garantiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"garantieras" ; "garantieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"garantiera" ; "garantiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"garantiéramos" ; "garantiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"garantierais" ; "garantieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"garantieran" ; "garantiesen"} ;--# notpresent
    VP (Pret Sg P1) => "garantí" ;--# notpresent
    VP (Pret Sg P2) => "garantiste" ;--# notpresent
    VP (Pret Sg P3) => "garantió" ;--# notpresent
    VP (Pret Pl P1) => "garantimos" ;--# notpresent
    VP (Pret Pl P2) => "garantisteis" ;--# notpresent
    VP (Pret Pl P3) => "garantieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "garantiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "garantirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "garantirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "garantiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "garantiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "garantirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "garantiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "garantieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "garantiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "garantiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "garantiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "garantieren" ;--# notpresent
    VP (Cond Sg P1) => "garantiría" ;--# notpresent
    VP (Cond Sg P2) => "garantirías" ;--# notpresent
    VP (Cond Sg P3) => "garantiría" ;--# notpresent
    VP (Cond Pl P1) => "garantiríamos" ;--# notpresent
    VP (Cond Pl P2) => "garantiríais" ;--# notpresent
    VP (Cond Pl P3) => "garantirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "garantid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "garantido" ;
    VP (Pass Sg Fem) => "garantida" ;
    VP (Pass Pl Masc) => "garantidos" ;
    VP (Pass Pl Fem) => "garantidas"
    }
  } ;

lin manir_V = verboV 
 {s = table {
    VI Infn => "manir" ;
    VI Ger => "maniendo" ;
    VI Part => "manido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "manimos" ;
    VP (Pres Ind Pl P2) => "manís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "manía" ;--# notpresent
    VP (Impf Ind Sg P2) => "manías" ;--# notpresent
    VP (Impf Ind Sg P3) => "manía" ;--# notpresent
    VP (Impf Ind Pl P1) => "maníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "maníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "manían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"maniera" ; "maniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"manieras" ; "manieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"maniera" ; "maniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"maniéramos" ; "maniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"manierais" ; "manieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"manieran" ; "maniesen"} ;--# notpresent
    VP (Pret Sg P1) => "maní" ;--# notpresent
    VP (Pret Sg P2) => "maniste" ;--# notpresent
    VP (Pret Sg P3) => "manió" ;--# notpresent
    VP (Pret Pl P1) => "manimos" ;--# notpresent
    VP (Pret Pl P2) => "manisteis" ;--# notpresent
    VP (Pret Pl P3) => "manieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "maniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "manirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "manirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "maniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "maniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "manirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "maniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "manieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "maniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "maniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "maniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "manieren" ;--# notpresent
    VP (Cond Sg P1) => "maniría" ;--# notpresent
    VP (Cond Sg P2) => "manirías" ;--# notpresent
    VP (Cond Sg P3) => "maniría" ;--# notpresent
    VP (Cond Pl P1) => "maniríamos" ;--# notpresent
    VP (Cond Pl P2) => "maniríais" ;--# notpresent
    VP (Cond Pl P3) => "manirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "manid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "manido" ;
    VP (Pass Sg Fem) => "manida" ;
    VP (Pass Pl Masc) => "manidos" ;
    VP (Pass Pl Fem) => "manidas"
    }
  } ;

lin transgredir_V = verboV 
 {s = table {
    VI Infn => "transgredir" ;
    VI Ger => "transgrediendo" ;
    VI Part => "transgredido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "transgredimos" ;
    VP (Pres Ind Pl P2) => "transgredís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "transgredía" ;--# notpresent
    VP (Impf Ind Sg P2) => "transgredías" ;--# notpresent
    VP (Impf Ind Sg P3) => "transgredía" ;--# notpresent
    VP (Impf Ind Pl P1) => "transgredíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "transgredíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "transgredían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transgrediera" ; "transgrediese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"transgredieras" ; "transgredieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transgrediera" ; "transgrediese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transgrediéramos" ; "transgrediésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"transgredierais" ; "transgredieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"transgredieran" ; "transgrediesen"} ;--# notpresent
    VP (Pret Sg P1) => "transgredí" ;--# notpresent
    VP (Pret Sg P2) => "transgrediste" ;--# notpresent
    VP (Pret Sg P3) => "transgredió" ;--# notpresent
    VP (Pret Pl P1) => "transgredimos" ;--# notpresent
    VP (Pret Pl P2) => "transgredisteis" ;--# notpresent
    VP (Pret Pl P3) => "transgredieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transgrediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "transgredirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "transgredirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transgrediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transgrediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "transgredirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transgrediere" ;--# notpresent
    VP (Fut Subj Sg P2) => "transgredieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transgrediere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transgrediéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transgrediereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "transgredieren" ;--# notpresent
    VP (Cond Sg P1) => "transgrediría" ;--# notpresent
    VP (Cond Sg P2) => "transgredirías" ;--# notpresent
    VP (Cond Sg P3) => "transgrediría" ;--# notpresent
    VP (Cond Pl P1) => "transgrediríamos" ;--# notpresent
    VP (Cond Pl P2) => "transgrediríais" ;--# notpresent
    VP (Cond Pl P3) => "transgredirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "transgredid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "transgredido" ;
    VP (Pass Sg Fem) => "transgredida" ;
    VP (Pass Pl Masc) => "transgredidos" ;
    VP (Pass Pl Fem) => "transgredidas"
    }
  } ;

lin trasgredir_V = verboV 
 {s = table {
    VI Infn => "trasgredir" ;
    VI Ger => "trasgrediendo" ;
    VI Part => "trasgredido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => "trasgredimos" ;
    VP (Pres Ind Pl P2) => "trasgredís" ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => "trasgredía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasgredías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasgredía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasgredíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasgredíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasgredían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasgrediera" ; "trasgrediese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasgredieras" ; "trasgredieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasgrediera" ; "trasgrediese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasgrediéramos" ; "trasgrediésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasgredierais" ; "trasgredieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasgredieran" ; "trasgrediesen"} ;--# notpresent
    VP (Pret Sg P1) => "trasgredí" ;--# notpresent
    VP (Pret Sg P2) => "trasgrediste" ;--# notpresent
    VP (Pret Sg P3) => "trasgredió" ;--# notpresent
    VP (Pret Pl P1) => "trasgredimos" ;--# notpresent
    VP (Pret Pl P2) => "trasgredisteis" ;--# notpresent
    VP (Pret Pl P3) => "trasgredieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasgrediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasgredirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasgredirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasgrediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasgrediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasgredirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasgrediere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasgredieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasgrediere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasgrediéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasgrediereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasgredieren" ;--# notpresent
    VP (Cond Sg P1) => "trasgrediría" ;--# notpresent
    VP (Cond Sg P2) => "trasgredirías" ;--# notpresent
    VP (Cond Sg P3) => "trasgrediría" ;--# notpresent
    VP (Cond Pl P1) => "trasgrediríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasgrediríais" ;--# notpresent
    VP (Cond Pl P3) => "trasgredirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "trasgredid" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => "trasgredido" ;
    VP (Pass Sg Fem) => "trasgredida" ;
    VP (Pass Pl Masc) => "trasgredidos" ;
    VP (Pass Pl Fem) => "trasgredidas"
    }
  } ;

lin adquirir_V = verboV 
 {s = table {
    VI Infn => "adquirir" ;
    VI Ger => "adquiriendo" ;
    VI Part => "adquirido" ;
    VP (Pres Ind Sg P1) => "adquiero" ;
    VP (Pres Ind Sg P2) => "adquieres" ;
    VP (Pres Ind Sg P3) => "adquiere" ;
    VP (Pres Ind Pl P1) => "adquirimos" ;
    VP (Pres Ind Pl P2) => "adquirís" ;
    VP (Pres Ind Pl P3) => "adquieren" ;
    VP (Pres Subj Sg P1) => "adquiera" ;
    VP (Pres Subj Sg P2) => "adquieras" ;
    VP (Pres Subj Sg P3) => "adquiera" ;
    VP (Pres Subj Pl P1) => "adquiramos" ;
    VP (Pres Subj Pl P2) => "adquiráis" ;
    VP (Pres Subj Pl P3) => "adquieran" ;
    VP (Impf Ind Sg P1) => "adquiría" ;--# notpresent
    VP (Impf Ind Sg P2) => "adquirías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adquiría" ;--# notpresent
    VP (Impf Ind Pl P1) => "adquiríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adquiríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adquirían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adquiriera" ; "adquiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adquirieras" ; "adquirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adquiriera" ; "adquiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adquiriéramos" ; "adquiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adquirierais" ; "adquirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adquirieran" ; "adquiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "adquirí" ;--# notpresent
    VP (Pret Sg P2) => "adquiriste" ;--# notpresent
    VP (Pret Sg P3) => "adquirió" ;--# notpresent
    VP (Pret Pl P1) => "adquirimos" ;--# notpresent
    VP (Pret Pl P2) => "adquiristeis" ;--# notpresent
    VP (Pret Pl P3) => "adquirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adquiriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adquirirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adquirirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adquiriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adquiriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adquirirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adquiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adquirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adquiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adquiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adquiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adquirieren" ;--# notpresent
    VP (Cond Sg P1) => "adquiriría" ;--# notpresent
    VP (Cond Sg P2) => "adquirirías" ;--# notpresent
    VP (Cond Sg P3) => "adquiriría" ;--# notpresent
    VP (Cond Pl P1) => "adquiriríamos" ;--# notpresent
    VP (Cond Pl P2) => "adquiriríais" ;--# notpresent
    VP (Cond Pl P3) => "adquirirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adquiere" ;
    VP (Imp Sg P3) => "adquiera" ;
    VP (Imp Pl P1) => "adquiramos" ;
    VP (Imp Pl P2) => "adquirid" ;
    VP (Imp Pl P3) => "adquieran" ;
    VP (Pass Sg Masc) => "adquirido" ;
    VP (Pass Sg Fem) => "adquirida" ;
    VP (Pass Pl Masc) => "adquiridos" ;
    VP (Pass Pl Fem) => "adquiridas"
    }
  } ;

lin coadquirir_V = verboV 
 {s = table {
    VI Infn => "coadquirir" ;
    VI Ger => "coadquiriendo" ;
    VI Part => "coadquirido" ;
    VP (Pres Ind Sg P1) => "coadquiero" ;
    VP (Pres Ind Sg P2) => "coadquieres" ;
    VP (Pres Ind Sg P3) => "coadquiere" ;
    VP (Pres Ind Pl P1) => "coadquirimos" ;
    VP (Pres Ind Pl P2) => "coadquirís" ;
    VP (Pres Ind Pl P3) => "coadquieren" ;
    VP (Pres Subj Sg P1) => "coadquiera" ;
    VP (Pres Subj Sg P2) => "coadquieras" ;
    VP (Pres Subj Sg P3) => "coadquiera" ;
    VP (Pres Subj Pl P1) => "coadquiramos" ;
    VP (Pres Subj Pl P2) => "coadquiráis" ;
    VP (Pres Subj Pl P3) => "coadquieran" ;
    VP (Impf Ind Sg P1) => "coadquiría" ;--# notpresent
    VP (Impf Ind Sg P2) => "coadquirías" ;--# notpresent
    VP (Impf Ind Sg P3) => "coadquiría" ;--# notpresent
    VP (Impf Ind Pl P1) => "coadquiríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "coadquiríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "coadquirían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"coadquiriera" ; "coadquiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"coadquirieras" ; "coadquirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"coadquiriera" ; "coadquiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coadquiriéramos" ; "coadquiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"coadquirierais" ; "coadquirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"coadquirieran" ; "coadquiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "coadquirí" ;--# notpresent
    VP (Pret Sg P2) => "coadquiriste" ;--# notpresent
    VP (Pret Sg P3) => "coadquirió" ;--# notpresent
    VP (Pret Pl P1) => "coadquirimos" ;--# notpresent
    VP (Pret Pl P2) => "coadquiristeis" ;--# notpresent
    VP (Pret Pl P3) => "coadquirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "coadquiriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "coadquirirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "coadquirirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "coadquiriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "coadquiriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "coadquirirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "coadquiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "coadquirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "coadquiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "coadquiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "coadquiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "coadquirieren" ;--# notpresent
    VP (Cond Sg P1) => "coadquiriría" ;--# notpresent
    VP (Cond Sg P2) => "coadquirirías" ;--# notpresent
    VP (Cond Sg P3) => "coadquiriría" ;--# notpresent
    VP (Cond Pl P1) => "coadquiriríamos" ;--# notpresent
    VP (Cond Pl P2) => "coadquiriríais" ;--# notpresent
    VP (Cond Pl P3) => "coadquirirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "coadquiere" ;
    VP (Imp Sg P3) => "coadquiera" ;
    VP (Imp Pl P1) => "coadquiramos" ;
    VP (Imp Pl P2) => "coadquirid" ;
    VP (Imp Pl P3) => "coadquieran" ;
    VP (Pass Sg Masc) => "coadquirido" ;
    VP (Pass Sg Fem) => "coadquirida" ;
    VP (Pass Pl Masc) => "coadquiridos" ;
    VP (Pass Pl Fem) => "coadquiridas"
    }
  } ;

lin inquirir_V = verboV 
 {s = table {
    VI Infn => "inquirir" ;
    VI Ger => "inquiriendo" ;
    VI Part => "inquirido" ;
    VP (Pres Ind Sg P1) => "inquiero" ;
    VP (Pres Ind Sg P2) => "inquieres" ;
    VP (Pres Ind Sg P3) => "inquiere" ;
    VP (Pres Ind Pl P1) => "inquirimos" ;
    VP (Pres Ind Pl P2) => "inquirís" ;
    VP (Pres Ind Pl P3) => "inquieren" ;
    VP (Pres Subj Sg P1) => "inquiera" ;
    VP (Pres Subj Sg P2) => "inquieras" ;
    VP (Pres Subj Sg P3) => "inquiera" ;
    VP (Pres Subj Pl P1) => "inquiramos" ;
    VP (Pres Subj Pl P2) => "inquiráis" ;
    VP (Pres Subj Pl P3) => "inquieran" ;
    VP (Impf Ind Sg P1) => "inquiría" ;--# notpresent
    VP (Impf Ind Sg P2) => "inquirías" ;--# notpresent
    VP (Impf Ind Sg P3) => "inquiría" ;--# notpresent
    VP (Impf Ind Pl P1) => "inquiríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inquiríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inquirían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"inquiriera" ; "inquiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"inquirieras" ; "inquirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"inquiriera" ; "inquiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"inquiriéramos" ; "inquiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"inquirierais" ; "inquirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"inquirieran" ; "inquiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "inquirí" ;--# notpresent
    VP (Pret Sg P2) => "inquiriste" ;--# notpresent
    VP (Pret Sg P3) => "inquirió" ;--# notpresent
    VP (Pret Pl P1) => "inquirimos" ;--# notpresent
    VP (Pret Pl P2) => "inquiristeis" ;--# notpresent
    VP (Pret Pl P3) => "inquirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "inquiriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inquirirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inquirirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "inquiriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "inquiriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inquirirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "inquiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "inquirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "inquiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "inquiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "inquiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "inquirieren" ;--# notpresent
    VP (Cond Sg P1) => "inquiriría" ;--# notpresent
    VP (Cond Sg P2) => "inquirirías" ;--# notpresent
    VP (Cond Sg P3) => "inquiriría" ;--# notpresent
    VP (Cond Pl P1) => "inquiriríamos" ;--# notpresent
    VP (Cond Pl P2) => "inquiriríais" ;--# notpresent
    VP (Cond Pl P3) => "inquirirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inquiere" ;
    VP (Imp Sg P3) => "inquiera" ;
    VP (Imp Pl P1) => "inquiramos" ;
    VP (Imp Pl P2) => "inquirid" ;
    VP (Imp Pl P3) => "inquieran" ;
    VP (Pass Sg Masc) => "inquirido" ;
    VP (Pass Sg Fem) => "inquirida" ;
    VP (Pass Pl Masc) => "inquiridos" ;
    VP (Pass Pl Fem) => "inquiridas"
    }
  } ;

lin perquirir_V = verboV 
 {s = table {
    VI Infn => "perquirir" ;
    VI Ger => "perquiriendo" ;
    VI Part => "perquirido" ;
    VP (Pres Ind Sg P1) => "perquiero" ;
    VP (Pres Ind Sg P2) => "perquieres" ;
    VP (Pres Ind Sg P3) => "perquiere" ;
    VP (Pres Ind Pl P1) => "perquirimos" ;
    VP (Pres Ind Pl P2) => "perquirís" ;
    VP (Pres Ind Pl P3) => "perquieren" ;
    VP (Pres Subj Sg P1) => "perquiera" ;
    VP (Pres Subj Sg P2) => "perquieras" ;
    VP (Pres Subj Sg P3) => "perquiera" ;
    VP (Pres Subj Pl P1) => "perquiramos" ;
    VP (Pres Subj Pl P2) => "perquiráis" ;
    VP (Pres Subj Pl P3) => "perquieran" ;
    VP (Impf Ind Sg P1) => "perquiría" ;--# notpresent
    VP (Impf Ind Sg P2) => "perquirías" ;--# notpresent
    VP (Impf Ind Sg P3) => "perquiría" ;--# notpresent
    VP (Impf Ind Pl P1) => "perquiríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "perquiríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "perquirían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"perquiriera" ; "perquiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"perquirieras" ; "perquirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"perquiriera" ; "perquiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"perquiriéramos" ; "perquiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"perquirierais" ; "perquirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"perquirieran" ; "perquiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "perquirí" ;--# notpresent
    VP (Pret Sg P2) => "perquiriste" ;--# notpresent
    VP (Pret Sg P3) => "perquirió" ;--# notpresent
    VP (Pret Pl P1) => "perquirimos" ;--# notpresent
    VP (Pret Pl P2) => "perquiristeis" ;--# notpresent
    VP (Pret Pl P3) => "perquirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "perquiriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "perquirirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "perquirirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "perquiriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "perquiriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "perquirirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "perquiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "perquirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "perquiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "perquiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "perquiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "perquirieren" ;--# notpresent
    VP (Cond Sg P1) => "perquiriría" ;--# notpresent
    VP (Cond Sg P2) => "perquirirías" ;--# notpresent
    VP (Cond Sg P3) => "perquiriría" ;--# notpresent
    VP (Cond Pl P1) => "perquiriríamos" ;--# notpresent
    VP (Cond Pl P2) => "perquiriríais" ;--# notpresent
    VP (Cond Pl P3) => "perquirirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "perquiere" ;
    VP (Imp Sg P3) => "perquiera" ;
    VP (Imp Pl P1) => "perquiramos" ;
    VP (Imp Pl P2) => "perquirid" ;
    VP (Imp Pl P3) => "perquieran" ;
    VP (Pass Sg Masc) => "perquirido" ;
    VP (Pass Sg Fem) => "perquirida" ;
    VP (Pass Pl Masc) => "perquiridos" ;
    VP (Pass Pl Fem) => "perquiridas"
    }
  } ;

lin ascender_V = verboV 
 {s = table {
    VI Infn => "ascender" ;
    VI Ger => "ascendiendo" ;
    VI Part => "ascendido" ;
    VP (Pres Ind Sg P1) => "asciendo" ;
    VP (Pres Ind Sg P2) => "asciendes" ;
    VP (Pres Ind Sg P3) => "asciende" ;
    VP (Pres Ind Pl P1) => "ascendemos" ;
    VP (Pres Ind Pl P2) => "ascendéis" ;
    VP (Pres Ind Pl P3) => "ascienden" ;
    VP (Pres Subj Sg P1) => "ascienda" ;
    VP (Pres Subj Sg P2) => "asciendas" ;
    VP (Pres Subj Sg P3) => "ascienda" ;
    VP (Pres Subj Pl P1) => "ascendamos" ;
    VP (Pres Subj Pl P2) => "ascendáis" ;
    VP (Pres Subj Pl P3) => "asciendan" ;
    VP (Impf Ind Sg P1) => "ascendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ascendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ascendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ascendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ascendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ascendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ascendiera" ; "ascendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ascendieras" ; "ascendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ascendiera" ; "ascendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ascendiéramos" ; "ascendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ascendierais" ; "ascendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ascendieran" ; "ascendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "ascendí" ;--# notpresent
    VP (Pret Sg P2) => "ascendiste" ;--# notpresent
    VP (Pret Sg P3) => "ascendió" ;--# notpresent
    VP (Pret Pl P1) => "ascendimos" ;--# notpresent
    VP (Pret Pl P2) => "ascendisteis" ;--# notpresent
    VP (Pret Pl P3) => "ascendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ascenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "ascenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ascenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ascenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ascenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ascenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ascendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ascendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ascendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ascendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ascendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ascendieren" ;--# notpresent
    VP (Cond Sg P1) => "ascendería" ;--# notpresent
    VP (Cond Sg P2) => "ascenderías" ;--# notpresent
    VP (Cond Sg P3) => "ascendería" ;--# notpresent
    VP (Cond Pl P1) => "ascenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "ascenderíais" ;--# notpresent
    VP (Cond Pl P3) => "ascenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asciende" ;
    VP (Imp Sg P3) => "ascienda" ;
    VP (Imp Pl P1) => "ascendamos" ;
    VP (Imp Pl P2) => "ascended" ;
    VP (Imp Pl P3) => "asciendan" ;
    VP (Pass Sg Masc) => "ascendido" ;
    VP (Pass Sg Fem) => "ascendida" ;
    VP (Pass Pl Masc) => "ascendidos" ;
    VP (Pass Pl Fem) => "ascendidas"
    }
  } ;

lin atender_V = verboV 
 {s = table {
    VI Infn => "atender" ;
    VI Ger => "atendiendo" ;
    VI Part => "atendido" ;
    VP (Pres Ind Sg P1) => "atiendo" ;
    VP (Pres Ind Sg P2) => "atiendes" ;
    VP (Pres Ind Sg P3) => "atiende" ;
    VP (Pres Ind Pl P1) => "atendemos" ;
    VP (Pres Ind Pl P2) => "atendéis" ;
    VP (Pres Ind Pl P3) => "atienden" ;
    VP (Pres Subj Sg P1) => "atienda" ;
    VP (Pres Subj Sg P2) => "atiendas" ;
    VP (Pres Subj Sg P3) => "atienda" ;
    VP (Pres Subj Pl P1) => "atendamos" ;
    VP (Pres Subj Pl P2) => "atendáis" ;
    VP (Pres Subj Pl P3) => "atiendan" ;
    VP (Impf Ind Sg P1) => "atendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "atendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "atendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "atendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atendiera" ; "atendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atendieras" ; "atendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atendiera" ; "atendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atendiéramos" ; "atendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atendierais" ; "atendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atendieran" ; "atendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "atendí" ;--# notpresent
    VP (Pret Sg P2) => "atendiste" ;--# notpresent
    VP (Pret Sg P3) => "atendió" ;--# notpresent
    VP (Pret Pl P1) => "atendimos" ;--# notpresent
    VP (Pret Pl P2) => "atendisteis" ;--# notpresent
    VP (Pret Pl P3) => "atendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "atenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "atenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "atendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "atendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "atendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atendieren" ;--# notpresent
    VP (Cond Sg P1) => "atendería" ;--# notpresent
    VP (Cond Sg P2) => "atenderías" ;--# notpresent
    VP (Cond Sg P3) => "atendería" ;--# notpresent
    VP (Cond Pl P1) => "atenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "atenderíais" ;--# notpresent
    VP (Cond Pl P3) => "atenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atiende" ;
    VP (Imp Sg P3) => "atienda" ;
    VP (Imp Pl P1) => "atendamos" ;
    VP (Imp Pl P2) => "atended" ;
    VP (Imp Pl P3) => "atiendan" ;
    VP (Pass Sg Masc) => "atendido" ;
    VP (Pass Sg Fem) => "atendida" ;
    VP (Pass Pl Masc) => "atendidos" ;
    VP (Pass Pl Fem) => "atendidas"
    }
  } ;

lin cerner_V = verboV 
 {s = table {
    VI Infn => "cerner" ;
    VI Ger => "cerniendo" ;
    VI Part => "cernido" ;
    VP (Pres Ind Sg P1) => "cierno" ;
    VP (Pres Ind Sg P2) => "ciernes" ;
    VP (Pres Ind Sg P3) => "cierne" ;
    VP (Pres Ind Pl P1) => "cernemos" ;
    VP (Pres Ind Pl P2) => "cernéis" ;
    VP (Pres Ind Pl P3) => "ciernen" ;
    VP (Pres Subj Sg P1) => "cierna" ;
    VP (Pres Subj Sg P2) => "ciernas" ;
    VP (Pres Subj Sg P3) => "cierna" ;
    VP (Pres Subj Pl P1) => "cernamos" ;
    VP (Pres Subj Pl P2) => "cernáis" ;
    VP (Pres Subj Pl P3) => "ciernan" ;
    VP (Impf Ind Sg P1) => "cernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cerníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cerníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cerniera" ; "cerniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cernieras" ; "cernieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cerniera" ; "cerniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cerniéramos" ; "cerniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cernierais" ; "cernieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cernieran" ; "cerniesen"} ;--# notpresent
    VP (Pret Sg P1) => "cerní" ;--# notpresent
    VP (Pret Sg P2) => "cerniste" ;--# notpresent
    VP (Pret Sg P3) => "cernió" ;--# notpresent
    VP (Pret Pl P1) => "cernimos" ;--# notpresent
    VP (Pret Pl P2) => "cernisteis" ;--# notpresent
    VP (Pret Pl P3) => "cernieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cerneré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cernerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cernerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cerneremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cerneréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cernerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cerniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cernieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cerniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cerniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cerniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cernieren" ;--# notpresent
    VP (Cond Sg P1) => "cernería" ;--# notpresent
    VP (Cond Sg P2) => "cernerías" ;--# notpresent
    VP (Cond Sg P3) => "cernería" ;--# notpresent
    VP (Cond Pl P1) => "cerneríamos" ;--# notpresent
    VP (Cond Pl P2) => "cerneríais" ;--# notpresent
    VP (Cond Pl P3) => "cernerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cierne" ;
    VP (Imp Sg P3) => "cierna" ;
    VP (Imp Pl P1) => "cernamos" ;
    VP (Imp Pl P2) => "cerned" ;
    VP (Imp Pl P3) => "ciernan" ;
    VP (Pass Sg Masc) => "cernido" ;
    VP (Pass Sg Fem) => "cernida" ;
    VP (Pass Pl Masc) => "cernidos" ;
    VP (Pass Pl Fem) => "cernidas"
    }
  } ;

lin condecender_V = verboV 
 {s = table {
    VI Infn => "condecender" ;
    VI Ger => "condecendiendo" ;
    VI Part => "condecendido" ;
    VP (Pres Ind Sg P1) => "condeciendo" ;
    VP (Pres Ind Sg P2) => "condeciendes" ;
    VP (Pres Ind Sg P3) => "condeciende" ;
    VP (Pres Ind Pl P1) => "condecendemos" ;
    VP (Pres Ind Pl P2) => "condecendéis" ;
    VP (Pres Ind Pl P3) => "condecienden" ;
    VP (Pres Subj Sg P1) => "condecienda" ;
    VP (Pres Subj Sg P2) => "condeciendas" ;
    VP (Pres Subj Sg P3) => "condecienda" ;
    VP (Pres Subj Pl P1) => "condecendamos" ;
    VP (Pres Subj Pl P2) => "condecendáis" ;
    VP (Pres Subj Pl P3) => "condeciendan" ;
    VP (Impf Ind Sg P1) => "condecendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "condecendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "condecendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "condecendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "condecendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "condecendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"condecendiera" ; "condecendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"condecendieras" ; "condecendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"condecendiera" ; "condecendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"condecendiéramos" ; "condecendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"condecendierais" ; "condecendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"condecendieran" ; "condecendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "condecendí" ;--# notpresent
    VP (Pret Sg P2) => "condecendiste" ;--# notpresent
    VP (Pret Sg P3) => "condecendió" ;--# notpresent
    VP (Pret Pl P1) => "condecendimos" ;--# notpresent
    VP (Pret Pl P2) => "condecendisteis" ;--# notpresent
    VP (Pret Pl P3) => "condecendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "condecenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "condecenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "condecenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "condecenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "condecenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "condecenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "condecendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "condecendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "condecendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "condecendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "condecendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "condecendieren" ;--# notpresent
    VP (Cond Sg P1) => "condecendería" ;--# notpresent
    VP (Cond Sg P2) => "condecenderías" ;--# notpresent
    VP (Cond Sg P3) => "condecendería" ;--# notpresent
    VP (Cond Pl P1) => "condecenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "condecenderíais" ;--# notpresent
    VP (Cond Pl P3) => "condecenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "condeciende" ;
    VP (Imp Sg P3) => "condecienda" ;
    VP (Imp Pl P1) => "condecendamos" ;
    VP (Imp Pl P2) => "condecended" ;
    VP (Imp Pl P3) => "condeciendan" ;
    VP (Pass Sg Masc) => "condecendido" ;
    VP (Pass Sg Fem) => "condecendida" ;
    VP (Pass Pl Masc) => "condecendidos" ;
    VP (Pass Pl Fem) => "condecendidas"
    }
  } ;

lin condescender_V = verboV 
 {s = table {
    VI Infn => "condescender" ;
    VI Ger => "condescendiendo" ;
    VI Part => "condescendido" ;
    VP (Pres Ind Sg P1) => "condesciendo" ;
    VP (Pres Ind Sg P2) => "condesciendes" ;
    VP (Pres Ind Sg P3) => "condesciende" ;
    VP (Pres Ind Pl P1) => "condescendemos" ;
    VP (Pres Ind Pl P2) => "condescendéis" ;
    VP (Pres Ind Pl P3) => "condescienden" ;
    VP (Pres Subj Sg P1) => "condescienda" ;
    VP (Pres Subj Sg P2) => "condesciendas" ;
    VP (Pres Subj Sg P3) => "condescienda" ;
    VP (Pres Subj Pl P1) => "condescendamos" ;
    VP (Pres Subj Pl P2) => "condescendáis" ;
    VP (Pres Subj Pl P3) => "condesciendan" ;
    VP (Impf Ind Sg P1) => "condescendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "condescendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "condescendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "condescendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "condescendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "condescendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"condescendiera" ; "condescendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"condescendieras" ; "condescendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"condescendiera" ; "condescendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"condescendiéramos" ; "condescendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"condescendierais" ; "condescendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"condescendieran" ; "condescendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "condescendí" ;--# notpresent
    VP (Pret Sg P2) => "condescendiste" ;--# notpresent
    VP (Pret Sg P3) => "condescendió" ;--# notpresent
    VP (Pret Pl P1) => "condescendimos" ;--# notpresent
    VP (Pret Pl P2) => "condescendisteis" ;--# notpresent
    VP (Pret Pl P3) => "condescendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "condescenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "condescenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "condescenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "condescenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "condescenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "condescenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "condescendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "condescendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "condescendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "condescendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "condescendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "condescendieren" ;--# notpresent
    VP (Cond Sg P1) => "condescendería" ;--# notpresent
    VP (Cond Sg P2) => "condescenderías" ;--# notpresent
    VP (Cond Sg P3) => "condescendería" ;--# notpresent
    VP (Cond Pl P1) => "condescenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "condescenderíais" ;--# notpresent
    VP (Cond Pl P3) => "condescenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "condesciende" ;
    VP (Imp Sg P3) => "condescienda" ;
    VP (Imp Pl P1) => "condescendamos" ;
    VP (Imp Pl P2) => "condescended" ;
    VP (Imp Pl P3) => "condesciendan" ;
    VP (Pass Sg Masc) => "condescendido" ;
    VP (Pass Sg Fem) => "condescendida" ;
    VP (Pass Pl Masc) => "condescendidos" ;
    VP (Pass Pl Fem) => "condescendidas"
    }
  } ;

lin contender_V = verboV 
 {s = table {
    VI Infn => "contender" ;
    VI Ger => "contendiendo" ;
    VI Part => "contendido" ;
    VP (Pres Ind Sg P1) => "contiendo" ;
    VP (Pres Ind Sg P2) => "contiendes" ;
    VP (Pres Ind Sg P3) => "contiende" ;
    VP (Pres Ind Pl P1) => "contendemos" ;
    VP (Pres Ind Pl P2) => "contendéis" ;
    VP (Pres Ind Pl P3) => "contienden" ;
    VP (Pres Subj Sg P1) => "contienda" ;
    VP (Pres Subj Sg P2) => "contiendas" ;
    VP (Pres Subj Sg P3) => "contienda" ;
    VP (Pres Subj Pl P1) => "contendamos" ;
    VP (Pres Subj Pl P2) => "contendáis" ;
    VP (Pres Subj Pl P3) => "contiendan" ;
    VP (Impf Ind Sg P1) => "contendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contendiera" ; "contendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contendieras" ; "contendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contendiera" ; "contendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contendiéramos" ; "contendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contendierais" ; "contendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contendieran" ; "contendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "contendí" ;--# notpresent
    VP (Pret Sg P2) => "contendiste" ;--# notpresent
    VP (Pret Sg P3) => "contendió" ;--# notpresent
    VP (Pret Pl P1) => "contendimos" ;--# notpresent
    VP (Pret Pl P2) => "contendisteis" ;--# notpresent
    VP (Pret Pl P3) => "contendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "contenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contendieren" ;--# notpresent
    VP (Cond Sg P1) => "contendería" ;--# notpresent
    VP (Cond Sg P2) => "contenderías" ;--# notpresent
    VP (Cond Sg P3) => "contendería" ;--# notpresent
    VP (Cond Pl P1) => "contenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "contenderíais" ;--# notpresent
    VP (Cond Pl P3) => "contenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contiende" ;
    VP (Imp Sg P3) => "contienda" ;
    VP (Imp Pl P1) => "contendamos" ;
    VP (Imp Pl P2) => "contended" ;
    VP (Imp Pl P3) => "contiendan" ;
    VP (Pass Sg Masc) => "contendido" ;
    VP (Pass Sg Fem) => "contendida" ;
    VP (Pass Pl Masc) => "contendidos" ;
    VP (Pass Pl Fem) => "contendidas"
    }
  } ;

lin defender_V = verboV 
 {s = table {
    VI Infn => "defender" ;
    VI Ger => "defendiendo" ;
    VI Part => "defendido" ;
    VP (Pres Ind Sg P1) => "defiendo" ;
    VP (Pres Ind Sg P2) => "defiendes" ;
    VP (Pres Ind Sg P3) => "defiende" ;
    VP (Pres Ind Pl P1) => "defendemos" ;
    VP (Pres Ind Pl P2) => "defendéis" ;
    VP (Pres Ind Pl P3) => "defienden" ;
    VP (Pres Subj Sg P1) => "defienda" ;
    VP (Pres Subj Sg P2) => "defiendas" ;
    VP (Pres Subj Sg P3) => "defienda" ;
    VP (Pres Subj Pl P1) => "defendamos" ;
    VP (Pres Subj Pl P2) => "defendáis" ;
    VP (Pres Subj Pl P3) => "defiendan" ;
    VP (Impf Ind Sg P1) => "defendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "defendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "defendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "defendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "defendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "defendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"defendiera" ; "defendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"defendieras" ; "defendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"defendiera" ; "defendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"defendiéramos" ; "defendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"defendierais" ; "defendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"defendieran" ; "defendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "defendí" ;--# notpresent
    VP (Pret Sg P2) => "defendiste" ;--# notpresent
    VP (Pret Sg P3) => "defendió" ;--# notpresent
    VP (Pret Pl P1) => "defendimos" ;--# notpresent
    VP (Pret Pl P2) => "defendisteis" ;--# notpresent
    VP (Pret Pl P3) => "defendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "defenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "defenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "defenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "defenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "defenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "defenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "defendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "defendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "defendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "defendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "defendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "defendieren" ;--# notpresent
    VP (Cond Sg P1) => "defendería" ;--# notpresent
    VP (Cond Sg P2) => "defenderías" ;--# notpresent
    VP (Cond Sg P3) => "defendería" ;--# notpresent
    VP (Cond Pl P1) => "defenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "defenderíais" ;--# notpresent
    VP (Cond Pl P3) => "defenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "defiende" ;
    VP (Imp Sg P3) => "defienda" ;
    VP (Imp Pl P1) => "defendamos" ;
    VP (Imp Pl P2) => "defended" ;
    VP (Imp Pl P3) => "defiendan" ;
    VP (Pass Sg Masc) => "defendido" ;
    VP (Pass Sg Fem) => "defendida" ;
    VP (Pass Pl Masc) => "defendidos" ;
    VP (Pass Pl Fem) => "defendidas"
    }
  } ;

lin desatender_V = verboV 
 {s = table {
    VI Infn => "desatender" ;
    VI Ger => "desatendiendo" ;
    VI Part => "desatendido" ;
    VP (Pres Ind Sg P1) => "desatiendo" ;
    VP (Pres Ind Sg P2) => "desatiendes" ;
    VP (Pres Ind Sg P3) => "desatiende" ;
    VP (Pres Ind Pl P1) => "desatendemos" ;
    VP (Pres Ind Pl P2) => "desatendéis" ;
    VP (Pres Ind Pl P3) => "desatienden" ;
    VP (Pres Subj Sg P1) => "desatienda" ;
    VP (Pres Subj Sg P2) => "desatiendas" ;
    VP (Pres Subj Sg P3) => "desatienda" ;
    VP (Pres Subj Pl P1) => "desatendamos" ;
    VP (Pres Subj Pl P2) => "desatendáis" ;
    VP (Pres Subj Pl P3) => "desatiendan" ;
    VP (Impf Ind Sg P1) => "desatendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desatendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desatendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desatendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desatendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desatendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desatendiera" ; "desatendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desatendieras" ; "desatendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desatendiera" ; "desatendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desatendiéramos" ; "desatendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desatendierais" ; "desatendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desatendieran" ; "desatendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desatendí" ;--# notpresent
    VP (Pret Sg P2) => "desatendiste" ;--# notpresent
    VP (Pret Sg P3) => "desatendió" ;--# notpresent
    VP (Pret Pl P1) => "desatendimos" ;--# notpresent
    VP (Pret Pl P2) => "desatendisteis" ;--# notpresent
    VP (Pret Pl P3) => "desatendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desatenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "desatenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desatenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desatenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desatenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desatenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desatendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desatendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desatendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desatendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desatendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desatendieren" ;--# notpresent
    VP (Cond Sg P1) => "desatendería" ;--# notpresent
    VP (Cond Sg P2) => "desatenderías" ;--# notpresent
    VP (Cond Sg P3) => "desatendería" ;--# notpresent
    VP (Cond Pl P1) => "desatenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "desatenderíais" ;--# notpresent
    VP (Cond Pl P3) => "desatenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desatiende" ;
    VP (Imp Sg P3) => "desatienda" ;
    VP (Imp Pl P1) => "desatendamos" ;
    VP (Imp Pl P2) => "desatended" ;
    VP (Imp Pl P3) => "desatiendan" ;
    VP (Pass Sg Masc) => "desatendido" ;
    VP (Pass Sg Fem) => "desatendida" ;
    VP (Pass Pl Masc) => "desatendidos" ;
    VP (Pass Pl Fem) => "desatendidas"
    }
  } ;

lin descender_V = verboV 
 {s = table {
    VI Infn => "descender" ;
    VI Ger => "descendiendo" ;
    VI Part => "descendido" ;
    VP (Pres Ind Sg P1) => "desciendo" ;
    VP (Pres Ind Sg P2) => "desciendes" ;
    VP (Pres Ind Sg P3) => "desciende" ;
    VP (Pres Ind Pl P1) => "descendemos" ;
    VP (Pres Ind Pl P2) => "descendéis" ;
    VP (Pres Ind Pl P3) => "descienden" ;
    VP (Pres Subj Sg P1) => "descienda" ;
    VP (Pres Subj Sg P2) => "desciendas" ;
    VP (Pres Subj Sg P3) => "descienda" ;
    VP (Pres Subj Pl P1) => "descendamos" ;
    VP (Pres Subj Pl P2) => "descendáis" ;
    VP (Pres Subj Pl P3) => "desciendan" ;
    VP (Impf Ind Sg P1) => "descendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descendiera" ; "descendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descendieras" ; "descendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descendiera" ; "descendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descendiéramos" ; "descendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descendierais" ; "descendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descendieran" ; "descendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "descendí" ;--# notpresent
    VP (Pret Sg P2) => "descendiste" ;--# notpresent
    VP (Pret Sg P3) => "descendió" ;--# notpresent
    VP (Pret Pl P1) => "descendimos" ;--# notpresent
    VP (Pret Pl P2) => "descendisteis" ;--# notpresent
    VP (Pret Pl P3) => "descendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "descenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descendieren" ;--# notpresent
    VP (Cond Sg P1) => "descendería" ;--# notpresent
    VP (Cond Sg P2) => "descenderías" ;--# notpresent
    VP (Cond Sg P3) => "descendería" ;--# notpresent
    VP (Cond Pl P1) => "descenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "descenderíais" ;--# notpresent
    VP (Cond Pl P3) => "descenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desciende" ;
    VP (Imp Sg P3) => "descienda" ;
    VP (Imp Pl P1) => "descendamos" ;
    VP (Imp Pl P2) => "descended" ;
    VP (Imp Pl P3) => "desciendan" ;
    VP (Pass Sg Masc) => "descendido" ;
    VP (Pass Sg Fem) => "descendida" ;
    VP (Pass Pl Masc) => "descendidos" ;
    VP (Pass Pl Fem) => "descendidas"
    }
  } ;

lin distender_V = verboV 
 {s = table {
    VI Infn => "distender" ;
    VI Ger => "distendiendo" ;
    VI Part => "distendido" ;
    VP (Pres Ind Sg P1) => "distiendo" ;
    VP (Pres Ind Sg P2) => "distiendes" ;
    VP (Pres Ind Sg P3) => "distiende" ;
    VP (Pres Ind Pl P1) => "distendemos" ;
    VP (Pres Ind Pl P2) => "distendéis" ;
    VP (Pres Ind Pl P3) => "distienden" ;
    VP (Pres Subj Sg P1) => "distienda" ;
    VP (Pres Subj Sg P2) => "distiendas" ;
    VP (Pres Subj Sg P3) => "distienda" ;
    VP (Pres Subj Pl P1) => "distendamos" ;
    VP (Pres Subj Pl P2) => "distendáis" ;
    VP (Pres Subj Pl P3) => "distiendan" ;
    VP (Impf Ind Sg P1) => "distendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "distendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "distendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "distendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "distendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "distendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"distendiera" ; "distendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"distendieras" ; "distendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"distendiera" ; "distendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"distendiéramos" ; "distendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"distendierais" ; "distendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"distendieran" ; "distendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "distendí" ;--# notpresent
    VP (Pret Sg P2) => "distendiste" ;--# notpresent
    VP (Pret Sg P3) => "distendió" ;--# notpresent
    VP (Pret Pl P1) => "distendimos" ;--# notpresent
    VP (Pret Pl P2) => "distendisteis" ;--# notpresent
    VP (Pret Pl P3) => "distendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "distenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "distenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "distenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "distenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "distenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "distenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "distendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "distendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "distendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "distendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "distendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "distendieren" ;--# notpresent
    VP (Cond Sg P1) => "distendería" ;--# notpresent
    VP (Cond Sg P2) => "distenderías" ;--# notpresent
    VP (Cond Sg P3) => "distendería" ;--# notpresent
    VP (Cond Pl P1) => "distenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "distenderíais" ;--# notpresent
    VP (Cond Pl P3) => "distenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "distiende" ;
    VP (Imp Sg P3) => "distienda" ;
    VP (Imp Pl P1) => "distendamos" ;
    VP (Imp Pl P2) => "distended" ;
    VP (Imp Pl P3) => "distiendan" ;
    VP (Pass Sg Masc) => "distendido" ;
    VP (Pass Sg Fem) => "distendida" ;
    VP (Pass Pl Masc) => "distendidos" ;
    VP (Pass Pl Fem) => "distendidas"
    }
  } ;

lin encender_V = verboV 
 {s = table {
    VI Infn => "encender" ;
    VI Ger => "encendiendo" ;
    VI Part => "encendido" ;
    VP (Pres Ind Sg P1) => "enciendo" ;
    VP (Pres Ind Sg P2) => "enciendes" ;
    VP (Pres Ind Sg P3) => "enciende" ;
    VP (Pres Ind Pl P1) => "encendemos" ;
    VP (Pres Ind Pl P2) => "encendéis" ;
    VP (Pres Ind Pl P3) => "encienden" ;
    VP (Pres Subj Sg P1) => "encienda" ;
    VP (Pres Subj Sg P2) => "enciendas" ;
    VP (Pres Subj Sg P3) => "encienda" ;
    VP (Pres Subj Pl P1) => "encendamos" ;
    VP (Pres Subj Pl P2) => "encendáis" ;
    VP (Pres Subj Pl P3) => "enciendan" ;
    VP (Impf Ind Sg P1) => "encendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encendiera" ; "encendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encendieras" ; "encendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encendiera" ; "encendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encendiéramos" ; "encendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encendierais" ; "encendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encendieran" ; "encendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "encendí" ;--# notpresent
    VP (Pret Sg P2) => "encendiste" ;--# notpresent
    VP (Pret Sg P3) => "encendió" ;--# notpresent
    VP (Pret Pl P1) => "encendimos" ;--# notpresent
    VP (Pret Pl P2) => "encendisteis" ;--# notpresent
    VP (Pret Pl P3) => "encendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "encenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encendieren" ;--# notpresent
    VP (Cond Sg P1) => "encendería" ;--# notpresent
    VP (Cond Sg P2) => "encenderías" ;--# notpresent
    VP (Cond Sg P3) => "encendería" ;--# notpresent
    VP (Cond Pl P1) => "encenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "encenderíais" ;--# notpresent
    VP (Cond Pl P3) => "encenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enciende" ;
    VP (Imp Sg P3) => "encienda" ;
    VP (Imp Pl P1) => "encendamos" ;
    VP (Imp Pl P2) => "encended" ;
    VP (Imp Pl P3) => "enciendan" ;
    VP (Pass Sg Masc) => "encendido" ;
    VP (Pass Sg Fem) => "encendida" ;
    VP (Pass Pl Masc) => "encendidos" ;
    VP (Pass Pl Fem) => "encendidas"
    }
  } ;

lin entender_V = verboV 
 {s = table {
    VI Infn => "entender" ;
    VI Ger => "entendiendo" ;
    VI Part => "entendido" ;
    VP (Pres Ind Sg P1) => "entiendo" ;
    VP (Pres Ind Sg P2) => "entiendes" ;
    VP (Pres Ind Sg P3) => "entiende" ;
    VP (Pres Ind Pl P1) => "entendemos" ;
    VP (Pres Ind Pl P2) => "entendéis" ;
    VP (Pres Ind Pl P3) => "entienden" ;
    VP (Pres Subj Sg P1) => "entienda" ;
    VP (Pres Subj Sg P2) => "entiendas" ;
    VP (Pres Subj Sg P3) => "entienda" ;
    VP (Pres Subj Pl P1) => "entendamos" ;
    VP (Pres Subj Pl P2) => "entendáis" ;
    VP (Pres Subj Pl P3) => "entiendan" ;
    VP (Impf Ind Sg P1) => "entendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entendiera" ; "entendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entendieras" ; "entendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entendiera" ; "entendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entendiéramos" ; "entendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entendierais" ; "entendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entendieran" ; "entendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "entendí" ;--# notpresent
    VP (Pret Sg P2) => "entendiste" ;--# notpresent
    VP (Pret Sg P3) => "entendió" ;--# notpresent
    VP (Pret Pl P1) => "entendimos" ;--# notpresent
    VP (Pret Pl P2) => "entendisteis" ;--# notpresent
    VP (Pret Pl P3) => "entendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "entenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entendieren" ;--# notpresent
    VP (Cond Sg P1) => "entendería" ;--# notpresent
    VP (Cond Sg P2) => "entenderías" ;--# notpresent
    VP (Cond Sg P3) => "entendería" ;--# notpresent
    VP (Cond Pl P1) => "entenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "entenderíais" ;--# notpresent
    VP (Cond Pl P3) => "entenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entiende" ;
    VP (Imp Sg P3) => "entienda" ;
    VP (Imp Pl P1) => "entendamos" ;
    VP (Imp Pl P2) => "entended" ;
    VP (Imp Pl P3) => "entiendan" ;
    VP (Pass Sg Masc) => "entendido" ;
    VP (Pass Sg Fem) => "entendida" ;
    VP (Pass Pl Masc) => "entendidos" ;
    VP (Pass Pl Fem) => "entendidas"
    }
  } ;

lin extender_V = verboV 
 {s = table {
    VI Infn => "extender" ;
    VI Ger => "extendiendo" ;
    VI Part => "extendido" ;
    VP (Pres Ind Sg P1) => "extiendo" ;
    VP (Pres Ind Sg P2) => "extiendes" ;
    VP (Pres Ind Sg P3) => "extiende" ;
    VP (Pres Ind Pl P1) => "extendemos" ;
    VP (Pres Ind Pl P2) => "extendéis" ;
    VP (Pres Ind Pl P3) => "extienden" ;
    VP (Pres Subj Sg P1) => "extienda" ;
    VP (Pres Subj Sg P2) => "extiendas" ;
    VP (Pres Subj Sg P3) => "extienda" ;
    VP (Pres Subj Pl P1) => "extendamos" ;
    VP (Pres Subj Pl P2) => "extendáis" ;
    VP (Pres Subj Pl P3) => "extiendan" ;
    VP (Impf Ind Sg P1) => "extendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "extendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "extendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "extendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "extendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "extendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"extendiera" ; "extendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"extendieras" ; "extendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"extendiera" ; "extendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"extendiéramos" ; "extendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"extendierais" ; "extendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"extendieran" ; "extendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "extendí" ;--# notpresent
    VP (Pret Sg P2) => "extendiste" ;--# notpresent
    VP (Pret Sg P3) => "extendió" ;--# notpresent
    VP (Pret Pl P1) => "extendimos" ;--# notpresent
    VP (Pret Pl P2) => "extendisteis" ;--# notpresent
    VP (Pret Pl P3) => "extendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "extenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "extenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "extenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "extenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "extenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "extenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "extendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "extendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "extendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "extendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "extendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "extendieren" ;--# notpresent
    VP (Cond Sg P1) => "extendería" ;--# notpresent
    VP (Cond Sg P2) => "extenderías" ;--# notpresent
    VP (Cond Sg P3) => "extendería" ;--# notpresent
    VP (Cond Pl P1) => "extenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "extenderíais" ;--# notpresent
    VP (Cond Pl P3) => "extenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "extiende" ;
    VP (Imp Sg P3) => "extienda" ;
    VP (Imp Pl P1) => "extendamos" ;
    VP (Imp Pl P2) => "extended" ;
    VP (Imp Pl P3) => "extiendan" ;
    VP (Pass Sg Masc) => "extendido" ;
    VP (Pass Sg Fem) => "extendida" ;
    VP (Pass Pl Masc) => "extendidos" ;
    VP (Pass Pl Fem) => "extendidas"
    }
  } ;

lin heder_V = verboV 
 {s = table {
    VI Infn => "heder" ;
    VI Ger => "hediendo" ;
    VI Part => "hedido" ;
    VP (Pres Ind Sg P1) => "hiedo" ;
    VP (Pres Ind Sg P2) => "hiedes" ;
    VP (Pres Ind Sg P3) => "hiede" ;
    VP (Pres Ind Pl P1) => "hedemos" ;
    VP (Pres Ind Pl P2) => "hedéis" ;
    VP (Pres Ind Pl P3) => "hieden" ;
    VP (Pres Subj Sg P1) => "hieda" ;
    VP (Pres Subj Sg P2) => "hiedas" ;
    VP (Pres Subj Sg P3) => "hieda" ;
    VP (Pres Subj Pl P1) => "hedamos" ;
    VP (Pres Subj Pl P2) => "hedáis" ;
    VP (Pres Subj Pl P3) => "hiedan" ;
    VP (Impf Ind Sg P1) => "hedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "hedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "hedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hediera" ; "hediese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hedieras" ; "hedieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hediera" ; "hediese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hediéramos" ; "hediésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hedierais" ; "hedieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hedieran" ; "hediesen"} ;--# notpresent
    VP (Pret Sg P1) => "hedí" ;--# notpresent
    VP (Pret Sg P2) => "hediste" ;--# notpresent
    VP (Pret Sg P3) => "hedió" ;--# notpresent
    VP (Pret Pl P1) => "hedimos" ;--# notpresent
    VP (Pret Pl P2) => "hedisteis" ;--# notpresent
    VP (Pret Pl P3) => "hedieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "hederé" ;--# notpresent
    VP (Fut Ind Sg P2) => "hederás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hederá" ;--# notpresent
    VP (Fut Ind Pl P1) => "hederemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "hederéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "hederán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hediere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hedieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hediere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hediéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hediereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hedieren" ;--# notpresent
    VP (Cond Sg P1) => "hedería" ;--# notpresent
    VP (Cond Sg P2) => "hederías" ;--# notpresent
    VP (Cond Sg P3) => "hedería" ;--# notpresent
    VP (Cond Pl P1) => "hederíamos" ;--# notpresent
    VP (Cond Pl P2) => "hederíais" ;--# notpresent
    VP (Cond Pl P3) => "hederían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hiede" ;
    VP (Imp Sg P3) => "hieda" ;
    VP (Imp Pl P1) => "hedamos" ;
    VP (Imp Pl P2) => "heded" ;
    VP (Imp Pl P3) => "hiedan" ;
    VP (Pass Sg Masc) => "hedido" ;
    VP (Pass Sg Fem) => "hedida" ;
    VP (Pass Pl Masc) => "hedidos" ;
    VP (Pass Pl Fem) => "hedidas"
    }
  } ;

lin hender_V = verboV 
 {s = table {
    VI Infn => "hender" ;
    VI Ger => "hendiendo" ;
    VI Part => "hendido" ;
    VP (Pres Ind Sg P1) => "hiendo" ;
    VP (Pres Ind Sg P2) => "hiendes" ;
    VP (Pres Ind Sg P3) => "hiende" ;
    VP (Pres Ind Pl P1) => "hendemos" ;
    VP (Pres Ind Pl P2) => "hendéis" ;
    VP (Pres Ind Pl P3) => "hienden" ;
    VP (Pres Subj Sg P1) => "hienda" ;
    VP (Pres Subj Sg P2) => "hiendas" ;
    VP (Pres Subj Sg P3) => "hienda" ;
    VP (Pres Subj Pl P1) => "hendamos" ;
    VP (Pres Subj Pl P2) => "hendáis" ;
    VP (Pres Subj Pl P3) => "hiendan" ;
    VP (Impf Ind Sg P1) => "hendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "hendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "hendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hendiera" ; "hendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hendieras" ; "hendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hendiera" ; "hendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hendiéramos" ; "hendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hendierais" ; "hendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hendieran" ; "hendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "hendí" ;--# notpresent
    VP (Pret Sg P2) => "hendiste" ;--# notpresent
    VP (Pret Sg P3) => "hendió" ;--# notpresent
    VP (Pret Pl P1) => "hendimos" ;--# notpresent
    VP (Pret Pl P2) => "hendisteis" ;--# notpresent
    VP (Pret Pl P3) => "hendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "henderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "henderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "henderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "henderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "henderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "henderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hendieren" ;--# notpresent
    VP (Cond Sg P1) => "hendería" ;--# notpresent
    VP (Cond Sg P2) => "henderías" ;--# notpresent
    VP (Cond Sg P3) => "hendería" ;--# notpresent
    VP (Cond Pl P1) => "henderíamos" ;--# notpresent
    VP (Cond Pl P2) => "henderíais" ;--# notpresent
    VP (Cond Pl P3) => "henderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hiende" ;
    VP (Imp Sg P3) => "hienda" ;
    VP (Imp Pl P1) => "hendamos" ;
    VP (Imp Pl P2) => "hended" ;
    VP (Imp Pl P3) => "hiendan" ;
    VP (Pass Sg Masc) => "hendido" ;
    VP (Pass Sg Fem) => "hendida" ;
    VP (Pass Pl Masc) => "hendidos" ;
    VP (Pass Pl Fem) => "hendidas"
    }
  } ;

lin malentender_V = verboV 
 {s = table {
    VI Infn => "malentender" ;
    VI Ger => "malentendiendo" ;
    VI Part => "malentendido" ;
    VP (Pres Ind Sg P1) => "malentiendo" ;
    VP (Pres Ind Sg P2) => "malentiendes" ;
    VP (Pres Ind Sg P3) => "malentiende" ;
    VP (Pres Ind Pl P1) => "malentendemos" ;
    VP (Pres Ind Pl P2) => "malentendéis" ;
    VP (Pres Ind Pl P3) => "malentienden" ;
    VP (Pres Subj Sg P1) => "malentienda" ;
    VP (Pres Subj Sg P2) => "malentiendas" ;
    VP (Pres Subj Sg P3) => "malentienda" ;
    VP (Pres Subj Pl P1) => "malentendamos" ;
    VP (Pres Subj Pl P2) => "malentendáis" ;
    VP (Pres Subj Pl P3) => "malentiendan" ;
    VP (Impf Ind Sg P1) => "malentendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "malentendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "malentendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "malentendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "malentendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "malentendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"malentendiera" ; "malentendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"malentendieras" ; "malentendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"malentendiera" ; "malentendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"malentendiéramos" ; "malentendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"malentendierais" ; "malentendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"malentendieran" ; "malentendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "malentendí" ;--# notpresent
    VP (Pret Sg P2) => "malentendiste" ;--# notpresent
    VP (Pret Sg P3) => "malentendió" ;--# notpresent
    VP (Pret Pl P1) => "malentendimos" ;--# notpresent
    VP (Pret Pl P2) => "malentendisteis" ;--# notpresent
    VP (Pret Pl P3) => "malentendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "malentenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "malentenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "malentenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "malentenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "malentenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "malentenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "malentendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "malentendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "malentendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "malentendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "malentendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "malentendieren" ;--# notpresent
    VP (Cond Sg P1) => "malentendería" ;--# notpresent
    VP (Cond Sg P2) => "malentenderías" ;--# notpresent
    VP (Cond Sg P3) => "malentendería" ;--# notpresent
    VP (Cond Pl P1) => "malentenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "malentenderíais" ;--# notpresent
    VP (Cond Pl P3) => "malentenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "malentiende" ;
    VP (Imp Sg P3) => "malentienda" ;
    VP (Imp Pl P1) => "malentendamos" ;
    VP (Imp Pl P2) => "malentended" ;
    VP (Imp Pl P3) => "malentiendan" ;
    VP (Pass Sg Masc) => "malentendido" ;
    VP (Pass Sg Fem) => "malentendida" ;
    VP (Pass Pl Masc) => "malentendidos" ;
    VP (Pass Pl Fem) => "malentendidas"
    }
  } ;

lin perder_V = verboV 
 {s = table {
    VI Infn => "perder" ;
    VI Ger => "perdiendo" ;
    VI Part => "perdido" ;
    VP (Pres Ind Sg P1) => "pierdo" ;
    VP (Pres Ind Sg P2) => "pierdes" ;
    VP (Pres Ind Sg P3) => "pierde" ;
    VP (Pres Ind Pl P1) => "perdemos" ;
    VP (Pres Ind Pl P2) => "perdéis" ;
    VP (Pres Ind Pl P3) => "pierden" ;
    VP (Pres Subj Sg P1) => "pierda" ;
    VP (Pres Subj Sg P2) => "pierdas" ;
    VP (Pres Subj Sg P3) => "pierda" ;
    VP (Pres Subj Pl P1) => "perdamos" ;
    VP (Pres Subj Pl P2) => "perdáis" ;
    VP (Pres Subj Pl P3) => "pierdan" ;
    VP (Impf Ind Sg P1) => "perdía" ;--# notpresent
    VP (Impf Ind Sg P2) => "perdías" ;--# notpresent
    VP (Impf Ind Sg P3) => "perdía" ;--# notpresent
    VP (Impf Ind Pl P1) => "perdíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "perdíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "perdían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"perdiera" ; "perdiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"perdieras" ; "perdieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"perdiera" ; "perdiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"perdiéramos" ; "perdiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"perdierais" ; "perdieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"perdieran" ; "perdiesen"} ;--# notpresent
    VP (Pret Sg P1) => "perdí" ;--# notpresent
    VP (Pret Sg P2) => "perdiste" ;--# notpresent
    VP (Pret Sg P3) => "perdió" ;--# notpresent
    VP (Pret Pl P1) => "perdimos" ;--# notpresent
    VP (Pret Pl P2) => "perdisteis" ;--# notpresent
    VP (Pret Pl P3) => "perdieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "perderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "perderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "perderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "perderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "perderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "perderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "perdiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "perdieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "perdiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "perdiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "perdiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "perdieren" ;--# notpresent
    VP (Cond Sg P1) => "perdería" ;--# notpresent
    VP (Cond Sg P2) => "perderías" ;--# notpresent
    VP (Cond Sg P3) => "perdería" ;--# notpresent
    VP (Cond Pl P1) => "perderíamos" ;--# notpresent
    VP (Cond Pl P2) => "perderíais" ;--# notpresent
    VP (Cond Pl P3) => "perderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pierde" ;
    VP (Imp Sg P3) => "pierda" ;
    VP (Imp Pl P1) => "perdamos" ;
    VP (Imp Pl P2) => "perded" ;
    VP (Imp Pl P3) => "pierdan" ;
    VP (Pass Sg Masc) => "perdido" ;
    VP (Pass Sg Fem) => "perdida" ;
    VP (Pass Pl Masc) => "perdidos" ;
    VP (Pass Pl Fem) => "perdidas"
    }
  } ;

lin reverter_V = verboV 
 {s = table {
    VI Infn => "reverter" ;
    VI Ger => "revertiendo" ;
    VI Part => "revertido" ;
    VP (Pres Ind Sg P1) => "revierto" ;
    VP (Pres Ind Sg P2) => "reviertes" ;
    VP (Pres Ind Sg P3) => "revierte" ;
    VP (Pres Ind Pl P1) => "revertemos" ;
    VP (Pres Ind Pl P2) => "revertéis" ;
    VP (Pres Ind Pl P3) => "revierten" ;
    VP (Pres Subj Sg P1) => "revierta" ;
    VP (Pres Subj Sg P2) => "reviertas" ;
    VP (Pres Subj Sg P3) => "revierta" ;
    VP (Pres Subj Pl P1) => "revertamos" ;
    VP (Pres Subj Pl P2) => "revertáis" ;
    VP (Pres Subj Pl P3) => "reviertan" ;
    VP (Impf Ind Sg P1) => "revertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "revertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "revertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "revertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revertiera" ; "revertiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revertieras" ; "revertieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revertiera" ; "revertiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revertiéramos" ; "revertiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revertierais" ; "revertieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revertieran" ; "revertiesen"} ;--# notpresent
    VP (Pret Sg P1) => "revertí" ;--# notpresent
    VP (Pret Sg P2) => "revertiste" ;--# notpresent
    VP (Pret Sg P3) => "revertió" ;--# notpresent
    VP (Pret Pl P1) => "revertimos" ;--# notpresent
    VP (Pret Pl P2) => "revertisteis" ;--# notpresent
    VP (Pret Pl P3) => "revertieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reverteré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reverterás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reverterá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reverteremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reverteréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reverterán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revertiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revertieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "revertiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "revertiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revertiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revertieren" ;--# notpresent
    VP (Cond Sg P1) => "revertería" ;--# notpresent
    VP (Cond Sg P2) => "reverterías" ;--# notpresent
    VP (Cond Sg P3) => "revertería" ;--# notpresent
    VP (Cond Pl P1) => "reverteríamos" ;--# notpresent
    VP (Cond Pl P2) => "reverteríais" ;--# notpresent
    VP (Cond Pl P3) => "reverterían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revierte" ;
    VP (Imp Sg P3) => "revierta" ;
    VP (Imp Pl P1) => "revertamos" ;
    VP (Imp Pl P2) => "reverted" ;
    VP (Imp Pl P3) => "reviertan" ;
    VP (Pass Sg Masc) => "revertido" ;
    VP (Pass Sg Fem) => "revertida" ;
    VP (Pass Pl Masc) => "revertidos" ;
    VP (Pass Pl Fem) => "revertidas"
    }
  } ;

lin sobreentender_V = verboV 
 {s = table {
    VI Infn => "sobreentender" ;
    VI Ger => "sobreentendiendo" ;
    VI Part => "sobreentendido" ;
    VP (Pres Ind Sg P1) => "sobreentiendo" ;
    VP (Pres Ind Sg P2) => "sobreentiendes" ;
    VP (Pres Ind Sg P3) => "sobreentiende" ;
    VP (Pres Ind Pl P1) => "sobreentendemos" ;
    VP (Pres Ind Pl P2) => "sobreentendéis" ;
    VP (Pres Ind Pl P3) => "sobreentienden" ;
    VP (Pres Subj Sg P1) => "sobreentienda" ;
    VP (Pres Subj Sg P2) => "sobreentiendas" ;
    VP (Pres Subj Sg P3) => "sobreentienda" ;
    VP (Pres Subj Pl P1) => "sobreentendamos" ;
    VP (Pres Subj Pl P2) => "sobreentendáis" ;
    VP (Pres Subj Pl P3) => "sobreentiendan" ;
    VP (Impf Ind Sg P1) => "sobreentendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobreentendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobreentendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobreentendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobreentendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobreentendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobreentendiera" ; "sobreentendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobreentendieras" ; "sobreentendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobreentendiera" ; "sobreentendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobreentendiéramos" ; "sobreentendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobreentendierais" ; "sobreentendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobreentendieran" ; "sobreentendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobreentendí" ;--# notpresent
    VP (Pret Sg P2) => "sobreentendiste" ;--# notpresent
    VP (Pret Sg P3) => "sobreentendió" ;--# notpresent
    VP (Pret Pl P1) => "sobreentendimos" ;--# notpresent
    VP (Pret Pl P2) => "sobreentendisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobreentendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobreentenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobreentenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobreentenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobreentenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobreentenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobreentenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobreentendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobreentendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobreentendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobreentendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobreentendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobreentendieren" ;--# notpresent
    VP (Cond Sg P1) => "sobreentendería" ;--# notpresent
    VP (Cond Sg P2) => "sobreentenderías" ;--# notpresent
    VP (Cond Sg P3) => "sobreentendería" ;--# notpresent
    VP (Cond Pl P1) => "sobreentenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "sobreentenderíais" ;--# notpresent
    VP (Cond Pl P3) => "sobreentenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobreentiende" ;
    VP (Imp Sg P3) => "sobreentienda" ;
    VP (Imp Pl P1) => "sobreentendamos" ;
    VP (Imp Pl P2) => "sobreentended" ;
    VP (Imp Pl P3) => "sobreentiendan" ;
    VP (Pass Sg Masc) => "sobreentendido" ;
    VP (Pass Sg Fem) => "sobreentendida" ;
    VP (Pass Pl Masc) => "sobreentendidos" ;
    VP (Pass Pl Fem) => "sobreentendidas"
    }
  } ;

lin sobrentender_V = verboV 
 {s = table {
    VI Infn => "sobrentender" ;
    VI Ger => "sobrentendiendo" ;
    VI Part => "sobrentendido" ;
    VP (Pres Ind Sg P1) => "sobrentiendo" ;
    VP (Pres Ind Sg P2) => "sobrentiendes" ;
    VP (Pres Ind Sg P3) => "sobrentiende" ;
    VP (Pres Ind Pl P1) => "sobrentendemos" ;
    VP (Pres Ind Pl P2) => "sobrentendéis" ;
    VP (Pres Ind Pl P3) => "sobrentienden" ;
    VP (Pres Subj Sg P1) => "sobrentienda" ;
    VP (Pres Subj Sg P2) => "sobrentiendas" ;
    VP (Pres Subj Sg P3) => "sobrentienda" ;
    VP (Pres Subj Pl P1) => "sobrentendamos" ;
    VP (Pres Subj Pl P2) => "sobrentendáis" ;
    VP (Pres Subj Pl P3) => "sobrentiendan" ;
    VP (Impf Ind Sg P1) => "sobrentendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrentendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrentendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrentendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrentendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrentendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrentendiera" ; "sobrentendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrentendieras" ; "sobrentendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrentendiera" ; "sobrentendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrentendiéramos" ; "sobrentendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrentendierais" ; "sobrentendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrentendieran" ; "sobrentendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrentendí" ;--# notpresent
    VP (Pret Sg P2) => "sobrentendiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrentendió" ;--# notpresent
    VP (Pret Pl P1) => "sobrentendimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrentendisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrentendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrentenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrentenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrentenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrentenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrentenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrentenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrentendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrentendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrentendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrentendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrentendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrentendieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrentendería" ;--# notpresent
    VP (Cond Sg P2) => "sobrentenderías" ;--# notpresent
    VP (Cond Sg P3) => "sobrentendería" ;--# notpresent
    VP (Cond Pl P1) => "sobrentenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrentenderíais" ;--# notpresent
    VP (Cond Pl P3) => "sobrentenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrentiende" ;
    VP (Imp Sg P3) => "sobrentienda" ;
    VP (Imp Pl P1) => "sobrentendamos" ;
    VP (Imp Pl P2) => "sobrentended" ;
    VP (Imp Pl P3) => "sobrentiendan" ;
    VP (Pass Sg Masc) => "sobrentendido" ;
    VP (Pass Sg Fem) => "sobrentendida" ;
    VP (Pass Pl Masc) => "sobrentendidos" ;
    VP (Pass Pl Fem) => "sobrentendidas"
    }
  } ;

lin subentender_V = verboV 
 {s = table {
    VI Infn => "subentender" ;
    VI Ger => "subentendiendo" ;
    VI Part => "subentendido" ;
    VP (Pres Ind Sg P1) => "subentiendo" ;
    VP (Pres Ind Sg P2) => "subentiendes" ;
    VP (Pres Ind Sg P3) => "subentiende" ;
    VP (Pres Ind Pl P1) => "subentendemos" ;
    VP (Pres Ind Pl P2) => "subentendéis" ;
    VP (Pres Ind Pl P3) => "subentienden" ;
    VP (Pres Subj Sg P1) => "subentienda" ;
    VP (Pres Subj Sg P2) => "subentiendas" ;
    VP (Pres Subj Sg P3) => "subentienda" ;
    VP (Pres Subj Pl P1) => "subentendamos" ;
    VP (Pres Subj Pl P2) => "subentendáis" ;
    VP (Pres Subj Pl P3) => "subentiendan" ;
    VP (Impf Ind Sg P1) => "subentendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subentendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subentendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subentendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subentendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subentendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subentendiera" ; "subentendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subentendieras" ; "subentendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subentendiera" ; "subentendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subentendiéramos" ; "subentendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subentendierais" ; "subentendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subentendieran" ; "subentendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subentendí" ;--# notpresent
    VP (Pret Sg P2) => "subentendiste" ;--# notpresent
    VP (Pret Sg P3) => "subentendió" ;--# notpresent
    VP (Pret Pl P1) => "subentendimos" ;--# notpresent
    VP (Pret Pl P2) => "subentendisteis" ;--# notpresent
    VP (Pret Pl P3) => "subentendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subentenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "subentenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subentenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subentenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subentenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subentenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subentendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subentendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subentendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subentendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subentendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subentendieren" ;--# notpresent
    VP (Cond Sg P1) => "subentendería" ;--# notpresent
    VP (Cond Sg P2) => "subentenderías" ;--# notpresent
    VP (Cond Sg P3) => "subentendería" ;--# notpresent
    VP (Cond Pl P1) => "subentenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "subentenderíais" ;--# notpresent
    VP (Cond Pl P3) => "subentenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subentiende" ;
    VP (Imp Sg P3) => "subentienda" ;
    VP (Imp Pl P1) => "subentendamos" ;
    VP (Imp Pl P2) => "subentended" ;
    VP (Imp Pl P3) => "subentiendan" ;
    VP (Pass Sg Masc) => "subentendido" ;
    VP (Pass Sg Fem) => "subentendida" ;
    VP (Pass Pl Masc) => "subentendidos" ;
    VP (Pass Pl Fem) => "subentendidas"
    }
  } ;

lin subtender_V = verboV 
 {s = table {
    VI Infn => "subtender" ;
    VI Ger => "subtendiendo" ;
    VI Part => "subtendido" ;
    VP (Pres Ind Sg P1) => "subtiendo" ;
    VP (Pres Ind Sg P2) => "subtiendes" ;
    VP (Pres Ind Sg P3) => "subtiende" ;
    VP (Pres Ind Pl P1) => "subtendemos" ;
    VP (Pres Ind Pl P2) => "subtendéis" ;
    VP (Pres Ind Pl P3) => "subtienden" ;
    VP (Pres Subj Sg P1) => "subtienda" ;
    VP (Pres Subj Sg P2) => "subtiendas" ;
    VP (Pres Subj Sg P3) => "subtienda" ;
    VP (Pres Subj Pl P1) => "subtendamos" ;
    VP (Pres Subj Pl P2) => "subtendáis" ;
    VP (Pres Subj Pl P3) => "subtiendan" ;
    VP (Impf Ind Sg P1) => "subtendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subtendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subtendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subtendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subtendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subtendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subtendiera" ; "subtendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subtendieras" ; "subtendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subtendiera" ; "subtendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subtendiéramos" ; "subtendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subtendierais" ; "subtendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subtendieran" ; "subtendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subtendí" ;--# notpresent
    VP (Pret Sg P2) => "subtendiste" ;--# notpresent
    VP (Pret Sg P3) => "subtendió" ;--# notpresent
    VP (Pret Pl P1) => "subtendimos" ;--# notpresent
    VP (Pret Pl P2) => "subtendisteis" ;--# notpresent
    VP (Pret Pl P3) => "subtendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subtenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "subtenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subtenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subtenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subtenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subtenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subtendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subtendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subtendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subtendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subtendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subtendieren" ;--# notpresent
    VP (Cond Sg P1) => "subtendería" ;--# notpresent
    VP (Cond Sg P2) => "subtenderías" ;--# notpresent
    VP (Cond Sg P3) => "subtendería" ;--# notpresent
    VP (Cond Pl P1) => "subtenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "subtenderíais" ;--# notpresent
    VP (Cond Pl P3) => "subtenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subtiende" ;
    VP (Imp Sg P3) => "subtienda" ;
    VP (Imp Pl P1) => "subtendamos" ;
    VP (Imp Pl P2) => "subtended" ;
    VP (Imp Pl P3) => "subtiendan" ;
    VP (Pass Sg Masc) => "subtendido" ;
    VP (Pass Sg Fem) => "subtendida" ;
    VP (Pass Pl Masc) => "subtendidos" ;
    VP (Pass Pl Fem) => "subtendidas"
    }
  } ;

lin superentender_V = verboV 
 {s = table {
    VI Infn => "superentender" ;
    VI Ger => "superentendiendo" ;
    VI Part => "superentendido" ;
    VP (Pres Ind Sg P1) => "superentiendo" ;
    VP (Pres Ind Sg P2) => "superentiendes" ;
    VP (Pres Ind Sg P3) => "superentiende" ;
    VP (Pres Ind Pl P1) => "superentendemos" ;
    VP (Pres Ind Pl P2) => "superentendéis" ;
    VP (Pres Ind Pl P3) => "superentienden" ;
    VP (Pres Subj Sg P1) => "superentienda" ;
    VP (Pres Subj Sg P2) => "superentiendas" ;
    VP (Pres Subj Sg P3) => "superentienda" ;
    VP (Pres Subj Pl P1) => "superentendamos" ;
    VP (Pres Subj Pl P2) => "superentendáis" ;
    VP (Pres Subj Pl P3) => "superentiendan" ;
    VP (Impf Ind Sg P1) => "superentendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "superentendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "superentendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "superentendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "superentendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "superentendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"superentendiera" ; "superentendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"superentendieras" ; "superentendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"superentendiera" ; "superentendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"superentendiéramos" ; "superentendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"superentendierais" ; "superentendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"superentendieran" ; "superentendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "superentendí" ;--# notpresent
    VP (Pret Sg P2) => "superentendiste" ;--# notpresent
    VP (Pret Sg P3) => "superentendió" ;--# notpresent
    VP (Pret Pl P1) => "superentendimos" ;--# notpresent
    VP (Pret Pl P2) => "superentendisteis" ;--# notpresent
    VP (Pret Pl P3) => "superentendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "superentenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "superentenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "superentenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "superentenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "superentenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "superentenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "superentendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "superentendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "superentendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "superentendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "superentendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "superentendieren" ;--# notpresent
    VP (Cond Sg P1) => "superentendería" ;--# notpresent
    VP (Cond Sg P2) => "superentenderías" ;--# notpresent
    VP (Cond Sg P3) => "superentendería" ;--# notpresent
    VP (Cond Pl P1) => "superentenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "superentenderíais" ;--# notpresent
    VP (Cond Pl P3) => "superentenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "superentiende" ;
    VP (Imp Sg P3) => "superentienda" ;
    VP (Imp Pl P1) => "superentendamos" ;
    VP (Imp Pl P2) => "superentended" ;
    VP (Imp Pl P3) => "superentiendan" ;
    VP (Pass Sg Masc) => "superentendido" ;
    VP (Pass Sg Fem) => "superentendida" ;
    VP (Pass Pl Masc) => "superentendidos" ;
    VP (Pass Pl Fem) => "superentendidas"
    }
  } ;

lin tender_V = verboV 
 {s = table {
    VI Infn => "tender" ;
    VI Ger => "tendiendo" ;
    VI Part => "tendido" ;
    VP (Pres Ind Sg P1) => "tiendo" ;
    VP (Pres Ind Sg P2) => "tiendes" ;
    VP (Pres Ind Sg P3) => "tiende" ;
    VP (Pres Ind Pl P1) => "tendemos" ;
    VP (Pres Ind Pl P2) => "tendéis" ;
    VP (Pres Ind Pl P3) => "tienden" ;
    VP (Pres Subj Sg P1) => "tienda" ;
    VP (Pres Subj Sg P2) => "tiendas" ;
    VP (Pres Subj Sg P3) => "tienda" ;
    VP (Pres Subj Pl P1) => "tendamos" ;
    VP (Pres Subj Pl P2) => "tendáis" ;
    VP (Pres Subj Pl P3) => "tiendan" ;
    VP (Impf Ind Sg P1) => "tendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tendiera" ; "tendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tendieras" ; "tendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tendiera" ; "tendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tendiéramos" ; "tendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tendierais" ; "tendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tendieran" ; "tendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "tendí" ;--# notpresent
    VP (Pret Sg P2) => "tendiste" ;--# notpresent
    VP (Pret Sg P3) => "tendió" ;--# notpresent
    VP (Pret Pl P1) => "tendimos" ;--# notpresent
    VP (Pret Pl P2) => "tendisteis" ;--# notpresent
    VP (Pret Pl P3) => "tendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "tenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "tenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tendieren" ;--# notpresent
    VP (Cond Sg P1) => "tendería" ;--# notpresent
    VP (Cond Sg P2) => "tenderías" ;--# notpresent
    VP (Cond Sg P3) => "tendería" ;--# notpresent
    VP (Cond Pl P1) => "tenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "tenderíais" ;--# notpresent
    VP (Cond Pl P3) => "tenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tiende" ;
    VP (Imp Sg P3) => "tienda" ;
    VP (Imp Pl P1) => "tendamos" ;
    VP (Imp Pl P2) => "tended" ;
    VP (Imp Pl P3) => "tiendan" ;
    VP (Pass Sg Masc) => "tendido" ;
    VP (Pass Sg Fem) => "tendida" ;
    VP (Pass Pl Masc) => "tendidos" ;
    VP (Pass Pl Fem) => "tendidas"
    }
  } ;

lin transcender_V = verboV 
 {s = table {
    VI Infn => "transcender" ;
    VI Ger => "transcendiendo" ;
    VI Part => "transcendido" ;
    VP (Pres Ind Sg P1) => "transciendo" ;
    VP (Pres Ind Sg P2) => "transciendes" ;
    VP (Pres Ind Sg P3) => "transciende" ;
    VP (Pres Ind Pl P1) => "transcendemos" ;
    VP (Pres Ind Pl P2) => "transcendéis" ;
    VP (Pres Ind Pl P3) => "transcienden" ;
    VP (Pres Subj Sg P1) => "transcienda" ;
    VP (Pres Subj Sg P2) => "transciendas" ;
    VP (Pres Subj Sg P3) => "transcienda" ;
    VP (Pres Subj Pl P1) => "transcendamos" ;
    VP (Pres Subj Pl P2) => "transcendáis" ;
    VP (Pres Subj Pl P3) => "transciendan" ;
    VP (Impf Ind Sg P1) => "transcendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "transcendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "transcendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "transcendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "transcendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "transcendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transcendiera" ; "transcendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"transcendieras" ; "transcendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transcendiera" ; "transcendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transcendiéramos" ; "transcendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"transcendierais" ; "transcendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"transcendieran" ; "transcendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "transcendí" ;--# notpresent
    VP (Pret Sg P2) => "transcendiste" ;--# notpresent
    VP (Pret Sg P3) => "transcendió" ;--# notpresent
    VP (Pret Pl P1) => "transcendimos" ;--# notpresent
    VP (Pret Pl P2) => "transcendisteis" ;--# notpresent
    VP (Pret Pl P3) => "transcendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transcenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "transcenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "transcenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transcenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transcenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "transcenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transcendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "transcendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transcendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transcendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transcendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "transcendieren" ;--# notpresent
    VP (Cond Sg P1) => "transcendería" ;--# notpresent
    VP (Cond Sg P2) => "transcenderías" ;--# notpresent
    VP (Cond Sg P3) => "transcendería" ;--# notpresent
    VP (Cond Pl P1) => "transcenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "transcenderíais" ;--# notpresent
    VP (Cond Pl P3) => "transcenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "transciende" ;
    VP (Imp Sg P3) => "transcienda" ;
    VP (Imp Pl P1) => "transcendamos" ;
    VP (Imp Pl P2) => "transcended" ;
    VP (Imp Pl P3) => "transciendan" ;
    VP (Pass Sg Masc) => "transcendido" ;
    VP (Pass Sg Fem) => "transcendida" ;
    VP (Pass Pl Masc) => "transcendidos" ;
    VP (Pass Pl Fem) => "transcendidas"
    }
  } ;

lin trascender_V = verboV 
 {s = table {
    VI Infn => "trascender" ;
    VI Ger => "trascendiendo" ;
    VI Part => "trascendido" ;
    VP (Pres Ind Sg P1) => "trasciendo" ;
    VP (Pres Ind Sg P2) => "trasciendes" ;
    VP (Pres Ind Sg P3) => "trasciende" ;
    VP (Pres Ind Pl P1) => "trascendemos" ;
    VP (Pres Ind Pl P2) => "trascendéis" ;
    VP (Pres Ind Pl P3) => "trascienden" ;
    VP (Pres Subj Sg P1) => "trascienda" ;
    VP (Pres Subj Sg P2) => "trasciendas" ;
    VP (Pres Subj Sg P3) => "trascienda" ;
    VP (Pres Subj Pl P1) => "trascendamos" ;
    VP (Pres Subj Pl P2) => "trascendáis" ;
    VP (Pres Subj Pl P3) => "trasciendan" ;
    VP (Impf Ind Sg P1) => "trascendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trascendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trascendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trascendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trascendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trascendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trascendiera" ; "trascendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trascendieras" ; "trascendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trascendiera" ; "trascendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trascendiéramos" ; "trascendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trascendierais" ; "trascendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trascendieran" ; "trascendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "trascendí" ;--# notpresent
    VP (Pret Sg P2) => "trascendiste" ;--# notpresent
    VP (Pret Sg P3) => "trascendió" ;--# notpresent
    VP (Pret Pl P1) => "trascendimos" ;--# notpresent
    VP (Pret Pl P2) => "trascendisteis" ;--# notpresent
    VP (Pret Pl P3) => "trascendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trascenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "trascenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trascenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trascenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trascenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trascenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trascendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trascendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trascendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trascendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trascendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trascendieren" ;--# notpresent
    VP (Cond Sg P1) => "trascendería" ;--# notpresent
    VP (Cond Sg P2) => "trascenderías" ;--# notpresent
    VP (Cond Sg P3) => "trascendería" ;--# notpresent
    VP (Cond Pl P1) => "trascenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "trascenderíais" ;--# notpresent
    VP (Cond Pl P3) => "trascenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasciende" ;
    VP (Imp Sg P3) => "trascienda" ;
    VP (Imp Pl P1) => "trascendamos" ;
    VP (Imp Pl P2) => "trascended" ;
    VP (Imp Pl P3) => "trasciendan" ;
    VP (Pass Sg Masc) => "trascendido" ;
    VP (Pass Sg Fem) => "trascendida" ;
    VP (Pass Pl Masc) => "trascendidos" ;
    VP (Pass Pl Fem) => "trascendidas"
    }
  } ;

lin trasverter_V = verboV 
 {s = table {
    VI Infn => "trasverter" ;
    VI Ger => "trasvertiendo" ;
    VI Part => "trasvertido" ;
    VP (Pres Ind Sg P1) => "trasvierto" ;
    VP (Pres Ind Sg P2) => "trasviertes" ;
    VP (Pres Ind Sg P3) => "trasvierte" ;
    VP (Pres Ind Pl P1) => "trasvertemos" ;
    VP (Pres Ind Pl P2) => "trasvertéis" ;
    VP (Pres Ind Pl P3) => "trasvierten" ;
    VP (Pres Subj Sg P1) => "trasvierta" ;
    VP (Pres Subj Sg P2) => "trasviertas" ;
    VP (Pres Subj Sg P3) => "trasvierta" ;
    VP (Pres Subj Pl P1) => "trasvertamos" ;
    VP (Pres Subj Pl P2) => "trasvertáis" ;
    VP (Pres Subj Pl P3) => "trasviertan" ;
    VP (Impf Ind Sg P1) => "trasvertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasvertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasvertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasvertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasvertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasvertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasvertiera" ; "trasvertiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasvertieras" ; "trasvertieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasvertiera" ; "trasvertiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasvertiéramos" ; "trasvertiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasvertierais" ; "trasvertieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasvertieran" ; "trasvertiesen"} ;--# notpresent
    VP (Pret Sg P1) => "trasvertí" ;--# notpresent
    VP (Pret Sg P2) => "trasvertiste" ;--# notpresent
    VP (Pret Sg P3) => "trasvertió" ;--# notpresent
    VP (Pret Pl P1) => "trasvertimos" ;--# notpresent
    VP (Pret Pl P2) => "trasvertisteis" ;--# notpresent
    VP (Pret Pl P3) => "trasvertieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasverteré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasverterás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasverterá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasverteremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasverteréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasverterán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasvertiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasvertieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasvertiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasvertiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasvertiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasvertieren" ;--# notpresent
    VP (Cond Sg P1) => "trasvertería" ;--# notpresent
    VP (Cond Sg P2) => "trasverterías" ;--# notpresent
    VP (Cond Sg P3) => "trasvertería" ;--# notpresent
    VP (Cond Pl P1) => "trasverteríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasverteríais" ;--# notpresent
    VP (Cond Pl P3) => "trasverterían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasvierte" ;
    VP (Imp Sg P3) => "trasvierta" ;
    VP (Imp Pl P1) => "trasvertamos" ;
    VP (Imp Pl P2) => "trasverted" ;
    VP (Imp Pl P3) => "trasviertan" ;
    VP (Pass Sg Masc) => "trasvertido" ;
    VP (Pass Sg Fem) => "trasvertida" ;
    VP (Pass Pl Masc) => "trasvertidos" ;
    VP (Pass Pl Fem) => "trasvertidas"
    }
  } ;

lin verter_V = verboV 
 {s = table {
    VI Infn => "verter" ;
    VI Ger => "vertiendo" ;
    VI Part => "vertido" ;
    VP (Pres Ind Sg P1) => "vierto" ;
    VP (Pres Ind Sg P2) => "viertes" ;
    VP (Pres Ind Sg P3) => "vierte" ;
    VP (Pres Ind Pl P1) => "vertemos" ;
    VP (Pres Ind Pl P2) => "vertéis" ;
    VP (Pres Ind Pl P3) => "vierten" ;
    VP (Pres Subj Sg P1) => "vierta" ;
    VP (Pres Subj Sg P2) => "viertas" ;
    VP (Pres Subj Sg P3) => "vierta" ;
    VP (Pres Subj Pl P1) => "vertamos" ;
    VP (Pres Subj Pl P2) => "vertáis" ;
    VP (Pres Subj Pl P3) => "viertan" ;
    VP (Impf Ind Sg P1) => "vertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "vertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "vertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "vertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "vertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "vertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"vertiera" ; "vertiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"vertieras" ; "vertieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"vertiera" ; "vertiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"vertiéramos" ; "vertiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"vertierais" ; "vertieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"vertieran" ; "vertiesen"} ;--# notpresent
    VP (Pret Sg P1) => "vertí" ;--# notpresent
    VP (Pret Sg P2) => "vertiste" ;--# notpresent
    VP (Pret Sg P3) => "vertió" ;--# notpresent
    VP (Pret Pl P1) => "vertimos" ;--# notpresent
    VP (Pret Pl P2) => "vertisteis" ;--# notpresent
    VP (Pret Pl P3) => "vertieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "verteré" ;--# notpresent
    VP (Fut Ind Sg P2) => "verterás" ;--# notpresent
    VP (Fut Ind Sg P3) => "verterá" ;--# notpresent
    VP (Fut Ind Pl P1) => "verteremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "verteréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "verterán" ;--# notpresent
    VP (Fut Subj Sg P1) => "vertiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "vertieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "vertiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "vertiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "vertiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "vertieren" ;--# notpresent
    VP (Cond Sg P1) => "vertería" ;--# notpresent
    VP (Cond Sg P2) => "verterías" ;--# notpresent
    VP (Cond Sg P3) => "vertería" ;--# notpresent
    VP (Cond Pl P1) => "verteríamos" ;--# notpresent
    VP (Cond Pl P2) => "verteríais" ;--# notpresent
    VP (Cond Pl P3) => "verterían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vierte" ;
    VP (Imp Sg P3) => "vierta" ;
    VP (Imp Pl P1) => "vertamos" ;
    VP (Imp Pl P2) => "verted" ;
    VP (Imp Pl P3) => "viertan" ;
    VP (Pass Sg Masc) => "vertido" ;
    VP (Pass Sg Fem) => "vertida" ;
    VP (Pass Pl Masc) => "vertidos" ;
    VP (Pass Pl Fem) => "vertidas"
    }
  } ;

lin cernir_V = verboV 
 {s = table {
    VI Infn => "cernir" ;
    VI Ger => "cerniendo" ;
    VI Part => "cernido" ;
    VP (Pres Ind Sg P1) => "cierno" ;
    VP (Pres Ind Sg P2) => "ciernes" ;
    VP (Pres Ind Sg P3) => "cierne" ;
    VP (Pres Ind Pl P1) => "cernimos" ;
    VP (Pres Ind Pl P2) => "cernís" ;
    VP (Pres Ind Pl P3) => "ciernen" ;
    VP (Pres Subj Sg P1) => "cierna" ;
    VP (Pres Subj Sg P2) => "ciernas" ;
    VP (Pres Subj Sg P3) => "cierna" ;
    VP (Pres Subj Pl P1) => "cernamos" ;
    VP (Pres Subj Pl P2) => "cernáis" ;
    VP (Pres Subj Pl P3) => "ciernan" ;
    VP (Impf Ind Sg P1) => "cernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cerníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cerníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cerniera" ; "cerniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cernieras" ; "cernieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cerniera" ; "cerniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cerniéramos" ; "cerniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cernierais" ; "cernieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cernieran" ; "cerniesen"} ;--# notpresent
    VP (Pret Sg P1) => "cerní" ;--# notpresent
    VP (Pret Sg P2) => "cerniste" ;--# notpresent
    VP (Pret Sg P3) => "cernió" ;--# notpresent
    VP (Pret Pl P1) => "cernimos" ;--# notpresent
    VP (Pret Pl P2) => "cernisteis" ;--# notpresent
    VP (Pret Pl P3) => "cernieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cerniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cernirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cernirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cerniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cerniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cernirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cerniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cernieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cerniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cerniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cerniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cernieren" ;--# notpresent
    VP (Cond Sg P1) => "cerniría" ;--# notpresent
    VP (Cond Sg P2) => "cernirías" ;--# notpresent
    VP (Cond Sg P3) => "cerniría" ;--# notpresent
    VP (Cond Pl P1) => "cerniríamos" ;--# notpresent
    VP (Cond Pl P2) => "cerniríais" ;--# notpresent
    VP (Cond Pl P3) => "cernirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cierne" ;
    VP (Imp Sg P3) => "cierna" ;
    VP (Imp Pl P1) => "cernamos" ;
    VP (Imp Pl P2) => "cernid" ;
    VP (Imp Pl P3) => "ciernan" ;
    VP (Pass Sg Masc) => "cernido" ;
    VP (Pass Sg Fem) => "cernida" ;
    VP (Pass Pl Masc) => "cernidos" ;
    VP (Pass Pl Fem) => "cernidas"
    }
  } ;

lin concernir2_V = verboV 
 {s = table {
    VI Infn => "concernir" ;
    VI Ger => "concerniendo" ;
    VI Part => "concernido" ;
    VP (Pres Ind Sg P1) => "concierno" ;
    VP (Pres Ind Sg P2) => "conciernes" ;
    VP (Pres Ind Sg P3) => "concierne" ;
    VP (Pres Ind Pl P1) => "concernimos" ;
    VP (Pres Ind Pl P2) => "concernís" ;
    VP (Pres Ind Pl P3) => "conciernen" ;
    VP (Pres Subj Sg P1) => "concierna" ;
    VP (Pres Subj Sg P2) => "conciernas" ;
    VP (Pres Subj Sg P3) => "concierna" ;
    VP (Pres Subj Pl P1) => "concernamos" ;
    VP (Pres Subj Pl P2) => "concernáis" ;
    VP (Pres Subj Pl P3) => "conciernan" ;
    VP (Impf Ind Sg P1) => "concernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "concernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "concernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "concerníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "concerníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "concernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"concerniera" ; "concerniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"concernieras" ; "concernieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"concerniera" ; "concerniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"concerniéramos" ; "concerniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"concernierais" ; "concernieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"concernieran" ; "concerniesen"} ;--# notpresent
    VP (Pret Sg P1) => "concerní" ;--# notpresent
    VP (Pret Sg P2) => "concerniste" ;--# notpresent
    VP (Pret Sg P3) => "concernió" ;--# notpresent
    VP (Pret Pl P1) => "concernimos" ;--# notpresent
    VP (Pret Pl P2) => "concernisteis" ;--# notpresent
    VP (Pret Pl P3) => "concernieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "concerniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "concernirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "concernirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "concerniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "concerniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "concernirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "concerniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "concernieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "concerniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "concerniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "concerniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "concernieren" ;--# notpresent
    VP (Cond Sg P1) => "concerniría" ;--# notpresent
    VP (Cond Sg P2) => "concernirías" ;--# notpresent
    VP (Cond Sg P3) => "concerniría" ;--# notpresent
    VP (Cond Pl P1) => "concerniríamos" ;--# notpresent
    VP (Cond Pl P2) => "concerniríais" ;--# notpresent
    VP (Cond Pl P3) => "concernirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "concierne" ;
    VP (Imp Sg P3) => "concierna" ;
    VP (Imp Pl P1) => "concernamos" ;
    VP (Imp Pl P2) => "concernid" ;
    VP (Imp Pl P3) => "conciernan" ;
    VP (Pass Sg Masc) => "concernido" ;
    VP (Pass Sg Fem) => "concernida" ;
    VP (Pass Pl Masc) => "concernidos" ;
    VP (Pass Pl Fem) => "concernidas"
    }
  } ;

lin discernir_V = verboV 
 {s = table {
    VI Infn => "discernir" ;
    VI Ger => "discerniendo" ;
    VI Part => "discernido" ;
    VP (Pres Ind Sg P1) => "discierno" ;
    VP (Pres Ind Sg P2) => "disciernes" ;
    VP (Pres Ind Sg P3) => "discierne" ;
    VP (Pres Ind Pl P1) => "discernimos" ;
    VP (Pres Ind Pl P2) => "discernís" ;
    VP (Pres Ind Pl P3) => "disciernen" ;
    VP (Pres Subj Sg P1) => "discierna" ;
    VP (Pres Subj Sg P2) => "disciernas" ;
    VP (Pres Subj Sg P3) => "discierna" ;
    VP (Pres Subj Pl P1) => "discernamos" ;
    VP (Pres Subj Pl P2) => "discernáis" ;
    VP (Pres Subj Pl P3) => "disciernan" ;
    VP (Impf Ind Sg P1) => "discernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "discernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "discernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "discerníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "discerníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "discernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"discerniera" ; "discerniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"discernieras" ; "discernieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"discerniera" ; "discerniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"discerniéramos" ; "discerniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"discernierais" ; "discernieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"discernieran" ; "discerniesen"} ;--# notpresent
    VP (Pret Sg P1) => "discerní" ;--# notpresent
    VP (Pret Sg P2) => "discerniste" ;--# notpresent
    VP (Pret Sg P3) => "discernió" ;--# notpresent
    VP (Pret Pl P1) => "discernimos" ;--# notpresent
    VP (Pret Pl P2) => "discernisteis" ;--# notpresent
    VP (Pret Pl P3) => "discernieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "discerniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "discernirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "discernirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "discerniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "discerniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "discernirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "discerniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "discernieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "discerniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "discerniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "discerniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "discernieren" ;--# notpresent
    VP (Cond Sg P1) => "discerniría" ;--# notpresent
    VP (Cond Sg P2) => "discernirías" ;--# notpresent
    VP (Cond Sg P3) => "discerniría" ;--# notpresent
    VP (Cond Pl P1) => "discerniríamos" ;--# notpresent
    VP (Cond Pl P2) => "discerniríais" ;--# notpresent
    VP (Cond Pl P3) => "discernirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "discierne" ;
    VP (Imp Sg P3) => "discierna" ;
    VP (Imp Pl P1) => "discernamos" ;
    VP (Imp Pl P2) => "discernid" ;
    VP (Imp Pl P3) => "disciernan" ;
    VP (Pass Sg Masc) => "discernido" ;
    VP (Pass Sg Fem) => "discernida" ;
    VP (Pass Pl Masc) => "discernidos" ;
    VP (Pass Pl Fem) => "discernidas"
    }
  } ;

lin hendir_V = verboV 
 {s = table {
    VI Infn => "hendir" ;
    VI Ger => "hendiendo" ;
    VI Part => "hendido" ;
    VP (Pres Ind Sg P1) => "hiendo" ;
    VP (Pres Ind Sg P2) => "hiendes" ;
    VP (Pres Ind Sg P3) => "hiende" ;
    VP (Pres Ind Pl P1) => "hendimos" ;
    VP (Pres Ind Pl P2) => "hendís" ;
    VP (Pres Ind Pl P3) => "hienden" ;
    VP (Pres Subj Sg P1) => "hienda" ;
    VP (Pres Subj Sg P2) => "hiendas" ;
    VP (Pres Subj Sg P3) => "hienda" ;
    VP (Pres Subj Pl P1) => "hendamos" ;
    VP (Pres Subj Pl P2) => "hendáis" ;
    VP (Pres Subj Pl P3) => "hiendan" ;
    VP (Impf Ind Sg P1) => "hendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "hendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "hendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hendiera" ; "hendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hendieras" ; "hendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hendiera" ; "hendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hendiéramos" ; "hendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hendierais" ; "hendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hendieran" ; "hendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "hendí" ;--# notpresent
    VP (Pret Sg P2) => "hendiste" ;--# notpresent
    VP (Pret Sg P3) => "hendió" ;--# notpresent
    VP (Pret Pl P1) => "hendimos" ;--# notpresent
    VP (Pret Pl P2) => "hendisteis" ;--# notpresent
    VP (Pret Pl P3) => "hendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "hendiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "hendirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hendirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "hendiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "hendiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "hendirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hendieren" ;--# notpresent
    VP (Cond Sg P1) => "hendiría" ;--# notpresent
    VP (Cond Sg P2) => "hendirías" ;--# notpresent
    VP (Cond Sg P3) => "hendiría" ;--# notpresent
    VP (Cond Pl P1) => "hendiríamos" ;--# notpresent
    VP (Cond Pl P2) => "hendiríais" ;--# notpresent
    VP (Cond Pl P3) => "hendirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hiende" ;
    VP (Imp Sg P3) => "hienda" ;
    VP (Imp Pl P1) => "hendamos" ;
    VP (Imp Pl P2) => "hendid" ;
    VP (Imp Pl P3) => "hiendan" ;
    VP (Pass Sg Masc) => "hendido" ;
    VP (Pass Sg Fem) => "hendida" ;
    VP (Pass Pl Masc) => "hendidos" ;
    VP (Pass Pl Fem) => "hendidas"
    }
  } ;

lin amover_V = verboV 
 {s = table {
    VI Infn => "amover" ;
    VI Ger => "amoviendo" ;
    VI Part => "amovido" ;
    VP (Pres Ind Sg P1) => "amuevo" ;
    VP (Pres Ind Sg P2) => "amueves" ;
    VP (Pres Ind Sg P3) => "amueve" ;
    VP (Pres Ind Pl P1) => "amovemos" ;
    VP (Pres Ind Pl P2) => "amovéis" ;
    VP (Pres Ind Pl P3) => "amueven" ;
    VP (Pres Subj Sg P1) => "amueva" ;
    VP (Pres Subj Sg P2) => "amuevas" ;
    VP (Pres Subj Sg P3) => "amueva" ;
    VP (Pres Subj Pl P1) => "amovamos" ;
    VP (Pres Subj Pl P2) => "amováis" ;
    VP (Pres Subj Pl P3) => "amuevan" ;
    VP (Impf Ind Sg P1) => "amovía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amovías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amovía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amovíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amovíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amovían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amoviera" ; "amoviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amovieras" ; "amovieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amoviera" ; "amoviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amoviéramos" ; "amoviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amovierais" ; "amovieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amovieran" ; "amoviesen"} ;--# notpresent
    VP (Pret Sg P1) => "amoví" ;--# notpresent
    VP (Pret Sg P2) => "amoviste" ;--# notpresent
    VP (Pret Sg P3) => "amovió" ;--# notpresent
    VP (Pret Pl P1) => "amovimos" ;--# notpresent
    VP (Pret Pl P2) => "amovisteis" ;--# notpresent
    VP (Pret Pl P3) => "amovieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amoveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amoverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amoverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amoveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amoveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amoverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amoviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amovieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amoviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amoviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amoviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amovieren" ;--# notpresent
    VP (Cond Sg P1) => "amovería" ;--# notpresent
    VP (Cond Sg P2) => "amoverías" ;--# notpresent
    VP (Cond Sg P3) => "amovería" ;--# notpresent
    VP (Cond Pl P1) => "amoveríamos" ;--# notpresent
    VP (Cond Pl P2) => "amoveríais" ;--# notpresent
    VP (Cond Pl P3) => "amoverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amueve" ;
    VP (Imp Sg P3) => "amueva" ;
    VP (Imp Pl P1) => "amovamos" ;
    VP (Imp Pl P2) => "amoved" ;
    VP (Imp Pl P3) => "amuevan" ;
    VP (Pass Sg Masc) => "amovido" ;
    VP (Pass Sg Fem) => "amovida" ;
    VP (Pass Pl Masc) => "amovidos" ;
    VP (Pass Pl Fem) => "amovidas"
    }
  } ;

lin conmover_V = verboV 
 {s = table {
    VI Infn => "conmover" ;
    VI Ger => "conmoviendo" ;
    VI Part => "conmovido" ;
    VP (Pres Ind Sg P1) => "conmuevo" ;
    VP (Pres Ind Sg P2) => "conmueves" ;
    VP (Pres Ind Sg P3) => "conmueve" ;
    VP (Pres Ind Pl P1) => "conmovemos" ;
    VP (Pres Ind Pl P2) => "conmovéis" ;
    VP (Pres Ind Pl P3) => "conmueven" ;
    VP (Pres Subj Sg P1) => "conmueva" ;
    VP (Pres Subj Sg P2) => "conmuevas" ;
    VP (Pres Subj Sg P3) => "conmueva" ;
    VP (Pres Subj Pl P1) => "conmovamos" ;
    VP (Pres Subj Pl P2) => "conmováis" ;
    VP (Pres Subj Pl P3) => "conmuevan" ;
    VP (Impf Ind Sg P1) => "conmovía" ;--# notpresent
    VP (Impf Ind Sg P2) => "conmovías" ;--# notpresent
    VP (Impf Ind Sg P3) => "conmovía" ;--# notpresent
    VP (Impf Ind Pl P1) => "conmovíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conmovíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "conmovían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"conmoviera" ; "conmoviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"conmovieras" ; "conmovieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"conmoviera" ; "conmoviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"conmoviéramos" ; "conmoviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"conmovierais" ; "conmovieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"conmovieran" ; "conmoviesen"} ;--# notpresent
    VP (Pret Sg P1) => "conmoví" ;--# notpresent
    VP (Pret Sg P2) => "conmoviste" ;--# notpresent
    VP (Pret Sg P3) => "conmovió" ;--# notpresent
    VP (Pret Pl P1) => "conmovimos" ;--# notpresent
    VP (Pret Pl P2) => "conmovisteis" ;--# notpresent
    VP (Pret Pl P3) => "conmovieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "conmoveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "conmoverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "conmoverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "conmoveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "conmoveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "conmoverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "conmoviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "conmovieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "conmoviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "conmoviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "conmoviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "conmovieren" ;--# notpresent
    VP (Cond Sg P1) => "conmovería" ;--# notpresent
    VP (Cond Sg P2) => "conmoverías" ;--# notpresent
    VP (Cond Sg P3) => "conmovería" ;--# notpresent
    VP (Cond Pl P1) => "conmoveríamos" ;--# notpresent
    VP (Cond Pl P2) => "conmoveríais" ;--# notpresent
    VP (Cond Pl P3) => "conmoverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "conmueve" ;
    VP (Imp Sg P3) => "conmueva" ;
    VP (Imp Pl P1) => "conmovamos" ;
    VP (Imp Pl P2) => "conmoved" ;
    VP (Imp Pl P3) => "conmuevan" ;
    VP (Pass Sg Masc) => "conmovido" ;
    VP (Pass Sg Fem) => "conmovida" ;
    VP (Pass Pl Masc) => "conmovidos" ;
    VP (Pass Pl Fem) => "conmovidas"
    }
  } ;

lin demoler_V = verboV 
 {s = table {
    VI Infn => "demoler" ;
    VI Ger => "demoliendo" ;
    VI Part => "demolido" ;
    VP (Pres Ind Sg P1) => "demuelo" ;
    VP (Pres Ind Sg P2) => "demueles" ;
    VP (Pres Ind Sg P3) => "demuele" ;
    VP (Pres Ind Pl P1) => "demolemos" ;
    VP (Pres Ind Pl P2) => "demoléis" ;
    VP (Pres Ind Pl P3) => "demuelen" ;
    VP (Pres Subj Sg P1) => "demuela" ;
    VP (Pres Subj Sg P2) => "demuelas" ;
    VP (Pres Subj Sg P3) => "demuela" ;
    VP (Pres Subj Pl P1) => "demolamos" ;
    VP (Pres Subj Pl P2) => "demoláis" ;
    VP (Pres Subj Pl P3) => "demuelan" ;
    VP (Impf Ind Sg P1) => "demolía" ;--# notpresent
    VP (Impf Ind Sg P2) => "demolías" ;--# notpresent
    VP (Impf Ind Sg P3) => "demolía" ;--# notpresent
    VP (Impf Ind Pl P1) => "demolíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "demolíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "demolían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"demoliera" ; "demoliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"demolieras" ; "demolieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"demoliera" ; "demoliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"demoliéramos" ; "demoliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"demolierais" ; "demolieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"demolieran" ; "demoliesen"} ;--# notpresent
    VP (Pret Sg P1) => "demolí" ;--# notpresent
    VP (Pret Sg P2) => "demoliste" ;--# notpresent
    VP (Pret Sg P3) => "demolió" ;--# notpresent
    VP (Pret Pl P1) => "demolimos" ;--# notpresent
    VP (Pret Pl P2) => "demolisteis" ;--# notpresent
    VP (Pret Pl P3) => "demolieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "demoleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "demolerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "demolerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "demoleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "demoleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "demolerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "demoliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "demolieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "demoliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "demoliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "demoliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "demolieren" ;--# notpresent
    VP (Cond Sg P1) => "demolería" ;--# notpresent
    VP (Cond Sg P2) => "demolerías" ;--# notpresent
    VP (Cond Sg P3) => "demolería" ;--# notpresent
    VP (Cond Pl P1) => "demoleríamos" ;--# notpresent
    VP (Cond Pl P2) => "demoleríais" ;--# notpresent
    VP (Cond Pl P3) => "demolerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "demuele" ;
    VP (Imp Sg P3) => "demuela" ;
    VP (Imp Pl P1) => "demolamos" ;
    VP (Imp Pl P2) => "demoled" ;
    VP (Imp Pl P3) => "demuelan" ;
    VP (Pass Sg Masc) => "demolido" ;
    VP (Pass Sg Fem) => "demolida" ;
    VP (Pass Pl Masc) => "demolidos" ;
    VP (Pass Pl Fem) => "demolidas"
    }
  } ;

lin doler_V = verboV 
 {s = table {
    VI Infn => "doler" ;
    VI Ger => "doliendo" ;
    VI Part => "dolido" ;
    VP (Pres Ind Sg P1) => "duelo" ;
    VP (Pres Ind Sg P2) => "dueles" ;
    VP (Pres Ind Sg P3) => "duele" ;
    VP (Pres Ind Pl P1) => "dolemos" ;
    VP (Pres Ind Pl P2) => "doléis" ;
    VP (Pres Ind Pl P3) => "duelen" ;
    VP (Pres Subj Sg P1) => "duela" ;
    VP (Pres Subj Sg P2) => "duelas" ;
    VP (Pres Subj Sg P3) => "duela" ;
    VP (Pres Subj Pl P1) => "dolamos" ;
    VP (Pres Subj Pl P2) => "doláis" ;
    VP (Pres Subj Pl P3) => "duelan" ;
    VP (Impf Ind Sg P1) => "dolía" ;--# notpresent
    VP (Impf Ind Sg P2) => "dolías" ;--# notpresent
    VP (Impf Ind Sg P3) => "dolía" ;--# notpresent
    VP (Impf Ind Pl P1) => "dolíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dolíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "dolían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"doliera" ; "doliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dolieras" ; "dolieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"doliera" ; "doliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"doliéramos" ; "doliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dolierais" ; "dolieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dolieran" ; "doliesen"} ;--# notpresent
    VP (Pret Sg P1) => "dolí" ;--# notpresent
    VP (Pret Sg P2) => "doliste" ;--# notpresent
    VP (Pret Sg P3) => "dolió" ;--# notpresent
    VP (Pret Pl P1) => "dolimos" ;--# notpresent
    VP (Pret Pl P2) => "dolisteis" ;--# notpresent
    VP (Pret Pl P3) => "dolieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "doleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dolerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dolerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "doleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "doleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dolerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "doliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "dolieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "doliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "doliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "doliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dolieren" ;--# notpresent
    VP (Cond Sg P1) => "dolería" ;--# notpresent
    VP (Cond Sg P2) => "dolerías" ;--# notpresent
    VP (Cond Sg P3) => "dolería" ;--# notpresent
    VP (Cond Pl P1) => "doleríamos" ;--# notpresent
    VP (Cond Pl P2) => "doleríais" ;--# notpresent
    VP (Cond Pl P3) => "dolerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "duele" ;
    VP (Imp Sg P3) => "duela" ;
    VP (Imp Pl P1) => "dolamos" ;
    VP (Imp Pl P2) => "doled" ;
    VP (Imp Pl P3) => "duelan" ;
    VP (Pass Sg Masc) => "dolido" ;
    VP (Pass Sg Fem) => "dolida" ;
    VP (Pass Pl Masc) => "dolidos" ;
    VP (Pass Pl Fem) => "dolidas"
    }
  } ;

lin moler_V = verboV 
 {s = table {
    VI Infn => "moler" ;
    VI Ger => "moliendo" ;
    VI Part => "molido" ;
    VP (Pres Ind Sg P1) => "muelo" ;
    VP (Pres Ind Sg P2) => "mueles" ;
    VP (Pres Ind Sg P3) => "muele" ;
    VP (Pres Ind Pl P1) => "molemos" ;
    VP (Pres Ind Pl P2) => "moléis" ;
    VP (Pres Ind Pl P3) => "muelen" ;
    VP (Pres Subj Sg P1) => "muela" ;
    VP (Pres Subj Sg P2) => "muelas" ;
    VP (Pres Subj Sg P3) => "muela" ;
    VP (Pres Subj Pl P1) => "molamos" ;
    VP (Pres Subj Pl P2) => "moláis" ;
    VP (Pres Subj Pl P3) => "muelan" ;
    VP (Impf Ind Sg P1) => "molía" ;--# notpresent
    VP (Impf Ind Sg P2) => "molías" ;--# notpresent
    VP (Impf Ind Sg P3) => "molía" ;--# notpresent
    VP (Impf Ind Pl P1) => "molíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "molíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "molían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"moliera" ; "moliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"molieras" ; "molieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"moliera" ; "moliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"moliéramos" ; "moliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"molierais" ; "molieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"molieran" ; "moliesen"} ;--# notpresent
    VP (Pret Sg P1) => "molí" ;--# notpresent
    VP (Pret Sg P2) => "moliste" ;--# notpresent
    VP (Pret Sg P3) => "molió" ;--# notpresent
    VP (Pret Pl P1) => "molimos" ;--# notpresent
    VP (Pret Pl P2) => "molisteis" ;--# notpresent
    VP (Pret Pl P3) => "molieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "moleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "molerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "molerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "moleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "moleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "molerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "moliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "molieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "moliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "moliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "moliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "molieren" ;--# notpresent
    VP (Cond Sg P1) => "molería" ;--# notpresent
    VP (Cond Sg P2) => "molerías" ;--# notpresent
    VP (Cond Sg P3) => "molería" ;--# notpresent
    VP (Cond Pl P1) => "moleríamos" ;--# notpresent
    VP (Cond Pl P2) => "moleríais" ;--# notpresent
    VP (Cond Pl P3) => "molerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muele" ;
    VP (Imp Sg P3) => "muela" ;
    VP (Imp Pl P1) => "molamos" ;
    VP (Imp Pl P2) => "moled" ;
    VP (Imp Pl P3) => "muelan" ;
    VP (Pass Sg Masc) => "molido" ;
    VP (Pass Sg Fem) => "molida" ;
    VP (Pass Pl Masc) => "molidos" ;
    VP (Pass Pl Fem) => "molidas"
    }
  } ;

lin morder_V = verboV 
 {s = table {
    VI Infn => "morder" ;
    VI Ger => "mordiendo" ;
    VI Part => "mordido" ;
    VP (Pres Ind Sg P1) => "muerdo" ;
    VP (Pres Ind Sg P2) => "muerdes" ;
    VP (Pres Ind Sg P3) => "muerde" ;
    VP (Pres Ind Pl P1) => "mordemos" ;
    VP (Pres Ind Pl P2) => "mordéis" ;
    VP (Pres Ind Pl P3) => "muerden" ;
    VP (Pres Subj Sg P1) => "muerda" ;
    VP (Pres Subj Sg P2) => "muerdas" ;
    VP (Pres Subj Sg P3) => "muerda" ;
    VP (Pres Subj Pl P1) => "mordamos" ;
    VP (Pres Subj Pl P2) => "mordáis" ;
    VP (Pres Subj Pl P3) => "muerdan" ;
    VP (Impf Ind Sg P1) => "mordía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mordías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mordía" ;--# notpresent
    VP (Impf Ind Pl P1) => "mordíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mordíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mordían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mordiera" ; "mordiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mordieras" ; "mordieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mordiera" ; "mordiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mordiéramos" ; "mordiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mordierais" ; "mordieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mordieran" ; "mordiesen"} ;--# notpresent
    VP (Pret Sg P1) => "mordí" ;--# notpresent
    VP (Pret Sg P2) => "mordiste" ;--# notpresent
    VP (Pret Sg P3) => "mordió" ;--# notpresent
    VP (Pret Pl P1) => "mordimos" ;--# notpresent
    VP (Pret Pl P2) => "mordisteis" ;--# notpresent
    VP (Pret Pl P3) => "mordieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "morderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "morderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "morderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "morderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "morderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "morderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mordiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mordieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "mordiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "mordiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mordiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mordieren" ;--# notpresent
    VP (Cond Sg P1) => "mordería" ;--# notpresent
    VP (Cond Sg P2) => "morderías" ;--# notpresent
    VP (Cond Sg P3) => "mordería" ;--# notpresent
    VP (Cond Pl P1) => "morderíamos" ;--# notpresent
    VP (Cond Pl P2) => "morderíais" ;--# notpresent
    VP (Cond Pl P3) => "morderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muerde" ;
    VP (Imp Sg P3) => "muerda" ;
    VP (Imp Pl P1) => "mordamos" ;
    VP (Imp Pl P2) => "morded" ;
    VP (Imp Pl P3) => "muerdan" ;
    VP (Pass Sg Masc) => "mordido" ;
    VP (Pass Sg Fem) => "mordida" ;
    VP (Pass Pl Masc) => "mordidos" ;
    VP (Pass Pl Fem) => "mordidas"
    }
  } ;

lin mover_V = verboV 
 {s = table {
    VI Infn => "mover" ;
    VI Ger => "moviendo" ;
    VI Part => "movido" ;
    VP (Pres Ind Sg P1) => "muevo" ;
    VP (Pres Ind Sg P2) => "mueves" ;
    VP (Pres Ind Sg P3) => "mueve" ;
    VP (Pres Ind Pl P1) => "movemos" ;
    VP (Pres Ind Pl P2) => "movéis" ;
    VP (Pres Ind Pl P3) => "mueven" ;
    VP (Pres Subj Sg P1) => "mueva" ;
    VP (Pres Subj Sg P2) => "muevas" ;
    VP (Pres Subj Sg P3) => "mueva" ;
    VP (Pres Subj Pl P1) => "movamos" ;
    VP (Pres Subj Pl P2) => "mováis" ;
    VP (Pres Subj Pl P3) => "muevan" ;
    VP (Impf Ind Sg P1) => "movía" ;--# notpresent
    VP (Impf Ind Sg P2) => "movías" ;--# notpresent
    VP (Impf Ind Sg P3) => "movía" ;--# notpresent
    VP (Impf Ind Pl P1) => "movíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "movíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "movían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"moviera" ; "moviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"movieras" ; "movieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"moviera" ; "moviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"moviéramos" ; "moviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"movierais" ; "movieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"movieran" ; "moviesen"} ;--# notpresent
    VP (Pret Sg P1) => "moví" ;--# notpresent
    VP (Pret Sg P2) => "moviste" ;--# notpresent
    VP (Pret Sg P3) => "movió" ;--# notpresent
    VP (Pret Pl P1) => "movimos" ;--# notpresent
    VP (Pret Pl P2) => "movisteis" ;--# notpresent
    VP (Pret Pl P3) => "movieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "moveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "moverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "moverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "moveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "moveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "moverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "moviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "movieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "moviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "moviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "moviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "movieren" ;--# notpresent
    VP (Cond Sg P1) => "movería" ;--# notpresent
    VP (Cond Sg P2) => "moverías" ;--# notpresent
    VP (Cond Sg P3) => "movería" ;--# notpresent
    VP (Cond Pl P1) => "moveríamos" ;--# notpresent
    VP (Cond Pl P2) => "moveríais" ;--# notpresent
    VP (Cond Pl P3) => "moverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mueve" ;
    VP (Imp Sg P3) => "mueva" ;
    VP (Imp Pl P1) => "movamos" ;
    VP (Imp Pl P2) => "moved" ;
    VP (Imp Pl P3) => "muevan" ;
    VP (Pass Sg Masc) => "movido" ;
    VP (Pass Sg Fem) => "movida" ;
    VP (Pass Pl Masc) => "movidos" ;
    VP (Pass Pl Fem) => "movidas"
    }
  } ;

lin promover_V = verboV 
 {s = table {
    VI Infn => "promover" ;
    VI Ger => "promoviendo" ;
    VI Part => "promovido" ;
    VP (Pres Ind Sg P1) => "promuevo" ;
    VP (Pres Ind Sg P2) => "promueves" ;
    VP (Pres Ind Sg P3) => "promueve" ;
    VP (Pres Ind Pl P1) => "promovemos" ;
    VP (Pres Ind Pl P2) => "promovéis" ;
    VP (Pres Ind Pl P3) => "promueven" ;
    VP (Pres Subj Sg P1) => "promueva" ;
    VP (Pres Subj Sg P2) => "promuevas" ;
    VP (Pres Subj Sg P3) => "promueva" ;
    VP (Pres Subj Pl P1) => "promovamos" ;
    VP (Pres Subj Pl P2) => "promováis" ;
    VP (Pres Subj Pl P3) => "promuevan" ;
    VP (Impf Ind Sg P1) => "promovía" ;--# notpresent
    VP (Impf Ind Sg P2) => "promovías" ;--# notpresent
    VP (Impf Ind Sg P3) => "promovía" ;--# notpresent
    VP (Impf Ind Pl P1) => "promovíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "promovíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "promovían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"promoviera" ; "promoviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"promovieras" ; "promovieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"promoviera" ; "promoviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"promoviéramos" ; "promoviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"promovierais" ; "promovieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"promovieran" ; "promoviesen"} ;--# notpresent
    VP (Pret Sg P1) => "promoví" ;--# notpresent
    VP (Pret Sg P2) => "promoviste" ;--# notpresent
    VP (Pret Sg P3) => "promovió" ;--# notpresent
    VP (Pret Pl P1) => "promovimos" ;--# notpresent
    VP (Pret Pl P2) => "promovisteis" ;--# notpresent
    VP (Pret Pl P3) => "promovieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "promoveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "promoverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "promoverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "promoveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "promoveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "promoverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "promoviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "promovieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "promoviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "promoviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "promoviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "promovieren" ;--# notpresent
    VP (Cond Sg P1) => "promovería" ;--# notpresent
    VP (Cond Sg P2) => "promoverías" ;--# notpresent
    VP (Cond Sg P3) => "promovería" ;--# notpresent
    VP (Cond Pl P1) => "promoveríamos" ;--# notpresent
    VP (Cond Pl P2) => "promoveríais" ;--# notpresent
    VP (Cond Pl P3) => "promoverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "promueve" ;
    VP (Imp Sg P3) => "promueva" ;
    VP (Imp Pl P1) => "promovamos" ;
    VP (Imp Pl P2) => "promoved" ;
    VP (Imp Pl P3) => "promuevan" ;
    VP (Pass Sg Masc) => "promovido" ;
    VP (Pass Sg Fem) => "promovida" ;
    VP (Pass Pl Masc) => "promovidos" ;
    VP (Pass Pl Fem) => "promovidas"
    }
  } ;

lin remoler_V = verboV 
 {s = table {
    VI Infn => "remoler" ;
    VI Ger => "remoliendo" ;
    VI Part => "remolido" ;
    VP (Pres Ind Sg P1) => "remuelo" ;
    VP (Pres Ind Sg P2) => "remueles" ;
    VP (Pres Ind Sg P3) => "remuele" ;
    VP (Pres Ind Pl P1) => "remolemos" ;
    VP (Pres Ind Pl P2) => "remoléis" ;
    VP (Pres Ind Pl P3) => "remuelen" ;
    VP (Pres Subj Sg P1) => "remuela" ;
    VP (Pres Subj Sg P2) => "remuelas" ;
    VP (Pres Subj Sg P3) => "remuela" ;
    VP (Pres Subj Pl P1) => "remolamos" ;
    VP (Pres Subj Pl P2) => "remoláis" ;
    VP (Pres Subj Pl P3) => "remuelan" ;
    VP (Impf Ind Sg P1) => "remolía" ;--# notpresent
    VP (Impf Ind Sg P2) => "remolías" ;--# notpresent
    VP (Impf Ind Sg P3) => "remolía" ;--# notpresent
    VP (Impf Ind Pl P1) => "remolíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remolíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remolían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remoliera" ; "remoliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remolieras" ; "remolieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remoliera" ; "remoliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remoliéramos" ; "remoliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remolierais" ; "remolieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remolieran" ; "remoliesen"} ;--# notpresent
    VP (Pret Sg P1) => "remolí" ;--# notpresent
    VP (Pret Sg P2) => "remoliste" ;--# notpresent
    VP (Pret Sg P3) => "remolió" ;--# notpresent
    VP (Pret Pl P1) => "remolimos" ;--# notpresent
    VP (Pret Pl P2) => "remolisteis" ;--# notpresent
    VP (Pret Pl P3) => "remolieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remoleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remolerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remolerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "remoleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remoleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remolerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remoliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "remolieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "remoliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "remoliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remoliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remolieren" ;--# notpresent
    VP (Cond Sg P1) => "remolería" ;--# notpresent
    VP (Cond Sg P2) => "remolerías" ;--# notpresent
    VP (Cond Sg P3) => "remolería" ;--# notpresent
    VP (Cond Pl P1) => "remoleríamos" ;--# notpresent
    VP (Cond Pl P2) => "remoleríais" ;--# notpresent
    VP (Cond Pl P3) => "remolerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remuele" ;
    VP (Imp Sg P3) => "remuela" ;
    VP (Imp Pl P1) => "remolamos" ;
    VP (Imp Pl P2) => "remoled" ;
    VP (Imp Pl P3) => "remuelan" ;
    VP (Pass Sg Masc) => "remolido" ;
    VP (Pass Sg Fem) => "remolida" ;
    VP (Pass Pl Masc) => "remolidos" ;
    VP (Pass Pl Fem) => "remolidas"
    }
  } ;

lin remover_V = verboV 
 {s = table {
    VI Infn => "remover" ;
    VI Ger => "removiendo" ;
    VI Part => "removido" ;
    VP (Pres Ind Sg P1) => "remuevo" ;
    VP (Pres Ind Sg P2) => "remueves" ;
    VP (Pres Ind Sg P3) => "remueve" ;
    VP (Pres Ind Pl P1) => "removemos" ;
    VP (Pres Ind Pl P2) => "removéis" ;
    VP (Pres Ind Pl P3) => "remueven" ;
    VP (Pres Subj Sg P1) => "remueva" ;
    VP (Pres Subj Sg P2) => "remuevas" ;
    VP (Pres Subj Sg P3) => "remueva" ;
    VP (Pres Subj Pl P1) => "removamos" ;
    VP (Pres Subj Pl P2) => "remováis" ;
    VP (Pres Subj Pl P3) => "remuevan" ;
    VP (Impf Ind Sg P1) => "removía" ;--# notpresent
    VP (Impf Ind Sg P2) => "removías" ;--# notpresent
    VP (Impf Ind Sg P3) => "removía" ;--# notpresent
    VP (Impf Ind Pl P1) => "removíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "removíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "removían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"removiera" ; "removiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"removieras" ; "removieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"removiera" ; "removiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"removiéramos" ; "removiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"removierais" ; "removieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"removieran" ; "removiesen"} ;--# notpresent
    VP (Pret Sg P1) => "removí" ;--# notpresent
    VP (Pret Sg P2) => "removiste" ;--# notpresent
    VP (Pret Sg P3) => "removió" ;--# notpresent
    VP (Pret Pl P1) => "removimos" ;--# notpresent
    VP (Pret Pl P2) => "removisteis" ;--# notpresent
    VP (Pret Pl P3) => "removieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "removeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "removerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "removerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "removeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "removeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "removerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "removiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "removieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "removiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "removiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "removiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "removieren" ;--# notpresent
    VP (Cond Sg P1) => "removería" ;--# notpresent
    VP (Cond Sg P2) => "removerías" ;--# notpresent
    VP (Cond Sg P3) => "removería" ;--# notpresent
    VP (Cond Pl P1) => "removeríamos" ;--# notpresent
    VP (Cond Pl P2) => "removeríais" ;--# notpresent
    VP (Cond Pl P3) => "removerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remueve" ;
    VP (Imp Sg P3) => "remueva" ;
    VP (Imp Pl P1) => "removamos" ;
    VP (Imp Pl P2) => "removed" ;
    VP (Imp Pl P3) => "remuevan" ;
    VP (Pass Sg Masc) => "removido" ;
    VP (Pass Sg Fem) => "removida" ;
    VP (Pass Pl Masc) => "removidos" ;
    VP (Pass Pl Fem) => "removidas"
    }
  } ;

lin rernorder_V = verboV 
 {s = table {
    VI Infn => "rernorder" ;
    VI Ger => "rernordiendo" ;
    VI Part => "rernordido" ;
    VP (Pres Ind Sg P1) => "rernuerdo" ;
    VP (Pres Ind Sg P2) => "rernuerdes" ;
    VP (Pres Ind Sg P3) => "rernuerde" ;
    VP (Pres Ind Pl P1) => "rernordemos" ;
    VP (Pres Ind Pl P2) => "rernordéis" ;
    VP (Pres Ind Pl P3) => "rernuerden" ;
    VP (Pres Subj Sg P1) => "rernuerda" ;
    VP (Pres Subj Sg P2) => "rernuerdas" ;
    VP (Pres Subj Sg P3) => "rernuerda" ;
    VP (Pres Subj Pl P1) => "rernordamos" ;
    VP (Pres Subj Pl P2) => "rernordáis" ;
    VP (Pres Subj Pl P3) => "rernuerdan" ;
    VP (Impf Ind Sg P1) => "rernordía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rernordías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rernordía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rernordíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rernordíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rernordían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rernordiera" ; "rernordiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rernordieras" ; "rernordieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rernordiera" ; "rernordiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rernordiéramos" ; "rernordiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rernordierais" ; "rernordieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rernordieran" ; "rernordiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rernordí" ;--# notpresent
    VP (Pret Sg P2) => "rernordiste" ;--# notpresent
    VP (Pret Sg P3) => "rernordió" ;--# notpresent
    VP (Pret Pl P1) => "rernordimos" ;--# notpresent
    VP (Pret Pl P2) => "rernordisteis" ;--# notpresent
    VP (Pret Pl P3) => "rernordieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rernorderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "rernorderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rernorderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rernorderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rernorderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rernorderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rernordiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rernordieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rernordiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rernordiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rernordiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rernordieren" ;--# notpresent
    VP (Cond Sg P1) => "rernordería" ;--# notpresent
    VP (Cond Sg P2) => "rernorderías" ;--# notpresent
    VP (Cond Sg P3) => "rernordería" ;--# notpresent
    VP (Cond Pl P1) => "rernorderíamos" ;--# notpresent
    VP (Cond Pl P2) => "rernorderíais" ;--# notpresent
    VP (Cond Pl P3) => "rernorderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rernuerde" ;
    VP (Imp Sg P3) => "rernuerda" ;
    VP (Imp Pl P1) => "rernordamos" ;
    VP (Imp Pl P2) => "rernorded" ;
    VP (Imp Pl P3) => "rernuerdan" ;
    VP (Pass Sg Masc) => "rernordido" ;
    VP (Pass Sg Fem) => "rernordida" ;
    VP (Pass Pl Masc) => "rernordidos" ;
    VP (Pass Pl Fem) => "rernordidas"
    }
  } ;

lin absolver_V = verboV 
 {s = table {
    VI Infn => "absolver" ;
    VI Ger => "absolviendo" ;
    VI Part => "absolvido" ;
    VP (Pres Ind Sg P1) => "absuelvo" ;
    VP (Pres Ind Sg P2) => "absuelves" ;
    VP (Pres Ind Sg P3) => "absuelve" ;
    VP (Pres Ind Pl P1) => "absolvemos" ;
    VP (Pres Ind Pl P2) => "absolvéis" ;
    VP (Pres Ind Pl P3) => "absuelven" ;
    VP (Pres Subj Sg P1) => "absuelva" ;
    VP (Pres Subj Sg P2) => "absuelvas" ;
    VP (Pres Subj Sg P3) => "absuelva" ;
    VP (Pres Subj Pl P1) => "absolvamos" ;
    VP (Pres Subj Pl P2) => "absolváis" ;
    VP (Pres Subj Pl P3) => "absuelvan" ;
    VP (Impf Ind Sg P1) => "absolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "absolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "absolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "absolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "absolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "absolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"absolviera" ; "absolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"absolvieras" ; "absolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"absolviera" ; "absolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"absolviéramos" ; "absolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"absolvierais" ; "absolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"absolvieran" ; "absolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "absolví" ;--# notpresent
    VP (Pret Sg P2) => "absolviste" ;--# notpresent
    VP (Pret Sg P3) => "absolvió" ;--# notpresent
    VP (Pret Pl P1) => "absolvimos" ;--# notpresent
    VP (Pret Pl P2) => "absolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "absolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "absolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "absolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "absolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "absolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "absolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "absolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "absolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "absolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "absolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "absolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "absolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "absolvieren" ;--# notpresent
    VP (Cond Sg P1) => "absolvería" ;--# notpresent
    VP (Cond Sg P2) => "absolverías" ;--# notpresent
    VP (Cond Sg P3) => "absolvería" ;--# notpresent
    VP (Cond Pl P1) => "absolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "absolveríais" ;--# notpresent
    VP (Cond Pl P3) => "absolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "absuelve" ;
    VP (Imp Sg P3) => "absuelva" ;
    VP (Imp Pl P1) => "absolvamos" ;
    VP (Imp Pl P2) => "absolved" ;
    VP (Imp Pl P3) => "absuelvan" ;
    VP (Pass Sg Masc) => "absolvido" ;
    VP (Pass Sg Fem) => "absolvida" ;
    VP (Pass Pl Masc) => "absolvidos" ;
    VP (Pass Pl Fem) => "absolvidas"
    }
  } ;

lin desenvolver_V = verboV 
 {s = table {
    VI Infn => "desenvolver" ;
    VI Ger => "desenvolviendo" ;
    VI Part => "desenvolvido" ;
    VP (Pres Ind Sg P1) => "desenvuelvo" ;
    VP (Pres Ind Sg P2) => "desenvuelves" ;
    VP (Pres Ind Sg P3) => "desenvuelve" ;
    VP (Pres Ind Pl P1) => "desenvolvemos" ;
    VP (Pres Ind Pl P2) => "desenvolvéis" ;
    VP (Pres Ind Pl P3) => "desenvuelven" ;
    VP (Pres Subj Sg P1) => "desenvuelva" ;
    VP (Pres Subj Sg P2) => "desenvuelvas" ;
    VP (Pres Subj Sg P3) => "desenvuelva" ;
    VP (Pres Subj Pl P1) => "desenvolvamos" ;
    VP (Pres Subj Pl P2) => "desenvolváis" ;
    VP (Pres Subj Pl P3) => "desenvuelvan" ;
    VP (Impf Ind Sg P1) => "desenvolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desenvolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desenvolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desenvolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desenvolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desenvolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desenvolviera" ; "desenvolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desenvolvieras" ; "desenvolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desenvolviera" ; "desenvolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desenvolviéramos" ; "desenvolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desenvolvierais" ; "desenvolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desenvolvieran" ; "desenvolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "desenvolví" ;--# notpresent
    VP (Pret Sg P2) => "desenvolviste" ;--# notpresent
    VP (Pret Sg P3) => "desenvolvió" ;--# notpresent
    VP (Pret Pl P1) => "desenvolvimos" ;--# notpresent
    VP (Pret Pl P2) => "desenvolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "desenvolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desenvolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desenvolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desenvolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desenvolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desenvolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desenvolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desenvolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desenvolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desenvolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desenvolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desenvolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desenvolvieren" ;--# notpresent
    VP (Cond Sg P1) => "desenvolvería" ;--# notpresent
    VP (Cond Sg P2) => "desenvolverías" ;--# notpresent
    VP (Cond Sg P3) => "desenvolvería" ;--# notpresent
    VP (Cond Pl P1) => "desenvolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "desenvolveríais" ;--# notpresent
    VP (Cond Pl P3) => "desenvolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desenvuelve" ;
    VP (Imp Sg P3) => "desenvuelva" ;
    VP (Imp Pl P1) => "desenvolvamos" ;
    VP (Imp Pl P2) => "desenvolved" ;
    VP (Imp Pl P3) => "desenvuelvan" ;
    VP (Pass Sg Masc) => "desenvolvido" ;
    VP (Pass Sg Fem) => "desenvolvida" ;
    VP (Pass Pl Masc) => "desenvolvidos" ;
    VP (Pass Pl Fem) => "desenvolvidas"
    }
  } ;

lin desvolver_V = verboV 
 {s = table {
    VI Infn => "desvolver" ;
    VI Ger => "desvolviendo" ;
    VI Part => "desvolvido" ;
    VP (Pres Ind Sg P1) => "desvuelvo" ;
    VP (Pres Ind Sg P2) => "desvuelves" ;
    VP (Pres Ind Sg P3) => "desvuelve" ;
    VP (Pres Ind Pl P1) => "desvolvemos" ;
    VP (Pres Ind Pl P2) => "desvolvéis" ;
    VP (Pres Ind Pl P3) => "desvuelven" ;
    VP (Pres Subj Sg P1) => "desvuelva" ;
    VP (Pres Subj Sg P2) => "desvuelvas" ;
    VP (Pres Subj Sg P3) => "desvuelva" ;
    VP (Pres Subj Pl P1) => "desvolvamos" ;
    VP (Pres Subj Pl P2) => "desvolváis" ;
    VP (Pres Subj Pl P3) => "desvuelvan" ;
    VP (Impf Ind Sg P1) => "desvolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desvolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desvolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desvolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desvolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desvolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desvolviera" ; "desvolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desvolvieras" ; "desvolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desvolviera" ; "desvolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desvolviéramos" ; "desvolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desvolvierais" ; "desvolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desvolvieran" ; "desvolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "desvolví" ;--# notpresent
    VP (Pret Sg P2) => "desvolviste" ;--# notpresent
    VP (Pret Sg P3) => "desvolvió" ;--# notpresent
    VP (Pret Pl P1) => "desvolvimos" ;--# notpresent
    VP (Pret Pl P2) => "desvolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "desvolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desvolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desvolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desvolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desvolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desvolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desvolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desvolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desvolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desvolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desvolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desvolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desvolvieren" ;--# notpresent
    VP (Cond Sg P1) => "desvolvería" ;--# notpresent
    VP (Cond Sg P2) => "desvolverías" ;--# notpresent
    VP (Cond Sg P3) => "desvolvería" ;--# notpresent
    VP (Cond Pl P1) => "desvolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "desvolveríais" ;--# notpresent
    VP (Cond Pl P3) => "desvolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desvuelve" ;
    VP (Imp Sg P3) => "desvuelva" ;
    VP (Imp Pl P1) => "desvolvamos" ;
    VP (Imp Pl P2) => "desvolved" ;
    VP (Imp Pl P3) => "desvuelvan" ;
    VP (Pass Sg Masc) => "desvolvido" ;
    VP (Pass Sg Fem) => "desvolvida" ;
    VP (Pass Pl Masc) => "desvolvidos" ;
    VP (Pass Pl Fem) => "desvolvidas"
    }
  } ;

lin devolver_V = verboV 
 {s = table {
    VI Infn => "devolver" ;
    VI Ger => "devolviendo" ;
    VI Part => "devolvido" ;
    VP (Pres Ind Sg P1) => "devuelvo" ;
    VP (Pres Ind Sg P2) => "devuelves" ;
    VP (Pres Ind Sg P3) => "devuelve" ;
    VP (Pres Ind Pl P1) => "devolvemos" ;
    VP (Pres Ind Pl P2) => "devolvéis" ;
    VP (Pres Ind Pl P3) => "devuelven" ;
    VP (Pres Subj Sg P1) => "devuelva" ;
    VP (Pres Subj Sg P2) => "devuelvas" ;
    VP (Pres Subj Sg P3) => "devuelva" ;
    VP (Pres Subj Pl P1) => "devolvamos" ;
    VP (Pres Subj Pl P2) => "devolváis" ;
    VP (Pres Subj Pl P3) => "devuelvan" ;
    VP (Impf Ind Sg P1) => "devolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "devolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "devolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "devolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "devolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "devolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"devolviera" ; "devolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"devolvieras" ; "devolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"devolviera" ; "devolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"devolviéramos" ; "devolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"devolvierais" ; "devolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"devolvieran" ; "devolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "devolví" ;--# notpresent
    VP (Pret Sg P2) => "devolviste" ;--# notpresent
    VP (Pret Sg P3) => "devolvió" ;--# notpresent
    VP (Pret Pl P1) => "devolvimos" ;--# notpresent
    VP (Pret Pl P2) => "devolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "devolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "devolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "devolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "devolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "devolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "devolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "devolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "devolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "devolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "devolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "devolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "devolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "devolvieren" ;--# notpresent
    VP (Cond Sg P1) => "devolvería" ;--# notpresent
    VP (Cond Sg P2) => "devolverías" ;--# notpresent
    VP (Cond Sg P3) => "devolvería" ;--# notpresent
    VP (Cond Pl P1) => "devolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "devolveríais" ;--# notpresent
    VP (Cond Pl P3) => "devolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "devuelve" ;
    VP (Imp Sg P3) => "devuelva" ;
    VP (Imp Pl P1) => "devolvamos" ;
    VP (Imp Pl P2) => "devolved" ;
    VP (Imp Pl P3) => "devuelvan" ;
    VP (Pass Sg Masc) => "devolvido" ;
    VP (Pass Sg Fem) => "devolvida" ;
    VP (Pass Pl Masc) => "devolvidos" ;
    VP (Pass Pl Fem) => "devolvidas"
    }
  } ;

lin disolver_V = verboV 
 {s = table {
    VI Infn => "disolver" ;
    VI Ger => "disolviendo" ;
    VI Part => "disolvido" ;
    VP (Pres Ind Sg P1) => "disuelvo" ;
    VP (Pres Ind Sg P2) => "disuelves" ;
    VP (Pres Ind Sg P3) => "disuelve" ;
    VP (Pres Ind Pl P1) => "disolvemos" ;
    VP (Pres Ind Pl P2) => "disolvéis" ;
    VP (Pres Ind Pl P3) => "disuelven" ;
    VP (Pres Subj Sg P1) => "disuelva" ;
    VP (Pres Subj Sg P2) => "disuelvas" ;
    VP (Pres Subj Sg P3) => "disuelva" ;
    VP (Pres Subj Pl P1) => "disolvamos" ;
    VP (Pres Subj Pl P2) => "disolváis" ;
    VP (Pres Subj Pl P3) => "disuelvan" ;
    VP (Impf Ind Sg P1) => "disolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "disolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "disolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "disolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "disolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "disolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"disolviera" ; "disolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"disolvieras" ; "disolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"disolviera" ; "disolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"disolviéramos" ; "disolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"disolvierais" ; "disolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"disolvieran" ; "disolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "disolví" ;--# notpresent
    VP (Pret Sg P2) => "disolviste" ;--# notpresent
    VP (Pret Sg P3) => "disolvió" ;--# notpresent
    VP (Pret Pl P1) => "disolvimos" ;--# notpresent
    VP (Pret Pl P2) => "disolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "disolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "disolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "disolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "disolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "disolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "disolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "disolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "disolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "disolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "disolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "disolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "disolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "disolvieren" ;--# notpresent
    VP (Cond Sg P1) => "disolvería" ;--# notpresent
    VP (Cond Sg P2) => "disolverías" ;--# notpresent
    VP (Cond Sg P3) => "disolvería" ;--# notpresent
    VP (Cond Pl P1) => "disolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "disolveríais" ;--# notpresent
    VP (Cond Pl P3) => "disolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "disuelve" ;
    VP (Imp Sg P3) => "disuelva" ;
    VP (Imp Pl P1) => "disolvamos" ;
    VP (Imp Pl P2) => "disolved" ;
    VP (Imp Pl P3) => "disuelvan" ;
    VP (Pass Sg Masc) => "disolvido" ;
    VP (Pass Sg Fem) => "disolvida" ;
    VP (Pass Pl Masc) => "disolvidos" ;
    VP (Pass Pl Fem) => "disolvidas"
    }
  } ;

lin ensolver_V = verboV 
 {s = table {
    VI Infn => "ensolver" ;
    VI Ger => "ensolviendo" ;
    VI Part => "ensolvido" ;
    VP (Pres Ind Sg P1) => "ensuelvo" ;
    VP (Pres Ind Sg P2) => "ensuelves" ;
    VP (Pres Ind Sg P3) => "ensuelve" ;
    VP (Pres Ind Pl P1) => "ensolvemos" ;
    VP (Pres Ind Pl P2) => "ensolvéis" ;
    VP (Pres Ind Pl P3) => "ensuelven" ;
    VP (Pres Subj Sg P1) => "ensuelva" ;
    VP (Pres Subj Sg P2) => "ensuelvas" ;
    VP (Pres Subj Sg P3) => "ensuelva" ;
    VP (Pres Subj Pl P1) => "ensolvamos" ;
    VP (Pres Subj Pl P2) => "ensolváis" ;
    VP (Pres Subj Pl P3) => "ensuelvan" ;
    VP (Impf Ind Sg P1) => "ensolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensolviera" ; "ensolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensolvieras" ; "ensolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensolviera" ; "ensolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensolviéramos" ; "ensolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensolvierais" ; "ensolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensolvieran" ; "ensolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensolví" ;--# notpresent
    VP (Pret Sg P2) => "ensolviste" ;--# notpresent
    VP (Pret Sg P3) => "ensolvió" ;--# notpresent
    VP (Pret Pl P1) => "ensolvimos" ;--# notpresent
    VP (Pret Pl P2) => "ensolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensolvieren" ;--# notpresent
    VP (Cond Sg P1) => "ensolvería" ;--# notpresent
    VP (Cond Sg P2) => "ensolverías" ;--# notpresent
    VP (Cond Sg P3) => "ensolvería" ;--# notpresent
    VP (Cond Pl P1) => "ensolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensolveríais" ;--# notpresent
    VP (Cond Pl P3) => "ensolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensuelve" ;
    VP (Imp Sg P3) => "ensuelva" ;
    VP (Imp Pl P1) => "ensolvamos" ;
    VP (Imp Pl P2) => "ensolved" ;
    VP (Imp Pl P3) => "ensuelvan" ;
    VP (Pass Sg Masc) => "ensolvido" ;
    VP (Pass Sg Fem) => "ensolvida" ;
    VP (Pass Pl Masc) => "ensolvidos" ;
    VP (Pass Pl Fem) => "ensolvidas"
    }
  } ;

lin envolver_V = verboV 
 {s = table {
    VI Infn => "envolver" ;
    VI Ger => "envolviendo" ;
    VI Part => "envolvido" ;
    VP (Pres Ind Sg P1) => "envuelvo" ;
    VP (Pres Ind Sg P2) => "envuelves" ;
    VP (Pres Ind Sg P3) => "envuelve" ;
    VP (Pres Ind Pl P1) => "envolvemos" ;
    VP (Pres Ind Pl P2) => "envolvéis" ;
    VP (Pres Ind Pl P3) => "envuelven" ;
    VP (Pres Subj Sg P1) => "envuelva" ;
    VP (Pres Subj Sg P2) => "envuelvas" ;
    VP (Pres Subj Sg P3) => "envuelva" ;
    VP (Pres Subj Pl P1) => "envolvamos" ;
    VP (Pres Subj Pl P2) => "envolváis" ;
    VP (Pres Subj Pl P3) => "envuelvan" ;
    VP (Impf Ind Sg P1) => "envolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "envolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "envolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "envolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "envolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "envolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"envolviera" ; "envolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"envolvieras" ; "envolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"envolviera" ; "envolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"envolviéramos" ; "envolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"envolvierais" ; "envolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"envolvieran" ; "envolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "envolví" ;--# notpresent
    VP (Pret Sg P2) => "envolviste" ;--# notpresent
    VP (Pret Sg P3) => "envolvió" ;--# notpresent
    VP (Pret Pl P1) => "envolvimos" ;--# notpresent
    VP (Pret Pl P2) => "envolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "envolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "envolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "envolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "envolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "envolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "envolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "envolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "envolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "envolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "envolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "envolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "envolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "envolvieren" ;--# notpresent
    VP (Cond Sg P1) => "envolvería" ;--# notpresent
    VP (Cond Sg P2) => "envolverías" ;--# notpresent
    VP (Cond Sg P3) => "envolvería" ;--# notpresent
    VP (Cond Pl P1) => "envolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "envolveríais" ;--# notpresent
    VP (Cond Pl P3) => "envolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "envuelve" ;
    VP (Imp Sg P3) => "envuelva" ;
    VP (Imp Pl P1) => "envolvamos" ;
    VP (Imp Pl P2) => "envolved" ;
    VP (Imp Pl P3) => "envuelvan" ;
    VP (Pass Sg Masc) => "envolvido" ;
    VP (Pass Sg Fem) => "envolvida" ;
    VP (Pass Pl Masc) => "envolvidos" ;
    VP (Pass Pl Fem) => "envolvidas"
    }
  } ;

lin resolver_V = verboV 
 {s = table {
    VI Infn => "resolver" ;
    VI Ger => "resolviendo" ;
    VI Part => "resolvido" ;
    VP (Pres Ind Sg P1) => "resuelvo" ;
    VP (Pres Ind Sg P2) => "resuelves" ;
    VP (Pres Ind Sg P3) => "resuelve" ;
    VP (Pres Ind Pl P1) => "resolvemos" ;
    VP (Pres Ind Pl P2) => "resolvéis" ;
    VP (Pres Ind Pl P3) => "resuelven" ;
    VP (Pres Subj Sg P1) => "resuelva" ;
    VP (Pres Subj Sg P2) => "resuelvas" ;
    VP (Pres Subj Sg P3) => "resuelva" ;
    VP (Pres Subj Pl P1) => "resolvamos" ;
    VP (Pres Subj Pl P2) => "resolváis" ;
    VP (Pres Subj Pl P3) => "resuelvan" ;
    VP (Impf Ind Sg P1) => "resolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "resolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "resolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "resolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resolviera" ; "resolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resolvieras" ; "resolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resolviera" ; "resolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resolviéramos" ; "resolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resolvierais" ; "resolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resolvieran" ; "resolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "resolví" ;--# notpresent
    VP (Pret Sg P2) => "resolviste" ;--# notpresent
    VP (Pret Sg P3) => "resolvió" ;--# notpresent
    VP (Pret Pl P1) => "resolvimos" ;--# notpresent
    VP (Pret Pl P2) => "resolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "resolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "resolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resolvieren" ;--# notpresent
    VP (Cond Sg P1) => "resolvería" ;--# notpresent
    VP (Cond Sg P2) => "resolverías" ;--# notpresent
    VP (Cond Sg P3) => "resolvería" ;--# notpresent
    VP (Cond Pl P1) => "resolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "resolveríais" ;--# notpresent
    VP (Cond Pl P3) => "resolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resuelve" ;
    VP (Imp Sg P3) => "resuelva" ;
    VP (Imp Pl P1) => "resolvamos" ;
    VP (Imp Pl P2) => "resolved" ;
    VP (Imp Pl P3) => "resuelvan" ;
    VP (Pass Sg Masc) => "resolvido" ;
    VP (Pass Sg Fem) => "resolvida" ;
    VP (Pass Pl Masc) => "resolvidos" ;
    VP (Pass Pl Fem) => "resolvidas"
    }
  } ;

lin revolver_V = verboV 
 {s = table {
    VI Infn => "revolver" ;
    VI Ger => "revolviendo" ;
    VI Part => "revolvido" ;
    VP (Pres Ind Sg P1) => "revuelvo" ;
    VP (Pres Ind Sg P2) => "revuelves" ;
    VP (Pres Ind Sg P3) => "revuelve" ;
    VP (Pres Ind Pl P1) => "revolvemos" ;
    VP (Pres Ind Pl P2) => "revolvéis" ;
    VP (Pres Ind Pl P3) => "revuelven" ;
    VP (Pres Subj Sg P1) => "revuelva" ;
    VP (Pres Subj Sg P2) => "revuelvas" ;
    VP (Pres Subj Sg P3) => "revuelva" ;
    VP (Pres Subj Pl P1) => "revolvamos" ;
    VP (Pres Subj Pl P2) => "revolváis" ;
    VP (Pres Subj Pl P3) => "revuelvan" ;
    VP (Impf Ind Sg P1) => "revolvía" ;--# notpresent
    VP (Impf Ind Sg P2) => "revolvías" ;--# notpresent
    VP (Impf Ind Sg P3) => "revolvía" ;--# notpresent
    VP (Impf Ind Pl P1) => "revolvíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revolvíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revolvían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revolviera" ; "revolviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revolvieras" ; "revolvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revolviera" ; "revolviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revolviéramos" ; "revolviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revolvierais" ; "revolvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revolvieran" ; "revolviesen"} ;--# notpresent
    VP (Pret Sg P1) => "revolví" ;--# notpresent
    VP (Pret Sg P2) => "revolviste" ;--# notpresent
    VP (Pret Sg P3) => "revolvió" ;--# notpresent
    VP (Pret Pl P1) => "revolvimos" ;--# notpresent
    VP (Pret Pl P2) => "revolvisteis" ;--# notpresent
    VP (Pret Pl P3) => "revolvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revolveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revolverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revolverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "revolveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revolveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revolverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revolviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revolvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "revolviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "revolviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revolviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revolvieren" ;--# notpresent
    VP (Cond Sg P1) => "revolvería" ;--# notpresent
    VP (Cond Sg P2) => "revolverías" ;--# notpresent
    VP (Cond Sg P3) => "revolvería" ;--# notpresent
    VP (Cond Pl P1) => "revolveríamos" ;--# notpresent
    VP (Cond Pl P2) => "revolveríais" ;--# notpresent
    VP (Cond Pl P3) => "revolverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revuelve" ;
    VP (Imp Sg P3) => "revuelva" ;
    VP (Imp Pl P1) => "revolvamos" ;
    VP (Imp Pl P2) => "revolved" ;
    VP (Imp Pl P3) => "revuelvan" ;
    VP (Pass Sg Masc) => "revolvido" ;
    VP (Pass Sg Fem) => "revolvida" ;
    VP (Pass Pl Masc) => "revolvidos" ;
    VP (Pass Pl Fem) => "revolvidas"
    }
  } ;

lin coextenderse_V = reflVerboV 
 {s = table {
    VI Infn => "coextender" ;
    VI Ger => "coextendiendo" ;
    VI Part => "coextendido" ;
    VP (Pres Ind Sg P1) => "coextiendo" ;
    VP (Pres Ind Sg P2) => "coextiendes" ;
    VP (Pres Ind Sg P3) => "coextiende" ;
    VP (Pres Ind Pl P1) => "coextendemos" ;
    VP (Pres Ind Pl P2) => "coextendéis" ;
    VP (Pres Ind Pl P3) => "coextienden" ;
    VP (Pres Subj Sg P1) => "coextienda" ;
    VP (Pres Subj Sg P2) => "coextiendas" ;
    VP (Pres Subj Sg P3) => "coextienda" ;
    VP (Pres Subj Pl P1) => "coextendamos" ;
    VP (Pres Subj Pl P2) => "coextendáis" ;
    VP (Pres Subj Pl P3) => "coextiendan" ;
    VP (Impf Ind Sg P1) => "coextendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "coextendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "coextendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "coextendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "coextendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "coextendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"coextendiera" ; "coextendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"coextendieras" ; "coextendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"coextendiera" ; "coextendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coextendiéramos" ; "coextendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"coextendierais" ; "coextendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"coextendieran" ; "coextendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "coextendí" ;--# notpresent
    VP (Pret Sg P2) => "coextendiste" ;--# notpresent
    VP (Pret Sg P3) => "coextendió" ;--# notpresent
    VP (Pret Pl P1) => "coextendimos" ;--# notpresent
    VP (Pret Pl P2) => "coextendisteis" ;--# notpresent
    VP (Pret Pl P3) => "coextendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "coextenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "coextenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "coextenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "coextenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "coextenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "coextenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "coextendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "coextendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "coextendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "coextendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "coextendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "coextendieren" ;--# notpresent
    VP (Cond Sg P1) => "coextendería" ;--# notpresent
    VP (Cond Sg P2) => "coextenderías" ;--# notpresent
    VP (Cond Sg P3) => "coextendería" ;--# notpresent
    VP (Cond Pl P1) => "coextenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "coextenderíais" ;--# notpresent
    VP (Cond Pl P3) => "coextenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "coextiende" ;
    VP (Imp Sg P3) => "coextienda" ;
    VP (Imp Pl P1) => "coextendamos" ;
    VP (Imp Pl P2) => "coextended" ;
    VP (Imp Pl P3) => "coextiendan" ;
    VP (Pass Sg Masc) => "coextendido" ;
    VP (Pass Sg Fem) => "coextendida" ;
    VP (Pass Pl Masc) => "coextendidos" ;
    VP (Pass Pl Fem) => "coextendidas"
    }
  } ;

lin desentenderse_V = reflVerboV 
 {s = table {
    VI Infn => "desentender" ;
    VI Ger => "desentendiendo" ;
    VI Part => "desentendido" ;
    VP (Pres Ind Sg P1) => "desentiendo" ;
    VP (Pres Ind Sg P2) => "desentiendes" ;
    VP (Pres Ind Sg P3) => "desentiende" ;
    VP (Pres Ind Pl P1) => "desentendemos" ;
    VP (Pres Ind Pl P2) => "desentendéis" ;
    VP (Pres Ind Pl P3) => "desentienden" ;
    VP (Pres Subj Sg P1) => "desentienda" ;
    VP (Pres Subj Sg P2) => "desentiendas" ;
    VP (Pres Subj Sg P3) => "desentienda" ;
    VP (Pres Subj Pl P1) => "desentendamos" ;
    VP (Pres Subj Pl P2) => "desentendáis" ;
    VP (Pres Subj Pl P3) => "desentiendan" ;
    VP (Impf Ind Sg P1) => "desentendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desentendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desentendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desentendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desentendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desentendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desentendiera" ; "desentendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desentendieras" ; "desentendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desentendiera" ; "desentendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desentendiéramos" ; "desentendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desentendierais" ; "desentendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desentendieran" ; "desentendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desentendí" ;--# notpresent
    VP (Pret Sg P2) => "desentendiste" ;--# notpresent
    VP (Pret Sg P3) => "desentendió" ;--# notpresent
    VP (Pret Pl P1) => "desentendimos" ;--# notpresent
    VP (Pret Pl P2) => "desentendisteis" ;--# notpresent
    VP (Pret Pl P3) => "desentendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desentenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "desentenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desentenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desentenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desentenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desentenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desentendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desentendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desentendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desentendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desentendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desentendieren" ;--# notpresent
    VP (Cond Sg P1) => "desentendería" ;--# notpresent
    VP (Cond Sg P2) => "desentenderías" ;--# notpresent
    VP (Cond Sg P3) => "desentendería" ;--# notpresent
    VP (Cond Pl P1) => "desentenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "desentenderíais" ;--# notpresent
    VP (Cond Pl P3) => "desentenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desentiende" ;
    VP (Imp Sg P3) => "desentienda" ;
    VP (Imp Pl P1) => "desentendamos" ;
    VP (Imp Pl P2) => "desentended" ;
    VP (Imp Pl P3) => "desentiendan" ;
    VP (Pass Sg Masc) => "desentendido" ;
    VP (Pass Sg Fem) => "desentendida" ;
    VP (Pass Pl Masc) => "desentendidos" ;
    VP (Pass Pl Fem) => "desentendidas"
    }
  } ;

lin sobreverterse_V = reflVerboV 
 {s = table {
    VI Infn => "sobreverter" ;
    VI Ger => "sobrevertiendo" ;
    VI Part => "sobrevertido" ;
    VP (Pres Ind Sg P1) => "sobrevierto" ;
    VP (Pres Ind Sg P2) => "sobreviertes" ;
    VP (Pres Ind Sg P3) => "sobrevierte" ;
    VP (Pres Ind Pl P1) => "sobrevertemos" ;
    VP (Pres Ind Pl P2) => "sobrevertéis" ;
    VP (Pres Ind Pl P3) => "sobrevierten" ;
    VP (Pres Subj Sg P1) => "sobrevierta" ;
    VP (Pres Subj Sg P2) => "sobreviertas" ;
    VP (Pres Subj Sg P3) => "sobrevierta" ;
    VP (Pres Subj Pl P1) => "sobrevertamos" ;
    VP (Pres Subj Pl P2) => "sobrevertáis" ;
    VP (Pres Subj Pl P3) => "sobreviertan" ;
    VP (Impf Ind Sg P1) => "sobrevertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrevertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrevertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrevertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrevertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrevertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrevertiera" ; "sobrevertiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrevertieras" ; "sobrevertieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrevertiera" ; "sobrevertiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrevertiéramos" ; "sobrevertiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrevertierais" ; "sobrevertieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrevertieran" ; "sobrevertiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrevertí" ;--# notpresent
    VP (Pret Sg P2) => "sobrevertiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrevertió" ;--# notpresent
    VP (Pret Pl P1) => "sobrevertimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrevertisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrevertieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobreverteré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobreverterás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobreverterá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobreverteremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobreverteréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobreverterán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrevertiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrevertieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrevertiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrevertiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrevertiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrevertieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrevertería" ;--# notpresent
    VP (Cond Sg P2) => "sobreverterías" ;--# notpresent
    VP (Cond Sg P3) => "sobrevertería" ;--# notpresent
    VP (Cond Pl P1) => "sobreverteríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobreverteríais" ;--# notpresent
    VP (Cond Pl P3) => "sobreverterían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrevierte" ;
    VP (Imp Sg P3) => "sobrevierta" ;
    VP (Imp Pl P1) => "sobrevertamos" ;
    VP (Imp Pl P2) => "sobreverted" ;
    VP (Imp Pl P3) => "sobreviertan" ;
    VP (Pass Sg Masc) => "sobrevertido" ;
    VP (Pass Sg Fem) => "sobrevertida" ;
    VP (Pass Pl Masc) => "sobrevertidos" ;
    VP (Pass Pl Fem) => "sobrevertidas"
    }
  } ;

lin condolerse_V = reflVerboV 
 {s = table {
    VI Infn => "condoler" ;
    VI Ger => "condoliendo" ;
    VI Part => "condolido" ;
    VP (Pres Ind Sg P1) => "conduelo" ;
    VP (Pres Ind Sg P2) => "condueles" ;
    VP (Pres Ind Sg P3) => "conduele" ;
    VP (Pres Ind Pl P1) => "condolemos" ;
    VP (Pres Ind Pl P2) => "condoléis" ;
    VP (Pres Ind Pl P3) => "conduelen" ;
    VP (Pres Subj Sg P1) => "conduela" ;
    VP (Pres Subj Sg P2) => "conduelas" ;
    VP (Pres Subj Sg P3) => "conduela" ;
    VP (Pres Subj Pl P1) => "condolamos" ;
    VP (Pres Subj Pl P2) => "condoláis" ;
    VP (Pres Subj Pl P3) => "conduelan" ;
    VP (Impf Ind Sg P1) => "condolía" ;--# notpresent
    VP (Impf Ind Sg P2) => "condolías" ;--# notpresent
    VP (Impf Ind Sg P3) => "condolía" ;--# notpresent
    VP (Impf Ind Pl P1) => "condolíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "condolíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "condolían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"condoliera" ; "condoliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"condolieras" ; "condolieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"condoliera" ; "condoliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"condoliéramos" ; "condoliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"condolierais" ; "condolieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"condolieran" ; "condoliesen"} ;--# notpresent
    VP (Pret Sg P1) => "condolí" ;--# notpresent
    VP (Pret Sg P2) => "condoliste" ;--# notpresent
    VP (Pret Sg P3) => "condolió" ;--# notpresent
    VP (Pret Pl P1) => "condolimos" ;--# notpresent
    VP (Pret Pl P2) => "condolisteis" ;--# notpresent
    VP (Pret Pl P3) => "condolieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "condoleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "condolerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "condolerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "condoleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "condoleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "condolerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "condoliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "condolieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "condoliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "condoliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "condoliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "condolieren" ;--# notpresent
    VP (Cond Sg P1) => "condolería" ;--# notpresent
    VP (Cond Sg P2) => "condolerías" ;--# notpresent
    VP (Cond Sg P3) => "condolería" ;--# notpresent
    VP (Cond Pl P1) => "condoleríamos" ;--# notpresent
    VP (Cond Pl P2) => "condoleríais" ;--# notpresent
    VP (Cond Pl P3) => "condolerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "conduele" ;
    VP (Imp Sg P3) => "conduela" ;
    VP (Imp Pl P1) => "condolamos" ;
    VP (Imp Pl P2) => "condoled" ;
    VP (Imp Pl P3) => "conduelan" ;
    VP (Pass Sg Masc) => "condolido" ;
    VP (Pass Sg Fem) => "condolida" ;
    VP (Pass Pl Masc) => "condolidos" ;
    VP (Pass Pl Fem) => "condolidas"
    }
  } ;

lin ahincar_V = verboV 
 {s = table {
    VI Infn => "ahincar" ;
    VI Ger => "ahincando" ;
    VI Part => "ahincado" ;
    VP (Pres Ind Sg P1) => "ahínco" ;
    VP (Pres Ind Sg P2) => "ahíncas" ;
    VP (Pres Ind Sg P3) => "ahínca" ;
    VP (Pres Ind Pl P1) => "ahincamos" ;
    VP (Pres Ind Pl P2) => "ahincáis" ;
    VP (Pres Ind Pl P3) => "ahíncan" ;
    VP (Pres Subj Sg P1) => "ahínque" ;
    VP (Pres Subj Sg P2) => "ahínques" ;
    VP (Pres Subj Sg P3) => "ahínque" ;
    VP (Pres Subj Pl P1) => "ahinquemos" ;
    VP (Pres Subj Pl P2) => "ahinquéis" ;
    VP (Pres Subj Pl P3) => "ahínquen" ;
    VP (Impf Ind Sg P1) => "ahincaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ahincabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "ahincaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "ahincábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ahincabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ahincaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ahincara" ; "ahincase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ahincaras" ; "ahincases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ahincara" ; "ahincase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ahincáramos" ; "ahincásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ahincarais" ; "ahincaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ahincaran" ; "ahincasen"} ;--# notpresent
    VP (Pret Sg P1) => "ahinqué" ;--# notpresent
    VP (Pret Sg P2) => "ahincaste" ;--# notpresent
    VP (Pret Sg P3) => "ahincó" ;--# notpresent
    VP (Pret Pl P1) => "ahincamos" ;--# notpresent
    VP (Pret Pl P2) => "ahincasteis" ;--# notpresent
    VP (Pret Pl P3) => "ahincaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ahincaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ahincarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ahincará" ;--# notpresent
    VP (Fut Ind Pl P1) => "ahincaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ahincaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ahincarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ahincare" ;--# notpresent
    VP (Fut Subj Sg P2) => "ahincares" ;--# notpresent
    VP (Fut Subj Sg P3) => "ahincare" ;--# notpresent
    VP (Fut Subj Pl P1) => "ahincáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ahincareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ahincaren" ;--# notpresent
    VP (Cond Sg P1) => "ahincaría" ;--# notpresent
    VP (Cond Sg P2) => "ahincarías" ;--# notpresent
    VP (Cond Sg P3) => "ahincaría" ;--# notpresent
    VP (Cond Pl P1) => "ahincaríamos" ;--# notpresent
    VP (Cond Pl P2) => "ahincaríais" ;--# notpresent
    VP (Cond Pl P3) => "ahincarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ahínca" ;
    VP (Imp Sg P3) => "ahínque" ;
    VP (Imp Pl P1) => "ahinquemos" ;
    VP (Imp Pl P2) => "ahincad" ;
    VP (Imp Pl P3) => "ahínquen" ;
    VP (Pass Sg Masc) => "ahincado" ;
    VP (Pass Sg Fem) => "ahincada" ;
    VP (Pass Pl Masc) => "ahincados" ;
    VP (Pass Pl Fem) => "ahincadas"
    }
  } ;

lin arrusticar_V = verboV 
 {s = table {
    VI Infn => "arrusticar" ;
    VI Ger => "arrusticando" ;
    VI Part => "arrusticado" ;
    VP (Pres Ind Sg P1) => "arrustíco" ;
    VP (Pres Ind Sg P2) => "arrustícas" ;
    VP (Pres Ind Sg P3) => "arrustíca" ;
    VP (Pres Ind Pl P1) => "arrusticamos" ;
    VP (Pres Ind Pl P2) => "arrusticáis" ;
    VP (Pres Ind Pl P3) => "arrustícan" ;
    VP (Pres Subj Sg P1) => "arrustíque" ;
    VP (Pres Subj Sg P2) => "arrustíques" ;
    VP (Pres Subj Sg P3) => "arrustíque" ;
    VP (Pres Subj Pl P1) => "arrustiquemos" ;
    VP (Pres Subj Pl P2) => "arrustiquéis" ;
    VP (Pres Subj Pl P3) => "arrustíquen" ;
    VP (Impf Ind Sg P1) => "arrusticaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "arrusticabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "arrusticaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "arrusticábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "arrusticabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "arrusticaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arrusticara" ; "arrusticase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"arrusticaras" ; "arrusticases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arrusticara" ; "arrusticase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arrusticáramos" ; "arrusticásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"arrusticarais" ; "arrusticaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"arrusticaran" ; "arrusticasen"} ;--# notpresent
    VP (Pret Sg P1) => "arrustiqué" ;--# notpresent
    VP (Pret Sg P2) => "arrusticaste" ;--# notpresent
    VP (Pret Sg P3) => "arrusticó" ;--# notpresent
    VP (Pret Pl P1) => "arrusticamos" ;--# notpresent
    VP (Pret Pl P2) => "arrusticasteis" ;--# notpresent
    VP (Pret Pl P3) => "arrusticaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arrusticaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "arrusticarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "arrusticará" ;--# notpresent
    VP (Fut Ind Pl P1) => "arrusticaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arrusticaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "arrusticarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arrusticare" ;--# notpresent
    VP (Fut Subj Sg P2) => "arrusticares" ;--# notpresent
    VP (Fut Subj Sg P3) => "arrusticare" ;--# notpresent
    VP (Fut Subj Pl P1) => "arrusticáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arrusticareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "arrusticaren" ;--# notpresent
    VP (Cond Sg P1) => "arrusticaría" ;--# notpresent
    VP (Cond Sg P2) => "arrusticarías" ;--# notpresent
    VP (Cond Sg P3) => "arrusticaría" ;--# notpresent
    VP (Cond Pl P1) => "arrusticaríamos" ;--# notpresent
    VP (Cond Pl P2) => "arrusticaríais" ;--# notpresent
    VP (Cond Pl P3) => "arrusticarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "arrustíca" ;
    VP (Imp Sg P3) => "arrustíque" ;
    VP (Imp Pl P1) => "arrustiquemos" ;
    VP (Imp Pl P2) => "arrusticad" ;
    VP (Imp Pl P3) => "arrustíquen" ;
    VP (Pass Sg Masc) => "arrusticado" ;
    VP (Pass Sg Fem) => "arrusticada" ;
    VP (Pass Pl Masc) => "arrusticados" ;
    VP (Pass Pl Fem) => "arrusticadas"
    }
  } ;

lin arcaizar_V = verboV 
 {s = table {
    VI Infn => "arcaizar" ;
    VI Ger => "arcaizando" ;
    VI Part => "arcaizado" ;
    VP (Pres Ind Sg P1) => "arcaízo" ;
    VP (Pres Ind Sg P2) => "arcaízas" ;
    VP (Pres Ind Sg P3) => "arcaíza" ;
    VP (Pres Ind Pl P1) => "arcaizamos" ;
    VP (Pres Ind Pl P2) => "arcaizáis" ;
    VP (Pres Ind Pl P3) => "arcaízan" ;
    VP (Pres Subj Sg P1) => "arcaíce" ;
    VP (Pres Subj Sg P2) => "arcaíces" ;
    VP (Pres Subj Sg P3) => "arcaíce" ;
    VP (Pres Subj Pl P1) => "arcaicemos" ;
    VP (Pres Subj Pl P2) => "arcaicéis" ;
    VP (Pres Subj Pl P3) => "arcaícen" ;
    VP (Impf Ind Sg P1) => "arcaizaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "arcaizabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "arcaizaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "arcaizábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "arcaizabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "arcaizaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arcaizara" ; "arcaizase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"arcaizaras" ; "arcaizases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arcaizara" ; "arcaizase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arcaizáramos" ; "arcaizásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"arcaizarais" ; "arcaizaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"arcaizaran" ; "arcaizasen"} ;--# notpresent
    VP (Pret Sg P1) => "arcaicé" ;--# notpresent
    VP (Pret Sg P2) => "arcaizaste" ;--# notpresent
    VP (Pret Sg P3) => "arcaizó" ;--# notpresent
    VP (Pret Pl P1) => "arcaizamos" ;--# notpresent
    VP (Pret Pl P2) => "arcaizasteis" ;--# notpresent
    VP (Pret Pl P3) => "arcaizaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arcaizaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "arcaizarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "arcaizará" ;--# notpresent
    VP (Fut Ind Pl P1) => "arcaizaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arcaizaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "arcaizarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arcaizare" ;--# notpresent
    VP (Fut Subj Sg P2) => "arcaizares" ;--# notpresent
    VP (Fut Subj Sg P3) => "arcaizare" ;--# notpresent
    VP (Fut Subj Pl P1) => "arcaizáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arcaizareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "arcaizaren" ;--# notpresent
    VP (Cond Sg P1) => "arcaizaría" ;--# notpresent
    VP (Cond Sg P2) => "arcaizarías" ;--# notpresent
    VP (Cond Sg P3) => "arcaizaría" ;--# notpresent
    VP (Cond Pl P1) => "arcaizaríamos" ;--# notpresent
    VP (Cond Pl P2) => "arcaizaríais" ;--# notpresent
    VP (Cond Pl P3) => "arcaizarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "arcaíza" ;
    VP (Imp Sg P3) => "arcaíce" ;
    VP (Imp Pl P1) => "arcaicemos" ;
    VP (Imp Pl P2) => "arcaizad" ;
    VP (Imp Pl P3) => "arcaícen" ;
    VP (Pass Sg Masc) => "arcaizado" ;
    VP (Pass Sg Fem) => "arcaizada" ;
    VP (Pass Pl Masc) => "arcaizados" ;
    VP (Pass Pl Fem) => "arcaizadas"
    }
  } ;

lin desraizar_V = verboV 
 {s = table {
    VI Infn => "desraizar" ;
    VI Ger => "desraizando" ;
    VI Part => "desraizado" ;
    VP (Pres Ind Sg P1) => "desraízo" ;
    VP (Pres Ind Sg P2) => "desraízas" ;
    VP (Pres Ind Sg P3) => "desraíza" ;
    VP (Pres Ind Pl P1) => "desraizamos" ;
    VP (Pres Ind Pl P2) => "desraizáis" ;
    VP (Pres Ind Pl P3) => "desraízan" ;
    VP (Pres Subj Sg P1) => "desraíce" ;
    VP (Pres Subj Sg P2) => "desraíces" ;
    VP (Pres Subj Sg P3) => "desraíce" ;
    VP (Pres Subj Pl P1) => "desraicemos" ;
    VP (Pres Subj Pl P2) => "desraicéis" ;
    VP (Pres Subj Pl P3) => "desraícen" ;
    VP (Impf Ind Sg P1) => "desraizaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desraizabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desraizaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desraizábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desraizabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desraizaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desraizara" ; "desraizase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desraizaras" ; "desraizases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desraizara" ; "desraizase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desraizáramos" ; "desraizásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desraizarais" ; "desraizaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desraizaran" ; "desraizasen"} ;--# notpresent
    VP (Pret Sg P1) => "desraicé" ;--# notpresent
    VP (Pret Sg P2) => "desraizaste" ;--# notpresent
    VP (Pret Sg P3) => "desraizó" ;--# notpresent
    VP (Pret Pl P1) => "desraizamos" ;--# notpresent
    VP (Pret Pl P2) => "desraizasteis" ;--# notpresent
    VP (Pret Pl P3) => "desraizaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desraizaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desraizarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desraizará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desraizaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desraizaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desraizarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desraizare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desraizares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desraizare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desraizáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desraizareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desraizaren" ;--# notpresent
    VP (Cond Sg P1) => "desraizaría" ;--# notpresent
    VP (Cond Sg P2) => "desraizarías" ;--# notpresent
    VP (Cond Sg P3) => "desraizaría" ;--# notpresent
    VP (Cond Pl P1) => "desraizaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desraizaríais" ;--# notpresent
    VP (Cond Pl P3) => "desraizarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desraíza" ;
    VP (Imp Sg P3) => "desraíce" ;
    VP (Imp Pl P1) => "desraicemos" ;
    VP (Imp Pl P2) => "desraizad" ;
    VP (Imp Pl P3) => "desraícen" ;
    VP (Pass Sg Masc) => "desraizado" ;
    VP (Pass Sg Fem) => "desraizada" ;
    VP (Pass Pl Masc) => "desraizados" ;
    VP (Pass Pl Fem) => "desraizadas"
    }
  } ;

lin enraizar_V = verboV 
 {s = table {
    VI Infn => "enraizar" ;
    VI Ger => "enraizando" ;
    VI Part => "enraizado" ;
    VP (Pres Ind Sg P1) => "enraízo" ;
    VP (Pres Ind Sg P2) => "enraízas" ;
    VP (Pres Ind Sg P3) => "enraíza" ;
    VP (Pres Ind Pl P1) => "enraizamos" ;
    VP (Pres Ind Pl P2) => "enraizáis" ;
    VP (Pres Ind Pl P3) => "enraízan" ;
    VP (Pres Subj Sg P1) => "enraíce" ;
    VP (Pres Subj Sg P2) => "enraíces" ;
    VP (Pres Subj Sg P3) => "enraíce" ;
    VP (Pres Subj Pl P1) => "enraicemos" ;
    VP (Pres Subj Pl P2) => "enraicéis" ;
    VP (Pres Subj Pl P3) => "enraícen" ;
    VP (Impf Ind Sg P1) => "enraizaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enraizabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enraizaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enraizábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enraizabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enraizaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enraizara" ; "enraizase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enraizaras" ; "enraizases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enraizara" ; "enraizase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enraizáramos" ; "enraizásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enraizarais" ; "enraizaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enraizaran" ; "enraizasen"} ;--# notpresent
    VP (Pret Sg P1) => "enraicé" ;--# notpresent
    VP (Pret Sg P2) => "enraizaste" ;--# notpresent
    VP (Pret Sg P3) => "enraizó" ;--# notpresent
    VP (Pret Pl P1) => "enraizamos" ;--# notpresent
    VP (Pret Pl P2) => "enraizasteis" ;--# notpresent
    VP (Pret Pl P3) => "enraizaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enraizaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enraizarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enraizará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enraizaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enraizaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enraizarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enraizare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enraizares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enraizare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enraizáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enraizareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enraizaren" ;--# notpresent
    VP (Cond Sg P1) => "enraizaría" ;--# notpresent
    VP (Cond Sg P2) => "enraizarías" ;--# notpresent
    VP (Cond Sg P3) => "enraizaría" ;--# notpresent
    VP (Cond Pl P1) => "enraizaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enraizaríais" ;--# notpresent
    VP (Cond Pl P3) => "enraizarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enraíza" ;
    VP (Imp Sg P3) => "enraíce" ;
    VP (Imp Pl P1) => "enraicemos" ;
    VP (Imp Pl P2) => "enraizad" ;
    VP (Imp Pl P3) => "enraícen" ;
    VP (Pass Sg Masc) => "enraizado" ;
    VP (Pass Sg Fem) => "enraizada" ;
    VP (Pass Pl Masc) => "enraizados" ;
    VP (Pass Pl Fem) => "enraizadas"
    }
  } ;

lin europeizar_V = verboV 
 {s = table {
    VI Infn => "europeizar" ;
    VI Ger => "europeizando" ;
    VI Part => "europeizado" ;
    VP (Pres Ind Sg P1) => "europeízo" ;
    VP (Pres Ind Sg P2) => "europeízas" ;
    VP (Pres Ind Sg P3) => "europeíza" ;
    VP (Pres Ind Pl P1) => "europeizamos" ;
    VP (Pres Ind Pl P2) => "europeizáis" ;
    VP (Pres Ind Pl P3) => "europeízan" ;
    VP (Pres Subj Sg P1) => "europeíce" ;
    VP (Pres Subj Sg P2) => "europeíces" ;
    VP (Pres Subj Sg P3) => "europeíce" ;
    VP (Pres Subj Pl P1) => "europeicemos" ;
    VP (Pres Subj Pl P2) => "europeicéis" ;
    VP (Pres Subj Pl P3) => "europeícen" ;
    VP (Impf Ind Sg P1) => "europeizaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "europeizabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "europeizaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "europeizábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "europeizabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "europeizaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"europeizara" ; "europeizase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"europeizaras" ; "europeizases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"europeizara" ; "europeizase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"europeizáramos" ; "europeizásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"europeizarais" ; "europeizaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"europeizaran" ; "europeizasen"} ;--# notpresent
    VP (Pret Sg P1) => "europeicé" ;--# notpresent
    VP (Pret Sg P2) => "europeizaste" ;--# notpresent
    VP (Pret Sg P3) => "europeizó" ;--# notpresent
    VP (Pret Pl P1) => "europeizamos" ;--# notpresent
    VP (Pret Pl P2) => "europeizasteis" ;--# notpresent
    VP (Pret Pl P3) => "europeizaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "europeizaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "europeizarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "europeizará" ;--# notpresent
    VP (Fut Ind Pl P1) => "europeizaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "europeizaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "europeizarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "europeizare" ;--# notpresent
    VP (Fut Subj Sg P2) => "europeizares" ;--# notpresent
    VP (Fut Subj Sg P3) => "europeizare" ;--# notpresent
    VP (Fut Subj Pl P1) => "europeizáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "europeizareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "europeizaren" ;--# notpresent
    VP (Cond Sg P1) => "europeizaría" ;--# notpresent
    VP (Cond Sg P2) => "europeizarías" ;--# notpresent
    VP (Cond Sg P3) => "europeizaría" ;--# notpresent
    VP (Cond Pl P1) => "europeizaríamos" ;--# notpresent
    VP (Cond Pl P2) => "europeizaríais" ;--# notpresent
    VP (Cond Pl P3) => "europeizarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "europeíza" ;
    VP (Imp Sg P3) => "europeíce" ;
    VP (Imp Pl P1) => "europeicemos" ;
    VP (Imp Pl P2) => "europeizad" ;
    VP (Imp Pl P3) => "europeícen" ;
    VP (Pass Sg Masc) => "europeizado" ;
    VP (Pass Sg Fem) => "europeizada" ;
    VP (Pass Pl Masc) => "europeizados" ;
    VP (Pass Pl Fem) => "europeizadas"
    }
  } ;

lin hebraizar_V = verboV 
 {s = table {
    VI Infn => "hebraizar" ;
    VI Ger => "hebraizando" ;
    VI Part => "hebraizado" ;
    VP (Pres Ind Sg P1) => "hebraízo" ;
    VP (Pres Ind Sg P2) => "hebraízas" ;
    VP (Pres Ind Sg P3) => "hebraíza" ;
    VP (Pres Ind Pl P1) => "hebraizamos" ;
    VP (Pres Ind Pl P2) => "hebraizáis" ;
    VP (Pres Ind Pl P3) => "hebraízan" ;
    VP (Pres Subj Sg P1) => "hebraíce" ;
    VP (Pres Subj Sg P2) => "hebraíces" ;
    VP (Pres Subj Sg P3) => "hebraíce" ;
    VP (Pres Subj Pl P1) => "hebraicemos" ;
    VP (Pres Subj Pl P2) => "hebraicéis" ;
    VP (Pres Subj Pl P3) => "hebraícen" ;
    VP (Impf Ind Sg P1) => "hebraizaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "hebraizabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "hebraizaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "hebraizábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hebraizabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hebraizaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hebraizara" ; "hebraizase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hebraizaras" ; "hebraizases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hebraizara" ; "hebraizase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hebraizáramos" ; "hebraizásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hebraizarais" ; "hebraizaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hebraizaran" ; "hebraizasen"} ;--# notpresent
    VP (Pret Sg P1) => "hebraicé" ;--# notpresent
    VP (Pret Sg P2) => "hebraizaste" ;--# notpresent
    VP (Pret Sg P3) => "hebraizó" ;--# notpresent
    VP (Pret Pl P1) => "hebraizamos" ;--# notpresent
    VP (Pret Pl P2) => "hebraizasteis" ;--# notpresent
    VP (Pret Pl P3) => "hebraizaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "hebraizaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "hebraizarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hebraizará" ;--# notpresent
    VP (Fut Ind Pl P1) => "hebraizaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "hebraizaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "hebraizarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hebraizare" ;--# notpresent
    VP (Fut Subj Sg P2) => "hebraizares" ;--# notpresent
    VP (Fut Subj Sg P3) => "hebraizare" ;--# notpresent
    VP (Fut Subj Pl P1) => "hebraizáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hebraizareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hebraizaren" ;--# notpresent
    VP (Cond Sg P1) => "hebraizaría" ;--# notpresent
    VP (Cond Sg P2) => "hebraizarías" ;--# notpresent
    VP (Cond Sg P3) => "hebraizaría" ;--# notpresent
    VP (Cond Pl P1) => "hebraizaríamos" ;--# notpresent
    VP (Cond Pl P2) => "hebraizaríais" ;--# notpresent
    VP (Cond Pl P3) => "hebraizarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hebraíza" ;
    VP (Imp Sg P3) => "hebraíce" ;
    VP (Imp Pl P1) => "hebraicemos" ;
    VP (Imp Pl P2) => "hebraizad" ;
    VP (Imp Pl P3) => "hebraícen" ;
    VP (Pass Sg Masc) => "hebraizado" ;
    VP (Pass Sg Fem) => "hebraizada" ;
    VP (Pass Pl Masc) => "hebraizados" ;
    VP (Pass Pl Fem) => "hebraizadas"
    }
  } ;

lin judaizar_V = verboV 
 {s = table {
    VI Infn => "judaizar" ;
    VI Ger => "judaizando" ;
    VI Part => "judaizado" ;
    VP (Pres Ind Sg P1) => "judaízo" ;
    VP (Pres Ind Sg P2) => "judaízas" ;
    VP (Pres Ind Sg P3) => "judaíza" ;
    VP (Pres Ind Pl P1) => "judaizamos" ;
    VP (Pres Ind Pl P2) => "judaizáis" ;
    VP (Pres Ind Pl P3) => "judaízan" ;
    VP (Pres Subj Sg P1) => "judaíce" ;
    VP (Pres Subj Sg P2) => "judaíces" ;
    VP (Pres Subj Sg P3) => "judaíce" ;
    VP (Pres Subj Pl P1) => "judaicemos" ;
    VP (Pres Subj Pl P2) => "judaicéis" ;
    VP (Pres Subj Pl P3) => "judaícen" ;
    VP (Impf Ind Sg P1) => "judaizaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "judaizabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "judaizaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "judaizábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "judaizabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "judaizaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"judaizara" ; "judaizase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"judaizaras" ; "judaizases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"judaizara" ; "judaizase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"judaizáramos" ; "judaizásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"judaizarais" ; "judaizaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"judaizaran" ; "judaizasen"} ;--# notpresent
    VP (Pret Sg P1) => "judaicé" ;--# notpresent
    VP (Pret Sg P2) => "judaizaste" ;--# notpresent
    VP (Pret Sg P3) => "judaizó" ;--# notpresent
    VP (Pret Pl P1) => "judaizamos" ;--# notpresent
    VP (Pret Pl P2) => "judaizasteis" ;--# notpresent
    VP (Pret Pl P3) => "judaizaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "judaizaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "judaizarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "judaizará" ;--# notpresent
    VP (Fut Ind Pl P1) => "judaizaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "judaizaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "judaizarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "judaizare" ;--# notpresent
    VP (Fut Subj Sg P2) => "judaizares" ;--# notpresent
    VP (Fut Subj Sg P3) => "judaizare" ;--# notpresent
    VP (Fut Subj Pl P1) => "judaizáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "judaizareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "judaizaren" ;--# notpresent
    VP (Cond Sg P1) => "judaizaría" ;--# notpresent
    VP (Cond Sg P2) => "judaizarías" ;--# notpresent
    VP (Cond Sg P3) => "judaizaría" ;--# notpresent
    VP (Cond Pl P1) => "judaizaríamos" ;--# notpresent
    VP (Cond Pl P2) => "judaizaríais" ;--# notpresent
    VP (Cond Pl P3) => "judaizarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "judaíza" ;
    VP (Imp Sg P3) => "judaíce" ;
    VP (Imp Pl P1) => "judaicemos" ;
    VP (Imp Pl P2) => "judaizad" ;
    VP (Imp Pl P3) => "judaícen" ;
    VP (Pass Sg Masc) => "judaizado" ;
    VP (Pass Sg Fem) => "judaizada" ;
    VP (Pass Pl Masc) => "judaizados" ;
    VP (Pass Pl Fem) => "judaizadas"
    }
  } ;

lin andar_V = verboV 
 {s = table {
    VI Infn => "andar" ;
    VI Ger => "andando" ;
    VI Part => "andado" ;
    VP (Pres Ind Sg P1) => "ando" ;
    VP (Pres Ind Sg P2) => "andas" ;
    VP (Pres Ind Sg P3) => "anda" ;
    VP (Pres Ind Pl P1) => "andamos" ;
    VP (Pres Ind Pl P2) => "andáis" ;
    VP (Pres Ind Pl P3) => "andan" ;
    VP (Pres Subj Sg P1) => "ande" ;
    VP (Pres Subj Sg P2) => "andes" ;
    VP (Pres Subj Sg P3) => "ande" ;
    VP (Pres Subj Pl P1) => "andemos" ;
    VP (Pres Subj Pl P2) => "andéis" ;
    VP (Pres Subj Pl P3) => "anden" ;
    VP (Impf Ind Sg P1) => "andaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "andabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "andaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "andábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "andabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "andaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"anduviera" ; "anduviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"anduvieras" ; "anduvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"anduviera" ; "anduviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"anduviéramos" ; "anduviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"anduvierais" ; "anduvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"anduvieran" ; "anduviesen"} ;--# notpresent
    VP (Pret Sg P1) => "anduve" ;--# notpresent
    VP (Pret Sg P2) => "anduviste" ;--# notpresent
    VP (Pret Sg P3) => "anduvo" ;--# notpresent
    VP (Pret Pl P1) => "anduvimos" ;--# notpresent
    VP (Pret Pl P2) => "anduvisteis" ;--# notpresent
    VP (Pret Pl P3) => "anduvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "andaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "andarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "andará" ;--# notpresent
    VP (Fut Ind Pl P1) => "andaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "andaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "andarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "anduviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "anduvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "anduviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "anduviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "anduviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "anduvieren" ;--# notpresent
    VP (Cond Sg P1) => "andaría" ;--# notpresent
    VP (Cond Sg P2) => "andarías" ;--# notpresent
    VP (Cond Sg P3) => "andaría" ;--# notpresent
    VP (Cond Pl P1) => "andaríamos" ;--# notpresent
    VP (Cond Pl P2) => "andaríais" ;--# notpresent
    VP (Cond Pl P3) => "andarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "anda" ;
    VP (Imp Sg P3) => "ande" ;
    VP (Imp Pl P1) => "andemos" ;
    VP (Imp Pl P2) => "andad" ;
    VP (Imp Pl P3) => "anden" ;
    VP (Pass Sg Masc) => "andado" ;
    VP (Pass Sg Fem) => "andada" ;
    VP (Pass Pl Masc) => "andados" ;
    VP (Pass Pl Fem) => "andadas"
    }
  } ;

lin desandar_V = verboV 
 {s = table {
    VI Infn => "desandar" ;
    VI Ger => "desandando" ;
    VI Part => "desandado" ;
    VP (Pres Ind Sg P1) => "desando" ;
    VP (Pres Ind Sg P2) => "desandas" ;
    VP (Pres Ind Sg P3) => "desanda" ;
    VP (Pres Ind Pl P1) => "desandamos" ;
    VP (Pres Ind Pl P2) => "desandáis" ;
    VP (Pres Ind Pl P3) => "desandan" ;
    VP (Pres Subj Sg P1) => "desande" ;
    VP (Pres Subj Sg P2) => "desandes" ;
    VP (Pres Subj Sg P3) => "desande" ;
    VP (Pres Subj Pl P1) => "desandemos" ;
    VP (Pres Subj Pl P2) => "desandéis" ;
    VP (Pres Subj Pl P3) => "desanden" ;
    VP (Impf Ind Sg P1) => "desandaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desandabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desandaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desandábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desandabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desandaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desanduviera" ; "desanduviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desanduvieras" ; "desanduvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desanduviera" ; "desanduviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desanduviéramos" ; "desanduviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desanduvierais" ; "desanduvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desanduvieran" ; "desanduviesen"} ;--# notpresent
    VP (Pret Sg P1) => "desanduve" ;--# notpresent
    VP (Pret Sg P2) => "desanduviste" ;--# notpresent
    VP (Pret Sg P3) => "desanduvo" ;--# notpresent
    VP (Pret Pl P1) => "desanduvimos" ;--# notpresent
    VP (Pret Pl P2) => "desanduvisteis" ;--# notpresent
    VP (Pret Pl P3) => "desanduvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desandaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desandarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desandará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desandaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desandaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desandarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desanduviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desanduvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desanduviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desanduviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desanduviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desanduvieren" ;--# notpresent
    VP (Cond Sg P1) => "desandaría" ;--# notpresent
    VP (Cond Sg P2) => "desandarías" ;--# notpresent
    VP (Cond Sg P3) => "desandaría" ;--# notpresent
    VP (Cond Pl P1) => "desandaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desandaríais" ;--# notpresent
    VP (Cond Pl P3) => "desandarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desanda" ;
    VP (Imp Sg P3) => "desande" ;
    VP (Imp Pl P1) => "desandemos" ;
    VP (Imp Pl P2) => "desandad" ;
    VP (Imp Pl P3) => "desanden" ;
    VP (Pass Sg Masc) => "desandado" ;
    VP (Pass Sg Fem) => "desandada" ;
    VP (Pass Pl Masc) => "desandados" ;
    VP (Pass Pl Fem) => "desandadas"
    }
  } ;

lin asir_V = verboV 
 {s = table {
    VI Infn => "asir" ;
    VI Ger => "asiendo" ;
    VI Part => "asido" ;
    VP (Pres Ind Sg P1) => "asgo" ;
    VP (Pres Ind Sg P2) => "ases" ;
    VP (Pres Ind Sg P3) => "ase" ;
    VP (Pres Ind Pl P1) => "asimos" ;
    VP (Pres Ind Pl P2) => "asís" ;
    VP (Pres Ind Pl P3) => "asen" ;
    VP (Pres Subj Sg P1) => "asga" ;
    VP (Pres Subj Sg P2) => "asgas" ;
    VP (Pres Subj Sg P3) => "asga" ;
    VP (Pres Subj Pl P1) => "asgamos" ;
    VP (Pres Subj Pl P2) => "asgáis" ;
    VP (Pres Subj Pl P3) => "asgan" ;
    VP (Impf Ind Sg P1) => "asía" ;--# notpresent
    VP (Impf Ind Sg P2) => "asías" ;--# notpresent
    VP (Impf Ind Sg P3) => "asía" ;--# notpresent
    VP (Impf Ind Pl P1) => "asíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asiera" ; "asiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asieras" ; "asieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asiera" ; "asiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asiéramos" ; "asiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asierais" ; "asieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asieran" ; "asiesen"} ;--# notpresent
    VP (Pret Sg P1) => "así" ;--# notpresent
    VP (Pret Sg P2) => "asiste" ;--# notpresent
    VP (Pret Sg P3) => "asió" ;--# notpresent
    VP (Pret Pl P1) => "asimos" ;--# notpresent
    VP (Pret Pl P2) => "asisteis" ;--# notpresent
    VP (Pret Pl P3) => "asieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "asiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "asieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "asiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "asiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asieren" ;--# notpresent
    VP (Cond Sg P1) => "asiría" ;--# notpresent
    VP (Cond Sg P2) => "asirías" ;--# notpresent
    VP (Cond Sg P3) => "asiría" ;--# notpresent
    VP (Cond Pl P1) => "asiríamos" ;--# notpresent
    VP (Cond Pl P2) => "asiríais" ;--# notpresent
    VP (Cond Pl P3) => "asirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ase" ;
    VP (Imp Sg P3) => "asga" ;
    VP (Imp Pl P1) => "asgamos" ;
    VP (Imp Pl P2) => "asid" ;
    VP (Imp Pl P3) => "asgan" ;
    VP (Pass Sg Masc) => "asido" ;
    VP (Pass Sg Fem) => "asida" ;
    VP (Pass Pl Masc) => "asidos" ;
    VP (Pass Pl Fem) => "asidas"
    }
  } ;

lin desasir_V = verboV 
 {s = table {
    VI Infn => "desasir" ;
    VI Ger => "desasiendo" ;
    VI Part => "desasido" ;
    VP (Pres Ind Sg P1) => "desasgo" ;
    VP (Pres Ind Sg P2) => "desases" ;
    VP (Pres Ind Sg P3) => "desase" ;
    VP (Pres Ind Pl P1) => "desasimos" ;
    VP (Pres Ind Pl P2) => "desasís" ;
    VP (Pres Ind Pl P3) => "desasen" ;
    VP (Pres Subj Sg P1) => "desasga" ;
    VP (Pres Subj Sg P2) => "desasgas" ;
    VP (Pres Subj Sg P3) => "desasga" ;
    VP (Pres Subj Pl P1) => "desasgamos" ;
    VP (Pres Subj Pl P2) => "desasgáis" ;
    VP (Pres Subj Pl P3) => "desasgan" ;
    VP (Impf Ind Sg P1) => "desasía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desasías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desasía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desasíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desasíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desasían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desasiera" ; "desasiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desasieras" ; "desasieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desasiera" ; "desasiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desasiéramos" ; "desasiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desasierais" ; "desasieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desasieran" ; "desasiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desasí" ;--# notpresent
    VP (Pret Sg P2) => "desasiste" ;--# notpresent
    VP (Pret Sg P3) => "desasió" ;--# notpresent
    VP (Pret Pl P1) => "desasimos" ;--# notpresent
    VP (Pret Pl P2) => "desasisteis" ;--# notpresent
    VP (Pret Pl P3) => "desasieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desasiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desasirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desasirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desasiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desasiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desasirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desasiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desasieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desasiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desasiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desasiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desasieren" ;--# notpresent
    VP (Cond Sg P1) => "desasiría" ;--# notpresent
    VP (Cond Sg P2) => "desasirías" ;--# notpresent
    VP (Cond Sg P3) => "desasiría" ;--# notpresent
    VP (Cond Pl P1) => "desasiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desasiríais" ;--# notpresent
    VP (Cond Pl P3) => "desasirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desase" ;
    VP (Imp Sg P3) => "desasga" ;
    VP (Imp Pl P1) => "desasgamos" ;
    VP (Imp Pl P2) => "desasid" ;
    VP (Imp Pl P3) => "desasgan" ;
    VP (Pass Sg Masc) => "desasido" ;
    VP (Pass Sg Fem) => "desasida" ;
    VP (Pass Pl Masc) => "desasidos" ;
    VP (Pass Pl Fem) => "desasidas"
    }
  } ;

lin absterger_V = verboV 
 {s = table {
    VI Infn => "absterger" ;
    VI Ger => "abstergiendo" ;
    VI Part => "abstergido" ;
    VP (Pres Ind Sg P1) => "absterjo" ;
    VP (Pres Ind Sg P2) => "absterges" ;
    VP (Pres Ind Sg P3) => "absterge" ;
    VP (Pres Ind Pl P1) => "abstergemos" ;
    VP (Pres Ind Pl P2) => "abstergéis" ;
    VP (Pres Ind Pl P3) => "abstergen" ;
    VP (Pres Subj Sg P1) => "absterja" ;
    VP (Pres Subj Sg P2) => "absterjas" ;
    VP (Pres Subj Sg P3) => "absterja" ;
    VP (Pres Subj Pl P1) => "absterjamos" ;
    VP (Pres Subj Pl P2) => "absterjáis" ;
    VP (Pres Subj Pl P3) => "absterjan" ;
    VP (Impf Ind Sg P1) => "abstergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abstergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abstergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "abstergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abstergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abstergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abstergiera" ; "abstergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abstergieras" ; "abstergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abstergiera" ; "abstergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abstergiéramos" ; "abstergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abstergierais" ; "abstergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abstergieran" ; "abstergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "abstergí" ;--# notpresent
    VP (Pret Sg P2) => "abstergiste" ;--# notpresent
    VP (Pret Sg P3) => "abstergió" ;--# notpresent
    VP (Pret Pl P1) => "abstergimos" ;--# notpresent
    VP (Pret Pl P2) => "abstergisteis" ;--# notpresent
    VP (Pret Pl P3) => "abstergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abstergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abstergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abstergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abstergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abstergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abstergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abstergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abstergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abstergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abstergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abstergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abstergieren" ;--# notpresent
    VP (Cond Sg P1) => "abstergería" ;--# notpresent
    VP (Cond Sg P2) => "abstergerías" ;--# notpresent
    VP (Cond Sg P3) => "abstergería" ;--# notpresent
    VP (Cond Pl P1) => "abstergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "abstergeríais" ;--# notpresent
    VP (Cond Pl P3) => "abstergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "absterge" ;
    VP (Imp Sg P3) => "absterja" ;
    VP (Imp Pl P1) => "absterjamos" ;
    VP (Imp Pl P2) => "absterged" ;
    VP (Imp Pl P3) => "absterjan" ;
    VP (Pass Sg Masc) => "abstergido" ;
    VP (Pass Sg Fem) => "abstergida" ;
    VP (Pass Pl Masc) => "abstergidos" ;
    VP (Pass Pl Fem) => "abstergidas"
    }
  } ;

lin acoger_V = verboV 
 {s = table {
    VI Infn => "acoger" ;
    VI Ger => "acogiendo" ;
    VI Part => "acogido" ;
    VP (Pres Ind Sg P1) => "acojo" ;
    VP (Pres Ind Sg P2) => "acoges" ;
    VP (Pres Ind Sg P3) => "acoge" ;
    VP (Pres Ind Pl P1) => "acogemos" ;
    VP (Pres Ind Pl P2) => "acogéis" ;
    VP (Pres Ind Pl P3) => "acogen" ;
    VP (Pres Subj Sg P1) => "acoja" ;
    VP (Pres Subj Sg P2) => "acojas" ;
    VP (Pres Subj Sg P3) => "acoja" ;
    VP (Pres Subj Pl P1) => "acojamos" ;
    VP (Pres Subj Pl P2) => "acojáis" ;
    VP (Pres Subj Pl P3) => "acojan" ;
    VP (Impf Ind Sg P1) => "acogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "acogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "acogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "acogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acogiera" ; "acogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acogieras" ; "acogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acogiera" ; "acogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acogiéramos" ; "acogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acogierais" ; "acogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acogieran" ; "acogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "acogí" ;--# notpresent
    VP (Pret Sg P2) => "acogiste" ;--# notpresent
    VP (Pret Sg P3) => "acogió" ;--# notpresent
    VP (Pret Pl P1) => "acogimos" ;--# notpresent
    VP (Pret Pl P2) => "acogisteis" ;--# notpresent
    VP (Pret Pl P3) => "acogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "acogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "acogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "acogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "acogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acogieren" ;--# notpresent
    VP (Cond Sg P1) => "acogería" ;--# notpresent
    VP (Cond Sg P2) => "acogerías" ;--# notpresent
    VP (Cond Sg P3) => "acogería" ;--# notpresent
    VP (Cond Pl P1) => "acogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "acogeríais" ;--# notpresent
    VP (Cond Pl P3) => "acogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acoge" ;
    VP (Imp Sg P3) => "acoja" ;
    VP (Imp Pl P1) => "acojamos" ;
    VP (Imp Pl P2) => "acoged" ;
    VP (Imp Pl P3) => "acojan" ;
    VP (Pass Sg Masc) => "acogido" ;
    VP (Pass Sg Fem) => "acogida" ;
    VP (Pass Pl Masc) => "acogidos" ;
    VP (Pass Pl Fem) => "acogidas"
    }
  } ;

lin antecoger_V = verboV 
 {s = table {
    VI Infn => "antecoger" ;
    VI Ger => "antecogiendo" ;
    VI Part => "antecogido" ;
    VP (Pres Ind Sg P1) => "antecojo" ;
    VP (Pres Ind Sg P2) => "antecoges" ;
    VP (Pres Ind Sg P3) => "antecoge" ;
    VP (Pres Ind Pl P1) => "antecogemos" ;
    VP (Pres Ind Pl P2) => "antecogéis" ;
    VP (Pres Ind Pl P3) => "antecogen" ;
    VP (Pres Subj Sg P1) => "antecoja" ;
    VP (Pres Subj Sg P2) => "antecojas" ;
    VP (Pres Subj Sg P3) => "antecoja" ;
    VP (Pres Subj Pl P1) => "antecojamos" ;
    VP (Pres Subj Pl P2) => "antecojáis" ;
    VP (Pres Subj Pl P3) => "antecojan" ;
    VP (Impf Ind Sg P1) => "antecogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "antecogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "antecogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "antecogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "antecogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "antecogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"antecogiera" ; "antecogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"antecogieras" ; "antecogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"antecogiera" ; "antecogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"antecogiéramos" ; "antecogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"antecogierais" ; "antecogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"antecogieran" ; "antecogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "antecogí" ;--# notpresent
    VP (Pret Sg P2) => "antecogiste" ;--# notpresent
    VP (Pret Sg P3) => "antecogió" ;--# notpresent
    VP (Pret Pl P1) => "antecogimos" ;--# notpresent
    VP (Pret Pl P2) => "antecogisteis" ;--# notpresent
    VP (Pret Pl P3) => "antecogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "antecogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "antecogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "antecogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "antecogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "antecogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "antecogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "antecogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "antecogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "antecogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "antecogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "antecogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "antecogieren" ;--# notpresent
    VP (Cond Sg P1) => "antecogería" ;--# notpresent
    VP (Cond Sg P2) => "antecogerías" ;--# notpresent
    VP (Cond Sg P3) => "antecogería" ;--# notpresent
    VP (Cond Pl P1) => "antecogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "antecogeríais" ;--# notpresent
    VP (Cond Pl P3) => "antecogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "antecoge" ;
    VP (Imp Sg P3) => "antecoja" ;
    VP (Imp Pl P1) => "antecojamos" ;
    VP (Imp Pl P2) => "antecoged" ;
    VP (Imp Pl P3) => "antecojan" ;
    VP (Pass Sg Masc) => "antecogido" ;
    VP (Pass Sg Fem) => "antecogida" ;
    VP (Pass Pl Masc) => "antecogidos" ;
    VP (Pass Pl Fem) => "antecogidas"
    }
  } ;

lin asperger_V = verboV 
 {s = table {
    VI Infn => "asperger" ;
    VI Ger => "aspergiendo" ;
    VI Part => "aspergido" ;
    VP (Pres Ind Sg P1) => "asperjo" ;
    VP (Pres Ind Sg P2) => "asperges" ;
    VP (Pres Ind Sg P3) => "asperge" ;
    VP (Pres Ind Pl P1) => "aspergemos" ;
    VP (Pres Ind Pl P2) => "aspergéis" ;
    VP (Pres Ind Pl P3) => "aspergen" ;
    VP (Pres Subj Sg P1) => "asperja" ;
    VP (Pres Subj Sg P2) => "asperjas" ;
    VP (Pres Subj Sg P3) => "asperja" ;
    VP (Pres Subj Pl P1) => "asperjamos" ;
    VP (Pres Subj Pl P2) => "asperjáis" ;
    VP (Pres Subj Pl P3) => "asperjan" ;
    VP (Impf Ind Sg P1) => "aspergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aspergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aspergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aspergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aspergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aspergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aspergiera" ; "aspergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aspergieras" ; "aspergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aspergiera" ; "aspergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aspergiéramos" ; "aspergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aspergierais" ; "aspergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aspergieran" ; "aspergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "aspergí" ;--# notpresent
    VP (Pret Sg P2) => "aspergiste" ;--# notpresent
    VP (Pret Sg P3) => "aspergió" ;--# notpresent
    VP (Pret Pl P1) => "aspergimos" ;--# notpresent
    VP (Pret Pl P2) => "aspergisteis" ;--# notpresent
    VP (Pret Pl P3) => "aspergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aspergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aspergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aspergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aspergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aspergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aspergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aspergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aspergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aspergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aspergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aspergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aspergieren" ;--# notpresent
    VP (Cond Sg P1) => "aspergería" ;--# notpresent
    VP (Cond Sg P2) => "aspergerías" ;--# notpresent
    VP (Cond Sg P3) => "aspergería" ;--# notpresent
    VP (Cond Pl P1) => "aspergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "aspergeríais" ;--# notpresent
    VP (Cond Pl P3) => "aspergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asperge" ;
    VP (Imp Sg P3) => "asperja" ;
    VP (Imp Pl P1) => "asperjamos" ;
    VP (Imp Pl P2) => "asperged" ;
    VP (Imp Pl P3) => "asperjan" ;
    VP (Pass Sg Masc) => "aspergido" ;
    VP (Pass Sg Fem) => "aspergida" ;
    VP (Pass Pl Masc) => "aspergidos" ;
    VP (Pass Pl Fem) => "aspergidas"
    }
  } ;

lin coger_V = verboV 
 {s = table {
    VI Infn => "coger" ;
    VI Ger => "cogiendo" ;
    VI Part => "cogido" ;
    VP (Pres Ind Sg P1) => "cojo" ;
    VP (Pres Ind Sg P2) => "coges" ;
    VP (Pres Ind Sg P3) => "coge" ;
    VP (Pres Ind Pl P1) => "cogemos" ;
    VP (Pres Ind Pl P2) => "cogéis" ;
    VP (Pres Ind Pl P3) => "cogen" ;
    VP (Pres Subj Sg P1) => "coja" ;
    VP (Pres Subj Sg P2) => "cojas" ;
    VP (Pres Subj Sg P3) => "coja" ;
    VP (Pres Subj Pl P1) => "cojamos" ;
    VP (Pres Subj Pl P2) => "cojáis" ;
    VP (Pres Subj Pl P3) => "cojan" ;
    VP (Impf Ind Sg P1) => "cogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cogiera" ; "cogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cogieras" ; "cogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cogiera" ; "cogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cogiéramos" ; "cogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cogierais" ; "cogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cogieran" ; "cogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "cogí" ;--# notpresent
    VP (Pret Sg P2) => "cogiste" ;--# notpresent
    VP (Pret Sg P3) => "cogió" ;--# notpresent
    VP (Pret Pl P1) => "cogimos" ;--# notpresent
    VP (Pret Pl P2) => "cogisteis" ;--# notpresent
    VP (Pret Pl P3) => "cogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cogieren" ;--# notpresent
    VP (Cond Sg P1) => "cogería" ;--# notpresent
    VP (Cond Sg P2) => "cogerías" ;--# notpresent
    VP (Cond Sg P3) => "cogería" ;--# notpresent
    VP (Cond Pl P1) => "cogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "cogeríais" ;--# notpresent
    VP (Cond Pl P3) => "cogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "coge" ;
    VP (Imp Sg P3) => "coja" ;
    VP (Imp Pl P1) => "cojamos" ;
    VP (Imp Pl P2) => "coged" ;
    VP (Imp Pl P3) => "cojan" ;
    VP (Pass Sg Masc) => "cogido" ;
    VP (Pass Sg Fem) => "cogida" ;
    VP (Pass Pl Masc) => "cogidos" ;
    VP (Pass Pl Fem) => "cogidas"
    }
  } ;

lin converger_V = verboV 
 {s = table {
    VI Infn => "converger" ;
    VI Ger => "convergiendo" ;
    VI Part => "convergido" ;
    VP (Pres Ind Sg P1) => "converjo" ;
    VP (Pres Ind Sg P2) => "converges" ;
    VP (Pres Ind Sg P3) => "converge" ;
    VP (Pres Ind Pl P1) => "convergemos" ;
    VP (Pres Ind Pl P2) => "convergéis" ;
    VP (Pres Ind Pl P3) => "convergen" ;
    VP (Pres Subj Sg P1) => "converja" ;
    VP (Pres Subj Sg P2) => "converjas" ;
    VP (Pres Subj Sg P3) => "converja" ;
    VP (Pres Subj Pl P1) => "converjamos" ;
    VP (Pres Subj Pl P2) => "converjáis" ;
    VP (Pres Subj Pl P3) => "converjan" ;
    VP (Impf Ind Sg P1) => "convergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "convergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "convergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"convergiera" ; "convergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convergieras" ; "convergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"convergiera" ; "convergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"convergiéramos" ; "convergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convergierais" ; "convergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convergieran" ; "convergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "convergí" ;--# notpresent
    VP (Pret Sg P2) => "convergiste" ;--# notpresent
    VP (Pret Sg P3) => "convergió" ;--# notpresent
    VP (Pret Pl P1) => "convergimos" ;--# notpresent
    VP (Pret Pl P2) => "convergisteis" ;--# notpresent
    VP (Pret Pl P3) => "convergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "convergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "convergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "convergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "convergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convergieren" ;--# notpresent
    VP (Cond Sg P1) => "convergería" ;--# notpresent
    VP (Cond Sg P2) => "convergerías" ;--# notpresent
    VP (Cond Sg P3) => "convergería" ;--# notpresent
    VP (Cond Pl P1) => "convergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "convergeríais" ;--# notpresent
    VP (Cond Pl P3) => "convergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "converge" ;
    VP (Imp Sg P3) => "converja" ;
    VP (Imp Pl P1) => "converjamos" ;
    VP (Imp Pl P2) => "converged" ;
    VP (Imp Pl P3) => "converjan" ;
    VP (Pass Sg Masc) => "convergido" ;
    VP (Pass Sg Fem) => "convergida" ;
    VP (Pass Pl Masc) => "convergidos" ;
    VP (Pass Pl Fem) => "convergidas"
    }
  } ;

lin descoger_V = verboV 
 {s = table {
    VI Infn => "descoger" ;
    VI Ger => "descogiendo" ;
    VI Part => "descogido" ;
    VP (Pres Ind Sg P1) => "descojo" ;
    VP (Pres Ind Sg P2) => "descoges" ;
    VP (Pres Ind Sg P3) => "descoge" ;
    VP (Pres Ind Pl P1) => "descogemos" ;
    VP (Pres Ind Pl P2) => "descogéis" ;
    VP (Pres Ind Pl P3) => "descogen" ;
    VP (Pres Subj Sg P1) => "descoja" ;
    VP (Pres Subj Sg P2) => "descojas" ;
    VP (Pres Subj Sg P3) => "descoja" ;
    VP (Pres Subj Pl P1) => "descojamos" ;
    VP (Pres Subj Pl P2) => "descojáis" ;
    VP (Pres Subj Pl P3) => "descojan" ;
    VP (Impf Ind Sg P1) => "descogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descogiera" ; "descogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descogieras" ; "descogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descogiera" ; "descogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descogiéramos" ; "descogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descogierais" ; "descogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descogieran" ; "descogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "descogí" ;--# notpresent
    VP (Pret Sg P2) => "descogiste" ;--# notpresent
    VP (Pret Sg P3) => "descogió" ;--# notpresent
    VP (Pret Pl P1) => "descogimos" ;--# notpresent
    VP (Pret Pl P2) => "descogisteis" ;--# notpresent
    VP (Pret Pl P3) => "descogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descogieren" ;--# notpresent
    VP (Cond Sg P1) => "descogería" ;--# notpresent
    VP (Cond Sg P2) => "descogerías" ;--# notpresent
    VP (Cond Sg P3) => "descogería" ;--# notpresent
    VP (Cond Pl P1) => "descogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "descogeríais" ;--# notpresent
    VP (Cond Pl P3) => "descogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descoge" ;
    VP (Imp Sg P3) => "descoja" ;
    VP (Imp Pl P1) => "descojamos" ;
    VP (Imp Pl P2) => "descoged" ;
    VP (Imp Pl P3) => "descojan" ;
    VP (Pass Sg Masc) => "descogido" ;
    VP (Pass Sg Fem) => "descogida" ;
    VP (Pass Pl Masc) => "descogidos" ;
    VP (Pass Pl Fem) => "descogidas"
    }
  } ;

lin desencoger_V = verboV 
 {s = table {
    VI Infn => "desencoger" ;
    VI Ger => "desencogiendo" ;
    VI Part => "desencogido" ;
    VP (Pres Ind Sg P1) => "desencojo" ;
    VP (Pres Ind Sg P2) => "desencoges" ;
    VP (Pres Ind Sg P3) => "desencoge" ;
    VP (Pres Ind Pl P1) => "desencogemos" ;
    VP (Pres Ind Pl P2) => "desencogéis" ;
    VP (Pres Ind Pl P3) => "desencogen" ;
    VP (Pres Subj Sg P1) => "desencoja" ;
    VP (Pres Subj Sg P2) => "desencojas" ;
    VP (Pres Subj Sg P3) => "desencoja" ;
    VP (Pres Subj Pl P1) => "desencojamos" ;
    VP (Pres Subj Pl P2) => "desencojáis" ;
    VP (Pres Subj Pl P3) => "desencojan" ;
    VP (Impf Ind Sg P1) => "desencogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desencogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desencogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desencogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desencogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desencogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desencogiera" ; "desencogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desencogieras" ; "desencogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desencogiera" ; "desencogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desencogiéramos" ; "desencogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desencogierais" ; "desencogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desencogieran" ; "desencogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desencogí" ;--# notpresent
    VP (Pret Sg P2) => "desencogiste" ;--# notpresent
    VP (Pret Sg P3) => "desencogió" ;--# notpresent
    VP (Pret Pl P1) => "desencogimos" ;--# notpresent
    VP (Pret Pl P2) => "desencogisteis" ;--# notpresent
    VP (Pret Pl P3) => "desencogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desencogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desencogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desencogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desencogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desencogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desencogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desencogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desencogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desencogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desencogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desencogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desencogieren" ;--# notpresent
    VP (Cond Sg P1) => "desencogería" ;--# notpresent
    VP (Cond Sg P2) => "desencogerías" ;--# notpresent
    VP (Cond Sg P3) => "desencogería" ;--# notpresent
    VP (Cond Pl P1) => "desencogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "desencogeríais" ;--# notpresent
    VP (Cond Pl P3) => "desencogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desencoge" ;
    VP (Imp Sg P3) => "desencoja" ;
    VP (Imp Pl P1) => "desencojamos" ;
    VP (Imp Pl P2) => "desencoged" ;
    VP (Imp Pl P3) => "desencojan" ;
    VP (Pass Sg Masc) => "desencogido" ;
    VP (Pass Sg Fem) => "desencogida" ;
    VP (Pass Pl Masc) => "desencogidos" ;
    VP (Pass Pl Fem) => "desencogidas"
    }
  } ;

lin deterger_V = verboV 
 {s = table {
    VI Infn => "deterger" ;
    VI Ger => "detergiendo" ;
    VI Part => "detergido" ;
    VP (Pres Ind Sg P1) => "deterjo" ;
    VP (Pres Ind Sg P2) => "deterges" ;
    VP (Pres Ind Sg P3) => "deterge" ;
    VP (Pres Ind Pl P1) => "detergemos" ;
    VP (Pres Ind Pl P2) => "detergéis" ;
    VP (Pres Ind Pl P3) => "detergen" ;
    VP (Pres Subj Sg P1) => "deterja" ;
    VP (Pres Subj Sg P2) => "deterjas" ;
    VP (Pres Subj Sg P3) => "deterja" ;
    VP (Pres Subj Pl P1) => "deterjamos" ;
    VP (Pres Subj Pl P2) => "deterjáis" ;
    VP (Pres Subj Pl P3) => "deterjan" ;
    VP (Impf Ind Sg P1) => "detergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "detergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "detergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "detergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "detergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "detergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"detergiera" ; "detergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"detergieras" ; "detergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"detergiera" ; "detergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"detergiéramos" ; "detergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"detergierais" ; "detergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"detergieran" ; "detergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "detergí" ;--# notpresent
    VP (Pret Sg P2) => "detergiste" ;--# notpresent
    VP (Pret Sg P3) => "detergió" ;--# notpresent
    VP (Pret Pl P1) => "detergimos" ;--# notpresent
    VP (Pret Pl P2) => "detergisteis" ;--# notpresent
    VP (Pret Pl P3) => "detergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "detergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "detergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "detergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "detergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "detergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "detergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "detergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "detergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "detergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "detergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "detergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "detergieren" ;--# notpresent
    VP (Cond Sg P1) => "detergería" ;--# notpresent
    VP (Cond Sg P2) => "detergerías" ;--# notpresent
    VP (Cond Sg P3) => "detergería" ;--# notpresent
    VP (Cond Pl P1) => "detergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "detergeríais" ;--# notpresent
    VP (Cond Pl P3) => "detergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deterge" ;
    VP (Imp Sg P3) => "deterja" ;
    VP (Imp Pl P1) => "deterjamos" ;
    VP (Imp Pl P2) => "deterged" ;
    VP (Imp Pl P3) => "deterjan" ;
    VP (Pass Sg Masc) => "detergido" ;
    VP (Pass Sg Fem) => "detergida" ;
    VP (Pass Pl Masc) => "detergidos" ;
    VP (Pass Pl Fem) => "detergidas"
    }
  } ;

lin emerger_V = verboV 
 {s = table {
    VI Infn => "emerger" ;
    VI Ger => "emergiendo" ;
    VI Part => "emergido" ;
    VP (Pres Ind Sg P1) => "emerjo" ;
    VP (Pres Ind Sg P2) => "emerges" ;
    VP (Pres Ind Sg P3) => "emerge" ;
    VP (Pres Ind Pl P1) => "emergemos" ;
    VP (Pres Ind Pl P2) => "emergéis" ;
    VP (Pres Ind Pl P3) => "emergen" ;
    VP (Pres Subj Sg P1) => "emerja" ;
    VP (Pres Subj Sg P2) => "emerjas" ;
    VP (Pres Subj Sg P3) => "emerja" ;
    VP (Pres Subj Pl P1) => "emerjamos" ;
    VP (Pres Subj Pl P2) => "emerjáis" ;
    VP (Pres Subj Pl P3) => "emerjan" ;
    VP (Impf Ind Sg P1) => "emergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emergiera" ; "emergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emergieras" ; "emergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emergiera" ; "emergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emergiéramos" ; "emergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emergierais" ; "emergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emergieran" ; "emergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "emergí" ;--# notpresent
    VP (Pret Sg P2) => "emergiste" ;--# notpresent
    VP (Pret Sg P3) => "emergió" ;--# notpresent
    VP (Pret Pl P1) => "emergimos" ;--# notpresent
    VP (Pret Pl P2) => "emergisteis" ;--# notpresent
    VP (Pret Pl P3) => "emergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emergieren" ;--# notpresent
    VP (Cond Sg P1) => "emergería" ;--# notpresent
    VP (Cond Sg P2) => "emergerías" ;--# notpresent
    VP (Cond Sg P3) => "emergería" ;--# notpresent
    VP (Cond Pl P1) => "emergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "emergeríais" ;--# notpresent
    VP (Cond Pl P3) => "emergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emerge" ;
    VP (Imp Sg P3) => "emerja" ;
    VP (Imp Pl P1) => "emerjamos" ;
    VP (Imp Pl P2) => "emerged" ;
    VP (Imp Pl P3) => "emerjan" ;
    VP (Pass Sg Masc) => "emergido" ;
    VP (Pass Sg Fem) => "emergida" ;
    VP (Pass Pl Masc) => "emergidos" ;
    VP (Pass Pl Fem) => "emergidas"
    }
  } ;

lin encoger_V = verboV 
 {s = table {
    VI Infn => "encoger" ;
    VI Ger => "encogiendo" ;
    VI Part => "encogido" ;
    VP (Pres Ind Sg P1) => "encojo" ;
    VP (Pres Ind Sg P2) => "encoges" ;
    VP (Pres Ind Sg P3) => "encoge" ;
    VP (Pres Ind Pl P1) => "encogemos" ;
    VP (Pres Ind Pl P2) => "encogéis" ;
    VP (Pres Ind Pl P3) => "encogen" ;
    VP (Pres Subj Sg P1) => "encoja" ;
    VP (Pres Subj Sg P2) => "encojas" ;
    VP (Pres Subj Sg P3) => "encoja" ;
    VP (Pres Subj Pl P1) => "encojamos" ;
    VP (Pres Subj Pl P2) => "encojáis" ;
    VP (Pres Subj Pl P3) => "encojan" ;
    VP (Impf Ind Sg P1) => "encogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encogiera" ; "encogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encogieras" ; "encogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encogiera" ; "encogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encogiéramos" ; "encogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encogierais" ; "encogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encogieran" ; "encogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "encogí" ;--# notpresent
    VP (Pret Sg P2) => "encogiste" ;--# notpresent
    VP (Pret Sg P3) => "encogió" ;--# notpresent
    VP (Pret Pl P1) => "encogimos" ;--# notpresent
    VP (Pret Pl P2) => "encogisteis" ;--# notpresent
    VP (Pret Pl P3) => "encogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encogieren" ;--# notpresent
    VP (Cond Sg P1) => "encogería" ;--# notpresent
    VP (Cond Sg P2) => "encogerías" ;--# notpresent
    VP (Cond Sg P3) => "encogería" ;--# notpresent
    VP (Cond Pl P1) => "encogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "encogeríais" ;--# notpresent
    VP (Cond Pl P3) => "encogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encoge" ;
    VP (Imp Sg P3) => "encoja" ;
    VP (Imp Pl P1) => "encojamos" ;
    VP (Imp Pl P2) => "encoged" ;
    VP (Imp Pl P3) => "encojan" ;
    VP (Pass Sg Masc) => "encogido" ;
    VP (Pass Sg Fem) => "encogida" ;
    VP (Pass Pl Masc) => "encogidos" ;
    VP (Pass Pl Fem) => "encogidas"
    }
  } ;

lin entrecoger_V = verboV 
 {s = table {
    VI Infn => "entrecoger" ;
    VI Ger => "entrecogiendo" ;
    VI Part => "entrecogido" ;
    VP (Pres Ind Sg P1) => "entrecojo" ;
    VP (Pres Ind Sg P2) => "entrecoges" ;
    VP (Pres Ind Sg P3) => "entrecoge" ;
    VP (Pres Ind Pl P1) => "entrecogemos" ;
    VP (Pres Ind Pl P2) => "entrecogéis" ;
    VP (Pres Ind Pl P3) => "entrecogen" ;
    VP (Pres Subj Sg P1) => "entrecoja" ;
    VP (Pres Subj Sg P2) => "entrecojas" ;
    VP (Pres Subj Sg P3) => "entrecoja" ;
    VP (Pres Subj Pl P1) => "entrecojamos" ;
    VP (Pres Subj Pl P2) => "entrecojáis" ;
    VP (Pres Subj Pl P3) => "entrecojan" ;
    VP (Impf Ind Sg P1) => "entrecogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entrecogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entrecogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entrecogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entrecogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entrecogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entrecogiera" ; "entrecogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entrecogieras" ; "entrecogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entrecogiera" ; "entrecogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entrecogiéramos" ; "entrecogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entrecogierais" ; "entrecogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entrecogieran" ; "entrecogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "entrecogí" ;--# notpresent
    VP (Pret Sg P2) => "entrecogiste" ;--# notpresent
    VP (Pret Sg P3) => "entrecogió" ;--# notpresent
    VP (Pret Pl P1) => "entrecogimos" ;--# notpresent
    VP (Pret Pl P2) => "entrecogisteis" ;--# notpresent
    VP (Pret Pl P3) => "entrecogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entrecogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entrecogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entrecogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entrecogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entrecogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entrecogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entrecogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entrecogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entrecogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entrecogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entrecogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entrecogieren" ;--# notpresent
    VP (Cond Sg P1) => "entrecogería" ;--# notpresent
    VP (Cond Sg P2) => "entrecogerías" ;--# notpresent
    VP (Cond Sg P3) => "entrecogería" ;--# notpresent
    VP (Cond Pl P1) => "entrecogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "entrecogeríais" ;--# notpresent
    VP (Cond Pl P3) => "entrecogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entrecoge" ;
    VP (Imp Sg P3) => "entrecoja" ;
    VP (Imp Pl P1) => "entrecojamos" ;
    VP (Imp Pl P2) => "entrecoged" ;
    VP (Imp Pl P3) => "entrecojan" ;
    VP (Pass Sg Masc) => "entrecogido" ;
    VP (Pass Sg Fem) => "entrecogida" ;
    VP (Pass Pl Masc) => "entrecogidos" ;
    VP (Pass Pl Fem) => "entrecogidas"
    }
  } ;

lin escoger_V = verboV 
 {s = table {
    VI Infn => "escoger" ;
    VI Ger => "escogiendo" ;
    VI Part => "escogido" ;
    VP (Pres Ind Sg P1) => "escojo" ;
    VP (Pres Ind Sg P2) => "escoges" ;
    VP (Pres Ind Sg P3) => "escoge" ;
    VP (Pres Ind Pl P1) => "escogemos" ;
    VP (Pres Ind Pl P2) => "escogéis" ;
    VP (Pres Ind Pl P3) => "escogen" ;
    VP (Pres Subj Sg P1) => "escoja" ;
    VP (Pres Subj Sg P2) => "escojas" ;
    VP (Pres Subj Sg P3) => "escoja" ;
    VP (Pres Subj Pl P1) => "escojamos" ;
    VP (Pres Subj Pl P2) => "escojáis" ;
    VP (Pres Subj Pl P3) => "escojan" ;
    VP (Impf Ind Sg P1) => "escogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escogiera" ; "escogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escogieras" ; "escogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escogiera" ; "escogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escogiéramos" ; "escogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escogierais" ; "escogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escogieran" ; "escogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "escogí" ;--# notpresent
    VP (Pret Sg P2) => "escogiste" ;--# notpresent
    VP (Pret Sg P3) => "escogió" ;--# notpresent
    VP (Pret Pl P1) => "escogimos" ;--# notpresent
    VP (Pret Pl P2) => "escogisteis" ;--# notpresent
    VP (Pret Pl P3) => "escogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escogieren" ;--# notpresent
    VP (Cond Sg P1) => "escogería" ;--# notpresent
    VP (Cond Sg P2) => "escogerías" ;--# notpresent
    VP (Cond Sg P3) => "escogería" ;--# notpresent
    VP (Cond Pl P1) => "escogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "escogeríais" ;--# notpresent
    VP (Cond Pl P3) => "escogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escoge" ;
    VP (Imp Sg P3) => "escoja" ;
    VP (Imp Pl P1) => "escojamos" ;
    VP (Imp Pl P2) => "escoged" ;
    VP (Imp Pl P3) => "escojan" ;
    VP (Pass Sg Masc) => "escogido" ;
    VP (Pass Sg Fem) => "escogida" ;
    VP (Pass Pl Masc) => "escogidos" ;
    VP (Pass Pl Fem) => "escogidas"
    }
  } ;

lin proteger_V = verboV 
 {s = table {
    VI Infn => "proteger" ;
    VI Ger => "protegiendo" ;
    VI Part => "protegido" ;
    VP (Pres Ind Sg P1) => "protejo" ;
    VP (Pres Ind Sg P2) => "proteges" ;
    VP (Pres Ind Sg P3) => "protege" ;
    VP (Pres Ind Pl P1) => "protegemos" ;
    VP (Pres Ind Pl P2) => "protegéis" ;
    VP (Pres Ind Pl P3) => "protegen" ;
    VP (Pres Subj Sg P1) => "proteja" ;
    VP (Pres Subj Sg P2) => "protejas" ;
    VP (Pres Subj Sg P3) => "proteja" ;
    VP (Pres Subj Pl P1) => "protejamos" ;
    VP (Pres Subj Pl P2) => "protejáis" ;
    VP (Pres Subj Pl P3) => "protejan" ;
    VP (Impf Ind Sg P1) => "protegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "protegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "protegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "protegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "protegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "protegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"protegiera" ; "protegiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"protegieras" ; "protegieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"protegiera" ; "protegiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"protegiéramos" ; "protegiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"protegierais" ; "protegieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"protegieran" ; "protegiesen"} ;--# notpresent
    VP (Pret Sg P1) => "protegí" ;--# notpresent
    VP (Pret Sg P2) => "protegiste" ;--# notpresent
    VP (Pret Sg P3) => "protegió" ;--# notpresent
    VP (Pret Pl P1) => "protegimos" ;--# notpresent
    VP (Pret Pl P2) => "protegisteis" ;--# notpresent
    VP (Pret Pl P3) => "protegieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "protegeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "protegerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "protegerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "protegeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "protegeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "protegerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "protegiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "protegieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "protegiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "protegiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "protegiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "protegieren" ;--# notpresent
    VP (Cond Sg P1) => "protegería" ;--# notpresent
    VP (Cond Sg P2) => "protegerías" ;--# notpresent
    VP (Cond Sg P3) => "protegería" ;--# notpresent
    VP (Cond Pl P1) => "protegeríamos" ;--# notpresent
    VP (Cond Pl P2) => "protegeríais" ;--# notpresent
    VP (Cond Pl P3) => "protegerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "protege" ;
    VP (Imp Sg P3) => "proteja" ;
    VP (Imp Pl P1) => "protejamos" ;
    VP (Imp Pl P2) => "proteged" ;
    VP (Imp Pl P3) => "protejan" ;
    VP (Pass Sg Masc) => "protegido" ;
    VP (Pass Sg Fem) => "protegida" ;
    VP (Pass Pl Masc) => "protegidos" ;
    VP (Pass Pl Fem) => "protegidas"
    }
  } ;

lin recoger_V = verboV 
 {s = table {
    VI Infn => "recoger" ;
    VI Ger => "recogiendo" ;
    VI Part => "recogido" ;
    VP (Pres Ind Sg P1) => "recojo" ;
    VP (Pres Ind Sg P2) => "recoges" ;
    VP (Pres Ind Sg P3) => "recoge" ;
    VP (Pres Ind Pl P1) => "recogemos" ;
    VP (Pres Ind Pl P2) => "recogéis" ;
    VP (Pres Ind Pl P3) => "recogen" ;
    VP (Pres Subj Sg P1) => "recoja" ;
    VP (Pres Subj Sg P2) => "recojas" ;
    VP (Pres Subj Sg P3) => "recoja" ;
    VP (Pres Subj Pl P1) => "recojamos" ;
    VP (Pres Subj Pl P2) => "recojáis" ;
    VP (Pres Subj Pl P3) => "recojan" ;
    VP (Impf Ind Sg P1) => "recogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recogiera" ; "recogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recogieras" ; "recogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recogiera" ; "recogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recogiéramos" ; "recogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recogierais" ; "recogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recogieran" ; "recogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "recogí" ;--# notpresent
    VP (Pret Sg P2) => "recogiste" ;--# notpresent
    VP (Pret Sg P3) => "recogió" ;--# notpresent
    VP (Pret Pl P1) => "recogimos" ;--# notpresent
    VP (Pret Pl P2) => "recogisteis" ;--# notpresent
    VP (Pret Pl P3) => "recogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recogieren" ;--# notpresent
    VP (Cond Sg P1) => "recogería" ;--# notpresent
    VP (Cond Sg P2) => "recogerías" ;--# notpresent
    VP (Cond Sg P3) => "recogería" ;--# notpresent
    VP (Cond Pl P1) => "recogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "recogeríais" ;--# notpresent
    VP (Cond Pl P3) => "recogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recoge" ;
    VP (Imp Sg P3) => "recoja" ;
    VP (Imp Pl P1) => "recojamos" ;
    VP (Imp Pl P2) => "recoged" ;
    VP (Imp Pl P3) => "recojan" ;
    VP (Pass Sg Masc) => "recogido" ;
    VP (Pass Sg Fem) => "recogida" ;
    VP (Pass Pl Masc) => "recogidos" ;
    VP (Pass Pl Fem) => "recogidas"
    }
  } ;

lin sobrecoger_V = verboV 
 {s = table {
    VI Infn => "sobrecoger" ;
    VI Ger => "sobrecogiendo" ;
    VI Part => "sobrecogido" ;
    VP (Pres Ind Sg P1) => "sobrecojo" ;
    VP (Pres Ind Sg P2) => "sobrecoges" ;
    VP (Pres Ind Sg P3) => "sobrecoge" ;
    VP (Pres Ind Pl P1) => "sobrecogemos" ;
    VP (Pres Ind Pl P2) => "sobrecogéis" ;
    VP (Pres Ind Pl P3) => "sobrecogen" ;
    VP (Pres Subj Sg P1) => "sobrecoja" ;
    VP (Pres Subj Sg P2) => "sobrecojas" ;
    VP (Pres Subj Sg P3) => "sobrecoja" ;
    VP (Pres Subj Pl P1) => "sobrecojamos" ;
    VP (Pres Subj Pl P2) => "sobrecojáis" ;
    VP (Pres Subj Pl P3) => "sobrecojan" ;
    VP (Impf Ind Sg P1) => "sobrecogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrecogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrecogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrecogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrecogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrecogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrecogiera" ; "sobrecogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrecogieras" ; "sobrecogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrecogiera" ; "sobrecogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrecogiéramos" ; "sobrecogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrecogierais" ; "sobrecogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrecogieran" ; "sobrecogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrecogí" ;--# notpresent
    VP (Pret Sg P2) => "sobrecogiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrecogió" ;--# notpresent
    VP (Pret Pl P1) => "sobrecogimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrecogisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrecogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrecogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrecogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrecogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrecogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrecogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrecogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrecogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrecogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrecogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrecogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrecogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrecogieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrecogería" ;--# notpresent
    VP (Cond Sg P2) => "sobrecogerías" ;--# notpresent
    VP (Cond Sg P3) => "sobrecogería" ;--# notpresent
    VP (Cond Pl P1) => "sobrecogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrecogeríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrecogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrecoge" ;
    VP (Imp Sg P3) => "sobrecoja" ;
    VP (Imp Pl P1) => "sobrecojamos" ;
    VP (Imp Pl P2) => "sobrecoged" ;
    VP (Imp Pl P3) => "sobrecojan" ;
    VP (Pass Sg Masc) => "sobrecogido" ;
    VP (Pass Sg Fem) => "sobrecogida" ;
    VP (Pass Pl Masc) => "sobrecogidos" ;
    VP (Pass Pl Fem) => "sobrecogidas"
    }
  } ;

lin absterger2_V = verboV 
 {s = table {
    VI Infn => "absterger" ;
    VI Ger => "abstergiendo" ;
    VI Part => "abstergido" ;
    VP (Pres Ind Sg P1) => "absterjo" ;
    VP (Pres Ind Sg P2) => "absterges" ;
    VP (Pres Ind Sg P3) => "absterge" ;
    VP (Pres Ind Pl P1) => "abstergemos" ;
    VP (Pres Ind Pl P2) => "abstergéis" ;
    VP (Pres Ind Pl P3) => "abstergen" ;
    VP (Pres Subj Sg P1) => "absterja" ;
    VP (Pres Subj Sg P2) => "absterjas" ;
    VP (Pres Subj Sg P3) => "absterja" ;
    VP (Pres Subj Pl P1) => "absterjamos" ;
    VP (Pres Subj Pl P2) => "absterjáis" ;
    VP (Pres Subj Pl P3) => "absterjan" ;
    VP (Impf Ind Sg P1) => "abstergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abstergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abstergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "abstergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abstergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abstergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abstergiera" ; "abstergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abstergieras" ; "abstergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abstergiera" ; "abstergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abstergiéramos" ; "abstergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abstergierais" ; "abstergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abstergieran" ; "abstergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "abstergí" ;--# notpresent
    VP (Pret Sg P2) => "abstergiste" ;--# notpresent
    VP (Pret Sg P3) => "abstergió" ;--# notpresent
    VP (Pret Pl P1) => "abstergimos" ;--# notpresent
    VP (Pret Pl P2) => "abstergisteis" ;--# notpresent
    VP (Pret Pl P3) => "abstergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abstergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abstergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abstergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abstergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abstergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abstergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abstergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abstergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abstergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abstergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abstergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abstergieren" ;--# notpresent
    VP (Cond Sg P1) => "abstergería" ;--# notpresent
    VP (Cond Sg P2) => "abstergerías" ;--# notpresent
    VP (Cond Sg P3) => "abstergería" ;--# notpresent
    VP (Cond Pl P1) => "abstergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "abstergeríais" ;--# notpresent
    VP (Cond Pl P3) => "abstergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "absterge" ;
    VP (Imp Sg P3) => "absterja" ;
    VP (Imp Pl P1) => "absterjamos" ;
    VP (Imp Pl P2) => "absterged" ;
    VP (Imp Pl P3) => "absterjan" ;
    VP (Pass Sg Masc) => "abstergido" ;
    VP (Pass Sg Fem) => "abstergida" ;
    VP (Pass Pl Masc) => "abstergidos" ;
    VP (Pass Pl Fem) => "abstergidas"
    }
  } ;

lin acoger2_V = verboV 
 {s = table {
    VI Infn => "acoger" ;
    VI Ger => "acogiendo" ;
    VI Part => "acogido" ;
    VP (Pres Ind Sg P1) => "acojo" ;
    VP (Pres Ind Sg P2) => "acoges" ;
    VP (Pres Ind Sg P3) => "acoge" ;
    VP (Pres Ind Pl P1) => "acogemos" ;
    VP (Pres Ind Pl P2) => "acogéis" ;
    VP (Pres Ind Pl P3) => "acogen" ;
    VP (Pres Subj Sg P1) => "acoja" ;
    VP (Pres Subj Sg P2) => "acojas" ;
    VP (Pres Subj Sg P3) => "acoja" ;
    VP (Pres Subj Pl P1) => "acojamos" ;
    VP (Pres Subj Pl P2) => "acojáis" ;
    VP (Pres Subj Pl P3) => "acojan" ;
    VP (Impf Ind Sg P1) => "acogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "acogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "acogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "acogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acogiera" ; "acogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acogieras" ; "acogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acogiera" ; "acogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acogiéramos" ; "acogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acogierais" ; "acogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acogieran" ; "acogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "acogí" ;--# notpresent
    VP (Pret Sg P2) => "acogiste" ;--# notpresent
    VP (Pret Sg P3) => "acogió" ;--# notpresent
    VP (Pret Pl P1) => "acogimos" ;--# notpresent
    VP (Pret Pl P2) => "acogisteis" ;--# notpresent
    VP (Pret Pl P3) => "acogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "acogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "acogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "acogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "acogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acogieren" ;--# notpresent
    VP (Cond Sg P1) => "acogería" ;--# notpresent
    VP (Cond Sg P2) => "acogerías" ;--# notpresent
    VP (Cond Sg P3) => "acogería" ;--# notpresent
    VP (Cond Pl P1) => "acogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "acogeríais" ;--# notpresent
    VP (Cond Pl P3) => "acogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acoge" ;
    VP (Imp Sg P3) => "acoja" ;
    VP (Imp Pl P1) => "acojamos" ;
    VP (Imp Pl P2) => "acoged" ;
    VP (Imp Pl P3) => "acojan" ;
    VP (Pass Sg Masc) => "acogido" ;
    VP (Pass Sg Fem) => "acogida" ;
    VP (Pass Pl Masc) => "acogidos" ;
    VP (Pass Pl Fem) => "acogidas"
    }
  } ;

lin antecoger2_V = verboV 
 {s = table {
    VI Infn => "antecoger" ;
    VI Ger => "antecogiendo" ;
    VI Part => "antecogido" ;
    VP (Pres Ind Sg P1) => "antecojo" ;
    VP (Pres Ind Sg P2) => "antecoges" ;
    VP (Pres Ind Sg P3) => "antecoge" ;
    VP (Pres Ind Pl P1) => "antecogemos" ;
    VP (Pres Ind Pl P2) => "antecogéis" ;
    VP (Pres Ind Pl P3) => "antecogen" ;
    VP (Pres Subj Sg P1) => "antecoja" ;
    VP (Pres Subj Sg P2) => "antecojas" ;
    VP (Pres Subj Sg P3) => "antecoja" ;
    VP (Pres Subj Pl P1) => "antecojamos" ;
    VP (Pres Subj Pl P2) => "antecojáis" ;
    VP (Pres Subj Pl P3) => "antecojan" ;
    VP (Impf Ind Sg P1) => "antecogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "antecogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "antecogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "antecogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "antecogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "antecogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"antecogiera" ; "antecogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"antecogieras" ; "antecogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"antecogiera" ; "antecogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"antecogiéramos" ; "antecogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"antecogierais" ; "antecogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"antecogieran" ; "antecogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "antecogí" ;--# notpresent
    VP (Pret Sg P2) => "antecogiste" ;--# notpresent
    VP (Pret Sg P3) => "antecogió" ;--# notpresent
    VP (Pret Pl P1) => "antecogimos" ;--# notpresent
    VP (Pret Pl P2) => "antecogisteis" ;--# notpresent
    VP (Pret Pl P3) => "antecogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "antecogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "antecogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "antecogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "antecogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "antecogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "antecogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "antecogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "antecogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "antecogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "antecogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "antecogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "antecogieren" ;--# notpresent
    VP (Cond Sg P1) => "antecogería" ;--# notpresent
    VP (Cond Sg P2) => "antecogerías" ;--# notpresent
    VP (Cond Sg P3) => "antecogería" ;--# notpresent
    VP (Cond Pl P1) => "antecogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "antecogeríais" ;--# notpresent
    VP (Cond Pl P3) => "antecogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "antecoge" ;
    VP (Imp Sg P3) => "antecoja" ;
    VP (Imp Pl P1) => "antecojamos" ;
    VP (Imp Pl P2) => "antecoged" ;
    VP (Imp Pl P3) => "antecojan" ;
    VP (Pass Sg Masc) => "antecogido" ;
    VP (Pass Sg Fem) => "antecogida" ;
    VP (Pass Pl Masc) => "antecogidos" ;
    VP (Pass Pl Fem) => "antecogidas"
    }
  } ;

lin asperger2_V = verboV 
 {s = table {
    VI Infn => "asperger" ;
    VI Ger => "aspergiendo" ;
    VI Part => "aspergido" ;
    VP (Pres Ind Sg P1) => "asperjo" ;
    VP (Pres Ind Sg P2) => "asperges" ;
    VP (Pres Ind Sg P3) => "asperge" ;
    VP (Pres Ind Pl P1) => "aspergemos" ;
    VP (Pres Ind Pl P2) => "aspergéis" ;
    VP (Pres Ind Pl P3) => "aspergen" ;
    VP (Pres Subj Sg P1) => "asperja" ;
    VP (Pres Subj Sg P2) => "asperjas" ;
    VP (Pres Subj Sg P3) => "asperja" ;
    VP (Pres Subj Pl P1) => "asperjamos" ;
    VP (Pres Subj Pl P2) => "asperjáis" ;
    VP (Pres Subj Pl P3) => "asperjan" ;
    VP (Impf Ind Sg P1) => "aspergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aspergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aspergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aspergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aspergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aspergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aspergiera" ; "aspergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aspergieras" ; "aspergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aspergiera" ; "aspergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aspergiéramos" ; "aspergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aspergierais" ; "aspergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aspergieran" ; "aspergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "aspergí" ;--# notpresent
    VP (Pret Sg P2) => "aspergiste" ;--# notpresent
    VP (Pret Sg P3) => "aspergió" ;--# notpresent
    VP (Pret Pl P1) => "aspergimos" ;--# notpresent
    VP (Pret Pl P2) => "aspergisteis" ;--# notpresent
    VP (Pret Pl P3) => "aspergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aspergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aspergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aspergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aspergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aspergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aspergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aspergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aspergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aspergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aspergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aspergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aspergieren" ;--# notpresent
    VP (Cond Sg P1) => "aspergería" ;--# notpresent
    VP (Cond Sg P2) => "aspergerías" ;--# notpresent
    VP (Cond Sg P3) => "aspergería" ;--# notpresent
    VP (Cond Pl P1) => "aspergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "aspergeríais" ;--# notpresent
    VP (Cond Pl P3) => "aspergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asperge" ;
    VP (Imp Sg P3) => "asperja" ;
    VP (Imp Pl P1) => "asperjamos" ;
    VP (Imp Pl P2) => "asperged" ;
    VP (Imp Pl P3) => "asperjan" ;
    VP (Pass Sg Masc) => "aspergido" ;
    VP (Pass Sg Fem) => "aspergida" ;
    VP (Pass Pl Masc) => "aspergidos" ;
    VP (Pass Pl Fem) => "aspergidas"
    }
  } ;

lin coger2_V = verboV 
 {s = table {
    VI Infn => "coger" ;
    VI Ger => "cogiendo" ;
    VI Part => "cogido" ;
    VP (Pres Ind Sg P1) => "cojo" ;
    VP (Pres Ind Sg P2) => "coges" ;
    VP (Pres Ind Sg P3) => "coge" ;
    VP (Pres Ind Pl P1) => "cogemos" ;
    VP (Pres Ind Pl P2) => "cogéis" ;
    VP (Pres Ind Pl P3) => "cogen" ;
    VP (Pres Subj Sg P1) => "coja" ;
    VP (Pres Subj Sg P2) => "cojas" ;
    VP (Pres Subj Sg P3) => "coja" ;
    VP (Pres Subj Pl P1) => "cojamos" ;
    VP (Pres Subj Pl P2) => "cojáis" ;
    VP (Pres Subj Pl P3) => "cojan" ;
    VP (Impf Ind Sg P1) => "cogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cogiera" ; "cogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cogieras" ; "cogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cogiera" ; "cogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cogiéramos" ; "cogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cogierais" ; "cogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cogieran" ; "cogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "cogí" ;--# notpresent
    VP (Pret Sg P2) => "cogiste" ;--# notpresent
    VP (Pret Sg P3) => "cogió" ;--# notpresent
    VP (Pret Pl P1) => "cogimos" ;--# notpresent
    VP (Pret Pl P2) => "cogisteis" ;--# notpresent
    VP (Pret Pl P3) => "cogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cogieren" ;--# notpresent
    VP (Cond Sg P1) => "cogería" ;--# notpresent
    VP (Cond Sg P2) => "cogerías" ;--# notpresent
    VP (Cond Sg P3) => "cogería" ;--# notpresent
    VP (Cond Pl P1) => "cogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "cogeríais" ;--# notpresent
    VP (Cond Pl P3) => "cogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "coge" ;
    VP (Imp Sg P3) => "coja" ;
    VP (Imp Pl P1) => "cojamos" ;
    VP (Imp Pl P2) => "coged" ;
    VP (Imp Pl P3) => "cojan" ;
    VP (Pass Sg Masc) => "cogido" ;
    VP (Pass Sg Fem) => "cogida" ;
    VP (Pass Pl Masc) => "cogidos" ;
    VP (Pass Pl Fem) => "cogidas"
    }
  } ;

lin converger2_V = verboV 
 {s = table {
    VI Infn => "converger" ;
    VI Ger => "convergiendo" ;
    VI Part => "convergido" ;
    VP (Pres Ind Sg P1) => "converjo" ;
    VP (Pres Ind Sg P2) => "converges" ;
    VP (Pres Ind Sg P3) => "converge" ;
    VP (Pres Ind Pl P1) => "convergemos" ;
    VP (Pres Ind Pl P2) => "convergéis" ;
    VP (Pres Ind Pl P3) => "convergen" ;
    VP (Pres Subj Sg P1) => "converja" ;
    VP (Pres Subj Sg P2) => "converjas" ;
    VP (Pres Subj Sg P3) => "converja" ;
    VP (Pres Subj Pl P1) => "converjamos" ;
    VP (Pres Subj Pl P2) => "converjáis" ;
    VP (Pres Subj Pl P3) => "converjan" ;
    VP (Impf Ind Sg P1) => "convergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "convergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "convergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"convergiera" ; "convergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convergieras" ; "convergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"convergiera" ; "convergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"convergiéramos" ; "convergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convergierais" ; "convergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convergieran" ; "convergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "convergí" ;--# notpresent
    VP (Pret Sg P2) => "convergiste" ;--# notpresent
    VP (Pret Sg P3) => "convergió" ;--# notpresent
    VP (Pret Pl P1) => "convergimos" ;--# notpresent
    VP (Pret Pl P2) => "convergisteis" ;--# notpresent
    VP (Pret Pl P3) => "convergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "convergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "convergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "convergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "convergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convergieren" ;--# notpresent
    VP (Cond Sg P1) => "convergería" ;--# notpresent
    VP (Cond Sg P2) => "convergerías" ;--# notpresent
    VP (Cond Sg P3) => "convergería" ;--# notpresent
    VP (Cond Pl P1) => "convergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "convergeríais" ;--# notpresent
    VP (Cond Pl P3) => "convergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "converge" ;
    VP (Imp Sg P3) => "converja" ;
    VP (Imp Pl P1) => "converjamos" ;
    VP (Imp Pl P2) => "converged" ;
    VP (Imp Pl P3) => "converjan" ;
    VP (Pass Sg Masc) => "convergido" ;
    VP (Pass Sg Fem) => "convergida" ;
    VP (Pass Pl Masc) => "convergidos" ;
    VP (Pass Pl Fem) => "convergidas"
    }
  } ;

lin descoger2_V = verboV 
 {s = table {
    VI Infn => "descoger" ;
    VI Ger => "descogiendo" ;
    VI Part => "descogido" ;
    VP (Pres Ind Sg P1) => "descojo" ;
    VP (Pres Ind Sg P2) => "descoges" ;
    VP (Pres Ind Sg P3) => "descoge" ;
    VP (Pres Ind Pl P1) => "descogemos" ;
    VP (Pres Ind Pl P2) => "descogéis" ;
    VP (Pres Ind Pl P3) => "descogen" ;
    VP (Pres Subj Sg P1) => "descoja" ;
    VP (Pres Subj Sg P2) => "descojas" ;
    VP (Pres Subj Sg P3) => "descoja" ;
    VP (Pres Subj Pl P1) => "descojamos" ;
    VP (Pres Subj Pl P2) => "descojáis" ;
    VP (Pres Subj Pl P3) => "descojan" ;
    VP (Impf Ind Sg P1) => "descogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descogiera" ; "descogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descogieras" ; "descogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descogiera" ; "descogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descogiéramos" ; "descogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descogierais" ; "descogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descogieran" ; "descogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "descogí" ;--# notpresent
    VP (Pret Sg P2) => "descogiste" ;--# notpresent
    VP (Pret Sg P3) => "descogió" ;--# notpresent
    VP (Pret Pl P1) => "descogimos" ;--# notpresent
    VP (Pret Pl P2) => "descogisteis" ;--# notpresent
    VP (Pret Pl P3) => "descogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descogieren" ;--# notpresent
    VP (Cond Sg P1) => "descogería" ;--# notpresent
    VP (Cond Sg P2) => "descogerías" ;--# notpresent
    VP (Cond Sg P3) => "descogería" ;--# notpresent
    VP (Cond Pl P1) => "descogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "descogeríais" ;--# notpresent
    VP (Cond Pl P3) => "descogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descoge" ;
    VP (Imp Sg P3) => "descoja" ;
    VP (Imp Pl P1) => "descojamos" ;
    VP (Imp Pl P2) => "descoged" ;
    VP (Imp Pl P3) => "descojan" ;
    VP (Pass Sg Masc) => "descogido" ;
    VP (Pass Sg Fem) => "descogida" ;
    VP (Pass Pl Masc) => "descogidos" ;
    VP (Pass Pl Fem) => "descogidas"
    }
  } ;

lin desencoger2_V = verboV 
 {s = table {
    VI Infn => "desencoger" ;
    VI Ger => "desencogiendo" ;
    VI Part => "desencogido" ;
    VP (Pres Ind Sg P1) => "desencojo" ;
    VP (Pres Ind Sg P2) => "desencoges" ;
    VP (Pres Ind Sg P3) => "desencoge" ;
    VP (Pres Ind Pl P1) => "desencogemos" ;
    VP (Pres Ind Pl P2) => "desencogéis" ;
    VP (Pres Ind Pl P3) => "desencogen" ;
    VP (Pres Subj Sg P1) => "desencoja" ;
    VP (Pres Subj Sg P2) => "desencojas" ;
    VP (Pres Subj Sg P3) => "desencoja" ;
    VP (Pres Subj Pl P1) => "desencojamos" ;
    VP (Pres Subj Pl P2) => "desencojáis" ;
    VP (Pres Subj Pl P3) => "desencojan" ;
    VP (Impf Ind Sg P1) => "desencogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desencogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desencogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desencogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desencogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desencogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desencogiera" ; "desencogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desencogieras" ; "desencogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desencogiera" ; "desencogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desencogiéramos" ; "desencogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desencogierais" ; "desencogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desencogieran" ; "desencogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desencogí" ;--# notpresent
    VP (Pret Sg P2) => "desencogiste" ;--# notpresent
    VP (Pret Sg P3) => "desencogió" ;--# notpresent
    VP (Pret Pl P1) => "desencogimos" ;--# notpresent
    VP (Pret Pl P2) => "desencogisteis" ;--# notpresent
    VP (Pret Pl P3) => "desencogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desencogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desencogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desencogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desencogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desencogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desencogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desencogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desencogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desencogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desencogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desencogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desencogieren" ;--# notpresent
    VP (Cond Sg P1) => "desencogería" ;--# notpresent
    VP (Cond Sg P2) => "desencogerías" ;--# notpresent
    VP (Cond Sg P3) => "desencogería" ;--# notpresent
    VP (Cond Pl P1) => "desencogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "desencogeríais" ;--# notpresent
    VP (Cond Pl P3) => "desencogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desencoge" ;
    VP (Imp Sg P3) => "desencoja" ;
    VP (Imp Pl P1) => "desencojamos" ;
    VP (Imp Pl P2) => "desencoged" ;
    VP (Imp Pl P3) => "desencojan" ;
    VP (Pass Sg Masc) => "desencogido" ;
    VP (Pass Sg Fem) => "desencogida" ;
    VP (Pass Pl Masc) => "desencogidos" ;
    VP (Pass Pl Fem) => "desencogidas"
    }
  } ;

lin deterger2_V = verboV 
 {s = table {
    VI Infn => "deterger" ;
    VI Ger => "detergiendo" ;
    VI Part => "detergido" ;
    VP (Pres Ind Sg P1) => "deterjo" ;
    VP (Pres Ind Sg P2) => "deterges" ;
    VP (Pres Ind Sg P3) => "deterge" ;
    VP (Pres Ind Pl P1) => "detergemos" ;
    VP (Pres Ind Pl P2) => "detergéis" ;
    VP (Pres Ind Pl P3) => "detergen" ;
    VP (Pres Subj Sg P1) => "deterja" ;
    VP (Pres Subj Sg P2) => "deterjas" ;
    VP (Pres Subj Sg P3) => "deterja" ;
    VP (Pres Subj Pl P1) => "deterjamos" ;
    VP (Pres Subj Pl P2) => "deterjáis" ;
    VP (Pres Subj Pl P3) => "deterjan" ;
    VP (Impf Ind Sg P1) => "detergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "detergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "detergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "detergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "detergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "detergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"detergiera" ; "detergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"detergieras" ; "detergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"detergiera" ; "detergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"detergiéramos" ; "detergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"detergierais" ; "detergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"detergieran" ; "detergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "detergí" ;--# notpresent
    VP (Pret Sg P2) => "detergiste" ;--# notpresent
    VP (Pret Sg P3) => "detergió" ;--# notpresent
    VP (Pret Pl P1) => "detergimos" ;--# notpresent
    VP (Pret Pl P2) => "detergisteis" ;--# notpresent
    VP (Pret Pl P3) => "detergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "detergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "detergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "detergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "detergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "detergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "detergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "detergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "detergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "detergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "detergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "detergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "detergieren" ;--# notpresent
    VP (Cond Sg P1) => "detergería" ;--# notpresent
    VP (Cond Sg P2) => "detergerías" ;--# notpresent
    VP (Cond Sg P3) => "detergería" ;--# notpresent
    VP (Cond Pl P1) => "detergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "detergeríais" ;--# notpresent
    VP (Cond Pl P3) => "detergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deterge" ;
    VP (Imp Sg P3) => "deterja" ;
    VP (Imp Pl P1) => "deterjamos" ;
    VP (Imp Pl P2) => "deterged" ;
    VP (Imp Pl P3) => "deterjan" ;
    VP (Pass Sg Masc) => "detergido" ;
    VP (Pass Sg Fem) => "detergida" ;
    VP (Pass Pl Masc) => "detergidos" ;
    VP (Pass Pl Fem) => "detergidas"
    }
  } ;

lin emerger2_V = verboV 
 {s = table {
    VI Infn => "emerger" ;
    VI Ger => "emergiendo" ;
    VI Part => "emergido" ;
    VP (Pres Ind Sg P1) => "emerjo" ;
    VP (Pres Ind Sg P2) => "emerges" ;
    VP (Pres Ind Sg P3) => "emerge" ;
    VP (Pres Ind Pl P1) => "emergemos" ;
    VP (Pres Ind Pl P2) => "emergéis" ;
    VP (Pres Ind Pl P3) => "emergen" ;
    VP (Pres Subj Sg P1) => "emerja" ;
    VP (Pres Subj Sg P2) => "emerjas" ;
    VP (Pres Subj Sg P3) => "emerja" ;
    VP (Pres Subj Pl P1) => "emerjamos" ;
    VP (Pres Subj Pl P2) => "emerjáis" ;
    VP (Pres Subj Pl P3) => "emerjan" ;
    VP (Impf Ind Sg P1) => "emergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emergiera" ; "emergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emergieras" ; "emergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emergiera" ; "emergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emergiéramos" ; "emergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emergierais" ; "emergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emergieran" ; "emergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "emergí" ;--# notpresent
    VP (Pret Sg P2) => "emergiste" ;--# notpresent
    VP (Pret Sg P3) => "emergió" ;--# notpresent
    VP (Pret Pl P1) => "emergimos" ;--# notpresent
    VP (Pret Pl P2) => "emergisteis" ;--# notpresent
    VP (Pret Pl P3) => "emergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emergeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emergerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emergerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emergeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emergeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emergerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emergieren" ;--# notpresent
    VP (Cond Sg P1) => "emergería" ;--# notpresent
    VP (Cond Sg P2) => "emergerías" ;--# notpresent
    VP (Cond Sg P3) => "emergería" ;--# notpresent
    VP (Cond Pl P1) => "emergeríamos" ;--# notpresent
    VP (Cond Pl P2) => "emergeríais" ;--# notpresent
    VP (Cond Pl P3) => "emergerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emerge" ;
    VP (Imp Sg P3) => "emerja" ;
    VP (Imp Pl P1) => "emerjamos" ;
    VP (Imp Pl P2) => "emerged" ;
    VP (Imp Pl P3) => "emerjan" ;
    VP (Pass Sg Masc) => "emergido" ;
    VP (Pass Sg Fem) => "emergida" ;
    VP (Pass Pl Masc) => "emergidos" ;
    VP (Pass Pl Fem) => "emergidas"
    }
  } ;

lin encoger2_V = verboV 
 {s = table {
    VI Infn => "encoger" ;
    VI Ger => "encogiendo" ;
    VI Part => "encogido" ;
    VP (Pres Ind Sg P1) => "encojo" ;
    VP (Pres Ind Sg P2) => "encoges" ;
    VP (Pres Ind Sg P3) => "encoge" ;
    VP (Pres Ind Pl P1) => "encogemos" ;
    VP (Pres Ind Pl P2) => "encogéis" ;
    VP (Pres Ind Pl P3) => "encogen" ;
    VP (Pres Subj Sg P1) => "encoja" ;
    VP (Pres Subj Sg P2) => "encojas" ;
    VP (Pres Subj Sg P3) => "encoja" ;
    VP (Pres Subj Pl P1) => "encojamos" ;
    VP (Pres Subj Pl P2) => "encojáis" ;
    VP (Pres Subj Pl P3) => "encojan" ;
    VP (Impf Ind Sg P1) => "encogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encogiera" ; "encogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encogieras" ; "encogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encogiera" ; "encogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encogiéramos" ; "encogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encogierais" ; "encogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encogieran" ; "encogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "encogí" ;--# notpresent
    VP (Pret Sg P2) => "encogiste" ;--# notpresent
    VP (Pret Sg P3) => "encogió" ;--# notpresent
    VP (Pret Pl P1) => "encogimos" ;--# notpresent
    VP (Pret Pl P2) => "encogisteis" ;--# notpresent
    VP (Pret Pl P3) => "encogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encogieren" ;--# notpresent
    VP (Cond Sg P1) => "encogería" ;--# notpresent
    VP (Cond Sg P2) => "encogerías" ;--# notpresent
    VP (Cond Sg P3) => "encogería" ;--# notpresent
    VP (Cond Pl P1) => "encogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "encogeríais" ;--# notpresent
    VP (Cond Pl P3) => "encogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encoge" ;
    VP (Imp Sg P3) => "encoja" ;
    VP (Imp Pl P1) => "encojamos" ;
    VP (Imp Pl P2) => "encoged" ;
    VP (Imp Pl P3) => "encojan" ;
    VP (Pass Sg Masc) => "encogido" ;
    VP (Pass Sg Fem) => "encogida" ;
    VP (Pass Pl Masc) => "encogidos" ;
    VP (Pass Pl Fem) => "encogidas"
    }
  } ;

lin entrecoger2_V = verboV 
 {s = table {
    VI Infn => "entrecoger" ;
    VI Ger => "entrecogiendo" ;
    VI Part => "entrecogido" ;
    VP (Pres Ind Sg P1) => "entrecojo" ;
    VP (Pres Ind Sg P2) => "entrecoges" ;
    VP (Pres Ind Sg P3) => "entrecoge" ;
    VP (Pres Ind Pl P1) => "entrecogemos" ;
    VP (Pres Ind Pl P2) => "entrecogéis" ;
    VP (Pres Ind Pl P3) => "entrecogen" ;
    VP (Pres Subj Sg P1) => "entrecoja" ;
    VP (Pres Subj Sg P2) => "entrecojas" ;
    VP (Pres Subj Sg P3) => "entrecoja" ;
    VP (Pres Subj Pl P1) => "entrecojamos" ;
    VP (Pres Subj Pl P2) => "entrecojáis" ;
    VP (Pres Subj Pl P3) => "entrecojan" ;
    VP (Impf Ind Sg P1) => "entrecogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entrecogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entrecogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entrecogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entrecogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entrecogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entrecogiera" ; "entrecogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entrecogieras" ; "entrecogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entrecogiera" ; "entrecogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entrecogiéramos" ; "entrecogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entrecogierais" ; "entrecogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entrecogieran" ; "entrecogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "entrecogí" ;--# notpresent
    VP (Pret Sg P2) => "entrecogiste" ;--# notpresent
    VP (Pret Sg P3) => "entrecogió" ;--# notpresent
    VP (Pret Pl P1) => "entrecogimos" ;--# notpresent
    VP (Pret Pl P2) => "entrecogisteis" ;--# notpresent
    VP (Pret Pl P3) => "entrecogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entrecogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entrecogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entrecogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entrecogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entrecogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entrecogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entrecogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entrecogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entrecogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entrecogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entrecogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entrecogieren" ;--# notpresent
    VP (Cond Sg P1) => "entrecogería" ;--# notpresent
    VP (Cond Sg P2) => "entrecogerías" ;--# notpresent
    VP (Cond Sg P3) => "entrecogería" ;--# notpresent
    VP (Cond Pl P1) => "entrecogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "entrecogeríais" ;--# notpresent
    VP (Cond Pl P3) => "entrecogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entrecoge" ;
    VP (Imp Sg P3) => "entrecoja" ;
    VP (Imp Pl P1) => "entrecojamos" ;
    VP (Imp Pl P2) => "entrecoged" ;
    VP (Imp Pl P3) => "entrecojan" ;
    VP (Pass Sg Masc) => "entrecogido" ;
    VP (Pass Sg Fem) => "entrecogida" ;
    VP (Pass Pl Masc) => "entrecogidos" ;
    VP (Pass Pl Fem) => "entrecogidas"
    }
  } ;

lin escoger2_V = verboV 
 {s = table {
    VI Infn => "escoger" ;
    VI Ger => "escogiendo" ;
    VI Part => "escogido" ;
    VP (Pres Ind Sg P1) => "escojo" ;
    VP (Pres Ind Sg P2) => "escoges" ;
    VP (Pres Ind Sg P3) => "escoge" ;
    VP (Pres Ind Pl P1) => "escogemos" ;
    VP (Pres Ind Pl P2) => "escogéis" ;
    VP (Pres Ind Pl P3) => "escogen" ;
    VP (Pres Subj Sg P1) => "escoja" ;
    VP (Pres Subj Sg P2) => "escojas" ;
    VP (Pres Subj Sg P3) => "escoja" ;
    VP (Pres Subj Pl P1) => "escojamos" ;
    VP (Pres Subj Pl P2) => "escojáis" ;
    VP (Pres Subj Pl P3) => "escojan" ;
    VP (Impf Ind Sg P1) => "escogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escogiera" ; "escogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escogieras" ; "escogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escogiera" ; "escogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escogiéramos" ; "escogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escogierais" ; "escogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escogieran" ; "escogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "escogí" ;--# notpresent
    VP (Pret Sg P2) => "escogiste" ;--# notpresent
    VP (Pret Sg P3) => "escogió" ;--# notpresent
    VP (Pret Pl P1) => "escogimos" ;--# notpresent
    VP (Pret Pl P2) => "escogisteis" ;--# notpresent
    VP (Pret Pl P3) => "escogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escogieren" ;--# notpresent
    VP (Cond Sg P1) => "escogería" ;--# notpresent
    VP (Cond Sg P2) => "escogerías" ;--# notpresent
    VP (Cond Sg P3) => "escogería" ;--# notpresent
    VP (Cond Pl P1) => "escogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "escogeríais" ;--# notpresent
    VP (Cond Pl P3) => "escogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escoge" ;
    VP (Imp Sg P3) => "escoja" ;
    VP (Imp Pl P1) => "escojamos" ;
    VP (Imp Pl P2) => "escoged" ;
    VP (Imp Pl P3) => "escojan" ;
    VP (Pass Sg Masc) => "escogido" ;
    VP (Pass Sg Fem) => "escogida" ;
    VP (Pass Pl Masc) => "escogidos" ;
    VP (Pass Pl Fem) => "escogidas"
    }
  } ;

lin proteger2_V = verboV 
 {s = table {
    VI Infn => "proteger" ;
    VI Ger => "protegiendo" ;
    VI Part => "protegido" ;
    VP (Pres Ind Sg P1) => "protejo" ;
    VP (Pres Ind Sg P2) => "proteges" ;
    VP (Pres Ind Sg P3) => "protege" ;
    VP (Pres Ind Pl P1) => "protegemos" ;
    VP (Pres Ind Pl P2) => "protegéis" ;
    VP (Pres Ind Pl P3) => "protegen" ;
    VP (Pres Subj Sg P1) => "proteja" ;
    VP (Pres Subj Sg P2) => "protejas" ;
    VP (Pres Subj Sg P3) => "proteja" ;
    VP (Pres Subj Pl P1) => "protejamos" ;
    VP (Pres Subj Pl P2) => "protejáis" ;
    VP (Pres Subj Pl P3) => "protejan" ;
    VP (Impf Ind Sg P1) => "protegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "protegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "protegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "protegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "protegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "protegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"protegiera" ; "protegiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"protegieras" ; "protegieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"protegiera" ; "protegiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"protegiéramos" ; "protegiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"protegierais" ; "protegieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"protegieran" ; "protegiesen"} ;--# notpresent
    VP (Pret Sg P1) => "protegí" ;--# notpresent
    VP (Pret Sg P2) => "protegiste" ;--# notpresent
    VP (Pret Sg P3) => "protegió" ;--# notpresent
    VP (Pret Pl P1) => "protegimos" ;--# notpresent
    VP (Pret Pl P2) => "protegisteis" ;--# notpresent
    VP (Pret Pl P3) => "protegieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "protegeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "protegerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "protegerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "protegeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "protegeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "protegerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "protegiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "protegieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "protegiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "protegiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "protegiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "protegieren" ;--# notpresent
    VP (Cond Sg P1) => "protegería" ;--# notpresent
    VP (Cond Sg P2) => "protegerías" ;--# notpresent
    VP (Cond Sg P3) => "protegería" ;--# notpresent
    VP (Cond Pl P1) => "protegeríamos" ;--# notpresent
    VP (Cond Pl P2) => "protegeríais" ;--# notpresent
    VP (Cond Pl P3) => "protegerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "protege" ;
    VP (Imp Sg P3) => "proteja" ;
    VP (Imp Pl P1) => "protejamos" ;
    VP (Imp Pl P2) => "proteged" ;
    VP (Imp Pl P3) => "protejan" ;
    VP (Pass Sg Masc) => "protegido" ;
    VP (Pass Sg Fem) => "protegida" ;
    VP (Pass Pl Masc) => "protegidos" ;
    VP (Pass Pl Fem) => "protegidas"
    }
  } ;

lin recoger2_V = verboV 
 {s = table {
    VI Infn => "recoger" ;
    VI Ger => "recogiendo" ;
    VI Part => "recogido" ;
    VP (Pres Ind Sg P1) => "recojo" ;
    VP (Pres Ind Sg P2) => "recoges" ;
    VP (Pres Ind Sg P3) => "recoge" ;
    VP (Pres Ind Pl P1) => "recogemos" ;
    VP (Pres Ind Pl P2) => "recogéis" ;
    VP (Pres Ind Pl P3) => "recogen" ;
    VP (Pres Subj Sg P1) => "recoja" ;
    VP (Pres Subj Sg P2) => "recojas" ;
    VP (Pres Subj Sg P3) => "recoja" ;
    VP (Pres Subj Pl P1) => "recojamos" ;
    VP (Pres Subj Pl P2) => "recojáis" ;
    VP (Pres Subj Pl P3) => "recojan" ;
    VP (Impf Ind Sg P1) => "recogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recogiera" ; "recogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recogieras" ; "recogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recogiera" ; "recogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recogiéramos" ; "recogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recogierais" ; "recogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recogieran" ; "recogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "recogí" ;--# notpresent
    VP (Pret Sg P2) => "recogiste" ;--# notpresent
    VP (Pret Sg P3) => "recogió" ;--# notpresent
    VP (Pret Pl P1) => "recogimos" ;--# notpresent
    VP (Pret Pl P2) => "recogisteis" ;--# notpresent
    VP (Pret Pl P3) => "recogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recogieren" ;--# notpresent
    VP (Cond Sg P1) => "recogería" ;--# notpresent
    VP (Cond Sg P2) => "recogerías" ;--# notpresent
    VP (Cond Sg P3) => "recogería" ;--# notpresent
    VP (Cond Pl P1) => "recogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "recogeríais" ;--# notpresent
    VP (Cond Pl P3) => "recogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recoge" ;
    VP (Imp Sg P3) => "recoja" ;
    VP (Imp Pl P1) => "recojamos" ;
    VP (Imp Pl P2) => "recoged" ;
    VP (Imp Pl P3) => "recojan" ;
    VP (Pass Sg Masc) => "recogido" ;
    VP (Pass Sg Fem) => "recogida" ;
    VP (Pass Pl Masc) => "recogidos" ;
    VP (Pass Pl Fem) => "recogidas"
    }
  } ;

lin sobrecoger2_V = verboV 
 {s = table {
    VI Infn => "sobrecoger" ;
    VI Ger => "sobrecogiendo" ;
    VI Part => "sobrecogido" ;
    VP (Pres Ind Sg P1) => "sobrecojo" ;
    VP (Pres Ind Sg P2) => "sobrecoges" ;
    VP (Pres Ind Sg P3) => "sobrecoge" ;
    VP (Pres Ind Pl P1) => "sobrecogemos" ;
    VP (Pres Ind Pl P2) => "sobrecogéis" ;
    VP (Pres Ind Pl P3) => "sobrecogen" ;
    VP (Pres Subj Sg P1) => "sobrecoja" ;
    VP (Pres Subj Sg P2) => "sobrecojas" ;
    VP (Pres Subj Sg P3) => "sobrecoja" ;
    VP (Pres Subj Pl P1) => "sobrecojamos" ;
    VP (Pres Subj Pl P2) => "sobrecojáis" ;
    VP (Pres Subj Pl P3) => "sobrecojan" ;
    VP (Impf Ind Sg P1) => "sobrecogía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrecogías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrecogía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrecogíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrecogíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrecogían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrecogiera" ; "sobrecogiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrecogieras" ; "sobrecogieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrecogiera" ; "sobrecogiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrecogiéramos" ; "sobrecogiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrecogierais" ; "sobrecogieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrecogieran" ; "sobrecogiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrecogí" ;--# notpresent
    VP (Pret Sg P2) => "sobrecogiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrecogió" ;--# notpresent
    VP (Pret Pl P1) => "sobrecogimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrecogisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrecogieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrecogeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrecogerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrecogerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrecogeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrecogeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrecogerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrecogiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrecogieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrecogiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrecogiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrecogiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrecogieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrecogería" ;--# notpresent
    VP (Cond Sg P2) => "sobrecogerías" ;--# notpresent
    VP (Cond Sg P3) => "sobrecogería" ;--# notpresent
    VP (Cond Pl P1) => "sobrecogeríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrecogeríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrecogerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrecoge" ;
    VP (Imp Sg P3) => "sobrecoja" ;
    VP (Imp Pl P1) => "sobrecojamos" ;
    VP (Imp Pl P2) => "sobrecoged" ;
    VP (Imp Pl P3) => "sobrecojan" ;
    VP (Pass Sg Masc) => "sobrecogido" ;
    VP (Pass Sg Fem) => "sobrecogida" ;
    VP (Pass Pl Masc) => "sobrecogidos" ;
    VP (Pass Pl Fem) => "sobrecogidas"
    }
  } ;

lin conocer_V = verboV 
 {s = table {
    VI Infn => "conocer" ;
    VI Ger => "conociendo" ;
    VI Part => "conocido" ;
    VP (Pres Ind Sg P1) => "conozco" ;
    VP (Pres Ind Sg P2) => "conoces" ;
    VP (Pres Ind Sg P3) => "conoce" ;
    VP (Pres Ind Pl P1) => "conocemos" ;
    VP (Pres Ind Pl P2) => "conocéis" ;
    VP (Pres Ind Pl P3) => "conocen" ;
    VP (Pres Subj Sg P1) => "conozca" ;
    VP (Pres Subj Sg P2) => "conozcas" ;
    VP (Pres Subj Sg P3) => "conozca" ;
    VP (Pres Subj Pl P1) => "conozcamos" ;
    VP (Pres Subj Pl P2) => "conozcáis" ;
    VP (Pres Subj Pl P3) => "conozcan" ;
    VP (Impf Ind Sg P1) => "conocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "conocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "conocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "conocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "conocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"conociera" ; "conociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"conocieras" ; "conocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"conociera" ; "conociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"conociéramos" ; "conociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"conocierais" ; "conocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"conocieran" ; "conociesen"} ;--# notpresent
    VP (Pret Sg P1) => "conocí" ;--# notpresent
    VP (Pret Sg P2) => "conociste" ;--# notpresent
    VP (Pret Sg P3) => "conoció" ;--# notpresent
    VP (Pret Pl P1) => "conocimos" ;--# notpresent
    VP (Pret Pl P2) => "conocisteis" ;--# notpresent
    VP (Pret Pl P3) => "conocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "conoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "conocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "conocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "conoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "conoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "conocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "conociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "conocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "conociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "conociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "conociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "conocieren" ;--# notpresent
    VP (Cond Sg P1) => "conocería" ;--# notpresent
    VP (Cond Sg P2) => "conocerías" ;--# notpresent
    VP (Cond Sg P3) => "conocería" ;--# notpresent
    VP (Cond Pl P1) => "conoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "conoceríais" ;--# notpresent
    VP (Cond Pl P3) => "conocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "conoce" ;
    VP (Imp Sg P3) => "conozca" ;
    VP (Imp Pl P1) => "conozcamos" ;
    VP (Imp Pl P2) => "conoced" ;
    VP (Imp Pl P3) => "conozcan" ;
    VP (Pass Sg Masc) => "conocido" ;
    VP (Pass Sg Fem) => "conocida" ;
    VP (Pass Pl Masc) => "conocidos" ;
    VP (Pass Pl Fem) => "conocidas"
    }
  } ;

lin desconocer_V = verboV 
 {s = table {
    VI Infn => "desconocer" ;
    VI Ger => "desconociendo" ;
    VI Part => "desconocido" ;
    VP (Pres Ind Sg P1) => "desconozco" ;
    VP (Pres Ind Sg P2) => "desconoces" ;
    VP (Pres Ind Sg P3) => "desconoce" ;
    VP (Pres Ind Pl P1) => "desconocemos" ;
    VP (Pres Ind Pl P2) => "desconocéis" ;
    VP (Pres Ind Pl P3) => "desconocen" ;
    VP (Pres Subj Sg P1) => "desconozca" ;
    VP (Pres Subj Sg P2) => "desconozcas" ;
    VP (Pres Subj Sg P3) => "desconozca" ;
    VP (Pres Subj Pl P1) => "desconozcamos" ;
    VP (Pres Subj Pl P2) => "desconozcáis" ;
    VP (Pres Subj Pl P3) => "desconozcan" ;
    VP (Impf Ind Sg P1) => "desconocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desconocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desconocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desconocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desconocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desconocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desconociera" ; "desconociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desconocieras" ; "desconocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desconociera" ; "desconociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desconociéramos" ; "desconociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desconocierais" ; "desconocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desconocieran" ; "desconociesen"} ;--# notpresent
    VP (Pret Sg P1) => "desconocí" ;--# notpresent
    VP (Pret Sg P2) => "desconociste" ;--# notpresent
    VP (Pret Sg P3) => "desconoció" ;--# notpresent
    VP (Pret Pl P1) => "desconocimos" ;--# notpresent
    VP (Pret Pl P2) => "desconocisteis" ;--# notpresent
    VP (Pret Pl P3) => "desconocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desconoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desconocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desconocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desconoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desconoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desconocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desconociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desconocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desconociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desconociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desconociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desconocieren" ;--# notpresent
    VP (Cond Sg P1) => "desconocería" ;--# notpresent
    VP (Cond Sg P2) => "desconocerías" ;--# notpresent
    VP (Cond Sg P3) => "desconocería" ;--# notpresent
    VP (Cond Pl P1) => "desconoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desconoceríais" ;--# notpresent
    VP (Cond Pl P3) => "desconocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desconoce" ;
    VP (Imp Sg P3) => "desconozca" ;
    VP (Imp Pl P1) => "desconozcamos" ;
    VP (Imp Pl P2) => "desconoced" ;
    VP (Imp Pl P3) => "desconozcan" ;
    VP (Pass Sg Masc) => "desconocido" ;
    VP (Pass Sg Fem) => "desconocida" ;
    VP (Pass Pl Masc) => "desconocidos" ;
    VP (Pass Pl Fem) => "desconocidas"
    }
  } ;

lin preconocer_V = verboV 
 {s = table {
    VI Infn => "preconocer" ;
    VI Ger => "preconociendo" ;
    VI Part => "preconocido" ;
    VP (Pres Ind Sg P1) => "preconozco" ;
    VP (Pres Ind Sg P2) => "preconoces" ;
    VP (Pres Ind Sg P3) => "preconoce" ;
    VP (Pres Ind Pl P1) => "preconocemos" ;
    VP (Pres Ind Pl P2) => "preconocéis" ;
    VP (Pres Ind Pl P3) => "preconocen" ;
    VP (Pres Subj Sg P1) => "preconozca" ;
    VP (Pres Subj Sg P2) => "preconozcas" ;
    VP (Pres Subj Sg P3) => "preconozca" ;
    VP (Pres Subj Pl P1) => "preconozcamos" ;
    VP (Pres Subj Pl P2) => "preconozcáis" ;
    VP (Pres Subj Pl P3) => "preconozcan" ;
    VP (Impf Ind Sg P1) => "preconocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "preconocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "preconocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preconocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preconocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preconocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"preconociera" ; "preconociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"preconocieras" ; "preconocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"preconociera" ; "preconociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"preconociéramos" ; "preconociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"preconocierais" ; "preconocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"preconocieran" ; "preconociesen"} ;--# notpresent
    VP (Pret Sg P1) => "preconocí" ;--# notpresent
    VP (Pret Sg P2) => "preconociste" ;--# notpresent
    VP (Pret Sg P3) => "preconoció" ;--# notpresent
    VP (Pret Pl P1) => "preconocimos" ;--# notpresent
    VP (Pret Pl P2) => "preconocisteis" ;--# notpresent
    VP (Pret Pl P3) => "preconocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preconoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "preconocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "preconocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preconoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preconoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "preconocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "preconociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "preconocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "preconociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "preconociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "preconociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "preconocieren" ;--# notpresent
    VP (Cond Sg P1) => "preconocería" ;--# notpresent
    VP (Cond Sg P2) => "preconocerías" ;--# notpresent
    VP (Cond Sg P3) => "preconocería" ;--# notpresent
    VP (Cond Pl P1) => "preconoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "preconoceríais" ;--# notpresent
    VP (Cond Pl P3) => "preconocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preconoce" ;
    VP (Imp Sg P3) => "preconozca" ;
    VP (Imp Pl P1) => "preconozcamos" ;
    VP (Imp Pl P2) => "preconoced" ;
    VP (Imp Pl P3) => "preconozcan" ;
    VP (Pass Sg Masc) => "preconocido" ;
    VP (Pass Sg Fem) => "preconocida" ;
    VP (Pass Pl Masc) => "preconocidos" ;
    VP (Pass Pl Fem) => "preconocidas"
    }
  } ;

lin reconocer_V = verboV 
 {s = table {
    VI Infn => "reconocer" ;
    VI Ger => "reconociendo" ;
    VI Part => "reconocido" ;
    VP (Pres Ind Sg P1) => "reconozco" ;
    VP (Pres Ind Sg P2) => "reconoces" ;
    VP (Pres Ind Sg P3) => "reconoce" ;
    VP (Pres Ind Pl P1) => "reconocemos" ;
    VP (Pres Ind Pl P2) => "reconocéis" ;
    VP (Pres Ind Pl P3) => "reconocen" ;
    VP (Pres Subj Sg P1) => "reconozca" ;
    VP (Pres Subj Sg P2) => "reconozcas" ;
    VP (Pres Subj Sg P3) => "reconozca" ;
    VP (Pres Subj Pl P1) => "reconozcamos" ;
    VP (Pres Subj Pl P2) => "reconozcáis" ;
    VP (Pres Subj Pl P3) => "reconozcan" ;
    VP (Impf Ind Sg P1) => "reconocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reconociera" ; "reconociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reconocieras" ; "reconocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reconociera" ; "reconociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reconociéramos" ; "reconociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reconocierais" ; "reconocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reconocieran" ; "reconociesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconocí" ;--# notpresent
    VP (Pret Sg P2) => "reconociste" ;--# notpresent
    VP (Pret Sg P3) => "reconoció" ;--# notpresent
    VP (Pret Pl P1) => "reconocimos" ;--# notpresent
    VP (Pret Pl P2) => "reconocisteis" ;--# notpresent
    VP (Pret Pl P3) => "reconocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reconociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reconocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reconociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reconociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reconociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reconocieren" ;--# notpresent
    VP (Cond Sg P1) => "reconocería" ;--# notpresent
    VP (Cond Sg P2) => "reconocerías" ;--# notpresent
    VP (Cond Sg P3) => "reconocería" ;--# notpresent
    VP (Cond Pl P1) => "reconoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconoceríais" ;--# notpresent
    VP (Cond Pl P3) => "reconocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconoce" ;
    VP (Imp Sg P3) => "reconozca" ;
    VP (Imp Pl P1) => "reconozcamos" ;
    VP (Imp Pl P2) => "reconoced" ;
    VP (Imp Pl P3) => "reconozcan" ;
    VP (Pass Sg Masc) => "reconocido" ;
    VP (Pass Sg Fem) => "reconocida" ;
    VP (Pass Pl Masc) => "reconocidos" ;
    VP (Pass Pl Fem) => "reconocidas"
    }
  } ;

lin delinquir_V = verboV 
 {s = table {
    VI Infn => "delinquir" ;
    VI Ger => "delinquiendo" ;
    VI Part => "delinquido" ;
    VP (Pres Ind Sg P1) => "delinco" ;
    VP (Pres Ind Sg P2) => "delinques" ;
    VP (Pres Ind Sg P3) => "delinque" ;
    VP (Pres Ind Pl P1) => "delinquimos" ;
    VP (Pres Ind Pl P2) => "delinquís" ;
    VP (Pres Ind Pl P3) => "delinquen" ;
    VP (Pres Subj Sg P1) => "delinca" ;
    VP (Pres Subj Sg P2) => "delincas" ;
    VP (Pres Subj Sg P3) => "delinca" ;
    VP (Pres Subj Pl P1) => "delincamos" ;
    VP (Pres Subj Pl P2) => "delincáis" ;
    VP (Pres Subj Pl P3) => "delincan" ;
    VP (Impf Ind Sg P1) => "delinquía" ;--# notpresent
    VP (Impf Ind Sg P2) => "delinquías" ;--# notpresent
    VP (Impf Ind Sg P3) => "delinquía" ;--# notpresent
    VP (Impf Ind Pl P1) => "delinquíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "delinquíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "delinquían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"delinquiera" ; "delinquiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"delinquieras" ; "delinquieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"delinquiera" ; "delinquiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"delinquiéramos" ; "delinquiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"delinquierais" ; "delinquieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"delinquieran" ; "delinquiesen"} ;--# notpresent
    VP (Pret Sg P1) => "delinquí" ;--# notpresent
    VP (Pret Sg P2) => "delinquiste" ;--# notpresent
    VP (Pret Sg P3) => "delinquió" ;--# notpresent
    VP (Pret Pl P1) => "delinquimos" ;--# notpresent
    VP (Pret Pl P2) => "delinquisteis" ;--# notpresent
    VP (Pret Pl P3) => "delinquieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "delinquiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "delinquirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "delinquirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "delinquiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "delinquiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "delinquirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "delinquiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "delinquieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "delinquiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "delinquiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "delinquiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "delinquieren" ;--# notpresent
    VP (Cond Sg P1) => "delinquiría" ;--# notpresent
    VP (Cond Sg P2) => "delinquirías" ;--# notpresent
    VP (Cond Sg P3) => "delinquiría" ;--# notpresent
    VP (Cond Pl P1) => "delinquiríamos" ;--# notpresent
    VP (Cond Pl P2) => "delinquiríais" ;--# notpresent
    VP (Cond Pl P3) => "delinquirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "delinque" ;
    VP (Imp Sg P3) => "delinca" ;
    VP (Imp Pl P1) => "delincamos" ;
    VP (Imp Pl P2) => "delinquid" ;
    VP (Imp Pl P3) => "delincan" ;
    VP (Pass Sg Masc) => "delinquido" ;
    VP (Pass Sg Fem) => "delinquida" ;
    VP (Pass Pl Masc) => "delinquidos" ;
    VP (Pass Pl Fem) => "delinquidas"
    }
  } ;

lin derrelinquir_V = verboV 
 {s = table {
    VI Infn => "derrelinquir" ;
    VI Ger => "derrelinquiendo" ;
    VI Part => "derrelinquido" ;
    VP (Pres Ind Sg P1) => "derrelinco" ;
    VP (Pres Ind Sg P2) => "derrelinques" ;
    VP (Pres Ind Sg P3) => "derrelinque" ;
    VP (Pres Ind Pl P1) => "derrelinquimos" ;
    VP (Pres Ind Pl P2) => "derrelinquís" ;
    VP (Pres Ind Pl P3) => "derrelinquen" ;
    VP (Pres Subj Sg P1) => "derrelinca" ;
    VP (Pres Subj Sg P2) => "derrelincas" ;
    VP (Pres Subj Sg P3) => "derrelinca" ;
    VP (Pres Subj Pl P1) => "derrelincamos" ;
    VP (Pres Subj Pl P2) => "derrelincáis" ;
    VP (Pres Subj Pl P3) => "derrelincan" ;
    VP (Impf Ind Sg P1) => "derrelinquía" ;--# notpresent
    VP (Impf Ind Sg P2) => "derrelinquías" ;--# notpresent
    VP (Impf Ind Sg P3) => "derrelinquía" ;--# notpresent
    VP (Impf Ind Pl P1) => "derrelinquíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "derrelinquíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "derrelinquían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"derrelinquiera" ; "derrelinquiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"derrelinquieras" ; "derrelinquieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"derrelinquiera" ; "derrelinquiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"derrelinquiéramos" ; "derrelinquiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"derrelinquierais" ; "derrelinquieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"derrelinquieran" ; "derrelinquiesen"} ;--# notpresent
    VP (Pret Sg P1) => "derrelinquí" ;--# notpresent
    VP (Pret Sg P2) => "derrelinquiste" ;--# notpresent
    VP (Pret Sg P3) => "derrelinquió" ;--# notpresent
    VP (Pret Pl P1) => "derrelinquimos" ;--# notpresent
    VP (Pret Pl P2) => "derrelinquisteis" ;--# notpresent
    VP (Pret Pl P3) => "derrelinquieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "derrelinquiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "derrelinquirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "derrelinquirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "derrelinquiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "derrelinquiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "derrelinquirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "derrelinquiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "derrelinquieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "derrelinquiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "derrelinquiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "derrelinquiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "derrelinquieren" ;--# notpresent
    VP (Cond Sg P1) => "derrelinquiría" ;--# notpresent
    VP (Cond Sg P2) => "derrelinquirías" ;--# notpresent
    VP (Cond Sg P3) => "derrelinquiría" ;--# notpresent
    VP (Cond Pl P1) => "derrelinquiríamos" ;--# notpresent
    VP (Cond Pl P2) => "derrelinquiríais" ;--# notpresent
    VP (Cond Pl P3) => "derrelinquirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "derrelinque" ;
    VP (Imp Sg P3) => "derrelinca" ;
    VP (Imp Pl P1) => "derrelincamos" ;
    VP (Imp Pl P2) => "derrelinquid" ;
    VP (Imp Pl P3) => "derrelincan" ;
    VP (Pass Sg Masc) => "derrelinquido" ;
    VP (Pass Sg Fem) => "derrelinquida" ;
    VP (Pass Pl Masc) => "derrelinquidos" ;
    VP (Pass Pl Fem) => "derrelinquidas"
    }
  } ;

lin adstringir_V = verboV 
 {s = table {
    VI Infn => "adstringir" ;
    VI Ger => "adstringiendo" ;
    VI Part => "adstringido" ;
    VP (Pres Ind Sg P1) => "adstrinjo" ;
    VP (Pres Ind Sg P2) => "adstringes" ;
    VP (Pres Ind Sg P3) => "adstringe" ;
    VP (Pres Ind Pl P1) => "adstringimos" ;
    VP (Pres Ind Pl P2) => "adstringís" ;
    VP (Pres Ind Pl P3) => "adstringen" ;
    VP (Pres Subj Sg P1) => "adstrinja" ;
    VP (Pres Subj Sg P2) => "adstrinjas" ;
    VP (Pres Subj Sg P3) => "adstrinja" ;
    VP (Pres Subj Pl P1) => "adstrinjamos" ;
    VP (Pres Subj Pl P2) => "adstrinjáis" ;
    VP (Pres Subj Pl P3) => "adstrinjan" ;
    VP (Impf Ind Sg P1) => "adstringía" ;--# notpresent
    VP (Impf Ind Sg P2) => "adstringías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adstringía" ;--# notpresent
    VP (Impf Ind Pl P1) => "adstringíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adstringíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adstringían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adstringiera" ; "adstringiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adstringieras" ; "adstringieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adstringiera" ; "adstringiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adstringiéramos" ; "adstringiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adstringierais" ; "adstringieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adstringieran" ; "adstringiesen"} ;--# notpresent
    VP (Pret Sg P1) => "adstringí" ;--# notpresent
    VP (Pret Sg P2) => "adstringiste" ;--# notpresent
    VP (Pret Sg P3) => "adstringió" ;--# notpresent
    VP (Pret Pl P1) => "adstringimos" ;--# notpresent
    VP (Pret Pl P2) => "adstringisteis" ;--# notpresent
    VP (Pret Pl P3) => "adstringieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adstringiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adstringirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adstringirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adstringiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adstringiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adstringirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adstringiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adstringieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adstringiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adstringiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adstringiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adstringieren" ;--# notpresent
    VP (Cond Sg P1) => "adstringiría" ;--# notpresent
    VP (Cond Sg P2) => "adstringirías" ;--# notpresent
    VP (Cond Sg P3) => "adstringiría" ;--# notpresent
    VP (Cond Pl P1) => "adstringiríamos" ;--# notpresent
    VP (Cond Pl P2) => "adstringiríais" ;--# notpresent
    VP (Cond Pl P3) => "adstringirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adstringe" ;
    VP (Imp Sg P3) => "adstrinja" ;
    VP (Imp Pl P1) => "adstrinjamos" ;
    VP (Imp Pl P2) => "adstringid" ;
    VP (Imp Pl P3) => "adstrinjan" ;
    VP (Pass Sg Masc) => "adstringido" ;
    VP (Pass Sg Fem) => "adstringida" ;
    VP (Pass Pl Masc) => "adstringidos" ;
    VP (Pass Pl Fem) => "adstringidas"
    }
  } ;

lin afligir_V = verboV 
 {s = table {
    VI Infn => "afligir" ;
    VI Ger => "afligiendo" ;
    VI Part => "afligido" ;
    VP (Pres Ind Sg P1) => "aflijo" ;
    VP (Pres Ind Sg P2) => "afliges" ;
    VP (Pres Ind Sg P3) => "aflige" ;
    VP (Pres Ind Pl P1) => "afligimos" ;
    VP (Pres Ind Pl P2) => "afligís" ;
    VP (Pres Ind Pl P3) => "afligen" ;
    VP (Pres Subj Sg P1) => "aflija" ;
    VP (Pres Subj Sg P2) => "aflijas" ;
    VP (Pres Subj Sg P3) => "aflija" ;
    VP (Pres Subj Pl P1) => "aflijamos" ;
    VP (Pres Subj Pl P2) => "aflijáis" ;
    VP (Pres Subj Pl P3) => "aflijan" ;
    VP (Impf Ind Sg P1) => "afligía" ;--# notpresent
    VP (Impf Ind Sg P2) => "afligías" ;--# notpresent
    VP (Impf Ind Sg P3) => "afligía" ;--# notpresent
    VP (Impf Ind Pl P1) => "afligíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "afligíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "afligían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"afligiera" ; "afligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"afligieras" ; "afligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"afligiera" ; "afligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"afligiéramos" ; "afligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"afligierais" ; "afligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"afligieran" ; "afligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "afligí" ;--# notpresent
    VP (Pret Sg P2) => "afligiste" ;--# notpresent
    VP (Pret Sg P3) => "afligió" ;--# notpresent
    VP (Pret Pl P1) => "afligimos" ;--# notpresent
    VP (Pret Pl P2) => "afligisteis" ;--# notpresent
    VP (Pret Pl P3) => "afligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "afligiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "afligirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "afligirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "afligiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "afligiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "afligirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "afligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "afligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "afligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "afligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "afligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "afligieren" ;--# notpresent
    VP (Cond Sg P1) => "afligiría" ;--# notpresent
    VP (Cond Sg P2) => "afligirías" ;--# notpresent
    VP (Cond Sg P3) => "afligiría" ;--# notpresent
    VP (Cond Pl P1) => "afligiríamos" ;--# notpresent
    VP (Cond Pl P2) => "afligiríais" ;--# notpresent
    VP (Cond Pl P3) => "afligirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aflige" ;
    VP (Imp Sg P3) => "aflija" ;
    VP (Imp Pl P1) => "aflijamos" ;
    VP (Imp Pl P2) => "afligid" ;
    VP (Imp Pl P3) => "aflijan" ;
    VP (Pass Sg Masc) => "afligido" ;
    VP (Pass Sg Fem) => "afligida" ;
    VP (Pass Pl Masc) => "afligidos" ;
    VP (Pass Pl Fem) => "afligidas"
    }
  } ;

lin astringir_V = verboV 
 {s = table {
    VI Infn => "astringir" ;
    VI Ger => "astringiendo" ;
    VI Part => "astringido" ;
    VP (Pres Ind Sg P1) => "astrinjo" ;
    VP (Pres Ind Sg P2) => "astringes" ;
    VP (Pres Ind Sg P3) => "astringe" ;
    VP (Pres Ind Pl P1) => "astringimos" ;
    VP (Pres Ind Pl P2) => "astringís" ;
    VP (Pres Ind Pl P3) => "astringen" ;
    VP (Pres Subj Sg P1) => "astrinja" ;
    VP (Pres Subj Sg P2) => "astrinjas" ;
    VP (Pres Subj Sg P3) => "astrinja" ;
    VP (Pres Subj Pl P1) => "astrinjamos" ;
    VP (Pres Subj Pl P2) => "astrinjáis" ;
    VP (Pres Subj Pl P3) => "astrinjan" ;
    VP (Impf Ind Sg P1) => "astringía" ;--# notpresent
    VP (Impf Ind Sg P2) => "astringías" ;--# notpresent
    VP (Impf Ind Sg P3) => "astringía" ;--# notpresent
    VP (Impf Ind Pl P1) => "astringíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "astringíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "astringían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"astringiera" ; "astringiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"astringieras" ; "astringieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"astringiera" ; "astringiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"astringiéramos" ; "astringiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"astringierais" ; "astringieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"astringieran" ; "astringiesen"} ;--# notpresent
    VP (Pret Sg P1) => "astringí" ;--# notpresent
    VP (Pret Sg P2) => "astringiste" ;--# notpresent
    VP (Pret Sg P3) => "astringió" ;--# notpresent
    VP (Pret Pl P1) => "astringimos" ;--# notpresent
    VP (Pret Pl P2) => "astringisteis" ;--# notpresent
    VP (Pret Pl P3) => "astringieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "astringiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "astringirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "astringirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "astringiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "astringiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "astringirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "astringiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "astringieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "astringiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "astringiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "astringiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "astringieren" ;--# notpresent
    VP (Cond Sg P1) => "astringiría" ;--# notpresent
    VP (Cond Sg P2) => "astringirías" ;--# notpresent
    VP (Cond Sg P3) => "astringiría" ;--# notpresent
    VP (Cond Pl P1) => "astringiríamos" ;--# notpresent
    VP (Cond Pl P2) => "astringiríais" ;--# notpresent
    VP (Cond Pl P3) => "astringirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "astringe" ;
    VP (Imp Sg P3) => "astrinja" ;
    VP (Imp Pl P1) => "astrinjamos" ;
    VP (Imp Pl P2) => "astringid" ;
    VP (Imp Pl P3) => "astrinjan" ;
    VP (Pass Sg Masc) => "astringido" ;
    VP (Pass Sg Fem) => "astringida" ;
    VP (Pass Pl Masc) => "astringidos" ;
    VP (Pass Pl Fem) => "astringidas"
    }
  } ;

lin compungir_V = verboV 
 {s = table {
    VI Infn => "compungir" ;
    VI Ger => "compungiendo" ;
    VI Part => "compungido" ;
    VP (Pres Ind Sg P1) => "compunjo" ;
    VP (Pres Ind Sg P2) => "compunges" ;
    VP (Pres Ind Sg P3) => "compunge" ;
    VP (Pres Ind Pl P1) => "compungimos" ;
    VP (Pres Ind Pl P2) => "compungís" ;
    VP (Pres Ind Pl P3) => "compungen" ;
    VP (Pres Subj Sg P1) => "compunja" ;
    VP (Pres Subj Sg P2) => "compunjas" ;
    VP (Pres Subj Sg P3) => "compunja" ;
    VP (Pres Subj Pl P1) => "compunjamos" ;
    VP (Pres Subj Pl P2) => "compunjáis" ;
    VP (Pres Subj Pl P3) => "compunjan" ;
    VP (Impf Ind Sg P1) => "compungía" ;--# notpresent
    VP (Impf Ind Sg P2) => "compungías" ;--# notpresent
    VP (Impf Ind Sg P3) => "compungía" ;--# notpresent
    VP (Impf Ind Pl P1) => "compungíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "compungíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "compungían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"compungiera" ; "compungiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"compungieras" ; "compungieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"compungiera" ; "compungiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"compungiéramos" ; "compungiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"compungierais" ; "compungieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"compungieran" ; "compungiesen"} ;--# notpresent
    VP (Pret Sg P1) => "compungí" ;--# notpresent
    VP (Pret Sg P2) => "compungiste" ;--# notpresent
    VP (Pret Sg P3) => "compungió" ;--# notpresent
    VP (Pret Pl P1) => "compungimos" ;--# notpresent
    VP (Pret Pl P2) => "compungisteis" ;--# notpresent
    VP (Pret Pl P3) => "compungieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "compungiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "compungirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "compungirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "compungiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "compungiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "compungirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "compungiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "compungieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "compungiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "compungiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "compungiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "compungieren" ;--# notpresent
    VP (Cond Sg P1) => "compungiría" ;--# notpresent
    VP (Cond Sg P2) => "compungirías" ;--# notpresent
    VP (Cond Sg P3) => "compungiría" ;--# notpresent
    VP (Cond Pl P1) => "compungiríamos" ;--# notpresent
    VP (Cond Pl P2) => "compungiríais" ;--# notpresent
    VP (Cond Pl P3) => "compungirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "compunge" ;
    VP (Imp Sg P3) => "compunja" ;
    VP (Imp Pl P1) => "compunjamos" ;
    VP (Imp Pl P2) => "compungid" ;
    VP (Imp Pl P3) => "compunjan" ;
    VP (Pass Sg Masc) => "compungido" ;
    VP (Pass Sg Fem) => "compungida" ;
    VP (Pass Pl Masc) => "compungidos" ;
    VP (Pass Pl Fem) => "compungidas"
    }
  } ;

lin convergir_V = verboV 
 {s = table {
    VI Infn => "convergir" ;
    VI Ger => "convergiendo" ;
    VI Part => "convergido" ;
    VP (Pres Ind Sg P1) => "converjo" ;
    VP (Pres Ind Sg P2) => "converges" ;
    VP (Pres Ind Sg P3) => "converge" ;
    VP (Pres Ind Pl P1) => "convergimos" ;
    VP (Pres Ind Pl P2) => "convergís" ;
    VP (Pres Ind Pl P3) => "convergen" ;
    VP (Pres Subj Sg P1) => "converja" ;
    VP (Pres Subj Sg P2) => "converjas" ;
    VP (Pres Subj Sg P3) => "converja" ;
    VP (Pres Subj Pl P1) => "converjamos" ;
    VP (Pres Subj Pl P2) => "converjáis" ;
    VP (Pres Subj Pl P3) => "converjan" ;
    VP (Impf Ind Sg P1) => "convergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "convergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "convergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"convergiera" ; "convergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convergieras" ; "convergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"convergiera" ; "convergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"convergiéramos" ; "convergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convergierais" ; "convergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convergieran" ; "convergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "convergí" ;--# notpresent
    VP (Pret Sg P2) => "convergiste" ;--# notpresent
    VP (Pret Sg P3) => "convergió" ;--# notpresent
    VP (Pret Pl P1) => "convergimos" ;--# notpresent
    VP (Pret Pl P2) => "convergisteis" ;--# notpresent
    VP (Pret Pl P3) => "convergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convergiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convergirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convergirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convergiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convergiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convergirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "convergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "convergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "convergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "convergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convergieren" ;--# notpresent
    VP (Cond Sg P1) => "convergiría" ;--# notpresent
    VP (Cond Sg P2) => "convergirías" ;--# notpresent
    VP (Cond Sg P3) => "convergiría" ;--# notpresent
    VP (Cond Pl P1) => "convergiríamos" ;--# notpresent
    VP (Cond Pl P2) => "convergiríais" ;--# notpresent
    VP (Cond Pl P3) => "convergirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "converge" ;
    VP (Imp Sg P3) => "converja" ;
    VP (Imp Pl P1) => "converjamos" ;
    VP (Imp Pl P2) => "convergid" ;
    VP (Imp Pl P3) => "converjan" ;
    VP (Pass Sg Masc) => "convergido" ;
    VP (Pass Sg Fem) => "convergida" ;
    VP (Pass Pl Masc) => "convergidos" ;
    VP (Pass Pl Fem) => "convergidas"
    }
  } ;

lin dirigir_V = verboV 
 {s = table {
    VI Infn => "dirigir" ;
    VI Ger => "dirigiendo" ;
    VI Part => "dirigido" ;
    VP (Pres Ind Sg P1) => "dirijo" ;
    VP (Pres Ind Sg P2) => "diriges" ;
    VP (Pres Ind Sg P3) => "dirige" ;
    VP (Pres Ind Pl P1) => "dirigimos" ;
    VP (Pres Ind Pl P2) => "dirigís" ;
    VP (Pres Ind Pl P3) => "dirigen" ;
    VP (Pres Subj Sg P1) => "dirija" ;
    VP (Pres Subj Sg P2) => "dirijas" ;
    VP (Pres Subj Sg P3) => "dirija" ;
    VP (Pres Subj Pl P1) => "dirijamos" ;
    VP (Pres Subj Pl P2) => "dirijáis" ;
    VP (Pres Subj Pl P3) => "dirijan" ;
    VP (Impf Ind Sg P1) => "dirigía" ;--# notpresent
    VP (Impf Ind Sg P2) => "dirigías" ;--# notpresent
    VP (Impf Ind Sg P3) => "dirigía" ;--# notpresent
    VP (Impf Ind Pl P1) => "dirigíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dirigíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "dirigían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dirigiera" ; "dirigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dirigieras" ; "dirigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dirigiera" ; "dirigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"dirigiéramos" ; "dirigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dirigierais" ; "dirigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dirigieran" ; "dirigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "dirigí" ;--# notpresent
    VP (Pret Sg P2) => "dirigiste" ;--# notpresent
    VP (Pret Sg P3) => "dirigió" ;--# notpresent
    VP (Pret Pl P1) => "dirigimos" ;--# notpresent
    VP (Pret Pl P2) => "dirigisteis" ;--# notpresent
    VP (Pret Pl P3) => "dirigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "dirigiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dirigirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dirigirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "dirigiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "dirigiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dirigirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dirigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "dirigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "dirigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "dirigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dirigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dirigieren" ;--# notpresent
    VP (Cond Sg P1) => "dirigiría" ;--# notpresent
    VP (Cond Sg P2) => "dirigirías" ;--# notpresent
    VP (Cond Sg P3) => "dirigiría" ;--# notpresent
    VP (Cond Pl P1) => "dirigiríamos" ;--# notpresent
    VP (Cond Pl P2) => "dirigiríais" ;--# notpresent
    VP (Cond Pl P3) => "dirigirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "dirige" ;
    VP (Imp Sg P3) => "dirija" ;
    VP (Imp Pl P1) => "dirijamos" ;
    VP (Imp Pl P2) => "dirigid" ;
    VP (Imp Pl P3) => "dirijan" ;
    VP (Pass Sg Masc) => "dirigido" ;
    VP (Pass Sg Fem) => "dirigida" ;
    VP (Pass Pl Masc) => "dirigidos" ;
    VP (Pass Pl Fem) => "dirigidas"
    }
  } ;

lin divergir_V = verboV 
 {s = table {
    VI Infn => "divergir" ;
    VI Ger => "divergiendo" ;
    VI Part => "divergido" ;
    VP (Pres Ind Sg P1) => "diverjo" ;
    VP (Pres Ind Sg P2) => "diverges" ;
    VP (Pres Ind Sg P3) => "diverge" ;
    VP (Pres Ind Pl P1) => "divergimos" ;
    VP (Pres Ind Pl P2) => "divergís" ;
    VP (Pres Ind Pl P3) => "divergen" ;
    VP (Pres Subj Sg P1) => "diverja" ;
    VP (Pres Subj Sg P2) => "diverjas" ;
    VP (Pres Subj Sg P3) => "diverja" ;
    VP (Pres Subj Pl P1) => "diverjamos" ;
    VP (Pres Subj Pl P2) => "diverjáis" ;
    VP (Pres Subj Pl P3) => "diverjan" ;
    VP (Impf Ind Sg P1) => "divergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "divergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "divergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "divergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "divergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "divergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"divergiera" ; "divergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"divergieras" ; "divergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"divergiera" ; "divergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"divergiéramos" ; "divergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"divergierais" ; "divergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"divergieran" ; "divergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "divergí" ;--# notpresent
    VP (Pret Sg P2) => "divergiste" ;--# notpresent
    VP (Pret Sg P3) => "divergió" ;--# notpresent
    VP (Pret Pl P1) => "divergimos" ;--# notpresent
    VP (Pret Pl P2) => "divergisteis" ;--# notpresent
    VP (Pret Pl P3) => "divergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "divergiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "divergirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "divergirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "divergiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "divergiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "divergirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "divergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "divergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "divergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "divergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "divergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "divergieren" ;--# notpresent
    VP (Cond Sg P1) => "divergiría" ;--# notpresent
    VP (Cond Sg P2) => "divergirías" ;--# notpresent
    VP (Cond Sg P3) => "divergiría" ;--# notpresent
    VP (Cond Pl P1) => "divergiríamos" ;--# notpresent
    VP (Cond Pl P2) => "divergiríais" ;--# notpresent
    VP (Cond Pl P3) => "divergirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "diverge" ;
    VP (Imp Sg P3) => "diverja" ;
    VP (Imp Pl P1) => "diverjamos" ;
    VP (Imp Pl P2) => "divergid" ;
    VP (Imp Pl P3) => "diverjan" ;
    VP (Pass Sg Masc) => "divergido" ;
    VP (Pass Sg Fem) => "divergida" ;
    VP (Pass Pl Masc) => "divergidos" ;
    VP (Pass Pl Fem) => "divergidas"
    }
  } ;

lin erigir_V = verboV 
 {s = table {
    VI Infn => "erigir" ;
    VI Ger => "erigiendo" ;
    VI Part => "erigido" ;
    VP (Pres Ind Sg P1) => "erijo" ;
    VP (Pres Ind Sg P2) => "eriges" ;
    VP (Pres Ind Sg P3) => "erige" ;
    VP (Pres Ind Pl P1) => "erigimos" ;
    VP (Pres Ind Pl P2) => "erigís" ;
    VP (Pres Ind Pl P3) => "erigen" ;
    VP (Pres Subj Sg P1) => "erija" ;
    VP (Pres Subj Sg P2) => "erijas" ;
    VP (Pres Subj Sg P3) => "erija" ;
    VP (Pres Subj Pl P1) => "erijamos" ;
    VP (Pres Subj Pl P2) => "erijáis" ;
    VP (Pres Subj Pl P3) => "erijan" ;
    VP (Impf Ind Sg P1) => "erigía" ;--# notpresent
    VP (Impf Ind Sg P2) => "erigías" ;--# notpresent
    VP (Impf Ind Sg P3) => "erigía" ;--# notpresent
    VP (Impf Ind Pl P1) => "erigíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "erigíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "erigían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"erigiera" ; "erigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"erigieras" ; "erigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"erigiera" ; "erigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"erigiéramos" ; "erigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"erigierais" ; "erigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"erigieran" ; "erigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "erigí" ;--# notpresent
    VP (Pret Sg P2) => "erigiste" ;--# notpresent
    VP (Pret Sg P3) => "erigió" ;--# notpresent
    VP (Pret Pl P1) => "erigimos" ;--# notpresent
    VP (Pret Pl P2) => "erigisteis" ;--# notpresent
    VP (Pret Pl P3) => "erigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "erigiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "erigirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "erigirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "erigiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "erigiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "erigirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "erigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "erigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "erigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "erigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "erigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "erigieren" ;--# notpresent
    VP (Cond Sg P1) => "erigiría" ;--# notpresent
    VP (Cond Sg P2) => "erigirías" ;--# notpresent
    VP (Cond Sg P3) => "erigiría" ;--# notpresent
    VP (Cond Pl P1) => "erigiríamos" ;--# notpresent
    VP (Cond Pl P2) => "erigiríais" ;--# notpresent
    VP (Cond Pl P3) => "erigirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "erige" ;
    VP (Imp Sg P3) => "erija" ;
    VP (Imp Pl P1) => "erijamos" ;
    VP (Imp Pl P2) => "erigid" ;
    VP (Imp Pl P3) => "erijan" ;
    VP (Pass Sg Masc) => "erigido" ;
    VP (Pass Sg Fem) => "erigida" ;
    VP (Pass Pl Masc) => "erigidos" ;
    VP (Pass Pl Fem) => "erigidas"
    }
  } ;

lin exigir_V = verboV 
 {s = table {
    VI Infn => "exigir" ;
    VI Ger => "exigiendo" ;
    VI Part => "exigido" ;
    VP (Pres Ind Sg P1) => "exijo" ;
    VP (Pres Ind Sg P2) => "exiges" ;
    VP (Pres Ind Sg P3) => "exige" ;
    VP (Pres Ind Pl P1) => "exigimos" ;
    VP (Pres Ind Pl P2) => "exigís" ;
    VP (Pres Ind Pl P3) => "exigen" ;
    VP (Pres Subj Sg P1) => "exija" ;
    VP (Pres Subj Sg P2) => "exijas" ;
    VP (Pres Subj Sg P3) => "exija" ;
    VP (Pres Subj Pl P1) => "exijamos" ;
    VP (Pres Subj Pl P2) => "exijáis" ;
    VP (Pres Subj Pl P3) => "exijan" ;
    VP (Impf Ind Sg P1) => "exigía" ;--# notpresent
    VP (Impf Ind Sg P2) => "exigías" ;--# notpresent
    VP (Impf Ind Sg P3) => "exigía" ;--# notpresent
    VP (Impf Ind Pl P1) => "exigíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "exigíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "exigían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"exigiera" ; "exigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"exigieras" ; "exigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"exigiera" ; "exigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"exigiéramos" ; "exigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"exigierais" ; "exigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"exigieran" ; "exigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "exigí" ;--# notpresent
    VP (Pret Sg P2) => "exigiste" ;--# notpresent
    VP (Pret Sg P3) => "exigió" ;--# notpresent
    VP (Pret Pl P1) => "exigimos" ;--# notpresent
    VP (Pret Pl P2) => "exigisteis" ;--# notpresent
    VP (Pret Pl P3) => "exigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "exigiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "exigirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "exigirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "exigiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "exigiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "exigirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "exigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "exigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "exigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "exigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "exigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "exigieren" ;--# notpresent
    VP (Cond Sg P1) => "exigiría" ;--# notpresent
    VP (Cond Sg P2) => "exigirías" ;--# notpresent
    VP (Cond Sg P3) => "exigiría" ;--# notpresent
    VP (Cond Pl P1) => "exigiríamos" ;--# notpresent
    VP (Cond Pl P2) => "exigiríais" ;--# notpresent
    VP (Cond Pl P3) => "exigirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "exige" ;
    VP (Imp Sg P3) => "exija" ;
    VP (Imp Pl P1) => "exijamos" ;
    VP (Imp Pl P2) => "exigid" ;
    VP (Imp Pl P3) => "exijan" ;
    VP (Pass Sg Masc) => "exigido" ;
    VP (Pass Sg Fem) => "exigida" ;
    VP (Pass Pl Masc) => "exigidos" ;
    VP (Pass Pl Fem) => "exigidas"
    }
  } ;

lin fingir_V = verboV 
 {s = table {
    VI Infn => "fingir" ;
    VI Ger => "fingiendo" ;
    VI Part => "fingido" ;
    VP (Pres Ind Sg P1) => "finjo" ;
    VP (Pres Ind Sg P2) => "finges" ;
    VP (Pres Ind Sg P3) => "finge" ;
    VP (Pres Ind Pl P1) => "fingimos" ;
    VP (Pres Ind Pl P2) => "fingís" ;
    VP (Pres Ind Pl P3) => "fingen" ;
    VP (Pres Subj Sg P1) => "finja" ;
    VP (Pres Subj Sg P2) => "finjas" ;
    VP (Pres Subj Sg P3) => "finja" ;
    VP (Pres Subj Pl P1) => "finjamos" ;
    VP (Pres Subj Pl P2) => "finjáis" ;
    VP (Pres Subj Pl P3) => "finjan" ;
    VP (Impf Ind Sg P1) => "fingía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fingías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fingía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fingíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fingíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fingían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fingiera" ; "fingiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fingieras" ; "fingieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fingiera" ; "fingiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fingiéramos" ; "fingiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fingierais" ; "fingieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fingieran" ; "fingiesen"} ;--# notpresent
    VP (Pret Sg P1) => "fingí" ;--# notpresent
    VP (Pret Sg P2) => "fingiste" ;--# notpresent
    VP (Pret Sg P3) => "fingió" ;--# notpresent
    VP (Pret Pl P1) => "fingimos" ;--# notpresent
    VP (Pret Pl P2) => "fingisteis" ;--# notpresent
    VP (Pret Pl P3) => "fingieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fingiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fingirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fingirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fingiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fingiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fingirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fingiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fingieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fingiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fingiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fingiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fingieren" ;--# notpresent
    VP (Cond Sg P1) => "fingiría" ;--# notpresent
    VP (Cond Sg P2) => "fingirías" ;--# notpresent
    VP (Cond Sg P3) => "fingiría" ;--# notpresent
    VP (Cond Pl P1) => "fingiríamos" ;--# notpresent
    VP (Cond Pl P2) => "fingiríais" ;--# notpresent
    VP (Cond Pl P3) => "fingirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "finge" ;
    VP (Imp Sg P3) => "finja" ;
    VP (Imp Pl P1) => "finjamos" ;
    VP (Imp Pl P2) => "fingid" ;
    VP (Imp Pl P3) => "finjan" ;
    VP (Pass Sg Masc) => "fingido" ;
    VP (Pass Sg Fem) => "fingida" ;
    VP (Pass Pl Masc) => "fingidos" ;
    VP (Pass Pl Fem) => "fingidas"
    }
  } ;

lin frangir_V = verboV 
 {s = table {
    VI Infn => "frangir" ;
    VI Ger => "frangiendo" ;
    VI Part => "frangido" ;
    VP (Pres Ind Sg P1) => "franjo" ;
    VP (Pres Ind Sg P2) => "franges" ;
    VP (Pres Ind Sg P3) => "frange" ;
    VP (Pres Ind Pl P1) => "frangimos" ;
    VP (Pres Ind Pl P2) => "frangís" ;
    VP (Pres Ind Pl P3) => "frangen" ;
    VP (Pres Subj Sg P1) => "franja" ;
    VP (Pres Subj Sg P2) => "franjas" ;
    VP (Pres Subj Sg P3) => "franja" ;
    VP (Pres Subj Pl P1) => "franjamos" ;
    VP (Pres Subj Pl P2) => "franjáis" ;
    VP (Pres Subj Pl P3) => "franjan" ;
    VP (Impf Ind Sg P1) => "frangía" ;--# notpresent
    VP (Impf Ind Sg P2) => "frangías" ;--# notpresent
    VP (Impf Ind Sg P3) => "frangía" ;--# notpresent
    VP (Impf Ind Pl P1) => "frangíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "frangíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "frangían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"frangiera" ; "frangiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"frangieras" ; "frangieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"frangiera" ; "frangiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"frangiéramos" ; "frangiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"frangierais" ; "frangieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"frangieran" ; "frangiesen"} ;--# notpresent
    VP (Pret Sg P1) => "frangí" ;--# notpresent
    VP (Pret Sg P2) => "frangiste" ;--# notpresent
    VP (Pret Sg P3) => "frangió" ;--# notpresent
    VP (Pret Pl P1) => "frangimos" ;--# notpresent
    VP (Pret Pl P2) => "frangisteis" ;--# notpresent
    VP (Pret Pl P3) => "frangieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "frangiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "frangirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "frangirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "frangiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "frangiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "frangirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "frangiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "frangieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "frangiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "frangiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "frangiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "frangieren" ;--# notpresent
    VP (Cond Sg P1) => "frangiría" ;--# notpresent
    VP (Cond Sg P2) => "frangirías" ;--# notpresent
    VP (Cond Sg P3) => "frangiría" ;--# notpresent
    VP (Cond Pl P1) => "frangiríamos" ;--# notpresent
    VP (Cond Pl P2) => "frangiríais" ;--# notpresent
    VP (Cond Pl P3) => "frangirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "frange" ;
    VP (Imp Sg P3) => "franja" ;
    VP (Imp Pl P1) => "franjamos" ;
    VP (Imp Pl P2) => "frangid" ;
    VP (Imp Pl P3) => "franjan" ;
    VP (Pass Sg Masc) => "frangido" ;
    VP (Pass Sg Fem) => "frangida" ;
    VP (Pass Pl Masc) => "frangidos" ;
    VP (Pass Pl Fem) => "frangidas"
    }
  } ;

lin fulgir_V = verboV 
 {s = table {
    VI Infn => "fulgir" ;
    VI Ger => "fulgiendo" ;
    VI Part => "fulgido" ;
    VP (Pres Ind Sg P1) => "fuljo" ;
    VP (Pres Ind Sg P2) => "fulges" ;
    VP (Pres Ind Sg P3) => "fulge" ;
    VP (Pres Ind Pl P1) => "fulgimos" ;
    VP (Pres Ind Pl P2) => "fulgís" ;
    VP (Pres Ind Pl P3) => "fulgen" ;
    VP (Pres Subj Sg P1) => "fulja" ;
    VP (Pres Subj Sg P2) => "fuljas" ;
    VP (Pres Subj Sg P3) => "fulja" ;
    VP (Pres Subj Pl P1) => "fuljamos" ;
    VP (Pres Subj Pl P2) => "fuljáis" ;
    VP (Pres Subj Pl P3) => "fuljan" ;
    VP (Impf Ind Sg P1) => "fulgía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fulgías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fulgía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fulgíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fulgíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fulgían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fulgiera" ; "fulgiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fulgieras" ; "fulgieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fulgiera" ; "fulgiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fulgiéramos" ; "fulgiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fulgierais" ; "fulgieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fulgieran" ; "fulgiesen"} ;--# notpresent
    VP (Pret Sg P1) => "fulgí" ;--# notpresent
    VP (Pret Sg P2) => "fulgiste" ;--# notpresent
    VP (Pret Sg P3) => "fulgió" ;--# notpresent
    VP (Pret Pl P1) => "fulgimos" ;--# notpresent
    VP (Pret Pl P2) => "fulgisteis" ;--# notpresent
    VP (Pret Pl P3) => "fulgieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fulgiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fulgirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fulgirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fulgiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fulgiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fulgirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fulgiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fulgieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fulgiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fulgiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fulgiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fulgieren" ;--# notpresent
    VP (Cond Sg P1) => "fulgiría" ;--# notpresent
    VP (Cond Sg P2) => "fulgirías" ;--# notpresent
    VP (Cond Sg P3) => "fulgiría" ;--# notpresent
    VP (Cond Pl P1) => "fulgiríamos" ;--# notpresent
    VP (Cond Pl P2) => "fulgiríais" ;--# notpresent
    VP (Cond Pl P3) => "fulgirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fulge" ;
    VP (Imp Sg P3) => "fulja" ;
    VP (Imp Pl P1) => "fuljamos" ;
    VP (Imp Pl P2) => "fulgid" ;
    VP (Imp Pl P3) => "fuljan" ;
    VP (Pass Sg Masc) => "fulgido" ;
    VP (Pass Sg Fem) => "fulgida" ;
    VP (Pass Pl Masc) => "fulgidos" ;
    VP (Pass Pl Fem) => "fulgidas"
    }
  } ;

lin fungir_V = verboV 
 {s = table {
    VI Infn => "fungir" ;
    VI Ger => "fungiendo" ;
    VI Part => "fungido" ;
    VP (Pres Ind Sg P1) => "funjo" ;
    VP (Pres Ind Sg P2) => "funges" ;
    VP (Pres Ind Sg P3) => "funge" ;
    VP (Pres Ind Pl P1) => "fungimos" ;
    VP (Pres Ind Pl P2) => "fungís" ;
    VP (Pres Ind Pl P3) => "fungen" ;
    VP (Pres Subj Sg P1) => "funja" ;
    VP (Pres Subj Sg P2) => "funjas" ;
    VP (Pres Subj Sg P3) => "funja" ;
    VP (Pres Subj Pl P1) => "funjamos" ;
    VP (Pres Subj Pl P2) => "funjáis" ;
    VP (Pres Subj Pl P3) => "funjan" ;
    VP (Impf Ind Sg P1) => "fungía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fungías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fungía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fungíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fungíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fungían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fungiera" ; "fungiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fungieras" ; "fungieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fungiera" ; "fungiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fungiéramos" ; "fungiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fungierais" ; "fungieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fungieran" ; "fungiesen"} ;--# notpresent
    VP (Pret Sg P1) => "fungí" ;--# notpresent
    VP (Pret Sg P2) => "fungiste" ;--# notpresent
    VP (Pret Sg P3) => "fungió" ;--# notpresent
    VP (Pret Pl P1) => "fungimos" ;--# notpresent
    VP (Pret Pl P2) => "fungisteis" ;--# notpresent
    VP (Pret Pl P3) => "fungieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fungiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fungirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fungirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fungiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fungiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fungirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fungiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fungieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fungiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fungiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fungiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fungieren" ;--# notpresent
    VP (Cond Sg P1) => "fungiría" ;--# notpresent
    VP (Cond Sg P2) => "fungirías" ;--# notpresent
    VP (Cond Sg P3) => "fungiría" ;--# notpresent
    VP (Cond Pl P1) => "fungiríamos" ;--# notpresent
    VP (Cond Pl P2) => "fungiríais" ;--# notpresent
    VP (Cond Pl P3) => "fungirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "funge" ;
    VP (Imp Sg P3) => "funja" ;
    VP (Imp Pl P1) => "funjamos" ;
    VP (Imp Pl P2) => "fungid" ;
    VP (Imp Pl P3) => "funjan" ;
    VP (Pass Sg Masc) => "fungido" ;
    VP (Pass Sg Fem) => "fungida" ;
    VP (Pass Pl Masc) => "fungidos" ;
    VP (Pass Pl Fem) => "fungidas"
    }
  } ;

lin infligir_V = verboV 
 {s = table {
    VI Infn => "infligir" ;
    VI Ger => "infligiendo" ;
    VI Part => "infligido" ;
    VP (Pres Ind Sg P1) => "inflijo" ;
    VP (Pres Ind Sg P2) => "infliges" ;
    VP (Pres Ind Sg P3) => "inflige" ;
    VP (Pres Ind Pl P1) => "infligimos" ;
    VP (Pres Ind Pl P2) => "infligís" ;
    VP (Pres Ind Pl P3) => "infligen" ;
    VP (Pres Subj Sg P1) => "inflija" ;
    VP (Pres Subj Sg P2) => "inflijas" ;
    VP (Pres Subj Sg P3) => "inflija" ;
    VP (Pres Subj Pl P1) => "inflijamos" ;
    VP (Pres Subj Pl P2) => "inflijáis" ;
    VP (Pres Subj Pl P3) => "inflijan" ;
    VP (Impf Ind Sg P1) => "infligía" ;--# notpresent
    VP (Impf Ind Sg P2) => "infligías" ;--# notpresent
    VP (Impf Ind Sg P3) => "infligía" ;--# notpresent
    VP (Impf Ind Pl P1) => "infligíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "infligíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "infligían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"infligiera" ; "infligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"infligieras" ; "infligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"infligiera" ; "infligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"infligiéramos" ; "infligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"infligierais" ; "infligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"infligieran" ; "infligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "infligí" ;--# notpresent
    VP (Pret Sg P2) => "infligiste" ;--# notpresent
    VP (Pret Sg P3) => "infligió" ;--# notpresent
    VP (Pret Pl P1) => "infligimos" ;--# notpresent
    VP (Pret Pl P2) => "infligisteis" ;--# notpresent
    VP (Pret Pl P3) => "infligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "infligiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "infligirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "infligirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "infligiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "infligiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "infligirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "infligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "infligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "infligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "infligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "infligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "infligieren" ;--# notpresent
    VP (Cond Sg P1) => "infligiría" ;--# notpresent
    VP (Cond Sg P2) => "infligirías" ;--# notpresent
    VP (Cond Sg P3) => "infligiría" ;--# notpresent
    VP (Cond Pl P1) => "infligiríamos" ;--# notpresent
    VP (Cond Pl P2) => "infligiríais" ;--# notpresent
    VP (Cond Pl P3) => "infligirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inflige" ;
    VP (Imp Sg P3) => "inflija" ;
    VP (Imp Pl P1) => "inflijamos" ;
    VP (Imp Pl P2) => "infligid" ;
    VP (Imp Pl P3) => "inflijan" ;
    VP (Pass Sg Masc) => "infligido" ;
    VP (Pass Sg Fem) => "infligida" ;
    VP (Pass Pl Masc) => "infligidos" ;
    VP (Pass Pl Fem) => "infligidas"
    }
  } ;

lin infringir_V = verboV 
 {s = table {
    VI Infn => "infringir" ;
    VI Ger => "infringiendo" ;
    VI Part => "infringido" ;
    VP (Pres Ind Sg P1) => "infrinjo" ;
    VP (Pres Ind Sg P2) => "infringes" ;
    VP (Pres Ind Sg P3) => "infringe" ;
    VP (Pres Ind Pl P1) => "infringimos" ;
    VP (Pres Ind Pl P2) => "infringís" ;
    VP (Pres Ind Pl P3) => "infringen" ;
    VP (Pres Subj Sg P1) => "infrinja" ;
    VP (Pres Subj Sg P2) => "infrinjas" ;
    VP (Pres Subj Sg P3) => "infrinja" ;
    VP (Pres Subj Pl P1) => "infrinjamos" ;
    VP (Pres Subj Pl P2) => "infrinjáis" ;
    VP (Pres Subj Pl P3) => "infrinjan" ;
    VP (Impf Ind Sg P1) => "infringía" ;--# notpresent
    VP (Impf Ind Sg P2) => "infringías" ;--# notpresent
    VP (Impf Ind Sg P3) => "infringía" ;--# notpresent
    VP (Impf Ind Pl P1) => "infringíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "infringíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "infringían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"infringiera" ; "infringiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"infringieras" ; "infringieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"infringiera" ; "infringiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"infringiéramos" ; "infringiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"infringierais" ; "infringieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"infringieran" ; "infringiesen"} ;--# notpresent
    VP (Pret Sg P1) => "infringí" ;--# notpresent
    VP (Pret Sg P2) => "infringiste" ;--# notpresent
    VP (Pret Sg P3) => "infringió" ;--# notpresent
    VP (Pret Pl P1) => "infringimos" ;--# notpresent
    VP (Pret Pl P2) => "infringisteis" ;--# notpresent
    VP (Pret Pl P3) => "infringieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "infringiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "infringirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "infringirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "infringiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "infringiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "infringirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "infringiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "infringieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "infringiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "infringiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "infringiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "infringieren" ;--# notpresent
    VP (Cond Sg P1) => "infringiría" ;--# notpresent
    VP (Cond Sg P2) => "infringirías" ;--# notpresent
    VP (Cond Sg P3) => "infringiría" ;--# notpresent
    VP (Cond Pl P1) => "infringiríamos" ;--# notpresent
    VP (Cond Pl P2) => "infringiríais" ;--# notpresent
    VP (Cond Pl P3) => "infringirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "infringe" ;
    VP (Imp Sg P3) => "infrinja" ;
    VP (Imp Pl P1) => "infrinjamos" ;
    VP (Imp Pl P2) => "infringid" ;
    VP (Imp Pl P3) => "infrinjan" ;
    VP (Pass Sg Masc) => "infringido" ;
    VP (Pass Sg Fem) => "infringida" ;
    VP (Pass Pl Masc) => "infringidos" ;
    VP (Pass Pl Fem) => "infringidas"
    }
  } ;

lin inmergir_V = verboV 
 {s = table {
    VI Infn => "inmergir" ;
    VI Ger => "inmergiendo" ;
    VI Part => "inmergido" ;
    VP (Pres Ind Sg P1) => "inmerjo" ;
    VP (Pres Ind Sg P2) => "inmerges" ;
    VP (Pres Ind Sg P3) => "inmerge" ;
    VP (Pres Ind Pl P1) => "inmergimos" ;
    VP (Pres Ind Pl P2) => "inmergís" ;
    VP (Pres Ind Pl P3) => "inmergen" ;
    VP (Pres Subj Sg P1) => "inmerja" ;
    VP (Pres Subj Sg P2) => "inmerjas" ;
    VP (Pres Subj Sg P3) => "inmerja" ;
    VP (Pres Subj Pl P1) => "inmerjamos" ;
    VP (Pres Subj Pl P2) => "inmerjáis" ;
    VP (Pres Subj Pl P3) => "inmerjan" ;
    VP (Impf Ind Sg P1) => "inmergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "inmergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "inmergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "inmergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inmergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inmergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"inmergiera" ; "inmergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"inmergieras" ; "inmergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"inmergiera" ; "inmergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"inmergiéramos" ; "inmergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"inmergierais" ; "inmergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"inmergieran" ; "inmergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "inmergí" ;--# notpresent
    VP (Pret Sg P2) => "inmergiste" ;--# notpresent
    VP (Pret Sg P3) => "inmergió" ;--# notpresent
    VP (Pret Pl P1) => "inmergimos" ;--# notpresent
    VP (Pret Pl P2) => "inmergisteis" ;--# notpresent
    VP (Pret Pl P3) => "inmergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "inmergiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inmergirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inmergirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "inmergiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "inmergiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inmergirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "inmergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "inmergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "inmergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "inmergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "inmergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "inmergieren" ;--# notpresent
    VP (Cond Sg P1) => "inmergiría" ;--# notpresent
    VP (Cond Sg P2) => "inmergirías" ;--# notpresent
    VP (Cond Sg P3) => "inmergiría" ;--# notpresent
    VP (Cond Pl P1) => "inmergiríamos" ;--# notpresent
    VP (Cond Pl P2) => "inmergiríais" ;--# notpresent
    VP (Cond Pl P3) => "inmergirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inmerge" ;
    VP (Imp Sg P3) => "inmerja" ;
    VP (Imp Pl P1) => "inmerjamos" ;
    VP (Imp Pl P2) => "inmergid" ;
    VP (Imp Pl P3) => "inmerjan" ;
    VP (Pass Sg Masc) => "inmergido" ;
    VP (Pass Sg Fem) => "inmergida" ;
    VP (Pass Pl Masc) => "inmergidos" ;
    VP (Pass Pl Fem) => "inmergidas"
    }
  } ;

lin mugir_V = verboV 
 {s = table {
    VI Infn => "mugir" ;
    VI Ger => "mugiendo" ;
    VI Part => "mugido" ;
    VP (Pres Ind Sg P1) => "mujo" ;
    VP (Pres Ind Sg P2) => "muges" ;
    VP (Pres Ind Sg P3) => "muge" ;
    VP (Pres Ind Pl P1) => "mugimos" ;
    VP (Pres Ind Pl P2) => "mugís" ;
    VP (Pres Ind Pl P3) => "mugen" ;
    VP (Pres Subj Sg P1) => "muja" ;
    VP (Pres Subj Sg P2) => "mujas" ;
    VP (Pres Subj Sg P3) => "muja" ;
    VP (Pres Subj Pl P1) => "mujamos" ;
    VP (Pres Subj Pl P2) => "mujáis" ;
    VP (Pres Subj Pl P3) => "mujan" ;
    VP (Impf Ind Sg P1) => "mugía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mugías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mugía" ;--# notpresent
    VP (Impf Ind Pl P1) => "mugíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mugíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mugían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mugiera" ; "mugiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mugieras" ; "mugieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mugiera" ; "mugiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mugiéramos" ; "mugiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mugierais" ; "mugieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mugieran" ; "mugiesen"} ;--# notpresent
    VP (Pret Sg P1) => "mugí" ;--# notpresent
    VP (Pret Sg P2) => "mugiste" ;--# notpresent
    VP (Pret Sg P3) => "mugió" ;--# notpresent
    VP (Pret Pl P1) => "mugimos" ;--# notpresent
    VP (Pret Pl P2) => "mugisteis" ;--# notpresent
    VP (Pret Pl P3) => "mugieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mugiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mugirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mugirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "mugiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mugiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mugirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mugiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mugieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "mugiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "mugiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mugiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mugieren" ;--# notpresent
    VP (Cond Sg P1) => "mugiría" ;--# notpresent
    VP (Cond Sg P2) => "mugirías" ;--# notpresent
    VP (Cond Sg P3) => "mugiría" ;--# notpresent
    VP (Cond Pl P1) => "mugiríamos" ;--# notpresent
    VP (Cond Pl P2) => "mugiríais" ;--# notpresent
    VP (Cond Pl P3) => "mugirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muge" ;
    VP (Imp Sg P3) => "muja" ;
    VP (Imp Pl P1) => "mujamos" ;
    VP (Imp Pl P2) => "mugid" ;
    VP (Imp Pl P3) => "mujan" ;
    VP (Pass Sg Masc) => "mugido" ;
    VP (Pass Sg Fem) => "mugida" ;
    VP (Pass Pl Masc) => "mugidos" ;
    VP (Pass Pl Fem) => "mugidas"
    }
  } ;

lin pungir_V = verboV 
 {s = table {
    VI Infn => "pungir" ;
    VI Ger => "pungiendo" ;
    VI Part => "pungido" ;
    VP (Pres Ind Sg P1) => "punjo" ;
    VP (Pres Ind Sg P2) => "punges" ;
    VP (Pres Ind Sg P3) => "punge" ;
    VP (Pres Ind Pl P1) => "pungimos" ;
    VP (Pres Ind Pl P2) => "pungís" ;
    VP (Pres Ind Pl P3) => "pungen" ;
    VP (Pres Subj Sg P1) => "punja" ;
    VP (Pres Subj Sg P2) => "punjas" ;
    VP (Pres Subj Sg P3) => "punja" ;
    VP (Pres Subj Pl P1) => "punjamos" ;
    VP (Pres Subj Pl P2) => "punjáis" ;
    VP (Pres Subj Pl P3) => "punjan" ;
    VP (Impf Ind Sg P1) => "pungía" ;--# notpresent
    VP (Impf Ind Sg P2) => "pungías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pungía" ;--# notpresent
    VP (Impf Ind Pl P1) => "pungíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pungíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pungían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pungiera" ; "pungiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pungieras" ; "pungieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pungiera" ; "pungiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pungiéramos" ; "pungiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pungierais" ; "pungieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pungieran" ; "pungiesen"} ;--# notpresent
    VP (Pret Sg P1) => "pungí" ;--# notpresent
    VP (Pret Sg P2) => "pungiste" ;--# notpresent
    VP (Pret Sg P3) => "pungió" ;--# notpresent
    VP (Pret Pl P1) => "pungimos" ;--# notpresent
    VP (Pret Pl P2) => "pungisteis" ;--# notpresent
    VP (Pret Pl P3) => "pungieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pungiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pungirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pungirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pungiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pungiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pungirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pungiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pungieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pungiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pungiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pungiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pungieren" ;--# notpresent
    VP (Cond Sg P1) => "pungiría" ;--# notpresent
    VP (Cond Sg P2) => "pungirías" ;--# notpresent
    VP (Cond Sg P3) => "pungiría" ;--# notpresent
    VP (Cond Pl P1) => "pungiríamos" ;--# notpresent
    VP (Cond Pl P2) => "pungiríais" ;--# notpresent
    VP (Cond Pl P3) => "pungirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "punge" ;
    VP (Imp Sg P3) => "punja" ;
    VP (Imp Pl P1) => "punjamos" ;
    VP (Imp Pl P2) => "pungid" ;
    VP (Imp Pl P3) => "punjan" ;
    VP (Pass Sg Masc) => "pungido" ;
    VP (Pass Sg Fem) => "pungida" ;
    VP (Pass Pl Masc) => "pungidos" ;
    VP (Pass Pl Fem) => "pungidas"
    }
  } ;

lin radiodirigir_V = verboV 
 {s = table {
    VI Infn => "radiodirigir" ;
    VI Ger => "radiodirigiendo" ;
    VI Part => "radiodirigido" ;
    VP (Pres Ind Sg P1) => "radiodirijo" ;
    VP (Pres Ind Sg P2) => "radiodiriges" ;
    VP (Pres Ind Sg P3) => "radiodirige" ;
    VP (Pres Ind Pl P1) => "radiodirigimos" ;
    VP (Pres Ind Pl P2) => "radiodirigís" ;
    VP (Pres Ind Pl P3) => "radiodirigen" ;
    VP (Pres Subj Sg P1) => "radiodirija" ;
    VP (Pres Subj Sg P2) => "radiodirijas" ;
    VP (Pres Subj Sg P3) => "radiodirija" ;
    VP (Pres Subj Pl P1) => "radiodirijamos" ;
    VP (Pres Subj Pl P2) => "radiodirijáis" ;
    VP (Pres Subj Pl P3) => "radiodirijan" ;
    VP (Impf Ind Sg P1) => "radiodirigía" ;--# notpresent
    VP (Impf Ind Sg P2) => "radiodirigías" ;--# notpresent
    VP (Impf Ind Sg P3) => "radiodirigía" ;--# notpresent
    VP (Impf Ind Pl P1) => "radiodirigíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "radiodirigíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "radiodirigían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"radiodirigiera" ; "radiodirigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"radiodirigieras" ; "radiodirigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"radiodirigiera" ; "radiodirigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"radiodirigiéramos" ; "radiodirigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"radiodirigierais" ; "radiodirigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"radiodirigieran" ; "radiodirigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "radiodirigí" ;--# notpresent
    VP (Pret Sg P2) => "radiodirigiste" ;--# notpresent
    VP (Pret Sg P3) => "radiodirigió" ;--# notpresent
    VP (Pret Pl P1) => "radiodirigimos" ;--# notpresent
    VP (Pret Pl P2) => "radiodirigisteis" ;--# notpresent
    VP (Pret Pl P3) => "radiodirigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "radiodirigiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "radiodirigirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "radiodirigirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "radiodirigiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "radiodirigiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "radiodirigirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "radiodirigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "radiodirigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "radiodirigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "radiodirigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "radiodirigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "radiodirigieren" ;--# notpresent
    VP (Cond Sg P1) => "radiodirigiría" ;--# notpresent
    VP (Cond Sg P2) => "radiodirigirías" ;--# notpresent
    VP (Cond Sg P3) => "radiodirigiría" ;--# notpresent
    VP (Cond Pl P1) => "radiodirigiríamos" ;--# notpresent
    VP (Cond Pl P2) => "radiodirigiríais" ;--# notpresent
    VP (Cond Pl P3) => "radiodirigirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "radiodirige" ;
    VP (Imp Sg P3) => "radiodirija" ;
    VP (Imp Pl P1) => "radiodirijamos" ;
    VP (Imp Pl P2) => "radiodirigid" ;
    VP (Imp Pl P3) => "radiodirijan" ;
    VP (Pass Sg Masc) => "radiodirigido" ;
    VP (Pass Sg Fem) => "radiodirigida" ;
    VP (Pass Pl Masc) => "radiodirigidos" ;
    VP (Pass Pl Fem) => "radiodirigidas"
    }
  } ;

lin refringir_V = verboV 
 {s = table {
    VI Infn => "refringir" ;
    VI Ger => "refringiendo" ;
    VI Part => "refringido" ;
    VP (Pres Ind Sg P1) => "refrinjo" ;
    VP (Pres Ind Sg P2) => "refringes" ;
    VP (Pres Ind Sg P3) => "refringe" ;
    VP (Pres Ind Pl P1) => "refringimos" ;
    VP (Pres Ind Pl P2) => "refringís" ;
    VP (Pres Ind Pl P3) => "refringen" ;
    VP (Pres Subj Sg P1) => "refrinja" ;
    VP (Pres Subj Sg P2) => "refrinjas" ;
    VP (Pres Subj Sg P3) => "refrinja" ;
    VP (Pres Subj Pl P1) => "refrinjamos" ;
    VP (Pres Subj Pl P2) => "refrinjáis" ;
    VP (Pres Subj Pl P3) => "refrinjan" ;
    VP (Impf Ind Sg P1) => "refringía" ;--# notpresent
    VP (Impf Ind Sg P2) => "refringías" ;--# notpresent
    VP (Impf Ind Sg P3) => "refringía" ;--# notpresent
    VP (Impf Ind Pl P1) => "refringíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "refringíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "refringían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refringiera" ; "refringiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"refringieras" ; "refringieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refringiera" ; "refringiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refringiéramos" ; "refringiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"refringierais" ; "refringieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"refringieran" ; "refringiesen"} ;--# notpresent
    VP (Pret Sg P1) => "refringí" ;--# notpresent
    VP (Pret Sg P2) => "refringiste" ;--# notpresent
    VP (Pret Sg P3) => "refringió" ;--# notpresent
    VP (Pret Pl P1) => "refringimos" ;--# notpresent
    VP (Pret Pl P2) => "refringisteis" ;--# notpresent
    VP (Pret Pl P3) => "refringieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "refringiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "refringirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "refringirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "refringiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "refringiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "refringirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refringiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "refringieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "refringiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "refringiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refringiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "refringieren" ;--# notpresent
    VP (Cond Sg P1) => "refringiría" ;--# notpresent
    VP (Cond Sg P2) => "refringirías" ;--# notpresent
    VP (Cond Sg P3) => "refringiría" ;--# notpresent
    VP (Cond Pl P1) => "refringiríamos" ;--# notpresent
    VP (Cond Pl P2) => "refringiríais" ;--# notpresent
    VP (Cond Pl P3) => "refringirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refringe" ;
    VP (Imp Sg P3) => "refrinja" ;
    VP (Imp Pl P1) => "refrinjamos" ;
    VP (Imp Pl P2) => "refringid" ;
    VP (Imp Pl P3) => "refrinjan" ;
    VP (Pass Sg Masc) => "refringido" ;
    VP (Pass Sg Fem) => "refringida" ;
    VP (Pass Pl Masc) => "refringidos" ;
    VP (Pass Pl Fem) => "refringidas"
    }
  } ;

lin refulgir_V = verboV 
 {s = table {
    VI Infn => "refulgir" ;
    VI Ger => "refulgiendo" ;
    VI Part => "refulgido" ;
    VP (Pres Ind Sg P1) => "refuljo" ;
    VP (Pres Ind Sg P2) => "refulges" ;
    VP (Pres Ind Sg P3) => "refulge" ;
    VP (Pres Ind Pl P1) => "refulgimos" ;
    VP (Pres Ind Pl P2) => "refulgís" ;
    VP (Pres Ind Pl P3) => "refulgen" ;
    VP (Pres Subj Sg P1) => "refulja" ;
    VP (Pres Subj Sg P2) => "refuljas" ;
    VP (Pres Subj Sg P3) => "refulja" ;
    VP (Pres Subj Pl P1) => "refuljamos" ;
    VP (Pres Subj Pl P2) => "refuljáis" ;
    VP (Pres Subj Pl P3) => "refuljan" ;
    VP (Impf Ind Sg P1) => "refulgía" ;--# notpresent
    VP (Impf Ind Sg P2) => "refulgías" ;--# notpresent
    VP (Impf Ind Sg P3) => "refulgía" ;--# notpresent
    VP (Impf Ind Pl P1) => "refulgíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "refulgíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "refulgían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refulgiera" ; "refulgiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"refulgieras" ; "refulgieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refulgiera" ; "refulgiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refulgiéramos" ; "refulgiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"refulgierais" ; "refulgieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"refulgieran" ; "refulgiesen"} ;--# notpresent
    VP (Pret Sg P1) => "refulgí" ;--# notpresent
    VP (Pret Sg P2) => "refulgiste" ;--# notpresent
    VP (Pret Sg P3) => "refulgió" ;--# notpresent
    VP (Pret Pl P1) => "refulgimos" ;--# notpresent
    VP (Pret Pl P2) => "refulgisteis" ;--# notpresent
    VP (Pret Pl P3) => "refulgieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "refulgiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "refulgirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "refulgirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "refulgiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "refulgiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "refulgirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refulgiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "refulgieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "refulgiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "refulgiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refulgiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "refulgieren" ;--# notpresent
    VP (Cond Sg P1) => "refulgiría" ;--# notpresent
    VP (Cond Sg P2) => "refulgirías" ;--# notpresent
    VP (Cond Sg P3) => "refulgiría" ;--# notpresent
    VP (Cond Pl P1) => "refulgiríamos" ;--# notpresent
    VP (Cond Pl P2) => "refulgiríais" ;--# notpresent
    VP (Cond Pl P3) => "refulgirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refulge" ;
    VP (Imp Sg P3) => "refulja" ;
    VP (Imp Pl P1) => "refuljamos" ;
    VP (Imp Pl P2) => "refulgid" ;
    VP (Imp Pl P3) => "refuljan" ;
    VP (Pass Sg Masc) => "refulgido" ;
    VP (Pass Sg Fem) => "refulgida" ;
    VP (Pass Pl Masc) => "refulgidos" ;
    VP (Pass Pl Fem) => "refulgidas"
    }
  } ;

lin restringir_V = verboV 
 {s = table {
    VI Infn => "restringir" ;
    VI Ger => "restringiendo" ;
    VI Part => "restringido" ;
    VP (Pres Ind Sg P1) => "restrinjo" ;
    VP (Pres Ind Sg P2) => "restringes" ;
    VP (Pres Ind Sg P3) => "restringe" ;
    VP (Pres Ind Pl P1) => "restringimos" ;
    VP (Pres Ind Pl P2) => "restringís" ;
    VP (Pres Ind Pl P3) => "restringen" ;
    VP (Pres Subj Sg P1) => "restrinja" ;
    VP (Pres Subj Sg P2) => "restrinjas" ;
    VP (Pres Subj Sg P3) => "restrinja" ;
    VP (Pres Subj Pl P1) => "restrinjamos" ;
    VP (Pres Subj Pl P2) => "restrinjáis" ;
    VP (Pres Subj Pl P3) => "restrinjan" ;
    VP (Impf Ind Sg P1) => "restringía" ;--# notpresent
    VP (Impf Ind Sg P2) => "restringías" ;--# notpresent
    VP (Impf Ind Sg P3) => "restringía" ;--# notpresent
    VP (Impf Ind Pl P1) => "restringíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "restringíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "restringían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"restringiera" ; "restringiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"restringieras" ; "restringieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"restringiera" ; "restringiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"restringiéramos" ; "restringiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"restringierais" ; "restringieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"restringieran" ; "restringiesen"} ;--# notpresent
    VP (Pret Sg P1) => "restringí" ;--# notpresent
    VP (Pret Sg P2) => "restringiste" ;--# notpresent
    VP (Pret Sg P3) => "restringió" ;--# notpresent
    VP (Pret Pl P1) => "restringimos" ;--# notpresent
    VP (Pret Pl P2) => "restringisteis" ;--# notpresent
    VP (Pret Pl P3) => "restringieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "restringiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "restringirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "restringirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "restringiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "restringiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "restringirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "restringiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "restringieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "restringiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "restringiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "restringiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "restringieren" ;--# notpresent
    VP (Cond Sg P1) => "restringiría" ;--# notpresent
    VP (Cond Sg P2) => "restringirías" ;--# notpresent
    VP (Cond Sg P3) => "restringiría" ;--# notpresent
    VP (Cond Pl P1) => "restringiríamos" ;--# notpresent
    VP (Cond Pl P2) => "restringiríais" ;--# notpresent
    VP (Cond Pl P3) => "restringirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "restringe" ;
    VP (Imp Sg P3) => "restrinja" ;
    VP (Imp Pl P1) => "restrinjamos" ;
    VP (Imp Pl P2) => "restringid" ;
    VP (Imp Pl P3) => "restrinjan" ;
    VP (Pass Sg Masc) => "restringido" ;
    VP (Pass Sg Fem) => "restringida" ;
    VP (Pass Pl Masc) => "restringidos" ;
    VP (Pass Pl Fem) => "restringidas"
    }
  } ;

lin resurgir_V = verboV 
 {s = table {
    VI Infn => "resurgir" ;
    VI Ger => "resurgiendo" ;
    VI Part => "resurgido" ;
    VP (Pres Ind Sg P1) => "resurjo" ;
    VP (Pres Ind Sg P2) => "resurges" ;
    VP (Pres Ind Sg P3) => "resurge" ;
    VP (Pres Ind Pl P1) => "resurgimos" ;
    VP (Pres Ind Pl P2) => "resurgís" ;
    VP (Pres Ind Pl P3) => "resurgen" ;
    VP (Pres Subj Sg P1) => "resurja" ;
    VP (Pres Subj Sg P2) => "resurjas" ;
    VP (Pres Subj Sg P3) => "resurja" ;
    VP (Pres Subj Pl P1) => "resurjamos" ;
    VP (Pres Subj Pl P2) => "resurjáis" ;
    VP (Pres Subj Pl P3) => "resurjan" ;
    VP (Impf Ind Sg P1) => "resurgía" ;--# notpresent
    VP (Impf Ind Sg P2) => "resurgías" ;--# notpresent
    VP (Impf Ind Sg P3) => "resurgía" ;--# notpresent
    VP (Impf Ind Pl P1) => "resurgíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resurgíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resurgían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resurgiera" ; "resurgiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resurgieras" ; "resurgieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resurgiera" ; "resurgiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resurgiéramos" ; "resurgiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resurgierais" ; "resurgieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resurgieran" ; "resurgiesen"} ;--# notpresent
    VP (Pret Sg P1) => "resurgí" ;--# notpresent
    VP (Pret Sg P2) => "resurgiste" ;--# notpresent
    VP (Pret Sg P3) => "resurgió" ;--# notpresent
    VP (Pret Pl P1) => "resurgimos" ;--# notpresent
    VP (Pret Pl P2) => "resurgisteis" ;--# notpresent
    VP (Pret Pl P3) => "resurgieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resurgiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resurgirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resurgirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "resurgiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resurgiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resurgirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resurgiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resurgieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resurgiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resurgiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resurgiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resurgieren" ;--# notpresent
    VP (Cond Sg P1) => "resurgiría" ;--# notpresent
    VP (Cond Sg P2) => "resurgirías" ;--# notpresent
    VP (Cond Sg P3) => "resurgiría" ;--# notpresent
    VP (Cond Pl P1) => "resurgiríamos" ;--# notpresent
    VP (Cond Pl P2) => "resurgiríais" ;--# notpresent
    VP (Cond Pl P3) => "resurgirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resurge" ;
    VP (Imp Sg P3) => "resurja" ;
    VP (Imp Pl P1) => "resurjamos" ;
    VP (Imp Pl P2) => "resurgid" ;
    VP (Imp Pl P3) => "resurjan" ;
    VP (Pass Sg Masc) => "resurgido" ;
    VP (Pass Sg Fem) => "resurgida" ;
    VP (Pass Pl Masc) => "resurgidos" ;
    VP (Pass Pl Fem) => "resurgidas"
    }
  } ;

lin rugir_V = verboV 
 {s = table {
    VI Infn => "rugir" ;
    VI Ger => "rugiendo" ;
    VI Part => "rugido" ;
    VP (Pres Ind Sg P1) => "rujo" ;
    VP (Pres Ind Sg P2) => "ruges" ;
    VP (Pres Ind Sg P3) => "ruge" ;
    VP (Pres Ind Pl P1) => "rugimos" ;
    VP (Pres Ind Pl P2) => "rugís" ;
    VP (Pres Ind Pl P3) => "rugen" ;
    VP (Pres Subj Sg P1) => "ruja" ;
    VP (Pres Subj Sg P2) => "rujas" ;
    VP (Pres Subj Sg P3) => "ruja" ;
    VP (Pres Subj Pl P1) => "rujamos" ;
    VP (Pres Subj Pl P2) => "rujáis" ;
    VP (Pres Subj Pl P3) => "rujan" ;
    VP (Impf Ind Sg P1) => "rugía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rugías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rugía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rugíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rugíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rugían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rugiera" ; "rugiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rugieras" ; "rugieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rugiera" ; "rugiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rugiéramos" ; "rugiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rugierais" ; "rugieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rugieran" ; "rugiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rugí" ;--# notpresent
    VP (Pret Sg P2) => "rugiste" ;--# notpresent
    VP (Pret Sg P3) => "rugió" ;--# notpresent
    VP (Pret Pl P1) => "rugimos" ;--# notpresent
    VP (Pret Pl P2) => "rugisteis" ;--# notpresent
    VP (Pret Pl P3) => "rugieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rugiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rugirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rugirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rugiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rugiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rugirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rugiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rugieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rugiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rugiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rugiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rugieren" ;--# notpresent
    VP (Cond Sg P1) => "rugiría" ;--# notpresent
    VP (Cond Sg P2) => "rugirías" ;--# notpresent
    VP (Cond Sg P3) => "rugiría" ;--# notpresent
    VP (Cond Pl P1) => "rugiríamos" ;--# notpresent
    VP (Cond Pl P2) => "rugiríais" ;--# notpresent
    VP (Cond Pl P3) => "rugirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ruge" ;
    VP (Imp Sg P3) => "ruja" ;
    VP (Imp Pl P1) => "rujamos" ;
    VP (Imp Pl P2) => "rugid" ;
    VP (Imp Pl P3) => "rujan" ;
    VP (Pass Sg Masc) => "rugido" ;
    VP (Pass Sg Fem) => "rugida" ;
    VP (Pass Pl Masc) => "rugidos" ;
    VP (Pass Pl Fem) => "rugidas"
    }
  } ;

lin sumergir_V = verboV 
 {s = table {
    VI Infn => "sumergir" ;
    VI Ger => "sumergiendo" ;
    VI Part => "sumergido" ;
    VP (Pres Ind Sg P1) => "sumerjo" ;
    VP (Pres Ind Sg P2) => "sumerges" ;
    VP (Pres Ind Sg P3) => "sumerge" ;
    VP (Pres Ind Pl P1) => "sumergimos" ;
    VP (Pres Ind Pl P2) => "sumergís" ;
    VP (Pres Ind Pl P3) => "sumergen" ;
    VP (Pres Subj Sg P1) => "sumerja" ;
    VP (Pres Subj Sg P2) => "sumerjas" ;
    VP (Pres Subj Sg P3) => "sumerja" ;
    VP (Pres Subj Pl P1) => "sumerjamos" ;
    VP (Pres Subj Pl P2) => "sumerjáis" ;
    VP (Pres Subj Pl P3) => "sumerjan" ;
    VP (Impf Ind Sg P1) => "sumergía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sumergías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sumergía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sumergíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sumergíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sumergían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sumergiera" ; "sumergiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sumergieras" ; "sumergieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sumergiera" ; "sumergiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sumergiéramos" ; "sumergiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sumergierais" ; "sumergieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sumergieran" ; "sumergiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sumergí" ;--# notpresent
    VP (Pret Sg P2) => "sumergiste" ;--# notpresent
    VP (Pret Sg P3) => "sumergió" ;--# notpresent
    VP (Pret Pl P1) => "sumergimos" ;--# notpresent
    VP (Pret Pl P2) => "sumergisteis" ;--# notpresent
    VP (Pret Pl P3) => "sumergieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sumergiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sumergirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sumergirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sumergiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sumergiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sumergirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sumergiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sumergieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sumergiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sumergiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sumergiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sumergieren" ;--# notpresent
    VP (Cond Sg P1) => "sumergiría" ;--# notpresent
    VP (Cond Sg P2) => "sumergirías" ;--# notpresent
    VP (Cond Sg P3) => "sumergiría" ;--# notpresent
    VP (Cond Pl P1) => "sumergiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sumergiríais" ;--# notpresent
    VP (Cond Pl P3) => "sumergirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sumerge" ;
    VP (Imp Sg P3) => "sumerja" ;
    VP (Imp Pl P1) => "sumerjamos" ;
    VP (Imp Pl P2) => "sumergid" ;
    VP (Imp Pl P3) => "sumerjan" ;
    VP (Pass Sg Masc) => "sumergido" ;
    VP (Pass Sg Fem) => "sumergida" ;
    VP (Pass Pl Masc) => "sumergidos" ;
    VP (Pass Pl Fem) => "sumergidas"
    }
  } ;

lin surgir_V = verboV 
 {s = table {
    VI Infn => "surgir" ;
    VI Ger => "surgiendo" ;
    VI Part => "surgido" ;
    VP (Pres Ind Sg P1) => "surjo" ;
    VP (Pres Ind Sg P2) => "surges" ;
    VP (Pres Ind Sg P3) => "surge" ;
    VP (Pres Ind Pl P1) => "surgimos" ;
    VP (Pres Ind Pl P2) => "surgís" ;
    VP (Pres Ind Pl P3) => "surgen" ;
    VP (Pres Subj Sg P1) => "surja" ;
    VP (Pres Subj Sg P2) => "surjas" ;
    VP (Pres Subj Sg P3) => "surja" ;
    VP (Pres Subj Pl P1) => "surjamos" ;
    VP (Pres Subj Pl P2) => "surjáis" ;
    VP (Pres Subj Pl P3) => "surjan" ;
    VP (Impf Ind Sg P1) => "surgía" ;--# notpresent
    VP (Impf Ind Sg P2) => "surgías" ;--# notpresent
    VP (Impf Ind Sg P3) => "surgía" ;--# notpresent
    VP (Impf Ind Pl P1) => "surgíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "surgíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "surgían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"surgiera" ; "surgiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"surgieras" ; "surgieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"surgiera" ; "surgiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"surgiéramos" ; "surgiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"surgierais" ; "surgieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"surgieran" ; "surgiesen"} ;--# notpresent
    VP (Pret Sg P1) => "surgí" ;--# notpresent
    VP (Pret Sg P2) => "surgiste" ;--# notpresent
    VP (Pret Sg P3) => "surgió" ;--# notpresent
    VP (Pret Pl P1) => "surgimos" ;--# notpresent
    VP (Pret Pl P2) => "surgisteis" ;--# notpresent
    VP (Pret Pl P3) => "surgieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "surgiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "surgirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "surgirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "surgiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "surgiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "surgirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "surgiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "surgieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "surgiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "surgiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "surgiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "surgieren" ;--# notpresent
    VP (Cond Sg P1) => "surgiría" ;--# notpresent
    VP (Cond Sg P2) => "surgirías" ;--# notpresent
    VP (Cond Sg P3) => "surgiría" ;--# notpresent
    VP (Cond Pl P1) => "surgiríamos" ;--# notpresent
    VP (Cond Pl P2) => "surgiríais" ;--# notpresent
    VP (Cond Pl P3) => "surgirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "surge" ;
    VP (Imp Sg P3) => "surja" ;
    VP (Imp Pl P1) => "surjamos" ;
    VP (Imp Pl P2) => "surgid" ;
    VP (Imp Pl P3) => "surjan" ;
    VP (Pass Sg Masc) => "surgido" ;
    VP (Pass Sg Fem) => "surgida" ;
    VP (Pass Pl Masc) => "surgidos" ;
    VP (Pass Pl Fem) => "surgidas"
    }
  } ;

lin teledirigir_V = verboV 
 {s = table {
    VI Infn => "teledirigir" ;
    VI Ger => "teledirigiendo" ;
    VI Part => "teledirigido" ;
    VP (Pres Ind Sg P1) => "teledirijo" ;
    VP (Pres Ind Sg P2) => "telediriges" ;
    VP (Pres Ind Sg P3) => "teledirige" ;
    VP (Pres Ind Pl P1) => "teledirigimos" ;
    VP (Pres Ind Pl P2) => "teledirigís" ;
    VP (Pres Ind Pl P3) => "teledirigen" ;
    VP (Pres Subj Sg P1) => "teledirija" ;
    VP (Pres Subj Sg P2) => "teledirijas" ;
    VP (Pres Subj Sg P3) => "teledirija" ;
    VP (Pres Subj Pl P1) => "teledirijamos" ;
    VP (Pres Subj Pl P2) => "teledirijáis" ;
    VP (Pres Subj Pl P3) => "teledirijan" ;
    VP (Impf Ind Sg P1) => "teledirigía" ;--# notpresent
    VP (Impf Ind Sg P2) => "teledirigías" ;--# notpresent
    VP (Impf Ind Sg P3) => "teledirigía" ;--# notpresent
    VP (Impf Ind Pl P1) => "teledirigíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "teledirigíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "teledirigían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"teledirigiera" ; "teledirigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"teledirigieras" ; "teledirigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"teledirigiera" ; "teledirigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"teledirigiéramos" ; "teledirigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"teledirigierais" ; "teledirigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"teledirigieran" ; "teledirigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "teledirigí" ;--# notpresent
    VP (Pret Sg P2) => "teledirigiste" ;--# notpresent
    VP (Pret Sg P3) => "teledirigió" ;--# notpresent
    VP (Pret Pl P1) => "teledirigimos" ;--# notpresent
    VP (Pret Pl P2) => "teledirigisteis" ;--# notpresent
    VP (Pret Pl P3) => "teledirigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "teledirigiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "teledirigirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "teledirigirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "teledirigiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "teledirigiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "teledirigirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "teledirigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "teledirigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "teledirigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "teledirigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "teledirigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "teledirigieren" ;--# notpresent
    VP (Cond Sg P1) => "teledirigiría" ;--# notpresent
    VP (Cond Sg P2) => "teledirigirías" ;--# notpresent
    VP (Cond Sg P3) => "teledirigiría" ;--# notpresent
    VP (Cond Pl P1) => "teledirigiríamos" ;--# notpresent
    VP (Cond Pl P2) => "teledirigiríais" ;--# notpresent
    VP (Cond Pl P3) => "teledirigirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "teledirige" ;
    VP (Imp Sg P3) => "teledirija" ;
    VP (Imp Pl P1) => "teledirijamos" ;
    VP (Imp Pl P2) => "teledirigid" ;
    VP (Imp Pl P3) => "teledirijan" ;
    VP (Pass Sg Masc) => "teledirigido" ;
    VP (Pass Sg Fem) => "teledirigida" ;
    VP (Pass Pl Masc) => "teledirigidos" ;
    VP (Pass Pl Fem) => "teledirigidas"
    }
  } ;

lin transigir_V = verboV 
 {s = table {
    VI Infn => "transigir" ;
    VI Ger => "transigiendo" ;
    VI Part => "transigido" ;
    VP (Pres Ind Sg P1) => "transijo" ;
    VP (Pres Ind Sg P2) => "transiges" ;
    VP (Pres Ind Sg P3) => "transige" ;
    VP (Pres Ind Pl P1) => "transigimos" ;
    VP (Pres Ind Pl P2) => "transigís" ;
    VP (Pres Ind Pl P3) => "transigen" ;
    VP (Pres Subj Sg P1) => "transija" ;
    VP (Pres Subj Sg P2) => "transijas" ;
    VP (Pres Subj Sg P3) => "transija" ;
    VP (Pres Subj Pl P1) => "transijamos" ;
    VP (Pres Subj Pl P2) => "transijáis" ;
    VP (Pres Subj Pl P3) => "transijan" ;
    VP (Impf Ind Sg P1) => "transigía" ;--# notpresent
    VP (Impf Ind Sg P2) => "transigías" ;--# notpresent
    VP (Impf Ind Sg P3) => "transigía" ;--# notpresent
    VP (Impf Ind Pl P1) => "transigíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "transigíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "transigían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transigiera" ; "transigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"transigieras" ; "transigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transigiera" ; "transigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transigiéramos" ; "transigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"transigierais" ; "transigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"transigieran" ; "transigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "transigí" ;--# notpresent
    VP (Pret Sg P2) => "transigiste" ;--# notpresent
    VP (Pret Sg P3) => "transigió" ;--# notpresent
    VP (Pret Pl P1) => "transigimos" ;--# notpresent
    VP (Pret Pl P2) => "transigisteis" ;--# notpresent
    VP (Pret Pl P3) => "transigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transigiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "transigirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "transigirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transigiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transigiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "transigirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "transigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "transigieren" ;--# notpresent
    VP (Cond Sg P1) => "transigiría" ;--# notpresent
    VP (Cond Sg P2) => "transigirías" ;--# notpresent
    VP (Cond Sg P3) => "transigiría" ;--# notpresent
    VP (Cond Pl P1) => "transigiríamos" ;--# notpresent
    VP (Cond Pl P2) => "transigiríais" ;--# notpresent
    VP (Cond Pl P3) => "transigirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "transige" ;
    VP (Imp Sg P3) => "transija" ;
    VP (Imp Pl P1) => "transijamos" ;
    VP (Imp Pl P2) => "transigid" ;
    VP (Imp Pl P3) => "transijan" ;
    VP (Pass Sg Masc) => "transigido" ;
    VP (Pass Sg Fem) => "transigida" ;
    VP (Pass Pl Masc) => "transigidos" ;
    VP (Pass Pl Fem) => "transigidas"
    }
  } ;

lin ungir_V = verboV 
 {s = table {
    VI Infn => "ungir" ;
    VI Ger => "ungiendo" ;
    VI Part => "ungido" ;
    VP (Pres Ind Sg P1) => "unjo" ;
    VP (Pres Ind Sg P2) => "unges" ;
    VP (Pres Ind Sg P3) => "unge" ;
    VP (Pres Ind Pl P1) => "ungimos" ;
    VP (Pres Ind Pl P2) => "ungís" ;
    VP (Pres Ind Pl P3) => "ungen" ;
    VP (Pres Subj Sg P1) => "unja" ;
    VP (Pres Subj Sg P2) => "unjas" ;
    VP (Pres Subj Sg P3) => "unja" ;
    VP (Pres Subj Pl P1) => "unjamos" ;
    VP (Pres Subj Pl P2) => "unjáis" ;
    VP (Pres Subj Pl P3) => "unjan" ;
    VP (Impf Ind Sg P1) => "ungía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ungías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ungía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ungíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ungíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ungían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ungiera" ; "ungiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ungieras" ; "ungieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ungiera" ; "ungiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ungiéramos" ; "ungiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ungierais" ; "ungieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ungieran" ; "ungiesen"} ;--# notpresent
    VP (Pret Sg P1) => "ungí" ;--# notpresent
    VP (Pret Sg P2) => "ungiste" ;--# notpresent
    VP (Pret Sg P3) => "ungió" ;--# notpresent
    VP (Pret Pl P1) => "ungimos" ;--# notpresent
    VP (Pret Pl P2) => "ungisteis" ;--# notpresent
    VP (Pret Pl P3) => "ungieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ungiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ungirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ungirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ungiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ungiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ungirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ungiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ungieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ungiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ungiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ungiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ungieren" ;--# notpresent
    VP (Cond Sg P1) => "ungiría" ;--# notpresent
    VP (Cond Sg P2) => "ungirías" ;--# notpresent
    VP (Cond Sg P3) => "ungiría" ;--# notpresent
    VP (Cond Pl P1) => "ungiríamos" ;--# notpresent
    VP (Cond Pl P2) => "ungiríais" ;--# notpresent
    VP (Cond Pl P3) => "ungirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "unge" ;
    VP (Imp Sg P3) => "unja" ;
    VP (Imp Pl P1) => "unjamos" ;
    VP (Imp Pl P2) => "ungid" ;
    VP (Imp Pl P3) => "unjan" ;
    VP (Pass Sg Masc) => "ungido" ;
    VP (Pass Sg Fem) => "ungida" ;
    VP (Pass Pl Masc) => "ungidos" ;
    VP (Pass Pl Fem) => "ungidas"
    }
  } ;

lin urgir_V = verboV 
 {s = table {
    VI Infn => "urgir" ;
    VI Ger => "urgiendo" ;
    VI Part => "urgido" ;
    VP (Pres Ind Sg P1) => "urjo" ;
    VP (Pres Ind Sg P2) => "urges" ;
    VP (Pres Ind Sg P3) => "urge" ;
    VP (Pres Ind Pl P1) => "urgimos" ;
    VP (Pres Ind Pl P2) => "urgís" ;
    VP (Pres Ind Pl P3) => "urgen" ;
    VP (Pres Subj Sg P1) => "urja" ;
    VP (Pres Subj Sg P2) => "urjas" ;
    VP (Pres Subj Sg P3) => "urja" ;
    VP (Pres Subj Pl P1) => "urjamos" ;
    VP (Pres Subj Pl P2) => "urjáis" ;
    VP (Pres Subj Pl P3) => "urjan" ;
    VP (Impf Ind Sg P1) => "urgía" ;--# notpresent
    VP (Impf Ind Sg P2) => "urgías" ;--# notpresent
    VP (Impf Ind Sg P3) => "urgía" ;--# notpresent
    VP (Impf Ind Pl P1) => "urgíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "urgíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "urgían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"urgiera" ; "urgiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"urgieras" ; "urgieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"urgiera" ; "urgiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"urgiéramos" ; "urgiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"urgierais" ; "urgieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"urgieran" ; "urgiesen"} ;--# notpresent
    VP (Pret Sg P1) => "urgí" ;--# notpresent
    VP (Pret Sg P2) => "urgiste" ;--# notpresent
    VP (Pret Sg P3) => "urgió" ;--# notpresent
    VP (Pret Pl P1) => "urgimos" ;--# notpresent
    VP (Pret Pl P2) => "urgisteis" ;--# notpresent
    VP (Pret Pl P3) => "urgieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "urgiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "urgirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "urgirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "urgiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "urgiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "urgirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "urgiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "urgieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "urgiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "urgiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "urgiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "urgieren" ;--# notpresent
    VP (Cond Sg P1) => "urgiría" ;--# notpresent
    VP (Cond Sg P2) => "urgirías" ;--# notpresent
    VP (Cond Sg P3) => "urgiría" ;--# notpresent
    VP (Cond Pl P1) => "urgiríamos" ;--# notpresent
    VP (Cond Pl P2) => "urgiríais" ;--# notpresent
    VP (Cond Pl P3) => "urgirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "urge" ;
    VP (Imp Sg P3) => "urja" ;
    VP (Imp Pl P1) => "urjamos" ;
    VP (Imp Pl P2) => "urgid" ;
    VP (Imp Pl P3) => "urjan" ;
    VP (Pass Sg Masc) => "urgido" ;
    VP (Pass Sg Fem) => "urgida" ;
    VP (Pass Pl Masc) => "urgidos" ;
    VP (Pass Pl Fem) => "urgidas"
    }
  } ;

lin distinguir_V = verboV 
 {s = table {
    VI Infn => "distinguir" ;
    VI Ger => "distinguiendo" ;
    VI Part => "distinguido" ;
    VP (Pres Ind Sg P1) => "distingo" ;
    VP (Pres Ind Sg P2) => "distingues" ;
    VP (Pres Ind Sg P3) => "distingue" ;
    VP (Pres Ind Pl P1) => "distinguimos" ;
    VP (Pres Ind Pl P2) => "distinguís" ;
    VP (Pres Ind Pl P3) => "distinguen" ;
    VP (Pres Subj Sg P1) => "distinga" ;
    VP (Pres Subj Sg P2) => "distingas" ;
    VP (Pres Subj Sg P3) => "distinga" ;
    VP (Pres Subj Pl P1) => "distingamos" ;
    VP (Pres Subj Pl P2) => "distingáis" ;
    VP (Pres Subj Pl P3) => "distingan" ;
    VP (Impf Ind Sg P1) => "distinguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "distinguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "distinguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "distinguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "distinguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "distinguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"distinguiera" ; "distinguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"distinguieras" ; "distinguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"distinguiera" ; "distinguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"distinguiéramos" ; "distinguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"distinguierais" ; "distinguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"distinguieran" ; "distinguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "distinguí" ;--# notpresent
    VP (Pret Sg P2) => "distinguiste" ;--# notpresent
    VP (Pret Sg P3) => "distinguió" ;--# notpresent
    VP (Pret Pl P1) => "distinguimos" ;--# notpresent
    VP (Pret Pl P2) => "distinguisteis" ;--# notpresent
    VP (Pret Pl P3) => "distinguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "distinguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "distinguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "distinguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "distinguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "distinguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "distinguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "distinguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "distinguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "distinguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "distinguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "distinguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "distinguieren" ;--# notpresent
    VP (Cond Sg P1) => "distinguiría" ;--# notpresent
    VP (Cond Sg P2) => "distinguirías" ;--# notpresent
    VP (Cond Sg P3) => "distinguiría" ;--# notpresent
    VP (Cond Pl P1) => "distinguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "distinguiríais" ;--# notpresent
    VP (Cond Pl P3) => "distinguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "distingue" ;
    VP (Imp Sg P3) => "distinga" ;
    VP (Imp Pl P1) => "distingamos" ;
    VP (Imp Pl P2) => "distinguid" ;
    VP (Imp Pl P3) => "distingan" ;
    VP (Pass Sg Masc) => "distinguido" ;
    VP (Pass Sg Fem) => "distinguida" ;
    VP (Pass Pl Masc) => "distinguidos" ;
    VP (Pass Pl Fem) => "distinguidas"
    }
  } ;

lin extinguir_V = verboV 
 {s = table {
    VI Infn => "extinguir" ;
    VI Ger => "extinguiendo" ;
    VI Part => "extinguido" ;
    VP (Pres Ind Sg P1) => "extingo" ;
    VP (Pres Ind Sg P2) => "extingues" ;
    VP (Pres Ind Sg P3) => "extingue" ;
    VP (Pres Ind Pl P1) => "extinguimos" ;
    VP (Pres Ind Pl P2) => "extinguís" ;
    VP (Pres Ind Pl P3) => "extinguen" ;
    VP (Pres Subj Sg P1) => "extinga" ;
    VP (Pres Subj Sg P2) => "extingas" ;
    VP (Pres Subj Sg P3) => "extinga" ;
    VP (Pres Subj Pl P1) => "extingamos" ;
    VP (Pres Subj Pl P2) => "extingáis" ;
    VP (Pres Subj Pl P3) => "extingan" ;
    VP (Impf Ind Sg P1) => "extinguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "extinguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "extinguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "extinguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "extinguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "extinguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"extinguiera" ; "extinguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"extinguieras" ; "extinguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"extinguiera" ; "extinguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"extinguiéramos" ; "extinguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"extinguierais" ; "extinguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"extinguieran" ; "extinguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "extinguí" ;--# notpresent
    VP (Pret Sg P2) => "extinguiste" ;--# notpresent
    VP (Pret Sg P3) => "extinguió" ;--# notpresent
    VP (Pret Pl P1) => "extinguimos" ;--# notpresent
    VP (Pret Pl P2) => "extinguisteis" ;--# notpresent
    VP (Pret Pl P3) => "extinguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "extinguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "extinguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "extinguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "extinguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "extinguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "extinguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "extinguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "extinguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "extinguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "extinguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "extinguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "extinguieren" ;--# notpresent
    VP (Cond Sg P1) => "extinguiría" ;--# notpresent
    VP (Cond Sg P2) => "extinguirías" ;--# notpresent
    VP (Cond Sg P3) => "extinguiría" ;--# notpresent
    VP (Cond Pl P1) => "extinguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "extinguiríais" ;--# notpresent
    VP (Cond Pl P3) => "extinguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "extingue" ;
    VP (Imp Sg P3) => "extinga" ;
    VP (Imp Pl P1) => "extingamos" ;
    VP (Imp Pl P2) => "extinguid" ;
    VP (Imp Pl P3) => "extingan" ;
    VP (Pass Sg Masc) => "extinguido" ;
    VP (Pass Sg Fem) => "extinguida" ;
    VP (Pass Pl Masc) => "extinguidos" ;
    VP (Pass Pl Fem) => "extinguidas"
    }
  } ;

lin subdistinguir_V = verboV 
 {s = table {
    VI Infn => "subdistinguir" ;
    VI Ger => "subdistinguiendo" ;
    VI Part => "subdistinguido" ;
    VP (Pres Ind Sg P1) => "subdistingo" ;
    VP (Pres Ind Sg P2) => "subdistingues" ;
    VP (Pres Ind Sg P3) => "subdistingue" ;
    VP (Pres Ind Pl P1) => "subdistinguimos" ;
    VP (Pres Ind Pl P2) => "subdistinguís" ;
    VP (Pres Ind Pl P3) => "subdistinguen" ;
    VP (Pres Subj Sg P1) => "subdistinga" ;
    VP (Pres Subj Sg P2) => "subdistingas" ;
    VP (Pres Subj Sg P3) => "subdistinga" ;
    VP (Pres Subj Pl P1) => "subdistingamos" ;
    VP (Pres Subj Pl P2) => "subdistingáis" ;
    VP (Pres Subj Pl P3) => "subdistingan" ;
    VP (Impf Ind Sg P1) => "subdistinguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subdistinguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subdistinguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subdistinguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subdistinguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subdistinguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subdistinguiera" ; "subdistinguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subdistinguieras" ; "subdistinguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subdistinguiera" ; "subdistinguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subdistinguiéramos" ; "subdistinguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subdistinguierais" ; "subdistinguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subdistinguieran" ; "subdistinguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subdistinguí" ;--# notpresent
    VP (Pret Sg P2) => "subdistinguiste" ;--# notpresent
    VP (Pret Sg P3) => "subdistinguió" ;--# notpresent
    VP (Pret Pl P1) => "subdistinguimos" ;--# notpresent
    VP (Pret Pl P2) => "subdistinguisteis" ;--# notpresent
    VP (Pret Pl P3) => "subdistinguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subdistinguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subdistinguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subdistinguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subdistinguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subdistinguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subdistinguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subdistinguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subdistinguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subdistinguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subdistinguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subdistinguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subdistinguieren" ;--# notpresent
    VP (Cond Sg P1) => "subdistinguiría" ;--# notpresent
    VP (Cond Sg P2) => "subdistinguirías" ;--# notpresent
    VP (Cond Sg P3) => "subdistinguiría" ;--# notpresent
    VP (Cond Pl P1) => "subdistinguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "subdistinguiríais" ;--# notpresent
    VP (Cond Pl P3) => "subdistinguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subdistingue" ;
    VP (Imp Sg P3) => "subdistinga" ;
    VP (Imp Pl P1) => "subdistingamos" ;
    VP (Imp Pl P2) => "subdistinguid" ;
    VP (Imp Pl P3) => "subdistingan" ;
    VP (Pass Sg Masc) => "subdistinguido" ;
    VP (Pass Sg Fem) => "subdistinguida" ;
    VP (Pass Pl Masc) => "subdistinguidos" ;
    VP (Pass Pl Fem) => "subdistinguidas"
    }
  } ;

lin deslucir_V = verboV 
 {s = table {
    VI Infn => "deslucir" ;
    VI Ger => "desluciendo" ;
    VI Part => "deslucido" ;
    VP (Pres Ind Sg P1) => "desluzco" ;
    VP (Pres Ind Sg P2) => "desluces" ;
    VP (Pres Ind Sg P3) => "desluce" ;
    VP (Pres Ind Pl P1) => "deslucimos" ;
    VP (Pres Ind Pl P2) => "deslucís" ;
    VP (Pres Ind Pl P3) => "deslucen" ;
    VP (Pres Subj Sg P1) => "desluzca" ;
    VP (Pres Subj Sg P2) => "desluzcas" ;
    VP (Pres Subj Sg P3) => "desluzca" ;
    VP (Pres Subj Pl P1) => "desluzcamos" ;
    VP (Pres Subj Pl P2) => "desluzcáis" ;
    VP (Pres Subj Pl P3) => "desluzcan" ;
    VP (Impf Ind Sg P1) => "deslucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "deslucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "deslucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deslucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deslucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deslucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desluciera" ; "desluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"deslucieras" ; "deslucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desluciera" ; "desluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desluciéramos" ; "desluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"deslucierais" ; "deslucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"deslucieran" ; "desluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "deslucí" ;--# notpresent
    VP (Pret Sg P2) => "desluciste" ;--# notpresent
    VP (Pret Sg P3) => "deslució" ;--# notpresent
    VP (Pret Pl P1) => "deslucimos" ;--# notpresent
    VP (Pret Pl P2) => "deslucisteis" ;--# notpresent
    VP (Pret Pl P3) => "deslucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deslucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deslucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deslucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "deslucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "deslucieren" ;--# notpresent
    VP (Cond Sg P1) => "desluciría" ;--# notpresent
    VP (Cond Sg P2) => "deslucirías" ;--# notpresent
    VP (Cond Sg P3) => "desluciría" ;--# notpresent
    VP (Cond Pl P1) => "desluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "desluciríais" ;--# notpresent
    VP (Cond Pl P3) => "deslucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desluce" ;
    VP (Imp Sg P3) => "desluzca" ;
    VP (Imp Pl P1) => "desluzcamos" ;
    VP (Imp Pl P2) => "deslucid" ;
    VP (Imp Pl P3) => "desluzcan" ;
    VP (Pass Sg Masc) => "deslucido" ;
    VP (Pass Sg Fem) => "deslucida" ;
    VP (Pass Pl Masc) => "deslucidos" ;
    VP (Pass Pl Fem) => "deslucidas"
    }
  } ;

lin enlucir_V = verboV 
 {s = table {
    VI Infn => "enlucir" ;
    VI Ger => "enluciendo" ;
    VI Part => "enlucido" ;
    VP (Pres Ind Sg P1) => "enluzco" ;
    VP (Pres Ind Sg P2) => "enluces" ;
    VP (Pres Ind Sg P3) => "enluce" ;
    VP (Pres Ind Pl P1) => "enlucimos" ;
    VP (Pres Ind Pl P2) => "enlucís" ;
    VP (Pres Ind Pl P3) => "enlucen" ;
    VP (Pres Subj Sg P1) => "enluzca" ;
    VP (Pres Subj Sg P2) => "enluzcas" ;
    VP (Pres Subj Sg P3) => "enluzca" ;
    VP (Pres Subj Pl P1) => "enluzcamos" ;
    VP (Pres Subj Pl P2) => "enluzcáis" ;
    VP (Pres Subj Pl P3) => "enluzcan" ;
    VP (Impf Ind Sg P1) => "enlucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enlucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enlucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enlucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enlucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enlucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enluciera" ; "enluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enlucieras" ; "enlucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enluciera" ; "enluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enluciéramos" ; "enluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enlucierais" ; "enlucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enlucieran" ; "enluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enlucí" ;--# notpresent
    VP (Pret Sg P2) => "enluciste" ;--# notpresent
    VP (Pret Sg P3) => "enlució" ;--# notpresent
    VP (Pret Pl P1) => "enlucimos" ;--# notpresent
    VP (Pret Pl P2) => "enlucisteis" ;--# notpresent
    VP (Pret Pl P3) => "enlucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enlucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enlucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enlucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enlucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enlucieren" ;--# notpresent
    VP (Cond Sg P1) => "enluciría" ;--# notpresent
    VP (Cond Sg P2) => "enlucirías" ;--# notpresent
    VP (Cond Sg P3) => "enluciría" ;--# notpresent
    VP (Cond Pl P1) => "enluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "enluciríais" ;--# notpresent
    VP (Cond Pl P3) => "enlucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enluce" ;
    VP (Imp Sg P3) => "enluzca" ;
    VP (Imp Pl P1) => "enluzcamos" ;
    VP (Imp Pl P2) => "enlucid" ;
    VP (Imp Pl P3) => "enluzcan" ;
    VP (Pass Sg Masc) => "enlucido" ;
    VP (Pass Sg Fem) => "enlucida" ;
    VP (Pass Pl Masc) => "enlucidos" ;
    VP (Pass Pl Fem) => "enlucidas"
    }
  } ;

lin entrelucir_V = verboV 
 {s = table {
    VI Infn => "entrelucir" ;
    VI Ger => "entreluciendo" ;
    VI Part => "entrelucido" ;
    VP (Pres Ind Sg P1) => "entreluzco" ;
    VP (Pres Ind Sg P2) => "entreluces" ;
    VP (Pres Ind Sg P3) => "entreluce" ;
    VP (Pres Ind Pl P1) => "entrelucimos" ;
    VP (Pres Ind Pl P2) => "entrelucís" ;
    VP (Pres Ind Pl P3) => "entrelucen" ;
    VP (Pres Subj Sg P1) => "entreluzca" ;
    VP (Pres Subj Sg P2) => "entreluzcas" ;
    VP (Pres Subj Sg P3) => "entreluzca" ;
    VP (Pres Subj Pl P1) => "entreluzcamos" ;
    VP (Pres Subj Pl P2) => "entreluzcáis" ;
    VP (Pres Subj Pl P3) => "entreluzcan" ;
    VP (Impf Ind Sg P1) => "entrelucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entrelucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entrelucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entrelucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entrelucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entrelucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entreluciera" ; "entreluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entrelucieras" ; "entrelucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entreluciera" ; "entreluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entreluciéramos" ; "entreluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entrelucierais" ; "entrelucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entrelucieran" ; "entreluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entrelucí" ;--# notpresent
    VP (Pret Sg P2) => "entreluciste" ;--# notpresent
    VP (Pret Sg P3) => "entrelució" ;--# notpresent
    VP (Pret Pl P1) => "entrelucimos" ;--# notpresent
    VP (Pret Pl P2) => "entrelucisteis" ;--# notpresent
    VP (Pret Pl P3) => "entrelucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entreluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entrelucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entrelucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entreluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entreluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entrelucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entreluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entrelucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entreluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entreluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entreluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entrelucieren" ;--# notpresent
    VP (Cond Sg P1) => "entreluciría" ;--# notpresent
    VP (Cond Sg P2) => "entrelucirías" ;--# notpresent
    VP (Cond Sg P3) => "entreluciría" ;--# notpresent
    VP (Cond Pl P1) => "entreluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "entreluciríais" ;--# notpresent
    VP (Cond Pl P3) => "entrelucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entreluce" ;
    VP (Imp Sg P3) => "entreluzca" ;
    VP (Imp Pl P1) => "entreluzcamos" ;
    VP (Imp Pl P2) => "entrelucid" ;
    VP (Imp Pl P3) => "entreluzcan" ;
    VP (Pass Sg Masc) => "entrelucido" ;
    VP (Pass Sg Fem) => "entrelucida" ;
    VP (Pass Pl Masc) => "entrelucidos" ;
    VP (Pass Pl Fem) => "entrelucidas"
    }
  } ;

lin lucir_V = verboV 
 {s = table {
    VI Infn => "lucir" ;
    VI Ger => "luciendo" ;
    VI Part => "lucido" ;
    VP (Pres Ind Sg P1) => "luzco" ;
    VP (Pres Ind Sg P2) => "luces" ;
    VP (Pres Ind Sg P3) => "luce" ;
    VP (Pres Ind Pl P1) => "lucimos" ;
    VP (Pres Ind Pl P2) => "lucís" ;
    VP (Pres Ind Pl P3) => "lucen" ;
    VP (Pres Subj Sg P1) => "luzca" ;
    VP (Pres Subj Sg P2) => "luzcas" ;
    VP (Pres Subj Sg P3) => "luzca" ;
    VP (Pres Subj Pl P1) => "luzcamos" ;
    VP (Pres Subj Pl P2) => "luzcáis" ;
    VP (Pres Subj Pl P3) => "luzcan" ;
    VP (Impf Ind Sg P1) => "lucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "lucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "lucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "lucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "lucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "lucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"luciera" ; "luciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"lucieras" ; "lucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"luciera" ; "luciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"luciéramos" ; "luciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"lucierais" ; "lucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"lucieran" ; "luciesen"} ;--# notpresent
    VP (Pret Sg P1) => "lucí" ;--# notpresent
    VP (Pret Sg P2) => "luciste" ;--# notpresent
    VP (Pret Sg P3) => "lució" ;--# notpresent
    VP (Pret Pl P1) => "lucimos" ;--# notpresent
    VP (Pret Pl P2) => "lucisteis" ;--# notpresent
    VP (Pret Pl P3) => "lucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "luciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "lucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "lucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "luciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "luciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "lucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "luciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "lucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "luciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "luciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "luciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "lucieren" ;--# notpresent
    VP (Cond Sg P1) => "luciría" ;--# notpresent
    VP (Cond Sg P2) => "lucirías" ;--# notpresent
    VP (Cond Sg P3) => "luciría" ;--# notpresent
    VP (Cond Pl P1) => "luciríamos" ;--# notpresent
    VP (Cond Pl P2) => "luciríais" ;--# notpresent
    VP (Cond Pl P3) => "lucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "luce" ;
    VP (Imp Sg P3) => "luzca" ;
    VP (Imp Pl P1) => "luzcamos" ;
    VP (Imp Pl P2) => "lucid" ;
    VP (Imp Pl P3) => "luzcan" ;
    VP (Pass Sg Masc) => "lucido" ;
    VP (Pass Sg Fem) => "lucida" ;
    VP (Pass Pl Masc) => "lucidos" ;
    VP (Pass Pl Fem) => "lucidas"
    }
  } ;

lin prelucir_V = verboV 
 {s = table {
    VI Infn => "prelucir" ;
    VI Ger => "preluciendo" ;
    VI Part => "prelucido" ;
    VP (Pres Ind Sg P1) => "preluzco" ;
    VP (Pres Ind Sg P2) => "preluces" ;
    VP (Pres Ind Sg P3) => "preluce" ;
    VP (Pres Ind Pl P1) => "prelucimos" ;
    VP (Pres Ind Pl P2) => "prelucís" ;
    VP (Pres Ind Pl P3) => "prelucen" ;
    VP (Pres Subj Sg P1) => "preluzca" ;
    VP (Pres Subj Sg P2) => "preluzcas" ;
    VP (Pres Subj Sg P3) => "preluzca" ;
    VP (Pres Subj Pl P1) => "preluzcamos" ;
    VP (Pres Subj Pl P2) => "preluzcáis" ;
    VP (Pres Subj Pl P3) => "preluzcan" ;
    VP (Impf Ind Sg P1) => "prelucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prelucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prelucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prelucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prelucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prelucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"preluciera" ; "preluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prelucieras" ; "prelucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"preluciera" ; "preluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"preluciéramos" ; "preluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prelucierais" ; "prelucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prelucieran" ; "preluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "prelucí" ;--# notpresent
    VP (Pret Sg P2) => "preluciste" ;--# notpresent
    VP (Pret Sg P3) => "prelució" ;--# notpresent
    VP (Pret Pl P1) => "prelucimos" ;--# notpresent
    VP (Pret Pl P2) => "prelucisteis" ;--# notpresent
    VP (Pret Pl P3) => "prelucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prelucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prelucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prelucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "preluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prelucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "preluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "preluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "preluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prelucieren" ;--# notpresent
    VP (Cond Sg P1) => "preluciría" ;--# notpresent
    VP (Cond Sg P2) => "prelucirías" ;--# notpresent
    VP (Cond Sg P3) => "preluciría" ;--# notpresent
    VP (Cond Pl P1) => "preluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "preluciríais" ;--# notpresent
    VP (Cond Pl P3) => "prelucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preluce" ;
    VP (Imp Sg P3) => "preluzca" ;
    VP (Imp Pl P1) => "preluzcamos" ;
    VP (Imp Pl P2) => "prelucid" ;
    VP (Imp Pl P3) => "preluzcan" ;
    VP (Pass Sg Masc) => "prelucido" ;
    VP (Pass Sg Fem) => "prelucida" ;
    VP (Pass Pl Masc) => "prelucidos" ;
    VP (Pass Pl Fem) => "prelucidas"
    }
  } ;

lin relucir_V = verboV 
 {s = table {
    VI Infn => "relucir" ;
    VI Ger => "reluciendo" ;
    VI Part => "relucido" ;
    VP (Pres Ind Sg P1) => "reluzco" ;
    VP (Pres Ind Sg P2) => "reluces" ;
    VP (Pres Ind Sg P3) => "reluce" ;
    VP (Pres Ind Pl P1) => "relucimos" ;
    VP (Pres Ind Pl P2) => "relucís" ;
    VP (Pres Ind Pl P3) => "relucen" ;
    VP (Pres Subj Sg P1) => "reluzca" ;
    VP (Pres Subj Sg P2) => "reluzcas" ;
    VP (Pres Subj Sg P3) => "reluzca" ;
    VP (Pres Subj Pl P1) => "reluzcamos" ;
    VP (Pres Subj Pl P2) => "reluzcáis" ;
    VP (Pres Subj Pl P3) => "reluzcan" ;
    VP (Impf Ind Sg P1) => "relucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "relucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "relucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "relucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "relucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "relucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reluciera" ; "reluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"relucieras" ; "relucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reluciera" ; "reluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reluciéramos" ; "reluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"relucierais" ; "relucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"relucieran" ; "reluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "relucí" ;--# notpresent
    VP (Pret Sg P2) => "reluciste" ;--# notpresent
    VP (Pret Sg P3) => "relució" ;--# notpresent
    VP (Pret Pl P1) => "relucimos" ;--# notpresent
    VP (Pret Pl P2) => "relucisteis" ;--# notpresent
    VP (Pret Pl P3) => "relucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "relucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "relucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "relucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "relucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "relucieren" ;--# notpresent
    VP (Cond Sg P1) => "reluciría" ;--# notpresent
    VP (Cond Sg P2) => "relucirías" ;--# notpresent
    VP (Cond Sg P3) => "reluciría" ;--# notpresent
    VP (Cond Pl P1) => "reluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "reluciríais" ;--# notpresent
    VP (Cond Pl P3) => "relucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reluce" ;
    VP (Imp Sg P3) => "reluzca" ;
    VP (Imp Pl P1) => "reluzcamos" ;
    VP (Imp Pl P2) => "relucid" ;
    VP (Imp Pl P3) => "reluzcan" ;
    VP (Pass Sg Masc) => "relucido" ;
    VP (Pass Sg Fem) => "relucida" ;
    VP (Pass Pl Masc) => "relucidos" ;
    VP (Pass Pl Fem) => "relucidas"
    }
  } ;

lin traslucir_V = verboV 
 {s = table {
    VI Infn => "traslucir" ;
    VI Ger => "trasluciendo" ;
    VI Part => "traslucido" ;
    VP (Pres Ind Sg P1) => "trasluzco" ;
    VP (Pres Ind Sg P2) => "trasluces" ;
    VP (Pres Ind Sg P3) => "trasluce" ;
    VP (Pres Ind Pl P1) => "traslucimos" ;
    VP (Pres Ind Pl P2) => "traslucís" ;
    VP (Pres Ind Pl P3) => "traslucen" ;
    VP (Pres Subj Sg P1) => "trasluzca" ;
    VP (Pres Subj Sg P2) => "trasluzcas" ;
    VP (Pres Subj Sg P3) => "trasluzca" ;
    VP (Pres Subj Pl P1) => "trasluzcamos" ;
    VP (Pres Subj Pl P2) => "trasluzcáis" ;
    VP (Pres Subj Pl P3) => "trasluzcan" ;
    VP (Impf Ind Sg P1) => "traslucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "traslucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "traslucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "traslucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "traslucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "traslucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasluciera" ; "trasluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"traslucieras" ; "traslucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasluciera" ; "trasluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasluciéramos" ; "trasluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"traslucierais" ; "traslucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"traslucieran" ; "trasluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "traslucí" ;--# notpresent
    VP (Pret Sg P2) => "trasluciste" ;--# notpresent
    VP (Pret Sg P3) => "traslució" ;--# notpresent
    VP (Pret Pl P1) => "traslucimos" ;--# notpresent
    VP (Pret Pl P2) => "traslucisteis" ;--# notpresent
    VP (Pret Pl P3) => "traslucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "traslucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "traslucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "traslucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "traslucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "traslucieren" ;--# notpresent
    VP (Cond Sg P1) => "trasluciría" ;--# notpresent
    VP (Cond Sg P2) => "traslucirías" ;--# notpresent
    VP (Cond Sg P3) => "trasluciría" ;--# notpresent
    VP (Cond Pl P1) => "trasluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasluciríais" ;--# notpresent
    VP (Cond Pl P3) => "traslucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasluce" ;
    VP (Imp Sg P3) => "trasluzca" ;
    VP (Imp Pl P1) => "trasluzcamos" ;
    VP (Imp Pl P2) => "traslucid" ;
    VP (Imp Pl P3) => "trasluzcan" ;
    VP (Pass Sg Masc) => "traslucido" ;
    VP (Pass Sg Fem) => "traslucida" ;
    VP (Pass Pl Masc) => "traslucidos" ;
    VP (Pass Pl Fem) => "traslucidas"
    }
  } ;

lin abastecer_V = verboV 
 {s = table {
    VI Infn => "abastecer" ;
    VI Ger => "abasteciendo" ;
    VI Part => "abastecido" ;
    VP (Pres Ind Sg P1) => "abastezco" ;
    VP (Pres Ind Sg P2) => "abasteces" ;
    VP (Pres Ind Sg P3) => "abastece" ;
    VP (Pres Ind Pl P1) => "abastecemos" ;
    VP (Pres Ind Pl P2) => "abastecéis" ;
    VP (Pres Ind Pl P3) => "abastecen" ;
    VP (Pres Subj Sg P1) => "abastezca" ;
    VP (Pres Subj Sg P2) => "abastezcas" ;
    VP (Pres Subj Sg P3) => "abastezca" ;
    VP (Pres Subj Pl P1) => "abastezcamos" ;
    VP (Pres Subj Pl P2) => "abastezcáis" ;
    VP (Pres Subj Pl P3) => "abastezcan" ;
    VP (Impf Ind Sg P1) => "abastecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abastecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abastecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "abastecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abastecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abastecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abasteciera" ; "abasteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abastecieras" ; "abastecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abasteciera" ; "abasteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abasteciéramos" ; "abasteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abastecierais" ; "abastecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abastecieran" ; "abasteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "abastecí" ;--# notpresent
    VP (Pret Sg P2) => "abasteciste" ;--# notpresent
    VP (Pret Sg P3) => "abasteció" ;--# notpresent
    VP (Pret Pl P1) => "abastecimos" ;--# notpresent
    VP (Pret Pl P2) => "abastecisteis" ;--# notpresent
    VP (Pret Pl P3) => "abastecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abasteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abastecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abastecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abasteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abasteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abastecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abasteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abastecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abasteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abasteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abasteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abastecieren" ;--# notpresent
    VP (Cond Sg P1) => "abastecería" ;--# notpresent
    VP (Cond Sg P2) => "abastecerías" ;--# notpresent
    VP (Cond Sg P3) => "abastecería" ;--# notpresent
    VP (Cond Pl P1) => "abasteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "abasteceríais" ;--# notpresent
    VP (Cond Pl P3) => "abastecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abastece" ;
    VP (Imp Sg P3) => "abastezca" ;
    VP (Imp Pl P1) => "abastezcamos" ;
    VP (Imp Pl P2) => "abasteced" ;
    VP (Imp Pl P3) => "abastezcan" ;
    VP (Pass Sg Masc) => "abastecido" ;
    VP (Pass Sg Fem) => "abastecida" ;
    VP (Pass Pl Masc) => "abastecidos" ;
    VP (Pass Pl Fem) => "abastecidas"
    }
  } ;

lin ablandecer_V = verboV 
 {s = table {
    VI Infn => "ablandecer" ;
    VI Ger => "ablandeciendo" ;
    VI Part => "ablandecido" ;
    VP (Pres Ind Sg P1) => "ablandezco" ;
    VP (Pres Ind Sg P2) => "ablandeces" ;
    VP (Pres Ind Sg P3) => "ablandece" ;
    VP (Pres Ind Pl P1) => "ablandecemos" ;
    VP (Pres Ind Pl P2) => "ablandecéis" ;
    VP (Pres Ind Pl P3) => "ablandecen" ;
    VP (Pres Subj Sg P1) => "ablandezca" ;
    VP (Pres Subj Sg P2) => "ablandezcas" ;
    VP (Pres Subj Sg P3) => "ablandezca" ;
    VP (Pres Subj Pl P1) => "ablandezcamos" ;
    VP (Pres Subj Pl P2) => "ablandezcáis" ;
    VP (Pres Subj Pl P3) => "ablandezcan" ;
    VP (Impf Ind Sg P1) => "ablandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ablandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ablandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ablandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ablandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ablandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ablandeciera" ; "ablandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ablandecieras" ; "ablandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ablandeciera" ; "ablandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ablandeciéramos" ; "ablandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ablandecierais" ; "ablandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ablandecieran" ; "ablandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ablandecí" ;--# notpresent
    VP (Pret Sg P2) => "ablandeciste" ;--# notpresent
    VP (Pret Sg P3) => "ablandeció" ;--# notpresent
    VP (Pret Pl P1) => "ablandecimos" ;--# notpresent
    VP (Pret Pl P2) => "ablandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ablandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ablandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ablandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ablandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ablandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ablandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ablandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ablandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ablandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ablandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ablandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ablandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ablandecieren" ;--# notpresent
    VP (Cond Sg P1) => "ablandecería" ;--# notpresent
    VP (Cond Sg P2) => "ablandecerías" ;--# notpresent
    VP (Cond Sg P3) => "ablandecería" ;--# notpresent
    VP (Cond Pl P1) => "ablandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ablandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "ablandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ablandece" ;
    VP (Imp Sg P3) => "ablandezca" ;
    VP (Imp Pl P1) => "ablandezcamos" ;
    VP (Imp Pl P2) => "ablandeced" ;
    VP (Imp Pl P3) => "ablandezcan" ;
    VP (Pass Sg Masc) => "ablandecido" ;
    VP (Pass Sg Fem) => "ablandecida" ;
    VP (Pass Pl Masc) => "ablandecidos" ;
    VP (Pass Pl Fem) => "ablandecidas"
    }
  } ;

lin aborrecer_V = verboV 
 {s = table {
    VI Infn => "aborrecer" ;
    VI Ger => "aborreciendo" ;
    VI Part => "aborrecido" ;
    VP (Pres Ind Sg P1) => "aborrezco" ;
    VP (Pres Ind Sg P2) => "aborreces" ;
    VP (Pres Ind Sg P3) => "aborrece" ;
    VP (Pres Ind Pl P1) => "aborrecemos" ;
    VP (Pres Ind Pl P2) => "aborrecéis" ;
    VP (Pres Ind Pl P3) => "aborrecen" ;
    VP (Pres Subj Sg P1) => "aborrezca" ;
    VP (Pres Subj Sg P2) => "aborrezcas" ;
    VP (Pres Subj Sg P3) => "aborrezca" ;
    VP (Pres Subj Pl P1) => "aborrezcamos" ;
    VP (Pres Subj Pl P2) => "aborrezcáis" ;
    VP (Pres Subj Pl P3) => "aborrezcan" ;
    VP (Impf Ind Sg P1) => "aborrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aborrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aborrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aborrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aborrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aborrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aborreciera" ; "aborreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aborrecieras" ; "aborrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aborreciera" ; "aborreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aborreciéramos" ; "aborreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aborrecierais" ; "aborrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aborrecieran" ; "aborreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "aborrecí" ;--# notpresent
    VP (Pret Sg P2) => "aborreciste" ;--# notpresent
    VP (Pret Sg P3) => "aborreció" ;--# notpresent
    VP (Pret Pl P1) => "aborrecimos" ;--# notpresent
    VP (Pret Pl P2) => "aborrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "aborrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aborreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aborrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aborrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aborreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aborreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aborrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aborreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aborrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aborreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aborreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aborreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aborrecieren" ;--# notpresent
    VP (Cond Sg P1) => "aborrecería" ;--# notpresent
    VP (Cond Sg P2) => "aborrecerías" ;--# notpresent
    VP (Cond Sg P3) => "aborrecería" ;--# notpresent
    VP (Cond Pl P1) => "aborreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "aborreceríais" ;--# notpresent
    VP (Cond Pl P3) => "aborrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aborrece" ;
    VP (Imp Sg P3) => "aborrezca" ;
    VP (Imp Pl P1) => "aborrezcamos" ;
    VP (Imp Pl P2) => "aborreced" ;
    VP (Imp Pl P3) => "aborrezcan" ;
    VP (Pass Sg Masc) => "aborrecido" ;
    VP (Pass Sg Fem) => "aborrecida" ;
    VP (Pass Pl Masc) => "aborrecidos" ;
    VP (Pass Pl Fem) => "aborrecidas"
    }
  } ;

lin abravecer_V = verboV 
 {s = table {
    VI Infn => "abravecer" ;
    VI Ger => "abraveciendo" ;
    VI Part => "abravecido" ;
    VP (Pres Ind Sg P1) => "abravezco" ;
    VP (Pres Ind Sg P2) => "abraveces" ;
    VP (Pres Ind Sg P3) => "abravece" ;
    VP (Pres Ind Pl P1) => "abravecemos" ;
    VP (Pres Ind Pl P2) => "abravecéis" ;
    VP (Pres Ind Pl P3) => "abravecen" ;
    VP (Pres Subj Sg P1) => "abravezca" ;
    VP (Pres Subj Sg P2) => "abravezcas" ;
    VP (Pres Subj Sg P3) => "abravezca" ;
    VP (Pres Subj Pl P1) => "abravezcamos" ;
    VP (Pres Subj Pl P2) => "abravezcáis" ;
    VP (Pres Subj Pl P3) => "abravezcan" ;
    VP (Impf Ind Sg P1) => "abravecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abravecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abravecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "abravecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abravecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abravecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abraveciera" ; "abraveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abravecieras" ; "abravecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abraveciera" ; "abraveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abraveciéramos" ; "abraveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abravecierais" ; "abravecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abravecieran" ; "abraveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "abravecí" ;--# notpresent
    VP (Pret Sg P2) => "abraveciste" ;--# notpresent
    VP (Pret Sg P3) => "abraveció" ;--# notpresent
    VP (Pret Pl P1) => "abravecimos" ;--# notpresent
    VP (Pret Pl P2) => "abravecisteis" ;--# notpresent
    VP (Pret Pl P3) => "abravecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abraveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abravecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abravecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abraveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abraveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abravecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abraveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abravecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abraveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abraveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abraveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abravecieren" ;--# notpresent
    VP (Cond Sg P1) => "abravecería" ;--# notpresent
    VP (Cond Sg P2) => "abravecerías" ;--# notpresent
    VP (Cond Sg P3) => "abravecería" ;--# notpresent
    VP (Cond Pl P1) => "abraveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "abraveceríais" ;--# notpresent
    VP (Cond Pl P3) => "abravecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abravece" ;
    VP (Imp Sg P3) => "abravezca" ;
    VP (Imp Pl P1) => "abravezcamos" ;
    VP (Imp Pl P2) => "abraveced" ;
    VP (Imp Pl P3) => "abravezcan" ;
    VP (Pass Sg Masc) => "abravecido" ;
    VP (Pass Sg Fem) => "abravecida" ;
    VP (Pass Pl Masc) => "abravecidos" ;
    VP (Pass Pl Fem) => "abravecidas"
    }
  } ;

lin acaecer_V = verboV 
 {s = table {
    VI Infn => "acaecer" ;
    VI Ger => "acaeciendo" ;
    VI Part => "acaecido" ;
    VP (Pres Ind Sg P1) => "acaezco" ;
    VP (Pres Ind Sg P2) => "acaeces" ;
    VP (Pres Ind Sg P3) => "acaece" ;
    VP (Pres Ind Pl P1) => "acaecemos" ;
    VP (Pres Ind Pl P2) => "acaecéis" ;
    VP (Pres Ind Pl P3) => "acaecen" ;
    VP (Pres Subj Sg P1) => "acaezca" ;
    VP (Pres Subj Sg P2) => "acaezcas" ;
    VP (Pres Subj Sg P3) => "acaezca" ;
    VP (Pres Subj Pl P1) => "acaezcamos" ;
    VP (Pres Subj Pl P2) => "acaezcáis" ;
    VP (Pres Subj Pl P3) => "acaezcan" ;
    VP (Impf Ind Sg P1) => "acaecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "acaecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "acaecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "acaecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acaecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acaecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acaeciera" ; "acaeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acaecieras" ; "acaecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acaeciera" ; "acaeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acaeciéramos" ; "acaeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acaecierais" ; "acaecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acaecieran" ; "acaeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "acaecí" ;--# notpresent
    VP (Pret Sg P2) => "acaeciste" ;--# notpresent
    VP (Pret Sg P3) => "acaeció" ;--# notpresent
    VP (Pret Pl P1) => "acaecimos" ;--# notpresent
    VP (Pret Pl P2) => "acaecisteis" ;--# notpresent
    VP (Pret Pl P3) => "acaecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acaeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acaecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acaecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "acaeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acaeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acaecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acaeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "acaecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "acaeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "acaeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acaeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acaecieren" ;--# notpresent
    VP (Cond Sg P1) => "acaecería" ;--# notpresent
    VP (Cond Sg P2) => "acaecerías" ;--# notpresent
    VP (Cond Sg P3) => "acaecería" ;--# notpresent
    VP (Cond Pl P1) => "acaeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "acaeceríais" ;--# notpresent
    VP (Cond Pl P3) => "acaecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acaece" ;
    VP (Imp Sg P3) => "acaezca" ;
    VP (Imp Pl P1) => "acaezcamos" ;
    VP (Imp Pl P2) => "acaeced" ;
    VP (Imp Pl P3) => "acaezcan" ;
    VP (Pass Sg Masc) => "acaecido" ;
    VP (Pass Sg Fem) => "acaecida" ;
    VP (Pass Pl Masc) => "acaecidos" ;
    VP (Pass Pl Fem) => "acaecidas"
    }
  } ;

lin aclarecer_V = verboV 
 {s = table {
    VI Infn => "aclarecer" ;
    VI Ger => "aclareciendo" ;
    VI Part => "aclarecido" ;
    VP (Pres Ind Sg P1) => "aclarezco" ;
    VP (Pres Ind Sg P2) => "aclareces" ;
    VP (Pres Ind Sg P3) => "aclarece" ;
    VP (Pres Ind Pl P1) => "aclarecemos" ;
    VP (Pres Ind Pl P2) => "aclarecéis" ;
    VP (Pres Ind Pl P3) => "aclarecen" ;
    VP (Pres Subj Sg P1) => "aclarezca" ;
    VP (Pres Subj Sg P2) => "aclarezcas" ;
    VP (Pres Subj Sg P3) => "aclarezca" ;
    VP (Pres Subj Pl P1) => "aclarezcamos" ;
    VP (Pres Subj Pl P2) => "aclarezcáis" ;
    VP (Pres Subj Pl P3) => "aclarezcan" ;
    VP (Impf Ind Sg P1) => "aclarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aclarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aclarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aclarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aclarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aclarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aclareciera" ; "aclareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aclarecieras" ; "aclarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aclareciera" ; "aclareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aclareciéramos" ; "aclareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aclarecierais" ; "aclarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aclarecieran" ; "aclareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "aclarecí" ;--# notpresent
    VP (Pret Sg P2) => "aclareciste" ;--# notpresent
    VP (Pret Sg P3) => "aclareció" ;--# notpresent
    VP (Pret Pl P1) => "aclarecimos" ;--# notpresent
    VP (Pret Pl P2) => "aclarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "aclarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aclareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aclarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aclarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aclareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aclareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aclarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aclareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aclarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aclareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aclareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aclareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aclarecieren" ;--# notpresent
    VP (Cond Sg P1) => "aclarecería" ;--# notpresent
    VP (Cond Sg P2) => "aclarecerías" ;--# notpresent
    VP (Cond Sg P3) => "aclarecería" ;--# notpresent
    VP (Cond Pl P1) => "aclareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "aclareceríais" ;--# notpresent
    VP (Cond Pl P3) => "aclarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aclarece" ;
    VP (Imp Sg P3) => "aclarezca" ;
    VP (Imp Pl P1) => "aclarezcamos" ;
    VP (Imp Pl P2) => "aclareced" ;
    VP (Imp Pl P3) => "aclarezcan" ;
    VP (Pass Sg Masc) => "aclarecido" ;
    VP (Pass Sg Fem) => "aclarecida" ;
    VP (Pass Pl Masc) => "aclarecidos" ;
    VP (Pass Pl Fem) => "aclarecidas"
    }
  } ;

lin acontecer_V = verboV 
 {s = table {
    VI Infn => "acontecer" ;
    VI Ger => "aconteciendo" ;
    VI Part => "acontecido" ;
    VP (Pres Ind Sg P1) => "acontezco" ;
    VP (Pres Ind Sg P2) => "aconteces" ;
    VP (Pres Ind Sg P3) => "acontece" ;
    VP (Pres Ind Pl P1) => "acontecemos" ;
    VP (Pres Ind Pl P2) => "acontecéis" ;
    VP (Pres Ind Pl P3) => "acontecen" ;
    VP (Pres Subj Sg P1) => "acontezca" ;
    VP (Pres Subj Sg P2) => "acontezcas" ;
    VP (Pres Subj Sg P3) => "acontezca" ;
    VP (Pres Subj Pl P1) => "acontezcamos" ;
    VP (Pres Subj Pl P2) => "acontezcáis" ;
    VP (Pres Subj Pl P3) => "acontezcan" ;
    VP (Impf Ind Sg P1) => "acontecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "acontecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "acontecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "acontecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acontecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acontecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aconteciera" ; "aconteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acontecieras" ; "acontecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aconteciera" ; "aconteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aconteciéramos" ; "aconteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acontecierais" ; "acontecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acontecieran" ; "aconteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "acontecí" ;--# notpresent
    VP (Pret Sg P2) => "aconteciste" ;--# notpresent
    VP (Pret Sg P3) => "aconteció" ;--# notpresent
    VP (Pret Pl P1) => "acontecimos" ;--# notpresent
    VP (Pret Pl P2) => "acontecisteis" ;--# notpresent
    VP (Pret Pl P3) => "acontecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aconteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acontecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acontecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aconteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aconteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acontecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aconteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "acontecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aconteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aconteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aconteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acontecieren" ;--# notpresent
    VP (Cond Sg P1) => "acontecería" ;--# notpresent
    VP (Cond Sg P2) => "acontecerías" ;--# notpresent
    VP (Cond Sg P3) => "acontecería" ;--# notpresent
    VP (Cond Pl P1) => "aconteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "aconteceríais" ;--# notpresent
    VP (Cond Pl P3) => "acontecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acontece" ;
    VP (Imp Sg P3) => "acontezca" ;
    VP (Imp Pl P1) => "acontezcamos" ;
    VP (Imp Pl P2) => "aconteced" ;
    VP (Imp Pl P3) => "acontezcan" ;
    VP (Pass Sg Masc) => "acontecido" ;
    VP (Pass Sg Fem) => "acontecida" ;
    VP (Pass Pl Masc) => "acontecidos" ;
    VP (Pass Pl Fem) => "acontecidas"
    }
  } ;

lin acrecer_V = verboV 
 {s = table {
    VI Infn => "acrecer" ;
    VI Ger => "acreciendo" ;
    VI Part => "acrecido" ;
    VP (Pres Ind Sg P1) => "acrezco" ;
    VP (Pres Ind Sg P2) => "acreces" ;
    VP (Pres Ind Sg P3) => "acrece" ;
    VP (Pres Ind Pl P1) => "acrecemos" ;
    VP (Pres Ind Pl P2) => "acrecéis" ;
    VP (Pres Ind Pl P3) => "acrecen" ;
    VP (Pres Subj Sg P1) => "acrezca" ;
    VP (Pres Subj Sg P2) => "acrezcas" ;
    VP (Pres Subj Sg P3) => "acrezca" ;
    VP (Pres Subj Pl P1) => "acrezcamos" ;
    VP (Pres Subj Pl P2) => "acrezcáis" ;
    VP (Pres Subj Pl P3) => "acrezcan" ;
    VP (Impf Ind Sg P1) => "acrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "acrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "acrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "acrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acreciera" ; "acreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acrecieras" ; "acrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acreciera" ; "acreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acreciéramos" ; "acreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acrecierais" ; "acrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acrecieran" ; "acreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "acrecí" ;--# notpresent
    VP (Pret Sg P2) => "acreciste" ;--# notpresent
    VP (Pret Sg P3) => "acreció" ;--# notpresent
    VP (Pret Pl P1) => "acrecimos" ;--# notpresent
    VP (Pret Pl P2) => "acrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "acrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "acreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "acrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "acreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "acreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acrecieren" ;--# notpresent
    VP (Cond Sg P1) => "acrecería" ;--# notpresent
    VP (Cond Sg P2) => "acrecerías" ;--# notpresent
    VP (Cond Sg P3) => "acrecería" ;--# notpresent
    VP (Cond Pl P1) => "acreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "acreceríais" ;--# notpresent
    VP (Cond Pl P3) => "acrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acrece" ;
    VP (Imp Sg P3) => "acrezca" ;
    VP (Imp Pl P1) => "acrezcamos" ;
    VP (Imp Pl P2) => "acreced" ;
    VP (Imp Pl P3) => "acrezcan" ;
    VP (Pass Sg Masc) => "acrecido" ;
    VP (Pass Sg Fem) => "acrecida" ;
    VP (Pass Pl Masc) => "acrecidos" ;
    VP (Pass Pl Fem) => "acrecidas"
    }
  } ;

lin adolecer_V = verboV 
 {s = table {
    VI Infn => "adolecer" ;
    VI Ger => "adoleciendo" ;
    VI Part => "adolecido" ;
    VP (Pres Ind Sg P1) => "adolezco" ;
    VP (Pres Ind Sg P2) => "adoleces" ;
    VP (Pres Ind Sg P3) => "adolece" ;
    VP (Pres Ind Pl P1) => "adolecemos" ;
    VP (Pres Ind Pl P2) => "adolecéis" ;
    VP (Pres Ind Pl P3) => "adolecen" ;
    VP (Pres Subj Sg P1) => "adolezca" ;
    VP (Pres Subj Sg P2) => "adolezcas" ;
    VP (Pres Subj Sg P3) => "adolezca" ;
    VP (Pres Subj Pl P1) => "adolezcamos" ;
    VP (Pres Subj Pl P2) => "adolezcáis" ;
    VP (Pres Subj Pl P3) => "adolezcan" ;
    VP (Impf Ind Sg P1) => "adolecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "adolecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adolecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "adolecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adolecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adolecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adoleciera" ; "adoleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adolecieras" ; "adolecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adoleciera" ; "adoleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adoleciéramos" ; "adoleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adolecierais" ; "adolecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adolecieran" ; "adoleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "adolecí" ;--# notpresent
    VP (Pret Sg P2) => "adoleciste" ;--# notpresent
    VP (Pret Sg P3) => "adoleció" ;--# notpresent
    VP (Pret Pl P1) => "adolecimos" ;--# notpresent
    VP (Pret Pl P2) => "adolecisteis" ;--# notpresent
    VP (Pret Pl P3) => "adolecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adoleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adolecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adolecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adoleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adoleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adolecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adoleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adolecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adoleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adoleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adoleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adolecieren" ;--# notpresent
    VP (Cond Sg P1) => "adolecería" ;--# notpresent
    VP (Cond Sg P2) => "adolecerías" ;--# notpresent
    VP (Cond Sg P3) => "adolecería" ;--# notpresent
    VP (Cond Pl P1) => "adoleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "adoleceríais" ;--# notpresent
    VP (Cond Pl P3) => "adolecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adolece" ;
    VP (Imp Sg P3) => "adolezca" ;
    VP (Imp Pl P1) => "adolezcamos" ;
    VP (Imp Pl P2) => "adoleced" ;
    VP (Imp Pl P3) => "adolezcan" ;
    VP (Pass Sg Masc) => "adolecido" ;
    VP (Pass Sg Fem) => "adolecida" ;
    VP (Pass Pl Masc) => "adolecidos" ;
    VP (Pass Pl Fem) => "adolecidas"
    }
  } ;

lin adormecer_V = verboV 
 {s = table {
    VI Infn => "adormecer" ;
    VI Ger => "adormeciendo" ;
    VI Part => "adormecido" ;
    VP (Pres Ind Sg P1) => "adormezco" ;
    VP (Pres Ind Sg P2) => "adormeces" ;
    VP (Pres Ind Sg P3) => "adormece" ;
    VP (Pres Ind Pl P1) => "adormecemos" ;
    VP (Pres Ind Pl P2) => "adormecéis" ;
    VP (Pres Ind Pl P3) => "adormecen" ;
    VP (Pres Subj Sg P1) => "adormezca" ;
    VP (Pres Subj Sg P2) => "adormezcas" ;
    VP (Pres Subj Sg P3) => "adormezca" ;
    VP (Pres Subj Pl P1) => "adormezcamos" ;
    VP (Pres Subj Pl P2) => "adormezcáis" ;
    VP (Pres Subj Pl P3) => "adormezcan" ;
    VP (Impf Ind Sg P1) => "adormecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "adormecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adormecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "adormecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adormecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adormecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adormeciera" ; "adormeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adormecieras" ; "adormecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adormeciera" ; "adormeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adormeciéramos" ; "adormeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adormecierais" ; "adormecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adormecieran" ; "adormeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "adormecí" ;--# notpresent
    VP (Pret Sg P2) => "adormeciste" ;--# notpresent
    VP (Pret Sg P3) => "adormeció" ;--# notpresent
    VP (Pret Pl P1) => "adormecimos" ;--# notpresent
    VP (Pret Pl P2) => "adormecisteis" ;--# notpresent
    VP (Pret Pl P3) => "adormecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adormeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adormecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adormecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adormeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adormeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adormecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adormeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adormecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adormeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adormeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adormeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adormecieren" ;--# notpresent
    VP (Cond Sg P1) => "adormecería" ;--# notpresent
    VP (Cond Sg P2) => "adormecerías" ;--# notpresent
    VP (Cond Sg P3) => "adormecería" ;--# notpresent
    VP (Cond Pl P1) => "adormeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "adormeceríais" ;--# notpresent
    VP (Cond Pl P3) => "adormecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adormece" ;
    VP (Imp Sg P3) => "adormezca" ;
    VP (Imp Pl P1) => "adormezcamos" ;
    VP (Imp Pl P2) => "adormeced" ;
    VP (Imp Pl P3) => "adormezcan" ;
    VP (Pass Sg Masc) => "adormecido" ;
    VP (Pass Sg Fem) => "adormecida" ;
    VP (Pass Pl Masc) => "adormecidos" ;
    VP (Pass Pl Fem) => "adormecidas"
    }
  } ;

lin agradecer_V = verboV 
 {s = table {
    VI Infn => "agradecer" ;
    VI Ger => "agradeciendo" ;
    VI Part => "agradecido" ;
    VP (Pres Ind Sg P1) => "agradezco" ;
    VP (Pres Ind Sg P2) => "agradeces" ;
    VP (Pres Ind Sg P3) => "agradece" ;
    VP (Pres Ind Pl P1) => "agradecemos" ;
    VP (Pres Ind Pl P2) => "agradecéis" ;
    VP (Pres Ind Pl P3) => "agradecen" ;
    VP (Pres Subj Sg P1) => "agradezca" ;
    VP (Pres Subj Sg P2) => "agradezcas" ;
    VP (Pres Subj Sg P3) => "agradezca" ;
    VP (Pres Subj Pl P1) => "agradezcamos" ;
    VP (Pres Subj Pl P2) => "agradezcáis" ;
    VP (Pres Subj Pl P3) => "agradezcan" ;
    VP (Impf Ind Sg P1) => "agradecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "agradecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "agradecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "agradecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "agradecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "agradecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"agradeciera" ; "agradeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"agradecieras" ; "agradecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"agradeciera" ; "agradeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"agradeciéramos" ; "agradeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"agradecierais" ; "agradecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"agradecieran" ; "agradeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "agradecí" ;--# notpresent
    VP (Pret Sg P2) => "agradeciste" ;--# notpresent
    VP (Pret Sg P3) => "agradeció" ;--# notpresent
    VP (Pret Pl P1) => "agradecimos" ;--# notpresent
    VP (Pret Pl P2) => "agradecisteis" ;--# notpresent
    VP (Pret Pl P3) => "agradecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "agradeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "agradecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "agradecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "agradeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "agradeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "agradecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "agradeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "agradecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "agradeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "agradeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "agradeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "agradecieren" ;--# notpresent
    VP (Cond Sg P1) => "agradecería" ;--# notpresent
    VP (Cond Sg P2) => "agradecerías" ;--# notpresent
    VP (Cond Sg P3) => "agradecería" ;--# notpresent
    VP (Cond Pl P1) => "agradeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "agradeceríais" ;--# notpresent
    VP (Cond Pl P3) => "agradecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "agradece" ;
    VP (Imp Sg P3) => "agradezca" ;
    VP (Imp Pl P1) => "agradezcamos" ;
    VP (Imp Pl P2) => "agradeced" ;
    VP (Imp Pl P3) => "agradezcan" ;
    VP (Pass Sg Masc) => "agradecido" ;
    VP (Pass Sg Fem) => "agradecida" ;
    VP (Pass Pl Masc) => "agradecidos" ;
    VP (Pass Pl Fem) => "agradecidas"
    }
  } ;

lin altivecer_V = verboV 
 {s = table {
    VI Infn => "altivecer" ;
    VI Ger => "altiveciendo" ;
    VI Part => "altivecido" ;
    VP (Pres Ind Sg P1) => "altivezco" ;
    VP (Pres Ind Sg P2) => "altiveces" ;
    VP (Pres Ind Sg P3) => "altivece" ;
    VP (Pres Ind Pl P1) => "altivecemos" ;
    VP (Pres Ind Pl P2) => "altivecéis" ;
    VP (Pres Ind Pl P3) => "altivecen" ;
    VP (Pres Subj Sg P1) => "altivezca" ;
    VP (Pres Subj Sg P2) => "altivezcas" ;
    VP (Pres Subj Sg P3) => "altivezca" ;
    VP (Pres Subj Pl P1) => "altivezcamos" ;
    VP (Pres Subj Pl P2) => "altivezcáis" ;
    VP (Pres Subj Pl P3) => "altivezcan" ;
    VP (Impf Ind Sg P1) => "altivecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "altivecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "altivecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "altivecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "altivecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "altivecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"altiveciera" ; "altiveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"altivecieras" ; "altivecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"altiveciera" ; "altiveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"altiveciéramos" ; "altiveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"altivecierais" ; "altivecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"altivecieran" ; "altiveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "altivecí" ;--# notpresent
    VP (Pret Sg P2) => "altiveciste" ;--# notpresent
    VP (Pret Sg P3) => "altiveció" ;--# notpresent
    VP (Pret Pl P1) => "altivecimos" ;--# notpresent
    VP (Pret Pl P2) => "altivecisteis" ;--# notpresent
    VP (Pret Pl P3) => "altivecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "altiveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "altivecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "altivecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "altiveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "altiveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "altivecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "altiveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "altivecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "altiveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "altiveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "altiveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "altivecieren" ;--# notpresent
    VP (Cond Sg P1) => "altivecería" ;--# notpresent
    VP (Cond Sg P2) => "altivecerías" ;--# notpresent
    VP (Cond Sg P3) => "altivecería" ;--# notpresent
    VP (Cond Pl P1) => "altiveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "altiveceríais" ;--# notpresent
    VP (Cond Pl P3) => "altivecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "altivece" ;
    VP (Imp Sg P3) => "altivezca" ;
    VP (Imp Pl P1) => "altivezcamos" ;
    VP (Imp Pl P2) => "altiveced" ;
    VP (Imp Pl P3) => "altivezcan" ;
    VP (Pass Sg Masc) => "altivecido" ;
    VP (Pass Sg Fem) => "altivecida" ;
    VP (Pass Pl Masc) => "altivecidos" ;
    VP (Pass Pl Fem) => "altivecidas"
    }
  } ;

lin amanecer_V = verboV 
 {s = table {
    VI Infn => "amanecer" ;
    VI Ger => "amaneciendo" ;
    VI Part => "amanecido" ;
    VP (Pres Ind Sg P1) => "amanezco" ;
    VP (Pres Ind Sg P2) => "amaneces" ;
    VP (Pres Ind Sg P3) => "amanece" ;
    VP (Pres Ind Pl P1) => "amanecemos" ;
    VP (Pres Ind Pl P2) => "amanecéis" ;
    VP (Pres Ind Pl P3) => "amanecen" ;
    VP (Pres Subj Sg P1) => "amanezca" ;
    VP (Pres Subj Sg P2) => "amanezcas" ;
    VP (Pres Subj Sg P3) => "amanezca" ;
    VP (Pres Subj Pl P1) => "amanezcamos" ;
    VP (Pres Subj Pl P2) => "amanezcáis" ;
    VP (Pres Subj Pl P3) => "amanezcan" ;
    VP (Impf Ind Sg P1) => "amanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amaneciera" ; "amaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amanecieras" ; "amanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amaneciera" ; "amaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amaneciéramos" ; "amaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amanecierais" ; "amanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amanecieran" ; "amaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "amanecí" ;--# notpresent
    VP (Pret Sg P2) => "amaneciste" ;--# notpresent
    VP (Pret Sg P3) => "amaneció" ;--# notpresent
    VP (Pret Pl P1) => "amanecimos" ;--# notpresent
    VP (Pret Pl P2) => "amanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "amanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amanecieren" ;--# notpresent
    VP (Cond Sg P1) => "amanecería" ;--# notpresent
    VP (Cond Sg P2) => "amanecerías" ;--# notpresent
    VP (Cond Sg P3) => "amanecería" ;--# notpresent
    VP (Cond Pl P1) => "amaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "amaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "amanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amanece" ;
    VP (Imp Sg P3) => "amanezca" ;
    VP (Imp Pl P1) => "amanezcamos" ;
    VP (Imp Pl P2) => "amaneced" ;
    VP (Imp Pl P3) => "amanezcan" ;
    VP (Pass Sg Masc) => "amanecido" ;
    VP (Pass Sg Fem) => "amanecida" ;
    VP (Pass Pl Masc) => "amanecidos" ;
    VP (Pass Pl Fem) => "amanecidas"
    }
  } ;

lin amarecer_V = verboV 
 {s = table {
    VI Infn => "amarecer" ;
    VI Ger => "amareciendo" ;
    VI Part => "amarecido" ;
    VP (Pres Ind Sg P1) => "amarezco" ;
    VP (Pres Ind Sg P2) => "amareces" ;
    VP (Pres Ind Sg P3) => "amarece" ;
    VP (Pres Ind Pl P1) => "amarecemos" ;
    VP (Pres Ind Pl P2) => "amarecéis" ;
    VP (Pres Ind Pl P3) => "amarecen" ;
    VP (Pres Subj Sg P1) => "amarezca" ;
    VP (Pres Subj Sg P2) => "amarezcas" ;
    VP (Pres Subj Sg P3) => "amarezca" ;
    VP (Pres Subj Pl P1) => "amarezcamos" ;
    VP (Pres Subj Pl P2) => "amarezcáis" ;
    VP (Pres Subj Pl P3) => "amarezcan" ;
    VP (Impf Ind Sg P1) => "amarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amareciera" ; "amareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amarecieras" ; "amarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amareciera" ; "amareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amareciéramos" ; "amareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amarecierais" ; "amarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amarecieran" ; "amareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "amarecí" ;--# notpresent
    VP (Pret Sg P2) => "amareciste" ;--# notpresent
    VP (Pret Sg P3) => "amareció" ;--# notpresent
    VP (Pret Pl P1) => "amarecimos" ;--# notpresent
    VP (Pret Pl P2) => "amarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "amarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amarecieren" ;--# notpresent
    VP (Cond Sg P1) => "amarecería" ;--# notpresent
    VP (Cond Sg P2) => "amarecerías" ;--# notpresent
    VP (Cond Sg P3) => "amarecería" ;--# notpresent
    VP (Cond Pl P1) => "amareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "amareceríais" ;--# notpresent
    VP (Cond Pl P3) => "amarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amarece" ;
    VP (Imp Sg P3) => "amarezca" ;
    VP (Imp Pl P1) => "amarezcamos" ;
    VP (Imp Pl P2) => "amareced" ;
    VP (Imp Pl P3) => "amarezcan" ;
    VP (Pass Sg Masc) => "amarecido" ;
    VP (Pass Sg Fem) => "amarecida" ;
    VP (Pass Pl Masc) => "amarecidos" ;
    VP (Pass Pl Fem) => "amarecidas"
    }
  } ;

lin amarillecer_V = verboV 
 {s = table {
    VI Infn => "amarillecer" ;
    VI Ger => "amarilleciendo" ;
    VI Part => "amarillecido" ;
    VP (Pres Ind Sg P1) => "amarillezco" ;
    VP (Pres Ind Sg P2) => "amarilleces" ;
    VP (Pres Ind Sg P3) => "amarillece" ;
    VP (Pres Ind Pl P1) => "amarillecemos" ;
    VP (Pres Ind Pl P2) => "amarillecéis" ;
    VP (Pres Ind Pl P3) => "amarillecen" ;
    VP (Pres Subj Sg P1) => "amarillezca" ;
    VP (Pres Subj Sg P2) => "amarillezcas" ;
    VP (Pres Subj Sg P3) => "amarillezca" ;
    VP (Pres Subj Pl P1) => "amarillezcamos" ;
    VP (Pres Subj Pl P2) => "amarillezcáis" ;
    VP (Pres Subj Pl P3) => "amarillezcan" ;
    VP (Impf Ind Sg P1) => "amarillecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amarillecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amarillecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amarillecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amarillecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amarillecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amarilleciera" ; "amarilleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amarillecieras" ; "amarillecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amarilleciera" ; "amarilleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amarilleciéramos" ; "amarilleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amarillecierais" ; "amarillecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amarillecieran" ; "amarilleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "amarillecí" ;--# notpresent
    VP (Pret Sg P2) => "amarilleciste" ;--# notpresent
    VP (Pret Sg P3) => "amarilleció" ;--# notpresent
    VP (Pret Pl P1) => "amarillecimos" ;--# notpresent
    VP (Pret Pl P2) => "amarillecisteis" ;--# notpresent
    VP (Pret Pl P3) => "amarillecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amarilleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amarillecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amarillecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amarilleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amarilleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amarillecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amarilleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amarillecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amarilleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amarilleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amarilleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amarillecieren" ;--# notpresent
    VP (Cond Sg P1) => "amarillecería" ;--# notpresent
    VP (Cond Sg P2) => "amarillecerías" ;--# notpresent
    VP (Cond Sg P3) => "amarillecería" ;--# notpresent
    VP (Cond Pl P1) => "amarilleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "amarilleceríais" ;--# notpresent
    VP (Cond Pl P3) => "amarillecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amarillece" ;
    VP (Imp Sg P3) => "amarillezca" ;
    VP (Imp Pl P1) => "amarillezcamos" ;
    VP (Imp Pl P2) => "amarilleced" ;
    VP (Imp Pl P3) => "amarillezcan" ;
    VP (Pass Sg Masc) => "amarillecido" ;
    VP (Pass Sg Fem) => "amarillecida" ;
    VP (Pass Pl Masc) => "amarillecidos" ;
    VP (Pass Pl Fem) => "amarillecidas"
    }
  } ;

lin amohecer_V = verboV 
 {s = table {
    VI Infn => "amohecer" ;
    VI Ger => "amoheciendo" ;
    VI Part => "amohecido" ;
    VP (Pres Ind Sg P1) => "amohezco" ;
    VP (Pres Ind Sg P2) => "amoheces" ;
    VP (Pres Ind Sg P3) => "amohece" ;
    VP (Pres Ind Pl P1) => "amohecemos" ;
    VP (Pres Ind Pl P2) => "amohecéis" ;
    VP (Pres Ind Pl P3) => "amohecen" ;
    VP (Pres Subj Sg P1) => "amohezca" ;
    VP (Pres Subj Sg P2) => "amohezcas" ;
    VP (Pres Subj Sg P3) => "amohezca" ;
    VP (Pres Subj Pl P1) => "amohezcamos" ;
    VP (Pres Subj Pl P2) => "amohezcáis" ;
    VP (Pres Subj Pl P3) => "amohezcan" ;
    VP (Impf Ind Sg P1) => "amohecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amohecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amohecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amohecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amohecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amohecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amoheciera" ; "amoheciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amohecieras" ; "amohecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amoheciera" ; "amoheciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amoheciéramos" ; "amoheciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amohecierais" ; "amohecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amohecieran" ; "amoheciesen"} ;--# notpresent
    VP (Pret Sg P1) => "amohecí" ;--# notpresent
    VP (Pret Sg P2) => "amoheciste" ;--# notpresent
    VP (Pret Sg P3) => "amoheció" ;--# notpresent
    VP (Pret Pl P1) => "amohecimos" ;--# notpresent
    VP (Pret Pl P2) => "amohecisteis" ;--# notpresent
    VP (Pret Pl P3) => "amohecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amoheceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amohecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amohecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amoheceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amoheceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amohecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amoheciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amohecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amoheciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amoheciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amoheciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amohecieren" ;--# notpresent
    VP (Cond Sg P1) => "amohecería" ;--# notpresent
    VP (Cond Sg P2) => "amohecerías" ;--# notpresent
    VP (Cond Sg P3) => "amohecería" ;--# notpresent
    VP (Cond Pl P1) => "amoheceríamos" ;--# notpresent
    VP (Cond Pl P2) => "amoheceríais" ;--# notpresent
    VP (Cond Pl P3) => "amohecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amohece" ;
    VP (Imp Sg P3) => "amohezca" ;
    VP (Imp Pl P1) => "amohezcamos" ;
    VP (Imp Pl P2) => "amoheced" ;
    VP (Imp Pl P3) => "amohezcan" ;
    VP (Pass Sg Masc) => "amohecido" ;
    VP (Pass Sg Fem) => "amohecida" ;
    VP (Pass Pl Masc) => "amohecidos" ;
    VP (Pass Pl Fem) => "amohecidas"
    }
  } ;

lin amorecer_V = verboV 
 {s = table {
    VI Infn => "amorecer" ;
    VI Ger => "amoreciendo" ;
    VI Part => "amorecido" ;
    VP (Pres Ind Sg P1) => "amorezco" ;
    VP (Pres Ind Sg P2) => "amoreces" ;
    VP (Pres Ind Sg P3) => "amorece" ;
    VP (Pres Ind Pl P1) => "amorecemos" ;
    VP (Pres Ind Pl P2) => "amorecéis" ;
    VP (Pres Ind Pl P3) => "amorecen" ;
    VP (Pres Subj Sg P1) => "amorezca" ;
    VP (Pres Subj Sg P2) => "amorezcas" ;
    VP (Pres Subj Sg P3) => "amorezca" ;
    VP (Pres Subj Pl P1) => "amorezcamos" ;
    VP (Pres Subj Pl P2) => "amorezcáis" ;
    VP (Pres Subj Pl P3) => "amorezcan" ;
    VP (Impf Ind Sg P1) => "amorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amoreciera" ; "amoreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amorecieras" ; "amorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amoreciera" ; "amoreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amoreciéramos" ; "amoreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amorecierais" ; "amorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amorecieran" ; "amoreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "amorecí" ;--# notpresent
    VP (Pret Sg P2) => "amoreciste" ;--# notpresent
    VP (Pret Sg P3) => "amoreció" ;--# notpresent
    VP (Pret Pl P1) => "amorecimos" ;--# notpresent
    VP (Pret Pl P2) => "amorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "amorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amoreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amoreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amoreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amoreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amoreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amoreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amoreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amorecieren" ;--# notpresent
    VP (Cond Sg P1) => "amorecería" ;--# notpresent
    VP (Cond Sg P2) => "amorecerías" ;--# notpresent
    VP (Cond Sg P3) => "amorecería" ;--# notpresent
    VP (Cond Pl P1) => "amoreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "amoreceríais" ;--# notpresent
    VP (Cond Pl P3) => "amorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amorece" ;
    VP (Imp Sg P3) => "amorezca" ;
    VP (Imp Pl P1) => "amorezcamos" ;
    VP (Imp Pl P2) => "amoreced" ;
    VP (Imp Pl P3) => "amorezcan" ;
    VP (Pass Sg Masc) => "amorecido" ;
    VP (Pass Sg Fem) => "amorecida" ;
    VP (Pass Pl Masc) => "amorecidos" ;
    VP (Pass Pl Fem) => "amorecidas"
    }
  } ;

lin amortecer_V = verboV 
 {s = table {
    VI Infn => "amortecer" ;
    VI Ger => "amorteciendo" ;
    VI Part => "amortecido" ;
    VP (Pres Ind Sg P1) => "amortezco" ;
    VP (Pres Ind Sg P2) => "amorteces" ;
    VP (Pres Ind Sg P3) => "amortece" ;
    VP (Pres Ind Pl P1) => "amortecemos" ;
    VP (Pres Ind Pl P2) => "amortecéis" ;
    VP (Pres Ind Pl P3) => "amortecen" ;
    VP (Pres Subj Sg P1) => "amortezca" ;
    VP (Pres Subj Sg P2) => "amortezcas" ;
    VP (Pres Subj Sg P3) => "amortezca" ;
    VP (Pres Subj Pl P1) => "amortezcamos" ;
    VP (Pres Subj Pl P2) => "amortezcáis" ;
    VP (Pres Subj Pl P3) => "amortezcan" ;
    VP (Impf Ind Sg P1) => "amortecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "amortecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "amortecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "amortecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amortecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amortecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amorteciera" ; "amorteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amortecieras" ; "amortecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amorteciera" ; "amorteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amorteciéramos" ; "amorteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amortecierais" ; "amortecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amortecieran" ; "amorteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "amortecí" ;--# notpresent
    VP (Pret Sg P2) => "amorteciste" ;--# notpresent
    VP (Pret Sg P3) => "amorteció" ;--# notpresent
    VP (Pret Pl P1) => "amortecimos" ;--# notpresent
    VP (Pret Pl P2) => "amortecisteis" ;--# notpresent
    VP (Pret Pl P3) => "amortecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amorteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amortecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amortecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "amorteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amorteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amortecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amorteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "amortecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "amorteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "amorteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amorteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amortecieren" ;--# notpresent
    VP (Cond Sg P1) => "amortecería" ;--# notpresent
    VP (Cond Sg P2) => "amortecerías" ;--# notpresent
    VP (Cond Sg P3) => "amortecería" ;--# notpresent
    VP (Cond Pl P1) => "amorteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "amorteceríais" ;--# notpresent
    VP (Cond Pl P3) => "amortecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amortece" ;
    VP (Imp Sg P3) => "amortezca" ;
    VP (Imp Pl P1) => "amortezcamos" ;
    VP (Imp Pl P2) => "amorteced" ;
    VP (Imp Pl P3) => "amortezcan" ;
    VP (Pass Sg Masc) => "amortecido" ;
    VP (Pass Sg Fem) => "amortecida" ;
    VP (Pass Pl Masc) => "amortecidos" ;
    VP (Pass Pl Fem) => "amortecidas"
    }
  } ;

lin anochecer_V = verboV 
 {s = table {
    VI Infn => "anochecer" ;
    VI Ger => "anocheciendo" ;
    VI Part => "anochecido" ;
    VP (Pres Ind Sg P1) => "anochezco" ;
    VP (Pres Ind Sg P2) => "anocheces" ;
    VP (Pres Ind Sg P3) => "anochece" ;
    VP (Pres Ind Pl P1) => "anochecemos" ;
    VP (Pres Ind Pl P2) => "anochecéis" ;
    VP (Pres Ind Pl P3) => "anochecen" ;
    VP (Pres Subj Sg P1) => "anochezca" ;
    VP (Pres Subj Sg P2) => "anochezcas" ;
    VP (Pres Subj Sg P3) => "anochezca" ;
    VP (Pres Subj Pl P1) => "anochezcamos" ;
    VP (Pres Subj Pl P2) => "anochezcáis" ;
    VP (Pres Subj Pl P3) => "anochezcan" ;
    VP (Impf Ind Sg P1) => "anochecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "anochecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "anochecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "anochecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "anochecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "anochecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"anocheciera" ; "anocheciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"anochecieras" ; "anochecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"anocheciera" ; "anocheciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"anocheciéramos" ; "anocheciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"anochecierais" ; "anochecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"anochecieran" ; "anocheciesen"} ;--# notpresent
    VP (Pret Sg P1) => "anochecí" ;--# notpresent
    VP (Pret Sg P2) => "anocheciste" ;--# notpresent
    VP (Pret Sg P3) => "anocheció" ;--# notpresent
    VP (Pret Pl P1) => "anochecimos" ;--# notpresent
    VP (Pret Pl P2) => "anochecisteis" ;--# notpresent
    VP (Pret Pl P3) => "anochecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "anocheceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "anochecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "anochecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "anocheceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "anocheceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "anochecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "anocheciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "anochecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "anocheciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "anocheciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "anocheciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "anochecieren" ;--# notpresent
    VP (Cond Sg P1) => "anochecería" ;--# notpresent
    VP (Cond Sg P2) => "anochecerías" ;--# notpresent
    VP (Cond Sg P3) => "anochecería" ;--# notpresent
    VP (Cond Pl P1) => "anocheceríamos" ;--# notpresent
    VP (Cond Pl P2) => "anocheceríais" ;--# notpresent
    VP (Cond Pl P3) => "anochecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "anochece" ;
    VP (Imp Sg P3) => "anochezca" ;
    VP (Imp Pl P1) => "anochezcamos" ;
    VP (Imp Pl P2) => "anocheced" ;
    VP (Imp Pl P3) => "anochezcan" ;
    VP (Pass Sg Masc) => "anochecido" ;
    VP (Pass Sg Fem) => "anochecida" ;
    VP (Pass Pl Masc) => "anochecidos" ;
    VP (Pass Pl Fem) => "anochecidas"
    }
  } ;

lin aparecer_V = verboV 
 {s = table {
    VI Infn => "aparecer" ;
    VI Ger => "apareciendo" ;
    VI Part => "aparecido" ;
    VP (Pres Ind Sg P1) => "aparezco" ;
    VP (Pres Ind Sg P2) => "apareces" ;
    VP (Pres Ind Sg P3) => "aparece" ;
    VP (Pres Ind Pl P1) => "aparecemos" ;
    VP (Pres Ind Pl P2) => "aparecéis" ;
    VP (Pres Ind Pl P3) => "aparecen" ;
    VP (Pres Subj Sg P1) => "aparezca" ;
    VP (Pres Subj Sg P2) => "aparezcas" ;
    VP (Pres Subj Sg P3) => "aparezca" ;
    VP (Pres Subj Pl P1) => "aparezcamos" ;
    VP (Pres Subj Pl P2) => "aparezcáis" ;
    VP (Pres Subj Pl P3) => "aparezcan" ;
    VP (Impf Ind Sg P1) => "aparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apareciera" ; "apareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aparecieras" ; "aparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apareciera" ; "apareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apareciéramos" ; "apareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aparecierais" ; "aparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aparecieran" ; "apareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "aparecí" ;--# notpresent
    VP (Pret Sg P2) => "apareciste" ;--# notpresent
    VP (Pret Sg P3) => "apareció" ;--# notpresent
    VP (Pret Pl P1) => "aparecimos" ;--# notpresent
    VP (Pret Pl P2) => "aparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "aparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "apareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "apareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "apareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aparecieren" ;--# notpresent
    VP (Cond Sg P1) => "aparecería" ;--# notpresent
    VP (Cond Sg P2) => "aparecerías" ;--# notpresent
    VP (Cond Sg P3) => "aparecería" ;--# notpresent
    VP (Cond Pl P1) => "apareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "apareceríais" ;--# notpresent
    VP (Cond Pl P3) => "aparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aparece" ;
    VP (Imp Sg P3) => "aparezca" ;
    VP (Imp Pl P1) => "aparezcamos" ;
    VP (Imp Pl P2) => "apareced" ;
    VP (Imp Pl P3) => "aparezcan" ;
    VP (Pass Sg Masc) => "aparecido" ;
    VP (Pass Sg Fem) => "aparecida" ;
    VP (Pass Pl Masc) => "aparecidos" ;
    VP (Pass Pl Fem) => "aparecidas"
    }
  } ;

lin apetecer_V = verboV 
 {s = table {
    VI Infn => "apetecer" ;
    VI Ger => "apeteciendo" ;
    VI Part => "apetecido" ;
    VP (Pres Ind Sg P1) => "apetezco" ;
    VP (Pres Ind Sg P2) => "apeteces" ;
    VP (Pres Ind Sg P3) => "apetece" ;
    VP (Pres Ind Pl P1) => "apetecemos" ;
    VP (Pres Ind Pl P2) => "apetecéis" ;
    VP (Pres Ind Pl P3) => "apetecen" ;
    VP (Pres Subj Sg P1) => "apetezca" ;
    VP (Pres Subj Sg P2) => "apetezcas" ;
    VP (Pres Subj Sg P3) => "apetezca" ;
    VP (Pres Subj Pl P1) => "apetezcamos" ;
    VP (Pres Subj Pl P2) => "apetezcáis" ;
    VP (Pres Subj Pl P3) => "apetezcan" ;
    VP (Impf Ind Sg P1) => "apetecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "apetecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "apetecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "apetecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apetecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apetecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apeteciera" ; "apeteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apetecieras" ; "apetecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apeteciera" ; "apeteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apeteciéramos" ; "apeteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apetecierais" ; "apetecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apetecieran" ; "apeteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "apetecí" ;--# notpresent
    VP (Pret Sg P2) => "apeteciste" ;--# notpresent
    VP (Pret Sg P3) => "apeteció" ;--# notpresent
    VP (Pret Pl P1) => "apetecimos" ;--# notpresent
    VP (Pret Pl P2) => "apetecisteis" ;--# notpresent
    VP (Pret Pl P3) => "apetecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apeteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apetecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apetecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "apeteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apeteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apetecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apeteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "apetecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "apeteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "apeteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apeteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apetecieren" ;--# notpresent
    VP (Cond Sg P1) => "apetecería" ;--# notpresent
    VP (Cond Sg P2) => "apetecerías" ;--# notpresent
    VP (Cond Sg P3) => "apetecería" ;--# notpresent
    VP (Cond Pl P1) => "apeteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "apeteceríais" ;--# notpresent
    VP (Cond Pl P3) => "apetecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apetece" ;
    VP (Imp Sg P3) => "apetezca" ;
    VP (Imp Pl P1) => "apetezcamos" ;
    VP (Imp Pl P2) => "apeteced" ;
    VP (Imp Pl P3) => "apetezcan" ;
    VP (Pass Sg Masc) => "apetecido" ;
    VP (Pass Sg Fem) => "apetecida" ;
    VP (Pass Pl Masc) => "apetecidos" ;
    VP (Pass Pl Fem) => "apetecidas"
    }
  } ;

lin arbolecer_V = verboV 
 {s = table {
    VI Infn => "arbolecer" ;
    VI Ger => "arboleciendo" ;
    VI Part => "arbolecido" ;
    VP (Pres Ind Sg P1) => "arbolezco" ;
    VP (Pres Ind Sg P2) => "arboleces" ;
    VP (Pres Ind Sg P3) => "arbolece" ;
    VP (Pres Ind Pl P1) => "arbolecemos" ;
    VP (Pres Ind Pl P2) => "arbolecéis" ;
    VP (Pres Ind Pl P3) => "arbolecen" ;
    VP (Pres Subj Sg P1) => "arbolezca" ;
    VP (Pres Subj Sg P2) => "arbolezcas" ;
    VP (Pres Subj Sg P3) => "arbolezca" ;
    VP (Pres Subj Pl P1) => "arbolezcamos" ;
    VP (Pres Subj Pl P2) => "arbolezcáis" ;
    VP (Pres Subj Pl P3) => "arbolezcan" ;
    VP (Impf Ind Sg P1) => "arbolecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "arbolecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "arbolecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "arbolecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "arbolecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "arbolecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arboleciera" ; "arboleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"arbolecieras" ; "arbolecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arboleciera" ; "arboleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arboleciéramos" ; "arboleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"arbolecierais" ; "arbolecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"arbolecieran" ; "arboleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "arbolecí" ;--# notpresent
    VP (Pret Sg P2) => "arboleciste" ;--# notpresent
    VP (Pret Sg P3) => "arboleció" ;--# notpresent
    VP (Pret Pl P1) => "arbolecimos" ;--# notpresent
    VP (Pret Pl P2) => "arbolecisteis" ;--# notpresent
    VP (Pret Pl P3) => "arbolecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arboleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "arbolecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "arbolecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "arboleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arboleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "arbolecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arboleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "arbolecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "arboleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "arboleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arboleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "arbolecieren" ;--# notpresent
    VP (Cond Sg P1) => "arbolecería" ;--# notpresent
    VP (Cond Sg P2) => "arbolecerías" ;--# notpresent
    VP (Cond Sg P3) => "arbolecería" ;--# notpresent
    VP (Cond Pl P1) => "arboleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "arboleceríais" ;--# notpresent
    VP (Cond Pl P3) => "arbolecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "arbolece" ;
    VP (Imp Sg P3) => "arbolezca" ;
    VP (Imp Pl P1) => "arbolezcamos" ;
    VP (Imp Pl P2) => "arboleced" ;
    VP (Imp Pl P3) => "arbolezcan" ;
    VP (Pass Sg Masc) => "arbolecido" ;
    VP (Pass Sg Fem) => "arbolecida" ;
    VP (Pass Pl Masc) => "arbolecidos" ;
    VP (Pass Pl Fem) => "arbolecidas"
    }
  } ;

lin arborecer_V = verboV 
 {s = table {
    VI Infn => "arborecer" ;
    VI Ger => "arboreciendo" ;
    VI Part => "arborecido" ;
    VP (Pres Ind Sg P1) => "arborezco" ;
    VP (Pres Ind Sg P2) => "arboreces" ;
    VP (Pres Ind Sg P3) => "arborece" ;
    VP (Pres Ind Pl P1) => "arborecemos" ;
    VP (Pres Ind Pl P2) => "arborecéis" ;
    VP (Pres Ind Pl P3) => "arborecen" ;
    VP (Pres Subj Sg P1) => "arborezca" ;
    VP (Pres Subj Sg P2) => "arborezcas" ;
    VP (Pres Subj Sg P3) => "arborezca" ;
    VP (Pres Subj Pl P1) => "arborezcamos" ;
    VP (Pres Subj Pl P2) => "arborezcáis" ;
    VP (Pres Subj Pl P3) => "arborezcan" ;
    VP (Impf Ind Sg P1) => "arborecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "arborecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "arborecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "arborecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "arborecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "arborecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arboreciera" ; "arboreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"arborecieras" ; "arborecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arboreciera" ; "arboreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arboreciéramos" ; "arboreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"arborecierais" ; "arborecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"arborecieran" ; "arboreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "arborecí" ;--# notpresent
    VP (Pret Sg P2) => "arboreciste" ;--# notpresent
    VP (Pret Sg P3) => "arboreció" ;--# notpresent
    VP (Pret Pl P1) => "arborecimos" ;--# notpresent
    VP (Pret Pl P2) => "arborecisteis" ;--# notpresent
    VP (Pret Pl P3) => "arborecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arboreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "arborecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "arborecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "arboreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arboreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "arborecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arboreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "arborecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "arboreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "arboreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arboreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "arborecieren" ;--# notpresent
    VP (Cond Sg P1) => "arborecería" ;--# notpresent
    VP (Cond Sg P2) => "arborecerías" ;--# notpresent
    VP (Cond Sg P3) => "arborecería" ;--# notpresent
    VP (Cond Pl P1) => "arboreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "arboreceríais" ;--# notpresent
    VP (Cond Pl P3) => "arborecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "arborece" ;
    VP (Imp Sg P3) => "arborezca" ;
    VP (Imp Pl P1) => "arborezcamos" ;
    VP (Imp Pl P2) => "arboreced" ;
    VP (Imp Pl P3) => "arborezcan" ;
    VP (Pass Sg Masc) => "arborecido" ;
    VP (Pass Sg Fem) => "arborecida" ;
    VP (Pass Pl Masc) => "arborecidos" ;
    VP (Pass Pl Fem) => "arborecidas"
    }
  } ;

lin aridecer_V = verboV 
 {s = table {
    VI Infn => "aridecer" ;
    VI Ger => "arideciendo" ;
    VI Part => "aridecido" ;
    VP (Pres Ind Sg P1) => "aridezco" ;
    VP (Pres Ind Sg P2) => "arideces" ;
    VP (Pres Ind Sg P3) => "aridece" ;
    VP (Pres Ind Pl P1) => "aridecemos" ;
    VP (Pres Ind Pl P2) => "aridecéis" ;
    VP (Pres Ind Pl P3) => "aridecen" ;
    VP (Pres Subj Sg P1) => "aridezca" ;
    VP (Pres Subj Sg P2) => "aridezcas" ;
    VP (Pres Subj Sg P3) => "aridezca" ;
    VP (Pres Subj Pl P1) => "aridezcamos" ;
    VP (Pres Subj Pl P2) => "aridezcáis" ;
    VP (Pres Subj Pl P3) => "aridezcan" ;
    VP (Impf Ind Sg P1) => "aridecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aridecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aridecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aridecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aridecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aridecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arideciera" ; "arideciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aridecieras" ; "aridecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arideciera" ; "arideciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arideciéramos" ; "arideciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aridecierais" ; "aridecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aridecieran" ; "arideciesen"} ;--# notpresent
    VP (Pret Sg P1) => "aridecí" ;--# notpresent
    VP (Pret Sg P2) => "arideciste" ;--# notpresent
    VP (Pret Sg P3) => "arideció" ;--# notpresent
    VP (Pret Pl P1) => "aridecimos" ;--# notpresent
    VP (Pret Pl P2) => "aridecisteis" ;--# notpresent
    VP (Pret Pl P3) => "aridecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arideceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aridecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aridecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "arideceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arideceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aridecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arideciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aridecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "arideciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "arideciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arideciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aridecieren" ;--# notpresent
    VP (Cond Sg P1) => "aridecería" ;--# notpresent
    VP (Cond Sg P2) => "aridecerías" ;--# notpresent
    VP (Cond Sg P3) => "aridecería" ;--# notpresent
    VP (Cond Pl P1) => "arideceríamos" ;--# notpresent
    VP (Cond Pl P2) => "arideceríais" ;--# notpresent
    VP (Cond Pl P3) => "aridecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aridece" ;
    VP (Imp Sg P3) => "aridezca" ;
    VP (Imp Pl P1) => "aridezcamos" ;
    VP (Imp Pl P2) => "arideced" ;
    VP (Imp Pl P3) => "aridezcan" ;
    VP (Pass Sg Masc) => "aridecido" ;
    VP (Pass Sg Fem) => "aridecida" ;
    VP (Pass Pl Masc) => "aridecidos" ;
    VP (Pass Pl Fem) => "aridecidas"
    }
  } ;

lin atardecer_V = verboV 
 {s = table {
    VI Infn => "atardecer" ;
    VI Ger => "atardeciendo" ;
    VI Part => "atardecido" ;
    VP (Pres Ind Sg P1) => "atardezco" ;
    VP (Pres Ind Sg P2) => "atardeces" ;
    VP (Pres Ind Sg P3) => "atardece" ;
    VP (Pres Ind Pl P1) => "atardecemos" ;
    VP (Pres Ind Pl P2) => "atardecéis" ;
    VP (Pres Ind Pl P3) => "atardecen" ;
    VP (Pres Subj Sg P1) => "atardezca" ;
    VP (Pres Subj Sg P2) => "atardezcas" ;
    VP (Pres Subj Sg P3) => "atardezca" ;
    VP (Pres Subj Pl P1) => "atardezcamos" ;
    VP (Pres Subj Pl P2) => "atardezcáis" ;
    VP (Pres Subj Pl P3) => "atardezcan" ;
    VP (Impf Ind Sg P1) => "atardecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "atardecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "atardecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "atardecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atardecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atardecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atardeciera" ; "atardeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atardecieras" ; "atardecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atardeciera" ; "atardeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atardeciéramos" ; "atardeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atardecierais" ; "atardecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atardecieran" ; "atardeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "atardecí" ;--# notpresent
    VP (Pret Sg P2) => "atardeciste" ;--# notpresent
    VP (Pret Sg P3) => "atardeció" ;--# notpresent
    VP (Pret Pl P1) => "atardecimos" ;--# notpresent
    VP (Pret Pl P2) => "atardecisteis" ;--# notpresent
    VP (Pret Pl P3) => "atardecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atardeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atardecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atardecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "atardeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atardeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atardecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atardeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "atardecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "atardeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "atardeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atardeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atardecieren" ;--# notpresent
    VP (Cond Sg P1) => "atardecería" ;--# notpresent
    VP (Cond Sg P2) => "atardecerías" ;--# notpresent
    VP (Cond Sg P3) => "atardecería" ;--# notpresent
    VP (Cond Pl P1) => "atardeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "atardeceríais" ;--# notpresent
    VP (Cond Pl P3) => "atardecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atardece" ;
    VP (Imp Sg P3) => "atardezca" ;
    VP (Imp Pl P1) => "atardezcamos" ;
    VP (Imp Pl P2) => "atardeced" ;
    VP (Imp Pl P3) => "atardezcan" ;
    VP (Pass Sg Masc) => "atardecido" ;
    VP (Pass Sg Fem) => "atardecida" ;
    VP (Pass Pl Masc) => "atardecidos" ;
    VP (Pass Pl Fem) => "atardecidas"
    }
  } ;

lin blanquecer_V = verboV 
 {s = table {
    VI Infn => "blanquecer" ;
    VI Ger => "blanqueciendo" ;
    VI Part => "blanquecido" ;
    VP (Pres Ind Sg P1) => "blanquezco" ;
    VP (Pres Ind Sg P2) => "blanqueces" ;
    VP (Pres Ind Sg P3) => "blanquece" ;
    VP (Pres Ind Pl P1) => "blanquecemos" ;
    VP (Pres Ind Pl P2) => "blanquecéis" ;
    VP (Pres Ind Pl P3) => "blanquecen" ;
    VP (Pres Subj Sg P1) => "blanquezca" ;
    VP (Pres Subj Sg P2) => "blanquezcas" ;
    VP (Pres Subj Sg P3) => "blanquezca" ;
    VP (Pres Subj Pl P1) => "blanquezcamos" ;
    VP (Pres Subj Pl P2) => "blanquezcáis" ;
    VP (Pres Subj Pl P3) => "blanquezcan" ;
    VP (Impf Ind Sg P1) => "blanquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "blanquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "blanquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "blanquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "blanquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "blanquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"blanqueciera" ; "blanqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"blanquecieras" ; "blanquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"blanqueciera" ; "blanqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"blanqueciéramos" ; "blanqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"blanquecierais" ; "blanquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"blanquecieran" ; "blanqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "blanquecí" ;--# notpresent
    VP (Pret Sg P2) => "blanqueciste" ;--# notpresent
    VP (Pret Sg P3) => "blanqueció" ;--# notpresent
    VP (Pret Pl P1) => "blanquecimos" ;--# notpresent
    VP (Pret Pl P2) => "blanquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "blanquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "blanqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "blanquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "blanquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "blanqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "blanqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "blanquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "blanqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "blanquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "blanqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "blanqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "blanqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "blanquecieren" ;--# notpresent
    VP (Cond Sg P1) => "blanquecería" ;--# notpresent
    VP (Cond Sg P2) => "blanquecerías" ;--# notpresent
    VP (Cond Sg P3) => "blanquecería" ;--# notpresent
    VP (Cond Pl P1) => "blanqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "blanqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "blanquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "blanquece" ;
    VP (Imp Sg P3) => "blanquezca" ;
    VP (Imp Pl P1) => "blanquezcamos" ;
    VP (Imp Pl P2) => "blanqueced" ;
    VP (Imp Pl P3) => "blanquezcan" ;
    VP (Pass Sg Masc) => "blanquecido" ;
    VP (Pass Sg Fem) => "blanquecida" ;
    VP (Pass Pl Masc) => "blanquecidos" ;
    VP (Pass Pl Fem) => "blanquecidas"
    }
  } ;

lin calecer_V = verboV 
 {s = table {
    VI Infn => "calecer" ;
    VI Ger => "caleciendo" ;
    VI Part => "calecido" ;
    VP (Pres Ind Sg P1) => "calezco" ;
    VP (Pres Ind Sg P2) => "caleces" ;
    VP (Pres Ind Sg P3) => "calece" ;
    VP (Pres Ind Pl P1) => "calecemos" ;
    VP (Pres Ind Pl P2) => "calecéis" ;
    VP (Pres Ind Pl P3) => "calecen" ;
    VP (Pres Subj Sg P1) => "calezca" ;
    VP (Pres Subj Sg P2) => "calezcas" ;
    VP (Pres Subj Sg P3) => "calezca" ;
    VP (Pres Subj Pl P1) => "calezcamos" ;
    VP (Pres Subj Pl P2) => "calezcáis" ;
    VP (Pres Subj Pl P3) => "calezcan" ;
    VP (Impf Ind Sg P1) => "calecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "calecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "calecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "calecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "calecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "calecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"caleciera" ; "caleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"calecieras" ; "calecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"caleciera" ; "caleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"caleciéramos" ; "caleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"calecierais" ; "calecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"calecieran" ; "caleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "calecí" ;--# notpresent
    VP (Pret Sg P2) => "caleciste" ;--# notpresent
    VP (Pret Sg P3) => "caleció" ;--# notpresent
    VP (Pret Pl P1) => "calecimos" ;--# notpresent
    VP (Pret Pl P2) => "calecisteis" ;--# notpresent
    VP (Pret Pl P3) => "calecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "caleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "calecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "calecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "caleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "caleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "calecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "caleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "calecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "caleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "caleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "caleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "calecieren" ;--# notpresent
    VP (Cond Sg P1) => "calecería" ;--# notpresent
    VP (Cond Sg P2) => "calecerías" ;--# notpresent
    VP (Cond Sg P3) => "calecería" ;--# notpresent
    VP (Cond Pl P1) => "caleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "caleceríais" ;--# notpresent
    VP (Cond Pl P3) => "calecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "calece" ;
    VP (Imp Sg P3) => "calezca" ;
    VP (Imp Pl P1) => "calezcamos" ;
    VP (Imp Pl P2) => "caleced" ;
    VP (Imp Pl P3) => "calezcan" ;
    VP (Pass Sg Masc) => "calecido" ;
    VP (Pass Sg Fem) => "calecida" ;
    VP (Pass Pl Masc) => "calecidos" ;
    VP (Pass Pl Fem) => "calecidas"
    }
  } ;

lin carecer_V = verboV 
 {s = table {
    VI Infn => "carecer" ;
    VI Ger => "careciendo" ;
    VI Part => "carecido" ;
    VP (Pres Ind Sg P1) => "carezco" ;
    VP (Pres Ind Sg P2) => "careces" ;
    VP (Pres Ind Sg P3) => "carece" ;
    VP (Pres Ind Pl P1) => "carecemos" ;
    VP (Pres Ind Pl P2) => "carecéis" ;
    VP (Pres Ind Pl P3) => "carecen" ;
    VP (Pres Subj Sg P1) => "carezca" ;
    VP (Pres Subj Sg P2) => "carezcas" ;
    VP (Pres Subj Sg P3) => "carezca" ;
    VP (Pres Subj Pl P1) => "carezcamos" ;
    VP (Pres Subj Pl P2) => "carezcáis" ;
    VP (Pres Subj Pl P3) => "carezcan" ;
    VP (Impf Ind Sg P1) => "carecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "carecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "carecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "carecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "carecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "carecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"careciera" ; "careciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"carecieras" ; "carecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"careciera" ; "careciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"careciéramos" ; "careciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"carecierais" ; "carecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"carecieran" ; "careciesen"} ;--# notpresent
    VP (Pret Sg P1) => "carecí" ;--# notpresent
    VP (Pret Sg P2) => "careciste" ;--# notpresent
    VP (Pret Sg P3) => "careció" ;--# notpresent
    VP (Pret Pl P1) => "carecimos" ;--# notpresent
    VP (Pret Pl P2) => "carecisteis" ;--# notpresent
    VP (Pret Pl P3) => "carecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "careceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "carecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "carecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "careceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "careceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "carecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "careciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "carecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "careciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "careciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "careciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "carecieren" ;--# notpresent
    VP (Cond Sg P1) => "carecería" ;--# notpresent
    VP (Cond Sg P2) => "carecerías" ;--# notpresent
    VP (Cond Sg P3) => "carecería" ;--# notpresent
    VP (Cond Pl P1) => "careceríamos" ;--# notpresent
    VP (Cond Pl P2) => "careceríais" ;--# notpresent
    VP (Cond Pl P3) => "carecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "carece" ;
    VP (Imp Sg P3) => "carezca" ;
    VP (Imp Pl P1) => "carezcamos" ;
    VP (Imp Pl P2) => "careced" ;
    VP (Imp Pl P3) => "carezcan" ;
    VP (Pass Sg Masc) => "carecido" ;
    VP (Pass Sg Fem) => "carecida" ;
    VP (Pass Pl Masc) => "carecidos" ;
    VP (Pass Pl Fem) => "carecidas"
    }
  } ;

lin clarecer_V = verboV 
 {s = table {
    VI Infn => "clarecer" ;
    VI Ger => "clareciendo" ;
    VI Part => "clarecido" ;
    VP (Pres Ind Sg P1) => "clarezco" ;
    VP (Pres Ind Sg P2) => "clareces" ;
    VP (Pres Ind Sg P3) => "clarece" ;
    VP (Pres Ind Pl P1) => "clarecemos" ;
    VP (Pres Ind Pl P2) => "clarecéis" ;
    VP (Pres Ind Pl P3) => "clarecen" ;
    VP (Pres Subj Sg P1) => "clarezca" ;
    VP (Pres Subj Sg P2) => "clarezcas" ;
    VP (Pres Subj Sg P3) => "clarezca" ;
    VP (Pres Subj Pl P1) => "clarezcamos" ;
    VP (Pres Subj Pl P2) => "clarezcáis" ;
    VP (Pres Subj Pl P3) => "clarezcan" ;
    VP (Impf Ind Sg P1) => "clarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "clarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "clarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "clarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "clarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "clarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"clareciera" ; "clareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"clarecieras" ; "clarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"clareciera" ; "clareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"clareciéramos" ; "clareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"clarecierais" ; "clarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"clarecieran" ; "clareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "clarecí" ;--# notpresent
    VP (Pret Sg P2) => "clareciste" ;--# notpresent
    VP (Pret Sg P3) => "clareció" ;--# notpresent
    VP (Pret Pl P1) => "clarecimos" ;--# notpresent
    VP (Pret Pl P2) => "clarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "clarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "clareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "clarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "clarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "clareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "clareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "clarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "clareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "clarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "clareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "clareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "clareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "clarecieren" ;--# notpresent
    VP (Cond Sg P1) => "clarecería" ;--# notpresent
    VP (Cond Sg P2) => "clarecerías" ;--# notpresent
    VP (Cond Sg P3) => "clarecería" ;--# notpresent
    VP (Cond Pl P1) => "clareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "clareceríais" ;--# notpresent
    VP (Cond Pl P3) => "clarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "clarece" ;
    VP (Imp Sg P3) => "clarezca" ;
    VP (Imp Pl P1) => "clarezcamos" ;
    VP (Imp Pl P2) => "clareced" ;
    VP (Imp Pl P3) => "clarezcan" ;
    VP (Pass Sg Masc) => "clarecido" ;
    VP (Pass Sg Fem) => "clarecida" ;
    VP (Pass Pl Masc) => "clarecidos" ;
    VP (Pass Pl Fem) => "clarecidas"
    }
  } ;

lin colicuecer_V = verboV 
 {s = table {
    VI Infn => "colicuecer" ;
    VI Ger => "colicueciendo" ;
    VI Part => "colicuecido" ;
    VP (Pres Ind Sg P1) => "colicuezco" ;
    VP (Pres Ind Sg P2) => "colicueces" ;
    VP (Pres Ind Sg P3) => "colicuece" ;
    VP (Pres Ind Pl P1) => "colicuecemos" ;
    VP (Pres Ind Pl P2) => "colicuecéis" ;
    VP (Pres Ind Pl P3) => "colicuecen" ;
    VP (Pres Subj Sg P1) => "colicuezca" ;
    VP (Pres Subj Sg P2) => "colicuezcas" ;
    VP (Pres Subj Sg P3) => "colicuezca" ;
    VP (Pres Subj Pl P1) => "colicuezcamos" ;
    VP (Pres Subj Pl P2) => "colicuezcáis" ;
    VP (Pres Subj Pl P3) => "colicuezcan" ;
    VP (Impf Ind Sg P1) => "colicuecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "colicuecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "colicuecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "colicuecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "colicuecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "colicuecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"colicueciera" ; "colicueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"colicuecieras" ; "colicuecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"colicueciera" ; "colicueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"colicueciéramos" ; "colicueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"colicuecierais" ; "colicuecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"colicuecieran" ; "colicueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "colicuecí" ;--# notpresent
    VP (Pret Sg P2) => "colicueciste" ;--# notpresent
    VP (Pret Sg P3) => "colicueció" ;--# notpresent
    VP (Pret Pl P1) => "colicuecimos" ;--# notpresent
    VP (Pret Pl P2) => "colicuecisteis" ;--# notpresent
    VP (Pret Pl P3) => "colicuecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "colicueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "colicuecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "colicuecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "colicueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "colicueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "colicuecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "colicueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "colicuecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "colicueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "colicueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "colicueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "colicuecieren" ;--# notpresent
    VP (Cond Sg P1) => "colicuecería" ;--# notpresent
    VP (Cond Sg P2) => "colicuecerías" ;--# notpresent
    VP (Cond Sg P3) => "colicuecería" ;--# notpresent
    VP (Cond Pl P1) => "colicueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "colicueceríais" ;--# notpresent
    VP (Cond Pl P3) => "colicuecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "colicuece" ;
    VP (Imp Sg P3) => "colicuezca" ;
    VP (Imp Pl P1) => "colicuezcamos" ;
    VP (Imp Pl P2) => "colicueced" ;
    VP (Imp Pl P3) => "colicuezcan" ;
    VP (Pass Sg Masc) => "colicuecido" ;
    VP (Pass Sg Fem) => "colicuecida" ;
    VP (Pass Pl Masc) => "colicuecidos" ;
    VP (Pass Pl Fem) => "colicuecidas"
    }
  } ;

lin compadecer_V = verboV 
 {s = table {
    VI Infn => "compadecer" ;
    VI Ger => "compadeciendo" ;
    VI Part => "compadecido" ;
    VP (Pres Ind Sg P1) => "compadezco" ;
    VP (Pres Ind Sg P2) => "compadeces" ;
    VP (Pres Ind Sg P3) => "compadece" ;
    VP (Pres Ind Pl P1) => "compadecemos" ;
    VP (Pres Ind Pl P2) => "compadecéis" ;
    VP (Pres Ind Pl P3) => "compadecen" ;
    VP (Pres Subj Sg P1) => "compadezca" ;
    VP (Pres Subj Sg P2) => "compadezcas" ;
    VP (Pres Subj Sg P3) => "compadezca" ;
    VP (Pres Subj Pl P1) => "compadezcamos" ;
    VP (Pres Subj Pl P2) => "compadezcáis" ;
    VP (Pres Subj Pl P3) => "compadezcan" ;
    VP (Impf Ind Sg P1) => "compadecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "compadecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "compadecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "compadecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "compadecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "compadecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"compadeciera" ; "compadeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"compadecieras" ; "compadecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"compadeciera" ; "compadeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"compadeciéramos" ; "compadeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"compadecierais" ; "compadecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"compadecieran" ; "compadeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "compadecí" ;--# notpresent
    VP (Pret Sg P2) => "compadeciste" ;--# notpresent
    VP (Pret Sg P3) => "compadeció" ;--# notpresent
    VP (Pret Pl P1) => "compadecimos" ;--# notpresent
    VP (Pret Pl P2) => "compadecisteis" ;--# notpresent
    VP (Pret Pl P3) => "compadecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "compadeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "compadecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "compadecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "compadeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "compadeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "compadecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "compadeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "compadecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "compadeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "compadeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "compadeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "compadecieren" ;--# notpresent
    VP (Cond Sg P1) => "compadecería" ;--# notpresent
    VP (Cond Sg P2) => "compadecerías" ;--# notpresent
    VP (Cond Sg P3) => "compadecería" ;--# notpresent
    VP (Cond Pl P1) => "compadeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "compadeceríais" ;--# notpresent
    VP (Cond Pl P3) => "compadecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "compadece" ;
    VP (Imp Sg P3) => "compadezca" ;
    VP (Imp Pl P1) => "compadezcamos" ;
    VP (Imp Pl P2) => "compadeced" ;
    VP (Imp Pl P3) => "compadezcan" ;
    VP (Pass Sg Masc) => "compadecido" ;
    VP (Pass Sg Fem) => "compadecida" ;
    VP (Pass Pl Masc) => "compadecidos" ;
    VP (Pass Pl Fem) => "compadecidas"
    }
  } ;

lin comparecer_V = verboV 
 {s = table {
    VI Infn => "comparecer" ;
    VI Ger => "compareciendo" ;
    VI Part => "comparecido" ;
    VP (Pres Ind Sg P1) => "comparezco" ;
    VP (Pres Ind Sg P2) => "compareces" ;
    VP (Pres Ind Sg P3) => "comparece" ;
    VP (Pres Ind Pl P1) => "comparecemos" ;
    VP (Pres Ind Pl P2) => "comparecéis" ;
    VP (Pres Ind Pl P3) => "comparecen" ;
    VP (Pres Subj Sg P1) => "comparezca" ;
    VP (Pres Subj Sg P2) => "comparezcas" ;
    VP (Pres Subj Sg P3) => "comparezca" ;
    VP (Pres Subj Pl P1) => "comparezcamos" ;
    VP (Pres Subj Pl P2) => "comparezcáis" ;
    VP (Pres Subj Pl P3) => "comparezcan" ;
    VP (Impf Ind Sg P1) => "comparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "comparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "comparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "comparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "comparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "comparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"compareciera" ; "compareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"comparecieras" ; "comparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"compareciera" ; "compareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"compareciéramos" ; "compareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"comparecierais" ; "comparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"comparecieran" ; "compareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "comparecí" ;--# notpresent
    VP (Pret Sg P2) => "compareciste" ;--# notpresent
    VP (Pret Sg P3) => "compareció" ;--# notpresent
    VP (Pret Pl P1) => "comparecimos" ;--# notpresent
    VP (Pret Pl P2) => "comparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "comparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "compareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "comparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "comparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "compareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "compareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "comparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "compareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "comparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "compareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "compareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "compareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "comparecieren" ;--# notpresent
    VP (Cond Sg P1) => "comparecería" ;--# notpresent
    VP (Cond Sg P2) => "comparecerías" ;--# notpresent
    VP (Cond Sg P3) => "comparecería" ;--# notpresent
    VP (Cond Pl P1) => "compareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "compareceríais" ;--# notpresent
    VP (Cond Pl P3) => "comparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "comparece" ;
    VP (Imp Sg P3) => "comparezca" ;
    VP (Imp Pl P1) => "comparezcamos" ;
    VP (Imp Pl P2) => "compareced" ;
    VP (Imp Pl P3) => "comparezcan" ;
    VP (Pass Sg Masc) => "comparecido" ;
    VP (Pass Sg Fem) => "comparecida" ;
    VP (Pass Pl Masc) => "comparecidos" ;
    VP (Pass Pl Fem) => "comparecidas"
    }
  } ;

lin convalecer_V = verboV 
 {s = table {
    VI Infn => "convalecer" ;
    VI Ger => "convaleciendo" ;
    VI Part => "convalecido" ;
    VP (Pres Ind Sg P1) => "convalezco" ;
    VP (Pres Ind Sg P2) => "convaleces" ;
    VP (Pres Ind Sg P3) => "convalece" ;
    VP (Pres Ind Pl P1) => "convalecemos" ;
    VP (Pres Ind Pl P2) => "convalecéis" ;
    VP (Pres Ind Pl P3) => "convalecen" ;
    VP (Pres Subj Sg P1) => "convalezca" ;
    VP (Pres Subj Sg P2) => "convalezcas" ;
    VP (Pres Subj Sg P3) => "convalezca" ;
    VP (Pres Subj Pl P1) => "convalezcamos" ;
    VP (Pres Subj Pl P2) => "convalezcáis" ;
    VP (Pres Subj Pl P3) => "convalezcan" ;
    VP (Impf Ind Sg P1) => "convalecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convalecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convalecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "convalecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "convalecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convalecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"convaleciera" ; "convaleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convalecieras" ; "convalecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"convaleciera" ; "convaleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"convaleciéramos" ; "convaleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convalecierais" ; "convalecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convalecieran" ; "convaleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "convalecí" ;--# notpresent
    VP (Pret Sg P2) => "convaleciste" ;--# notpresent
    VP (Pret Sg P3) => "convaleció" ;--# notpresent
    VP (Pret Pl P1) => "convalecimos" ;--# notpresent
    VP (Pret Pl P2) => "convalecisteis" ;--# notpresent
    VP (Pret Pl P3) => "convalecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convaleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convalecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convalecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convaleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convaleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convalecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "convaleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convalecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "convaleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "convaleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "convaleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convalecieren" ;--# notpresent
    VP (Cond Sg P1) => "convalecería" ;--# notpresent
    VP (Cond Sg P2) => "convalecerías" ;--# notpresent
    VP (Cond Sg P3) => "convalecería" ;--# notpresent
    VP (Cond Pl P1) => "convaleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "convaleceríais" ;--# notpresent
    VP (Cond Pl P3) => "convalecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "convalece" ;
    VP (Imp Sg P3) => "convalezca" ;
    VP (Imp Pl P1) => "convalezcamos" ;
    VP (Imp Pl P2) => "convaleced" ;
    VP (Imp Pl P3) => "convalezcan" ;
    VP (Pass Sg Masc) => "convalecido" ;
    VP (Pass Sg Fem) => "convalecida" ;
    VP (Pass Pl Masc) => "convalecidos" ;
    VP (Pass Pl Fem) => "convalecidas"
    }
  } ;

lin crecer_V = verboV 
 {s = table {
    VI Infn => "crecer" ;
    VI Ger => "creciendo" ;
    VI Part => "crecido" ;
    VP (Pres Ind Sg P1) => "crezco" ;
    VP (Pres Ind Sg P2) => "creces" ;
    VP (Pres Ind Sg P3) => "crece" ;
    VP (Pres Ind Pl P1) => "crecemos" ;
    VP (Pres Ind Pl P2) => "crecéis" ;
    VP (Pres Ind Pl P3) => "crecen" ;
    VP (Pres Subj Sg P1) => "crezca" ;
    VP (Pres Subj Sg P2) => "crezcas" ;
    VP (Pres Subj Sg P3) => "crezca" ;
    VP (Pres Subj Pl P1) => "crezcamos" ;
    VP (Pres Subj Pl P2) => "crezcáis" ;
    VP (Pres Subj Pl P3) => "crezcan" ;
    VP (Impf Ind Sg P1) => "crecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "crecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "crecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "crecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "crecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "crecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"creciera" ; "creciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"crecieras" ; "crecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"creciera" ; "creciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"creciéramos" ; "creciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"crecierais" ; "crecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"crecieran" ; "creciesen"} ;--# notpresent
    VP (Pret Sg P1) => "crecí" ;--# notpresent
    VP (Pret Sg P2) => "creciste" ;--# notpresent
    VP (Pret Sg P3) => "creció" ;--# notpresent
    VP (Pret Pl P1) => "crecimos" ;--# notpresent
    VP (Pret Pl P2) => "crecisteis" ;--# notpresent
    VP (Pret Pl P3) => "crecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "creceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "crecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "crecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "creceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "creceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "crecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "creciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "crecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "creciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "creciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "creciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "crecieren" ;--# notpresent
    VP (Cond Sg P1) => "crecería" ;--# notpresent
    VP (Cond Sg P2) => "crecerías" ;--# notpresent
    VP (Cond Sg P3) => "crecería" ;--# notpresent
    VP (Cond Pl P1) => "creceríamos" ;--# notpresent
    VP (Cond Pl P2) => "creceríais" ;--# notpresent
    VP (Cond Pl P3) => "crecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "crece" ;
    VP (Imp Sg P3) => "crezca" ;
    VP (Imp Pl P1) => "crezcamos" ;
    VP (Imp Pl P2) => "creced" ;
    VP (Imp Pl P3) => "crezcan" ;
    VP (Pass Sg Masc) => "crecido" ;
    VP (Pass Sg Fem) => "crecida" ;
    VP (Pass Pl Masc) => "crecidos" ;
    VP (Pass Pl Fem) => "crecidas"
    }
  } ;

lin decrecer_V = verboV 
 {s = table {
    VI Infn => "decrecer" ;
    VI Ger => "decreciendo" ;
    VI Part => "decrecido" ;
    VP (Pres Ind Sg P1) => "decrezco" ;
    VP (Pres Ind Sg P2) => "decreces" ;
    VP (Pres Ind Sg P3) => "decrece" ;
    VP (Pres Ind Pl P1) => "decrecemos" ;
    VP (Pres Ind Pl P2) => "decrecéis" ;
    VP (Pres Ind Pl P3) => "decrecen" ;
    VP (Pres Subj Sg P1) => "decrezca" ;
    VP (Pres Subj Sg P2) => "decrezcas" ;
    VP (Pres Subj Sg P3) => "decrezca" ;
    VP (Pres Subj Pl P1) => "decrezcamos" ;
    VP (Pres Subj Pl P2) => "decrezcáis" ;
    VP (Pres Subj Pl P3) => "decrezcan" ;
    VP (Impf Ind Sg P1) => "decrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "decrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "decrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "decrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "decrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "decrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"decreciera" ; "decreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"decrecieras" ; "decrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"decreciera" ; "decreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"decreciéramos" ; "decreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"decrecierais" ; "decrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"decrecieran" ; "decreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "decrecí" ;--# notpresent
    VP (Pret Sg P2) => "decreciste" ;--# notpresent
    VP (Pret Sg P3) => "decreció" ;--# notpresent
    VP (Pret Pl P1) => "decrecimos" ;--# notpresent
    VP (Pret Pl P2) => "decrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "decrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "decreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "decrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "decrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "decreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "decreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "decrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "decreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "decrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "decreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "decreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "decreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "decrecieren" ;--# notpresent
    VP (Cond Sg P1) => "decrecería" ;--# notpresent
    VP (Cond Sg P2) => "decrecerías" ;--# notpresent
    VP (Cond Sg P3) => "decrecería" ;--# notpresent
    VP (Cond Pl P1) => "decreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "decreceríais" ;--# notpresent
    VP (Cond Pl P3) => "decrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "decrece" ;
    VP (Imp Sg P3) => "decrezca" ;
    VP (Imp Pl P1) => "decrezcamos" ;
    VP (Imp Pl P2) => "decreced" ;
    VP (Imp Pl P3) => "decrezcan" ;
    VP (Pass Sg Masc) => "decrecido" ;
    VP (Pass Sg Fem) => "decrecida" ;
    VP (Pass Pl Masc) => "decrecidos" ;
    VP (Pass Pl Fem) => "decrecidas"
    }
  } ;

lin desabastecer_V = verboV 
 {s = table {
    VI Infn => "desabastecer" ;
    VI Ger => "desabasteciendo" ;
    VI Part => "desabastecido" ;
    VP (Pres Ind Sg P1) => "desabastezco" ;
    VP (Pres Ind Sg P2) => "desabasteces" ;
    VP (Pres Ind Sg P3) => "desabastece" ;
    VP (Pres Ind Pl P1) => "desabastecemos" ;
    VP (Pres Ind Pl P2) => "desabastecéis" ;
    VP (Pres Ind Pl P3) => "desabastecen" ;
    VP (Pres Subj Sg P1) => "desabastezca" ;
    VP (Pres Subj Sg P2) => "desabastezcas" ;
    VP (Pres Subj Sg P3) => "desabastezca" ;
    VP (Pres Subj Pl P1) => "desabastezcamos" ;
    VP (Pres Subj Pl P2) => "desabastezcáis" ;
    VP (Pres Subj Pl P3) => "desabastezcan" ;
    VP (Impf Ind Sg P1) => "desabastecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desabastecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desabastecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desabastecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desabastecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desabastecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desabasteciera" ; "desabasteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desabastecieras" ; "desabastecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desabasteciera" ; "desabasteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desabasteciéramos" ; "desabasteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desabastecierais" ; "desabastecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desabastecieran" ; "desabasteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desabastecí" ;--# notpresent
    VP (Pret Sg P2) => "desabasteciste" ;--# notpresent
    VP (Pret Sg P3) => "desabasteció" ;--# notpresent
    VP (Pret Pl P1) => "desabastecimos" ;--# notpresent
    VP (Pret Pl P2) => "desabastecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desabastecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desabasteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desabastecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desabastecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desabasteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desabasteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desabastecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desabasteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desabastecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desabasteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desabasteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desabasteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desabastecieren" ;--# notpresent
    VP (Cond Sg P1) => "desabastecería" ;--# notpresent
    VP (Cond Sg P2) => "desabastecerías" ;--# notpresent
    VP (Cond Sg P3) => "desabastecería" ;--# notpresent
    VP (Cond Pl P1) => "desabasteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desabasteceríais" ;--# notpresent
    VP (Cond Pl P3) => "desabastecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desabastece" ;
    VP (Imp Sg P3) => "desabastezca" ;
    VP (Imp Pl P1) => "desabastezcamos" ;
    VP (Imp Pl P2) => "desabasteced" ;
    VP (Imp Pl P3) => "desabastezcan" ;
    VP (Pass Sg Masc) => "desabastecido" ;
    VP (Pass Sg Fem) => "desabastecida" ;
    VP (Pass Pl Masc) => "desabastecidos" ;
    VP (Pass Pl Fem) => "desabastecidas"
    }
  } ;

lin desadormecer_V = verboV 
 {s = table {
    VI Infn => "desadormecer" ;
    VI Ger => "desadormeciendo" ;
    VI Part => "desadormecido" ;
    VP (Pres Ind Sg P1) => "desadormezco" ;
    VP (Pres Ind Sg P2) => "desadormeces" ;
    VP (Pres Ind Sg P3) => "desadormece" ;
    VP (Pres Ind Pl P1) => "desadormecemos" ;
    VP (Pres Ind Pl P2) => "desadormecéis" ;
    VP (Pres Ind Pl P3) => "desadormecen" ;
    VP (Pres Subj Sg P1) => "desadormezca" ;
    VP (Pres Subj Sg P2) => "desadormezcas" ;
    VP (Pres Subj Sg P3) => "desadormezca" ;
    VP (Pres Subj Pl P1) => "desadormezcamos" ;
    VP (Pres Subj Pl P2) => "desadormezcáis" ;
    VP (Pres Subj Pl P3) => "desadormezcan" ;
    VP (Impf Ind Sg P1) => "desadormecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desadormecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desadormecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desadormecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desadormecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desadormecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desadormeciera" ; "desadormeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desadormecieras" ; "desadormecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desadormeciera" ; "desadormeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desadormeciéramos" ; "desadormeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desadormecierais" ; "desadormecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desadormecieran" ; "desadormeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desadormecí" ;--# notpresent
    VP (Pret Sg P2) => "desadormeciste" ;--# notpresent
    VP (Pret Sg P3) => "desadormeció" ;--# notpresent
    VP (Pret Pl P1) => "desadormecimos" ;--# notpresent
    VP (Pret Pl P2) => "desadormecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desadormecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desadormeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desadormecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desadormecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desadormeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desadormeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desadormecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desadormeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desadormecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desadormeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desadormeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desadormeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desadormecieren" ;--# notpresent
    VP (Cond Sg P1) => "desadormecería" ;--# notpresent
    VP (Cond Sg P2) => "desadormecerías" ;--# notpresent
    VP (Cond Sg P3) => "desadormecería" ;--# notpresent
    VP (Cond Pl P1) => "desadormeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desadormeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desadormecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desadormece" ;
    VP (Imp Sg P3) => "desadormezca" ;
    VP (Imp Pl P1) => "desadormezcamos" ;
    VP (Imp Pl P2) => "desadormeced" ;
    VP (Imp Pl P3) => "desadormezcan" ;
    VP (Pass Sg Masc) => "desadormecido" ;
    VP (Pass Sg Fem) => "desadormecida" ;
    VP (Pass Pl Masc) => "desadormecidos" ;
    VP (Pass Pl Fem) => "desadormecidas"
    }
  } ;

lin desagradecer_V = verboV 
 {s = table {
    VI Infn => "desagradecer" ;
    VI Ger => "desagradeciendo" ;
    VI Part => "desagradecido" ;
    VP (Pres Ind Sg P1) => "desagradezco" ;
    VP (Pres Ind Sg P2) => "desagradeces" ;
    VP (Pres Ind Sg P3) => "desagradece" ;
    VP (Pres Ind Pl P1) => "desagradecemos" ;
    VP (Pres Ind Pl P2) => "desagradecéis" ;
    VP (Pres Ind Pl P3) => "desagradecen" ;
    VP (Pres Subj Sg P1) => "desagradezca" ;
    VP (Pres Subj Sg P2) => "desagradezcas" ;
    VP (Pres Subj Sg P3) => "desagradezca" ;
    VP (Pres Subj Pl P1) => "desagradezcamos" ;
    VP (Pres Subj Pl P2) => "desagradezcáis" ;
    VP (Pres Subj Pl P3) => "desagradezcan" ;
    VP (Impf Ind Sg P1) => "desagradecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desagradecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desagradecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desagradecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desagradecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desagradecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desagradeciera" ; "desagradeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desagradecieras" ; "desagradecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desagradeciera" ; "desagradeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desagradeciéramos" ; "desagradeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desagradecierais" ; "desagradecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desagradecieran" ; "desagradeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desagradecí" ;--# notpresent
    VP (Pret Sg P2) => "desagradeciste" ;--# notpresent
    VP (Pret Sg P3) => "desagradeció" ;--# notpresent
    VP (Pret Pl P1) => "desagradecimos" ;--# notpresent
    VP (Pret Pl P2) => "desagradecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desagradecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desagradeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desagradecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desagradecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desagradeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desagradeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desagradecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desagradeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desagradecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desagradeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desagradeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desagradeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desagradecieren" ;--# notpresent
    VP (Cond Sg P1) => "desagradecería" ;--# notpresent
    VP (Cond Sg P2) => "desagradecerías" ;--# notpresent
    VP (Cond Sg P3) => "desagradecería" ;--# notpresent
    VP (Cond Pl P1) => "desagradeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desagradeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desagradecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desagradece" ;
    VP (Imp Sg P3) => "desagradezca" ;
    VP (Imp Pl P1) => "desagradezcamos" ;
    VP (Imp Pl P2) => "desagradeced" ;
    VP (Imp Pl P3) => "desagradezcan" ;
    VP (Pass Sg Masc) => "desagradecido" ;
    VP (Pass Sg Fem) => "desagradecida" ;
    VP (Pass Pl Masc) => "desagradecidos" ;
    VP (Pass Pl Fem) => "desagradecidas"
    }
  } ;

lin desaparecer_V = verboV 
 {s = table {
    VI Infn => "desaparecer" ;
    VI Ger => "desapareciendo" ;
    VI Part => "desaparecido" ;
    VP (Pres Ind Sg P1) => "desaparezco" ;
    VP (Pres Ind Sg P2) => "desapareces" ;
    VP (Pres Ind Sg P3) => "desaparece" ;
    VP (Pres Ind Pl P1) => "desaparecemos" ;
    VP (Pres Ind Pl P2) => "desaparecéis" ;
    VP (Pres Ind Pl P3) => "desaparecen" ;
    VP (Pres Subj Sg P1) => "desaparezca" ;
    VP (Pres Subj Sg P2) => "desaparezcas" ;
    VP (Pres Subj Sg P3) => "desaparezca" ;
    VP (Pres Subj Pl P1) => "desaparezcamos" ;
    VP (Pres Subj Pl P2) => "desaparezcáis" ;
    VP (Pres Subj Pl P3) => "desaparezcan" ;
    VP (Impf Ind Sg P1) => "desaparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desaparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desaparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desaparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desaparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desaparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desapareciera" ; "desapareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desaparecieras" ; "desaparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desapareciera" ; "desapareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desapareciéramos" ; "desapareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desaparecierais" ; "desaparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desaparecieran" ; "desapareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desaparecí" ;--# notpresent
    VP (Pret Sg P2) => "desapareciste" ;--# notpresent
    VP (Pret Sg P3) => "desapareció" ;--# notpresent
    VP (Pret Pl P1) => "desaparecimos" ;--# notpresent
    VP (Pret Pl P2) => "desaparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desaparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desapareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desaparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desaparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desapareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desapareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desaparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desapareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desaparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desapareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desapareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desapareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desaparecieren" ;--# notpresent
    VP (Cond Sg P1) => "desaparecería" ;--# notpresent
    VP (Cond Sg P2) => "desaparecerías" ;--# notpresent
    VP (Cond Sg P3) => "desaparecería" ;--# notpresent
    VP (Cond Pl P1) => "desapareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desapareceríais" ;--# notpresent
    VP (Cond Pl P3) => "desaparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desaparece" ;
    VP (Imp Sg P3) => "desaparezca" ;
    VP (Imp Pl P1) => "desaparezcamos" ;
    VP (Imp Pl P2) => "desapareced" ;
    VP (Imp Pl P3) => "desaparezcan" ;
    VP (Pass Sg Masc) => "desaparecido" ;
    VP (Pass Sg Fem) => "desaparecida" ;
    VP (Pass Pl Masc) => "desaparecidos" ;
    VP (Pass Pl Fem) => "desaparecidas"
    }
  } ;

lin desbravecer_V = verboV 
 {s = table {
    VI Infn => "desbravecer" ;
    VI Ger => "desbraveciendo" ;
    VI Part => "desbravecido" ;
    VP (Pres Ind Sg P1) => "desbravezco" ;
    VP (Pres Ind Sg P2) => "desbraveces" ;
    VP (Pres Ind Sg P3) => "desbravece" ;
    VP (Pres Ind Pl P1) => "desbravecemos" ;
    VP (Pres Ind Pl P2) => "desbravecéis" ;
    VP (Pres Ind Pl P3) => "desbravecen" ;
    VP (Pres Subj Sg P1) => "desbravezca" ;
    VP (Pres Subj Sg P2) => "desbravezcas" ;
    VP (Pres Subj Sg P3) => "desbravezca" ;
    VP (Pres Subj Pl P1) => "desbravezcamos" ;
    VP (Pres Subj Pl P2) => "desbravezcáis" ;
    VP (Pres Subj Pl P3) => "desbravezcan" ;
    VP (Impf Ind Sg P1) => "desbravecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desbravecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desbravecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desbravecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desbravecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desbravecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desbraveciera" ; "desbraveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desbravecieras" ; "desbravecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desbraveciera" ; "desbraveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desbraveciéramos" ; "desbraveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desbravecierais" ; "desbravecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desbravecieran" ; "desbraveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desbravecí" ;--# notpresent
    VP (Pret Sg P2) => "desbraveciste" ;--# notpresent
    VP (Pret Sg P3) => "desbraveció" ;--# notpresent
    VP (Pret Pl P1) => "desbravecimos" ;--# notpresent
    VP (Pret Pl P2) => "desbravecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desbravecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desbraveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desbravecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desbravecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desbraveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desbraveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desbravecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desbraveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desbravecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desbraveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desbraveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desbraveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desbravecieren" ;--# notpresent
    VP (Cond Sg P1) => "desbravecería" ;--# notpresent
    VP (Cond Sg P2) => "desbravecerías" ;--# notpresent
    VP (Cond Sg P3) => "desbravecería" ;--# notpresent
    VP (Cond Pl P1) => "desbraveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desbraveceríais" ;--# notpresent
    VP (Cond Pl P3) => "desbravecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desbravece" ;
    VP (Imp Sg P3) => "desbravezca" ;
    VP (Imp Pl P1) => "desbravezcamos" ;
    VP (Imp Pl P2) => "desbraveced" ;
    VP (Imp Pl P3) => "desbravezcan" ;
    VP (Pass Sg Masc) => "desbravecido" ;
    VP (Pass Sg Fem) => "desbravecida" ;
    VP (Pass Pl Masc) => "desbravecidos" ;
    VP (Pass Pl Fem) => "desbravecidas"
    }
  } ;

lin descaecer_V = verboV 
 {s = table {
    VI Infn => "descaecer" ;
    VI Ger => "descaeciendo" ;
    VI Part => "descaecido" ;
    VP (Pres Ind Sg P1) => "descaezco" ;
    VP (Pres Ind Sg P2) => "descaeces" ;
    VP (Pres Ind Sg P3) => "descaece" ;
    VP (Pres Ind Pl P1) => "descaecemos" ;
    VP (Pres Ind Pl P2) => "descaecéis" ;
    VP (Pres Ind Pl P3) => "descaecen" ;
    VP (Pres Subj Sg P1) => "descaezca" ;
    VP (Pres Subj Sg P2) => "descaezcas" ;
    VP (Pres Subj Sg P3) => "descaezca" ;
    VP (Pres Subj Pl P1) => "descaezcamos" ;
    VP (Pres Subj Pl P2) => "descaezcáis" ;
    VP (Pres Subj Pl P3) => "descaezcan" ;
    VP (Impf Ind Sg P1) => "descaecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descaecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descaecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descaecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descaecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descaecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descaeciera" ; "descaeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descaecieras" ; "descaecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descaeciera" ; "descaeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descaeciéramos" ; "descaeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descaecierais" ; "descaecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descaecieran" ; "descaeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "descaecí" ;--# notpresent
    VP (Pret Sg P2) => "descaeciste" ;--# notpresent
    VP (Pret Sg P3) => "descaeció" ;--# notpresent
    VP (Pret Pl P1) => "descaecimos" ;--# notpresent
    VP (Pret Pl P2) => "descaecisteis" ;--# notpresent
    VP (Pret Pl P3) => "descaecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descaeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descaecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descaecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descaeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descaeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descaecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descaeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descaecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descaeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descaeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descaeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descaecieren" ;--# notpresent
    VP (Cond Sg P1) => "descaecería" ;--# notpresent
    VP (Cond Sg P2) => "descaecerías" ;--# notpresent
    VP (Cond Sg P3) => "descaecería" ;--# notpresent
    VP (Cond Pl P1) => "descaeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "descaeceríais" ;--# notpresent
    VP (Cond Pl P3) => "descaecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descaece" ;
    VP (Imp Sg P3) => "descaezca" ;
    VP (Imp Pl P1) => "descaezcamos" ;
    VP (Imp Pl P2) => "descaeced" ;
    VP (Imp Pl P3) => "descaezcan" ;
    VP (Pass Sg Masc) => "descaecido" ;
    VP (Pass Sg Fem) => "descaecida" ;
    VP (Pass Pl Masc) => "descaecidos" ;
    VP (Pass Pl Fem) => "descaecidas"
    }
  } ;

lin desembravecer_V = verboV 
 {s = table {
    VI Infn => "desembravecer" ;
    VI Ger => "desembraveciendo" ;
    VI Part => "desembravecido" ;
    VP (Pres Ind Sg P1) => "desembravezco" ;
    VP (Pres Ind Sg P2) => "desembraveces" ;
    VP (Pres Ind Sg P3) => "desembravece" ;
    VP (Pres Ind Pl P1) => "desembravecemos" ;
    VP (Pres Ind Pl P2) => "desembravecéis" ;
    VP (Pres Ind Pl P3) => "desembravecen" ;
    VP (Pres Subj Sg P1) => "desembravezca" ;
    VP (Pres Subj Sg P2) => "desembravezcas" ;
    VP (Pres Subj Sg P3) => "desembravezca" ;
    VP (Pres Subj Pl P1) => "desembravezcamos" ;
    VP (Pres Subj Pl P2) => "desembravezcáis" ;
    VP (Pres Subj Pl P3) => "desembravezcan" ;
    VP (Impf Ind Sg P1) => "desembravecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desembravecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desembravecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desembravecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desembravecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desembravecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desembraveciera" ; "desembraveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desembravecieras" ; "desembravecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desembraveciera" ; "desembraveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desembraveciéramos" ; "desembraveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desembravecierais" ; "desembravecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desembravecieran" ; "desembraveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desembravecí" ;--# notpresent
    VP (Pret Sg P2) => "desembraveciste" ;--# notpresent
    VP (Pret Sg P3) => "desembraveció" ;--# notpresent
    VP (Pret Pl P1) => "desembravecimos" ;--# notpresent
    VP (Pret Pl P2) => "desembravecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desembravecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desembraveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desembravecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desembravecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desembraveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desembraveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desembravecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desembraveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desembravecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desembraveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desembraveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desembraveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desembravecieren" ;--# notpresent
    VP (Cond Sg P1) => "desembravecería" ;--# notpresent
    VP (Cond Sg P2) => "desembravecerías" ;--# notpresent
    VP (Cond Sg P3) => "desembravecería" ;--# notpresent
    VP (Cond Pl P1) => "desembraveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desembraveceríais" ;--# notpresent
    VP (Cond Pl P3) => "desembravecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desembravece" ;
    VP (Imp Sg P3) => "desembravezca" ;
    VP (Imp Pl P1) => "desembravezcamos" ;
    VP (Imp Pl P2) => "desembraveced" ;
    VP (Imp Pl P3) => "desembravezcan" ;
    VP (Pass Sg Masc) => "desembravecido" ;
    VP (Pass Sg Fem) => "desembravecida" ;
    VP (Pass Pl Masc) => "desembravecidos" ;
    VP (Pass Pl Fem) => "desembravecidas"
    }
  } ;

lin desenfurecer_V = verboV 
 {s = table {
    VI Infn => "desenfurecer" ;
    VI Ger => "desenfureciendo" ;
    VI Part => "desenfurecido" ;
    VP (Pres Ind Sg P1) => "desenfurezco" ;
    VP (Pres Ind Sg P2) => "desenfureces" ;
    VP (Pres Ind Sg P3) => "desenfurece" ;
    VP (Pres Ind Pl P1) => "desenfurecemos" ;
    VP (Pres Ind Pl P2) => "desenfurecéis" ;
    VP (Pres Ind Pl P3) => "desenfurecen" ;
    VP (Pres Subj Sg P1) => "desenfurezca" ;
    VP (Pres Subj Sg P2) => "desenfurezcas" ;
    VP (Pres Subj Sg P3) => "desenfurezca" ;
    VP (Pres Subj Pl P1) => "desenfurezcamos" ;
    VP (Pres Subj Pl P2) => "desenfurezcáis" ;
    VP (Pres Subj Pl P3) => "desenfurezcan" ;
    VP (Impf Ind Sg P1) => "desenfurecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desenfurecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desenfurecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desenfurecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desenfurecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desenfurecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desenfureciera" ; "desenfureciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desenfurecieras" ; "desenfurecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desenfureciera" ; "desenfureciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desenfureciéramos" ; "desenfureciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desenfurecierais" ; "desenfurecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desenfurecieran" ; "desenfureciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desenfurecí" ;--# notpresent
    VP (Pret Sg P2) => "desenfureciste" ;--# notpresent
    VP (Pret Sg P3) => "desenfureció" ;--# notpresent
    VP (Pret Pl P1) => "desenfurecimos" ;--# notpresent
    VP (Pret Pl P2) => "desenfurecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desenfurecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desenfureceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desenfurecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desenfurecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desenfureceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desenfureceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desenfurecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desenfureciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desenfurecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desenfureciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desenfureciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desenfureciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desenfurecieren" ;--# notpresent
    VP (Cond Sg P1) => "desenfurecería" ;--# notpresent
    VP (Cond Sg P2) => "desenfurecerías" ;--# notpresent
    VP (Cond Sg P3) => "desenfurecería" ;--# notpresent
    VP (Cond Pl P1) => "desenfureceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desenfureceríais" ;--# notpresent
    VP (Cond Pl P3) => "desenfurecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desenfurece" ;
    VP (Imp Sg P3) => "desenfurezca" ;
    VP (Imp Pl P1) => "desenfurezcamos" ;
    VP (Imp Pl P2) => "desenfureced" ;
    VP (Imp Pl P3) => "desenfurezcan" ;
    VP (Pass Sg Masc) => "desenfurecido" ;
    VP (Pass Sg Fem) => "desenfurecida" ;
    VP (Pass Pl Masc) => "desenfurecidos" ;
    VP (Pass Pl Fem) => "desenfurecidas"
    }
  } ;

lin desenmohecer_V = verboV 
 {s = table {
    VI Infn => "desenmohecer" ;
    VI Ger => "desenmoheciendo" ;
    VI Part => "desenmohecido" ;
    VP (Pres Ind Sg P1) => "desenmohezco" ;
    VP (Pres Ind Sg P2) => "desenmoheces" ;
    VP (Pres Ind Sg P3) => "desenmohece" ;
    VP (Pres Ind Pl P1) => "desenmohecemos" ;
    VP (Pres Ind Pl P2) => "desenmohecéis" ;
    VP (Pres Ind Pl P3) => "desenmohecen" ;
    VP (Pres Subj Sg P1) => "desenmohezca" ;
    VP (Pres Subj Sg P2) => "desenmohezcas" ;
    VP (Pres Subj Sg P3) => "desenmohezca" ;
    VP (Pres Subj Pl P1) => "desenmohezcamos" ;
    VP (Pres Subj Pl P2) => "desenmohezcáis" ;
    VP (Pres Subj Pl P3) => "desenmohezcan" ;
    VP (Impf Ind Sg P1) => "desenmohecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desenmohecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desenmohecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desenmohecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desenmohecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desenmohecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desenmoheciera" ; "desenmoheciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desenmohecieras" ; "desenmohecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desenmoheciera" ; "desenmoheciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desenmoheciéramos" ; "desenmoheciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desenmohecierais" ; "desenmohecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desenmohecieran" ; "desenmoheciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desenmohecí" ;--# notpresent
    VP (Pret Sg P2) => "desenmoheciste" ;--# notpresent
    VP (Pret Sg P3) => "desenmoheció" ;--# notpresent
    VP (Pret Pl P1) => "desenmohecimos" ;--# notpresent
    VP (Pret Pl P2) => "desenmohecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desenmohecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desenmoheceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desenmohecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desenmohecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desenmoheceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desenmoheceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desenmohecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desenmoheciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desenmohecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desenmoheciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desenmoheciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desenmoheciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desenmohecieren" ;--# notpresent
    VP (Cond Sg P1) => "desenmohecería" ;--# notpresent
    VP (Cond Sg P2) => "desenmohecerías" ;--# notpresent
    VP (Cond Sg P3) => "desenmohecería" ;--# notpresent
    VP (Cond Pl P1) => "desenmoheceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desenmoheceríais" ;--# notpresent
    VP (Cond Pl P3) => "desenmohecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desenmohece" ;
    VP (Imp Sg P3) => "desenmohezca" ;
    VP (Imp Pl P1) => "desenmohezcamos" ;
    VP (Imp Pl P2) => "desenmoheced" ;
    VP (Imp Pl P3) => "desenmohezcan" ;
    VP (Pass Sg Masc) => "desenmohecido" ;
    VP (Pass Sg Fem) => "desenmohecida" ;
    VP (Pass Pl Masc) => "desenmohecidos" ;
    VP (Pass Pl Fem) => "desenmohecidas"
    }
  } ;

lin desenmudecer_V = verboV 
 {s = table {
    VI Infn => "desenmudecer" ;
    VI Ger => "desenmudeciendo" ;
    VI Part => "desenmudecido" ;
    VP (Pres Ind Sg P1) => "desenmudezco" ;
    VP (Pres Ind Sg P2) => "desenmudeces" ;
    VP (Pres Ind Sg P3) => "desenmudece" ;
    VP (Pres Ind Pl P1) => "desenmudecemos" ;
    VP (Pres Ind Pl P2) => "desenmudecéis" ;
    VP (Pres Ind Pl P3) => "desenmudecen" ;
    VP (Pres Subj Sg P1) => "desenmudezca" ;
    VP (Pres Subj Sg P2) => "desenmudezcas" ;
    VP (Pres Subj Sg P3) => "desenmudezca" ;
    VP (Pres Subj Pl P1) => "desenmudezcamos" ;
    VP (Pres Subj Pl P2) => "desenmudezcáis" ;
    VP (Pres Subj Pl P3) => "desenmudezcan" ;
    VP (Impf Ind Sg P1) => "desenmudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desenmudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desenmudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desenmudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desenmudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desenmudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desenmudeciera" ; "desenmudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desenmudecieras" ; "desenmudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desenmudeciera" ; "desenmudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desenmudeciéramos" ; "desenmudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desenmudecierais" ; "desenmudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desenmudecieran" ; "desenmudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desenmudecí" ;--# notpresent
    VP (Pret Sg P2) => "desenmudeciste" ;--# notpresent
    VP (Pret Sg P3) => "desenmudeció" ;--# notpresent
    VP (Pret Pl P1) => "desenmudecimos" ;--# notpresent
    VP (Pret Pl P2) => "desenmudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desenmudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desenmudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desenmudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desenmudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desenmudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desenmudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desenmudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desenmudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desenmudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desenmudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desenmudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desenmudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desenmudecieren" ;--# notpresent
    VP (Cond Sg P1) => "desenmudecería" ;--# notpresent
    VP (Cond Sg P2) => "desenmudecerías" ;--# notpresent
    VP (Cond Sg P3) => "desenmudecería" ;--# notpresent
    VP (Cond Pl P1) => "desenmudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desenmudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desenmudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desenmudece" ;
    VP (Imp Sg P3) => "desenmudezca" ;
    VP (Imp Pl P1) => "desenmudezcamos" ;
    VP (Imp Pl P2) => "desenmudeced" ;
    VP (Imp Pl P3) => "desenmudezcan" ;
    VP (Pass Sg Masc) => "desenmudecido" ;
    VP (Pass Sg Fem) => "desenmudecida" ;
    VP (Pass Pl Masc) => "desenmudecidos" ;
    VP (Pass Pl Fem) => "desenmudecidas"
    }
  } ;

lin desenrudecer_V = verboV 
 {s = table {
    VI Infn => "desenrudecer" ;
    VI Ger => "desenrudeciendo" ;
    VI Part => "desenrudecido" ;
    VP (Pres Ind Sg P1) => "desenrudezco" ;
    VP (Pres Ind Sg P2) => "desenrudeces" ;
    VP (Pres Ind Sg P3) => "desenrudece" ;
    VP (Pres Ind Pl P1) => "desenrudecemos" ;
    VP (Pres Ind Pl P2) => "desenrudecéis" ;
    VP (Pres Ind Pl P3) => "desenrudecen" ;
    VP (Pres Subj Sg P1) => "desenrudezca" ;
    VP (Pres Subj Sg P2) => "desenrudezcas" ;
    VP (Pres Subj Sg P3) => "desenrudezca" ;
    VP (Pres Subj Pl P1) => "desenrudezcamos" ;
    VP (Pres Subj Pl P2) => "desenrudezcáis" ;
    VP (Pres Subj Pl P3) => "desenrudezcan" ;
    VP (Impf Ind Sg P1) => "desenrudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desenrudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desenrudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desenrudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desenrudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desenrudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desenrudeciera" ; "desenrudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desenrudecieras" ; "desenrudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desenrudeciera" ; "desenrudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desenrudeciéramos" ; "desenrudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desenrudecierais" ; "desenrudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desenrudecieran" ; "desenrudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desenrudecí" ;--# notpresent
    VP (Pret Sg P2) => "desenrudeciste" ;--# notpresent
    VP (Pret Sg P3) => "desenrudeció" ;--# notpresent
    VP (Pret Pl P1) => "desenrudecimos" ;--# notpresent
    VP (Pret Pl P2) => "desenrudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desenrudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desenrudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desenrudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desenrudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desenrudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desenrudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desenrudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desenrudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desenrudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desenrudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desenrudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desenrudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desenrudecieren" ;--# notpresent
    VP (Cond Sg P1) => "desenrudecería" ;--# notpresent
    VP (Cond Sg P2) => "desenrudecerías" ;--# notpresent
    VP (Cond Sg P3) => "desenrudecería" ;--# notpresent
    VP (Cond Pl P1) => "desenrudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desenrudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desenrudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desenrudece" ;
    VP (Imp Sg P3) => "desenrudezca" ;
    VP (Imp Pl P1) => "desenrudezcamos" ;
    VP (Imp Pl P2) => "desenrudeced" ;
    VP (Imp Pl P3) => "desenrudezcan" ;
    VP (Pass Sg Masc) => "desenrudecido" ;
    VP (Pass Sg Fem) => "desenrudecida" ;
    VP (Pass Pl Masc) => "desenrudecidos" ;
    VP (Pass Pl Fem) => "desenrudecidas"
    }
  } ;

lin desensoberbecer_V = verboV 
 {s = table {
    VI Infn => "desensoberbecer" ;
    VI Ger => "desensoberbeciendo" ;
    VI Part => "desensoberbecido" ;
    VP (Pres Ind Sg P1) => "desensoberbezco" ;
    VP (Pres Ind Sg P2) => "desensoberbeces" ;
    VP (Pres Ind Sg P3) => "desensoberbece" ;
    VP (Pres Ind Pl P1) => "desensoberbecemos" ;
    VP (Pres Ind Pl P2) => "desensoberbecéis" ;
    VP (Pres Ind Pl P3) => "desensoberbecen" ;
    VP (Pres Subj Sg P1) => "desensoberbezca" ;
    VP (Pres Subj Sg P2) => "desensoberbezcas" ;
    VP (Pres Subj Sg P3) => "desensoberbezca" ;
    VP (Pres Subj Pl P1) => "desensoberbezcamos" ;
    VP (Pres Subj Pl P2) => "desensoberbezcáis" ;
    VP (Pres Subj Pl P3) => "desensoberbezcan" ;
    VP (Impf Ind Sg P1) => "desensoberbecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desensoberbecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desensoberbecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desensoberbecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desensoberbecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desensoberbecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desensoberbeciera" ; "desensoberbeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desensoberbecieras" ; "desensoberbecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desensoberbeciera" ; "desensoberbeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desensoberbeciéramos" ; "desensoberbeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desensoberbecierais" ; "desensoberbecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desensoberbecieran" ; "desensoberbeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desensoberbecí" ;--# notpresent
    VP (Pret Sg P2) => "desensoberbeciste" ;--# notpresent
    VP (Pret Sg P3) => "desensoberbeció" ;--# notpresent
    VP (Pret Pl P1) => "desensoberbecimos" ;--# notpresent
    VP (Pret Pl P2) => "desensoberbecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desensoberbecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desensoberbeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desensoberbecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desensoberbecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desensoberbeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desensoberbeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desensoberbecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desensoberbeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desensoberbecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desensoberbeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desensoberbeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desensoberbeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desensoberbecieren" ;--# notpresent
    VP (Cond Sg P1) => "desensoberbecería" ;--# notpresent
    VP (Cond Sg P2) => "desensoberbecerías" ;--# notpresent
    VP (Cond Sg P3) => "desensoberbecería" ;--# notpresent
    VP (Cond Pl P1) => "desensoberbeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desensoberbeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desensoberbecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desensoberbece" ;
    VP (Imp Sg P3) => "desensoberbezca" ;
    VP (Imp Pl P1) => "desensoberbezcamos" ;
    VP (Imp Pl P2) => "desensoberbeced" ;
    VP (Imp Pl P3) => "desensoberbezcan" ;
    VP (Pass Sg Masc) => "desensoberbecido" ;
    VP (Pass Sg Fem) => "desensoberbecida" ;
    VP (Pass Pl Masc) => "desensoberbecidos" ;
    VP (Pass Pl Fem) => "desensoberbecidas"
    }
  } ;

lin desentorpecer_V = verboV 
 {s = table {
    VI Infn => "desentorpecer" ;
    VI Ger => "desentorpeciendo" ;
    VI Part => "desentorpecido" ;
    VP (Pres Ind Sg P1) => "desentorpezco" ;
    VP (Pres Ind Sg P2) => "desentorpeces" ;
    VP (Pres Ind Sg P3) => "desentorpece" ;
    VP (Pres Ind Pl P1) => "desentorpecemos" ;
    VP (Pres Ind Pl P2) => "desentorpecéis" ;
    VP (Pres Ind Pl P3) => "desentorpecen" ;
    VP (Pres Subj Sg P1) => "desentorpezca" ;
    VP (Pres Subj Sg P2) => "desentorpezcas" ;
    VP (Pres Subj Sg P3) => "desentorpezca" ;
    VP (Pres Subj Pl P1) => "desentorpezcamos" ;
    VP (Pres Subj Pl P2) => "desentorpezcáis" ;
    VP (Pres Subj Pl P3) => "desentorpezcan" ;
    VP (Impf Ind Sg P1) => "desentorpecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desentorpecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desentorpecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desentorpecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desentorpecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desentorpecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desentorpeciera" ; "desentorpeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desentorpecieras" ; "desentorpecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desentorpeciera" ; "desentorpeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desentorpeciéramos" ; "desentorpeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desentorpecierais" ; "desentorpecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desentorpecieran" ; "desentorpeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desentorpecí" ;--# notpresent
    VP (Pret Sg P2) => "desentorpeciste" ;--# notpresent
    VP (Pret Sg P3) => "desentorpeció" ;--# notpresent
    VP (Pret Pl P1) => "desentorpecimos" ;--# notpresent
    VP (Pret Pl P2) => "desentorpecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desentorpecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desentorpeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desentorpecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desentorpecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desentorpeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desentorpeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desentorpecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desentorpeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desentorpecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desentorpeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desentorpeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desentorpeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desentorpecieren" ;--# notpresent
    VP (Cond Sg P1) => "desentorpecería" ;--# notpresent
    VP (Cond Sg P2) => "desentorpecerías" ;--# notpresent
    VP (Cond Sg P3) => "desentorpecería" ;--# notpresent
    VP (Cond Pl P1) => "desentorpeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desentorpeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desentorpecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desentorpece" ;
    VP (Imp Sg P3) => "desentorpezca" ;
    VP (Imp Pl P1) => "desentorpezcamos" ;
    VP (Imp Pl P2) => "desentorpeced" ;
    VP (Imp Pl P3) => "desentorpezcan" ;
    VP (Pass Sg Masc) => "desentorpecido" ;
    VP (Pass Sg Fem) => "desentorpecida" ;
    VP (Pass Pl Masc) => "desentorpecidos" ;
    VP (Pass Pl Fem) => "desentorpecidas"
    }
  } ;

lin desentumecer_V = verboV 
 {s = table {
    VI Infn => "desentumecer" ;
    VI Ger => "desentumeciendo" ;
    VI Part => "desentumecido" ;
    VP (Pres Ind Sg P1) => "desentumezco" ;
    VP (Pres Ind Sg P2) => "desentumeces" ;
    VP (Pres Ind Sg P3) => "desentumece" ;
    VP (Pres Ind Pl P1) => "desentumecemos" ;
    VP (Pres Ind Pl P2) => "desentumecéis" ;
    VP (Pres Ind Pl P3) => "desentumecen" ;
    VP (Pres Subj Sg P1) => "desentumezca" ;
    VP (Pres Subj Sg P2) => "desentumezcas" ;
    VP (Pres Subj Sg P3) => "desentumezca" ;
    VP (Pres Subj Pl P1) => "desentumezcamos" ;
    VP (Pres Subj Pl P2) => "desentumezcáis" ;
    VP (Pres Subj Pl P3) => "desentumezcan" ;
    VP (Impf Ind Sg P1) => "desentumecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desentumecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desentumecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desentumecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desentumecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desentumecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desentumeciera" ; "desentumeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desentumecieras" ; "desentumecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desentumeciera" ; "desentumeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desentumeciéramos" ; "desentumeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desentumecierais" ; "desentumecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desentumecieran" ; "desentumeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desentumecí" ;--# notpresent
    VP (Pret Sg P2) => "desentumeciste" ;--# notpresent
    VP (Pret Sg P3) => "desentumeció" ;--# notpresent
    VP (Pret Pl P1) => "desentumecimos" ;--# notpresent
    VP (Pret Pl P2) => "desentumecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desentumecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desentumeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desentumecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desentumecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desentumeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desentumeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desentumecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desentumeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desentumecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desentumeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desentumeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desentumeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desentumecieren" ;--# notpresent
    VP (Cond Sg P1) => "desentumecería" ;--# notpresent
    VP (Cond Sg P2) => "desentumecerías" ;--# notpresent
    VP (Cond Sg P3) => "desentumecería" ;--# notpresent
    VP (Cond Pl P1) => "desentumeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desentumeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desentumecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desentumece" ;
    VP (Imp Sg P3) => "desentumezca" ;
    VP (Imp Pl P1) => "desentumezcamos" ;
    VP (Imp Pl P2) => "desentumeced" ;
    VP (Imp Pl P3) => "desentumezcan" ;
    VP (Pass Sg Masc) => "desentumecido" ;
    VP (Pass Sg Fem) => "desentumecida" ;
    VP (Pass Pl Masc) => "desentumecidos" ;
    VP (Pass Pl Fem) => "desentumecidas"
    }
  } ;

lin desfallecer_V = verboV 
 {s = table {
    VI Infn => "desfallecer" ;
    VI Ger => "desfalleciendo" ;
    VI Part => "desfallecido" ;
    VP (Pres Ind Sg P1) => "desfallezco" ;
    VP (Pres Ind Sg P2) => "desfalleces" ;
    VP (Pres Ind Sg P3) => "desfallece" ;
    VP (Pres Ind Pl P1) => "desfallecemos" ;
    VP (Pres Ind Pl P2) => "desfallecéis" ;
    VP (Pres Ind Pl P3) => "desfallecen" ;
    VP (Pres Subj Sg P1) => "desfallezca" ;
    VP (Pres Subj Sg P2) => "desfallezcas" ;
    VP (Pres Subj Sg P3) => "desfallezca" ;
    VP (Pres Subj Pl P1) => "desfallezcamos" ;
    VP (Pres Subj Pl P2) => "desfallezcáis" ;
    VP (Pres Subj Pl P3) => "desfallezcan" ;
    VP (Impf Ind Sg P1) => "desfallecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desfallecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desfallecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desfallecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desfallecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desfallecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desfalleciera" ; "desfalleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desfallecieras" ; "desfallecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desfalleciera" ; "desfalleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desfalleciéramos" ; "desfalleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desfallecierais" ; "desfallecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desfallecieran" ; "desfalleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desfallecí" ;--# notpresent
    VP (Pret Sg P2) => "desfalleciste" ;--# notpresent
    VP (Pret Sg P3) => "desfalleció" ;--# notpresent
    VP (Pret Pl P1) => "desfallecimos" ;--# notpresent
    VP (Pret Pl P2) => "desfallecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desfallecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desfalleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desfallecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desfallecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desfalleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desfalleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desfallecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desfalleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desfallecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desfalleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desfalleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desfalleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desfallecieren" ;--# notpresent
    VP (Cond Sg P1) => "desfallecería" ;--# notpresent
    VP (Cond Sg P2) => "desfallecerías" ;--# notpresent
    VP (Cond Sg P3) => "desfallecería" ;--# notpresent
    VP (Cond Pl P1) => "desfalleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desfalleceríais" ;--# notpresent
    VP (Cond Pl P3) => "desfallecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desfallece" ;
    VP (Imp Sg P3) => "desfallezca" ;
    VP (Imp Pl P1) => "desfallezcamos" ;
    VP (Imp Pl P2) => "desfalleced" ;
    VP (Imp Pl P3) => "desfallezcan" ;
    VP (Pass Sg Masc) => "desfallecido" ;
    VP (Pass Sg Fem) => "desfallecida" ;
    VP (Pass Pl Masc) => "desfallecidos" ;
    VP (Pass Pl Fem) => "desfallecidas"
    }
  } ;

lin desfavorecer_V = verboV 
 {s = table {
    VI Infn => "desfavorecer" ;
    VI Ger => "desfavoreciendo" ;
    VI Part => "desfavorecido" ;
    VP (Pres Ind Sg P1) => "desfavorezco" ;
    VP (Pres Ind Sg P2) => "desfavoreces" ;
    VP (Pres Ind Sg P3) => "desfavorece" ;
    VP (Pres Ind Pl P1) => "desfavorecemos" ;
    VP (Pres Ind Pl P2) => "desfavorecéis" ;
    VP (Pres Ind Pl P3) => "desfavorecen" ;
    VP (Pres Subj Sg P1) => "desfavorezca" ;
    VP (Pres Subj Sg P2) => "desfavorezcas" ;
    VP (Pres Subj Sg P3) => "desfavorezca" ;
    VP (Pres Subj Pl P1) => "desfavorezcamos" ;
    VP (Pres Subj Pl P2) => "desfavorezcáis" ;
    VP (Pres Subj Pl P3) => "desfavorezcan" ;
    VP (Impf Ind Sg P1) => "desfavorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desfavorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desfavorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desfavorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desfavorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desfavorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desfavoreciera" ; "desfavoreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desfavorecieras" ; "desfavorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desfavoreciera" ; "desfavoreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desfavoreciéramos" ; "desfavoreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desfavorecierais" ; "desfavorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desfavorecieran" ; "desfavoreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desfavorecí" ;--# notpresent
    VP (Pret Sg P2) => "desfavoreciste" ;--# notpresent
    VP (Pret Sg P3) => "desfavoreció" ;--# notpresent
    VP (Pret Pl P1) => "desfavorecimos" ;--# notpresent
    VP (Pret Pl P2) => "desfavorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desfavorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desfavoreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desfavorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desfavorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desfavoreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desfavoreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desfavorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desfavoreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desfavorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desfavoreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desfavoreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desfavoreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desfavorecieren" ;--# notpresent
    VP (Cond Sg P1) => "desfavorecería" ;--# notpresent
    VP (Cond Sg P2) => "desfavorecerías" ;--# notpresent
    VP (Cond Sg P3) => "desfavorecería" ;--# notpresent
    VP (Cond Pl P1) => "desfavoreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desfavoreceríais" ;--# notpresent
    VP (Cond Pl P3) => "desfavorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desfavorece" ;
    VP (Imp Sg P3) => "desfavorezca" ;
    VP (Imp Pl P1) => "desfavorezcamos" ;
    VP (Imp Pl P2) => "desfavoreced" ;
    VP (Imp Pl P3) => "desfavorezcan" ;
    VP (Pass Sg Masc) => "desfavorecido" ;
    VP (Pass Sg Fem) => "desfavorecida" ;
    VP (Pass Pl Masc) => "desfavorecidos" ;
    VP (Pass Pl Fem) => "desfavorecidas"
    }
  } ;

lin desflorecer_V = verboV 
 {s = table {
    VI Infn => "desflorecer" ;
    VI Ger => "desfloreciendo" ;
    VI Part => "desflorecido" ;
    VP (Pres Ind Sg P1) => "desflorezco" ;
    VP (Pres Ind Sg P2) => "desfloreces" ;
    VP (Pres Ind Sg P3) => "desflorece" ;
    VP (Pres Ind Pl P1) => "desflorecemos" ;
    VP (Pres Ind Pl P2) => "desflorecéis" ;
    VP (Pres Ind Pl P3) => "desflorecen" ;
    VP (Pres Subj Sg P1) => "desflorezca" ;
    VP (Pres Subj Sg P2) => "desflorezcas" ;
    VP (Pres Subj Sg P3) => "desflorezca" ;
    VP (Pres Subj Pl P1) => "desflorezcamos" ;
    VP (Pres Subj Pl P2) => "desflorezcáis" ;
    VP (Pres Subj Pl P3) => "desflorezcan" ;
    VP (Impf Ind Sg P1) => "desflorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desflorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desflorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desflorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desflorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desflorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desfloreciera" ; "desfloreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desflorecieras" ; "desflorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desfloreciera" ; "desfloreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desfloreciéramos" ; "desfloreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desflorecierais" ; "desflorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desflorecieran" ; "desfloreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desflorecí" ;--# notpresent
    VP (Pret Sg P2) => "desfloreciste" ;--# notpresent
    VP (Pret Sg P3) => "desfloreció" ;--# notpresent
    VP (Pret Pl P1) => "desflorecimos" ;--# notpresent
    VP (Pret Pl P2) => "desflorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desflorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desfloreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desflorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desflorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desfloreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desfloreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desflorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desfloreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desflorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desfloreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desfloreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desfloreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desflorecieren" ;--# notpresent
    VP (Cond Sg P1) => "desflorecería" ;--# notpresent
    VP (Cond Sg P2) => "desflorecerías" ;--# notpresent
    VP (Cond Sg P3) => "desflorecería" ;--# notpresent
    VP (Cond Pl P1) => "desfloreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desfloreceríais" ;--# notpresent
    VP (Cond Pl P3) => "desflorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desflorece" ;
    VP (Imp Sg P3) => "desflorezca" ;
    VP (Imp Pl P1) => "desflorezcamos" ;
    VP (Imp Pl P2) => "desfloreced" ;
    VP (Imp Pl P3) => "desflorezcan" ;
    VP (Pass Sg Masc) => "desflorecido" ;
    VP (Pass Sg Fem) => "desflorecida" ;
    VP (Pass Pl Masc) => "desflorecidos" ;
    VP (Pass Pl Fem) => "desflorecidas"
    }
  } ;

lin desfortalecer_V = verboV 
 {s = table {
    VI Infn => "desfortalecer" ;
    VI Ger => "desfortaleciendo" ;
    VI Part => "desfortalecido" ;
    VP (Pres Ind Sg P1) => "desfortalezco" ;
    VP (Pres Ind Sg P2) => "desfortaleces" ;
    VP (Pres Ind Sg P3) => "desfortalece" ;
    VP (Pres Ind Pl P1) => "desfortalecemos" ;
    VP (Pres Ind Pl P2) => "desfortalecéis" ;
    VP (Pres Ind Pl P3) => "desfortalecen" ;
    VP (Pres Subj Sg P1) => "desfortalezca" ;
    VP (Pres Subj Sg P2) => "desfortalezcas" ;
    VP (Pres Subj Sg P3) => "desfortalezca" ;
    VP (Pres Subj Pl P1) => "desfortalezcamos" ;
    VP (Pres Subj Pl P2) => "desfortalezcáis" ;
    VP (Pres Subj Pl P3) => "desfortalezcan" ;
    VP (Impf Ind Sg P1) => "desfortalecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desfortalecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desfortalecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desfortalecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desfortalecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desfortalecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desfortaleciera" ; "desfortaleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desfortalecieras" ; "desfortalecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desfortaleciera" ; "desfortaleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desfortaleciéramos" ; "desfortaleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desfortalecierais" ; "desfortalecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desfortalecieran" ; "desfortaleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desfortalecí" ;--# notpresent
    VP (Pret Sg P2) => "desfortaleciste" ;--# notpresent
    VP (Pret Sg P3) => "desfortaleció" ;--# notpresent
    VP (Pret Pl P1) => "desfortalecimos" ;--# notpresent
    VP (Pret Pl P2) => "desfortalecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desfortalecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desfortaleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desfortalecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desfortalecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desfortaleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desfortaleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desfortalecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desfortaleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desfortalecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desfortaleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desfortaleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desfortaleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desfortalecieren" ;--# notpresent
    VP (Cond Sg P1) => "desfortalecería" ;--# notpresent
    VP (Cond Sg P2) => "desfortalecerías" ;--# notpresent
    VP (Cond Sg P3) => "desfortalecería" ;--# notpresent
    VP (Cond Pl P1) => "desfortaleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desfortaleceríais" ;--# notpresent
    VP (Cond Pl P3) => "desfortalecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desfortalece" ;
    VP (Imp Sg P3) => "desfortalezca" ;
    VP (Imp Pl P1) => "desfortalezcamos" ;
    VP (Imp Pl P2) => "desfortaleced" ;
    VP (Imp Pl P3) => "desfortalezcan" ;
    VP (Pass Sg Masc) => "desfortalecido" ;
    VP (Pass Sg Fem) => "desfortalecida" ;
    VP (Pass Pl Masc) => "desfortalecidos" ;
    VP (Pass Pl Fem) => "desfortalecidas"
    }
  } ;

lin desguarnecer_V = verboV 
 {s = table {
    VI Infn => "desguarnecer" ;
    VI Ger => "desguarneciendo" ;
    VI Part => "desguarnecido" ;
    VP (Pres Ind Sg P1) => "desguarnezco" ;
    VP (Pres Ind Sg P2) => "desguarneces" ;
    VP (Pres Ind Sg P3) => "desguarnece" ;
    VP (Pres Ind Pl P1) => "desguarnecemos" ;
    VP (Pres Ind Pl P2) => "desguarnecéis" ;
    VP (Pres Ind Pl P3) => "desguarnecen" ;
    VP (Pres Subj Sg P1) => "desguarnezca" ;
    VP (Pres Subj Sg P2) => "desguarnezcas" ;
    VP (Pres Subj Sg P3) => "desguarnezca" ;
    VP (Pres Subj Pl P1) => "desguarnezcamos" ;
    VP (Pres Subj Pl P2) => "desguarnezcáis" ;
    VP (Pres Subj Pl P3) => "desguarnezcan" ;
    VP (Impf Ind Sg P1) => "desguarnecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desguarnecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desguarnecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desguarnecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desguarnecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desguarnecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desguarneciera" ; "desguarneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desguarnecieras" ; "desguarnecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desguarneciera" ; "desguarneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desguarneciéramos" ; "desguarneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desguarnecierais" ; "desguarnecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desguarnecieran" ; "desguarneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desguarnecí" ;--# notpresent
    VP (Pret Sg P2) => "desguarneciste" ;--# notpresent
    VP (Pret Sg P3) => "desguarneció" ;--# notpresent
    VP (Pret Pl P1) => "desguarnecimos" ;--# notpresent
    VP (Pret Pl P2) => "desguarnecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desguarnecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desguarneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desguarnecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desguarnecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desguarneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desguarneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desguarnecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desguarneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desguarnecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desguarneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desguarneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desguarneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desguarnecieren" ;--# notpresent
    VP (Cond Sg P1) => "desguarnecería" ;--# notpresent
    VP (Cond Sg P2) => "desguarnecerías" ;--# notpresent
    VP (Cond Sg P3) => "desguarnecería" ;--# notpresent
    VP (Cond Pl P1) => "desguarneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desguarneceríais" ;--# notpresent
    VP (Cond Pl P3) => "desguarnecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desguarnece" ;
    VP (Imp Sg P3) => "desguarnezca" ;
    VP (Imp Pl P1) => "desguarnezcamos" ;
    VP (Imp Pl P2) => "desguarneced" ;
    VP (Imp Pl P3) => "desguarnezcan" ;
    VP (Pass Sg Masc) => "desguarnecido" ;
    VP (Pass Sg Fem) => "desguarnecida" ;
    VP (Pass Pl Masc) => "desguarnecidos" ;
    VP (Pass Pl Fem) => "desguarnecidas"
    }
  } ;

lin deshumedecer_V = verboV 
 {s = table {
    VI Infn => "deshumedecer" ;
    VI Ger => "deshumedeciendo" ;
    VI Part => "deshumedecido" ;
    VP (Pres Ind Sg P1) => "deshumedezco" ;
    VP (Pres Ind Sg P2) => "deshumedeces" ;
    VP (Pres Ind Sg P3) => "deshumedece" ;
    VP (Pres Ind Pl P1) => "deshumedecemos" ;
    VP (Pres Ind Pl P2) => "deshumedecéis" ;
    VP (Pres Ind Pl P3) => "deshumedecen" ;
    VP (Pres Subj Sg P1) => "deshumedezca" ;
    VP (Pres Subj Sg P2) => "deshumedezcas" ;
    VP (Pres Subj Sg P3) => "deshumedezca" ;
    VP (Pres Subj Pl P1) => "deshumedezcamos" ;
    VP (Pres Subj Pl P2) => "deshumedezcáis" ;
    VP (Pres Subj Pl P3) => "deshumedezcan" ;
    VP (Impf Ind Sg P1) => "deshumedecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "deshumedecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "deshumedecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deshumedecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deshumedecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deshumedecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"deshumedeciera" ; "deshumedeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"deshumedecieras" ; "deshumedecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"deshumedeciera" ; "deshumedeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"deshumedeciéramos" ; "deshumedeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"deshumedecierais" ; "deshumedecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"deshumedecieran" ; "deshumedeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "deshumedecí" ;--# notpresent
    VP (Pret Sg P2) => "deshumedeciste" ;--# notpresent
    VP (Pret Sg P3) => "deshumedeció" ;--# notpresent
    VP (Pret Pl P1) => "deshumedecimos" ;--# notpresent
    VP (Pret Pl P2) => "deshumedecisteis" ;--# notpresent
    VP (Pret Pl P3) => "deshumedecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "deshumedeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deshumedecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deshumedecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "deshumedeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "deshumedeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deshumedecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "deshumedeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "deshumedecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "deshumedeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "deshumedeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "deshumedeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "deshumedecieren" ;--# notpresent
    VP (Cond Sg P1) => "deshumedecería" ;--# notpresent
    VP (Cond Sg P2) => "deshumedecerías" ;--# notpresent
    VP (Cond Sg P3) => "deshumedecería" ;--# notpresent
    VP (Cond Pl P1) => "deshumedeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "deshumedeceríais" ;--# notpresent
    VP (Cond Pl P3) => "deshumedecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deshumedece" ;
    VP (Imp Sg P3) => "deshumedezca" ;
    VP (Imp Pl P1) => "deshumedezcamos" ;
    VP (Imp Pl P2) => "deshumedeced" ;
    VP (Imp Pl P3) => "deshumedezcan" ;
    VP (Pass Sg Masc) => "deshumedecido" ;
    VP (Pass Sg Fem) => "deshumedecida" ;
    VP (Pass Pl Masc) => "deshumedecidos" ;
    VP (Pass Pl Fem) => "deshumedecidas"
    }
  } ;

lin desmerecer_V = verboV 
 {s = table {
    VI Infn => "desmerecer" ;
    VI Ger => "desmereciendo" ;
    VI Part => "desmerecido" ;
    VP (Pres Ind Sg P1) => "desmerezco" ;
    VP (Pres Ind Sg P2) => "desmereces" ;
    VP (Pres Ind Sg P3) => "desmerece" ;
    VP (Pres Ind Pl P1) => "desmerecemos" ;
    VP (Pres Ind Pl P2) => "desmerecéis" ;
    VP (Pres Ind Pl P3) => "desmerecen" ;
    VP (Pres Subj Sg P1) => "desmerezca" ;
    VP (Pres Subj Sg P2) => "desmerezcas" ;
    VP (Pres Subj Sg P3) => "desmerezca" ;
    VP (Pres Subj Pl P1) => "desmerezcamos" ;
    VP (Pres Subj Pl P2) => "desmerezcáis" ;
    VP (Pres Subj Pl P3) => "desmerezcan" ;
    VP (Impf Ind Sg P1) => "desmerecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmerecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmerecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmerecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmerecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmerecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmereciera" ; "desmereciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmerecieras" ; "desmerecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmereciera" ; "desmereciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmereciéramos" ; "desmereciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmerecierais" ; "desmerecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmerecieran" ; "desmereciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desmerecí" ;--# notpresent
    VP (Pret Sg P2) => "desmereciste" ;--# notpresent
    VP (Pret Sg P3) => "desmereció" ;--# notpresent
    VP (Pret Pl P1) => "desmerecimos" ;--# notpresent
    VP (Pret Pl P2) => "desmerecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desmerecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmereceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmerecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmerecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmereceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmereceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmerecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmereciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmerecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmereciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmereciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmereciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmerecieren" ;--# notpresent
    VP (Cond Sg P1) => "desmerecería" ;--# notpresent
    VP (Cond Sg P2) => "desmerecerías" ;--# notpresent
    VP (Cond Sg P3) => "desmerecería" ;--# notpresent
    VP (Cond Pl P1) => "desmereceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmereceríais" ;--# notpresent
    VP (Cond Pl P3) => "desmerecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmerece" ;
    VP (Imp Sg P3) => "desmerezca" ;
    VP (Imp Pl P1) => "desmerezcamos" ;
    VP (Imp Pl P2) => "desmereced" ;
    VP (Imp Pl P3) => "desmerezcan" ;
    VP (Pass Sg Masc) => "desmerecido" ;
    VP (Pass Sg Fem) => "desmerecida" ;
    VP (Pass Pl Masc) => "desmerecidos" ;
    VP (Pass Pl Fem) => "desmerecidas"
    }
  } ;

lin desobedecer_V = verboV 
 {s = table {
    VI Infn => "desobedecer" ;
    VI Ger => "desobedeciendo" ;
    VI Part => "desobedecido" ;
    VP (Pres Ind Sg P1) => "desobedezco" ;
    VP (Pres Ind Sg P2) => "desobedeces" ;
    VP (Pres Ind Sg P3) => "desobedece" ;
    VP (Pres Ind Pl P1) => "desobedecemos" ;
    VP (Pres Ind Pl P2) => "desobedecéis" ;
    VP (Pres Ind Pl P3) => "desobedecen" ;
    VP (Pres Subj Sg P1) => "desobedezca" ;
    VP (Pres Subj Sg P2) => "desobedezcas" ;
    VP (Pres Subj Sg P3) => "desobedezca" ;
    VP (Pres Subj Pl P1) => "desobedezcamos" ;
    VP (Pres Subj Pl P2) => "desobedezcáis" ;
    VP (Pres Subj Pl P3) => "desobedezcan" ;
    VP (Impf Ind Sg P1) => "desobedecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desobedecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desobedecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desobedecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desobedecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desobedecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desobedeciera" ; "desobedeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desobedecieras" ; "desobedecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desobedeciera" ; "desobedeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desobedeciéramos" ; "desobedeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desobedecierais" ; "desobedecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desobedecieran" ; "desobedeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desobedecí" ;--# notpresent
    VP (Pret Sg P2) => "desobedeciste" ;--# notpresent
    VP (Pret Sg P3) => "desobedeció" ;--# notpresent
    VP (Pret Pl P1) => "desobedecimos" ;--# notpresent
    VP (Pret Pl P2) => "desobedecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desobedecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desobedeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desobedecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desobedecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desobedeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desobedeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desobedecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desobedeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desobedecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desobedeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desobedeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desobedeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desobedecieren" ;--# notpresent
    VP (Cond Sg P1) => "desobedecería" ;--# notpresent
    VP (Cond Sg P2) => "desobedecerías" ;--# notpresent
    VP (Cond Sg P3) => "desobedecería" ;--# notpresent
    VP (Cond Pl P1) => "desobedeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desobedeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desobedecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desobedece" ;
    VP (Imp Sg P3) => "desobedezca" ;
    VP (Imp Pl P1) => "desobedezcamos" ;
    VP (Imp Pl P2) => "desobedeced" ;
    VP (Imp Pl P3) => "desobedezcan" ;
    VP (Pass Sg Masc) => "desobedecido" ;
    VP (Pass Sg Fem) => "desobedecida" ;
    VP (Pass Pl Masc) => "desobedecidos" ;
    VP (Pass Pl Fem) => "desobedecidas"
    }
  } ;

lin desparecer_V = verboV 
 {s = table {
    VI Infn => "desparecer" ;
    VI Ger => "despareciendo" ;
    VI Part => "desparecido" ;
    VP (Pres Ind Sg P1) => "desparezco" ;
    VP (Pres Ind Sg P2) => "despareces" ;
    VP (Pres Ind Sg P3) => "desparece" ;
    VP (Pres Ind Pl P1) => "desparecemos" ;
    VP (Pres Ind Pl P2) => "desparecéis" ;
    VP (Pres Ind Pl P3) => "desparecen" ;
    VP (Pres Subj Sg P1) => "desparezca" ;
    VP (Pres Subj Sg P2) => "desparezcas" ;
    VP (Pres Subj Sg P3) => "desparezca" ;
    VP (Pres Subj Pl P1) => "desparezcamos" ;
    VP (Pres Subj Pl P2) => "desparezcáis" ;
    VP (Pres Subj Pl P3) => "desparezcan" ;
    VP (Impf Ind Sg P1) => "desparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despareciera" ; "despareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desparecieras" ; "desparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despareciera" ; "despareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despareciéramos" ; "despareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desparecierais" ; "desparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desparecieran" ; "despareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desparecí" ;--# notpresent
    VP (Pret Sg P2) => "despareciste" ;--# notpresent
    VP (Pret Sg P3) => "despareció" ;--# notpresent
    VP (Pret Pl P1) => "desparecimos" ;--# notpresent
    VP (Pret Pl P2) => "desparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "despareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "despareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "despareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desparecieren" ;--# notpresent
    VP (Cond Sg P1) => "desparecería" ;--# notpresent
    VP (Cond Sg P2) => "desparecerías" ;--# notpresent
    VP (Cond Sg P3) => "desparecería" ;--# notpresent
    VP (Cond Pl P1) => "despareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "despareceríais" ;--# notpresent
    VP (Cond Pl P3) => "desparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desparece" ;
    VP (Imp Sg P3) => "desparezca" ;
    VP (Imp Pl P1) => "desparezcamos" ;
    VP (Imp Pl P2) => "despareced" ;
    VP (Imp Pl P3) => "desparezcan" ;
    VP (Pass Sg Masc) => "desparecido" ;
    VP (Pass Sg Fem) => "desparecida" ;
    VP (Pass Pl Masc) => "desparecidos" ;
    VP (Pass Pl Fem) => "desparecidas"
    }
  } ;

lin desvanecer_V = verboV 
 {s = table {
    VI Infn => "desvanecer" ;
    VI Ger => "desvaneciendo" ;
    VI Part => "desvanecido" ;
    VP (Pres Ind Sg P1) => "desvanezco" ;
    VP (Pres Ind Sg P2) => "desvaneces" ;
    VP (Pres Ind Sg P3) => "desvanece" ;
    VP (Pres Ind Pl P1) => "desvanecemos" ;
    VP (Pres Ind Pl P2) => "desvanecéis" ;
    VP (Pres Ind Pl P3) => "desvanecen" ;
    VP (Pres Subj Sg P1) => "desvanezca" ;
    VP (Pres Subj Sg P2) => "desvanezcas" ;
    VP (Pres Subj Sg P3) => "desvanezca" ;
    VP (Pres Subj Pl P1) => "desvanezcamos" ;
    VP (Pres Subj Pl P2) => "desvanezcáis" ;
    VP (Pres Subj Pl P3) => "desvanezcan" ;
    VP (Impf Ind Sg P1) => "desvanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desvanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desvanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desvanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desvanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desvanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desvaneciera" ; "desvaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desvanecieras" ; "desvanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desvaneciera" ; "desvaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desvaneciéramos" ; "desvaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desvanecierais" ; "desvanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desvanecieran" ; "desvaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desvanecí" ;--# notpresent
    VP (Pret Sg P2) => "desvaneciste" ;--# notpresent
    VP (Pret Sg P3) => "desvaneció" ;--# notpresent
    VP (Pret Pl P1) => "desvanecimos" ;--# notpresent
    VP (Pret Pl P2) => "desvanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desvanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desvaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desvanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desvanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desvaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desvaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desvanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desvaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desvanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desvaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desvaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desvaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desvanecieren" ;--# notpresent
    VP (Cond Sg P1) => "desvanecería" ;--# notpresent
    VP (Cond Sg P2) => "desvanecerías" ;--# notpresent
    VP (Cond Sg P3) => "desvanecería" ;--# notpresent
    VP (Cond Pl P1) => "desvaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desvaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "desvanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desvanece" ;
    VP (Imp Sg P3) => "desvanezca" ;
    VP (Imp Pl P1) => "desvanezcamos" ;
    VP (Imp Pl P2) => "desvaneced" ;
    VP (Imp Pl P3) => "desvanezcan" ;
    VP (Pass Sg Masc) => "desvanecido" ;
    VP (Pass Sg Fem) => "desvanecida" ;
    VP (Pass Pl Masc) => "desvanecidos" ;
    VP (Pass Pl Fem) => "desvanecidas"
    }
  } ;

lin embarbecer_V = verboV 
 {s = table {
    VI Infn => "embarbecer" ;
    VI Ger => "embarbeciendo" ;
    VI Part => "embarbecido" ;
    VP (Pres Ind Sg P1) => "embarbezco" ;
    VP (Pres Ind Sg P2) => "embarbeces" ;
    VP (Pres Ind Sg P3) => "embarbece" ;
    VP (Pres Ind Pl P1) => "embarbecemos" ;
    VP (Pres Ind Pl P2) => "embarbecéis" ;
    VP (Pres Ind Pl P3) => "embarbecen" ;
    VP (Pres Subj Sg P1) => "embarbezca" ;
    VP (Pres Subj Sg P2) => "embarbezcas" ;
    VP (Pres Subj Sg P3) => "embarbezca" ;
    VP (Pres Subj Pl P1) => "embarbezcamos" ;
    VP (Pres Subj Pl P2) => "embarbezcáis" ;
    VP (Pres Subj Pl P3) => "embarbezcan" ;
    VP (Impf Ind Sg P1) => "embarbecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embarbecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embarbecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embarbecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embarbecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embarbecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embarbeciera" ; "embarbeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embarbecieras" ; "embarbecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embarbeciera" ; "embarbeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embarbeciéramos" ; "embarbeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embarbecierais" ; "embarbecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embarbecieran" ; "embarbeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embarbecí" ;--# notpresent
    VP (Pret Sg P2) => "embarbeciste" ;--# notpresent
    VP (Pret Sg P3) => "embarbeció" ;--# notpresent
    VP (Pret Pl P1) => "embarbecimos" ;--# notpresent
    VP (Pret Pl P2) => "embarbecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embarbecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embarbeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embarbecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embarbecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embarbeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embarbeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embarbecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embarbeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embarbecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embarbeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embarbeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embarbeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embarbecieren" ;--# notpresent
    VP (Cond Sg P1) => "embarbecería" ;--# notpresent
    VP (Cond Sg P2) => "embarbecerías" ;--# notpresent
    VP (Cond Sg P3) => "embarbecería" ;--# notpresent
    VP (Cond Pl P1) => "embarbeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embarbeceríais" ;--# notpresent
    VP (Cond Pl P3) => "embarbecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embarbece" ;
    VP (Imp Sg P3) => "embarbezca" ;
    VP (Imp Pl P1) => "embarbezcamos" ;
    VP (Imp Pl P2) => "embarbeced" ;
    VP (Imp Pl P3) => "embarbezcan" ;
    VP (Pass Sg Masc) => "embarbecido" ;
    VP (Pass Sg Fem) => "embarbecida" ;
    VP (Pass Pl Masc) => "embarbecidos" ;
    VP (Pass Pl Fem) => "embarbecidas"
    }
  } ;

lin embastecer_V = verboV 
 {s = table {
    VI Infn => "embastecer" ;
    VI Ger => "embasteciendo" ;
    VI Part => "embastecido" ;
    VP (Pres Ind Sg P1) => "embastezco" ;
    VP (Pres Ind Sg P2) => "embasteces" ;
    VP (Pres Ind Sg P3) => "embastece" ;
    VP (Pres Ind Pl P1) => "embastecemos" ;
    VP (Pres Ind Pl P2) => "embastecéis" ;
    VP (Pres Ind Pl P3) => "embastecen" ;
    VP (Pres Subj Sg P1) => "embastezca" ;
    VP (Pres Subj Sg P2) => "embastezcas" ;
    VP (Pres Subj Sg P3) => "embastezca" ;
    VP (Pres Subj Pl P1) => "embastezcamos" ;
    VP (Pres Subj Pl P2) => "embastezcáis" ;
    VP (Pres Subj Pl P3) => "embastezcan" ;
    VP (Impf Ind Sg P1) => "embastecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embastecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embastecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embastecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embastecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embastecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embasteciera" ; "embasteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embastecieras" ; "embastecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embasteciera" ; "embasteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embasteciéramos" ; "embasteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embastecierais" ; "embastecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embastecieran" ; "embasteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embastecí" ;--# notpresent
    VP (Pret Sg P2) => "embasteciste" ;--# notpresent
    VP (Pret Sg P3) => "embasteció" ;--# notpresent
    VP (Pret Pl P1) => "embastecimos" ;--# notpresent
    VP (Pret Pl P2) => "embastecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embastecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embasteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embastecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embastecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embasteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embasteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embastecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embasteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embastecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embasteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embasteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embasteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embastecieren" ;--# notpresent
    VP (Cond Sg P1) => "embastecería" ;--# notpresent
    VP (Cond Sg P2) => "embastecerías" ;--# notpresent
    VP (Cond Sg P3) => "embastecería" ;--# notpresent
    VP (Cond Pl P1) => "embasteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embasteceríais" ;--# notpresent
    VP (Cond Pl P3) => "embastecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embastece" ;
    VP (Imp Sg P3) => "embastezca" ;
    VP (Imp Pl P1) => "embastezcamos" ;
    VP (Imp Pl P2) => "embasteced" ;
    VP (Imp Pl P3) => "embastezcan" ;
    VP (Pass Sg Masc) => "embastecido" ;
    VP (Pass Sg Fem) => "embastecida" ;
    VP (Pass Pl Masc) => "embastecidos" ;
    VP (Pass Pl Fem) => "embastecidas"
    }
  } ;

lin embebecer_V = verboV 
 {s = table {
    VI Infn => "embebecer" ;
    VI Ger => "embebeciendo" ;
    VI Part => "embebecido" ;
    VP (Pres Ind Sg P1) => "embebezco" ;
    VP (Pres Ind Sg P2) => "embebeces" ;
    VP (Pres Ind Sg P3) => "embebece" ;
    VP (Pres Ind Pl P1) => "embebecemos" ;
    VP (Pres Ind Pl P2) => "embebecéis" ;
    VP (Pres Ind Pl P3) => "embebecen" ;
    VP (Pres Subj Sg P1) => "embebezca" ;
    VP (Pres Subj Sg P2) => "embebezcas" ;
    VP (Pres Subj Sg P3) => "embebezca" ;
    VP (Pres Subj Pl P1) => "embebezcamos" ;
    VP (Pres Subj Pl P2) => "embebezcáis" ;
    VP (Pres Subj Pl P3) => "embebezcan" ;
    VP (Impf Ind Sg P1) => "embebecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embebecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embebecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embebecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embebecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embebecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embebeciera" ; "embebeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embebecieras" ; "embebecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embebeciera" ; "embebeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embebeciéramos" ; "embebeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embebecierais" ; "embebecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embebecieran" ; "embebeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embebecí" ;--# notpresent
    VP (Pret Sg P2) => "embebeciste" ;--# notpresent
    VP (Pret Sg P3) => "embebeció" ;--# notpresent
    VP (Pret Pl P1) => "embebecimos" ;--# notpresent
    VP (Pret Pl P2) => "embebecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embebecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embebeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embebecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embebecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embebeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embebeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embebecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embebeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embebecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embebeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embebeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embebeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embebecieren" ;--# notpresent
    VP (Cond Sg P1) => "embebecería" ;--# notpresent
    VP (Cond Sg P2) => "embebecerías" ;--# notpresent
    VP (Cond Sg P3) => "embebecería" ;--# notpresent
    VP (Cond Pl P1) => "embebeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embebeceríais" ;--# notpresent
    VP (Cond Pl P3) => "embebecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embebece" ;
    VP (Imp Sg P3) => "embebezca" ;
    VP (Imp Pl P1) => "embebezcamos" ;
    VP (Imp Pl P2) => "embebeced" ;
    VP (Imp Pl P3) => "embebezcan" ;
    VP (Pass Sg Masc) => "embebecido" ;
    VP (Pass Sg Fem) => "embebecida" ;
    VP (Pass Pl Masc) => "embebecidos" ;
    VP (Pass Pl Fem) => "embebecidas"
    }
  } ;

lin embellecer_V = verboV 
 {s = table {
    VI Infn => "embellecer" ;
    VI Ger => "embelleciendo" ;
    VI Part => "embellecido" ;
    VP (Pres Ind Sg P1) => "embellezco" ;
    VP (Pres Ind Sg P2) => "embelleces" ;
    VP (Pres Ind Sg P3) => "embellece" ;
    VP (Pres Ind Pl P1) => "embellecemos" ;
    VP (Pres Ind Pl P2) => "embellecéis" ;
    VP (Pres Ind Pl P3) => "embellecen" ;
    VP (Pres Subj Sg P1) => "embellezca" ;
    VP (Pres Subj Sg P2) => "embellezcas" ;
    VP (Pres Subj Sg P3) => "embellezca" ;
    VP (Pres Subj Pl P1) => "embellezcamos" ;
    VP (Pres Subj Pl P2) => "embellezcáis" ;
    VP (Pres Subj Pl P3) => "embellezcan" ;
    VP (Impf Ind Sg P1) => "embellecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embellecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embellecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embellecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embellecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embellecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embelleciera" ; "embelleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embellecieras" ; "embellecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embelleciera" ; "embelleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embelleciéramos" ; "embelleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embellecierais" ; "embellecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embellecieran" ; "embelleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embellecí" ;--# notpresent
    VP (Pret Sg P2) => "embelleciste" ;--# notpresent
    VP (Pret Sg P3) => "embelleció" ;--# notpresent
    VP (Pret Pl P1) => "embellecimos" ;--# notpresent
    VP (Pret Pl P2) => "embellecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embellecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embelleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embellecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embellecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embelleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embelleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embellecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embelleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embellecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embelleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embelleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embelleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embellecieren" ;--# notpresent
    VP (Cond Sg P1) => "embellecería" ;--# notpresent
    VP (Cond Sg P2) => "embellecerías" ;--# notpresent
    VP (Cond Sg P3) => "embellecería" ;--# notpresent
    VP (Cond Pl P1) => "embelleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embelleceríais" ;--# notpresent
    VP (Cond Pl P3) => "embellecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embellece" ;
    VP (Imp Sg P3) => "embellezca" ;
    VP (Imp Pl P1) => "embellezcamos" ;
    VP (Imp Pl P2) => "embelleced" ;
    VP (Imp Pl P3) => "embellezcan" ;
    VP (Pass Sg Masc) => "embellecido" ;
    VP (Pass Sg Fem) => "embellecida" ;
    VP (Pass Pl Masc) => "embellecidos" ;
    VP (Pass Pl Fem) => "embellecidas"
    }
  } ;

lin embermejecer_V = verboV 
 {s = table {
    VI Infn => "embermejecer" ;
    VI Ger => "embermejeciendo" ;
    VI Part => "embermejecido" ;
    VP (Pres Ind Sg P1) => "embermejezco" ;
    VP (Pres Ind Sg P2) => "embermejeces" ;
    VP (Pres Ind Sg P3) => "embermejece" ;
    VP (Pres Ind Pl P1) => "embermejecemos" ;
    VP (Pres Ind Pl P2) => "embermejecéis" ;
    VP (Pres Ind Pl P3) => "embermejecen" ;
    VP (Pres Subj Sg P1) => "embermejezca" ;
    VP (Pres Subj Sg P2) => "embermejezcas" ;
    VP (Pres Subj Sg P3) => "embermejezca" ;
    VP (Pres Subj Pl P1) => "embermejezcamos" ;
    VP (Pres Subj Pl P2) => "embermejezcáis" ;
    VP (Pres Subj Pl P3) => "embermejezcan" ;
    VP (Impf Ind Sg P1) => "embermejecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embermejecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embermejecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embermejecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embermejecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embermejecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embermejeciera" ; "embermejeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embermejecieras" ; "embermejecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embermejeciera" ; "embermejeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embermejeciéramos" ; "embermejeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embermejecierais" ; "embermejecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embermejecieran" ; "embermejeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embermejecí" ;--# notpresent
    VP (Pret Sg P2) => "embermejeciste" ;--# notpresent
    VP (Pret Sg P3) => "embermejeció" ;--# notpresent
    VP (Pret Pl P1) => "embermejecimos" ;--# notpresent
    VP (Pret Pl P2) => "embermejecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embermejecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embermejeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embermejecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embermejecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embermejeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embermejeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embermejecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embermejeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embermejecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embermejeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embermejeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embermejeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embermejecieren" ;--# notpresent
    VP (Cond Sg P1) => "embermejecería" ;--# notpresent
    VP (Cond Sg P2) => "embermejecerías" ;--# notpresent
    VP (Cond Sg P3) => "embermejecería" ;--# notpresent
    VP (Cond Pl P1) => "embermejeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embermejeceríais" ;--# notpresent
    VP (Cond Pl P3) => "embermejecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embermejece" ;
    VP (Imp Sg P3) => "embermejezca" ;
    VP (Imp Pl P1) => "embermejezcamos" ;
    VP (Imp Pl P2) => "embermejeced" ;
    VP (Imp Pl P3) => "embermejezcan" ;
    VP (Pass Sg Masc) => "embermejecido" ;
    VP (Pass Sg Fem) => "embermejecida" ;
    VP (Pass Pl Masc) => "embermejecidos" ;
    VP (Pass Pl Fem) => "embermejecidas"
    }
  } ;

lin emblandecer_V = verboV 
 {s = table {
    VI Infn => "emblandecer" ;
    VI Ger => "emblandeciendo" ;
    VI Part => "emblandecido" ;
    VP (Pres Ind Sg P1) => "emblandezco" ;
    VP (Pres Ind Sg P2) => "emblandeces" ;
    VP (Pres Ind Sg P3) => "emblandece" ;
    VP (Pres Ind Pl P1) => "emblandecemos" ;
    VP (Pres Ind Pl P2) => "emblandecéis" ;
    VP (Pres Ind Pl P3) => "emblandecen" ;
    VP (Pres Subj Sg P1) => "emblandezca" ;
    VP (Pres Subj Sg P2) => "emblandezcas" ;
    VP (Pres Subj Sg P3) => "emblandezca" ;
    VP (Pres Subj Pl P1) => "emblandezcamos" ;
    VP (Pres Subj Pl P2) => "emblandezcáis" ;
    VP (Pres Subj Pl P3) => "emblandezcan" ;
    VP (Impf Ind Sg P1) => "emblandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emblandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emblandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emblandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emblandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emblandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emblandeciera" ; "emblandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emblandecieras" ; "emblandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emblandeciera" ; "emblandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emblandeciéramos" ; "emblandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emblandecierais" ; "emblandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emblandecieran" ; "emblandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "emblandecí" ;--# notpresent
    VP (Pret Sg P2) => "emblandeciste" ;--# notpresent
    VP (Pret Sg P3) => "emblandeció" ;--# notpresent
    VP (Pret Pl P1) => "emblandecimos" ;--# notpresent
    VP (Pret Pl P2) => "emblandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "emblandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emblandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emblandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emblandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emblandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emblandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emblandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emblandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emblandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emblandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emblandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emblandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emblandecieren" ;--# notpresent
    VP (Cond Sg P1) => "emblandecería" ;--# notpresent
    VP (Cond Sg P2) => "emblandecerías" ;--# notpresent
    VP (Cond Sg P3) => "emblandecería" ;--# notpresent
    VP (Cond Pl P1) => "emblandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "emblandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "emblandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emblandece" ;
    VP (Imp Sg P3) => "emblandezca" ;
    VP (Imp Pl P1) => "emblandezcamos" ;
    VP (Imp Pl P2) => "emblandeced" ;
    VP (Imp Pl P3) => "emblandezcan" ;
    VP (Pass Sg Masc) => "emblandecido" ;
    VP (Pass Sg Fem) => "emblandecida" ;
    VP (Pass Pl Masc) => "emblandecidos" ;
    VP (Pass Pl Fem) => "emblandecidas"
    }
  } ;

lin emblanquecer_V = verboV 
 {s = table {
    VI Infn => "emblanquecer" ;
    VI Ger => "emblanqueciendo" ;
    VI Part => "emblanquecido" ;
    VP (Pres Ind Sg P1) => "emblanquezco" ;
    VP (Pres Ind Sg P2) => "emblanqueces" ;
    VP (Pres Ind Sg P3) => "emblanquece" ;
    VP (Pres Ind Pl P1) => "emblanquecemos" ;
    VP (Pres Ind Pl P2) => "emblanquecéis" ;
    VP (Pres Ind Pl P3) => "emblanquecen" ;
    VP (Pres Subj Sg P1) => "emblanquezca" ;
    VP (Pres Subj Sg P2) => "emblanquezcas" ;
    VP (Pres Subj Sg P3) => "emblanquezca" ;
    VP (Pres Subj Pl P1) => "emblanquezcamos" ;
    VP (Pres Subj Pl P2) => "emblanquezcáis" ;
    VP (Pres Subj Pl P3) => "emblanquezcan" ;
    VP (Impf Ind Sg P1) => "emblanquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emblanquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emblanquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emblanquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emblanquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emblanquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emblanqueciera" ; "emblanqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emblanquecieras" ; "emblanquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emblanqueciera" ; "emblanqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emblanqueciéramos" ; "emblanqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emblanquecierais" ; "emblanquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emblanquecieran" ; "emblanqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "emblanquecí" ;--# notpresent
    VP (Pret Sg P2) => "emblanqueciste" ;--# notpresent
    VP (Pret Sg P3) => "emblanqueció" ;--# notpresent
    VP (Pret Pl P1) => "emblanquecimos" ;--# notpresent
    VP (Pret Pl P2) => "emblanquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "emblanquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emblanqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emblanquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emblanquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emblanqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emblanqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emblanquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emblanqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emblanquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emblanqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emblanqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emblanqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emblanquecieren" ;--# notpresent
    VP (Cond Sg P1) => "emblanquecería" ;--# notpresent
    VP (Cond Sg P2) => "emblanquecerías" ;--# notpresent
    VP (Cond Sg P3) => "emblanquecería" ;--# notpresent
    VP (Cond Pl P1) => "emblanqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "emblanqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "emblanquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emblanquece" ;
    VP (Imp Sg P3) => "emblanquezca" ;
    VP (Imp Pl P1) => "emblanquezcamos" ;
    VP (Imp Pl P2) => "emblanqueced" ;
    VP (Imp Pl P3) => "emblanquezcan" ;
    VP (Pass Sg Masc) => "emblanquecido" ;
    VP (Pass Sg Fem) => "emblanquecida" ;
    VP (Pass Pl Masc) => "emblanquecidos" ;
    VP (Pass Pl Fem) => "emblanquecidas"
    }
  } ;

lin embobecer_V = verboV 
 {s = table {
    VI Infn => "embobecer" ;
    VI Ger => "embobeciendo" ;
    VI Part => "embobecido" ;
    VP (Pres Ind Sg P1) => "embobezco" ;
    VP (Pres Ind Sg P2) => "embobeces" ;
    VP (Pres Ind Sg P3) => "embobece" ;
    VP (Pres Ind Pl P1) => "embobecemos" ;
    VP (Pres Ind Pl P2) => "embobecéis" ;
    VP (Pres Ind Pl P3) => "embobecen" ;
    VP (Pres Subj Sg P1) => "embobezca" ;
    VP (Pres Subj Sg P2) => "embobezcas" ;
    VP (Pres Subj Sg P3) => "embobezca" ;
    VP (Pres Subj Pl P1) => "embobezcamos" ;
    VP (Pres Subj Pl P2) => "embobezcáis" ;
    VP (Pres Subj Pl P3) => "embobezcan" ;
    VP (Impf Ind Sg P1) => "embobecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embobecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embobecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embobecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embobecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embobecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embobeciera" ; "embobeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embobecieras" ; "embobecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embobeciera" ; "embobeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embobeciéramos" ; "embobeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embobecierais" ; "embobecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embobecieran" ; "embobeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embobecí" ;--# notpresent
    VP (Pret Sg P2) => "embobeciste" ;--# notpresent
    VP (Pret Sg P3) => "embobeció" ;--# notpresent
    VP (Pret Pl P1) => "embobecimos" ;--# notpresent
    VP (Pret Pl P2) => "embobecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embobecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embobeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embobecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embobecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embobeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embobeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embobecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embobeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embobecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embobeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embobeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embobeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embobecieren" ;--# notpresent
    VP (Cond Sg P1) => "embobecería" ;--# notpresent
    VP (Cond Sg P2) => "embobecerías" ;--# notpresent
    VP (Cond Sg P3) => "embobecería" ;--# notpresent
    VP (Cond Pl P1) => "embobeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embobeceríais" ;--# notpresent
    VP (Cond Pl P3) => "embobecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embobece" ;
    VP (Imp Sg P3) => "embobezca" ;
    VP (Imp Pl P1) => "embobezcamos" ;
    VP (Imp Pl P2) => "embobeced" ;
    VP (Imp Pl P3) => "embobezcan" ;
    VP (Pass Sg Masc) => "embobecido" ;
    VP (Pass Sg Fem) => "embobecida" ;
    VP (Pass Pl Masc) => "embobecidos" ;
    VP (Pass Pl Fem) => "embobecidas"
    }
  } ;

lin embosquecer_V = verboV 
 {s = table {
    VI Infn => "embosquecer" ;
    VI Ger => "embosqueciendo" ;
    VI Part => "embosquecido" ;
    VP (Pres Ind Sg P1) => "embosquezco" ;
    VP (Pres Ind Sg P2) => "embosqueces" ;
    VP (Pres Ind Sg P3) => "embosquece" ;
    VP (Pres Ind Pl P1) => "embosquecemos" ;
    VP (Pres Ind Pl P2) => "embosquecéis" ;
    VP (Pres Ind Pl P3) => "embosquecen" ;
    VP (Pres Subj Sg P1) => "embosquezca" ;
    VP (Pres Subj Sg P2) => "embosquezcas" ;
    VP (Pres Subj Sg P3) => "embosquezca" ;
    VP (Pres Subj Pl P1) => "embosquezcamos" ;
    VP (Pres Subj Pl P2) => "embosquezcáis" ;
    VP (Pres Subj Pl P3) => "embosquezcan" ;
    VP (Impf Ind Sg P1) => "embosquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embosquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embosquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embosquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embosquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embosquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embosqueciera" ; "embosqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embosquecieras" ; "embosquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embosqueciera" ; "embosqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embosqueciéramos" ; "embosqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embosquecierais" ; "embosquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embosquecieran" ; "embosqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embosquecí" ;--# notpresent
    VP (Pret Sg P2) => "embosqueciste" ;--# notpresent
    VP (Pret Sg P3) => "embosqueció" ;--# notpresent
    VP (Pret Pl P1) => "embosquecimos" ;--# notpresent
    VP (Pret Pl P2) => "embosquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embosquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embosqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embosquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embosquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embosqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embosqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embosquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embosqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embosquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embosqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embosqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embosqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embosquecieren" ;--# notpresent
    VP (Cond Sg P1) => "embosquecería" ;--# notpresent
    VP (Cond Sg P2) => "embosquecerías" ;--# notpresent
    VP (Cond Sg P3) => "embosquecería" ;--# notpresent
    VP (Cond Pl P1) => "embosqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embosqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "embosquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embosquece" ;
    VP (Imp Sg P3) => "embosquezca" ;
    VP (Imp Pl P1) => "embosquezcamos" ;
    VP (Imp Pl P2) => "embosqueced" ;
    VP (Imp Pl P3) => "embosquezcan" ;
    VP (Pass Sg Masc) => "embosquecido" ;
    VP (Pass Sg Fem) => "embosquecida" ;
    VP (Pass Pl Masc) => "embosquecidos" ;
    VP (Pass Pl Fem) => "embosquecidas"
    }
  } ;

lin embravecer_V = verboV 
 {s = table {
    VI Infn => "embravecer" ;
    VI Ger => "embraveciendo" ;
    VI Part => "embravecido" ;
    VP (Pres Ind Sg P1) => "embravezco" ;
    VP (Pres Ind Sg P2) => "embraveces" ;
    VP (Pres Ind Sg P3) => "embravece" ;
    VP (Pres Ind Pl P1) => "embravecemos" ;
    VP (Pres Ind Pl P2) => "embravecéis" ;
    VP (Pres Ind Pl P3) => "embravecen" ;
    VP (Pres Subj Sg P1) => "embravezca" ;
    VP (Pres Subj Sg P2) => "embravezcas" ;
    VP (Pres Subj Sg P3) => "embravezca" ;
    VP (Pres Subj Pl P1) => "embravezcamos" ;
    VP (Pres Subj Pl P2) => "embravezcáis" ;
    VP (Pres Subj Pl P3) => "embravezcan" ;
    VP (Impf Ind Sg P1) => "embravecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embravecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embravecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embravecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embravecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embravecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embraveciera" ; "embraveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embravecieras" ; "embravecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embraveciera" ; "embraveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embraveciéramos" ; "embraveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embravecierais" ; "embravecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embravecieran" ; "embraveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embravecí" ;--# notpresent
    VP (Pret Sg P2) => "embraveciste" ;--# notpresent
    VP (Pret Sg P3) => "embraveció" ;--# notpresent
    VP (Pret Pl P1) => "embravecimos" ;--# notpresent
    VP (Pret Pl P2) => "embravecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embravecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embraveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embravecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embravecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embraveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embraveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embravecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embraveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embravecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embraveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embraveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embraveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embravecieren" ;--# notpresent
    VP (Cond Sg P1) => "embravecería" ;--# notpresent
    VP (Cond Sg P2) => "embravecerías" ;--# notpresent
    VP (Cond Sg P3) => "embravecería" ;--# notpresent
    VP (Cond Pl P1) => "embraveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embraveceríais" ;--# notpresent
    VP (Cond Pl P3) => "embravecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embravece" ;
    VP (Imp Sg P3) => "embravezca" ;
    VP (Imp Pl P1) => "embravezcamos" ;
    VP (Imp Pl P2) => "embraveced" ;
    VP (Imp Pl P3) => "embravezcan" ;
    VP (Pass Sg Masc) => "embravecido" ;
    VP (Pass Sg Fem) => "embravecida" ;
    VP (Pass Pl Masc) => "embravecidos" ;
    VP (Pass Pl Fem) => "embravecidas"
    }
  } ;

lin embrutecer_V = verboV 
 {s = table {
    VI Infn => "embrutecer" ;
    VI Ger => "embruteciendo" ;
    VI Part => "embrutecido" ;
    VP (Pres Ind Sg P1) => "embrutezco" ;
    VP (Pres Ind Sg P2) => "embruteces" ;
    VP (Pres Ind Sg P3) => "embrutece" ;
    VP (Pres Ind Pl P1) => "embrutecemos" ;
    VP (Pres Ind Pl P2) => "embrutecéis" ;
    VP (Pres Ind Pl P3) => "embrutecen" ;
    VP (Pres Subj Sg P1) => "embrutezca" ;
    VP (Pres Subj Sg P2) => "embrutezcas" ;
    VP (Pres Subj Sg P3) => "embrutezca" ;
    VP (Pres Subj Pl P1) => "embrutezcamos" ;
    VP (Pres Subj Pl P2) => "embrutezcáis" ;
    VP (Pres Subj Pl P3) => "embrutezcan" ;
    VP (Impf Ind Sg P1) => "embrutecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embrutecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embrutecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embrutecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embrutecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embrutecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embruteciera" ; "embruteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embrutecieras" ; "embrutecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embruteciera" ; "embruteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embruteciéramos" ; "embruteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embrutecierais" ; "embrutecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embrutecieran" ; "embruteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embrutecí" ;--# notpresent
    VP (Pret Sg P2) => "embruteciste" ;--# notpresent
    VP (Pret Sg P3) => "embruteció" ;--# notpresent
    VP (Pret Pl P1) => "embrutecimos" ;--# notpresent
    VP (Pret Pl P2) => "embrutecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embrutecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embruteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embrutecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embrutecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embruteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embruteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embrutecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embruteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embrutecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embruteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embruteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embruteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embrutecieren" ;--# notpresent
    VP (Cond Sg P1) => "embrutecería" ;--# notpresent
    VP (Cond Sg P2) => "embrutecerías" ;--# notpresent
    VP (Cond Sg P3) => "embrutecería" ;--# notpresent
    VP (Cond Pl P1) => "embruteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embruteceríais" ;--# notpresent
    VP (Cond Pl P3) => "embrutecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embrutece" ;
    VP (Imp Sg P3) => "embrutezca" ;
    VP (Imp Pl P1) => "embrutezcamos" ;
    VP (Imp Pl P2) => "embruteced" ;
    VP (Imp Pl P3) => "embrutezcan" ;
    VP (Pass Sg Masc) => "embrutecido" ;
    VP (Pass Sg Fem) => "embrutecida" ;
    VP (Pass Pl Masc) => "embrutecidos" ;
    VP (Pass Pl Fem) => "embrutecidas"
    }
  } ;

lin empalidecer_V = verboV 
 {s = table {
    VI Infn => "empalidecer" ;
    VI Ger => "empalideciendo" ;
    VI Part => "empalidecido" ;
    VP (Pres Ind Sg P1) => "empalidezco" ;
    VP (Pres Ind Sg P2) => "empalideces" ;
    VP (Pres Ind Sg P3) => "empalidece" ;
    VP (Pres Ind Pl P1) => "empalidecemos" ;
    VP (Pres Ind Pl P2) => "empalidecéis" ;
    VP (Pres Ind Pl P3) => "empalidecen" ;
    VP (Pres Subj Sg P1) => "empalidezca" ;
    VP (Pres Subj Sg P2) => "empalidezcas" ;
    VP (Pres Subj Sg P3) => "empalidezca" ;
    VP (Pres Subj Pl P1) => "empalidezcamos" ;
    VP (Pres Subj Pl P2) => "empalidezcáis" ;
    VP (Pres Subj Pl P3) => "empalidezcan" ;
    VP (Impf Ind Sg P1) => "empalidecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empalidecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empalidecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empalidecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empalidecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empalidecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empalideciera" ; "empalideciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empalidecieras" ; "empalidecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empalideciera" ; "empalideciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empalideciéramos" ; "empalideciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empalidecierais" ; "empalidecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empalidecieran" ; "empalideciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empalidecí" ;--# notpresent
    VP (Pret Sg P2) => "empalideciste" ;--# notpresent
    VP (Pret Sg P3) => "empalideció" ;--# notpresent
    VP (Pret Pl P1) => "empalidecimos" ;--# notpresent
    VP (Pret Pl P2) => "empalidecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empalidecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empalideceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empalidecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empalidecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empalideceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empalideceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empalidecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empalideciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empalidecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empalideciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empalideciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empalideciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empalidecieren" ;--# notpresent
    VP (Cond Sg P1) => "empalidecería" ;--# notpresent
    VP (Cond Sg P2) => "empalidecerías" ;--# notpresent
    VP (Cond Sg P3) => "empalidecería" ;--# notpresent
    VP (Cond Pl P1) => "empalideceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empalideceríais" ;--# notpresent
    VP (Cond Pl P3) => "empalidecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empalidece" ;
    VP (Imp Sg P3) => "empalidezca" ;
    VP (Imp Pl P1) => "empalidezcamos" ;
    VP (Imp Pl P2) => "empalideced" ;
    VP (Imp Pl P3) => "empalidezcan" ;
    VP (Pass Sg Masc) => "empalidecido" ;
    VP (Pass Sg Fem) => "empalidecida" ;
    VP (Pass Pl Masc) => "empalidecidos" ;
    VP (Pass Pl Fem) => "empalidecidas"
    }
  } ;

lin empavorecer_V = verboV 
 {s = table {
    VI Infn => "empavorecer" ;
    VI Ger => "empavoreciendo" ;
    VI Part => "empavorecido" ;
    VP (Pres Ind Sg P1) => "empavorezco" ;
    VP (Pres Ind Sg P2) => "empavoreces" ;
    VP (Pres Ind Sg P3) => "empavorece" ;
    VP (Pres Ind Pl P1) => "empavorecemos" ;
    VP (Pres Ind Pl P2) => "empavorecéis" ;
    VP (Pres Ind Pl P3) => "empavorecen" ;
    VP (Pres Subj Sg P1) => "empavorezca" ;
    VP (Pres Subj Sg P2) => "empavorezcas" ;
    VP (Pres Subj Sg P3) => "empavorezca" ;
    VP (Pres Subj Pl P1) => "empavorezcamos" ;
    VP (Pres Subj Pl P2) => "empavorezcáis" ;
    VP (Pres Subj Pl P3) => "empavorezcan" ;
    VP (Impf Ind Sg P1) => "empavorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empavorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empavorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empavorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empavorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empavorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empavoreciera" ; "empavoreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empavorecieras" ; "empavorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empavoreciera" ; "empavoreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empavoreciéramos" ; "empavoreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empavorecierais" ; "empavorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empavorecieran" ; "empavoreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empavorecí" ;--# notpresent
    VP (Pret Sg P2) => "empavoreciste" ;--# notpresent
    VP (Pret Sg P3) => "empavoreció" ;--# notpresent
    VP (Pret Pl P1) => "empavorecimos" ;--# notpresent
    VP (Pret Pl P2) => "empavorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empavorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empavoreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empavorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empavorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empavoreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empavoreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empavorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empavoreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empavorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empavoreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empavoreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empavoreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empavorecieren" ;--# notpresent
    VP (Cond Sg P1) => "empavorecería" ;--# notpresent
    VP (Cond Sg P2) => "empavorecerías" ;--# notpresent
    VP (Cond Sg P3) => "empavorecería" ;--# notpresent
    VP (Cond Pl P1) => "empavoreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empavoreceríais" ;--# notpresent
    VP (Cond Pl P3) => "empavorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empavorece" ;
    VP (Imp Sg P3) => "empavorezca" ;
    VP (Imp Pl P1) => "empavorezcamos" ;
    VP (Imp Pl P2) => "empavoreced" ;
    VP (Imp Pl P3) => "empavorezcan" ;
    VP (Pass Sg Masc) => "empavorecido" ;
    VP (Pass Sg Fem) => "empavorecida" ;
    VP (Pass Pl Masc) => "empavorecidos" ;
    VP (Pass Pl Fem) => "empavorecidas"
    }
  } ;

lin empecer_V = verboV 
 {s = table {
    VI Infn => "empecer" ;
    VI Ger => "empeciendo" ;
    VI Part => "empecido" ;
    VP (Pres Ind Sg P1) => "empezco" ;
    VP (Pres Ind Sg P2) => "empeces" ;
    VP (Pres Ind Sg P3) => "empece" ;
    VP (Pres Ind Pl P1) => "empecemos" ;
    VP (Pres Ind Pl P2) => "empecéis" ;
    VP (Pres Ind Pl P3) => "empecen" ;
    VP (Pres Subj Sg P1) => "empezca" ;
    VP (Pres Subj Sg P2) => "empezcas" ;
    VP (Pres Subj Sg P3) => "empezca" ;
    VP (Pres Subj Pl P1) => "empezcamos" ;
    VP (Pres Subj Pl P2) => "empezcáis" ;
    VP (Pres Subj Pl P3) => "empezcan" ;
    VP (Impf Ind Sg P1) => "empecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empeciera" ; "empeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empecieras" ; "empecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empeciera" ; "empeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empeciéramos" ; "empeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empecierais" ; "empecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empecieran" ; "empeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empecí" ;--# notpresent
    VP (Pret Sg P2) => "empeciste" ;--# notpresent
    VP (Pret Sg P3) => "empeció" ;--# notpresent
    VP (Pret Pl P1) => "empecimos" ;--# notpresent
    VP (Pret Pl P2) => "empecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empecieren" ;--# notpresent
    VP (Cond Sg P1) => "empecería" ;--# notpresent
    VP (Cond Sg P2) => "empecerías" ;--# notpresent
    VP (Cond Sg P3) => "empecería" ;--# notpresent
    VP (Cond Pl P1) => "empeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empeceríais" ;--# notpresent
    VP (Cond Pl P3) => "empecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empece" ;
    VP (Imp Sg P3) => "empezca" ;
    VP (Imp Pl P1) => "empezcamos" ;
    VP (Imp Pl P2) => "empeced" ;
    VP (Imp Pl P3) => "empezcan" ;
    VP (Pass Sg Masc) => "empecido" ;
    VP (Pass Sg Fem) => "empecida" ;
    VP (Pass Pl Masc) => "empecidos" ;
    VP (Pass Pl Fem) => "empecidas"
    }
  } ;

lin empequehecer_V = verboV 
 {s = table {
    VI Infn => "empequehecer" ;
    VI Ger => "empequeheciendo" ;
    VI Part => "empequehecido" ;
    VP (Pres Ind Sg P1) => "empequehezco" ;
    VP (Pres Ind Sg P2) => "empequeheces" ;
    VP (Pres Ind Sg P3) => "empequehece" ;
    VP (Pres Ind Pl P1) => "empequehecemos" ;
    VP (Pres Ind Pl P2) => "empequehecéis" ;
    VP (Pres Ind Pl P3) => "empequehecen" ;
    VP (Pres Subj Sg P1) => "empequehezca" ;
    VP (Pres Subj Sg P2) => "empequehezcas" ;
    VP (Pres Subj Sg P3) => "empequehezca" ;
    VP (Pres Subj Pl P1) => "empequehezcamos" ;
    VP (Pres Subj Pl P2) => "empequehezcáis" ;
    VP (Pres Subj Pl P3) => "empequehezcan" ;
    VP (Impf Ind Sg P1) => "empequehecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empequehecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empequehecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empequehecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empequehecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empequehecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empequeheciera" ; "empequeheciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empequehecieras" ; "empequehecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empequeheciera" ; "empequeheciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empequeheciéramos" ; "empequeheciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empequehecierais" ; "empequehecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empequehecieran" ; "empequeheciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empequehecí" ;--# notpresent
    VP (Pret Sg P2) => "empequeheciste" ;--# notpresent
    VP (Pret Sg P3) => "empequeheció" ;--# notpresent
    VP (Pret Pl P1) => "empequehecimos" ;--# notpresent
    VP (Pret Pl P2) => "empequehecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empequehecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empequeheceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empequehecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empequehecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empequeheceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empequeheceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empequehecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empequeheciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empequehecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empequeheciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empequeheciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empequeheciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empequehecieren" ;--# notpresent
    VP (Cond Sg P1) => "empequehecería" ;--# notpresent
    VP (Cond Sg P2) => "empequehecerías" ;--# notpresent
    VP (Cond Sg P3) => "empequehecería" ;--# notpresent
    VP (Cond Pl P1) => "empequeheceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empequeheceríais" ;--# notpresent
    VP (Cond Pl P3) => "empequehecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empequehece" ;
    VP (Imp Sg P3) => "empequehezca" ;
    VP (Imp Pl P1) => "empequehezcamos" ;
    VP (Imp Pl P2) => "empequeheced" ;
    VP (Imp Pl P3) => "empequehezcan" ;
    VP (Pass Sg Masc) => "empequehecido" ;
    VP (Pass Sg Fem) => "empequehecida" ;
    VP (Pass Pl Masc) => "empequehecidos" ;
    VP (Pass Pl Fem) => "empequehecidas"
    }
  } ;

lin emplastecer_V = verboV 
 {s = table {
    VI Infn => "emplastecer" ;
    VI Ger => "emplasteciendo" ;
    VI Part => "emplastecido" ;
    VP (Pres Ind Sg P1) => "emplastezco" ;
    VP (Pres Ind Sg P2) => "emplasteces" ;
    VP (Pres Ind Sg P3) => "emplastece" ;
    VP (Pres Ind Pl P1) => "emplastecemos" ;
    VP (Pres Ind Pl P2) => "emplastecéis" ;
    VP (Pres Ind Pl P3) => "emplastecen" ;
    VP (Pres Subj Sg P1) => "emplastezca" ;
    VP (Pres Subj Sg P2) => "emplastezcas" ;
    VP (Pres Subj Sg P3) => "emplastezca" ;
    VP (Pres Subj Pl P1) => "emplastezcamos" ;
    VP (Pres Subj Pl P2) => "emplastezcáis" ;
    VP (Pres Subj Pl P3) => "emplastezcan" ;
    VP (Impf Ind Sg P1) => "emplastecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emplastecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emplastecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emplastecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emplastecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emplastecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emplasteciera" ; "emplasteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emplastecieras" ; "emplastecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emplasteciera" ; "emplasteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emplasteciéramos" ; "emplasteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emplastecierais" ; "emplastecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emplastecieran" ; "emplasteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "emplastecí" ;--# notpresent
    VP (Pret Sg P2) => "emplasteciste" ;--# notpresent
    VP (Pret Sg P3) => "emplasteció" ;--# notpresent
    VP (Pret Pl P1) => "emplastecimos" ;--# notpresent
    VP (Pret Pl P2) => "emplastecisteis" ;--# notpresent
    VP (Pret Pl P3) => "emplastecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emplasteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emplastecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emplastecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emplasteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emplasteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emplastecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emplasteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emplastecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emplasteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emplasteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emplasteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emplastecieren" ;--# notpresent
    VP (Cond Sg P1) => "emplastecería" ;--# notpresent
    VP (Cond Sg P2) => "emplastecerías" ;--# notpresent
    VP (Cond Sg P3) => "emplastecería" ;--# notpresent
    VP (Cond Pl P1) => "emplasteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "emplasteceríais" ;--# notpresent
    VP (Cond Pl P3) => "emplastecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emplastece" ;
    VP (Imp Sg P3) => "emplastezca" ;
    VP (Imp Pl P1) => "emplastezcamos" ;
    VP (Imp Pl P2) => "emplasteced" ;
    VP (Imp Pl P3) => "emplastezcan" ;
    VP (Pass Sg Masc) => "emplastecido" ;
    VP (Pass Sg Fem) => "emplastecida" ;
    VP (Pass Pl Masc) => "emplastecidos" ;
    VP (Pass Pl Fem) => "emplastecidas"
    }
  } ;

lin emplebeyecer_V = verboV 
 {s = table {
    VI Infn => "emplebeyecer" ;
    VI Ger => "emplebeyeciendo" ;
    VI Part => "emplebeyecido" ;
    VP (Pres Ind Sg P1) => "emplebeyezco" ;
    VP (Pres Ind Sg P2) => "emplebeyeces" ;
    VP (Pres Ind Sg P3) => "emplebeyece" ;
    VP (Pres Ind Pl P1) => "emplebeyecemos" ;
    VP (Pres Ind Pl P2) => "emplebeyecéis" ;
    VP (Pres Ind Pl P3) => "emplebeyecen" ;
    VP (Pres Subj Sg P1) => "emplebeyezca" ;
    VP (Pres Subj Sg P2) => "emplebeyezcas" ;
    VP (Pres Subj Sg P3) => "emplebeyezca" ;
    VP (Pres Subj Pl P1) => "emplebeyezcamos" ;
    VP (Pres Subj Pl P2) => "emplebeyezcáis" ;
    VP (Pres Subj Pl P3) => "emplebeyezcan" ;
    VP (Impf Ind Sg P1) => "emplebeyecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emplebeyecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emplebeyecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emplebeyecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emplebeyecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emplebeyecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emplebeyeciera" ; "emplebeyeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emplebeyecieras" ; "emplebeyecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emplebeyeciera" ; "emplebeyeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emplebeyeciéramos" ; "emplebeyeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emplebeyecierais" ; "emplebeyecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emplebeyecieran" ; "emplebeyeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "emplebeyecí" ;--# notpresent
    VP (Pret Sg P2) => "emplebeyeciste" ;--# notpresent
    VP (Pret Sg P3) => "emplebeyeció" ;--# notpresent
    VP (Pret Pl P1) => "emplebeyecimos" ;--# notpresent
    VP (Pret Pl P2) => "emplebeyecisteis" ;--# notpresent
    VP (Pret Pl P3) => "emplebeyecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emplebeyeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emplebeyecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emplebeyecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emplebeyeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emplebeyeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emplebeyecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emplebeyeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emplebeyecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emplebeyeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emplebeyeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emplebeyeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emplebeyecieren" ;--# notpresent
    VP (Cond Sg P1) => "emplebeyecería" ;--# notpresent
    VP (Cond Sg P2) => "emplebeyecerías" ;--# notpresent
    VP (Cond Sg P3) => "emplebeyecería" ;--# notpresent
    VP (Cond Pl P1) => "emplebeyeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "emplebeyeceríais" ;--# notpresent
    VP (Cond Pl P3) => "emplebeyecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emplebeyece" ;
    VP (Imp Sg P3) => "emplebeyezca" ;
    VP (Imp Pl P1) => "emplebeyezcamos" ;
    VP (Imp Pl P2) => "emplebeyeced" ;
    VP (Imp Pl P3) => "emplebeyezcan" ;
    VP (Pass Sg Masc) => "emplebeyecido" ;
    VP (Pass Sg Fem) => "emplebeyecida" ;
    VP (Pass Pl Masc) => "emplebeyecidos" ;
    VP (Pass Pl Fem) => "emplebeyecidas"
    }
  } ;

lin emplumecer_V = verboV 
 {s = table {
    VI Infn => "emplumecer" ;
    VI Ger => "emplumeciendo" ;
    VI Part => "emplumecido" ;
    VP (Pres Ind Sg P1) => "emplumezco" ;
    VP (Pres Ind Sg P2) => "emplumeces" ;
    VP (Pres Ind Sg P3) => "emplumece" ;
    VP (Pres Ind Pl P1) => "emplumecemos" ;
    VP (Pres Ind Pl P2) => "emplumecéis" ;
    VP (Pres Ind Pl P3) => "emplumecen" ;
    VP (Pres Subj Sg P1) => "emplumezca" ;
    VP (Pres Subj Sg P2) => "emplumezcas" ;
    VP (Pres Subj Sg P3) => "emplumezca" ;
    VP (Pres Subj Pl P1) => "emplumezcamos" ;
    VP (Pres Subj Pl P2) => "emplumezcáis" ;
    VP (Pres Subj Pl P3) => "emplumezcan" ;
    VP (Impf Ind Sg P1) => "emplumecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emplumecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emplumecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emplumecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emplumecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emplumecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emplumeciera" ; "emplumeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emplumecieras" ; "emplumecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emplumeciera" ; "emplumeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emplumeciéramos" ; "emplumeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emplumecierais" ; "emplumecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emplumecieran" ; "emplumeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "emplumecí" ;--# notpresent
    VP (Pret Sg P2) => "emplumeciste" ;--# notpresent
    VP (Pret Sg P3) => "emplumeció" ;--# notpresent
    VP (Pret Pl P1) => "emplumecimos" ;--# notpresent
    VP (Pret Pl P2) => "emplumecisteis" ;--# notpresent
    VP (Pret Pl P3) => "emplumecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emplumeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emplumecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emplumecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emplumeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emplumeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emplumecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emplumeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emplumecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emplumeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emplumeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emplumeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emplumecieren" ;--# notpresent
    VP (Cond Sg P1) => "emplumecería" ;--# notpresent
    VP (Cond Sg P2) => "emplumecerías" ;--# notpresent
    VP (Cond Sg P3) => "emplumecería" ;--# notpresent
    VP (Cond Pl P1) => "emplumeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "emplumeceríais" ;--# notpresent
    VP (Cond Pl P3) => "emplumecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emplumece" ;
    VP (Imp Sg P3) => "emplumezca" ;
    VP (Imp Pl P1) => "emplumezcamos" ;
    VP (Imp Pl P2) => "emplumeced" ;
    VP (Imp Pl P3) => "emplumezcan" ;
    VP (Pass Sg Masc) => "emplumecido" ;
    VP (Pass Sg Fem) => "emplumecida" ;
    VP (Pass Pl Masc) => "emplumecidos" ;
    VP (Pass Pl Fem) => "emplumecidas"
    }
  } ;

lin empobrecer_V = verboV 
 {s = table {
    VI Infn => "empobrecer" ;
    VI Ger => "empobreciendo" ;
    VI Part => "empobrecido" ;
    VP (Pres Ind Sg P1) => "empobrezco" ;
    VP (Pres Ind Sg P2) => "empobreces" ;
    VP (Pres Ind Sg P3) => "empobrece" ;
    VP (Pres Ind Pl P1) => "empobrecemos" ;
    VP (Pres Ind Pl P2) => "empobrecéis" ;
    VP (Pres Ind Pl P3) => "empobrecen" ;
    VP (Pres Subj Sg P1) => "empobrezca" ;
    VP (Pres Subj Sg P2) => "empobrezcas" ;
    VP (Pres Subj Sg P3) => "empobrezca" ;
    VP (Pres Subj Pl P1) => "empobrezcamos" ;
    VP (Pres Subj Pl P2) => "empobrezcáis" ;
    VP (Pres Subj Pl P3) => "empobrezcan" ;
    VP (Impf Ind Sg P1) => "empobrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empobrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empobrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empobrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empobrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empobrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empobreciera" ; "empobreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empobrecieras" ; "empobrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empobreciera" ; "empobreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empobreciéramos" ; "empobreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empobrecierais" ; "empobrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empobrecieran" ; "empobreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empobrecí" ;--# notpresent
    VP (Pret Sg P2) => "empobreciste" ;--# notpresent
    VP (Pret Sg P3) => "empobreció" ;--# notpresent
    VP (Pret Pl P1) => "empobrecimos" ;--# notpresent
    VP (Pret Pl P2) => "empobrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empobrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empobreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empobrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empobrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empobreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empobreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empobrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empobreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empobrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empobreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empobreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empobreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empobrecieren" ;--# notpresent
    VP (Cond Sg P1) => "empobrecería" ;--# notpresent
    VP (Cond Sg P2) => "empobrecerías" ;--# notpresent
    VP (Cond Sg P3) => "empobrecería" ;--# notpresent
    VP (Cond Pl P1) => "empobreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empobreceríais" ;--# notpresent
    VP (Cond Pl P3) => "empobrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empobrece" ;
    VP (Imp Sg P3) => "empobrezca" ;
    VP (Imp Pl P1) => "empobrezcamos" ;
    VP (Imp Pl P2) => "empobreced" ;
    VP (Imp Pl P3) => "empobrezcan" ;
    VP (Pass Sg Masc) => "empobrecido" ;
    VP (Pass Sg Fem) => "empobrecida" ;
    VP (Pass Pl Masc) => "empobrecidos" ;
    VP (Pass Pl Fem) => "empobrecidas"
    }
  } ;

lin empodrecer_V = verboV 
 {s = table {
    VI Infn => "empodrecer" ;
    VI Ger => "empodreciendo" ;
    VI Part => "empodrecido" ;
    VP (Pres Ind Sg P1) => "empodrezco" ;
    VP (Pres Ind Sg P2) => "empodreces" ;
    VP (Pres Ind Sg P3) => "empodrece" ;
    VP (Pres Ind Pl P1) => "empodrecemos" ;
    VP (Pres Ind Pl P2) => "empodrecéis" ;
    VP (Pres Ind Pl P3) => "empodrecen" ;
    VP (Pres Subj Sg P1) => "empodrezca" ;
    VP (Pres Subj Sg P2) => "empodrezcas" ;
    VP (Pres Subj Sg P3) => "empodrezca" ;
    VP (Pres Subj Pl P1) => "empodrezcamos" ;
    VP (Pres Subj Pl P2) => "empodrezcáis" ;
    VP (Pres Subj Pl P3) => "empodrezcan" ;
    VP (Impf Ind Sg P1) => "empodrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empodrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empodrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empodrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empodrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empodrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empodreciera" ; "empodreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empodrecieras" ; "empodrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empodreciera" ; "empodreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empodreciéramos" ; "empodreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empodrecierais" ; "empodrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empodrecieran" ; "empodreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empodrecí" ;--# notpresent
    VP (Pret Sg P2) => "empodreciste" ;--# notpresent
    VP (Pret Sg P3) => "empodreció" ;--# notpresent
    VP (Pret Pl P1) => "empodrecimos" ;--# notpresent
    VP (Pret Pl P2) => "empodrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empodrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empodreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empodrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empodrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empodreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empodreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empodrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empodreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empodrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empodreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empodreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empodreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empodrecieren" ;--# notpresent
    VP (Cond Sg P1) => "empodrecería" ;--# notpresent
    VP (Cond Sg P2) => "empodrecerías" ;--# notpresent
    VP (Cond Sg P3) => "empodrecería" ;--# notpresent
    VP (Cond Pl P1) => "empodreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empodreceríais" ;--# notpresent
    VP (Cond Pl P3) => "empodrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empodrece" ;
    VP (Imp Sg P3) => "empodrezca" ;
    VP (Imp Pl P1) => "empodrezcamos" ;
    VP (Imp Pl P2) => "empodreced" ;
    VP (Imp Pl P3) => "empodrezcan" ;
    VP (Pass Sg Masc) => "empodrecido" ;
    VP (Pass Sg Fem) => "empodrecida" ;
    VP (Pass Pl Masc) => "empodrecidos" ;
    VP (Pass Pl Fem) => "empodrecidas"
    }
  } ;

lin empretecer_V = verboV 
 {s = table {
    VI Infn => "empretecer" ;
    VI Ger => "empreteciendo" ;
    VI Part => "empretecido" ;
    VP (Pres Ind Sg P1) => "empretezco" ;
    VP (Pres Ind Sg P2) => "empreteces" ;
    VP (Pres Ind Sg P3) => "empretece" ;
    VP (Pres Ind Pl P1) => "empretecemos" ;
    VP (Pres Ind Pl P2) => "empretecéis" ;
    VP (Pres Ind Pl P3) => "empretecen" ;
    VP (Pres Subj Sg P1) => "empretezca" ;
    VP (Pres Subj Sg P2) => "empretezcas" ;
    VP (Pres Subj Sg P3) => "empretezca" ;
    VP (Pres Subj Pl P1) => "empretezcamos" ;
    VP (Pres Subj Pl P2) => "empretezcáis" ;
    VP (Pres Subj Pl P3) => "empretezcan" ;
    VP (Impf Ind Sg P1) => "empretecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empretecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empretecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empretecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empretecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empretecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empreteciera" ; "empreteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empretecieras" ; "empretecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empreteciera" ; "empreteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empreteciéramos" ; "empreteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empretecierais" ; "empretecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empretecieran" ; "empreteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empretecí" ;--# notpresent
    VP (Pret Sg P2) => "empreteciste" ;--# notpresent
    VP (Pret Sg P3) => "empreteció" ;--# notpresent
    VP (Pret Pl P1) => "empretecimos" ;--# notpresent
    VP (Pret Pl P2) => "empretecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empretecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empreteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empretecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empretecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empreteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empreteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empretecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empreteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empretecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empreteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empreteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empreteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empretecieren" ;--# notpresent
    VP (Cond Sg P1) => "empretecería" ;--# notpresent
    VP (Cond Sg P2) => "empretecerías" ;--# notpresent
    VP (Cond Sg P3) => "empretecería" ;--# notpresent
    VP (Cond Pl P1) => "empreteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empreteceríais" ;--# notpresent
    VP (Cond Pl P3) => "empretecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empretece" ;
    VP (Imp Sg P3) => "empretezca" ;
    VP (Imp Pl P1) => "empretezcamos" ;
    VP (Imp Pl P2) => "empreteced" ;
    VP (Imp Pl P3) => "empretezcan" ;
    VP (Pass Sg Masc) => "empretecido" ;
    VP (Pass Sg Fem) => "empretecida" ;
    VP (Pass Pl Masc) => "empretecidos" ;
    VP (Pass Pl Fem) => "empretecidas"
    }
  } ;

lin emputecer_V = verboV 
 {s = table {
    VI Infn => "emputecer" ;
    VI Ger => "emputeciendo" ;
    VI Part => "emputecido" ;
    VP (Pres Ind Sg P1) => "emputezco" ;
    VP (Pres Ind Sg P2) => "emputeces" ;
    VP (Pres Ind Sg P3) => "emputece" ;
    VP (Pres Ind Pl P1) => "emputecemos" ;
    VP (Pres Ind Pl P2) => "emputecéis" ;
    VP (Pres Ind Pl P3) => "emputecen" ;
    VP (Pres Subj Sg P1) => "emputezca" ;
    VP (Pres Subj Sg P2) => "emputezcas" ;
    VP (Pres Subj Sg P3) => "emputezca" ;
    VP (Pres Subj Pl P1) => "emputezcamos" ;
    VP (Pres Subj Pl P2) => "emputezcáis" ;
    VP (Pres Subj Pl P3) => "emputezcan" ;
    VP (Impf Ind Sg P1) => "emputecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "emputecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "emputecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "emputecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emputecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emputecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emputeciera" ; "emputeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emputecieras" ; "emputecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emputeciera" ; "emputeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emputeciéramos" ; "emputeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emputecierais" ; "emputecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emputecieran" ; "emputeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "emputecí" ;--# notpresent
    VP (Pret Sg P2) => "emputeciste" ;--# notpresent
    VP (Pret Sg P3) => "emputeció" ;--# notpresent
    VP (Pret Pl P1) => "emputecimos" ;--# notpresent
    VP (Pret Pl P2) => "emputecisteis" ;--# notpresent
    VP (Pret Pl P3) => "emputecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emputeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emputecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emputecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "emputeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emputeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emputecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emputeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "emputecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "emputeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "emputeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emputeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emputecieren" ;--# notpresent
    VP (Cond Sg P1) => "emputecería" ;--# notpresent
    VP (Cond Sg P2) => "emputecerías" ;--# notpresent
    VP (Cond Sg P3) => "emputecería" ;--# notpresent
    VP (Cond Pl P1) => "emputeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "emputeceríais" ;--# notpresent
    VP (Cond Pl P3) => "emputecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emputece" ;
    VP (Imp Sg P3) => "emputezca" ;
    VP (Imp Pl P1) => "emputezcamos" ;
    VP (Imp Pl P2) => "emputeced" ;
    VP (Imp Pl P3) => "emputezcan" ;
    VP (Pass Sg Masc) => "emputecido" ;
    VP (Pass Sg Fem) => "emputecida" ;
    VP (Pass Pl Masc) => "emputecidos" ;
    VP (Pass Pl Fem) => "emputecidas"
    }
  } ;

lin enaltecer_V = verboV 
 {s = table {
    VI Infn => "enaltecer" ;
    VI Ger => "enalteciendo" ;
    VI Part => "enaltecido" ;
    VP (Pres Ind Sg P1) => "enaltezco" ;
    VP (Pres Ind Sg P2) => "enalteces" ;
    VP (Pres Ind Sg P3) => "enaltece" ;
    VP (Pres Ind Pl P1) => "enaltecemos" ;
    VP (Pres Ind Pl P2) => "enaltecéis" ;
    VP (Pres Ind Pl P3) => "enaltecen" ;
    VP (Pres Subj Sg P1) => "enaltezca" ;
    VP (Pres Subj Sg P2) => "enaltezcas" ;
    VP (Pres Subj Sg P3) => "enaltezca" ;
    VP (Pres Subj Pl P1) => "enaltezcamos" ;
    VP (Pres Subj Pl P2) => "enaltezcáis" ;
    VP (Pres Subj Pl P3) => "enaltezcan" ;
    VP (Impf Ind Sg P1) => "enaltecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enaltecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enaltecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enaltecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enaltecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enaltecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enalteciera" ; "enalteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enaltecieras" ; "enaltecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enalteciera" ; "enalteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enalteciéramos" ; "enalteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enaltecierais" ; "enaltecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enaltecieran" ; "enalteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enaltecí" ;--# notpresent
    VP (Pret Sg P2) => "enalteciste" ;--# notpresent
    VP (Pret Sg P3) => "enalteció" ;--# notpresent
    VP (Pret Pl P1) => "enaltecimos" ;--# notpresent
    VP (Pret Pl P2) => "enaltecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enaltecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enalteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enaltecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enaltecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enalteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enalteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enaltecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enalteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enaltecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enalteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enalteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enalteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enaltecieren" ;--# notpresent
    VP (Cond Sg P1) => "enaltecería" ;--# notpresent
    VP (Cond Sg P2) => "enaltecerías" ;--# notpresent
    VP (Cond Sg P3) => "enaltecería" ;--# notpresent
    VP (Cond Pl P1) => "enalteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enalteceríais" ;--# notpresent
    VP (Cond Pl P3) => "enaltecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enaltece" ;
    VP (Imp Sg P3) => "enaltezca" ;
    VP (Imp Pl P1) => "enaltezcamos" ;
    VP (Imp Pl P2) => "enalteced" ;
    VP (Imp Pl P3) => "enaltezcan" ;
    VP (Pass Sg Masc) => "enaltecido" ;
    VP (Pass Sg Fem) => "enaltecida" ;
    VP (Pass Pl Masc) => "enaltecidos" ;
    VP (Pass Pl Fem) => "enaltecidas"
    }
  } ;

lin enamarillecer_V = verboV 
 {s = table {
    VI Infn => "enamarillecer" ;
    VI Ger => "enamarilleciendo" ;
    VI Part => "enamarillecido" ;
    VP (Pres Ind Sg P1) => "enamarillezco" ;
    VP (Pres Ind Sg P2) => "enamarilleces" ;
    VP (Pres Ind Sg P3) => "enamarillece" ;
    VP (Pres Ind Pl P1) => "enamarillecemos" ;
    VP (Pres Ind Pl P2) => "enamarillecéis" ;
    VP (Pres Ind Pl P3) => "enamarillecen" ;
    VP (Pres Subj Sg P1) => "enamarillezca" ;
    VP (Pres Subj Sg P2) => "enamarillezcas" ;
    VP (Pres Subj Sg P3) => "enamarillezca" ;
    VP (Pres Subj Pl P1) => "enamarillezcamos" ;
    VP (Pres Subj Pl P2) => "enamarillezcáis" ;
    VP (Pres Subj Pl P3) => "enamarillezcan" ;
    VP (Impf Ind Sg P1) => "enamarillecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enamarillecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enamarillecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enamarillecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enamarillecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enamarillecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enamarilleciera" ; "enamarilleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enamarillecieras" ; "enamarillecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enamarilleciera" ; "enamarilleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enamarilleciéramos" ; "enamarilleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enamarillecierais" ; "enamarillecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enamarillecieran" ; "enamarilleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enamarillecí" ;--# notpresent
    VP (Pret Sg P2) => "enamarilleciste" ;--# notpresent
    VP (Pret Sg P3) => "enamarilleció" ;--# notpresent
    VP (Pret Pl P1) => "enamarillecimos" ;--# notpresent
    VP (Pret Pl P2) => "enamarillecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enamarillecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enamarilleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enamarillecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enamarillecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enamarilleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enamarilleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enamarillecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enamarilleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enamarillecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enamarilleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enamarilleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enamarilleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enamarillecieren" ;--# notpresent
    VP (Cond Sg P1) => "enamarillecería" ;--# notpresent
    VP (Cond Sg P2) => "enamarillecerías" ;--# notpresent
    VP (Cond Sg P3) => "enamarillecería" ;--# notpresent
    VP (Cond Pl P1) => "enamarilleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enamarilleceríais" ;--# notpresent
    VP (Cond Pl P3) => "enamarillecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enamarillece" ;
    VP (Imp Sg P3) => "enamarillezca" ;
    VP (Imp Pl P1) => "enamarillezcamos" ;
    VP (Imp Pl P2) => "enamarilleced" ;
    VP (Imp Pl P3) => "enamarillezcan" ;
    VP (Pass Sg Masc) => "enamarillecido" ;
    VP (Pass Sg Fem) => "enamarillecida" ;
    VP (Pass Pl Masc) => "enamarillecidos" ;
    VP (Pass Pl Fem) => "enamarillecidas"
    }
  } ;

lin enardecer_V = verboV 
 {s = table {
    VI Infn => "enardecer" ;
    VI Ger => "enardeciendo" ;
    VI Part => "enardecido" ;
    VP (Pres Ind Sg P1) => "enardezco" ;
    VP (Pres Ind Sg P2) => "enardeces" ;
    VP (Pres Ind Sg P3) => "enardece" ;
    VP (Pres Ind Pl P1) => "enardecemos" ;
    VP (Pres Ind Pl P2) => "enardecéis" ;
    VP (Pres Ind Pl P3) => "enardecen" ;
    VP (Pres Subj Sg P1) => "enardezca" ;
    VP (Pres Subj Sg P2) => "enardezcas" ;
    VP (Pres Subj Sg P3) => "enardezca" ;
    VP (Pres Subj Pl P1) => "enardezcamos" ;
    VP (Pres Subj Pl P2) => "enardezcáis" ;
    VP (Pres Subj Pl P3) => "enardezcan" ;
    VP (Impf Ind Sg P1) => "enardecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enardecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enardecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enardecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enardecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enardecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enardeciera" ; "enardeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enardecieras" ; "enardecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enardeciera" ; "enardeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enardeciéramos" ; "enardeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enardecierais" ; "enardecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enardecieran" ; "enardeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enardecí" ;--# notpresent
    VP (Pret Sg P2) => "enardeciste" ;--# notpresent
    VP (Pret Sg P3) => "enardeció" ;--# notpresent
    VP (Pret Pl P1) => "enardecimos" ;--# notpresent
    VP (Pret Pl P2) => "enardecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enardecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enardeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enardecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enardecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enardeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enardeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enardecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enardeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enardecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enardeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enardeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enardeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enardecieren" ;--# notpresent
    VP (Cond Sg P1) => "enardecería" ;--# notpresent
    VP (Cond Sg P2) => "enardecerías" ;--# notpresent
    VP (Cond Sg P3) => "enardecería" ;--# notpresent
    VP (Cond Pl P1) => "enardeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enardeceríais" ;--# notpresent
    VP (Cond Pl P3) => "enardecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enardece" ;
    VP (Imp Sg P3) => "enardezca" ;
    VP (Imp Pl P1) => "enardezcamos" ;
    VP (Imp Pl P2) => "enardeced" ;
    VP (Imp Pl P3) => "enardezcan" ;
    VP (Pass Sg Masc) => "enardecido" ;
    VP (Pass Sg Fem) => "enardecida" ;
    VP (Pass Pl Masc) => "enardecidos" ;
    VP (Pass Pl Fem) => "enardecidas"
    }
  } ;

lin encallecer_V = verboV 
 {s = table {
    VI Infn => "encallecer" ;
    VI Ger => "encalleciendo" ;
    VI Part => "encallecido" ;
    VP (Pres Ind Sg P1) => "encallezco" ;
    VP (Pres Ind Sg P2) => "encalleces" ;
    VP (Pres Ind Sg P3) => "encallece" ;
    VP (Pres Ind Pl P1) => "encallecemos" ;
    VP (Pres Ind Pl P2) => "encallecéis" ;
    VP (Pres Ind Pl P3) => "encallecen" ;
    VP (Pres Subj Sg P1) => "encallezca" ;
    VP (Pres Subj Sg P2) => "encallezcas" ;
    VP (Pres Subj Sg P3) => "encallezca" ;
    VP (Pres Subj Pl P1) => "encallezcamos" ;
    VP (Pres Subj Pl P2) => "encallezcáis" ;
    VP (Pres Subj Pl P3) => "encallezcan" ;
    VP (Impf Ind Sg P1) => "encallecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encallecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encallecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encallecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encallecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encallecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encalleciera" ; "encalleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encallecieras" ; "encallecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encalleciera" ; "encalleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encalleciéramos" ; "encalleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encallecierais" ; "encallecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encallecieran" ; "encalleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encallecí" ;--# notpresent
    VP (Pret Sg P2) => "encalleciste" ;--# notpresent
    VP (Pret Sg P3) => "encalleció" ;--# notpresent
    VP (Pret Pl P1) => "encallecimos" ;--# notpresent
    VP (Pret Pl P2) => "encallecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encallecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encalleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encallecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encallecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encalleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encalleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encallecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encalleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encallecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encalleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encalleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encalleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encallecieren" ;--# notpresent
    VP (Cond Sg P1) => "encallecería" ;--# notpresent
    VP (Cond Sg P2) => "encallecerías" ;--# notpresent
    VP (Cond Sg P3) => "encallecería" ;--# notpresent
    VP (Cond Pl P1) => "encalleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encalleceríais" ;--# notpresent
    VP (Cond Pl P3) => "encallecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encallece" ;
    VP (Imp Sg P3) => "encallezca" ;
    VP (Imp Pl P1) => "encallezcamos" ;
    VP (Imp Pl P2) => "encalleced" ;
    VP (Imp Pl P3) => "encallezcan" ;
    VP (Pass Sg Masc) => "encallecido" ;
    VP (Pass Sg Fem) => "encallecida" ;
    VP (Pass Pl Masc) => "encallecidos" ;
    VP (Pass Pl Fem) => "encallecidas"
    }
  } ;

lin encalvecer_V = verboV 
 {s = table {
    VI Infn => "encalvecer" ;
    VI Ger => "encalveciendo" ;
    VI Part => "encalvecido" ;
    VP (Pres Ind Sg P1) => "encalvezco" ;
    VP (Pres Ind Sg P2) => "encalveces" ;
    VP (Pres Ind Sg P3) => "encalvece" ;
    VP (Pres Ind Pl P1) => "encalvecemos" ;
    VP (Pres Ind Pl P2) => "encalvecéis" ;
    VP (Pres Ind Pl P3) => "encalvecen" ;
    VP (Pres Subj Sg P1) => "encalvezca" ;
    VP (Pres Subj Sg P2) => "encalvezcas" ;
    VP (Pres Subj Sg P3) => "encalvezca" ;
    VP (Pres Subj Pl P1) => "encalvezcamos" ;
    VP (Pres Subj Pl P2) => "encalvezcáis" ;
    VP (Pres Subj Pl P3) => "encalvezcan" ;
    VP (Impf Ind Sg P1) => "encalvecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encalvecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encalvecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encalvecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encalvecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encalvecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encalveciera" ; "encalveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encalvecieras" ; "encalvecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encalveciera" ; "encalveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encalveciéramos" ; "encalveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encalvecierais" ; "encalvecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encalvecieran" ; "encalveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encalvecí" ;--# notpresent
    VP (Pret Sg P2) => "encalveciste" ;--# notpresent
    VP (Pret Sg P3) => "encalveció" ;--# notpresent
    VP (Pret Pl P1) => "encalvecimos" ;--# notpresent
    VP (Pret Pl P2) => "encalvecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encalvecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encalveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encalvecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encalvecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encalveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encalveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encalvecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encalveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encalvecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encalveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encalveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encalveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encalvecieren" ;--# notpresent
    VP (Cond Sg P1) => "encalvecería" ;--# notpresent
    VP (Cond Sg P2) => "encalvecerías" ;--# notpresent
    VP (Cond Sg P3) => "encalvecería" ;--# notpresent
    VP (Cond Pl P1) => "encalveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encalveceríais" ;--# notpresent
    VP (Cond Pl P3) => "encalvecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encalvece" ;
    VP (Imp Sg P3) => "encalvezca" ;
    VP (Imp Pl P1) => "encalvezcamos" ;
    VP (Imp Pl P2) => "encalveced" ;
    VP (Imp Pl P3) => "encalvezcan" ;
    VP (Pass Sg Masc) => "encalvecido" ;
    VP (Pass Sg Fem) => "encalvecida" ;
    VP (Pass Pl Masc) => "encalvecidos" ;
    VP (Pass Pl Fem) => "encalvecidas"
    }
  } ;

lin encandecer_V = verboV 
 {s = table {
    VI Infn => "encandecer" ;
    VI Ger => "encandeciendo" ;
    VI Part => "encandecido" ;
    VP (Pres Ind Sg P1) => "encandezco" ;
    VP (Pres Ind Sg P2) => "encandeces" ;
    VP (Pres Ind Sg P3) => "encandece" ;
    VP (Pres Ind Pl P1) => "encandecemos" ;
    VP (Pres Ind Pl P2) => "encandecéis" ;
    VP (Pres Ind Pl P3) => "encandecen" ;
    VP (Pres Subj Sg P1) => "encandezca" ;
    VP (Pres Subj Sg P2) => "encandezcas" ;
    VP (Pres Subj Sg P3) => "encandezca" ;
    VP (Pres Subj Pl P1) => "encandezcamos" ;
    VP (Pres Subj Pl P2) => "encandezcáis" ;
    VP (Pres Subj Pl P3) => "encandezcan" ;
    VP (Impf Ind Sg P1) => "encandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encandeciera" ; "encandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encandecieras" ; "encandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encandeciera" ; "encandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encandeciéramos" ; "encandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encandecierais" ; "encandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encandecieran" ; "encandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encandecí" ;--# notpresent
    VP (Pret Sg P2) => "encandeciste" ;--# notpresent
    VP (Pret Sg P3) => "encandeció" ;--# notpresent
    VP (Pret Pl P1) => "encandecimos" ;--# notpresent
    VP (Pret Pl P2) => "encandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encandecieren" ;--# notpresent
    VP (Cond Sg P1) => "encandecería" ;--# notpresent
    VP (Cond Sg P2) => "encandecerías" ;--# notpresent
    VP (Cond Sg P3) => "encandecería" ;--# notpresent
    VP (Cond Pl P1) => "encandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "encandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encandece" ;
    VP (Imp Sg P3) => "encandezca" ;
    VP (Imp Pl P1) => "encandezcamos" ;
    VP (Imp Pl P2) => "encandeced" ;
    VP (Imp Pl P3) => "encandezcan" ;
    VP (Pass Sg Masc) => "encandecido" ;
    VP (Pass Sg Fem) => "encandecida" ;
    VP (Pass Pl Masc) => "encandecidos" ;
    VP (Pass Pl Fem) => "encandecidas"
    }
  } ;

lin encanecer_V = verboV 
 {s = table {
    VI Infn => "encanecer" ;
    VI Ger => "encaneciendo" ;
    VI Part => "encanecido" ;
    VP (Pres Ind Sg P1) => "encanezco" ;
    VP (Pres Ind Sg P2) => "encaneces" ;
    VP (Pres Ind Sg P3) => "encanece" ;
    VP (Pres Ind Pl P1) => "encanecemos" ;
    VP (Pres Ind Pl P2) => "encanecéis" ;
    VP (Pres Ind Pl P3) => "encanecen" ;
    VP (Pres Subj Sg P1) => "encanezca" ;
    VP (Pres Subj Sg P2) => "encanezcas" ;
    VP (Pres Subj Sg P3) => "encanezca" ;
    VP (Pres Subj Pl P1) => "encanezcamos" ;
    VP (Pres Subj Pl P2) => "encanezcáis" ;
    VP (Pres Subj Pl P3) => "encanezcan" ;
    VP (Impf Ind Sg P1) => "encanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encaneciera" ; "encaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encanecieras" ; "encanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encaneciera" ; "encaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encaneciéramos" ; "encaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encanecierais" ; "encanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encanecieran" ; "encaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encanecí" ;--# notpresent
    VP (Pret Sg P2) => "encaneciste" ;--# notpresent
    VP (Pret Sg P3) => "encaneció" ;--# notpresent
    VP (Pret Pl P1) => "encanecimos" ;--# notpresent
    VP (Pret Pl P2) => "encanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encanecieren" ;--# notpresent
    VP (Cond Sg P1) => "encanecería" ;--# notpresent
    VP (Cond Sg P2) => "encanecerías" ;--# notpresent
    VP (Cond Sg P3) => "encanecería" ;--# notpresent
    VP (Cond Pl P1) => "encaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "encanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encanece" ;
    VP (Imp Sg P3) => "encanezca" ;
    VP (Imp Pl P1) => "encanezcamos" ;
    VP (Imp Pl P2) => "encaneced" ;
    VP (Imp Pl P3) => "encanezcan" ;
    VP (Pass Sg Masc) => "encanecido" ;
    VP (Pass Sg Fem) => "encanecida" ;
    VP (Pass Pl Masc) => "encanecidos" ;
    VP (Pass Pl Fem) => "encanecidas"
    }
  } ;

lin encarecer_V = verboV 
 {s = table {
    VI Infn => "encarecer" ;
    VI Ger => "encareciendo" ;
    VI Part => "encarecido" ;
    VP (Pres Ind Sg P1) => "encarezco" ;
    VP (Pres Ind Sg P2) => "encareces" ;
    VP (Pres Ind Sg P3) => "encarece" ;
    VP (Pres Ind Pl P1) => "encarecemos" ;
    VP (Pres Ind Pl P2) => "encarecéis" ;
    VP (Pres Ind Pl P3) => "encarecen" ;
    VP (Pres Subj Sg P1) => "encarezca" ;
    VP (Pres Subj Sg P2) => "encarezcas" ;
    VP (Pres Subj Sg P3) => "encarezca" ;
    VP (Pres Subj Pl P1) => "encarezcamos" ;
    VP (Pres Subj Pl P2) => "encarezcáis" ;
    VP (Pres Subj Pl P3) => "encarezcan" ;
    VP (Impf Ind Sg P1) => "encarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encareciera" ; "encareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encarecieras" ; "encarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encareciera" ; "encareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encareciéramos" ; "encareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encarecierais" ; "encarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encarecieran" ; "encareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encarecí" ;--# notpresent
    VP (Pret Sg P2) => "encareciste" ;--# notpresent
    VP (Pret Sg P3) => "encareció" ;--# notpresent
    VP (Pret Pl P1) => "encarecimos" ;--# notpresent
    VP (Pret Pl P2) => "encarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encarecieren" ;--# notpresent
    VP (Cond Sg P1) => "encarecería" ;--# notpresent
    VP (Cond Sg P2) => "encarecerías" ;--# notpresent
    VP (Cond Sg P3) => "encarecería" ;--# notpresent
    VP (Cond Pl P1) => "encareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encareceríais" ;--# notpresent
    VP (Cond Pl P3) => "encarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encarece" ;
    VP (Imp Sg P3) => "encarezca" ;
    VP (Imp Pl P1) => "encarezcamos" ;
    VP (Imp Pl P2) => "encareced" ;
    VP (Imp Pl P3) => "encarezcan" ;
    VP (Pass Sg Masc) => "encarecido" ;
    VP (Pass Sg Fem) => "encarecida" ;
    VP (Pass Pl Masc) => "encarecidos" ;
    VP (Pass Pl Fem) => "encarecidas"
    }
  } ;

lin encarnecer_V = verboV 
 {s = table {
    VI Infn => "encarnecer" ;
    VI Ger => "encarneciendo" ;
    VI Part => "encarnecido" ;
    VP (Pres Ind Sg P1) => "encarnezco" ;
    VP (Pres Ind Sg P2) => "encarneces" ;
    VP (Pres Ind Sg P3) => "encarnece" ;
    VP (Pres Ind Pl P1) => "encarnecemos" ;
    VP (Pres Ind Pl P2) => "encarnecéis" ;
    VP (Pres Ind Pl P3) => "encarnecen" ;
    VP (Pres Subj Sg P1) => "encarnezca" ;
    VP (Pres Subj Sg P2) => "encarnezcas" ;
    VP (Pres Subj Sg P3) => "encarnezca" ;
    VP (Pres Subj Pl P1) => "encarnezcamos" ;
    VP (Pres Subj Pl P2) => "encarnezcáis" ;
    VP (Pres Subj Pl P3) => "encarnezcan" ;
    VP (Impf Ind Sg P1) => "encarnecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encarnecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encarnecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encarnecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encarnecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encarnecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encarneciera" ; "encarneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encarnecieras" ; "encarnecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encarneciera" ; "encarneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encarneciéramos" ; "encarneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encarnecierais" ; "encarnecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encarnecieran" ; "encarneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encarnecí" ;--# notpresent
    VP (Pret Sg P2) => "encarneciste" ;--# notpresent
    VP (Pret Sg P3) => "encarneció" ;--# notpresent
    VP (Pret Pl P1) => "encarnecimos" ;--# notpresent
    VP (Pret Pl P2) => "encarnecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encarnecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encarneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encarnecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encarnecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encarneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encarneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encarnecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encarneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encarnecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encarneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encarneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encarneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encarnecieren" ;--# notpresent
    VP (Cond Sg P1) => "encarnecería" ;--# notpresent
    VP (Cond Sg P2) => "encarnecerías" ;--# notpresent
    VP (Cond Sg P3) => "encarnecería" ;--# notpresent
    VP (Cond Pl P1) => "encarneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encarneceríais" ;--# notpresent
    VP (Cond Pl P3) => "encarnecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encarnece" ;
    VP (Imp Sg P3) => "encarnezca" ;
    VP (Imp Pl P1) => "encarnezcamos" ;
    VP (Imp Pl P2) => "encarneced" ;
    VP (Imp Pl P3) => "encarnezcan" ;
    VP (Pass Sg Masc) => "encarnecido" ;
    VP (Pass Sg Fem) => "encarnecida" ;
    VP (Pass Pl Masc) => "encarnecidos" ;
    VP (Pass Pl Fem) => "encarnecidas"
    }
  } ;

lin enceguecer_V = verboV 
 {s = table {
    VI Infn => "enceguecer" ;
    VI Ger => "encegueciendo" ;
    VI Part => "enceguecido" ;
    VP (Pres Ind Sg P1) => "enceguezco" ;
    VP (Pres Ind Sg P2) => "encegueces" ;
    VP (Pres Ind Sg P3) => "enceguece" ;
    VP (Pres Ind Pl P1) => "enceguecemos" ;
    VP (Pres Ind Pl P2) => "enceguecéis" ;
    VP (Pres Ind Pl P3) => "enceguecen" ;
    VP (Pres Subj Sg P1) => "enceguezca" ;
    VP (Pres Subj Sg P2) => "enceguezcas" ;
    VP (Pres Subj Sg P3) => "enceguezca" ;
    VP (Pres Subj Pl P1) => "enceguezcamos" ;
    VP (Pres Subj Pl P2) => "enceguezcáis" ;
    VP (Pres Subj Pl P3) => "enceguezcan" ;
    VP (Impf Ind Sg P1) => "enceguecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enceguecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enceguecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enceguecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enceguecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enceguecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encegueciera" ; "encegueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enceguecieras" ; "enceguecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encegueciera" ; "encegueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encegueciéramos" ; "encegueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enceguecierais" ; "enceguecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enceguecieran" ; "encegueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enceguecí" ;--# notpresent
    VP (Pret Sg P2) => "encegueciste" ;--# notpresent
    VP (Pret Sg P3) => "encegueció" ;--# notpresent
    VP (Pret Pl P1) => "enceguecimos" ;--# notpresent
    VP (Pret Pl P2) => "enceguecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enceguecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encegueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enceguecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enceguecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encegueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encegueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enceguecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encegueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enceguecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encegueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encegueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encegueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enceguecieren" ;--# notpresent
    VP (Cond Sg P1) => "enceguecería" ;--# notpresent
    VP (Cond Sg P2) => "enceguecerías" ;--# notpresent
    VP (Cond Sg P3) => "enceguecería" ;--# notpresent
    VP (Cond Pl P1) => "encegueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encegueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enceguecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enceguece" ;
    VP (Imp Sg P3) => "enceguezca" ;
    VP (Imp Pl P1) => "enceguezcamos" ;
    VP (Imp Pl P2) => "encegueced" ;
    VP (Imp Pl P3) => "enceguezcan" ;
    VP (Pass Sg Masc) => "enceguecido" ;
    VP (Pass Sg Fem) => "enceguecida" ;
    VP (Pass Pl Masc) => "enceguecidos" ;
    VP (Pass Pl Fem) => "enceguecidas"
    }
  } ;

lin encloquecer_V = verboV 
 {s = table {
    VI Infn => "encloquecer" ;
    VI Ger => "encloqueciendo" ;
    VI Part => "encloquecido" ;
    VP (Pres Ind Sg P1) => "encloquezco" ;
    VP (Pres Ind Sg P2) => "encloqueces" ;
    VP (Pres Ind Sg P3) => "encloquece" ;
    VP (Pres Ind Pl P1) => "encloquecemos" ;
    VP (Pres Ind Pl P2) => "encloquecéis" ;
    VP (Pres Ind Pl P3) => "encloquecen" ;
    VP (Pres Subj Sg P1) => "encloquezca" ;
    VP (Pres Subj Sg P2) => "encloquezcas" ;
    VP (Pres Subj Sg P3) => "encloquezca" ;
    VP (Pres Subj Pl P1) => "encloquezcamos" ;
    VP (Pres Subj Pl P2) => "encloquezcáis" ;
    VP (Pres Subj Pl P3) => "encloquezcan" ;
    VP (Impf Ind Sg P1) => "encloquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encloquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encloquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encloquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encloquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encloquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encloqueciera" ; "encloqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encloquecieras" ; "encloquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encloqueciera" ; "encloqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encloqueciéramos" ; "encloqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encloquecierais" ; "encloquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encloquecieran" ; "encloqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encloquecí" ;--# notpresent
    VP (Pret Sg P2) => "encloqueciste" ;--# notpresent
    VP (Pret Sg P3) => "encloqueció" ;--# notpresent
    VP (Pret Pl P1) => "encloquecimos" ;--# notpresent
    VP (Pret Pl P2) => "encloquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encloquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encloqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encloquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encloquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encloqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encloqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encloquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encloqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encloquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encloqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encloqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encloqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encloquecieren" ;--# notpresent
    VP (Cond Sg P1) => "encloquecería" ;--# notpresent
    VP (Cond Sg P2) => "encloquecerías" ;--# notpresent
    VP (Cond Sg P3) => "encloquecería" ;--# notpresent
    VP (Cond Pl P1) => "encloqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encloqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "encloquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encloquece" ;
    VP (Imp Sg P3) => "encloquezca" ;
    VP (Imp Pl P1) => "encloquezcamos" ;
    VP (Imp Pl P2) => "encloqueced" ;
    VP (Imp Pl P3) => "encloquezcan" ;
    VP (Pass Sg Masc) => "encloquecido" ;
    VP (Pass Sg Fem) => "encloquecida" ;
    VP (Pass Pl Masc) => "encloquecidos" ;
    VP (Pass Pl Fem) => "encloquecidas"
    }
  } ;

lin encorecer_V = verboV 
 {s = table {
    VI Infn => "encorecer" ;
    VI Ger => "encoreciendo" ;
    VI Part => "encorecido" ;
    VP (Pres Ind Sg P1) => "encorezco" ;
    VP (Pres Ind Sg P2) => "encoreces" ;
    VP (Pres Ind Sg P3) => "encorece" ;
    VP (Pres Ind Pl P1) => "encorecemos" ;
    VP (Pres Ind Pl P2) => "encorecéis" ;
    VP (Pres Ind Pl P3) => "encorecen" ;
    VP (Pres Subj Sg P1) => "encorezca" ;
    VP (Pres Subj Sg P2) => "encorezcas" ;
    VP (Pres Subj Sg P3) => "encorezca" ;
    VP (Pres Subj Pl P1) => "encorezcamos" ;
    VP (Pres Subj Pl P2) => "encorezcáis" ;
    VP (Pres Subj Pl P3) => "encorezcan" ;
    VP (Impf Ind Sg P1) => "encorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encoreciera" ; "encoreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encorecieras" ; "encorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encoreciera" ; "encoreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encoreciéramos" ; "encoreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encorecierais" ; "encorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encorecieran" ; "encoreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encorecí" ;--# notpresent
    VP (Pret Sg P2) => "encoreciste" ;--# notpresent
    VP (Pret Sg P3) => "encoreció" ;--# notpresent
    VP (Pret Pl P1) => "encorecimos" ;--# notpresent
    VP (Pret Pl P2) => "encorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encoreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encoreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encoreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encoreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encoreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encoreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encoreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encorecieren" ;--# notpresent
    VP (Cond Sg P1) => "encorecería" ;--# notpresent
    VP (Cond Sg P2) => "encorecerías" ;--# notpresent
    VP (Cond Sg P3) => "encorecería" ;--# notpresent
    VP (Cond Pl P1) => "encoreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encoreceríais" ;--# notpresent
    VP (Cond Pl P3) => "encorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encorece" ;
    VP (Imp Sg P3) => "encorezca" ;
    VP (Imp Pl P1) => "encorezcamos" ;
    VP (Imp Pl P2) => "encoreced" ;
    VP (Imp Pl P3) => "encorezcan" ;
    VP (Pass Sg Masc) => "encorecido" ;
    VP (Pass Sg Fem) => "encorecida" ;
    VP (Pass Pl Masc) => "encorecidos" ;
    VP (Pass Pl Fem) => "encorecidas"
    }
  } ;

lin encrudecer_V = verboV 
 {s = table {
    VI Infn => "encrudecer" ;
    VI Ger => "encrudeciendo" ;
    VI Part => "encrudecido" ;
    VP (Pres Ind Sg P1) => "encrudezco" ;
    VP (Pres Ind Sg P2) => "encrudeces" ;
    VP (Pres Ind Sg P3) => "encrudece" ;
    VP (Pres Ind Pl P1) => "encrudecemos" ;
    VP (Pres Ind Pl P2) => "encrudecéis" ;
    VP (Pres Ind Pl P3) => "encrudecen" ;
    VP (Pres Subj Sg P1) => "encrudezca" ;
    VP (Pres Subj Sg P2) => "encrudezcas" ;
    VP (Pres Subj Sg P3) => "encrudezca" ;
    VP (Pres Subj Pl P1) => "encrudezcamos" ;
    VP (Pres Subj Pl P2) => "encrudezcáis" ;
    VP (Pres Subj Pl P3) => "encrudezcan" ;
    VP (Impf Ind Sg P1) => "encrudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encrudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encrudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encrudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encrudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encrudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encrudeciera" ; "encrudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encrudecieras" ; "encrudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encrudeciera" ; "encrudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encrudeciéramos" ; "encrudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encrudecierais" ; "encrudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encrudecieran" ; "encrudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encrudecí" ;--# notpresent
    VP (Pret Sg P2) => "encrudeciste" ;--# notpresent
    VP (Pret Sg P3) => "encrudeció" ;--# notpresent
    VP (Pret Pl P1) => "encrudecimos" ;--# notpresent
    VP (Pret Pl P2) => "encrudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encrudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encrudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encrudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encrudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encrudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encrudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encrudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encrudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encrudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encrudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encrudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encrudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encrudecieren" ;--# notpresent
    VP (Cond Sg P1) => "encrudecería" ;--# notpresent
    VP (Cond Sg P2) => "encrudecerías" ;--# notpresent
    VP (Cond Sg P3) => "encrudecería" ;--# notpresent
    VP (Cond Pl P1) => "encrudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encrudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "encrudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encrudece" ;
    VP (Imp Sg P3) => "encrudezca" ;
    VP (Imp Pl P1) => "encrudezcamos" ;
    VP (Imp Pl P2) => "encrudeced" ;
    VP (Imp Pl P3) => "encrudezcan" ;
    VP (Pass Sg Masc) => "encrudecido" ;
    VP (Pass Sg Fem) => "encrudecida" ;
    VP (Pass Pl Masc) => "encrudecidos" ;
    VP (Pass Pl Fem) => "encrudecidas"
    }
  } ;

lin encruelecer_V = verboV 
 {s = table {
    VI Infn => "encruelecer" ;
    VI Ger => "encrueleciendo" ;
    VI Part => "encruelecido" ;
    VP (Pres Ind Sg P1) => "encruelezco" ;
    VP (Pres Ind Sg P2) => "encrueleces" ;
    VP (Pres Ind Sg P3) => "encruelece" ;
    VP (Pres Ind Pl P1) => "encruelecemos" ;
    VP (Pres Ind Pl P2) => "encruelecéis" ;
    VP (Pres Ind Pl P3) => "encruelecen" ;
    VP (Pres Subj Sg P1) => "encruelezca" ;
    VP (Pres Subj Sg P2) => "encruelezcas" ;
    VP (Pres Subj Sg P3) => "encruelezca" ;
    VP (Pres Subj Pl P1) => "encruelezcamos" ;
    VP (Pres Subj Pl P2) => "encruelezcáis" ;
    VP (Pres Subj Pl P3) => "encruelezcan" ;
    VP (Impf Ind Sg P1) => "encruelecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encruelecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encruelecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encruelecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encruelecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encruelecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encrueleciera" ; "encrueleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encruelecieras" ; "encruelecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encrueleciera" ; "encrueleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encrueleciéramos" ; "encrueleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encruelecierais" ; "encruelecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encruelecieran" ; "encrueleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encruelecí" ;--# notpresent
    VP (Pret Sg P2) => "encrueleciste" ;--# notpresent
    VP (Pret Sg P3) => "encrueleció" ;--# notpresent
    VP (Pret Pl P1) => "encruelecimos" ;--# notpresent
    VP (Pret Pl P2) => "encruelecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encruelecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encrueleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encruelecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encruelecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encrueleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encrueleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encruelecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encrueleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encruelecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encrueleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encrueleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encrueleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encruelecieren" ;--# notpresent
    VP (Cond Sg P1) => "encruelecería" ;--# notpresent
    VP (Cond Sg P2) => "encruelecerías" ;--# notpresent
    VP (Cond Sg P3) => "encruelecería" ;--# notpresent
    VP (Cond Pl P1) => "encrueleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encrueleceríais" ;--# notpresent
    VP (Cond Pl P3) => "encruelecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encruelece" ;
    VP (Imp Sg P3) => "encruelezca" ;
    VP (Imp Pl P1) => "encruelezcamos" ;
    VP (Imp Pl P2) => "encrueleced" ;
    VP (Imp Pl P3) => "encruelezcan" ;
    VP (Pass Sg Masc) => "encruelecido" ;
    VP (Pass Sg Fem) => "encruelecida" ;
    VP (Pass Pl Masc) => "encruelecidos" ;
    VP (Pass Pl Fem) => "encruelecidas"
    }
  } ;

lin endentecer_V = verboV 
 {s = table {
    VI Infn => "endentecer" ;
    VI Ger => "endenteciendo" ;
    VI Part => "endentecido" ;
    VP (Pres Ind Sg P1) => "endentezco" ;
    VP (Pres Ind Sg P2) => "endenteces" ;
    VP (Pres Ind Sg P3) => "endentece" ;
    VP (Pres Ind Pl P1) => "endentecemos" ;
    VP (Pres Ind Pl P2) => "endentecéis" ;
    VP (Pres Ind Pl P3) => "endentecen" ;
    VP (Pres Subj Sg P1) => "endentezca" ;
    VP (Pres Subj Sg P2) => "endentezcas" ;
    VP (Pres Subj Sg P3) => "endentezca" ;
    VP (Pres Subj Pl P1) => "endentezcamos" ;
    VP (Pres Subj Pl P2) => "endentezcáis" ;
    VP (Pres Subj Pl P3) => "endentezcan" ;
    VP (Impf Ind Sg P1) => "endentecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "endentecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "endentecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "endentecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "endentecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "endentecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"endenteciera" ; "endenteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"endentecieras" ; "endentecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"endenteciera" ; "endenteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"endenteciéramos" ; "endenteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"endentecierais" ; "endentecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"endentecieran" ; "endenteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "endentecí" ;--# notpresent
    VP (Pret Sg P2) => "endenteciste" ;--# notpresent
    VP (Pret Sg P3) => "endenteció" ;--# notpresent
    VP (Pret Pl P1) => "endentecimos" ;--# notpresent
    VP (Pret Pl P2) => "endentecisteis" ;--# notpresent
    VP (Pret Pl P3) => "endentecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "endenteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "endentecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "endentecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "endenteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "endenteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "endentecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "endenteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "endentecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "endenteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "endenteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "endenteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "endentecieren" ;--# notpresent
    VP (Cond Sg P1) => "endentecería" ;--# notpresent
    VP (Cond Sg P2) => "endentecerías" ;--# notpresent
    VP (Cond Sg P3) => "endentecería" ;--# notpresent
    VP (Cond Pl P1) => "endenteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "endenteceríais" ;--# notpresent
    VP (Cond Pl P3) => "endentecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "endentece" ;
    VP (Imp Sg P3) => "endentezca" ;
    VP (Imp Pl P1) => "endentezcamos" ;
    VP (Imp Pl P2) => "endenteced" ;
    VP (Imp Pl P3) => "endentezcan" ;
    VP (Pass Sg Masc) => "endentecido" ;
    VP (Pass Sg Fem) => "endentecida" ;
    VP (Pass Pl Masc) => "endentecidos" ;
    VP (Pass Pl Fem) => "endentecidas"
    }
  } ;

lin endurecer_V = verboV 
 {s = table {
    VI Infn => "endurecer" ;
    VI Ger => "endureciendo" ;
    VI Part => "endurecido" ;
    VP (Pres Ind Sg P1) => "endurezco" ;
    VP (Pres Ind Sg P2) => "endureces" ;
    VP (Pres Ind Sg P3) => "endurece" ;
    VP (Pres Ind Pl P1) => "endurecemos" ;
    VP (Pres Ind Pl P2) => "endurecéis" ;
    VP (Pres Ind Pl P3) => "endurecen" ;
    VP (Pres Subj Sg P1) => "endurezca" ;
    VP (Pres Subj Sg P2) => "endurezcas" ;
    VP (Pres Subj Sg P3) => "endurezca" ;
    VP (Pres Subj Pl P1) => "endurezcamos" ;
    VP (Pres Subj Pl P2) => "endurezcáis" ;
    VP (Pres Subj Pl P3) => "endurezcan" ;
    VP (Impf Ind Sg P1) => "endurecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "endurecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "endurecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "endurecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "endurecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "endurecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"endureciera" ; "endureciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"endurecieras" ; "endurecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"endureciera" ; "endureciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"endureciéramos" ; "endureciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"endurecierais" ; "endurecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"endurecieran" ; "endureciesen"} ;--# notpresent
    VP (Pret Sg P1) => "endurecí" ;--# notpresent
    VP (Pret Sg P2) => "endureciste" ;--# notpresent
    VP (Pret Sg P3) => "endureció" ;--# notpresent
    VP (Pret Pl P1) => "endurecimos" ;--# notpresent
    VP (Pret Pl P2) => "endurecisteis" ;--# notpresent
    VP (Pret Pl P3) => "endurecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "endureceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "endurecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "endurecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "endureceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "endureceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "endurecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "endureciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "endurecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "endureciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "endureciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "endureciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "endurecieren" ;--# notpresent
    VP (Cond Sg P1) => "endurecería" ;--# notpresent
    VP (Cond Sg P2) => "endurecerías" ;--# notpresent
    VP (Cond Sg P3) => "endurecería" ;--# notpresent
    VP (Cond Pl P1) => "endureceríamos" ;--# notpresent
    VP (Cond Pl P2) => "endureceríais" ;--# notpresent
    VP (Cond Pl P3) => "endurecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "endurece" ;
    VP (Imp Sg P3) => "endurezca" ;
    VP (Imp Pl P1) => "endurezcamos" ;
    VP (Imp Pl P2) => "endureced" ;
    VP (Imp Pl P3) => "endurezcan" ;
    VP (Pass Sg Masc) => "endurecido" ;
    VP (Pass Sg Fem) => "endurecida" ;
    VP (Pass Pl Masc) => "endurecidos" ;
    VP (Pass Pl Fem) => "endurecidas"
    }
  } ;

lin enflaquecer_V = verboV 
 {s = table {
    VI Infn => "enflaquecer" ;
    VI Ger => "enflaqueciendo" ;
    VI Part => "enflaquecido" ;
    VP (Pres Ind Sg P1) => "enflaquezco" ;
    VP (Pres Ind Sg P2) => "enflaqueces" ;
    VP (Pres Ind Sg P3) => "enflaquece" ;
    VP (Pres Ind Pl P1) => "enflaquecemos" ;
    VP (Pres Ind Pl P2) => "enflaquecéis" ;
    VP (Pres Ind Pl P3) => "enflaquecen" ;
    VP (Pres Subj Sg P1) => "enflaquezca" ;
    VP (Pres Subj Sg P2) => "enflaquezcas" ;
    VP (Pres Subj Sg P3) => "enflaquezca" ;
    VP (Pres Subj Pl P1) => "enflaquezcamos" ;
    VP (Pres Subj Pl P2) => "enflaquezcáis" ;
    VP (Pres Subj Pl P3) => "enflaquezcan" ;
    VP (Impf Ind Sg P1) => "enflaquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enflaquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enflaquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enflaquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enflaquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enflaquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enflaqueciera" ; "enflaqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enflaquecieras" ; "enflaquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enflaqueciera" ; "enflaqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enflaqueciéramos" ; "enflaqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enflaquecierais" ; "enflaquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enflaquecieran" ; "enflaqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enflaquecí" ;--# notpresent
    VP (Pret Sg P2) => "enflaqueciste" ;--# notpresent
    VP (Pret Sg P3) => "enflaqueció" ;--# notpresent
    VP (Pret Pl P1) => "enflaquecimos" ;--# notpresent
    VP (Pret Pl P2) => "enflaquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enflaquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enflaqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enflaquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enflaquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enflaqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enflaqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enflaquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enflaqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enflaquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enflaqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enflaqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enflaqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enflaquecieren" ;--# notpresent
    VP (Cond Sg P1) => "enflaquecería" ;--# notpresent
    VP (Cond Sg P2) => "enflaquecerías" ;--# notpresent
    VP (Cond Sg P3) => "enflaquecería" ;--# notpresent
    VP (Cond Pl P1) => "enflaqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enflaqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enflaquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enflaquece" ;
    VP (Imp Sg P3) => "enflaquezca" ;
    VP (Imp Pl P1) => "enflaquezcamos" ;
    VP (Imp Pl P2) => "enflaqueced" ;
    VP (Imp Pl P3) => "enflaquezcan" ;
    VP (Pass Sg Masc) => "enflaquecido" ;
    VP (Pass Sg Fem) => "enflaquecida" ;
    VP (Pass Pl Masc) => "enflaquecidos" ;
    VP (Pass Pl Fem) => "enflaquecidas"
    }
  } ;

lin enflorecer_V = verboV 
 {s = table {
    VI Infn => "enflorecer" ;
    VI Ger => "enfloreciendo" ;
    VI Part => "enflorecido" ;
    VP (Pres Ind Sg P1) => "enflorezco" ;
    VP (Pres Ind Sg P2) => "enfloreces" ;
    VP (Pres Ind Sg P3) => "enflorece" ;
    VP (Pres Ind Pl P1) => "enflorecemos" ;
    VP (Pres Ind Pl P2) => "enflorecéis" ;
    VP (Pres Ind Pl P3) => "enflorecen" ;
    VP (Pres Subj Sg P1) => "enflorezca" ;
    VP (Pres Subj Sg P2) => "enflorezcas" ;
    VP (Pres Subj Sg P3) => "enflorezca" ;
    VP (Pres Subj Pl P1) => "enflorezcamos" ;
    VP (Pres Subj Pl P2) => "enflorezcáis" ;
    VP (Pres Subj Pl P3) => "enflorezcan" ;
    VP (Impf Ind Sg P1) => "enflorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enflorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enflorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enflorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enflorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enflorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enfloreciera" ; "enfloreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enflorecieras" ; "enflorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enfloreciera" ; "enfloreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enfloreciéramos" ; "enfloreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enflorecierais" ; "enflorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enflorecieran" ; "enfloreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enflorecí" ;--# notpresent
    VP (Pret Sg P2) => "enfloreciste" ;--# notpresent
    VP (Pret Sg P3) => "enfloreció" ;--# notpresent
    VP (Pret Pl P1) => "enflorecimos" ;--# notpresent
    VP (Pret Pl P2) => "enflorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enflorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enfloreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enflorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enflorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enfloreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enfloreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enflorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enfloreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enflorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enfloreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enfloreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enfloreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enflorecieren" ;--# notpresent
    VP (Cond Sg P1) => "enflorecería" ;--# notpresent
    VP (Cond Sg P2) => "enflorecerías" ;--# notpresent
    VP (Cond Sg P3) => "enflorecería" ;--# notpresent
    VP (Cond Pl P1) => "enfloreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enfloreceríais" ;--# notpresent
    VP (Cond Pl P3) => "enflorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enflorece" ;
    VP (Imp Sg P3) => "enflorezca" ;
    VP (Imp Pl P1) => "enflorezcamos" ;
    VP (Imp Pl P2) => "enfloreced" ;
    VP (Imp Pl P3) => "enflorezcan" ;
    VP (Pass Sg Masc) => "enflorecido" ;
    VP (Pass Sg Fem) => "enflorecida" ;
    VP (Pass Pl Masc) => "enflorecidos" ;
    VP (Pass Pl Fem) => "enflorecidas"
    }
  } ;

lin enfranquecer_V = verboV 
 {s = table {
    VI Infn => "enfranquecer" ;
    VI Ger => "enfranqueciendo" ;
    VI Part => "enfranquecido" ;
    VP (Pres Ind Sg P1) => "enfranquezco" ;
    VP (Pres Ind Sg P2) => "enfranqueces" ;
    VP (Pres Ind Sg P3) => "enfranquece" ;
    VP (Pres Ind Pl P1) => "enfranquecemos" ;
    VP (Pres Ind Pl P2) => "enfranquecéis" ;
    VP (Pres Ind Pl P3) => "enfranquecen" ;
    VP (Pres Subj Sg P1) => "enfranquezca" ;
    VP (Pres Subj Sg P2) => "enfranquezcas" ;
    VP (Pres Subj Sg P3) => "enfranquezca" ;
    VP (Pres Subj Pl P1) => "enfranquezcamos" ;
    VP (Pres Subj Pl P2) => "enfranquezcáis" ;
    VP (Pres Subj Pl P3) => "enfranquezcan" ;
    VP (Impf Ind Sg P1) => "enfranquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enfranquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enfranquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enfranquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enfranquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enfranquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enfranqueciera" ; "enfranqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enfranquecieras" ; "enfranquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enfranqueciera" ; "enfranqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enfranqueciéramos" ; "enfranqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enfranquecierais" ; "enfranquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enfranquecieran" ; "enfranqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enfranquecí" ;--# notpresent
    VP (Pret Sg P2) => "enfranqueciste" ;--# notpresent
    VP (Pret Sg P3) => "enfranqueció" ;--# notpresent
    VP (Pret Pl P1) => "enfranquecimos" ;--# notpresent
    VP (Pret Pl P2) => "enfranquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enfranquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enfranqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enfranquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enfranquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enfranqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enfranqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enfranquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enfranqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enfranquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enfranqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enfranqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enfranqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enfranquecieren" ;--# notpresent
    VP (Cond Sg P1) => "enfranquecería" ;--# notpresent
    VP (Cond Sg P2) => "enfranquecerías" ;--# notpresent
    VP (Cond Sg P3) => "enfranquecería" ;--# notpresent
    VP (Cond Pl P1) => "enfranqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enfranqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enfranquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enfranquece" ;
    VP (Imp Sg P3) => "enfranquezca" ;
    VP (Imp Pl P1) => "enfranquezcamos" ;
    VP (Imp Pl P2) => "enfranqueced" ;
    VP (Imp Pl P3) => "enfranquezcan" ;
    VP (Pass Sg Masc) => "enfranquecido" ;
    VP (Pass Sg Fem) => "enfranquecida" ;
    VP (Pass Pl Masc) => "enfranquecidos" ;
    VP (Pass Pl Fem) => "enfranquecidas"
    }
  } ;

lin enfurecer_V = verboV 
 {s = table {
    VI Infn => "enfurecer" ;
    VI Ger => "enfureciendo" ;
    VI Part => "enfurecido" ;
    VP (Pres Ind Sg P1) => "enfurezco" ;
    VP (Pres Ind Sg P2) => "enfureces" ;
    VP (Pres Ind Sg P3) => "enfurece" ;
    VP (Pres Ind Pl P1) => "enfurecemos" ;
    VP (Pres Ind Pl P2) => "enfurecéis" ;
    VP (Pres Ind Pl P3) => "enfurecen" ;
    VP (Pres Subj Sg P1) => "enfurezca" ;
    VP (Pres Subj Sg P2) => "enfurezcas" ;
    VP (Pres Subj Sg P3) => "enfurezca" ;
    VP (Pres Subj Pl P1) => "enfurezcamos" ;
    VP (Pres Subj Pl P2) => "enfurezcáis" ;
    VP (Pres Subj Pl P3) => "enfurezcan" ;
    VP (Impf Ind Sg P1) => "enfurecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enfurecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enfurecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enfurecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enfurecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enfurecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enfureciera" ; "enfureciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enfurecieras" ; "enfurecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enfureciera" ; "enfureciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enfureciéramos" ; "enfureciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enfurecierais" ; "enfurecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enfurecieran" ; "enfureciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enfurecí" ;--# notpresent
    VP (Pret Sg P2) => "enfureciste" ;--# notpresent
    VP (Pret Sg P3) => "enfureció" ;--# notpresent
    VP (Pret Pl P1) => "enfurecimos" ;--# notpresent
    VP (Pret Pl P2) => "enfurecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enfurecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enfureceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enfurecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enfurecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enfureceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enfureceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enfurecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enfureciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enfurecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enfureciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enfureciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enfureciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enfurecieren" ;--# notpresent
    VP (Cond Sg P1) => "enfurecería" ;--# notpresent
    VP (Cond Sg P2) => "enfurecerías" ;--# notpresent
    VP (Cond Sg P3) => "enfurecería" ;--# notpresent
    VP (Cond Pl P1) => "enfureceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enfureceríais" ;--# notpresent
    VP (Cond Pl P3) => "enfurecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enfurece" ;
    VP (Imp Sg P3) => "enfurezca" ;
    VP (Imp Pl P1) => "enfurezcamos" ;
    VP (Imp Pl P2) => "enfureced" ;
    VP (Imp Pl P3) => "enfurezcan" ;
    VP (Pass Sg Masc) => "enfurecido" ;
    VP (Pass Sg Fem) => "enfurecida" ;
    VP (Pass Pl Masc) => "enfurecidos" ;
    VP (Pass Pl Fem) => "enfurecidas"
    }
  } ;

lin engrandecer_V = verboV 
 {s = table {
    VI Infn => "engrandecer" ;
    VI Ger => "engrandeciendo" ;
    VI Part => "engrandecido" ;
    VP (Pres Ind Sg P1) => "engrandezco" ;
    VP (Pres Ind Sg P2) => "engrandeces" ;
    VP (Pres Ind Sg P3) => "engrandece" ;
    VP (Pres Ind Pl P1) => "engrandecemos" ;
    VP (Pres Ind Pl P2) => "engrandecéis" ;
    VP (Pres Ind Pl P3) => "engrandecen" ;
    VP (Pres Subj Sg P1) => "engrandezca" ;
    VP (Pres Subj Sg P2) => "engrandezcas" ;
    VP (Pres Subj Sg P3) => "engrandezca" ;
    VP (Pres Subj Pl P1) => "engrandezcamos" ;
    VP (Pres Subj Pl P2) => "engrandezcáis" ;
    VP (Pres Subj Pl P3) => "engrandezcan" ;
    VP (Impf Ind Sg P1) => "engrandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "engrandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "engrandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "engrandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engrandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engrandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engrandeciera" ; "engrandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engrandecieras" ; "engrandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engrandeciera" ; "engrandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engrandeciéramos" ; "engrandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engrandecierais" ; "engrandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engrandecieran" ; "engrandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "engrandecí" ;--# notpresent
    VP (Pret Sg P2) => "engrandeciste" ;--# notpresent
    VP (Pret Sg P3) => "engrandeció" ;--# notpresent
    VP (Pret Pl P1) => "engrandecimos" ;--# notpresent
    VP (Pret Pl P2) => "engrandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "engrandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engrandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engrandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engrandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "engrandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engrandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engrandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engrandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "engrandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "engrandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "engrandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engrandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engrandecieren" ;--# notpresent
    VP (Cond Sg P1) => "engrandecería" ;--# notpresent
    VP (Cond Sg P2) => "engrandecerías" ;--# notpresent
    VP (Cond Sg P3) => "engrandecería" ;--# notpresent
    VP (Cond Pl P1) => "engrandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "engrandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "engrandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "engrandece" ;
    VP (Imp Sg P3) => "engrandezca" ;
    VP (Imp Pl P1) => "engrandezcamos" ;
    VP (Imp Pl P2) => "engrandeced" ;
    VP (Imp Pl P3) => "engrandezcan" ;
    VP (Pass Sg Masc) => "engrandecido" ;
    VP (Pass Sg Fem) => "engrandecida" ;
    VP (Pass Pl Masc) => "engrandecidos" ;
    VP (Pass Pl Fem) => "engrandecidas"
    }
  } ;

lin engravecer_V = verboV 
 {s = table {
    VI Infn => "engravecer" ;
    VI Ger => "engraveciendo" ;
    VI Part => "engravecido" ;
    VP (Pres Ind Sg P1) => "engravezco" ;
    VP (Pres Ind Sg P2) => "engraveces" ;
    VP (Pres Ind Sg P3) => "engravece" ;
    VP (Pres Ind Pl P1) => "engravecemos" ;
    VP (Pres Ind Pl P2) => "engravecéis" ;
    VP (Pres Ind Pl P3) => "engravecen" ;
    VP (Pres Subj Sg P1) => "engravezca" ;
    VP (Pres Subj Sg P2) => "engravezcas" ;
    VP (Pres Subj Sg P3) => "engravezca" ;
    VP (Pres Subj Pl P1) => "engravezcamos" ;
    VP (Pres Subj Pl P2) => "engravezcáis" ;
    VP (Pres Subj Pl P3) => "engravezcan" ;
    VP (Impf Ind Sg P1) => "engravecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "engravecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "engravecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "engravecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engravecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engravecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engraveciera" ; "engraveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engravecieras" ; "engravecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engraveciera" ; "engraveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engraveciéramos" ; "engraveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engravecierais" ; "engravecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engravecieran" ; "engraveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "engravecí" ;--# notpresent
    VP (Pret Sg P2) => "engraveciste" ;--# notpresent
    VP (Pret Sg P3) => "engraveció" ;--# notpresent
    VP (Pret Pl P1) => "engravecimos" ;--# notpresent
    VP (Pret Pl P2) => "engravecisteis" ;--# notpresent
    VP (Pret Pl P3) => "engravecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engraveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engravecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engravecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "engraveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engraveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engravecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engraveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "engravecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "engraveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "engraveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engraveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engravecieren" ;--# notpresent
    VP (Cond Sg P1) => "engravecería" ;--# notpresent
    VP (Cond Sg P2) => "engravecerías" ;--# notpresent
    VP (Cond Sg P3) => "engravecería" ;--# notpresent
    VP (Cond Pl P1) => "engraveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "engraveceríais" ;--# notpresent
    VP (Cond Pl P3) => "engravecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "engravece" ;
    VP (Imp Sg P3) => "engravezca" ;
    VP (Imp Pl P1) => "engravezcamos" ;
    VP (Imp Pl P2) => "engraveced" ;
    VP (Imp Pl P3) => "engravezcan" ;
    VP (Pass Sg Masc) => "engravecido" ;
    VP (Pass Sg Fem) => "engravecida" ;
    VP (Pass Pl Masc) => "engravecidos" ;
    VP (Pass Pl Fem) => "engravecidas"
    }
  } ;

lin enllentecer_V = verboV 
 {s = table {
    VI Infn => "enllentecer" ;
    VI Ger => "enllenteciendo" ;
    VI Part => "enllentecido" ;
    VP (Pres Ind Sg P1) => "enllentezco" ;
    VP (Pres Ind Sg P2) => "enllenteces" ;
    VP (Pres Ind Sg P3) => "enllentece" ;
    VP (Pres Ind Pl P1) => "enllentecemos" ;
    VP (Pres Ind Pl P2) => "enllentecéis" ;
    VP (Pres Ind Pl P3) => "enllentecen" ;
    VP (Pres Subj Sg P1) => "enllentezca" ;
    VP (Pres Subj Sg P2) => "enllentezcas" ;
    VP (Pres Subj Sg P3) => "enllentezca" ;
    VP (Pres Subj Pl P1) => "enllentezcamos" ;
    VP (Pres Subj Pl P2) => "enllentezcáis" ;
    VP (Pres Subj Pl P3) => "enllentezcan" ;
    VP (Impf Ind Sg P1) => "enllentecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enllentecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enllentecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enllentecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enllentecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enllentecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enllenteciera" ; "enllenteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enllentecieras" ; "enllentecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enllenteciera" ; "enllenteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enllenteciéramos" ; "enllenteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enllentecierais" ; "enllentecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enllentecieran" ; "enllenteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enllentecí" ;--# notpresent
    VP (Pret Sg P2) => "enllenteciste" ;--# notpresent
    VP (Pret Sg P3) => "enllenteció" ;--# notpresent
    VP (Pret Pl P1) => "enllentecimos" ;--# notpresent
    VP (Pret Pl P2) => "enllentecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enllentecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enllenteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enllentecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enllentecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enllenteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enllenteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enllentecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enllenteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enllentecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enllenteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enllenteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enllenteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enllentecieren" ;--# notpresent
    VP (Cond Sg P1) => "enllentecería" ;--# notpresent
    VP (Cond Sg P2) => "enllentecerías" ;--# notpresent
    VP (Cond Sg P3) => "enllentecería" ;--# notpresent
    VP (Cond Pl P1) => "enllenteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enllenteceríais" ;--# notpresent
    VP (Cond Pl P3) => "enllentecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enllentece" ;
    VP (Imp Sg P3) => "enllentezca" ;
    VP (Imp Pl P1) => "enllentezcamos" ;
    VP (Imp Pl P2) => "enllenteced" ;
    VP (Imp Pl P3) => "enllentezcan" ;
    VP (Pass Sg Masc) => "enllentecido" ;
    VP (Pass Sg Fem) => "enllentecida" ;
    VP (Pass Pl Masc) => "enllentecidos" ;
    VP (Pass Pl Fem) => "enllentecidas"
    }
  } ;

lin enlobreguecer_V = verboV 
 {s = table {
    VI Infn => "enlobreguecer" ;
    VI Ger => "enlobregueciendo" ;
    VI Part => "enlobreguecido" ;
    VP (Pres Ind Sg P1) => "enlobreguezco" ;
    VP (Pres Ind Sg P2) => "enlobregueces" ;
    VP (Pres Ind Sg P3) => "enlobreguece" ;
    VP (Pres Ind Pl P1) => "enlobreguecemos" ;
    VP (Pres Ind Pl P2) => "enlobreguecéis" ;
    VP (Pres Ind Pl P3) => "enlobreguecen" ;
    VP (Pres Subj Sg P1) => "enlobreguezca" ;
    VP (Pres Subj Sg P2) => "enlobreguezcas" ;
    VP (Pres Subj Sg P3) => "enlobreguezca" ;
    VP (Pres Subj Pl P1) => "enlobreguezcamos" ;
    VP (Pres Subj Pl P2) => "enlobreguezcáis" ;
    VP (Pres Subj Pl P3) => "enlobreguezcan" ;
    VP (Impf Ind Sg P1) => "enlobreguecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enlobreguecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enlobreguecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enlobreguecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enlobreguecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enlobreguecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enlobregueciera" ; "enlobregueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enlobreguecieras" ; "enlobreguecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enlobregueciera" ; "enlobregueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enlobregueciéramos" ; "enlobregueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enlobreguecierais" ; "enlobreguecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enlobreguecieran" ; "enlobregueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enlobreguecí" ;--# notpresent
    VP (Pret Sg P2) => "enlobregueciste" ;--# notpresent
    VP (Pret Sg P3) => "enlobregueció" ;--# notpresent
    VP (Pret Pl P1) => "enlobreguecimos" ;--# notpresent
    VP (Pret Pl P2) => "enlobreguecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enlobreguecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enlobregueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enlobreguecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enlobreguecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enlobregueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enlobregueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enlobreguecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enlobregueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enlobreguecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enlobregueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enlobregueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enlobregueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enlobreguecieren" ;--# notpresent
    VP (Cond Sg P1) => "enlobreguecería" ;--# notpresent
    VP (Cond Sg P2) => "enlobreguecerías" ;--# notpresent
    VP (Cond Sg P3) => "enlobreguecería" ;--# notpresent
    VP (Cond Pl P1) => "enlobregueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enlobregueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enlobreguecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enlobreguece" ;
    VP (Imp Sg P3) => "enlobreguezca" ;
    VP (Imp Pl P1) => "enlobreguezcamos" ;
    VP (Imp Pl P2) => "enlobregueced" ;
    VP (Imp Pl P3) => "enlobreguezcan" ;
    VP (Pass Sg Masc) => "enlobreguecido" ;
    VP (Pass Sg Fem) => "enlobreguecida" ;
    VP (Pass Pl Masc) => "enlobreguecidos" ;
    VP (Pass Pl Fem) => "enlobreguecidas"
    }
  } ;

lin enloquecer_V = verboV 
 {s = table {
    VI Infn => "enloquecer" ;
    VI Ger => "enloqueciendo" ;
    VI Part => "enloquecido" ;
    VP (Pres Ind Sg P1) => "enloquezco" ;
    VP (Pres Ind Sg P2) => "enloqueces" ;
    VP (Pres Ind Sg P3) => "enloquece" ;
    VP (Pres Ind Pl P1) => "enloquecemos" ;
    VP (Pres Ind Pl P2) => "enloquecéis" ;
    VP (Pres Ind Pl P3) => "enloquecen" ;
    VP (Pres Subj Sg P1) => "enloquezca" ;
    VP (Pres Subj Sg P2) => "enloquezcas" ;
    VP (Pres Subj Sg P3) => "enloquezca" ;
    VP (Pres Subj Pl P1) => "enloquezcamos" ;
    VP (Pres Subj Pl P2) => "enloquezcáis" ;
    VP (Pres Subj Pl P3) => "enloquezcan" ;
    VP (Impf Ind Sg P1) => "enloquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enloquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enloquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enloquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enloquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enloquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enloqueciera" ; "enloqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enloquecieras" ; "enloquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enloqueciera" ; "enloqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enloqueciéramos" ; "enloqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enloquecierais" ; "enloquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enloquecieran" ; "enloqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enloquecí" ;--# notpresent
    VP (Pret Sg P2) => "enloqueciste" ;--# notpresent
    VP (Pret Sg P3) => "enloqueció" ;--# notpresent
    VP (Pret Pl P1) => "enloquecimos" ;--# notpresent
    VP (Pret Pl P2) => "enloquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enloquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enloqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enloquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enloquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enloqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enloqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enloquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enloqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enloquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enloqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enloqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enloqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enloquecieren" ;--# notpresent
    VP (Cond Sg P1) => "enloquecería" ;--# notpresent
    VP (Cond Sg P2) => "enloquecerías" ;--# notpresent
    VP (Cond Sg P3) => "enloquecería" ;--# notpresent
    VP (Cond Pl P1) => "enloqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enloqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enloquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enloquece" ;
    VP (Imp Sg P3) => "enloquezca" ;
    VP (Imp Pl P1) => "enloquezcamos" ;
    VP (Imp Pl P2) => "enloqueced" ;
    VP (Imp Pl P3) => "enloquezcan" ;
    VP (Pass Sg Masc) => "enloquecido" ;
    VP (Pass Sg Fem) => "enloquecida" ;
    VP (Pass Pl Masc) => "enloquecidos" ;
    VP (Pass Pl Fem) => "enloquecidas"
    }
  } ;

lin enlustrecer_V = verboV 
 {s = table {
    VI Infn => "enlustrecer" ;
    VI Ger => "enlustreciendo" ;
    VI Part => "enlustrecido" ;
    VP (Pres Ind Sg P1) => "enlustrezco" ;
    VP (Pres Ind Sg P2) => "enlustreces" ;
    VP (Pres Ind Sg P3) => "enlustrece" ;
    VP (Pres Ind Pl P1) => "enlustrecemos" ;
    VP (Pres Ind Pl P2) => "enlustrecéis" ;
    VP (Pres Ind Pl P3) => "enlustrecen" ;
    VP (Pres Subj Sg P1) => "enlustrezca" ;
    VP (Pres Subj Sg P2) => "enlustrezcas" ;
    VP (Pres Subj Sg P3) => "enlustrezca" ;
    VP (Pres Subj Pl P1) => "enlustrezcamos" ;
    VP (Pres Subj Pl P2) => "enlustrezcáis" ;
    VP (Pres Subj Pl P3) => "enlustrezcan" ;
    VP (Impf Ind Sg P1) => "enlustrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enlustrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enlustrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enlustrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enlustrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enlustrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enlustreciera" ; "enlustreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enlustrecieras" ; "enlustrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enlustreciera" ; "enlustreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enlustreciéramos" ; "enlustreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enlustrecierais" ; "enlustrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enlustrecieran" ; "enlustreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enlustrecí" ;--# notpresent
    VP (Pret Sg P2) => "enlustreciste" ;--# notpresent
    VP (Pret Sg P3) => "enlustreció" ;--# notpresent
    VP (Pret Pl P1) => "enlustrecimos" ;--# notpresent
    VP (Pret Pl P2) => "enlustrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enlustrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enlustreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enlustrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enlustrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enlustreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enlustreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enlustrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enlustreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enlustrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enlustreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enlustreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enlustreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enlustrecieren" ;--# notpresent
    VP (Cond Sg P1) => "enlustrecería" ;--# notpresent
    VP (Cond Sg P2) => "enlustrecerías" ;--# notpresent
    VP (Cond Sg P3) => "enlustrecería" ;--# notpresent
    VP (Cond Pl P1) => "enlustreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enlustreceríais" ;--# notpresent
    VP (Cond Pl P3) => "enlustrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enlustrece" ;
    VP (Imp Sg P3) => "enlustrezca" ;
    VP (Imp Pl P1) => "enlustrezcamos" ;
    VP (Imp Pl P2) => "enlustreced" ;
    VP (Imp Pl P3) => "enlustrezcan" ;
    VP (Pass Sg Masc) => "enlustrecido" ;
    VP (Pass Sg Fem) => "enlustrecida" ;
    VP (Pass Pl Masc) => "enlustrecidos" ;
    VP (Pass Pl Fem) => "enlustrecidas"
    }
  } ;

lin enmagrecer_V = verboV 
 {s = table {
    VI Infn => "enmagrecer" ;
    VI Ger => "enmagreciendo" ;
    VI Part => "enmagrecido" ;
    VP (Pres Ind Sg P1) => "enmagrezco" ;
    VP (Pres Ind Sg P2) => "enmagreces" ;
    VP (Pres Ind Sg P3) => "enmagrece" ;
    VP (Pres Ind Pl P1) => "enmagrecemos" ;
    VP (Pres Ind Pl P2) => "enmagrecéis" ;
    VP (Pres Ind Pl P3) => "enmagrecen" ;
    VP (Pres Subj Sg P1) => "enmagrezca" ;
    VP (Pres Subj Sg P2) => "enmagrezcas" ;
    VP (Pres Subj Sg P3) => "enmagrezca" ;
    VP (Pres Subj Pl P1) => "enmagrezcamos" ;
    VP (Pres Subj Pl P2) => "enmagrezcáis" ;
    VP (Pres Subj Pl P3) => "enmagrezcan" ;
    VP (Impf Ind Sg P1) => "enmagrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmagrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmagrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmagrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmagrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmagrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmagreciera" ; "enmagreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmagrecieras" ; "enmagrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmagreciera" ; "enmagreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmagreciéramos" ; "enmagreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmagrecierais" ; "enmagrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmagrecieran" ; "enmagreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enmagrecí" ;--# notpresent
    VP (Pret Sg P2) => "enmagreciste" ;--# notpresent
    VP (Pret Sg P3) => "enmagreció" ;--# notpresent
    VP (Pret Pl P1) => "enmagrecimos" ;--# notpresent
    VP (Pret Pl P2) => "enmagrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enmagrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmagreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmagrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmagrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmagreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmagreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmagrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmagreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmagrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmagreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmagreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmagreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmagrecieren" ;--# notpresent
    VP (Cond Sg P1) => "enmagrecería" ;--# notpresent
    VP (Cond Sg P2) => "enmagrecerías" ;--# notpresent
    VP (Cond Sg P3) => "enmagrecería" ;--# notpresent
    VP (Cond Pl P1) => "enmagreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmagreceríais" ;--# notpresent
    VP (Cond Pl P3) => "enmagrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmagrece" ;
    VP (Imp Sg P3) => "enmagrezca" ;
    VP (Imp Pl P1) => "enmagrezcamos" ;
    VP (Imp Pl P2) => "enmagreced" ;
    VP (Imp Pl P3) => "enmagrezcan" ;
    VP (Pass Sg Masc) => "enmagrecido" ;
    VP (Pass Sg Fem) => "enmagrecida" ;
    VP (Pass Pl Masc) => "enmagrecidos" ;
    VP (Pass Pl Fem) => "enmagrecidas"
    }
  } ;

lin enmalecer_V = verboV 
 {s = table {
    VI Infn => "enmalecer" ;
    VI Ger => "enmaleciendo" ;
    VI Part => "enmalecido" ;
    VP (Pres Ind Sg P1) => "enmalezco" ;
    VP (Pres Ind Sg P2) => "enmaleces" ;
    VP (Pres Ind Sg P3) => "enmalece" ;
    VP (Pres Ind Pl P1) => "enmalecemos" ;
    VP (Pres Ind Pl P2) => "enmalecéis" ;
    VP (Pres Ind Pl P3) => "enmalecen" ;
    VP (Pres Subj Sg P1) => "enmalezca" ;
    VP (Pres Subj Sg P2) => "enmalezcas" ;
    VP (Pres Subj Sg P3) => "enmalezca" ;
    VP (Pres Subj Pl P1) => "enmalezcamos" ;
    VP (Pres Subj Pl P2) => "enmalezcáis" ;
    VP (Pres Subj Pl P3) => "enmalezcan" ;
    VP (Impf Ind Sg P1) => "enmalecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmalecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmalecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmalecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmalecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmalecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmaleciera" ; "enmaleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmalecieras" ; "enmalecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmaleciera" ; "enmaleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmaleciéramos" ; "enmaleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmalecierais" ; "enmalecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmalecieran" ; "enmaleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enmalecí" ;--# notpresent
    VP (Pret Sg P2) => "enmaleciste" ;--# notpresent
    VP (Pret Sg P3) => "enmaleció" ;--# notpresent
    VP (Pret Pl P1) => "enmalecimos" ;--# notpresent
    VP (Pret Pl P2) => "enmalecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enmalecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmaleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmalecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmalecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmaleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmaleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmalecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmaleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmalecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmaleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmaleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmaleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmalecieren" ;--# notpresent
    VP (Cond Sg P1) => "enmalecería" ;--# notpresent
    VP (Cond Sg P2) => "enmalecerías" ;--# notpresent
    VP (Cond Sg P3) => "enmalecería" ;--# notpresent
    VP (Cond Pl P1) => "enmaleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmaleceríais" ;--# notpresent
    VP (Cond Pl P3) => "enmalecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmalece" ;
    VP (Imp Sg P3) => "enmalezca" ;
    VP (Imp Pl P1) => "enmalezcamos" ;
    VP (Imp Pl P2) => "enmaleced" ;
    VP (Imp Pl P3) => "enmalezcan" ;
    VP (Pass Sg Masc) => "enmalecido" ;
    VP (Pass Sg Fem) => "enmalecida" ;
    VP (Pass Pl Masc) => "enmalecidos" ;
    VP (Pass Pl Fem) => "enmalecidas"
    }
  } ;

lin enmohecer_V = verboV 
 {s = table {
    VI Infn => "enmohecer" ;
    VI Ger => "enmoheciendo" ;
    VI Part => "enmohecido" ;
    VP (Pres Ind Sg P1) => "enmohezco" ;
    VP (Pres Ind Sg P2) => "enmoheces" ;
    VP (Pres Ind Sg P3) => "enmohece" ;
    VP (Pres Ind Pl P1) => "enmohecemos" ;
    VP (Pres Ind Pl P2) => "enmohecéis" ;
    VP (Pres Ind Pl P3) => "enmohecen" ;
    VP (Pres Subj Sg P1) => "enmohezca" ;
    VP (Pres Subj Sg P2) => "enmohezcas" ;
    VP (Pres Subj Sg P3) => "enmohezca" ;
    VP (Pres Subj Pl P1) => "enmohezcamos" ;
    VP (Pres Subj Pl P2) => "enmohezcáis" ;
    VP (Pres Subj Pl P3) => "enmohezcan" ;
    VP (Impf Ind Sg P1) => "enmohecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmohecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmohecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmohecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmohecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmohecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmoheciera" ; "enmoheciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmohecieras" ; "enmohecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmoheciera" ; "enmoheciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmoheciéramos" ; "enmoheciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmohecierais" ; "enmohecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmohecieran" ; "enmoheciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enmohecí" ;--# notpresent
    VP (Pret Sg P2) => "enmoheciste" ;--# notpresent
    VP (Pret Sg P3) => "enmoheció" ;--# notpresent
    VP (Pret Pl P1) => "enmohecimos" ;--# notpresent
    VP (Pret Pl P2) => "enmohecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enmohecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmoheceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmohecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmohecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmoheceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmoheceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmohecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmoheciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmohecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmoheciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmoheciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmoheciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmohecieren" ;--# notpresent
    VP (Cond Sg P1) => "enmohecería" ;--# notpresent
    VP (Cond Sg P2) => "enmohecerías" ;--# notpresent
    VP (Cond Sg P3) => "enmohecería" ;--# notpresent
    VP (Cond Pl P1) => "enmoheceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmoheceríais" ;--# notpresent
    VP (Cond Pl P3) => "enmohecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmohece" ;
    VP (Imp Sg P3) => "enmohezca" ;
    VP (Imp Pl P1) => "enmohezcamos" ;
    VP (Imp Pl P2) => "enmoheced" ;
    VP (Imp Pl P3) => "enmohezcan" ;
    VP (Pass Sg Masc) => "enmohecido" ;
    VP (Pass Sg Fem) => "enmohecida" ;
    VP (Pass Pl Masc) => "enmohecidos" ;
    VP (Pass Pl Fem) => "enmohecidas"
    }
  } ;

lin enmollecer_V = verboV 
 {s = table {
    VI Infn => "enmollecer" ;
    VI Ger => "enmolleciendo" ;
    VI Part => "enmollecido" ;
    VP (Pres Ind Sg P1) => "enmollezco" ;
    VP (Pres Ind Sg P2) => "enmolleces" ;
    VP (Pres Ind Sg P3) => "enmollece" ;
    VP (Pres Ind Pl P1) => "enmollecemos" ;
    VP (Pres Ind Pl P2) => "enmollecéis" ;
    VP (Pres Ind Pl P3) => "enmollecen" ;
    VP (Pres Subj Sg P1) => "enmollezca" ;
    VP (Pres Subj Sg P2) => "enmollezcas" ;
    VP (Pres Subj Sg P3) => "enmollezca" ;
    VP (Pres Subj Pl P1) => "enmollezcamos" ;
    VP (Pres Subj Pl P2) => "enmollezcáis" ;
    VP (Pres Subj Pl P3) => "enmollezcan" ;
    VP (Impf Ind Sg P1) => "enmollecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmollecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmollecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmollecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmollecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmollecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmolleciera" ; "enmolleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmollecieras" ; "enmollecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmolleciera" ; "enmolleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmolleciéramos" ; "enmolleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmollecierais" ; "enmollecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmollecieran" ; "enmolleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enmollecí" ;--# notpresent
    VP (Pret Sg P2) => "enmolleciste" ;--# notpresent
    VP (Pret Sg P3) => "enmolleció" ;--# notpresent
    VP (Pret Pl P1) => "enmollecimos" ;--# notpresent
    VP (Pret Pl P2) => "enmollecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enmollecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmolleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmollecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmollecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmolleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmolleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmollecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmolleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmollecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmolleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmolleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmolleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmollecieren" ;--# notpresent
    VP (Cond Sg P1) => "enmollecería" ;--# notpresent
    VP (Cond Sg P2) => "enmollecerías" ;--# notpresent
    VP (Cond Sg P3) => "enmollecería" ;--# notpresent
    VP (Cond Pl P1) => "enmolleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmolleceríais" ;--# notpresent
    VP (Cond Pl P3) => "enmollecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmollece" ;
    VP (Imp Sg P3) => "enmollezca" ;
    VP (Imp Pl P1) => "enmollezcamos" ;
    VP (Imp Pl P2) => "enmolleced" ;
    VP (Imp Pl P3) => "enmollezcan" ;
    VP (Pass Sg Masc) => "enmollecido" ;
    VP (Pass Sg Fem) => "enmollecida" ;
    VP (Pass Pl Masc) => "enmollecidos" ;
    VP (Pass Pl Fem) => "enmollecidas"
    }
  } ;

lin enmudecer_V = verboV 
 {s = table {
    VI Infn => "enmudecer" ;
    VI Ger => "enmudeciendo" ;
    VI Part => "enmudecido" ;
    VP (Pres Ind Sg P1) => "enmudezco" ;
    VP (Pres Ind Sg P2) => "enmudeces" ;
    VP (Pres Ind Sg P3) => "enmudece" ;
    VP (Pres Ind Pl P1) => "enmudecemos" ;
    VP (Pres Ind Pl P2) => "enmudecéis" ;
    VP (Pres Ind Pl P3) => "enmudecen" ;
    VP (Pres Subj Sg P1) => "enmudezca" ;
    VP (Pres Subj Sg P2) => "enmudezcas" ;
    VP (Pres Subj Sg P3) => "enmudezca" ;
    VP (Pres Subj Pl P1) => "enmudezcamos" ;
    VP (Pres Subj Pl P2) => "enmudezcáis" ;
    VP (Pres Subj Pl P3) => "enmudezcan" ;
    VP (Impf Ind Sg P1) => "enmudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmudeciera" ; "enmudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmudecieras" ; "enmudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmudeciera" ; "enmudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmudeciéramos" ; "enmudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmudecierais" ; "enmudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmudecieran" ; "enmudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enmudecí" ;--# notpresent
    VP (Pret Sg P2) => "enmudeciste" ;--# notpresent
    VP (Pret Sg P3) => "enmudeció" ;--# notpresent
    VP (Pret Pl P1) => "enmudecimos" ;--# notpresent
    VP (Pret Pl P2) => "enmudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enmudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmudecieren" ;--# notpresent
    VP (Cond Sg P1) => "enmudecería" ;--# notpresent
    VP (Cond Sg P2) => "enmudecerías" ;--# notpresent
    VP (Cond Sg P3) => "enmudecería" ;--# notpresent
    VP (Cond Pl P1) => "enmudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "enmudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmudece" ;
    VP (Imp Sg P3) => "enmudezca" ;
    VP (Imp Pl P1) => "enmudezcamos" ;
    VP (Imp Pl P2) => "enmudeced" ;
    VP (Imp Pl P3) => "enmudezcan" ;
    VP (Pass Sg Masc) => "enmudecido" ;
    VP (Pass Sg Fem) => "enmudecida" ;
    VP (Pass Pl Masc) => "enmudecidos" ;
    VP (Pass Pl Fem) => "enmudecidas"
    }
  } ;

lin ennegrecer_V = verboV 
 {s = table {
    VI Infn => "ennegrecer" ;
    VI Ger => "ennegreciendo" ;
    VI Part => "ennegrecido" ;
    VP (Pres Ind Sg P1) => "ennegrezco" ;
    VP (Pres Ind Sg P2) => "ennegreces" ;
    VP (Pres Ind Sg P3) => "ennegrece" ;
    VP (Pres Ind Pl P1) => "ennegrecemos" ;
    VP (Pres Ind Pl P2) => "ennegrecéis" ;
    VP (Pres Ind Pl P3) => "ennegrecen" ;
    VP (Pres Subj Sg P1) => "ennegrezca" ;
    VP (Pres Subj Sg P2) => "ennegrezcas" ;
    VP (Pres Subj Sg P3) => "ennegrezca" ;
    VP (Pres Subj Pl P1) => "ennegrezcamos" ;
    VP (Pres Subj Pl P2) => "ennegrezcáis" ;
    VP (Pres Subj Pl P3) => "ennegrezcan" ;
    VP (Impf Ind Sg P1) => "ennegrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ennegrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ennegrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ennegrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ennegrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ennegrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ennegreciera" ; "ennegreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ennegrecieras" ; "ennegrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ennegreciera" ; "ennegreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ennegreciéramos" ; "ennegreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ennegrecierais" ; "ennegrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ennegrecieran" ; "ennegreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ennegrecí" ;--# notpresent
    VP (Pret Sg P2) => "ennegreciste" ;--# notpresent
    VP (Pret Sg P3) => "ennegreció" ;--# notpresent
    VP (Pret Pl P1) => "ennegrecimos" ;--# notpresent
    VP (Pret Pl P2) => "ennegrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ennegrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ennegreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ennegrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ennegrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ennegreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ennegreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ennegrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ennegreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ennegrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ennegreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ennegreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ennegreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ennegrecieren" ;--# notpresent
    VP (Cond Sg P1) => "ennegrecería" ;--# notpresent
    VP (Cond Sg P2) => "ennegrecerías" ;--# notpresent
    VP (Cond Sg P3) => "ennegrecería" ;--# notpresent
    VP (Cond Pl P1) => "ennegreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ennegreceríais" ;--# notpresent
    VP (Cond Pl P3) => "ennegrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ennegrece" ;
    VP (Imp Sg P3) => "ennegrezca" ;
    VP (Imp Pl P1) => "ennegrezcamos" ;
    VP (Imp Pl P2) => "ennegreced" ;
    VP (Imp Pl P3) => "ennegrezcan" ;
    VP (Pass Sg Masc) => "ennegrecido" ;
    VP (Pass Sg Fem) => "ennegrecida" ;
    VP (Pass Pl Masc) => "ennegrecidos" ;
    VP (Pass Pl Fem) => "ennegrecidas"
    }
  } ;

lin ennoblecer_V = verboV 
 {s = table {
    VI Infn => "ennoblecer" ;
    VI Ger => "ennobleciendo" ;
    VI Part => "ennoblecido" ;
    VP (Pres Ind Sg P1) => "ennoblezco" ;
    VP (Pres Ind Sg P2) => "ennobleces" ;
    VP (Pres Ind Sg P3) => "ennoblece" ;
    VP (Pres Ind Pl P1) => "ennoblecemos" ;
    VP (Pres Ind Pl P2) => "ennoblecéis" ;
    VP (Pres Ind Pl P3) => "ennoblecen" ;
    VP (Pres Subj Sg P1) => "ennoblezca" ;
    VP (Pres Subj Sg P2) => "ennoblezcas" ;
    VP (Pres Subj Sg P3) => "ennoblezca" ;
    VP (Pres Subj Pl P1) => "ennoblezcamos" ;
    VP (Pres Subj Pl P2) => "ennoblezcáis" ;
    VP (Pres Subj Pl P3) => "ennoblezcan" ;
    VP (Impf Ind Sg P1) => "ennoblecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ennoblecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ennoblecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ennoblecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ennoblecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ennoblecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ennobleciera" ; "ennobleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ennoblecieras" ; "ennoblecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ennobleciera" ; "ennobleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ennobleciéramos" ; "ennobleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ennoblecierais" ; "ennoblecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ennoblecieran" ; "ennobleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ennoblecí" ;--# notpresent
    VP (Pret Sg P2) => "ennobleciste" ;--# notpresent
    VP (Pret Sg P3) => "ennobleció" ;--# notpresent
    VP (Pret Pl P1) => "ennoblecimos" ;--# notpresent
    VP (Pret Pl P2) => "ennoblecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ennoblecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ennobleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ennoblecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ennoblecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ennobleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ennobleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ennoblecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ennobleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ennoblecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ennobleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ennobleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ennobleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ennoblecieren" ;--# notpresent
    VP (Cond Sg P1) => "ennoblecería" ;--# notpresent
    VP (Cond Sg P2) => "ennoblecerías" ;--# notpresent
    VP (Cond Sg P3) => "ennoblecería" ;--# notpresent
    VP (Cond Pl P1) => "ennobleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ennobleceríais" ;--# notpresent
    VP (Cond Pl P3) => "ennoblecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ennoblece" ;
    VP (Imp Sg P3) => "ennoblezca" ;
    VP (Imp Pl P1) => "ennoblezcamos" ;
    VP (Imp Pl P2) => "ennobleced" ;
    VP (Imp Pl P3) => "ennoblezcan" ;
    VP (Pass Sg Masc) => "ennoblecido" ;
    VP (Pass Sg Fem) => "ennoblecida" ;
    VP (Pass Pl Masc) => "ennoblecidos" ;
    VP (Pass Pl Fem) => "ennoblecidas"
    }
  } ;

lin ennudecer_V = verboV 
 {s = table {
    VI Infn => "ennudecer" ;
    VI Ger => "ennudeciendo" ;
    VI Part => "ennudecido" ;
    VP (Pres Ind Sg P1) => "ennudezco" ;
    VP (Pres Ind Sg P2) => "ennudeces" ;
    VP (Pres Ind Sg P3) => "ennudece" ;
    VP (Pres Ind Pl P1) => "ennudecemos" ;
    VP (Pres Ind Pl P2) => "ennudecéis" ;
    VP (Pres Ind Pl P3) => "ennudecen" ;
    VP (Pres Subj Sg P1) => "ennudezca" ;
    VP (Pres Subj Sg P2) => "ennudezcas" ;
    VP (Pres Subj Sg P3) => "ennudezca" ;
    VP (Pres Subj Pl P1) => "ennudezcamos" ;
    VP (Pres Subj Pl P2) => "ennudezcáis" ;
    VP (Pres Subj Pl P3) => "ennudezcan" ;
    VP (Impf Ind Sg P1) => "ennudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ennudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ennudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ennudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ennudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ennudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ennudeciera" ; "ennudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ennudecieras" ; "ennudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ennudeciera" ; "ennudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ennudeciéramos" ; "ennudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ennudecierais" ; "ennudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ennudecieran" ; "ennudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ennudecí" ;--# notpresent
    VP (Pret Sg P2) => "ennudeciste" ;--# notpresent
    VP (Pret Sg P3) => "ennudeció" ;--# notpresent
    VP (Pret Pl P1) => "ennudecimos" ;--# notpresent
    VP (Pret Pl P2) => "ennudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ennudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ennudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ennudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ennudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ennudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ennudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ennudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ennudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ennudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ennudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ennudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ennudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ennudecieren" ;--# notpresent
    VP (Cond Sg P1) => "ennudecería" ;--# notpresent
    VP (Cond Sg P2) => "ennudecerías" ;--# notpresent
    VP (Cond Sg P3) => "ennudecería" ;--# notpresent
    VP (Cond Pl P1) => "ennudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ennudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "ennudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ennudece" ;
    VP (Imp Sg P3) => "ennudezca" ;
    VP (Imp Pl P1) => "ennudezcamos" ;
    VP (Imp Pl P2) => "ennudeced" ;
    VP (Imp Pl P3) => "ennudezcan" ;
    VP (Pass Sg Masc) => "ennudecido" ;
    VP (Pass Sg Fem) => "ennudecida" ;
    VP (Pass Pl Masc) => "ennudecidos" ;
    VP (Pass Pl Fem) => "ennudecidas"
    }
  } ;

lin enorgullecer_V = verboV 
 {s = table {
    VI Infn => "enorgullecer" ;
    VI Ger => "enorgulleciendo" ;
    VI Part => "enorgullecido" ;
    VP (Pres Ind Sg P1) => "enorgullezco" ;
    VP (Pres Ind Sg P2) => "enorgulleces" ;
    VP (Pres Ind Sg P3) => "enorgullece" ;
    VP (Pres Ind Pl P1) => "enorgullecemos" ;
    VP (Pres Ind Pl P2) => "enorgullecéis" ;
    VP (Pres Ind Pl P3) => "enorgullecen" ;
    VP (Pres Subj Sg P1) => "enorgullezca" ;
    VP (Pres Subj Sg P2) => "enorgullezcas" ;
    VP (Pres Subj Sg P3) => "enorgullezca" ;
    VP (Pres Subj Pl P1) => "enorgullezcamos" ;
    VP (Pres Subj Pl P2) => "enorgullezcáis" ;
    VP (Pres Subj Pl P3) => "enorgullezcan" ;
    VP (Impf Ind Sg P1) => "enorgullecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enorgullecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enorgullecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enorgullecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enorgullecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enorgullecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enorgulleciera" ; "enorgulleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enorgullecieras" ; "enorgullecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enorgulleciera" ; "enorgulleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enorgulleciéramos" ; "enorgulleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enorgullecierais" ; "enorgullecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enorgullecieran" ; "enorgulleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enorgullecí" ;--# notpresent
    VP (Pret Sg P2) => "enorgulleciste" ;--# notpresent
    VP (Pret Sg P3) => "enorgulleció" ;--# notpresent
    VP (Pret Pl P1) => "enorgullecimos" ;--# notpresent
    VP (Pret Pl P2) => "enorgullecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enorgullecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enorgulleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enorgullecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enorgullecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enorgulleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enorgulleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enorgullecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enorgulleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enorgullecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enorgulleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enorgulleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enorgulleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enorgullecieren" ;--# notpresent
    VP (Cond Sg P1) => "enorgullecería" ;--# notpresent
    VP (Cond Sg P2) => "enorgullecerías" ;--# notpresent
    VP (Cond Sg P3) => "enorgullecería" ;--# notpresent
    VP (Cond Pl P1) => "enorgulleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enorgulleceríais" ;--# notpresent
    VP (Cond Pl P3) => "enorgullecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enorgullece" ;
    VP (Imp Sg P3) => "enorgullezca" ;
    VP (Imp Pl P1) => "enorgullezcamos" ;
    VP (Imp Pl P2) => "enorgulleced" ;
    VP (Imp Pl P3) => "enorgullezcan" ;
    VP (Pass Sg Masc) => "enorgullecido" ;
    VP (Pass Sg Fem) => "enorgullecida" ;
    VP (Pass Pl Masc) => "enorgullecidos" ;
    VP (Pass Pl Fem) => "enorgullecidas"
    }
  } ;

lin enralecer_V = verboV 
 {s = table {
    VI Infn => "enralecer" ;
    VI Ger => "enraleciendo" ;
    VI Part => "enralecido" ;
    VP (Pres Ind Sg P1) => "enralezco" ;
    VP (Pres Ind Sg P2) => "enraleces" ;
    VP (Pres Ind Sg P3) => "enralece" ;
    VP (Pres Ind Pl P1) => "enralecemos" ;
    VP (Pres Ind Pl P2) => "enralecéis" ;
    VP (Pres Ind Pl P3) => "enralecen" ;
    VP (Pres Subj Sg P1) => "enralezca" ;
    VP (Pres Subj Sg P2) => "enralezcas" ;
    VP (Pres Subj Sg P3) => "enralezca" ;
    VP (Pres Subj Pl P1) => "enralezcamos" ;
    VP (Pres Subj Pl P2) => "enralezcáis" ;
    VP (Pres Subj Pl P3) => "enralezcan" ;
    VP (Impf Ind Sg P1) => "enralecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enralecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enralecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enralecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enralecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enralecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enraleciera" ; "enraleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enralecieras" ; "enralecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enraleciera" ; "enraleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enraleciéramos" ; "enraleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enralecierais" ; "enralecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enralecieran" ; "enraleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enralecí" ;--# notpresent
    VP (Pret Sg P2) => "enraleciste" ;--# notpresent
    VP (Pret Sg P3) => "enraleció" ;--# notpresent
    VP (Pret Pl P1) => "enralecimos" ;--# notpresent
    VP (Pret Pl P2) => "enralecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enralecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enraleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enralecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enralecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enraleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enraleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enralecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enraleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enralecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enraleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enraleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enraleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enralecieren" ;--# notpresent
    VP (Cond Sg P1) => "enralecería" ;--# notpresent
    VP (Cond Sg P2) => "enralecerías" ;--# notpresent
    VP (Cond Sg P3) => "enralecería" ;--# notpresent
    VP (Cond Pl P1) => "enraleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enraleceríais" ;--# notpresent
    VP (Cond Pl P3) => "enralecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enralece" ;
    VP (Imp Sg P3) => "enralezca" ;
    VP (Imp Pl P1) => "enralezcamos" ;
    VP (Imp Pl P2) => "enraleced" ;
    VP (Imp Pl P3) => "enralezcan" ;
    VP (Pass Sg Masc) => "enralecido" ;
    VP (Pass Sg Fem) => "enralecida" ;
    VP (Pass Pl Masc) => "enralecidos" ;
    VP (Pass Pl Fem) => "enralecidas"
    }
  } ;

lin enrarecer_V = verboV 
 {s = table {
    VI Infn => "enrarecer" ;
    VI Ger => "enrareciendo" ;
    VI Part => "enrarecido" ;
    VP (Pres Ind Sg P1) => "enrarezco" ;
    VP (Pres Ind Sg P2) => "enrareces" ;
    VP (Pres Ind Sg P3) => "enrarece" ;
    VP (Pres Ind Pl P1) => "enrarecemos" ;
    VP (Pres Ind Pl P2) => "enrarecéis" ;
    VP (Pres Ind Pl P3) => "enrarecen" ;
    VP (Pres Subj Sg P1) => "enrarezca" ;
    VP (Pres Subj Sg P2) => "enrarezcas" ;
    VP (Pres Subj Sg P3) => "enrarezca" ;
    VP (Pres Subj Pl P1) => "enrarezcamos" ;
    VP (Pres Subj Pl P2) => "enrarezcáis" ;
    VP (Pres Subj Pl P3) => "enrarezcan" ;
    VP (Impf Ind Sg P1) => "enrarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enrarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enrarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enrarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enrarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enrarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enrareciera" ; "enrareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enrarecieras" ; "enrarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enrareciera" ; "enrareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enrareciéramos" ; "enrareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enrarecierais" ; "enrarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enrarecieran" ; "enrareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enrarecí" ;--# notpresent
    VP (Pret Sg P2) => "enrareciste" ;--# notpresent
    VP (Pret Sg P3) => "enrareció" ;--# notpresent
    VP (Pret Pl P1) => "enrarecimos" ;--# notpresent
    VP (Pret Pl P2) => "enrarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enrarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enrareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enrarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enrarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enrareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enrareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enrarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enrareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enrarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enrareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enrareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enrareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enrarecieren" ;--# notpresent
    VP (Cond Sg P1) => "enrarecería" ;--# notpresent
    VP (Cond Sg P2) => "enrarecerías" ;--# notpresent
    VP (Cond Sg P3) => "enrarecería" ;--# notpresent
    VP (Cond Pl P1) => "enrareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enrareceríais" ;--# notpresent
    VP (Cond Pl P3) => "enrarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enrarece" ;
    VP (Imp Sg P3) => "enrarezca" ;
    VP (Imp Pl P1) => "enrarezcamos" ;
    VP (Imp Pl P2) => "enrareced" ;
    VP (Imp Pl P3) => "enrarezcan" ;
    VP (Pass Sg Masc) => "enrarecido" ;
    VP (Pass Sg Fem) => "enrarecida" ;
    VP (Pass Pl Masc) => "enrarecidos" ;
    VP (Pass Pl Fem) => "enrarecidas"
    }
  } ;

lin enrigidecer_V = verboV 
 {s = table {
    VI Infn => "enrigidecer" ;
    VI Ger => "enrigideciendo" ;
    VI Part => "enrigidecido" ;
    VP (Pres Ind Sg P1) => "enrigidezco" ;
    VP (Pres Ind Sg P2) => "enrigideces" ;
    VP (Pres Ind Sg P3) => "enrigidece" ;
    VP (Pres Ind Pl P1) => "enrigidecemos" ;
    VP (Pres Ind Pl P2) => "enrigidecéis" ;
    VP (Pres Ind Pl P3) => "enrigidecen" ;
    VP (Pres Subj Sg P1) => "enrigidezca" ;
    VP (Pres Subj Sg P2) => "enrigidezcas" ;
    VP (Pres Subj Sg P3) => "enrigidezca" ;
    VP (Pres Subj Pl P1) => "enrigidezcamos" ;
    VP (Pres Subj Pl P2) => "enrigidezcáis" ;
    VP (Pres Subj Pl P3) => "enrigidezcan" ;
    VP (Impf Ind Sg P1) => "enrigidecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enrigidecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enrigidecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enrigidecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enrigidecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enrigidecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enrigideciera" ; "enrigideciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enrigidecieras" ; "enrigidecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enrigideciera" ; "enrigideciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enrigideciéramos" ; "enrigideciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enrigidecierais" ; "enrigidecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enrigidecieran" ; "enrigideciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enrigidecí" ;--# notpresent
    VP (Pret Sg P2) => "enrigideciste" ;--# notpresent
    VP (Pret Sg P3) => "enrigideció" ;--# notpresent
    VP (Pret Pl P1) => "enrigidecimos" ;--# notpresent
    VP (Pret Pl P2) => "enrigidecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enrigidecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enrigideceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enrigidecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enrigidecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enrigideceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enrigideceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enrigidecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enrigideciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enrigidecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enrigideciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enrigideciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enrigideciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enrigidecieren" ;--# notpresent
    VP (Cond Sg P1) => "enrigidecería" ;--# notpresent
    VP (Cond Sg P2) => "enrigidecerías" ;--# notpresent
    VP (Cond Sg P3) => "enrigidecería" ;--# notpresent
    VP (Cond Pl P1) => "enrigideceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enrigideceríais" ;--# notpresent
    VP (Cond Pl P3) => "enrigidecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enrigidece" ;
    VP (Imp Sg P3) => "enrigidezca" ;
    VP (Imp Pl P1) => "enrigidezcamos" ;
    VP (Imp Pl P2) => "enrigideced" ;
    VP (Imp Pl P3) => "enrigidezcan" ;
    VP (Pass Sg Masc) => "enrigidecido" ;
    VP (Pass Sg Fem) => "enrigidecida" ;
    VP (Pass Pl Masc) => "enrigidecidos" ;
    VP (Pass Pl Fem) => "enrigidecidas"
    }
  } ;

lin enriquecer_V = verboV 
 {s = table {
    VI Infn => "enriquecer" ;
    VI Ger => "enriqueciendo" ;
    VI Part => "enriquecido" ;
    VP (Pres Ind Sg P1) => "enriquezco" ;
    VP (Pres Ind Sg P2) => "enriqueces" ;
    VP (Pres Ind Sg P3) => "enriquece" ;
    VP (Pres Ind Pl P1) => "enriquecemos" ;
    VP (Pres Ind Pl P2) => "enriquecéis" ;
    VP (Pres Ind Pl P3) => "enriquecen" ;
    VP (Pres Subj Sg P1) => "enriquezca" ;
    VP (Pres Subj Sg P2) => "enriquezcas" ;
    VP (Pres Subj Sg P3) => "enriquezca" ;
    VP (Pres Subj Pl P1) => "enriquezcamos" ;
    VP (Pres Subj Pl P2) => "enriquezcáis" ;
    VP (Pres Subj Pl P3) => "enriquezcan" ;
    VP (Impf Ind Sg P1) => "enriquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enriquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enriquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enriquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enriquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enriquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enriqueciera" ; "enriqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enriquecieras" ; "enriquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enriqueciera" ; "enriqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enriqueciéramos" ; "enriqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enriquecierais" ; "enriquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enriquecieran" ; "enriqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enriquecí" ;--# notpresent
    VP (Pret Sg P2) => "enriqueciste" ;--# notpresent
    VP (Pret Sg P3) => "enriqueció" ;--# notpresent
    VP (Pret Pl P1) => "enriquecimos" ;--# notpresent
    VP (Pret Pl P2) => "enriquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enriquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enriqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enriquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enriquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enriqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enriqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enriquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enriqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enriquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enriqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enriqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enriqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enriquecieren" ;--# notpresent
    VP (Cond Sg P1) => "enriquecería" ;--# notpresent
    VP (Cond Sg P2) => "enriquecerías" ;--# notpresent
    VP (Cond Sg P3) => "enriquecería" ;--# notpresent
    VP (Cond Pl P1) => "enriqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enriqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enriquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enriquece" ;
    VP (Imp Sg P3) => "enriquezca" ;
    VP (Imp Pl P1) => "enriquezcamos" ;
    VP (Imp Pl P2) => "enriqueced" ;
    VP (Imp Pl P3) => "enriquezcan" ;
    VP (Pass Sg Masc) => "enriquecido" ;
    VP (Pass Sg Fem) => "enriquecida" ;
    VP (Pass Pl Masc) => "enriquecidos" ;
    VP (Pass Pl Fem) => "enriquecidas"
    }
  } ;

lin enrojecer_V = verboV 
 {s = table {
    VI Infn => "enrojecer" ;
    VI Ger => "enrojeciendo" ;
    VI Part => "enrojecido" ;
    VP (Pres Ind Sg P1) => "enrojezco" ;
    VP (Pres Ind Sg P2) => "enrojeces" ;
    VP (Pres Ind Sg P3) => "enrojece" ;
    VP (Pres Ind Pl P1) => "enrojecemos" ;
    VP (Pres Ind Pl P2) => "enrojecéis" ;
    VP (Pres Ind Pl P3) => "enrojecen" ;
    VP (Pres Subj Sg P1) => "enrojezca" ;
    VP (Pres Subj Sg P2) => "enrojezcas" ;
    VP (Pres Subj Sg P3) => "enrojezca" ;
    VP (Pres Subj Pl P1) => "enrojezcamos" ;
    VP (Pres Subj Pl P2) => "enrojezcáis" ;
    VP (Pres Subj Pl P3) => "enrojezcan" ;
    VP (Impf Ind Sg P1) => "enrojecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enrojecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enrojecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enrojecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enrojecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enrojecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enrojeciera" ; "enrojeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enrojecieras" ; "enrojecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enrojeciera" ; "enrojeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enrojeciéramos" ; "enrojeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enrojecierais" ; "enrojecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enrojecieran" ; "enrojeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enrojecí" ;--# notpresent
    VP (Pret Sg P2) => "enrojeciste" ;--# notpresent
    VP (Pret Sg P3) => "enrojeció" ;--# notpresent
    VP (Pret Pl P1) => "enrojecimos" ;--# notpresent
    VP (Pret Pl P2) => "enrojecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enrojecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enrojeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enrojecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enrojecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enrojeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enrojeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enrojecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enrojeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enrojecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enrojeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enrojeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enrojeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enrojecieren" ;--# notpresent
    VP (Cond Sg P1) => "enrojecería" ;--# notpresent
    VP (Cond Sg P2) => "enrojecerías" ;--# notpresent
    VP (Cond Sg P3) => "enrojecería" ;--# notpresent
    VP (Cond Pl P1) => "enrojeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enrojeceríais" ;--# notpresent
    VP (Cond Pl P3) => "enrojecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enrojece" ;
    VP (Imp Sg P3) => "enrojezca" ;
    VP (Imp Pl P1) => "enrojezcamos" ;
    VP (Imp Pl P2) => "enrojeced" ;
    VP (Imp Pl P3) => "enrojezcan" ;
    VP (Pass Sg Masc) => "enrojecido" ;
    VP (Pass Sg Fem) => "enrojecida" ;
    VP (Pass Pl Masc) => "enrojecidos" ;
    VP (Pass Pl Fem) => "enrojecidas"
    }
  } ;

lin enronquecer_V = verboV 
 {s = table {
    VI Infn => "enronquecer" ;
    VI Ger => "enronqueciendo" ;
    VI Part => "enronquecido" ;
    VP (Pres Ind Sg P1) => "enronquezco" ;
    VP (Pres Ind Sg P2) => "enronqueces" ;
    VP (Pres Ind Sg P3) => "enronquece" ;
    VP (Pres Ind Pl P1) => "enronquecemos" ;
    VP (Pres Ind Pl P2) => "enronquecéis" ;
    VP (Pres Ind Pl P3) => "enronquecen" ;
    VP (Pres Subj Sg P1) => "enronquezca" ;
    VP (Pres Subj Sg P2) => "enronquezcas" ;
    VP (Pres Subj Sg P3) => "enronquezca" ;
    VP (Pres Subj Pl P1) => "enronquezcamos" ;
    VP (Pres Subj Pl P2) => "enronquezcáis" ;
    VP (Pres Subj Pl P3) => "enronquezcan" ;
    VP (Impf Ind Sg P1) => "enronquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enronquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enronquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enronquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enronquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enronquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enronqueciera" ; "enronqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enronquecieras" ; "enronquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enronqueciera" ; "enronqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enronqueciéramos" ; "enronqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enronquecierais" ; "enronquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enronquecieran" ; "enronqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enronquecí" ;--# notpresent
    VP (Pret Sg P2) => "enronqueciste" ;--# notpresent
    VP (Pret Sg P3) => "enronqueció" ;--# notpresent
    VP (Pret Pl P1) => "enronquecimos" ;--# notpresent
    VP (Pret Pl P2) => "enronquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enronquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enronqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enronquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enronquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enronqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enronqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enronquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enronqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enronquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enronqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enronqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enronqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enronquecieren" ;--# notpresent
    VP (Cond Sg P1) => "enronquecería" ;--# notpresent
    VP (Cond Sg P2) => "enronquecerías" ;--# notpresent
    VP (Cond Sg P3) => "enronquecería" ;--# notpresent
    VP (Cond Pl P1) => "enronqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enronqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "enronquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enronquece" ;
    VP (Imp Sg P3) => "enronquezca" ;
    VP (Imp Pl P1) => "enronquezcamos" ;
    VP (Imp Pl P2) => "enronqueced" ;
    VP (Imp Pl P3) => "enronquezcan" ;
    VP (Pass Sg Masc) => "enronquecido" ;
    VP (Pass Sg Fem) => "enronquecida" ;
    VP (Pass Pl Masc) => "enronquecidos" ;
    VP (Pass Pl Fem) => "enronquecidas"
    }
  } ;

lin enrudecer_V = verboV 
 {s = table {
    VI Infn => "enrudecer" ;
    VI Ger => "enrudeciendo" ;
    VI Part => "enrudecido" ;
    VP (Pres Ind Sg P1) => "enrudezco" ;
    VP (Pres Ind Sg P2) => "enrudeces" ;
    VP (Pres Ind Sg P3) => "enrudece" ;
    VP (Pres Ind Pl P1) => "enrudecemos" ;
    VP (Pres Ind Pl P2) => "enrudecéis" ;
    VP (Pres Ind Pl P3) => "enrudecen" ;
    VP (Pres Subj Sg P1) => "enrudezca" ;
    VP (Pres Subj Sg P2) => "enrudezcas" ;
    VP (Pres Subj Sg P3) => "enrudezca" ;
    VP (Pres Subj Pl P1) => "enrudezcamos" ;
    VP (Pres Subj Pl P2) => "enrudezcáis" ;
    VP (Pres Subj Pl P3) => "enrudezcan" ;
    VP (Impf Ind Sg P1) => "enrudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enrudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enrudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enrudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enrudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enrudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enrudeciera" ; "enrudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enrudecieras" ; "enrudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enrudeciera" ; "enrudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enrudeciéramos" ; "enrudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enrudecierais" ; "enrudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enrudecieran" ; "enrudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enrudecí" ;--# notpresent
    VP (Pret Sg P2) => "enrudeciste" ;--# notpresent
    VP (Pret Sg P3) => "enrudeció" ;--# notpresent
    VP (Pret Pl P1) => "enrudecimos" ;--# notpresent
    VP (Pret Pl P2) => "enrudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enrudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enrudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enrudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enrudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enrudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enrudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enrudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enrudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enrudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enrudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enrudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enrudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enrudecieren" ;--# notpresent
    VP (Cond Sg P1) => "enrudecería" ;--# notpresent
    VP (Cond Sg P2) => "enrudecerías" ;--# notpresent
    VP (Cond Sg P3) => "enrudecería" ;--# notpresent
    VP (Cond Pl P1) => "enrudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enrudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "enrudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enrudece" ;
    VP (Imp Sg P3) => "enrudezca" ;
    VP (Imp Pl P1) => "enrudezcamos" ;
    VP (Imp Pl P2) => "enrudeced" ;
    VP (Imp Pl P3) => "enrudezcan" ;
    VP (Pass Sg Masc) => "enrudecido" ;
    VP (Pass Sg Fem) => "enrudecida" ;
    VP (Pass Pl Masc) => "enrudecidos" ;
    VP (Pass Pl Fem) => "enrudecidas"
    }
  } ;

lin enruinecer_V = verboV 
 {s = table {
    VI Infn => "enruinecer" ;
    VI Ger => "enruineciendo" ;
    VI Part => "enruinecido" ;
    VP (Pres Ind Sg P1) => "enruinezco" ;
    VP (Pres Ind Sg P2) => "enruineces" ;
    VP (Pres Ind Sg P3) => "enruinece" ;
    VP (Pres Ind Pl P1) => "enruinecemos" ;
    VP (Pres Ind Pl P2) => "enruinecéis" ;
    VP (Pres Ind Pl P3) => "enruinecen" ;
    VP (Pres Subj Sg P1) => "enruinezca" ;
    VP (Pres Subj Sg P2) => "enruinezcas" ;
    VP (Pres Subj Sg P3) => "enruinezca" ;
    VP (Pres Subj Pl P1) => "enruinezcamos" ;
    VP (Pres Subj Pl P2) => "enruinezcáis" ;
    VP (Pres Subj Pl P3) => "enruinezcan" ;
    VP (Impf Ind Sg P1) => "enruinecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enruinecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enruinecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enruinecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enruinecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enruinecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enruineciera" ; "enruineciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enruinecieras" ; "enruinecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enruineciera" ; "enruineciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enruineciéramos" ; "enruineciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enruinecierais" ; "enruinecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enruinecieran" ; "enruineciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enruinecí" ;--# notpresent
    VP (Pret Sg P2) => "enruineciste" ;--# notpresent
    VP (Pret Sg P3) => "enruineció" ;--# notpresent
    VP (Pret Pl P1) => "enruinecimos" ;--# notpresent
    VP (Pret Pl P2) => "enruinecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enruinecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enruineceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enruinecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enruinecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enruineceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enruineceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enruinecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enruineciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enruinecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enruineciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enruineciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enruineciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enruinecieren" ;--# notpresent
    VP (Cond Sg P1) => "enruinecería" ;--# notpresent
    VP (Cond Sg P2) => "enruinecerías" ;--# notpresent
    VP (Cond Sg P3) => "enruinecería" ;--# notpresent
    VP (Cond Pl P1) => "enruineceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enruineceríais" ;--# notpresent
    VP (Cond Pl P3) => "enruinecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enruinece" ;
    VP (Imp Sg P3) => "enruinezca" ;
    VP (Imp Pl P1) => "enruinezcamos" ;
    VP (Imp Pl P2) => "enruineced" ;
    VP (Imp Pl P3) => "enruinezcan" ;
    VP (Pass Sg Masc) => "enruinecido" ;
    VP (Pass Sg Fem) => "enruinecida" ;
    VP (Pass Pl Masc) => "enruinecidos" ;
    VP (Pass Pl Fem) => "enruinecidas"
    }
  } ;

lin ensandecer_V = verboV 
 {s = table {
    VI Infn => "ensandecer" ;
    VI Ger => "ensandeciendo" ;
    VI Part => "ensandecido" ;
    VP (Pres Ind Sg P1) => "ensandezco" ;
    VP (Pres Ind Sg P2) => "ensandeces" ;
    VP (Pres Ind Sg P3) => "ensandece" ;
    VP (Pres Ind Pl P1) => "ensandecemos" ;
    VP (Pres Ind Pl P2) => "ensandecéis" ;
    VP (Pres Ind Pl P3) => "ensandecen" ;
    VP (Pres Subj Sg P1) => "ensandezca" ;
    VP (Pres Subj Sg P2) => "ensandezcas" ;
    VP (Pres Subj Sg P3) => "ensandezca" ;
    VP (Pres Subj Pl P1) => "ensandezcamos" ;
    VP (Pres Subj Pl P2) => "ensandezcáis" ;
    VP (Pres Subj Pl P3) => "ensandezcan" ;
    VP (Impf Ind Sg P1) => "ensandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensandeciera" ; "ensandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensandecieras" ; "ensandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensandeciera" ; "ensandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensandeciéramos" ; "ensandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensandecierais" ; "ensandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensandecieran" ; "ensandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensandecí" ;--# notpresent
    VP (Pret Sg P2) => "ensandeciste" ;--# notpresent
    VP (Pret Sg P3) => "ensandeció" ;--# notpresent
    VP (Pret Pl P1) => "ensandecimos" ;--# notpresent
    VP (Pret Pl P2) => "ensandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensandecieren" ;--# notpresent
    VP (Cond Sg P1) => "ensandecería" ;--# notpresent
    VP (Cond Sg P2) => "ensandecerías" ;--# notpresent
    VP (Cond Sg P3) => "ensandecería" ;--# notpresent
    VP (Cond Pl P1) => "ensandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "ensandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensandece" ;
    VP (Imp Sg P3) => "ensandezca" ;
    VP (Imp Pl P1) => "ensandezcamos" ;
    VP (Imp Pl P2) => "ensandeced" ;
    VP (Imp Pl P3) => "ensandezcan" ;
    VP (Pass Sg Masc) => "ensandecido" ;
    VP (Pass Sg Fem) => "ensandecida" ;
    VP (Pass Pl Masc) => "ensandecidos" ;
    VP (Pass Pl Fem) => "ensandecidas"
    }
  } ;

lin ensarnecer_V = verboV 
 {s = table {
    VI Infn => "ensarnecer" ;
    VI Ger => "ensarneciendo" ;
    VI Part => "ensarnecido" ;
    VP (Pres Ind Sg P1) => "ensarnezco" ;
    VP (Pres Ind Sg P2) => "ensarneces" ;
    VP (Pres Ind Sg P3) => "ensarnece" ;
    VP (Pres Ind Pl P1) => "ensarnecemos" ;
    VP (Pres Ind Pl P2) => "ensarnecéis" ;
    VP (Pres Ind Pl P3) => "ensarnecen" ;
    VP (Pres Subj Sg P1) => "ensarnezca" ;
    VP (Pres Subj Sg P2) => "ensarnezcas" ;
    VP (Pres Subj Sg P3) => "ensarnezca" ;
    VP (Pres Subj Pl P1) => "ensarnezcamos" ;
    VP (Pres Subj Pl P2) => "ensarnezcáis" ;
    VP (Pres Subj Pl P3) => "ensarnezcan" ;
    VP (Impf Ind Sg P1) => "ensarnecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensarnecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensarnecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensarnecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensarnecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensarnecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensarneciera" ; "ensarneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensarnecieras" ; "ensarnecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensarneciera" ; "ensarneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensarneciéramos" ; "ensarneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensarnecierais" ; "ensarnecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensarnecieran" ; "ensarneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensarnecí" ;--# notpresent
    VP (Pret Sg P2) => "ensarneciste" ;--# notpresent
    VP (Pret Sg P3) => "ensarneció" ;--# notpresent
    VP (Pret Pl P1) => "ensarnecimos" ;--# notpresent
    VP (Pret Pl P2) => "ensarnecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensarnecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensarneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensarnecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensarnecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensarneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensarneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensarnecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensarneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensarnecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensarneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensarneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensarneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensarnecieren" ;--# notpresent
    VP (Cond Sg P1) => "ensarnecería" ;--# notpresent
    VP (Cond Sg P2) => "ensarnecerías" ;--# notpresent
    VP (Cond Sg P3) => "ensarnecería" ;--# notpresent
    VP (Cond Pl P1) => "ensarneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensarneceríais" ;--# notpresent
    VP (Cond Pl P3) => "ensarnecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensarnece" ;
    VP (Imp Sg P3) => "ensarnezca" ;
    VP (Imp Pl P1) => "ensarnezcamos" ;
    VP (Imp Pl P2) => "ensarneced" ;
    VP (Imp Pl P3) => "ensarnezcan" ;
    VP (Pass Sg Masc) => "ensarnecido" ;
    VP (Pass Sg Fem) => "ensarnecida" ;
    VP (Pass Pl Masc) => "ensarnecidos" ;
    VP (Pass Pl Fem) => "ensarnecidas"
    }
  } ;

lin ensoberbecer_V = verboV 
 {s = table {
    VI Infn => "ensoberbecer" ;
    VI Ger => "ensoberbeciendo" ;
    VI Part => "ensoberbecido" ;
    VP (Pres Ind Sg P1) => "ensoberbezco" ;
    VP (Pres Ind Sg P2) => "ensoberbeces" ;
    VP (Pres Ind Sg P3) => "ensoberbece" ;
    VP (Pres Ind Pl P1) => "ensoberbecemos" ;
    VP (Pres Ind Pl P2) => "ensoberbecéis" ;
    VP (Pres Ind Pl P3) => "ensoberbecen" ;
    VP (Pres Subj Sg P1) => "ensoberbezca" ;
    VP (Pres Subj Sg P2) => "ensoberbezcas" ;
    VP (Pres Subj Sg P3) => "ensoberbezca" ;
    VP (Pres Subj Pl P1) => "ensoberbezcamos" ;
    VP (Pres Subj Pl P2) => "ensoberbezcáis" ;
    VP (Pres Subj Pl P3) => "ensoberbezcan" ;
    VP (Impf Ind Sg P1) => "ensoberbecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensoberbecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensoberbecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensoberbecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensoberbecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensoberbecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensoberbeciera" ; "ensoberbeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensoberbecieras" ; "ensoberbecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensoberbeciera" ; "ensoberbeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensoberbeciéramos" ; "ensoberbeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensoberbecierais" ; "ensoberbecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensoberbecieran" ; "ensoberbeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensoberbecí" ;--# notpresent
    VP (Pret Sg P2) => "ensoberbeciste" ;--# notpresent
    VP (Pret Sg P3) => "ensoberbeció" ;--# notpresent
    VP (Pret Pl P1) => "ensoberbecimos" ;--# notpresent
    VP (Pret Pl P2) => "ensoberbecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensoberbecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensoberbeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensoberbecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensoberbecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensoberbeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensoberbeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensoberbecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensoberbeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensoberbecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensoberbeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensoberbeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensoberbeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensoberbecieren" ;--# notpresent
    VP (Cond Sg P1) => "ensoberbecería" ;--# notpresent
    VP (Cond Sg P2) => "ensoberbecerías" ;--# notpresent
    VP (Cond Sg P3) => "ensoberbecería" ;--# notpresent
    VP (Cond Pl P1) => "ensoberbeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensoberbeceríais" ;--# notpresent
    VP (Cond Pl P3) => "ensoberbecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensoberbece" ;
    VP (Imp Sg P3) => "ensoberbezca" ;
    VP (Imp Pl P1) => "ensoberbezcamos" ;
    VP (Imp Pl P2) => "ensoberbeced" ;
    VP (Imp Pl P3) => "ensoberbezcan" ;
    VP (Pass Sg Masc) => "ensoberbecido" ;
    VP (Pass Sg Fem) => "ensoberbecida" ;
    VP (Pass Pl Masc) => "ensoberbecidos" ;
    VP (Pass Pl Fem) => "ensoberbecidas"
    }
  } ;

lin ensombrecer_V = verboV 
 {s = table {
    VI Infn => "ensombrecer" ;
    VI Ger => "ensombreciendo" ;
    VI Part => "ensombrecido" ;
    VP (Pres Ind Sg P1) => "ensombrezco" ;
    VP (Pres Ind Sg P2) => "ensombreces" ;
    VP (Pres Ind Sg P3) => "ensombrece" ;
    VP (Pres Ind Pl P1) => "ensombrecemos" ;
    VP (Pres Ind Pl P2) => "ensombrecéis" ;
    VP (Pres Ind Pl P3) => "ensombrecen" ;
    VP (Pres Subj Sg P1) => "ensombrezca" ;
    VP (Pres Subj Sg P2) => "ensombrezcas" ;
    VP (Pres Subj Sg P3) => "ensombrezca" ;
    VP (Pres Subj Pl P1) => "ensombrezcamos" ;
    VP (Pres Subj Pl P2) => "ensombrezcáis" ;
    VP (Pres Subj Pl P3) => "ensombrezcan" ;
    VP (Impf Ind Sg P1) => "ensombrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensombrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensombrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensombrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensombrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensombrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensombreciera" ; "ensombreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensombrecieras" ; "ensombrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensombreciera" ; "ensombreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensombreciéramos" ; "ensombreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensombrecierais" ; "ensombrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensombrecieran" ; "ensombreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensombrecí" ;--# notpresent
    VP (Pret Sg P2) => "ensombreciste" ;--# notpresent
    VP (Pret Sg P3) => "ensombreció" ;--# notpresent
    VP (Pret Pl P1) => "ensombrecimos" ;--# notpresent
    VP (Pret Pl P2) => "ensombrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensombrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensombreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensombrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensombrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensombreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensombreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensombrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensombreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensombrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensombreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensombreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensombreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensombrecieren" ;--# notpresent
    VP (Cond Sg P1) => "ensombrecería" ;--# notpresent
    VP (Cond Sg P2) => "ensombrecerías" ;--# notpresent
    VP (Cond Sg P3) => "ensombrecería" ;--# notpresent
    VP (Cond Pl P1) => "ensombreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensombreceríais" ;--# notpresent
    VP (Cond Pl P3) => "ensombrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensombrece" ;
    VP (Imp Sg P3) => "ensombrezca" ;
    VP (Imp Pl P1) => "ensombrezcamos" ;
    VP (Imp Pl P2) => "ensombreced" ;
    VP (Imp Pl P3) => "ensombrezcan" ;
    VP (Pass Sg Masc) => "ensombrecido" ;
    VP (Pass Sg Fem) => "ensombrecida" ;
    VP (Pass Pl Masc) => "ensombrecidos" ;
    VP (Pass Pl Fem) => "ensombrecidas"
    }
  } ;

lin ensordecer_V = verboV 
 {s = table {
    VI Infn => "ensordecer" ;
    VI Ger => "ensordeciendo" ;
    VI Part => "ensordecido" ;
    VP (Pres Ind Sg P1) => "ensordezco" ;
    VP (Pres Ind Sg P2) => "ensordeces" ;
    VP (Pres Ind Sg P3) => "ensordece" ;
    VP (Pres Ind Pl P1) => "ensordecemos" ;
    VP (Pres Ind Pl P2) => "ensordecéis" ;
    VP (Pres Ind Pl P3) => "ensordecen" ;
    VP (Pres Subj Sg P1) => "ensordezca" ;
    VP (Pres Subj Sg P2) => "ensordezcas" ;
    VP (Pres Subj Sg P3) => "ensordezca" ;
    VP (Pres Subj Pl P1) => "ensordezcamos" ;
    VP (Pres Subj Pl P2) => "ensordezcáis" ;
    VP (Pres Subj Pl P3) => "ensordezcan" ;
    VP (Impf Ind Sg P1) => "ensordecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensordecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensordecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensordecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensordecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensordecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensordeciera" ; "ensordeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensordecieras" ; "ensordecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensordeciera" ; "ensordeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensordeciéramos" ; "ensordeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensordecierais" ; "ensordecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensordecieran" ; "ensordeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensordecí" ;--# notpresent
    VP (Pret Sg P2) => "ensordeciste" ;--# notpresent
    VP (Pret Sg P3) => "ensordeció" ;--# notpresent
    VP (Pret Pl P1) => "ensordecimos" ;--# notpresent
    VP (Pret Pl P2) => "ensordecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensordecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensordeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensordecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensordecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensordeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensordeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensordecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensordeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensordecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensordeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensordeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensordeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensordecieren" ;--# notpresent
    VP (Cond Sg P1) => "ensordecería" ;--# notpresent
    VP (Cond Sg P2) => "ensordecerías" ;--# notpresent
    VP (Cond Sg P3) => "ensordecería" ;--# notpresent
    VP (Cond Pl P1) => "ensordeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensordeceríais" ;--# notpresent
    VP (Cond Pl P3) => "ensordecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensordece" ;
    VP (Imp Sg P3) => "ensordezca" ;
    VP (Imp Pl P1) => "ensordezcamos" ;
    VP (Imp Pl P2) => "ensordeced" ;
    VP (Imp Pl P3) => "ensordezcan" ;
    VP (Pass Sg Masc) => "ensordecido" ;
    VP (Pass Sg Fem) => "ensordecida" ;
    VP (Pass Pl Masc) => "ensordecidos" ;
    VP (Pass Pl Fem) => "ensordecidas"
    }
  } ;

lin entallecer_V = verboV 
 {s = table {
    VI Infn => "entallecer" ;
    VI Ger => "entalleciendo" ;
    VI Part => "entallecido" ;
    VP (Pres Ind Sg P1) => "entallezco" ;
    VP (Pres Ind Sg P2) => "entalleces" ;
    VP (Pres Ind Sg P3) => "entallece" ;
    VP (Pres Ind Pl P1) => "entallecemos" ;
    VP (Pres Ind Pl P2) => "entallecéis" ;
    VP (Pres Ind Pl P3) => "entallecen" ;
    VP (Pres Subj Sg P1) => "entallezca" ;
    VP (Pres Subj Sg P2) => "entallezcas" ;
    VP (Pres Subj Sg P3) => "entallezca" ;
    VP (Pres Subj Pl P1) => "entallezcamos" ;
    VP (Pres Subj Pl P2) => "entallezcáis" ;
    VP (Pres Subj Pl P3) => "entallezcan" ;
    VP (Impf Ind Sg P1) => "entallecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entallecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entallecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entallecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entallecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entallecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entalleciera" ; "entalleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entallecieras" ; "entallecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entalleciera" ; "entalleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entalleciéramos" ; "entalleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entallecierais" ; "entallecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entallecieran" ; "entalleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entallecí" ;--# notpresent
    VP (Pret Sg P2) => "entalleciste" ;--# notpresent
    VP (Pret Sg P3) => "entalleció" ;--# notpresent
    VP (Pret Pl P1) => "entallecimos" ;--# notpresent
    VP (Pret Pl P2) => "entallecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entallecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entalleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entallecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entallecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entalleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entalleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entallecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entalleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entallecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entalleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entalleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entalleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entallecieren" ;--# notpresent
    VP (Cond Sg P1) => "entallecería" ;--# notpresent
    VP (Cond Sg P2) => "entallecerías" ;--# notpresent
    VP (Cond Sg P3) => "entallecería" ;--# notpresent
    VP (Cond Pl P1) => "entalleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entalleceríais" ;--# notpresent
    VP (Cond Pl P3) => "entallecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entallece" ;
    VP (Imp Sg P3) => "entallezca" ;
    VP (Imp Pl P1) => "entallezcamos" ;
    VP (Imp Pl P2) => "entalleced" ;
    VP (Imp Pl P3) => "entallezcan" ;
    VP (Pass Sg Masc) => "entallecido" ;
    VP (Pass Sg Fem) => "entallecida" ;
    VP (Pass Pl Masc) => "entallecidos" ;
    VP (Pass Pl Fem) => "entallecidas"
    }
  } ;

lin entenebrecer_V = verboV 
 {s = table {
    VI Infn => "entenebrecer" ;
    VI Ger => "entenebreciendo" ;
    VI Part => "entenebrecido" ;
    VP (Pres Ind Sg P1) => "entenebrezco" ;
    VP (Pres Ind Sg P2) => "entenebreces" ;
    VP (Pres Ind Sg P3) => "entenebrece" ;
    VP (Pres Ind Pl P1) => "entenebrecemos" ;
    VP (Pres Ind Pl P2) => "entenebrecéis" ;
    VP (Pres Ind Pl P3) => "entenebrecen" ;
    VP (Pres Subj Sg P1) => "entenebrezca" ;
    VP (Pres Subj Sg P2) => "entenebrezcas" ;
    VP (Pres Subj Sg P3) => "entenebrezca" ;
    VP (Pres Subj Pl P1) => "entenebrezcamos" ;
    VP (Pres Subj Pl P2) => "entenebrezcáis" ;
    VP (Pres Subj Pl P3) => "entenebrezcan" ;
    VP (Impf Ind Sg P1) => "entenebrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entenebrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entenebrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entenebrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entenebrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entenebrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entenebreciera" ; "entenebreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entenebrecieras" ; "entenebrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entenebreciera" ; "entenebreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entenebreciéramos" ; "entenebreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entenebrecierais" ; "entenebrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entenebrecieran" ; "entenebreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entenebrecí" ;--# notpresent
    VP (Pret Sg P2) => "entenebreciste" ;--# notpresent
    VP (Pret Sg P3) => "entenebreció" ;--# notpresent
    VP (Pret Pl P1) => "entenebrecimos" ;--# notpresent
    VP (Pret Pl P2) => "entenebrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entenebrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entenebreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entenebrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entenebrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entenebreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entenebreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entenebrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entenebreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entenebrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entenebreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entenebreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entenebreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entenebrecieren" ;--# notpresent
    VP (Cond Sg P1) => "entenebrecería" ;--# notpresent
    VP (Cond Sg P2) => "entenebrecerías" ;--# notpresent
    VP (Cond Sg P3) => "entenebrecería" ;--# notpresent
    VP (Cond Pl P1) => "entenebreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entenebreceríais" ;--# notpresent
    VP (Cond Pl P3) => "entenebrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entenebrece" ;
    VP (Imp Sg P3) => "entenebrezca" ;
    VP (Imp Pl P1) => "entenebrezcamos" ;
    VP (Imp Pl P2) => "entenebreced" ;
    VP (Imp Pl P3) => "entenebrezcan" ;
    VP (Pass Sg Masc) => "entenebrecido" ;
    VP (Pass Sg Fem) => "entenebrecida" ;
    VP (Pass Pl Masc) => "entenebrecidos" ;
    VP (Pass Pl Fem) => "entenebrecidas"
    }
  } ;

lin enternecer_V = verboV 
 {s = table {
    VI Infn => "enternecer" ;
    VI Ger => "enterneciendo" ;
    VI Part => "enternecido" ;
    VP (Pres Ind Sg P1) => "enternezco" ;
    VP (Pres Ind Sg P2) => "enterneces" ;
    VP (Pres Ind Sg P3) => "enternece" ;
    VP (Pres Ind Pl P1) => "enternecemos" ;
    VP (Pres Ind Pl P2) => "enternecéis" ;
    VP (Pres Ind Pl P3) => "enternecen" ;
    VP (Pres Subj Sg P1) => "enternezca" ;
    VP (Pres Subj Sg P2) => "enternezcas" ;
    VP (Pres Subj Sg P3) => "enternezca" ;
    VP (Pres Subj Pl P1) => "enternezcamos" ;
    VP (Pres Subj Pl P2) => "enternezcáis" ;
    VP (Pres Subj Pl P3) => "enternezcan" ;
    VP (Impf Ind Sg P1) => "enternecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enternecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enternecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enternecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enternecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enternecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enterneciera" ; "enterneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enternecieras" ; "enternecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enterneciera" ; "enterneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enterneciéramos" ; "enterneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enternecierais" ; "enternecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enternecieran" ; "enterneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enternecí" ;--# notpresent
    VP (Pret Sg P2) => "enterneciste" ;--# notpresent
    VP (Pret Sg P3) => "enterneció" ;--# notpresent
    VP (Pret Pl P1) => "enternecimos" ;--# notpresent
    VP (Pret Pl P2) => "enternecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enternecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enterneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enternecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enternecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enterneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enterneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enternecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enterneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enternecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enterneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enterneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enterneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enternecieren" ;--# notpresent
    VP (Cond Sg P1) => "enternecería" ;--# notpresent
    VP (Cond Sg P2) => "enternecerías" ;--# notpresent
    VP (Cond Sg P3) => "enternecería" ;--# notpresent
    VP (Cond Pl P1) => "enterneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enterneceríais" ;--# notpresent
    VP (Cond Pl P3) => "enternecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enternece" ;
    VP (Imp Sg P3) => "enternezca" ;
    VP (Imp Pl P1) => "enternezcamos" ;
    VP (Imp Pl P2) => "enterneced" ;
    VP (Imp Pl P3) => "enternezcan" ;
    VP (Pass Sg Masc) => "enternecido" ;
    VP (Pass Sg Fem) => "enternecida" ;
    VP (Pass Pl Masc) => "enternecidos" ;
    VP (Pass Pl Fem) => "enternecidas"
    }
  } ;

lin entestecer_V = verboV 
 {s = table {
    VI Infn => "entestecer" ;
    VI Ger => "entesteciendo" ;
    VI Part => "entestecido" ;
    VP (Pres Ind Sg P1) => "entestezco" ;
    VP (Pres Ind Sg P2) => "entesteces" ;
    VP (Pres Ind Sg P3) => "entestece" ;
    VP (Pres Ind Pl P1) => "entestecemos" ;
    VP (Pres Ind Pl P2) => "entestecéis" ;
    VP (Pres Ind Pl P3) => "entestecen" ;
    VP (Pres Subj Sg P1) => "entestezca" ;
    VP (Pres Subj Sg P2) => "entestezcas" ;
    VP (Pres Subj Sg P3) => "entestezca" ;
    VP (Pres Subj Pl P1) => "entestezcamos" ;
    VP (Pres Subj Pl P2) => "entestezcáis" ;
    VP (Pres Subj Pl P3) => "entestezcan" ;
    VP (Impf Ind Sg P1) => "entestecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entestecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entestecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entestecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entestecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entestecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entesteciera" ; "entesteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entestecieras" ; "entestecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entesteciera" ; "entesteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entesteciéramos" ; "entesteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entestecierais" ; "entestecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entestecieran" ; "entesteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entestecí" ;--# notpresent
    VP (Pret Sg P2) => "entesteciste" ;--# notpresent
    VP (Pret Sg P3) => "entesteció" ;--# notpresent
    VP (Pret Pl P1) => "entestecimos" ;--# notpresent
    VP (Pret Pl P2) => "entestecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entestecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entesteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entestecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entestecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entesteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entesteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entestecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entesteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entestecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entesteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entesteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entesteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entestecieren" ;--# notpresent
    VP (Cond Sg P1) => "entestecería" ;--# notpresent
    VP (Cond Sg P2) => "entestecerías" ;--# notpresent
    VP (Cond Sg P3) => "entestecería" ;--# notpresent
    VP (Cond Pl P1) => "entesteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entesteceríais" ;--# notpresent
    VP (Cond Pl P3) => "entestecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entestece" ;
    VP (Imp Sg P3) => "entestezca" ;
    VP (Imp Pl P1) => "entestezcamos" ;
    VP (Imp Pl P2) => "entesteced" ;
    VP (Imp Pl P3) => "entestezcan" ;
    VP (Pass Sg Masc) => "entestecido" ;
    VP (Pass Sg Fem) => "entestecida" ;
    VP (Pass Pl Masc) => "entestecidos" ;
    VP (Pass Pl Fem) => "entestecidas"
    }
  } ;

lin entontecer_V = verboV 
 {s = table {
    VI Infn => "entontecer" ;
    VI Ger => "entonteciendo" ;
    VI Part => "entontecido" ;
    VP (Pres Ind Sg P1) => "entontezco" ;
    VP (Pres Ind Sg P2) => "entonteces" ;
    VP (Pres Ind Sg P3) => "entontece" ;
    VP (Pres Ind Pl P1) => "entontecemos" ;
    VP (Pres Ind Pl P2) => "entontecéis" ;
    VP (Pres Ind Pl P3) => "entontecen" ;
    VP (Pres Subj Sg P1) => "entontezca" ;
    VP (Pres Subj Sg P2) => "entontezcas" ;
    VP (Pres Subj Sg P3) => "entontezca" ;
    VP (Pres Subj Pl P1) => "entontezcamos" ;
    VP (Pres Subj Pl P2) => "entontezcáis" ;
    VP (Pres Subj Pl P3) => "entontezcan" ;
    VP (Impf Ind Sg P1) => "entontecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entontecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entontecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entontecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entontecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entontecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entonteciera" ; "entonteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entontecieras" ; "entontecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entonteciera" ; "entonteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entonteciéramos" ; "entonteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entontecierais" ; "entontecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entontecieran" ; "entonteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entontecí" ;--# notpresent
    VP (Pret Sg P2) => "entonteciste" ;--# notpresent
    VP (Pret Sg P3) => "entonteció" ;--# notpresent
    VP (Pret Pl P1) => "entontecimos" ;--# notpresent
    VP (Pret Pl P2) => "entontecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entontecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entonteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entontecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entontecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entonteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entonteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entontecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entonteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entontecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entonteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entonteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entonteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entontecieren" ;--# notpresent
    VP (Cond Sg P1) => "entontecería" ;--# notpresent
    VP (Cond Sg P2) => "entontecerías" ;--# notpresent
    VP (Cond Sg P3) => "entontecería" ;--# notpresent
    VP (Cond Pl P1) => "entonteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entonteceríais" ;--# notpresent
    VP (Cond Pl P3) => "entontecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entontece" ;
    VP (Imp Sg P3) => "entontezca" ;
    VP (Imp Pl P1) => "entontezcamos" ;
    VP (Imp Pl P2) => "entonteced" ;
    VP (Imp Pl P3) => "entontezcan" ;
    VP (Pass Sg Masc) => "entontecido" ;
    VP (Pass Sg Fem) => "entontecida" ;
    VP (Pass Pl Masc) => "entontecidos" ;
    VP (Pass Pl Fem) => "entontecidas"
    }
  } ;

lin entorpecer_V = verboV 
 {s = table {
    VI Infn => "entorpecer" ;
    VI Ger => "entorpeciendo" ;
    VI Part => "entorpecido" ;
    VP (Pres Ind Sg P1) => "entorpezco" ;
    VP (Pres Ind Sg P2) => "entorpeces" ;
    VP (Pres Ind Sg P3) => "entorpece" ;
    VP (Pres Ind Pl P1) => "entorpecemos" ;
    VP (Pres Ind Pl P2) => "entorpecéis" ;
    VP (Pres Ind Pl P3) => "entorpecen" ;
    VP (Pres Subj Sg P1) => "entorpezca" ;
    VP (Pres Subj Sg P2) => "entorpezcas" ;
    VP (Pres Subj Sg P3) => "entorpezca" ;
    VP (Pres Subj Pl P1) => "entorpezcamos" ;
    VP (Pres Subj Pl P2) => "entorpezcáis" ;
    VP (Pres Subj Pl P3) => "entorpezcan" ;
    VP (Impf Ind Sg P1) => "entorpecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entorpecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entorpecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entorpecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entorpecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entorpecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entorpeciera" ; "entorpeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entorpecieras" ; "entorpecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entorpeciera" ; "entorpeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entorpeciéramos" ; "entorpeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entorpecierais" ; "entorpecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entorpecieran" ; "entorpeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entorpecí" ;--# notpresent
    VP (Pret Sg P2) => "entorpeciste" ;--# notpresent
    VP (Pret Sg P3) => "entorpeció" ;--# notpresent
    VP (Pret Pl P1) => "entorpecimos" ;--# notpresent
    VP (Pret Pl P2) => "entorpecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entorpecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entorpeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entorpecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entorpecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entorpeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entorpeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entorpecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entorpeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entorpecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entorpeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entorpeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entorpeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entorpecieren" ;--# notpresent
    VP (Cond Sg P1) => "entorpecería" ;--# notpresent
    VP (Cond Sg P2) => "entorpecerías" ;--# notpresent
    VP (Cond Sg P3) => "entorpecería" ;--# notpresent
    VP (Cond Pl P1) => "entorpeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entorpeceríais" ;--# notpresent
    VP (Cond Pl P3) => "entorpecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entorpece" ;
    VP (Imp Sg P3) => "entorpezca" ;
    VP (Imp Pl P1) => "entorpezcamos" ;
    VP (Imp Pl P2) => "entorpeced" ;
    VP (Imp Pl P3) => "entorpezcan" ;
    VP (Pass Sg Masc) => "entorpecido" ;
    VP (Pass Sg Fem) => "entorpecida" ;
    VP (Pass Pl Masc) => "entorpecidos" ;
    VP (Pass Pl Fem) => "entorpecidas"
    }
  } ;

lin entristecer_V = verboV 
 {s = table {
    VI Infn => "entristecer" ;
    VI Ger => "entristeciendo" ;
    VI Part => "entristecido" ;
    VP (Pres Ind Sg P1) => "entristezco" ;
    VP (Pres Ind Sg P2) => "entristeces" ;
    VP (Pres Ind Sg P3) => "entristece" ;
    VP (Pres Ind Pl P1) => "entristecemos" ;
    VP (Pres Ind Pl P2) => "entristecéis" ;
    VP (Pres Ind Pl P3) => "entristecen" ;
    VP (Pres Subj Sg P1) => "entristezca" ;
    VP (Pres Subj Sg P2) => "entristezcas" ;
    VP (Pres Subj Sg P3) => "entristezca" ;
    VP (Pres Subj Pl P1) => "entristezcamos" ;
    VP (Pres Subj Pl P2) => "entristezcáis" ;
    VP (Pres Subj Pl P3) => "entristezcan" ;
    VP (Impf Ind Sg P1) => "entristecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entristecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entristecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entristecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entristecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entristecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entristeciera" ; "entristeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entristecieras" ; "entristecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entristeciera" ; "entristeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entristeciéramos" ; "entristeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entristecierais" ; "entristecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entristecieran" ; "entristeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entristecí" ;--# notpresent
    VP (Pret Sg P2) => "entristeciste" ;--# notpresent
    VP (Pret Sg P3) => "entristeció" ;--# notpresent
    VP (Pret Pl P1) => "entristecimos" ;--# notpresent
    VP (Pret Pl P2) => "entristecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entristecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entristeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entristecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entristecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entristeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entristeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entristecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entristeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entristecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entristeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entristeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entristeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entristecieren" ;--# notpresent
    VP (Cond Sg P1) => "entristecería" ;--# notpresent
    VP (Cond Sg P2) => "entristecerías" ;--# notpresent
    VP (Cond Sg P3) => "entristecería" ;--# notpresent
    VP (Cond Pl P1) => "entristeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entristeceríais" ;--# notpresent
    VP (Cond Pl P3) => "entristecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entristece" ;
    VP (Imp Sg P3) => "entristezca" ;
    VP (Imp Pl P1) => "entristezcamos" ;
    VP (Imp Pl P2) => "entristeced" ;
    VP (Imp Pl P3) => "entristezcan" ;
    VP (Pass Sg Masc) => "entristecido" ;
    VP (Pass Sg Fem) => "entristecida" ;
    VP (Pass Pl Masc) => "entristecidos" ;
    VP (Pass Pl Fem) => "entristecidas"
    }
  } ;

lin entullecer_V = verboV 
 {s = table {
    VI Infn => "entullecer" ;
    VI Ger => "entulleciendo" ;
    VI Part => "entullecido" ;
    VP (Pres Ind Sg P1) => "entullezco" ;
    VP (Pres Ind Sg P2) => "entulleces" ;
    VP (Pres Ind Sg P3) => "entullece" ;
    VP (Pres Ind Pl P1) => "entullecemos" ;
    VP (Pres Ind Pl P2) => "entullecéis" ;
    VP (Pres Ind Pl P3) => "entullecen" ;
    VP (Pres Subj Sg P1) => "entullezca" ;
    VP (Pres Subj Sg P2) => "entullezcas" ;
    VP (Pres Subj Sg P3) => "entullezca" ;
    VP (Pres Subj Pl P1) => "entullezcamos" ;
    VP (Pres Subj Pl P2) => "entullezcáis" ;
    VP (Pres Subj Pl P3) => "entullezcan" ;
    VP (Impf Ind Sg P1) => "entullecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entullecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entullecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entullecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entullecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entullecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entulleciera" ; "entulleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entullecieras" ; "entullecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entulleciera" ; "entulleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entulleciéramos" ; "entulleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entullecierais" ; "entullecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entullecieran" ; "entulleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entullecí" ;--# notpresent
    VP (Pret Sg P2) => "entulleciste" ;--# notpresent
    VP (Pret Sg P3) => "entulleció" ;--# notpresent
    VP (Pret Pl P1) => "entullecimos" ;--# notpresent
    VP (Pret Pl P2) => "entullecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entullecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entulleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entullecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entullecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entulleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entulleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entullecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entulleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entullecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entulleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entulleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entulleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entullecieren" ;--# notpresent
    VP (Cond Sg P1) => "entullecería" ;--# notpresent
    VP (Cond Sg P2) => "entullecerías" ;--# notpresent
    VP (Cond Sg P3) => "entullecería" ;--# notpresent
    VP (Cond Pl P1) => "entulleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entulleceríais" ;--# notpresent
    VP (Cond Pl P3) => "entullecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entullece" ;
    VP (Imp Sg P3) => "entullezca" ;
    VP (Imp Pl P1) => "entullezcamos" ;
    VP (Imp Pl P2) => "entulleced" ;
    VP (Imp Pl P3) => "entullezcan" ;
    VP (Pass Sg Masc) => "entullecido" ;
    VP (Pass Sg Fem) => "entullecida" ;
    VP (Pass Pl Masc) => "entullecidos" ;
    VP (Pass Pl Fem) => "entullecidas"
    }
  } ;

lin entumecer_V = verboV 
 {s = table {
    VI Infn => "entumecer" ;
    VI Ger => "entumeciendo" ;
    VI Part => "entumecido" ;
    VP (Pres Ind Sg P1) => "entumezco" ;
    VP (Pres Ind Sg P2) => "entumeces" ;
    VP (Pres Ind Sg P3) => "entumece" ;
    VP (Pres Ind Pl P1) => "entumecemos" ;
    VP (Pres Ind Pl P2) => "entumecéis" ;
    VP (Pres Ind Pl P3) => "entumecen" ;
    VP (Pres Subj Sg P1) => "entumezca" ;
    VP (Pres Subj Sg P2) => "entumezcas" ;
    VP (Pres Subj Sg P3) => "entumezca" ;
    VP (Pres Subj Pl P1) => "entumezcamos" ;
    VP (Pres Subj Pl P2) => "entumezcáis" ;
    VP (Pres Subj Pl P3) => "entumezcan" ;
    VP (Impf Ind Sg P1) => "entumecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entumecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entumecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entumecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entumecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entumecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entumeciera" ; "entumeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entumecieras" ; "entumecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entumeciera" ; "entumeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entumeciéramos" ; "entumeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entumecierais" ; "entumecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entumecieran" ; "entumeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entumecí" ;--# notpresent
    VP (Pret Sg P2) => "entumeciste" ;--# notpresent
    VP (Pret Sg P3) => "entumeció" ;--# notpresent
    VP (Pret Pl P1) => "entumecimos" ;--# notpresent
    VP (Pret Pl P2) => "entumecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entumecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entumeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entumecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entumecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entumeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entumeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entumecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entumeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entumecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entumeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entumeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entumeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entumecieren" ;--# notpresent
    VP (Cond Sg P1) => "entumecería" ;--# notpresent
    VP (Cond Sg P2) => "entumecerías" ;--# notpresent
    VP (Cond Sg P3) => "entumecería" ;--# notpresent
    VP (Cond Pl P1) => "entumeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entumeceríais" ;--# notpresent
    VP (Cond Pl P3) => "entumecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entumece" ;
    VP (Imp Sg P3) => "entumezca" ;
    VP (Imp Pl P1) => "entumezcamos" ;
    VP (Imp Pl P2) => "entumeced" ;
    VP (Imp Pl P3) => "entumezcan" ;
    VP (Pass Sg Masc) => "entumecido" ;
    VP (Pass Sg Fem) => "entumecida" ;
    VP (Pass Pl Masc) => "entumecidos" ;
    VP (Pass Pl Fem) => "entumecidas"
    }
  } ;

lin envaguecer_V = verboV 
 {s = table {
    VI Infn => "envaguecer" ;
    VI Ger => "envagueciendo" ;
    VI Part => "envaguecido" ;
    VP (Pres Ind Sg P1) => "envaguezco" ;
    VP (Pres Ind Sg P2) => "envagueces" ;
    VP (Pres Ind Sg P3) => "envaguece" ;
    VP (Pres Ind Pl P1) => "envaguecemos" ;
    VP (Pres Ind Pl P2) => "envaguecéis" ;
    VP (Pres Ind Pl P3) => "envaguecen" ;
    VP (Pres Subj Sg P1) => "envaguezca" ;
    VP (Pres Subj Sg P2) => "envaguezcas" ;
    VP (Pres Subj Sg P3) => "envaguezca" ;
    VP (Pres Subj Pl P1) => "envaguezcamos" ;
    VP (Pres Subj Pl P2) => "envaguezcáis" ;
    VP (Pres Subj Pl P3) => "envaguezcan" ;
    VP (Impf Ind Sg P1) => "envaguecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "envaguecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "envaguecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "envaguecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "envaguecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "envaguecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"envagueciera" ; "envagueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"envaguecieras" ; "envaguecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"envagueciera" ; "envagueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"envagueciéramos" ; "envagueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"envaguecierais" ; "envaguecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"envaguecieran" ; "envagueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "envaguecí" ;--# notpresent
    VP (Pret Sg P2) => "envagueciste" ;--# notpresent
    VP (Pret Sg P3) => "envagueció" ;--# notpresent
    VP (Pret Pl P1) => "envaguecimos" ;--# notpresent
    VP (Pret Pl P2) => "envaguecisteis" ;--# notpresent
    VP (Pret Pl P3) => "envaguecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "envagueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "envaguecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "envaguecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "envagueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "envagueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "envaguecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "envagueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "envaguecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "envagueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "envagueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "envagueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "envaguecieren" ;--# notpresent
    VP (Cond Sg P1) => "envaguecería" ;--# notpresent
    VP (Cond Sg P2) => "envaguecerías" ;--# notpresent
    VP (Cond Sg P3) => "envaguecería" ;--# notpresent
    VP (Cond Pl P1) => "envagueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "envagueceríais" ;--# notpresent
    VP (Cond Pl P3) => "envaguecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "envaguece" ;
    VP (Imp Sg P3) => "envaguezca" ;
    VP (Imp Pl P1) => "envaguezcamos" ;
    VP (Imp Pl P2) => "envagueced" ;
    VP (Imp Pl P3) => "envaguezcan" ;
    VP (Pass Sg Masc) => "envaguecido" ;
    VP (Pass Sg Fem) => "envaguecida" ;
    VP (Pass Pl Masc) => "envaguecidos" ;
    VP (Pass Pl Fem) => "envaguecidas"
    }
  } ;

lin envanecer_V = verboV 
 {s = table {
    VI Infn => "envanecer" ;
    VI Ger => "envaneciendo" ;
    VI Part => "envanecido" ;
    VP (Pres Ind Sg P1) => "envanezco" ;
    VP (Pres Ind Sg P2) => "envaneces" ;
    VP (Pres Ind Sg P3) => "envanece" ;
    VP (Pres Ind Pl P1) => "envanecemos" ;
    VP (Pres Ind Pl P2) => "envanecéis" ;
    VP (Pres Ind Pl P3) => "envanecen" ;
    VP (Pres Subj Sg P1) => "envanezca" ;
    VP (Pres Subj Sg P2) => "envanezcas" ;
    VP (Pres Subj Sg P3) => "envanezca" ;
    VP (Pres Subj Pl P1) => "envanezcamos" ;
    VP (Pres Subj Pl P2) => "envanezcáis" ;
    VP (Pres Subj Pl P3) => "envanezcan" ;
    VP (Impf Ind Sg P1) => "envanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "envanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "envanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "envanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "envanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "envanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"envaneciera" ; "envaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"envanecieras" ; "envanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"envaneciera" ; "envaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"envaneciéramos" ; "envaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"envanecierais" ; "envanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"envanecieran" ; "envaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "envanecí" ;--# notpresent
    VP (Pret Sg P2) => "envaneciste" ;--# notpresent
    VP (Pret Sg P3) => "envaneció" ;--# notpresent
    VP (Pret Pl P1) => "envanecimos" ;--# notpresent
    VP (Pret Pl P2) => "envanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "envanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "envaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "envanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "envanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "envaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "envaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "envanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "envaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "envanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "envaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "envaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "envaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "envanecieren" ;--# notpresent
    VP (Cond Sg P1) => "envanecería" ;--# notpresent
    VP (Cond Sg P2) => "envanecerías" ;--# notpresent
    VP (Cond Sg P3) => "envanecería" ;--# notpresent
    VP (Cond Pl P1) => "envaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "envaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "envanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "envanece" ;
    VP (Imp Sg P3) => "envanezca" ;
    VP (Imp Pl P1) => "envanezcamos" ;
    VP (Imp Pl P2) => "envaneced" ;
    VP (Imp Pl P3) => "envanezcan" ;
    VP (Pass Sg Masc) => "envanecido" ;
    VP (Pass Sg Fem) => "envanecida" ;
    VP (Pass Pl Masc) => "envanecidos" ;
    VP (Pass Pl Fem) => "envanecidas"
    }
  } ;

lin envejecer_V = verboV 
 {s = table {
    VI Infn => "envejecer" ;
    VI Ger => "envejeciendo" ;
    VI Part => "envejecido" ;
    VP (Pres Ind Sg P1) => "envejezco" ;
    VP (Pres Ind Sg P2) => "envejeces" ;
    VP (Pres Ind Sg P3) => "envejece" ;
    VP (Pres Ind Pl P1) => "envejecemos" ;
    VP (Pres Ind Pl P2) => "envejecéis" ;
    VP (Pres Ind Pl P3) => "envejecen" ;
    VP (Pres Subj Sg P1) => "envejezca" ;
    VP (Pres Subj Sg P2) => "envejezcas" ;
    VP (Pres Subj Sg P3) => "envejezca" ;
    VP (Pres Subj Pl P1) => "envejezcamos" ;
    VP (Pres Subj Pl P2) => "envejezcáis" ;
    VP (Pres Subj Pl P3) => "envejezcan" ;
    VP (Impf Ind Sg P1) => "envejecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "envejecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "envejecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "envejecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "envejecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "envejecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"envejeciera" ; "envejeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"envejecieras" ; "envejecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"envejeciera" ; "envejeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"envejeciéramos" ; "envejeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"envejecierais" ; "envejecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"envejecieran" ; "envejeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "envejecí" ;--# notpresent
    VP (Pret Sg P2) => "envejeciste" ;--# notpresent
    VP (Pret Sg P3) => "envejeció" ;--# notpresent
    VP (Pret Pl P1) => "envejecimos" ;--# notpresent
    VP (Pret Pl P2) => "envejecisteis" ;--# notpresent
    VP (Pret Pl P3) => "envejecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "envejeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "envejecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "envejecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "envejeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "envejeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "envejecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "envejeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "envejecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "envejeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "envejeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "envejeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "envejecieren" ;--# notpresent
    VP (Cond Sg P1) => "envejecería" ;--# notpresent
    VP (Cond Sg P2) => "envejecerías" ;--# notpresent
    VP (Cond Sg P3) => "envejecería" ;--# notpresent
    VP (Cond Pl P1) => "envejeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "envejeceríais" ;--# notpresent
    VP (Cond Pl P3) => "envejecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "envejece" ;
    VP (Imp Sg P3) => "envejezca" ;
    VP (Imp Pl P1) => "envejezcamos" ;
    VP (Imp Pl P2) => "envejeced" ;
    VP (Imp Pl P3) => "envejezcan" ;
    VP (Pass Sg Masc) => "envejecido" ;
    VP (Pass Sg Fem) => "envejecida" ;
    VP (Pass Pl Masc) => "envejecidos" ;
    VP (Pass Pl Fem) => "envejecidas"
    }
  } ;

lin enverdecer_V = verboV 
 {s = table {
    VI Infn => "enverdecer" ;
    VI Ger => "enverdeciendo" ;
    VI Part => "enverdecido" ;
    VP (Pres Ind Sg P1) => "enverdezco" ;
    VP (Pres Ind Sg P2) => "enverdeces" ;
    VP (Pres Ind Sg P3) => "enverdece" ;
    VP (Pres Ind Pl P1) => "enverdecemos" ;
    VP (Pres Ind Pl P2) => "enverdecéis" ;
    VP (Pres Ind Pl P3) => "enverdecen" ;
    VP (Pres Subj Sg P1) => "enverdezca" ;
    VP (Pres Subj Sg P2) => "enverdezcas" ;
    VP (Pres Subj Sg P3) => "enverdezca" ;
    VP (Pres Subj Pl P1) => "enverdezcamos" ;
    VP (Pres Subj Pl P2) => "enverdezcáis" ;
    VP (Pres Subj Pl P3) => "enverdezcan" ;
    VP (Impf Ind Sg P1) => "enverdecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enverdecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enverdecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enverdecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enverdecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enverdecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enverdeciera" ; "enverdeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enverdecieras" ; "enverdecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enverdeciera" ; "enverdeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enverdeciéramos" ; "enverdeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enverdecierais" ; "enverdecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enverdecieran" ; "enverdeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enverdecí" ;--# notpresent
    VP (Pret Sg P2) => "enverdeciste" ;--# notpresent
    VP (Pret Sg P3) => "enverdeció" ;--# notpresent
    VP (Pret Pl P1) => "enverdecimos" ;--# notpresent
    VP (Pret Pl P2) => "enverdecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enverdecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enverdeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enverdecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enverdecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enverdeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enverdeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enverdecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enverdeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enverdecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enverdeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enverdeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enverdeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enverdecieren" ;--# notpresent
    VP (Cond Sg P1) => "enverdecería" ;--# notpresent
    VP (Cond Sg P2) => "enverdecerías" ;--# notpresent
    VP (Cond Sg P3) => "enverdecería" ;--# notpresent
    VP (Cond Pl P1) => "enverdeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enverdeceríais" ;--# notpresent
    VP (Cond Pl P3) => "enverdecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enverdece" ;
    VP (Imp Sg P3) => "enverdezca" ;
    VP (Imp Pl P1) => "enverdezcamos" ;
    VP (Imp Pl P2) => "enverdeced" ;
    VP (Imp Pl P3) => "enverdezcan" ;
    VP (Pass Sg Masc) => "enverdecido" ;
    VP (Pass Sg Fem) => "enverdecida" ;
    VP (Pass Pl Masc) => "enverdecidos" ;
    VP (Pass Pl Fem) => "enverdecidas"
    }
  } ;

lin enzurdecer_V = verboV 
 {s = table {
    VI Infn => "enzurdecer" ;
    VI Ger => "enzurdeciendo" ;
    VI Part => "enzurdecido" ;
    VP (Pres Ind Sg P1) => "enzurdezco" ;
    VP (Pres Ind Sg P2) => "enzurdeces" ;
    VP (Pres Ind Sg P3) => "enzurdece" ;
    VP (Pres Ind Pl P1) => "enzurdecemos" ;
    VP (Pres Ind Pl P2) => "enzurdecéis" ;
    VP (Pres Ind Pl P3) => "enzurdecen" ;
    VP (Pres Subj Sg P1) => "enzurdezca" ;
    VP (Pres Subj Sg P2) => "enzurdezcas" ;
    VP (Pres Subj Sg P3) => "enzurdezca" ;
    VP (Pres Subj Pl P1) => "enzurdezcamos" ;
    VP (Pres Subj Pl P2) => "enzurdezcáis" ;
    VP (Pres Subj Pl P3) => "enzurdezcan" ;
    VP (Impf Ind Sg P1) => "enzurdecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enzurdecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enzurdecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enzurdecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enzurdecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enzurdecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enzurdeciera" ; "enzurdeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enzurdecieras" ; "enzurdecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enzurdeciera" ; "enzurdeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enzurdeciéramos" ; "enzurdeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enzurdecierais" ; "enzurdecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enzurdecieran" ; "enzurdeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enzurdecí" ;--# notpresent
    VP (Pret Sg P2) => "enzurdeciste" ;--# notpresent
    VP (Pret Sg P3) => "enzurdeció" ;--# notpresent
    VP (Pret Pl P1) => "enzurdecimos" ;--# notpresent
    VP (Pret Pl P2) => "enzurdecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enzurdecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enzurdeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enzurdecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enzurdecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enzurdeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enzurdeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enzurdecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enzurdeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enzurdecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enzurdeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enzurdeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enzurdeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enzurdecieren" ;--# notpresent
    VP (Cond Sg P1) => "enzurdecería" ;--# notpresent
    VP (Cond Sg P2) => "enzurdecerías" ;--# notpresent
    VP (Cond Sg P3) => "enzurdecería" ;--# notpresent
    VP (Cond Pl P1) => "enzurdeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enzurdeceríais" ;--# notpresent
    VP (Cond Pl P3) => "enzurdecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enzurdece" ;
    VP (Imp Sg P3) => "enzurdezca" ;
    VP (Imp Pl P1) => "enzurdezcamos" ;
    VP (Imp Pl P2) => "enzurdeced" ;
    VP (Imp Pl P3) => "enzurdezcan" ;
    VP (Pass Sg Masc) => "enzurdecido" ;
    VP (Pass Sg Fem) => "enzurdecida" ;
    VP (Pass Pl Masc) => "enzurdecidos" ;
    VP (Pass Pl Fem) => "enzurdecidas"
    }
  } ;

lin escaecer_V = verboV 
 {s = table {
    VI Infn => "escaecer" ;
    VI Ger => "escaeciendo" ;
    VI Part => "escaecido" ;
    VP (Pres Ind Sg P1) => "escaezco" ;
    VP (Pres Ind Sg P2) => "escaeces" ;
    VP (Pres Ind Sg P3) => "escaece" ;
    VP (Pres Ind Pl P1) => "escaecemos" ;
    VP (Pres Ind Pl P2) => "escaecéis" ;
    VP (Pres Ind Pl P3) => "escaecen" ;
    VP (Pres Subj Sg P1) => "escaezca" ;
    VP (Pres Subj Sg P2) => "escaezcas" ;
    VP (Pres Subj Sg P3) => "escaezca" ;
    VP (Pres Subj Pl P1) => "escaezcamos" ;
    VP (Pres Subj Pl P2) => "escaezcáis" ;
    VP (Pres Subj Pl P3) => "escaezcan" ;
    VP (Impf Ind Sg P1) => "escaecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escaecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escaecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escaecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escaecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escaecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escaeciera" ; "escaeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escaecieras" ; "escaecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escaeciera" ; "escaeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escaeciéramos" ; "escaeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escaecierais" ; "escaecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escaecieran" ; "escaeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "escaecí" ;--# notpresent
    VP (Pret Sg P2) => "escaeciste" ;--# notpresent
    VP (Pret Sg P3) => "escaeció" ;--# notpresent
    VP (Pret Pl P1) => "escaecimos" ;--# notpresent
    VP (Pret Pl P2) => "escaecisteis" ;--# notpresent
    VP (Pret Pl P3) => "escaecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escaeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escaecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escaecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escaeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escaeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escaecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escaeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escaecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escaeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escaeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escaeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escaecieren" ;--# notpresent
    VP (Cond Sg P1) => "escaecería" ;--# notpresent
    VP (Cond Sg P2) => "escaecerías" ;--# notpresent
    VP (Cond Sg P3) => "escaecería" ;--# notpresent
    VP (Cond Pl P1) => "escaeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "escaeceríais" ;--# notpresent
    VP (Cond Pl P3) => "escaecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escaece" ;
    VP (Imp Sg P3) => "escaezca" ;
    VP (Imp Pl P1) => "escaezcamos" ;
    VP (Imp Pl P2) => "escaeced" ;
    VP (Imp Pl P3) => "escaezcan" ;
    VP (Pass Sg Masc) => "escaecido" ;
    VP (Pass Sg Fem) => "escaecida" ;
    VP (Pass Pl Masc) => "escaecidos" ;
    VP (Pass Pl Fem) => "escaecidas"
    }
  } ;

lin escarnecer_V = verboV 
 {s = table {
    VI Infn => "escarnecer" ;
    VI Ger => "escarneciendo" ;
    VI Part => "escarnecido" ;
    VP (Pres Ind Sg P1) => "escarnezco" ;
    VP (Pres Ind Sg P2) => "escarneces" ;
    VP (Pres Ind Sg P3) => "escarnece" ;
    VP (Pres Ind Pl P1) => "escarnecemos" ;
    VP (Pres Ind Pl P2) => "escarnecéis" ;
    VP (Pres Ind Pl P3) => "escarnecen" ;
    VP (Pres Subj Sg P1) => "escarnezca" ;
    VP (Pres Subj Sg P2) => "escarnezcas" ;
    VP (Pres Subj Sg P3) => "escarnezca" ;
    VP (Pres Subj Pl P1) => "escarnezcamos" ;
    VP (Pres Subj Pl P2) => "escarnezcáis" ;
    VP (Pres Subj Pl P3) => "escarnezcan" ;
    VP (Impf Ind Sg P1) => "escarnecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escarnecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escarnecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escarnecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escarnecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escarnecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escarneciera" ; "escarneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escarnecieras" ; "escarnecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escarneciera" ; "escarneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escarneciéramos" ; "escarneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escarnecierais" ; "escarnecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escarnecieran" ; "escarneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "escarnecí" ;--# notpresent
    VP (Pret Sg P2) => "escarneciste" ;--# notpresent
    VP (Pret Sg P3) => "escarneció" ;--# notpresent
    VP (Pret Pl P1) => "escarnecimos" ;--# notpresent
    VP (Pret Pl P2) => "escarnecisteis" ;--# notpresent
    VP (Pret Pl P3) => "escarnecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escarneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escarnecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escarnecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escarneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escarneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escarnecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escarneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escarnecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escarneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escarneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escarneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escarnecieren" ;--# notpresent
    VP (Cond Sg P1) => "escarnecería" ;--# notpresent
    VP (Cond Sg P2) => "escarnecerías" ;--# notpresent
    VP (Cond Sg P3) => "escarnecería" ;--# notpresent
    VP (Cond Pl P1) => "escarneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "escarneceríais" ;--# notpresent
    VP (Cond Pl P3) => "escarnecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escarnece" ;
    VP (Imp Sg P3) => "escarnezca" ;
    VP (Imp Pl P1) => "escarnezcamos" ;
    VP (Imp Pl P2) => "escarneced" ;
    VP (Imp Pl P3) => "escarnezcan" ;
    VP (Pass Sg Masc) => "escarnecido" ;
    VP (Pass Sg Fem) => "escarnecida" ;
    VP (Pass Pl Masc) => "escarnecidos" ;
    VP (Pass Pl Fem) => "escarnecidas"
    }
  } ;

lin esclarecer_V = verboV 
 {s = table {
    VI Infn => "esclarecer" ;
    VI Ger => "esclareciendo" ;
    VI Part => "esclarecido" ;
    VP (Pres Ind Sg P1) => "esclarezco" ;
    VP (Pres Ind Sg P2) => "esclareces" ;
    VP (Pres Ind Sg P3) => "esclarece" ;
    VP (Pres Ind Pl P1) => "esclarecemos" ;
    VP (Pres Ind Pl P2) => "esclarecéis" ;
    VP (Pres Ind Pl P3) => "esclarecen" ;
    VP (Pres Subj Sg P1) => "esclarezca" ;
    VP (Pres Subj Sg P2) => "esclarezcas" ;
    VP (Pres Subj Sg P3) => "esclarezca" ;
    VP (Pres Subj Pl P1) => "esclarezcamos" ;
    VP (Pres Subj Pl P2) => "esclarezcáis" ;
    VP (Pres Subj Pl P3) => "esclarezcan" ;
    VP (Impf Ind Sg P1) => "esclarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "esclarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "esclarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "esclarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "esclarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "esclarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"esclareciera" ; "esclareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"esclarecieras" ; "esclarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"esclareciera" ; "esclareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"esclareciéramos" ; "esclareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"esclarecierais" ; "esclarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"esclarecieran" ; "esclareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "esclarecí" ;--# notpresent
    VP (Pret Sg P2) => "esclareciste" ;--# notpresent
    VP (Pret Sg P3) => "esclareció" ;--# notpresent
    VP (Pret Pl P1) => "esclarecimos" ;--# notpresent
    VP (Pret Pl P2) => "esclarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "esclarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "esclareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "esclarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "esclarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "esclareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "esclareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "esclarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "esclareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "esclarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "esclareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "esclareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "esclareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "esclarecieren" ;--# notpresent
    VP (Cond Sg P1) => "esclarecería" ;--# notpresent
    VP (Cond Sg P2) => "esclarecerías" ;--# notpresent
    VP (Cond Sg P3) => "esclarecería" ;--# notpresent
    VP (Cond Pl P1) => "esclareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "esclareceríais" ;--# notpresent
    VP (Cond Pl P3) => "esclarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "esclarece" ;
    VP (Imp Sg P3) => "esclarezca" ;
    VP (Imp Pl P1) => "esclarezcamos" ;
    VP (Imp Pl P2) => "esclareced" ;
    VP (Imp Pl P3) => "esclarezcan" ;
    VP (Pass Sg Masc) => "esclarecido" ;
    VP (Pass Sg Fem) => "esclarecida" ;
    VP (Pass Pl Masc) => "esclarecidos" ;
    VP (Pass Pl Fem) => "esclarecidas"
    }
  } ;

lin esmorecer_V = verboV 
 {s = table {
    VI Infn => "esmorecer" ;
    VI Ger => "esmoreciendo" ;
    VI Part => "esmorecido" ;
    VP (Pres Ind Sg P1) => "esmorezco" ;
    VP (Pres Ind Sg P2) => "esmoreces" ;
    VP (Pres Ind Sg P3) => "esmorece" ;
    VP (Pres Ind Pl P1) => "esmorecemos" ;
    VP (Pres Ind Pl P2) => "esmorecéis" ;
    VP (Pres Ind Pl P3) => "esmorecen" ;
    VP (Pres Subj Sg P1) => "esmorezca" ;
    VP (Pres Subj Sg P2) => "esmorezcas" ;
    VP (Pres Subj Sg P3) => "esmorezca" ;
    VP (Pres Subj Pl P1) => "esmorezcamos" ;
    VP (Pres Subj Pl P2) => "esmorezcáis" ;
    VP (Pres Subj Pl P3) => "esmorezcan" ;
    VP (Impf Ind Sg P1) => "esmorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "esmorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "esmorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "esmorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "esmorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "esmorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"esmoreciera" ; "esmoreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"esmorecieras" ; "esmorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"esmoreciera" ; "esmoreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"esmoreciéramos" ; "esmoreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"esmorecierais" ; "esmorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"esmorecieran" ; "esmoreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "esmorecí" ;--# notpresent
    VP (Pret Sg P2) => "esmoreciste" ;--# notpresent
    VP (Pret Sg P3) => "esmoreció" ;--# notpresent
    VP (Pret Pl P1) => "esmorecimos" ;--# notpresent
    VP (Pret Pl P2) => "esmorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "esmorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "esmoreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "esmorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "esmorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "esmoreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "esmoreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "esmorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "esmoreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "esmorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "esmoreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "esmoreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "esmoreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "esmorecieren" ;--# notpresent
    VP (Cond Sg P1) => "esmorecería" ;--# notpresent
    VP (Cond Sg P2) => "esmorecerías" ;--# notpresent
    VP (Cond Sg P3) => "esmorecería" ;--# notpresent
    VP (Cond Pl P1) => "esmoreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "esmoreceríais" ;--# notpresent
    VP (Cond Pl P3) => "esmorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "esmorece" ;
    VP (Imp Sg P3) => "esmorezca" ;
    VP (Imp Pl P1) => "esmorezcamos" ;
    VP (Imp Pl P2) => "esmoreced" ;
    VP (Imp Pl P3) => "esmorezcan" ;
    VP (Pass Sg Masc) => "esmorecido" ;
    VP (Pass Sg Fem) => "esmorecida" ;
    VP (Pass Pl Masc) => "esmorecidos" ;
    VP (Pass Pl Fem) => "esmorecidas"
    }
  } ;

lin establecer_V = verboV 
 {s = table {
    VI Infn => "establecer" ;
    VI Ger => "estableciendo" ;
    VI Part => "establecido" ;
    VP (Pres Ind Sg P1) => "establezco" ;
    VP (Pres Ind Sg P2) => "estableces" ;
    VP (Pres Ind Sg P3) => "establece" ;
    VP (Pres Ind Pl P1) => "establecemos" ;
    VP (Pres Ind Pl P2) => "establecéis" ;
    VP (Pres Ind Pl P3) => "establecen" ;
    VP (Pres Subj Sg P1) => "establezca" ;
    VP (Pres Subj Sg P2) => "establezcas" ;
    VP (Pres Subj Sg P3) => "establezca" ;
    VP (Pres Subj Pl P1) => "establezcamos" ;
    VP (Pres Subj Pl P2) => "establezcáis" ;
    VP (Pres Subj Pl P3) => "establezcan" ;
    VP (Impf Ind Sg P1) => "establecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "establecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "establecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "establecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "establecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "establecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estableciera" ; "estableciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"establecieras" ; "establecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estableciera" ; "estableciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estableciéramos" ; "estableciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"establecierais" ; "establecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"establecieran" ; "estableciesen"} ;--# notpresent
    VP (Pret Sg P1) => "establecí" ;--# notpresent
    VP (Pret Sg P2) => "estableciste" ;--# notpresent
    VP (Pret Sg P3) => "estableció" ;--# notpresent
    VP (Pret Pl P1) => "establecimos" ;--# notpresent
    VP (Pret Pl P2) => "establecisteis" ;--# notpresent
    VP (Pret Pl P3) => "establecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estableceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "establecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "establecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "estableceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estableceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "establecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estableciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "establecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "estableciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "estableciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estableciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "establecieren" ;--# notpresent
    VP (Cond Sg P1) => "establecería" ;--# notpresent
    VP (Cond Sg P2) => "establecerías" ;--# notpresent
    VP (Cond Sg P3) => "establecería" ;--# notpresent
    VP (Cond Pl P1) => "estableceríamos" ;--# notpresent
    VP (Cond Pl P2) => "estableceríais" ;--# notpresent
    VP (Cond Pl P3) => "establecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "establece" ;
    VP (Imp Sg P3) => "establezca" ;
    VP (Imp Pl P1) => "establezcamos" ;
    VP (Imp Pl P2) => "estableced" ;
    VP (Imp Pl P3) => "establezcan" ;
    VP (Pass Sg Masc) => "establecido" ;
    VP (Pass Sg Fem) => "establecida" ;
    VP (Pass Pl Masc) => "establecidos" ;
    VP (Pass Pl Fem) => "establecidas"
    }
  } ;

lin estremecer_V = verboV 
 {s = table {
    VI Infn => "estremecer" ;
    VI Ger => "estremeciendo" ;
    VI Part => "estremecido" ;
    VP (Pres Ind Sg P1) => "estremezco" ;
    VP (Pres Ind Sg P2) => "estremeces" ;
    VP (Pres Ind Sg P3) => "estremece" ;
    VP (Pres Ind Pl P1) => "estremecemos" ;
    VP (Pres Ind Pl P2) => "estremecéis" ;
    VP (Pres Ind Pl P3) => "estremecen" ;
    VP (Pres Subj Sg P1) => "estremezca" ;
    VP (Pres Subj Sg P2) => "estremezcas" ;
    VP (Pres Subj Sg P3) => "estremezca" ;
    VP (Pres Subj Pl P1) => "estremezcamos" ;
    VP (Pres Subj Pl P2) => "estremezcáis" ;
    VP (Pres Subj Pl P3) => "estremezcan" ;
    VP (Impf Ind Sg P1) => "estremecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "estremecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "estremecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "estremecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "estremecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "estremecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estremeciera" ; "estremeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"estremecieras" ; "estremecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estremeciera" ; "estremeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estremeciéramos" ; "estremeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"estremecierais" ; "estremecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"estremecieran" ; "estremeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "estremecí" ;--# notpresent
    VP (Pret Sg P2) => "estremeciste" ;--# notpresent
    VP (Pret Sg P3) => "estremeció" ;--# notpresent
    VP (Pret Pl P1) => "estremecimos" ;--# notpresent
    VP (Pret Pl P2) => "estremecisteis" ;--# notpresent
    VP (Pret Pl P3) => "estremecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estremeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "estremecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "estremecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "estremeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estremeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "estremecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estremeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "estremecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "estremeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "estremeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estremeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "estremecieren" ;--# notpresent
    VP (Cond Sg P1) => "estremecería" ;--# notpresent
    VP (Cond Sg P2) => "estremecerías" ;--# notpresent
    VP (Cond Sg P3) => "estremecería" ;--# notpresent
    VP (Cond Pl P1) => "estremeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "estremeceríais" ;--# notpresent
    VP (Cond Pl P3) => "estremecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "estremece" ;
    VP (Imp Sg P3) => "estremezca" ;
    VP (Imp Pl P1) => "estremezcamos" ;
    VP (Imp Pl P2) => "estremeced" ;
    VP (Imp Pl P3) => "estremezcan" ;
    VP (Pass Sg Masc) => "estremecido" ;
    VP (Pass Sg Fem) => "estremecida" ;
    VP (Pass Pl Masc) => "estremecidos" ;
    VP (Pass Pl Fem) => "estremecidas"
    }
  } ;

lin evanecer_V = verboV 
 {s = table {
    VI Infn => "evanecer" ;
    VI Ger => "evaneciendo" ;
    VI Part => "evanecido" ;
    VP (Pres Ind Sg P1) => "evanezco" ;
    VP (Pres Ind Sg P2) => "evaneces" ;
    VP (Pres Ind Sg P3) => "evanece" ;
    VP (Pres Ind Pl P1) => "evanecemos" ;
    VP (Pres Ind Pl P2) => "evanecéis" ;
    VP (Pres Ind Pl P3) => "evanecen" ;
    VP (Pres Subj Sg P1) => "evanezca" ;
    VP (Pres Subj Sg P2) => "evanezcas" ;
    VP (Pres Subj Sg P3) => "evanezca" ;
    VP (Pres Subj Pl P1) => "evanezcamos" ;
    VP (Pres Subj Pl P2) => "evanezcáis" ;
    VP (Pres Subj Pl P3) => "evanezcan" ;
    VP (Impf Ind Sg P1) => "evanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "evanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "evanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "evanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "evanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "evanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"evaneciera" ; "evaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"evanecieras" ; "evanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"evaneciera" ; "evaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"evaneciéramos" ; "evaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"evanecierais" ; "evanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"evanecieran" ; "evaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "evanecí" ;--# notpresent
    VP (Pret Sg P2) => "evaneciste" ;--# notpresent
    VP (Pret Sg P3) => "evaneció" ;--# notpresent
    VP (Pret Pl P1) => "evanecimos" ;--# notpresent
    VP (Pret Pl P2) => "evanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "evanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "evaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "evanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "evanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "evaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "evaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "evanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "evaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "evanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "evaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "evaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "evaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "evanecieren" ;--# notpresent
    VP (Cond Sg P1) => "evanecería" ;--# notpresent
    VP (Cond Sg P2) => "evanecerías" ;--# notpresent
    VP (Cond Sg P3) => "evanecería" ;--# notpresent
    VP (Cond Pl P1) => "evaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "evaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "evanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "evanece" ;
    VP (Imp Sg P3) => "evanezca" ;
    VP (Imp Pl P1) => "evanezcamos" ;
    VP (Imp Pl P2) => "evaneced" ;
    VP (Imp Pl P3) => "evanezcan" ;
    VP (Pass Sg Masc) => "evanecido" ;
    VP (Pass Sg Fem) => "evanecida" ;
    VP (Pass Pl Masc) => "evanecidos" ;
    VP (Pass Pl Fem) => "evanecidas"
    }
  } ;

lin evanescer_V = verboV 
 {s = table {
    VI Infn => "evanescer" ;
    VI Ger => "evanesciendo" ;
    VI Part => "evanescido" ;
    VP (Pres Ind Sg P1) => "evaneszco" ;
    VP (Pres Ind Sg P2) => "evanesces" ;
    VP (Pres Ind Sg P3) => "evanesce" ;
    VP (Pres Ind Pl P1) => "evanescemos" ;
    VP (Pres Ind Pl P2) => "evanescéis" ;
    VP (Pres Ind Pl P3) => "evanescen" ;
    VP (Pres Subj Sg P1) => "evaneszca" ;
    VP (Pres Subj Sg P2) => "evaneszcas" ;
    VP (Pres Subj Sg P3) => "evaneszca" ;
    VP (Pres Subj Pl P1) => "evaneszcamos" ;
    VP (Pres Subj Pl P2) => "evaneszcáis" ;
    VP (Pres Subj Pl P3) => "evaneszcan" ;
    VP (Impf Ind Sg P1) => "evanescía" ;--# notpresent
    VP (Impf Ind Sg P2) => "evanescías" ;--# notpresent
    VP (Impf Ind Sg P3) => "evanescía" ;--# notpresent
    VP (Impf Ind Pl P1) => "evanescíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "evanescíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "evanescían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"evanesciera" ; "evanesciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"evanescieras" ; "evanescieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"evanesciera" ; "evanesciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"evanesciéramos" ; "evanesciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"evanescierais" ; "evanescieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"evanescieran" ; "evanesciesen"} ;--# notpresent
    VP (Pret Sg P1) => "evanescí" ;--# notpresent
    VP (Pret Sg P2) => "evanesciste" ;--# notpresent
    VP (Pret Sg P3) => "evanesció" ;--# notpresent
    VP (Pret Pl P1) => "evanescimos" ;--# notpresent
    VP (Pret Pl P2) => "evanescisteis" ;--# notpresent
    VP (Pret Pl P3) => "evanescieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "evanesceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "evanescerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "evanescerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "evanesceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "evanesceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "evanescerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "evanesciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "evanescieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "evanesciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "evanesciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "evanesciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "evanescieren" ;--# notpresent
    VP (Cond Sg P1) => "evanescería" ;--# notpresent
    VP (Cond Sg P2) => "evanescerías" ;--# notpresent
    VP (Cond Sg P3) => "evanescería" ;--# notpresent
    VP (Cond Pl P1) => "evanesceríamos" ;--# notpresent
    VP (Cond Pl P2) => "evanesceríais" ;--# notpresent
    VP (Cond Pl P3) => "evanescerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "evanesce" ;
    VP (Imp Sg P3) => "evaneszca" ;
    VP (Imp Pl P1) => "evaneszcamos" ;
    VP (Imp Pl P2) => "evanesced" ;
    VP (Imp Pl P3) => "evaneszcan" ;
    VP (Pass Sg Masc) => "evanescido" ;
    VP (Pass Sg Fem) => "evanescida" ;
    VP (Pass Pl Masc) => "evanescidos" ;
    VP (Pass Pl Fem) => "evanescidas"
    }
  } ;

lin excandecer_V = verboV 
 {s = table {
    VI Infn => "excandecer" ;
    VI Ger => "excandeciendo" ;
    VI Part => "excandecido" ;
    VP (Pres Ind Sg P1) => "excandezco" ;
    VP (Pres Ind Sg P2) => "excandeces" ;
    VP (Pres Ind Sg P3) => "excandece" ;
    VP (Pres Ind Pl P1) => "excandecemos" ;
    VP (Pres Ind Pl P2) => "excandecéis" ;
    VP (Pres Ind Pl P3) => "excandecen" ;
    VP (Pres Subj Sg P1) => "excandezca" ;
    VP (Pres Subj Sg P2) => "excandezcas" ;
    VP (Pres Subj Sg P3) => "excandezca" ;
    VP (Pres Subj Pl P1) => "excandezcamos" ;
    VP (Pres Subj Pl P2) => "excandezcáis" ;
    VP (Pres Subj Pl P3) => "excandezcan" ;
    VP (Impf Ind Sg P1) => "excandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "excandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "excandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "excandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "excandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "excandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"excandeciera" ; "excandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"excandecieras" ; "excandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"excandeciera" ; "excandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"excandeciéramos" ; "excandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"excandecierais" ; "excandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"excandecieran" ; "excandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "excandecí" ;--# notpresent
    VP (Pret Sg P2) => "excandeciste" ;--# notpresent
    VP (Pret Sg P3) => "excandeció" ;--# notpresent
    VP (Pret Pl P1) => "excandecimos" ;--# notpresent
    VP (Pret Pl P2) => "excandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "excandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "excandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "excandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "excandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "excandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "excandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "excandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "excandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "excandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "excandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "excandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "excandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "excandecieren" ;--# notpresent
    VP (Cond Sg P1) => "excandecería" ;--# notpresent
    VP (Cond Sg P2) => "excandecerías" ;--# notpresent
    VP (Cond Sg P3) => "excandecería" ;--# notpresent
    VP (Cond Pl P1) => "excandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "excandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "excandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "excandece" ;
    VP (Imp Sg P3) => "excandezca" ;
    VP (Imp Pl P1) => "excandezcamos" ;
    VP (Imp Pl P2) => "excandeced" ;
    VP (Imp Pl P3) => "excandezcan" ;
    VP (Pass Sg Masc) => "excandecido" ;
    VP (Pass Sg Fem) => "excandecida" ;
    VP (Pass Pl Masc) => "excandecidos" ;
    VP (Pass Pl Fem) => "excandecidas"
    }
  } ;

lin fallecer_V = verboV 
 {s = table {
    VI Infn => "fallecer" ;
    VI Ger => "falleciendo" ;
    VI Part => "fallecido" ;
    VP (Pres Ind Sg P1) => "fallezco" ;
    VP (Pres Ind Sg P2) => "falleces" ;
    VP (Pres Ind Sg P3) => "fallece" ;
    VP (Pres Ind Pl P1) => "fallecemos" ;
    VP (Pres Ind Pl P2) => "fallecéis" ;
    VP (Pres Ind Pl P3) => "fallecen" ;
    VP (Pres Subj Sg P1) => "fallezca" ;
    VP (Pres Subj Sg P2) => "fallezcas" ;
    VP (Pres Subj Sg P3) => "fallezca" ;
    VP (Pres Subj Pl P1) => "fallezcamos" ;
    VP (Pres Subj Pl P2) => "fallezcáis" ;
    VP (Pres Subj Pl P3) => "fallezcan" ;
    VP (Impf Ind Sg P1) => "fallecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fallecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fallecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fallecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fallecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fallecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"falleciera" ; "falleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fallecieras" ; "fallecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"falleciera" ; "falleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"falleciéramos" ; "falleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fallecierais" ; "fallecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fallecieran" ; "falleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "fallecí" ;--# notpresent
    VP (Pret Sg P2) => "falleciste" ;--# notpresent
    VP (Pret Sg P3) => "falleció" ;--# notpresent
    VP (Pret Pl P1) => "fallecimos" ;--# notpresent
    VP (Pret Pl P2) => "fallecisteis" ;--# notpresent
    VP (Pret Pl P3) => "fallecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "falleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fallecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fallecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "falleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "falleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fallecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "falleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fallecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "falleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "falleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "falleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fallecieren" ;--# notpresent
    VP (Cond Sg P1) => "fallecería" ;--# notpresent
    VP (Cond Sg P2) => "fallecerías" ;--# notpresent
    VP (Cond Sg P3) => "fallecería" ;--# notpresent
    VP (Cond Pl P1) => "falleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "falleceríais" ;--# notpresent
    VP (Cond Pl P3) => "fallecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fallece" ;
    VP (Imp Sg P3) => "fallezca" ;
    VP (Imp Pl P1) => "fallezcamos" ;
    VP (Imp Pl P2) => "falleced" ;
    VP (Imp Pl P3) => "fallezcan" ;
    VP (Pass Sg Masc) => "fallecido" ;
    VP (Pass Sg Fem) => "fallecida" ;
    VP (Pass Pl Masc) => "fallecidos" ;
    VP (Pass Pl Fem) => "fallecidas"
    }
  } ;

lin favorecer_V = verboV 
 {s = table {
    VI Infn => "favorecer" ;
    VI Ger => "favoreciendo" ;
    VI Part => "favorecido" ;
    VP (Pres Ind Sg P1) => "favorezco" ;
    VP (Pres Ind Sg P2) => "favoreces" ;
    VP (Pres Ind Sg P3) => "favorece" ;
    VP (Pres Ind Pl P1) => "favorecemos" ;
    VP (Pres Ind Pl P2) => "favorecéis" ;
    VP (Pres Ind Pl P3) => "favorecen" ;
    VP (Pres Subj Sg P1) => "favorezca" ;
    VP (Pres Subj Sg P2) => "favorezcas" ;
    VP (Pres Subj Sg P3) => "favorezca" ;
    VP (Pres Subj Pl P1) => "favorezcamos" ;
    VP (Pres Subj Pl P2) => "favorezcáis" ;
    VP (Pres Subj Pl P3) => "favorezcan" ;
    VP (Impf Ind Sg P1) => "favorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "favorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "favorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "favorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "favorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "favorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"favoreciera" ; "favoreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"favorecieras" ; "favorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"favoreciera" ; "favoreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"favoreciéramos" ; "favoreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"favorecierais" ; "favorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"favorecieran" ; "favoreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "favorecí" ;--# notpresent
    VP (Pret Sg P2) => "favoreciste" ;--# notpresent
    VP (Pret Sg P3) => "favoreció" ;--# notpresent
    VP (Pret Pl P1) => "favorecimos" ;--# notpresent
    VP (Pret Pl P2) => "favorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "favorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "favoreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "favorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "favorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "favoreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "favoreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "favorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "favoreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "favorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "favoreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "favoreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "favoreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "favorecieren" ;--# notpresent
    VP (Cond Sg P1) => "favorecería" ;--# notpresent
    VP (Cond Sg P2) => "favorecerías" ;--# notpresent
    VP (Cond Sg P3) => "favorecería" ;--# notpresent
    VP (Cond Pl P1) => "favoreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "favoreceríais" ;--# notpresent
    VP (Cond Pl P3) => "favorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "favorece" ;
    VP (Imp Sg P3) => "favorezca" ;
    VP (Imp Pl P1) => "favorezcamos" ;
    VP (Imp Pl P2) => "favoreced" ;
    VP (Imp Pl P3) => "favorezcan" ;
    VP (Pass Sg Masc) => "favorecido" ;
    VP (Pass Sg Fem) => "favorecida" ;
    VP (Pass Pl Masc) => "favorecidos" ;
    VP (Pass Pl Fem) => "favorecidas"
    }
  } ;

lin fenecer_V = verboV 
 {s = table {
    VI Infn => "fenecer" ;
    VI Ger => "feneciendo" ;
    VI Part => "fenecido" ;
    VP (Pres Ind Sg P1) => "fenezco" ;
    VP (Pres Ind Sg P2) => "feneces" ;
    VP (Pres Ind Sg P3) => "fenece" ;
    VP (Pres Ind Pl P1) => "fenecemos" ;
    VP (Pres Ind Pl P2) => "fenecéis" ;
    VP (Pres Ind Pl P3) => "fenecen" ;
    VP (Pres Subj Sg P1) => "fenezca" ;
    VP (Pres Subj Sg P2) => "fenezcas" ;
    VP (Pres Subj Sg P3) => "fenezca" ;
    VP (Pres Subj Pl P1) => "fenezcamos" ;
    VP (Pres Subj Pl P2) => "fenezcáis" ;
    VP (Pres Subj Pl P3) => "fenezcan" ;
    VP (Impf Ind Sg P1) => "fenecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fenecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fenecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fenecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fenecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fenecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"feneciera" ; "feneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fenecieras" ; "fenecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"feneciera" ; "feneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"feneciéramos" ; "feneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fenecierais" ; "fenecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fenecieran" ; "feneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "fenecí" ;--# notpresent
    VP (Pret Sg P2) => "feneciste" ;--# notpresent
    VP (Pret Sg P3) => "feneció" ;--# notpresent
    VP (Pret Pl P1) => "fenecimos" ;--# notpresent
    VP (Pret Pl P2) => "fenecisteis" ;--# notpresent
    VP (Pret Pl P3) => "fenecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "feneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fenecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fenecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "feneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "feneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fenecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "feneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fenecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "feneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "feneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "feneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fenecieren" ;--# notpresent
    VP (Cond Sg P1) => "fenecería" ;--# notpresent
    VP (Cond Sg P2) => "fenecerías" ;--# notpresent
    VP (Cond Sg P3) => "fenecería" ;--# notpresent
    VP (Cond Pl P1) => "feneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "feneceríais" ;--# notpresent
    VP (Cond Pl P3) => "fenecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fenece" ;
    VP (Imp Sg P3) => "fenezca" ;
    VP (Imp Pl P1) => "fenezcamos" ;
    VP (Imp Pl P2) => "feneced" ;
    VP (Imp Pl P3) => "fenezcan" ;
    VP (Pass Sg Masc) => "fenecido" ;
    VP (Pass Sg Fem) => "fenecida" ;
    VP (Pass Pl Masc) => "fenecidos" ;
    VP (Pass Pl Fem) => "fenecidas"
    }
  } ;

lin florecer_V = verboV 
 {s = table {
    VI Infn => "florecer" ;
    VI Ger => "floreciendo" ;
    VI Part => "florecido" ;
    VP (Pres Ind Sg P1) => "florezco" ;
    VP (Pres Ind Sg P2) => "floreces" ;
    VP (Pres Ind Sg P3) => "florece" ;
    VP (Pres Ind Pl P1) => "florecemos" ;
    VP (Pres Ind Pl P2) => "florecéis" ;
    VP (Pres Ind Pl P3) => "florecen" ;
    VP (Pres Subj Sg P1) => "florezca" ;
    VP (Pres Subj Sg P2) => "florezcas" ;
    VP (Pres Subj Sg P3) => "florezca" ;
    VP (Pres Subj Pl P1) => "florezcamos" ;
    VP (Pres Subj Pl P2) => "florezcáis" ;
    VP (Pres Subj Pl P3) => "florezcan" ;
    VP (Impf Ind Sg P1) => "florecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "florecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "florecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "florecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "florecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "florecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"floreciera" ; "floreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"florecieras" ; "florecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"floreciera" ; "floreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"floreciéramos" ; "floreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"florecierais" ; "florecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"florecieran" ; "floreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "florecí" ;--# notpresent
    VP (Pret Sg P2) => "floreciste" ;--# notpresent
    VP (Pret Sg P3) => "floreció" ;--# notpresent
    VP (Pret Pl P1) => "florecimos" ;--# notpresent
    VP (Pret Pl P2) => "florecisteis" ;--# notpresent
    VP (Pret Pl P3) => "florecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "floreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "florecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "florecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "floreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "floreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "florecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "floreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "florecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "floreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "floreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "floreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "florecieren" ;--# notpresent
    VP (Cond Sg P1) => "florecería" ;--# notpresent
    VP (Cond Sg P2) => "florecerías" ;--# notpresent
    VP (Cond Sg P3) => "florecería" ;--# notpresent
    VP (Cond Pl P1) => "floreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "floreceríais" ;--# notpresent
    VP (Cond Pl P3) => "florecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "florece" ;
    VP (Imp Sg P3) => "florezca" ;
    VP (Imp Pl P1) => "florezcamos" ;
    VP (Imp Pl P2) => "floreced" ;
    VP (Imp Pl P3) => "florezcan" ;
    VP (Pass Sg Masc) => "florecido" ;
    VP (Pass Sg Fem) => "florecida" ;
    VP (Pass Pl Masc) => "florecidos" ;
    VP (Pass Pl Fem) => "florecidas"
    }
  } ;

lin fortalecer_V = verboV 
 {s = table {
    VI Infn => "fortalecer" ;
    VI Ger => "fortaleciendo" ;
    VI Part => "fortalecido" ;
    VP (Pres Ind Sg P1) => "fortalezco" ;
    VP (Pres Ind Sg P2) => "fortaleces" ;
    VP (Pres Ind Sg P3) => "fortalece" ;
    VP (Pres Ind Pl P1) => "fortalecemos" ;
    VP (Pres Ind Pl P2) => "fortalecéis" ;
    VP (Pres Ind Pl P3) => "fortalecen" ;
    VP (Pres Subj Sg P1) => "fortalezca" ;
    VP (Pres Subj Sg P2) => "fortalezcas" ;
    VP (Pres Subj Sg P3) => "fortalezca" ;
    VP (Pres Subj Pl P1) => "fortalezcamos" ;
    VP (Pres Subj Pl P2) => "fortalezcáis" ;
    VP (Pres Subj Pl P3) => "fortalezcan" ;
    VP (Impf Ind Sg P1) => "fortalecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fortalecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fortalecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fortalecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fortalecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fortalecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fortaleciera" ; "fortaleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fortalecieras" ; "fortalecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fortaleciera" ; "fortaleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fortaleciéramos" ; "fortaleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fortalecierais" ; "fortalecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fortalecieran" ; "fortaleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "fortalecí" ;--# notpresent
    VP (Pret Sg P2) => "fortaleciste" ;--# notpresent
    VP (Pret Sg P3) => "fortaleció" ;--# notpresent
    VP (Pret Pl P1) => "fortalecimos" ;--# notpresent
    VP (Pret Pl P2) => "fortalecisteis" ;--# notpresent
    VP (Pret Pl P3) => "fortalecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fortaleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fortalecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fortalecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fortaleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fortaleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fortalecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fortaleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fortalecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fortaleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fortaleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fortaleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fortalecieren" ;--# notpresent
    VP (Cond Sg P1) => "fortalecería" ;--# notpresent
    VP (Cond Sg P2) => "fortalecerías" ;--# notpresent
    VP (Cond Sg P3) => "fortalecería" ;--# notpresent
    VP (Cond Pl P1) => "fortaleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "fortaleceríais" ;--# notpresent
    VP (Cond Pl P3) => "fortalecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fortalece" ;
    VP (Imp Sg P3) => "fortalezca" ;
    VP (Imp Pl P1) => "fortalezcamos" ;
    VP (Imp Pl P2) => "fortaleced" ;
    VP (Imp Pl P3) => "fortalezcan" ;
    VP (Pass Sg Masc) => "fortalecido" ;
    VP (Pass Sg Fem) => "fortalecida" ;
    VP (Pass Pl Masc) => "fortalecidos" ;
    VP (Pass Pl Fem) => "fortalecidas"
    }
  } ;

lin fosforecer_V = verboV 
 {s = table {
    VI Infn => "fosforecer" ;
    VI Ger => "fosforeciendo" ;
    VI Part => "fosforecido" ;
    VP (Pres Ind Sg P1) => "fosforezco" ;
    VP (Pres Ind Sg P2) => "fosforeces" ;
    VP (Pres Ind Sg P3) => "fosforece" ;
    VP (Pres Ind Pl P1) => "fosforecemos" ;
    VP (Pres Ind Pl P2) => "fosforecéis" ;
    VP (Pres Ind Pl P3) => "fosforecen" ;
    VP (Pres Subj Sg P1) => "fosforezca" ;
    VP (Pres Subj Sg P2) => "fosforezcas" ;
    VP (Pres Subj Sg P3) => "fosforezca" ;
    VP (Pres Subj Pl P1) => "fosforezcamos" ;
    VP (Pres Subj Pl P2) => "fosforezcáis" ;
    VP (Pres Subj Pl P3) => "fosforezcan" ;
    VP (Impf Ind Sg P1) => "fosforecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fosforecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fosforecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fosforecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fosforecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fosforecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fosforeciera" ; "fosforeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fosforecieras" ; "fosforecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fosforeciera" ; "fosforeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fosforeciéramos" ; "fosforeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fosforecierais" ; "fosforecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fosforecieran" ; "fosforeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "fosforecí" ;--# notpresent
    VP (Pret Sg P2) => "fosforeciste" ;--# notpresent
    VP (Pret Sg P3) => "fosforeció" ;--# notpresent
    VP (Pret Pl P1) => "fosforecimos" ;--# notpresent
    VP (Pret Pl P2) => "fosforecisteis" ;--# notpresent
    VP (Pret Pl P3) => "fosforecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fosforeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fosforecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fosforecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fosforeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fosforeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fosforecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fosforeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fosforecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fosforeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fosforeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fosforeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fosforecieren" ;--# notpresent
    VP (Cond Sg P1) => "fosforecería" ;--# notpresent
    VP (Cond Sg P2) => "fosforecerías" ;--# notpresent
    VP (Cond Sg P3) => "fosforecería" ;--# notpresent
    VP (Cond Pl P1) => "fosforeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "fosforeceríais" ;--# notpresent
    VP (Cond Pl P3) => "fosforecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fosforece" ;
    VP (Imp Sg P3) => "fosforezca" ;
    VP (Imp Pl P1) => "fosforezcamos" ;
    VP (Imp Pl P2) => "fosforeced" ;
    VP (Imp Pl P3) => "fosforezcan" ;
    VP (Pass Sg Masc) => "fosforecido" ;
    VP (Pass Sg Fem) => "fosforecida" ;
    VP (Pass Pl Masc) => "fosforecidos" ;
    VP (Pass Pl Fem) => "fosforecidas"
    }
  } ;

lin fosforescer_V = verboV 
 {s = table {
    VI Infn => "fosforescer" ;
    VI Ger => "fosforesciendo" ;
    VI Part => "fosforescido" ;
    VP (Pres Ind Sg P1) => "fosforeszco" ;
    VP (Pres Ind Sg P2) => "fosforesces" ;
    VP (Pres Ind Sg P3) => "fosforesce" ;
    VP (Pres Ind Pl P1) => "fosforescemos" ;
    VP (Pres Ind Pl P2) => "fosforescéis" ;
    VP (Pres Ind Pl P3) => "fosforescen" ;
    VP (Pres Subj Sg P1) => "fosforeszca" ;
    VP (Pres Subj Sg P2) => "fosforeszcas" ;
    VP (Pres Subj Sg P3) => "fosforeszca" ;
    VP (Pres Subj Pl P1) => "fosforeszcamos" ;
    VP (Pres Subj Pl P2) => "fosforeszcáis" ;
    VP (Pres Subj Pl P3) => "fosforeszcan" ;
    VP (Impf Ind Sg P1) => "fosforescía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fosforescías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fosforescía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fosforescíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fosforescíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fosforescían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fosforesciera" ; "fosforesciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fosforescieras" ; "fosforescieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fosforesciera" ; "fosforesciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fosforesciéramos" ; "fosforesciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fosforescierais" ; "fosforescieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fosforescieran" ; "fosforesciesen"} ;--# notpresent
    VP (Pret Sg P1) => "fosforescí" ;--# notpresent
    VP (Pret Sg P2) => "fosforesciste" ;--# notpresent
    VP (Pret Sg P3) => "fosforesció" ;--# notpresent
    VP (Pret Pl P1) => "fosforescimos" ;--# notpresent
    VP (Pret Pl P2) => "fosforescisteis" ;--# notpresent
    VP (Pret Pl P3) => "fosforescieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fosforesceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fosforescerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fosforescerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fosforesceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fosforesceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fosforescerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fosforesciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fosforescieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fosforesciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fosforesciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fosforesciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fosforescieren" ;--# notpresent
    VP (Cond Sg P1) => "fosforescería" ;--# notpresent
    VP (Cond Sg P2) => "fosforescerías" ;--# notpresent
    VP (Cond Sg P3) => "fosforescería" ;--# notpresent
    VP (Cond Pl P1) => "fosforesceríamos" ;--# notpresent
    VP (Cond Pl P2) => "fosforesceríais" ;--# notpresent
    VP (Cond Pl P3) => "fosforescerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fosforesce" ;
    VP (Imp Sg P3) => "fosforeszca" ;
    VP (Imp Pl P1) => "fosforeszcamos" ;
    VP (Imp Pl P2) => "fosforesced" ;
    VP (Imp Pl P3) => "fosforeszcan" ;
    VP (Pass Sg Masc) => "fosforescido" ;
    VP (Pass Sg Fem) => "fosforescida" ;
    VP (Pass Pl Masc) => "fosforescidos" ;
    VP (Pass Pl Fem) => "fosforescidas"
    }
  } ;

lin frutecer_V = verboV 
 {s = table {
    VI Infn => "frutecer" ;
    VI Ger => "fruteciendo" ;
    VI Part => "frutecido" ;
    VP (Pres Ind Sg P1) => "frutezco" ;
    VP (Pres Ind Sg P2) => "fruteces" ;
    VP (Pres Ind Sg P3) => "frutece" ;
    VP (Pres Ind Pl P1) => "frutecemos" ;
    VP (Pres Ind Pl P2) => "frutecéis" ;
    VP (Pres Ind Pl P3) => "frutecen" ;
    VP (Pres Subj Sg P1) => "frutezca" ;
    VP (Pres Subj Sg P2) => "frutezcas" ;
    VP (Pres Subj Sg P3) => "frutezca" ;
    VP (Pres Subj Pl P1) => "frutezcamos" ;
    VP (Pres Subj Pl P2) => "frutezcáis" ;
    VP (Pres Subj Pl P3) => "frutezcan" ;
    VP (Impf Ind Sg P1) => "frutecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "frutecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "frutecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "frutecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "frutecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "frutecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fruteciera" ; "fruteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"frutecieras" ; "frutecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fruteciera" ; "fruteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fruteciéramos" ; "fruteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"frutecierais" ; "frutecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"frutecieran" ; "fruteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "frutecí" ;--# notpresent
    VP (Pret Sg P2) => "fruteciste" ;--# notpresent
    VP (Pret Sg P3) => "fruteció" ;--# notpresent
    VP (Pret Pl P1) => "frutecimos" ;--# notpresent
    VP (Pret Pl P2) => "frutecisteis" ;--# notpresent
    VP (Pret Pl P3) => "frutecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fruteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "frutecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "frutecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fruteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fruteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "frutecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fruteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "frutecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fruteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fruteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fruteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "frutecieren" ;--# notpresent
    VP (Cond Sg P1) => "frutecería" ;--# notpresent
    VP (Cond Sg P2) => "frutecerías" ;--# notpresent
    VP (Cond Sg P3) => "frutecería" ;--# notpresent
    VP (Cond Pl P1) => "fruteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "fruteceríais" ;--# notpresent
    VP (Cond Pl P3) => "frutecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "frutece" ;
    VP (Imp Sg P3) => "frutezca" ;
    VP (Imp Pl P1) => "frutezcamos" ;
    VP (Imp Pl P2) => "fruteced" ;
    VP (Imp Pl P3) => "frutezcan" ;
    VP (Pass Sg Masc) => "frutecido" ;
    VP (Pass Sg Fem) => "frutecida" ;
    VP (Pass Pl Masc) => "frutecidos" ;
    VP (Pass Pl Fem) => "frutecidas"
    }
  } ;

lin guarecer_V = verboV 
 {s = table {
    VI Infn => "guarecer" ;
    VI Ger => "guareciendo" ;
    VI Part => "guarecido" ;
    VP (Pres Ind Sg P1) => "guarezco" ;
    VP (Pres Ind Sg P2) => "guareces" ;
    VP (Pres Ind Sg P3) => "guarece" ;
    VP (Pres Ind Pl P1) => "guarecemos" ;
    VP (Pres Ind Pl P2) => "guarecéis" ;
    VP (Pres Ind Pl P3) => "guarecen" ;
    VP (Pres Subj Sg P1) => "guarezca" ;
    VP (Pres Subj Sg P2) => "guarezcas" ;
    VP (Pres Subj Sg P3) => "guarezca" ;
    VP (Pres Subj Pl P1) => "guarezcamos" ;
    VP (Pres Subj Pl P2) => "guarezcáis" ;
    VP (Pres Subj Pl P3) => "guarezcan" ;
    VP (Impf Ind Sg P1) => "guarecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "guarecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "guarecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "guarecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "guarecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "guarecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"guareciera" ; "guareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"guarecieras" ; "guarecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"guareciera" ; "guareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"guareciéramos" ; "guareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"guarecierais" ; "guarecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"guarecieran" ; "guareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "guarecí" ;--# notpresent
    VP (Pret Sg P2) => "guareciste" ;--# notpresent
    VP (Pret Sg P3) => "guareció" ;--# notpresent
    VP (Pret Pl P1) => "guarecimos" ;--# notpresent
    VP (Pret Pl P2) => "guarecisteis" ;--# notpresent
    VP (Pret Pl P3) => "guarecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "guareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "guarecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "guarecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "guareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "guareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "guarecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "guareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "guarecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "guareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "guareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "guareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "guarecieren" ;--# notpresent
    VP (Cond Sg P1) => "guarecería" ;--# notpresent
    VP (Cond Sg P2) => "guarecerías" ;--# notpresent
    VP (Cond Sg P3) => "guarecería" ;--# notpresent
    VP (Cond Pl P1) => "guareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "guareceríais" ;--# notpresent
    VP (Cond Pl P3) => "guarecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "guarece" ;
    VP (Imp Sg P3) => "guarezca" ;
    VP (Imp Pl P1) => "guarezcamos" ;
    VP (Imp Pl P2) => "guareced" ;
    VP (Imp Pl P3) => "guarezcan" ;
    VP (Pass Sg Masc) => "guarecido" ;
    VP (Pass Sg Fem) => "guarecida" ;
    VP (Pass Pl Masc) => "guarecidos" ;
    VP (Pass Pl Fem) => "guarecidas"
    }
  } ;

lin guarnecer_V = verboV 
 {s = table {
    VI Infn => "guarnecer" ;
    VI Ger => "guarneciendo" ;
    VI Part => "guarnecido" ;
    VP (Pres Ind Sg P1) => "guarnezco" ;
    VP (Pres Ind Sg P2) => "guarneces" ;
    VP (Pres Ind Sg P3) => "guarnece" ;
    VP (Pres Ind Pl P1) => "guarnecemos" ;
    VP (Pres Ind Pl P2) => "guarnecéis" ;
    VP (Pres Ind Pl P3) => "guarnecen" ;
    VP (Pres Subj Sg P1) => "guarnezca" ;
    VP (Pres Subj Sg P2) => "guarnezcas" ;
    VP (Pres Subj Sg P3) => "guarnezca" ;
    VP (Pres Subj Pl P1) => "guarnezcamos" ;
    VP (Pres Subj Pl P2) => "guarnezcáis" ;
    VP (Pres Subj Pl P3) => "guarnezcan" ;
    VP (Impf Ind Sg P1) => "guarnecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "guarnecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "guarnecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "guarnecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "guarnecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "guarnecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"guarneciera" ; "guarneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"guarnecieras" ; "guarnecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"guarneciera" ; "guarneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"guarneciéramos" ; "guarneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"guarnecierais" ; "guarnecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"guarnecieran" ; "guarneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "guarnecí" ;--# notpresent
    VP (Pret Sg P2) => "guarneciste" ;--# notpresent
    VP (Pret Sg P3) => "guarneció" ;--# notpresent
    VP (Pret Pl P1) => "guarnecimos" ;--# notpresent
    VP (Pret Pl P2) => "guarnecisteis" ;--# notpresent
    VP (Pret Pl P3) => "guarnecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "guarneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "guarnecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "guarnecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "guarneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "guarneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "guarnecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "guarneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "guarnecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "guarneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "guarneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "guarneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "guarnecieren" ;--# notpresent
    VP (Cond Sg P1) => "guarnecería" ;--# notpresent
    VP (Cond Sg P2) => "guarnecerías" ;--# notpresent
    VP (Cond Sg P3) => "guarnecería" ;--# notpresent
    VP (Cond Pl P1) => "guarneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "guarneceríais" ;--# notpresent
    VP (Cond Pl P3) => "guarnecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "guarnece" ;
    VP (Imp Sg P3) => "guarnezca" ;
    VP (Imp Pl P1) => "guarnezcamos" ;
    VP (Imp Pl P2) => "guarneced" ;
    VP (Imp Pl P3) => "guarnezcan" ;
    VP (Pass Sg Masc) => "guarnecido" ;
    VP (Pass Sg Fem) => "guarnecida" ;
    VP (Pass Pl Masc) => "guarnecidos" ;
    VP (Pass Pl Fem) => "guarnecidas"
    }
  } ;

lin herbecer_V = verboV 
 {s = table {
    VI Infn => "herbecer" ;
    VI Ger => "herbeciendo" ;
    VI Part => "herbecido" ;
    VP (Pres Ind Sg P1) => "herbezco" ;
    VP (Pres Ind Sg P2) => "herbeces" ;
    VP (Pres Ind Sg P3) => "herbece" ;
    VP (Pres Ind Pl P1) => "herbecemos" ;
    VP (Pres Ind Pl P2) => "herbecéis" ;
    VP (Pres Ind Pl P3) => "herbecen" ;
    VP (Pres Subj Sg P1) => "herbezca" ;
    VP (Pres Subj Sg P2) => "herbezcas" ;
    VP (Pres Subj Sg P3) => "herbezca" ;
    VP (Pres Subj Pl P1) => "herbezcamos" ;
    VP (Pres Subj Pl P2) => "herbezcáis" ;
    VP (Pres Subj Pl P3) => "herbezcan" ;
    VP (Impf Ind Sg P1) => "herbecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "herbecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "herbecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "herbecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "herbecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "herbecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"herbeciera" ; "herbeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"herbecieras" ; "herbecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"herbeciera" ; "herbeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"herbeciéramos" ; "herbeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"herbecierais" ; "herbecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"herbecieran" ; "herbeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "herbecí" ;--# notpresent
    VP (Pret Sg P2) => "herbeciste" ;--# notpresent
    VP (Pret Sg P3) => "herbeció" ;--# notpresent
    VP (Pret Pl P1) => "herbecimos" ;--# notpresent
    VP (Pret Pl P2) => "herbecisteis" ;--# notpresent
    VP (Pret Pl P3) => "herbecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "herbeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "herbecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "herbecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "herbeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "herbeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "herbecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "herbeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "herbecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "herbeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "herbeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "herbeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "herbecieren" ;--# notpresent
    VP (Cond Sg P1) => "herbecería" ;--# notpresent
    VP (Cond Sg P2) => "herbecerías" ;--# notpresent
    VP (Cond Sg P3) => "herbecería" ;--# notpresent
    VP (Cond Pl P1) => "herbeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "herbeceríais" ;--# notpresent
    VP (Cond Pl P3) => "herbecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "herbece" ;
    VP (Imp Sg P3) => "herbezca" ;
    VP (Imp Pl P1) => "herbezcamos" ;
    VP (Imp Pl P2) => "herbeced" ;
    VP (Imp Pl P3) => "herbezcan" ;
    VP (Pass Sg Masc) => "herbecido" ;
    VP (Pass Sg Fem) => "herbecida" ;
    VP (Pass Pl Masc) => "herbecidos" ;
    VP (Pass Pl Fem) => "herbecidas"
    }
  } ;

lin hermanecer_V = verboV 
 {s = table {
    VI Infn => "hermanecer" ;
    VI Ger => "hermaneciendo" ;
    VI Part => "hermanecido" ;
    VP (Pres Ind Sg P1) => "hermanezco" ;
    VP (Pres Ind Sg P2) => "hermaneces" ;
    VP (Pres Ind Sg P3) => "hermanece" ;
    VP (Pres Ind Pl P1) => "hermanecemos" ;
    VP (Pres Ind Pl P2) => "hermanecéis" ;
    VP (Pres Ind Pl P3) => "hermanecen" ;
    VP (Pres Subj Sg P1) => "hermanezca" ;
    VP (Pres Subj Sg P2) => "hermanezcas" ;
    VP (Pres Subj Sg P3) => "hermanezca" ;
    VP (Pres Subj Pl P1) => "hermanezcamos" ;
    VP (Pres Subj Pl P2) => "hermanezcáis" ;
    VP (Pres Subj Pl P3) => "hermanezcan" ;
    VP (Impf Ind Sg P1) => "hermanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "hermanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hermanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "hermanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hermanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hermanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hermaneciera" ; "hermaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hermanecieras" ; "hermanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hermaneciera" ; "hermaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hermaneciéramos" ; "hermaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hermanecierais" ; "hermanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hermanecieran" ; "hermaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "hermanecí" ;--# notpresent
    VP (Pret Sg P2) => "hermaneciste" ;--# notpresent
    VP (Pret Sg P3) => "hermaneció" ;--# notpresent
    VP (Pret Pl P1) => "hermanecimos" ;--# notpresent
    VP (Pret Pl P2) => "hermanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "hermanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "hermaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "hermanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hermanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "hermaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "hermaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "hermanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hermaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hermanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hermaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hermaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hermaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hermanecieren" ;--# notpresent
    VP (Cond Sg P1) => "hermanecería" ;--# notpresent
    VP (Cond Sg P2) => "hermanecerías" ;--# notpresent
    VP (Cond Sg P3) => "hermanecería" ;--# notpresent
    VP (Cond Pl P1) => "hermaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "hermaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "hermanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hermanece" ;
    VP (Imp Sg P3) => "hermanezca" ;
    VP (Imp Pl P1) => "hermanezcamos" ;
    VP (Imp Pl P2) => "hermaneced" ;
    VP (Imp Pl P3) => "hermanezcan" ;
    VP (Pass Sg Masc) => "hermanecido" ;
    VP (Pass Sg Fem) => "hermanecida" ;
    VP (Pass Pl Masc) => "hermanecidos" ;
    VP (Pass Pl Fem) => "hermanecidas"
    }
  } ;

lin humedecer_V = verboV 
 {s = table {
    VI Infn => "humedecer" ;
    VI Ger => "humedeciendo" ;
    VI Part => "humedecido" ;
    VP (Pres Ind Sg P1) => "humedezco" ;
    VP (Pres Ind Sg P2) => "humedeces" ;
    VP (Pres Ind Sg P3) => "humedece" ;
    VP (Pres Ind Pl P1) => "humedecemos" ;
    VP (Pres Ind Pl P2) => "humedecéis" ;
    VP (Pres Ind Pl P3) => "humedecen" ;
    VP (Pres Subj Sg P1) => "humedezca" ;
    VP (Pres Subj Sg P2) => "humedezcas" ;
    VP (Pres Subj Sg P3) => "humedezca" ;
    VP (Pres Subj Pl P1) => "humedezcamos" ;
    VP (Pres Subj Pl P2) => "humedezcáis" ;
    VP (Pres Subj Pl P3) => "humedezcan" ;
    VP (Impf Ind Sg P1) => "humedecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "humedecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "humedecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "humedecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "humedecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "humedecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"humedeciera" ; "humedeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"humedecieras" ; "humedecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"humedeciera" ; "humedeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"humedeciéramos" ; "humedeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"humedecierais" ; "humedecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"humedecieran" ; "humedeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "humedecí" ;--# notpresent
    VP (Pret Sg P2) => "humedeciste" ;--# notpresent
    VP (Pret Sg P3) => "humedeció" ;--# notpresent
    VP (Pret Pl P1) => "humedecimos" ;--# notpresent
    VP (Pret Pl P2) => "humedecisteis" ;--# notpresent
    VP (Pret Pl P3) => "humedecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "humedeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "humedecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "humedecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "humedeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "humedeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "humedecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "humedeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "humedecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "humedeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "humedeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "humedeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "humedecieren" ;--# notpresent
    VP (Cond Sg P1) => "humedecería" ;--# notpresent
    VP (Cond Sg P2) => "humedecerías" ;--# notpresent
    VP (Cond Sg P3) => "humedecería" ;--# notpresent
    VP (Cond Pl P1) => "humedeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "humedeceríais" ;--# notpresent
    VP (Cond Pl P3) => "humedecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "humedece" ;
    VP (Imp Sg P3) => "humedezca" ;
    VP (Imp Pl P1) => "humedezcamos" ;
    VP (Imp Pl P2) => "humedeced" ;
    VP (Imp Pl P3) => "humedezcan" ;
    VP (Pass Sg Masc) => "humedecido" ;
    VP (Pass Sg Fem) => "humedecida" ;
    VP (Pass Pl Masc) => "humedecidos" ;
    VP (Pass Pl Fem) => "humedecidas"
    }
  } ;

lin languidecer_V = verboV 
 {s = table {
    VI Infn => "languidecer" ;
    VI Ger => "languideciendo" ;
    VI Part => "languidecido" ;
    VP (Pres Ind Sg P1) => "languidezco" ;
    VP (Pres Ind Sg P2) => "languideces" ;
    VP (Pres Ind Sg P3) => "languidece" ;
    VP (Pres Ind Pl P1) => "languidecemos" ;
    VP (Pres Ind Pl P2) => "languidecéis" ;
    VP (Pres Ind Pl P3) => "languidecen" ;
    VP (Pres Subj Sg P1) => "languidezca" ;
    VP (Pres Subj Sg P2) => "languidezcas" ;
    VP (Pres Subj Sg P3) => "languidezca" ;
    VP (Pres Subj Pl P1) => "languidezcamos" ;
    VP (Pres Subj Pl P2) => "languidezcáis" ;
    VP (Pres Subj Pl P3) => "languidezcan" ;
    VP (Impf Ind Sg P1) => "languidecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "languidecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "languidecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "languidecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "languidecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "languidecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"languideciera" ; "languideciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"languidecieras" ; "languidecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"languideciera" ; "languideciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"languideciéramos" ; "languideciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"languidecierais" ; "languidecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"languidecieran" ; "languideciesen"} ;--# notpresent
    VP (Pret Sg P1) => "languidecí" ;--# notpresent
    VP (Pret Sg P2) => "languideciste" ;--# notpresent
    VP (Pret Sg P3) => "languideció" ;--# notpresent
    VP (Pret Pl P1) => "languidecimos" ;--# notpresent
    VP (Pret Pl P2) => "languidecisteis" ;--# notpresent
    VP (Pret Pl P3) => "languidecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "languideceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "languidecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "languidecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "languideceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "languideceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "languidecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "languideciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "languidecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "languideciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "languideciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "languideciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "languidecieren" ;--# notpresent
    VP (Cond Sg P1) => "languidecería" ;--# notpresent
    VP (Cond Sg P2) => "languidecerías" ;--# notpresent
    VP (Cond Sg P3) => "languidecería" ;--# notpresent
    VP (Cond Pl P1) => "languideceríamos" ;--# notpresent
    VP (Cond Pl P2) => "languideceríais" ;--# notpresent
    VP (Cond Pl P3) => "languidecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "languidece" ;
    VP (Imp Sg P3) => "languidezca" ;
    VP (Imp Pl P1) => "languidezcamos" ;
    VP (Imp Pl P2) => "languideced" ;
    VP (Imp Pl P3) => "languidezcan" ;
    VP (Pass Sg Masc) => "languidecido" ;
    VP (Pass Sg Fem) => "languidecida" ;
    VP (Pass Pl Masc) => "languidecidos" ;
    VP (Pass Pl Fem) => "languidecidas"
    }
  } ;

lin lividecer_V = verboV 
 {s = table {
    VI Infn => "lividecer" ;
    VI Ger => "livideciendo" ;
    VI Part => "lividecido" ;
    VP (Pres Ind Sg P1) => "lividezco" ;
    VP (Pres Ind Sg P2) => "livideces" ;
    VP (Pres Ind Sg P3) => "lividece" ;
    VP (Pres Ind Pl P1) => "lividecemos" ;
    VP (Pres Ind Pl P2) => "lividecéis" ;
    VP (Pres Ind Pl P3) => "lividecen" ;
    VP (Pres Subj Sg P1) => "lividezca" ;
    VP (Pres Subj Sg P2) => "lividezcas" ;
    VP (Pres Subj Sg P3) => "lividezca" ;
    VP (Pres Subj Pl P1) => "lividezcamos" ;
    VP (Pres Subj Pl P2) => "lividezcáis" ;
    VP (Pres Subj Pl P3) => "lividezcan" ;
    VP (Impf Ind Sg P1) => "lividecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "lividecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "lividecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "lividecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "lividecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "lividecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"livideciera" ; "livideciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"lividecieras" ; "lividecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"livideciera" ; "livideciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"livideciéramos" ; "livideciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"lividecierais" ; "lividecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"lividecieran" ; "livideciesen"} ;--# notpresent
    VP (Pret Sg P1) => "lividecí" ;--# notpresent
    VP (Pret Sg P2) => "livideciste" ;--# notpresent
    VP (Pret Sg P3) => "livideció" ;--# notpresent
    VP (Pret Pl P1) => "lividecimos" ;--# notpresent
    VP (Pret Pl P2) => "lividecisteis" ;--# notpresent
    VP (Pret Pl P3) => "lividecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "livideceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "lividecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "lividecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "livideceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "livideceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "lividecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "livideciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "lividecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "livideciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "livideciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "livideciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "lividecieren" ;--# notpresent
    VP (Cond Sg P1) => "lividecería" ;--# notpresent
    VP (Cond Sg P2) => "lividecerías" ;--# notpresent
    VP (Cond Sg P3) => "lividecería" ;--# notpresent
    VP (Cond Pl P1) => "livideceríamos" ;--# notpresent
    VP (Cond Pl P2) => "livideceríais" ;--# notpresent
    VP (Cond Pl P3) => "lividecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "lividece" ;
    VP (Imp Sg P3) => "lividezca" ;
    VP (Imp Pl P1) => "lividezcamos" ;
    VP (Imp Pl P2) => "livideced" ;
    VP (Imp Pl P3) => "lividezcan" ;
    VP (Pass Sg Masc) => "lividecido" ;
    VP (Pass Sg Fem) => "lividecida" ;
    VP (Pass Pl Masc) => "lividecidos" ;
    VP (Pass Pl Fem) => "lividecidas"
    }
  } ;

lin lobreguecer_V = verboV 
 {s = table {
    VI Infn => "lobreguecer" ;
    VI Ger => "lobregueciendo" ;
    VI Part => "lobreguecido" ;
    VP (Pres Ind Sg P1) => "lobreguezco" ;
    VP (Pres Ind Sg P2) => "lobregueces" ;
    VP (Pres Ind Sg P3) => "lobreguece" ;
    VP (Pres Ind Pl P1) => "lobreguecemos" ;
    VP (Pres Ind Pl P2) => "lobreguecéis" ;
    VP (Pres Ind Pl P3) => "lobreguecen" ;
    VP (Pres Subj Sg P1) => "lobreguezca" ;
    VP (Pres Subj Sg P2) => "lobreguezcas" ;
    VP (Pres Subj Sg P3) => "lobreguezca" ;
    VP (Pres Subj Pl P1) => "lobreguezcamos" ;
    VP (Pres Subj Pl P2) => "lobreguezcáis" ;
    VP (Pres Subj Pl P3) => "lobreguezcan" ;
    VP (Impf Ind Sg P1) => "lobreguecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "lobreguecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "lobreguecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "lobreguecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "lobreguecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "lobreguecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"lobregueciera" ; "lobregueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"lobreguecieras" ; "lobreguecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"lobregueciera" ; "lobregueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"lobregueciéramos" ; "lobregueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"lobreguecierais" ; "lobreguecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"lobreguecieran" ; "lobregueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "lobreguecí" ;--# notpresent
    VP (Pret Sg P2) => "lobregueciste" ;--# notpresent
    VP (Pret Sg P3) => "lobregueció" ;--# notpresent
    VP (Pret Pl P1) => "lobreguecimos" ;--# notpresent
    VP (Pret Pl P2) => "lobreguecisteis" ;--# notpresent
    VP (Pret Pl P3) => "lobreguecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "lobregueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "lobreguecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "lobreguecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "lobregueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "lobregueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "lobreguecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "lobregueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "lobreguecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "lobregueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "lobregueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "lobregueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "lobreguecieren" ;--# notpresent
    VP (Cond Sg P1) => "lobreguecería" ;--# notpresent
    VP (Cond Sg P2) => "lobreguecerías" ;--# notpresent
    VP (Cond Sg P3) => "lobreguecería" ;--# notpresent
    VP (Cond Pl P1) => "lobregueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "lobregueceríais" ;--# notpresent
    VP (Cond Pl P3) => "lobreguecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "lobreguece" ;
    VP (Imp Sg P3) => "lobreguezca" ;
    VP (Imp Pl P1) => "lobreguezcamos" ;
    VP (Imp Pl P2) => "lobregueced" ;
    VP (Imp Pl P3) => "lobreguezcan" ;
    VP (Pass Sg Masc) => "lobreguecido" ;
    VP (Pass Sg Fem) => "lobreguecida" ;
    VP (Pass Pl Masc) => "lobreguecidos" ;
    VP (Pass Pl Fem) => "lobreguecidas"
    }
  } ;

lin merecer_V = verboV 
 {s = table {
    VI Infn => "merecer" ;
    VI Ger => "mereciendo" ;
    VI Part => "merecido" ;
    VP (Pres Ind Sg P1) => "merezco" ;
    VP (Pres Ind Sg P2) => "mereces" ;
    VP (Pres Ind Sg P3) => "merece" ;
    VP (Pres Ind Pl P1) => "merecemos" ;
    VP (Pres Ind Pl P2) => "merecéis" ;
    VP (Pres Ind Pl P3) => "merecen" ;
    VP (Pres Subj Sg P1) => "merezca" ;
    VP (Pres Subj Sg P2) => "merezcas" ;
    VP (Pres Subj Sg P3) => "merezca" ;
    VP (Pres Subj Pl P1) => "merezcamos" ;
    VP (Pres Subj Pl P2) => "merezcáis" ;
    VP (Pres Subj Pl P3) => "merezcan" ;
    VP (Impf Ind Sg P1) => "merecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "merecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "merecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "merecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "merecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "merecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mereciera" ; "mereciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"merecieras" ; "merecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mereciera" ; "mereciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mereciéramos" ; "mereciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"merecierais" ; "merecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"merecieran" ; "mereciesen"} ;--# notpresent
    VP (Pret Sg P1) => "merecí" ;--# notpresent
    VP (Pret Sg P2) => "mereciste" ;--# notpresent
    VP (Pret Sg P3) => "mereció" ;--# notpresent
    VP (Pret Pl P1) => "merecimos" ;--# notpresent
    VP (Pret Pl P2) => "merecisteis" ;--# notpresent
    VP (Pret Pl P3) => "merecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mereceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "merecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "merecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "mereceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mereceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "merecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mereciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "merecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "mereciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "mereciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mereciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "merecieren" ;--# notpresent
    VP (Cond Sg P1) => "merecería" ;--# notpresent
    VP (Cond Sg P2) => "merecerías" ;--# notpresent
    VP (Cond Sg P3) => "merecería" ;--# notpresent
    VP (Cond Pl P1) => "mereceríamos" ;--# notpresent
    VP (Cond Pl P2) => "mereceríais" ;--# notpresent
    VP (Cond Pl P3) => "merecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "merece" ;
    VP (Imp Sg P3) => "merezca" ;
    VP (Imp Pl P1) => "merezcamos" ;
    VP (Imp Pl P2) => "mereced" ;
    VP (Imp Pl P3) => "merezcan" ;
    VP (Pass Sg Masc) => "merecido" ;
    VP (Pass Sg Fem) => "merecida" ;
    VP (Pass Pl Masc) => "merecidos" ;
    VP (Pass Pl Fem) => "merecidas"
    }
  } ;

lin mohecer_V = verboV 
 {s = table {
    VI Infn => "mohecer" ;
    VI Ger => "moheciendo" ;
    VI Part => "mohecido" ;
    VP (Pres Ind Sg P1) => "mohezco" ;
    VP (Pres Ind Sg P2) => "moheces" ;
    VP (Pres Ind Sg P3) => "mohece" ;
    VP (Pres Ind Pl P1) => "mohecemos" ;
    VP (Pres Ind Pl P2) => "mohecéis" ;
    VP (Pres Ind Pl P3) => "mohecen" ;
    VP (Pres Subj Sg P1) => "mohezca" ;
    VP (Pres Subj Sg P2) => "mohezcas" ;
    VP (Pres Subj Sg P3) => "mohezca" ;
    VP (Pres Subj Pl P1) => "mohezcamos" ;
    VP (Pres Subj Pl P2) => "mohezcáis" ;
    VP (Pres Subj Pl P3) => "mohezcan" ;
    VP (Impf Ind Sg P1) => "mohecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mohecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mohecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "mohecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mohecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mohecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"moheciera" ; "moheciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mohecieras" ; "mohecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"moheciera" ; "moheciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"moheciéramos" ; "moheciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mohecierais" ; "mohecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mohecieran" ; "moheciesen"} ;--# notpresent
    VP (Pret Sg P1) => "mohecí" ;--# notpresent
    VP (Pret Sg P2) => "moheciste" ;--# notpresent
    VP (Pret Sg P3) => "moheció" ;--# notpresent
    VP (Pret Pl P1) => "mohecimos" ;--# notpresent
    VP (Pret Pl P2) => "mohecisteis" ;--# notpresent
    VP (Pret Pl P3) => "mohecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "moheceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mohecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mohecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "moheceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "moheceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mohecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "moheciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mohecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "moheciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "moheciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "moheciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mohecieren" ;--# notpresent
    VP (Cond Sg P1) => "mohecería" ;--# notpresent
    VP (Cond Sg P2) => "mohecerías" ;--# notpresent
    VP (Cond Sg P3) => "mohecería" ;--# notpresent
    VP (Cond Pl P1) => "moheceríamos" ;--# notpresent
    VP (Cond Pl P2) => "moheceríais" ;--# notpresent
    VP (Cond Pl P3) => "mohecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mohece" ;
    VP (Imp Sg P3) => "mohezca" ;
    VP (Imp Pl P1) => "mohezcamos" ;
    VP (Imp Pl P2) => "moheced" ;
    VP (Imp Pl P3) => "mohezcan" ;
    VP (Pass Sg Masc) => "mohecido" ;
    VP (Pass Sg Fem) => "mohecida" ;
    VP (Pass Pl Masc) => "mohecidos" ;
    VP (Pass Pl Fem) => "mohecidas"
    }
  } ;

lin nacer_V = verboV 
 {s = table {
    VI Infn => "nacer" ;
    VI Ger => "naciendo" ;
    VI Part => "nacido" ;
    VP (Pres Ind Sg P1) => "nazco" ;
    VP (Pres Ind Sg P2) => "naces" ;
    VP (Pres Ind Sg P3) => "nace" ;
    VP (Pres Ind Pl P1) => "nacemos" ;
    VP (Pres Ind Pl P2) => "nacéis" ;
    VP (Pres Ind Pl P3) => "nacen" ;
    VP (Pres Subj Sg P1) => "nazca" ;
    VP (Pres Subj Sg P2) => "nazcas" ;
    VP (Pres Subj Sg P3) => "nazca" ;
    VP (Pres Subj Pl P1) => "nazcamos" ;
    VP (Pres Subj Pl P2) => "nazcáis" ;
    VP (Pres Subj Pl P3) => "nazcan" ;
    VP (Impf Ind Sg P1) => "nacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "nacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "nacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "nacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "nacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "nacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"naciera" ; "naciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"nacieras" ; "nacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"naciera" ; "naciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"naciéramos" ; "naciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"nacierais" ; "nacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"nacieran" ; "naciesen"} ;--# notpresent
    VP (Pret Sg P1) => "nací" ;--# notpresent
    VP (Pret Sg P2) => "naciste" ;--# notpresent
    VP (Pret Sg P3) => "nació" ;--# notpresent
    VP (Pret Pl P1) => "nacimos" ;--# notpresent
    VP (Pret Pl P2) => "nacisteis" ;--# notpresent
    VP (Pret Pl P3) => "nacieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "naceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "nacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "nacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "naceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "naceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "nacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "naciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "nacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "naciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "naciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "naciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "nacieren" ;--# notpresent
    VP (Cond Sg P1) => "nacería" ;--# notpresent
    VP (Cond Sg P2) => "nacerías" ;--# notpresent
    VP (Cond Sg P3) => "nacería" ;--# notpresent
    VP (Cond Pl P1) => "naceríamos" ;--# notpresent
    VP (Cond Pl P2) => "naceríais" ;--# notpresent
    VP (Cond Pl P3) => "nacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "nace" ;
    VP (Imp Sg P3) => "nazca" ;
    VP (Imp Pl P1) => "nazcamos" ;
    VP (Imp Pl P2) => "naced" ;
    VP (Imp Pl P3) => "nazcan" ;
    VP (Pass Sg Masc) => "nacido" ;
    VP (Pass Sg Fem) => "nacida" ;
    VP (Pass Pl Masc) => "nacidos" ;
    VP (Pass Pl Fem) => "nacidas"
    }
  } ;

lin negrecer_V = verboV 
 {s = table {
    VI Infn => "negrecer" ;
    VI Ger => "negreciendo" ;
    VI Part => "negrecido" ;
    VP (Pres Ind Sg P1) => "negrezco" ;
    VP (Pres Ind Sg P2) => "negreces" ;
    VP (Pres Ind Sg P3) => "negrece" ;
    VP (Pres Ind Pl P1) => "negrecemos" ;
    VP (Pres Ind Pl P2) => "negrecéis" ;
    VP (Pres Ind Pl P3) => "negrecen" ;
    VP (Pres Subj Sg P1) => "negrezca" ;
    VP (Pres Subj Sg P2) => "negrezcas" ;
    VP (Pres Subj Sg P3) => "negrezca" ;
    VP (Pres Subj Pl P1) => "negrezcamos" ;
    VP (Pres Subj Pl P2) => "negrezcáis" ;
    VP (Pres Subj Pl P3) => "negrezcan" ;
    VP (Impf Ind Sg P1) => "negrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "negrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "negrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "negrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "negrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "negrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"negreciera" ; "negreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"negrecieras" ; "negrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"negreciera" ; "negreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"negreciéramos" ; "negreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"negrecierais" ; "negrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"negrecieran" ; "negreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "negrecí" ;--# notpresent
    VP (Pret Sg P2) => "negreciste" ;--# notpresent
    VP (Pret Sg P3) => "negreció" ;--# notpresent
    VP (Pret Pl P1) => "negrecimos" ;--# notpresent
    VP (Pret Pl P2) => "negrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "negrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "negreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "negrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "negrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "negreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "negreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "negrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "negreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "negrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "negreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "negreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "negreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "negrecieren" ;--# notpresent
    VP (Cond Sg P1) => "negrecería" ;--# notpresent
    VP (Cond Sg P2) => "negrecerías" ;--# notpresent
    VP (Cond Sg P3) => "negrecería" ;--# notpresent
    VP (Cond Pl P1) => "negreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "negreceríais" ;--# notpresent
    VP (Cond Pl P3) => "negrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "negrece" ;
    VP (Imp Sg P3) => "negrezca" ;
    VP (Imp Pl P1) => "negrezcamos" ;
    VP (Imp Pl P2) => "negreced" ;
    VP (Imp Pl P3) => "negrezcan" ;
    VP (Pass Sg Masc) => "negrecido" ;
    VP (Pass Sg Fem) => "negrecida" ;
    VP (Pass Pl Masc) => "negrecidos" ;
    VP (Pass Pl Fem) => "negrecidas"
    }
  } ;

lin obedecer_V = verboV 
 {s = table {
    VI Infn => "obedecer" ;
    VI Ger => "obedeciendo" ;
    VI Part => "obedecido" ;
    VP (Pres Ind Sg P1) => "obedezco" ;
    VP (Pres Ind Sg P2) => "obedeces" ;
    VP (Pres Ind Sg P3) => "obedece" ;
    VP (Pres Ind Pl P1) => "obedecemos" ;
    VP (Pres Ind Pl P2) => "obedecéis" ;
    VP (Pres Ind Pl P3) => "obedecen" ;
    VP (Pres Subj Sg P1) => "obedezca" ;
    VP (Pres Subj Sg P2) => "obedezcas" ;
    VP (Pres Subj Sg P3) => "obedezca" ;
    VP (Pres Subj Pl P1) => "obedezcamos" ;
    VP (Pres Subj Pl P2) => "obedezcáis" ;
    VP (Pres Subj Pl P3) => "obedezcan" ;
    VP (Impf Ind Sg P1) => "obedecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "obedecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "obedecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "obedecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "obedecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "obedecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"obedeciera" ; "obedeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"obedecieras" ; "obedecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"obedeciera" ; "obedeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"obedeciéramos" ; "obedeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"obedecierais" ; "obedecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"obedecieran" ; "obedeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "obedecí" ;--# notpresent
    VP (Pret Sg P2) => "obedeciste" ;--# notpresent
    VP (Pret Sg P3) => "obedeció" ;--# notpresent
    VP (Pret Pl P1) => "obedecimos" ;--# notpresent
    VP (Pret Pl P2) => "obedecisteis" ;--# notpresent
    VP (Pret Pl P3) => "obedecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "obedeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "obedecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "obedecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "obedeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "obedeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "obedecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "obedeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "obedecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "obedeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "obedeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "obedeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "obedecieren" ;--# notpresent
    VP (Cond Sg P1) => "obedecería" ;--# notpresent
    VP (Cond Sg P2) => "obedecerías" ;--# notpresent
    VP (Cond Sg P3) => "obedecería" ;--# notpresent
    VP (Cond Pl P1) => "obedeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "obedeceríais" ;--# notpresent
    VP (Cond Pl P3) => "obedecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "obedece" ;
    VP (Imp Sg P3) => "obedezca" ;
    VP (Imp Pl P1) => "obedezcamos" ;
    VP (Imp Pl P2) => "obedeced" ;
    VP (Imp Pl P3) => "obedezcan" ;
    VP (Pass Sg Masc) => "obedecido" ;
    VP (Pass Sg Fem) => "obedecida" ;
    VP (Pass Pl Masc) => "obedecidos" ;
    VP (Pass Pl Fem) => "obedecidas"
    }
  } ;

lin obscurecer_V = verboV 
 {s = table {
    VI Infn => "obscurecer" ;
    VI Ger => "obscureciendo" ;
    VI Part => "obscurecido" ;
    VP (Pres Ind Sg P1) => "obscurezco" ;
    VP (Pres Ind Sg P2) => "obscureces" ;
    VP (Pres Ind Sg P3) => "obscurece" ;
    VP (Pres Ind Pl P1) => "obscurecemos" ;
    VP (Pres Ind Pl P2) => "obscurecéis" ;
    VP (Pres Ind Pl P3) => "obscurecen" ;
    VP (Pres Subj Sg P1) => "obscurezca" ;
    VP (Pres Subj Sg P2) => "obscurezcas" ;
    VP (Pres Subj Sg P3) => "obscurezca" ;
    VP (Pres Subj Pl P1) => "obscurezcamos" ;
    VP (Pres Subj Pl P2) => "obscurezcáis" ;
    VP (Pres Subj Pl P3) => "obscurezcan" ;
    VP (Impf Ind Sg P1) => "obscurecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "obscurecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "obscurecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "obscurecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "obscurecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "obscurecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"obscureciera" ; "obscureciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"obscurecieras" ; "obscurecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"obscureciera" ; "obscureciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"obscureciéramos" ; "obscureciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"obscurecierais" ; "obscurecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"obscurecieran" ; "obscureciesen"} ;--# notpresent
    VP (Pret Sg P1) => "obscurecí" ;--# notpresent
    VP (Pret Sg P2) => "obscureciste" ;--# notpresent
    VP (Pret Sg P3) => "obscureció" ;--# notpresent
    VP (Pret Pl P1) => "obscurecimos" ;--# notpresent
    VP (Pret Pl P2) => "obscurecisteis" ;--# notpresent
    VP (Pret Pl P3) => "obscurecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "obscureceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "obscurecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "obscurecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "obscureceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "obscureceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "obscurecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "obscureciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "obscurecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "obscureciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "obscureciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "obscureciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "obscurecieren" ;--# notpresent
    VP (Cond Sg P1) => "obscurecería" ;--# notpresent
    VP (Cond Sg P2) => "obscurecerías" ;--# notpresent
    VP (Cond Sg P3) => "obscurecería" ;--# notpresent
    VP (Cond Pl P1) => "obscureceríamos" ;--# notpresent
    VP (Cond Pl P2) => "obscureceríais" ;--# notpresent
    VP (Cond Pl P3) => "obscurecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "obscurece" ;
    VP (Imp Sg P3) => "obscurezca" ;
    VP (Imp Pl P1) => "obscurezcamos" ;
    VP (Imp Pl P2) => "obscureced" ;
    VP (Imp Pl P3) => "obscurezcan" ;
    VP (Pass Sg Masc) => "obscurecido" ;
    VP (Pass Sg Fem) => "obscurecida" ;
    VP (Pass Pl Masc) => "obscurecidos" ;
    VP (Pass Pl Fem) => "obscurecidas"
    }
  } ;

lin ofrecer_V = verboV 
 {s = table {
    VI Infn => "ofrecer" ;
    VI Ger => "ofreciendo" ;
    VI Part => "ofrecido" ;
    VP (Pres Ind Sg P1) => "ofrezco" ;
    VP (Pres Ind Sg P2) => "ofreces" ;
    VP (Pres Ind Sg P3) => "ofrece" ;
    VP (Pres Ind Pl P1) => "ofrecemos" ;
    VP (Pres Ind Pl P2) => "ofrecéis" ;
    VP (Pres Ind Pl P3) => "ofrecen" ;
    VP (Pres Subj Sg P1) => "ofrezca" ;
    VP (Pres Subj Sg P2) => "ofrezcas" ;
    VP (Pres Subj Sg P3) => "ofrezca" ;
    VP (Pres Subj Pl P1) => "ofrezcamos" ;
    VP (Pres Subj Pl P2) => "ofrezcáis" ;
    VP (Pres Subj Pl P3) => "ofrezcan" ;
    VP (Impf Ind Sg P1) => "ofrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ofrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ofrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ofrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ofrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ofrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ofreciera" ; "ofreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ofrecieras" ; "ofrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ofreciera" ; "ofreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ofreciéramos" ; "ofreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ofrecierais" ; "ofrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ofrecieran" ; "ofreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ofrecí" ;--# notpresent
    VP (Pret Sg P2) => "ofreciste" ;--# notpresent
    VP (Pret Sg P3) => "ofreció" ;--# notpresent
    VP (Pret Pl P1) => "ofrecimos" ;--# notpresent
    VP (Pret Pl P2) => "ofrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ofrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ofreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ofrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ofrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ofreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ofreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ofrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ofreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ofrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ofreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ofreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ofreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ofrecieren" ;--# notpresent
    VP (Cond Sg P1) => "ofrecería" ;--# notpresent
    VP (Cond Sg P2) => "ofrecerías" ;--# notpresent
    VP (Cond Sg P3) => "ofrecería" ;--# notpresent
    VP (Cond Pl P1) => "ofreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ofreceríais" ;--# notpresent
    VP (Cond Pl P3) => "ofrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ofrece" ;
    VP (Imp Sg P3) => "ofrezca" ;
    VP (Imp Pl P1) => "ofrezcamos" ;
    VP (Imp Pl P2) => "ofreced" ;
    VP (Imp Pl P3) => "ofrezcan" ;
    VP (Pass Sg Masc) => "ofrecido" ;
    VP (Pass Sg Fem) => "ofrecida" ;
    VP (Pass Pl Masc) => "ofrecidos" ;
    VP (Pass Pl Fem) => "ofrecidas"
    }
  } ;

lin oscurecer_V = verboV 
 {s = table {
    VI Infn => "oscurecer" ;
    VI Ger => "oscureciendo" ;
    VI Part => "oscurecido" ;
    VP (Pres Ind Sg P1) => "oscurezco" ;
    VP (Pres Ind Sg P2) => "oscureces" ;
    VP (Pres Ind Sg P3) => "oscurece" ;
    VP (Pres Ind Pl P1) => "oscurecemos" ;
    VP (Pres Ind Pl P2) => "oscurecéis" ;
    VP (Pres Ind Pl P3) => "oscurecen" ;
    VP (Pres Subj Sg P1) => "oscurezca" ;
    VP (Pres Subj Sg P2) => "oscurezcas" ;
    VP (Pres Subj Sg P3) => "oscurezca" ;
    VP (Pres Subj Pl P1) => "oscurezcamos" ;
    VP (Pres Subj Pl P2) => "oscurezcáis" ;
    VP (Pres Subj Pl P3) => "oscurezcan" ;
    VP (Impf Ind Sg P1) => "oscurecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "oscurecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "oscurecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "oscurecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "oscurecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "oscurecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"oscureciera" ; "oscureciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"oscurecieras" ; "oscurecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"oscureciera" ; "oscureciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"oscureciéramos" ; "oscureciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"oscurecierais" ; "oscurecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"oscurecieran" ; "oscureciesen"} ;--# notpresent
    VP (Pret Sg P1) => "oscurecí" ;--# notpresent
    VP (Pret Sg P2) => "oscureciste" ;--# notpresent
    VP (Pret Sg P3) => "oscureció" ;--# notpresent
    VP (Pret Pl P1) => "oscurecimos" ;--# notpresent
    VP (Pret Pl P2) => "oscurecisteis" ;--# notpresent
    VP (Pret Pl P3) => "oscurecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "oscureceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "oscurecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "oscurecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "oscureceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "oscureceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "oscurecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "oscureciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "oscurecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "oscureciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "oscureciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "oscureciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "oscurecieren" ;--# notpresent
    VP (Cond Sg P1) => "oscurecería" ;--# notpresent
    VP (Cond Sg P2) => "oscurecerías" ;--# notpresent
    VP (Cond Sg P3) => "oscurecería" ;--# notpresent
    VP (Cond Pl P1) => "oscureceríamos" ;--# notpresent
    VP (Cond Pl P2) => "oscureceríais" ;--# notpresent
    VP (Cond Pl P3) => "oscurecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "oscurece" ;
    VP (Imp Sg P3) => "oscurezca" ;
    VP (Imp Pl P1) => "oscurezcamos" ;
    VP (Imp Pl P2) => "oscureced" ;
    VP (Imp Pl P3) => "oscurezcan" ;
    VP (Pass Sg Masc) => "oscurecido" ;
    VP (Pass Sg Fem) => "oscurecida" ;
    VP (Pass Pl Masc) => "oscurecidos" ;
    VP (Pass Pl Fem) => "oscurecidas"
    }
  } ;

lin pacer_V = verboV 
 {s = table {
    VI Infn => "pacer" ;
    VI Ger => "paciendo" ;
    VI Part => "pacido" ;
    VP (Pres Ind Sg P1) => "pazco" ;
    VP (Pres Ind Sg P2) => "paces" ;
    VP (Pres Ind Sg P3) => "pace" ;
    VP (Pres Ind Pl P1) => "pacemos" ;
    VP (Pres Ind Pl P2) => "pacéis" ;
    VP (Pres Ind Pl P3) => "pacen" ;
    VP (Pres Subj Sg P1) => "pazca" ;
    VP (Pres Subj Sg P2) => "pazcas" ;
    VP (Pres Subj Sg P3) => "pazca" ;
    VP (Pres Subj Pl P1) => "pazcamos" ;
    VP (Pres Subj Pl P2) => "pazcáis" ;
    VP (Pres Subj Pl P3) => "pazcan" ;
    VP (Impf Ind Sg P1) => "pacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "pacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "pacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"paciera" ; "paciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pacieras" ; "pacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"paciera" ; "paciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"paciéramos" ; "paciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pacierais" ; "pacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pacieran" ; "paciesen"} ;--# notpresent
    VP (Pret Sg P1) => "pací" ;--# notpresent
    VP (Pret Sg P2) => "paciste" ;--# notpresent
    VP (Pret Sg P3) => "pació" ;--# notpresent
    VP (Pret Pl P1) => "pacimos" ;--# notpresent
    VP (Pret Pl P2) => "pacisteis" ;--# notpresent
    VP (Pret Pl P3) => "pacieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "paceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "paceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "paceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "paciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "paciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "paciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "paciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pacieren" ;--# notpresent
    VP (Cond Sg P1) => "pacería" ;--# notpresent
    VP (Cond Sg P2) => "pacerías" ;--# notpresent
    VP (Cond Sg P3) => "pacería" ;--# notpresent
    VP (Cond Pl P1) => "paceríamos" ;--# notpresent
    VP (Cond Pl P2) => "paceríais" ;--# notpresent
    VP (Cond Pl P3) => "pacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pace" ;
    VP (Imp Sg P3) => "pazca" ;
    VP (Imp Pl P1) => "pazcamos" ;
    VP (Imp Pl P2) => "paced" ;
    VP (Imp Pl P3) => "pazcan" ;
    VP (Pass Sg Masc) => "pacido" ;
    VP (Pass Sg Fem) => "pacida" ;
    VP (Pass Pl Masc) => "pacidos" ;
    VP (Pass Pl Fem) => "pacidas"
    }
  } ;

lin padecer_V = verboV 
 {s = table {
    VI Infn => "padecer" ;
    VI Ger => "padeciendo" ;
    VI Part => "padecido" ;
    VP (Pres Ind Sg P1) => "padezco" ;
    VP (Pres Ind Sg P2) => "padeces" ;
    VP (Pres Ind Sg P3) => "padece" ;
    VP (Pres Ind Pl P1) => "padecemos" ;
    VP (Pres Ind Pl P2) => "padecéis" ;
    VP (Pres Ind Pl P3) => "padecen" ;
    VP (Pres Subj Sg P1) => "padezca" ;
    VP (Pres Subj Sg P2) => "padezcas" ;
    VP (Pres Subj Sg P3) => "padezca" ;
    VP (Pres Subj Pl P1) => "padezcamos" ;
    VP (Pres Subj Pl P2) => "padezcáis" ;
    VP (Pres Subj Pl P3) => "padezcan" ;
    VP (Impf Ind Sg P1) => "padecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "padecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "padecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "padecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "padecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "padecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"padeciera" ; "padeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"padecieras" ; "padecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"padeciera" ; "padeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"padeciéramos" ; "padeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"padecierais" ; "padecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"padecieran" ; "padeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "padecí" ;--# notpresent
    VP (Pret Sg P2) => "padeciste" ;--# notpresent
    VP (Pret Sg P3) => "padeció" ;--# notpresent
    VP (Pret Pl P1) => "padecimos" ;--# notpresent
    VP (Pret Pl P2) => "padecisteis" ;--# notpresent
    VP (Pret Pl P3) => "padecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "padeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "padecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "padecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "padeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "padeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "padecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "padeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "padecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "padeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "padeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "padeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "padecieren" ;--# notpresent
    VP (Cond Sg P1) => "padecería" ;--# notpresent
    VP (Cond Sg P2) => "padecerías" ;--# notpresent
    VP (Cond Sg P3) => "padecería" ;--# notpresent
    VP (Cond Pl P1) => "padeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "padeceríais" ;--# notpresent
    VP (Cond Pl P3) => "padecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "padece" ;
    VP (Imp Sg P3) => "padezca" ;
    VP (Imp Pl P1) => "padezcamos" ;
    VP (Imp Pl P2) => "padeced" ;
    VP (Imp Pl P3) => "padezcan" ;
    VP (Pass Sg Masc) => "padecido" ;
    VP (Pass Sg Fem) => "padecida" ;
    VP (Pass Pl Masc) => "padecidos" ;
    VP (Pass Pl Fem) => "padecidas"
    }
  } ;

lin palidecer_V = verboV 
 {s = table {
    VI Infn => "palidecer" ;
    VI Ger => "palideciendo" ;
    VI Part => "palidecido" ;
    VP (Pres Ind Sg P1) => "palidezco" ;
    VP (Pres Ind Sg P2) => "palideces" ;
    VP (Pres Ind Sg P3) => "palidece" ;
    VP (Pres Ind Pl P1) => "palidecemos" ;
    VP (Pres Ind Pl P2) => "palidecéis" ;
    VP (Pres Ind Pl P3) => "palidecen" ;
    VP (Pres Subj Sg P1) => "palidezca" ;
    VP (Pres Subj Sg P2) => "palidezcas" ;
    VP (Pres Subj Sg P3) => "palidezca" ;
    VP (Pres Subj Pl P1) => "palidezcamos" ;
    VP (Pres Subj Pl P2) => "palidezcáis" ;
    VP (Pres Subj Pl P3) => "palidezcan" ;
    VP (Impf Ind Sg P1) => "palidecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "palidecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "palidecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "palidecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "palidecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "palidecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"palideciera" ; "palideciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"palidecieras" ; "palidecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"palideciera" ; "palideciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"palideciéramos" ; "palideciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"palidecierais" ; "palidecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"palidecieran" ; "palideciesen"} ;--# notpresent
    VP (Pret Sg P1) => "palidecí" ;--# notpresent
    VP (Pret Sg P2) => "palideciste" ;--# notpresent
    VP (Pret Sg P3) => "palideció" ;--# notpresent
    VP (Pret Pl P1) => "palidecimos" ;--# notpresent
    VP (Pret Pl P2) => "palidecisteis" ;--# notpresent
    VP (Pret Pl P3) => "palidecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "palideceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "palidecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "palidecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "palideceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "palideceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "palidecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "palideciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "palidecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "palideciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "palideciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "palideciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "palidecieren" ;--# notpresent
    VP (Cond Sg P1) => "palidecería" ;--# notpresent
    VP (Cond Sg P2) => "palidecerías" ;--# notpresent
    VP (Cond Sg P3) => "palidecería" ;--# notpresent
    VP (Cond Pl P1) => "palideceríamos" ;--# notpresent
    VP (Cond Pl P2) => "palideceríais" ;--# notpresent
    VP (Cond Pl P3) => "palidecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "palidece" ;
    VP (Imp Sg P3) => "palidezca" ;
    VP (Imp Pl P1) => "palidezcamos" ;
    VP (Imp Pl P2) => "palideced" ;
    VP (Imp Pl P3) => "palidezcan" ;
    VP (Pass Sg Masc) => "palidecido" ;
    VP (Pass Sg Fem) => "palidecida" ;
    VP (Pass Pl Masc) => "palidecidos" ;
    VP (Pass Pl Fem) => "palidecidas"
    }
  } ;

lin parecer_V = verboV 
 {s = table {
    VI Infn => "parecer" ;
    VI Ger => "pareciendo" ;
    VI Part => "parecido" ;
    VP (Pres Ind Sg P1) => "parezco" ;
    VP (Pres Ind Sg P2) => "pareces" ;
    VP (Pres Ind Sg P3) => "parece" ;
    VP (Pres Ind Pl P1) => "parecemos" ;
    VP (Pres Ind Pl P2) => "parecéis" ;
    VP (Pres Ind Pl P3) => "parecen" ;
    VP (Pres Subj Sg P1) => "parezca" ;
    VP (Pres Subj Sg P2) => "parezcas" ;
    VP (Pres Subj Sg P3) => "parezca" ;
    VP (Pres Subj Pl P1) => "parezcamos" ;
    VP (Pres Subj Pl P2) => "parezcáis" ;
    VP (Pres Subj Pl P3) => "parezcan" ;
    VP (Impf Ind Sg P1) => "parecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "parecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "parecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "parecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "parecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "parecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pareciera" ; "pareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"parecieras" ; "parecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pareciera" ; "pareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pareciéramos" ; "pareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"parecierais" ; "parecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"parecieran" ; "pareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "parecí" ;--# notpresent
    VP (Pret Sg P2) => "pareciste" ;--# notpresent
    VP (Pret Sg P3) => "pareció" ;--# notpresent
    VP (Pret Pl P1) => "parecimos" ;--# notpresent
    VP (Pret Pl P2) => "parecisteis" ;--# notpresent
    VP (Pret Pl P3) => "parecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "parecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "parecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "parecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "parecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "parecieren" ;--# notpresent
    VP (Cond Sg P1) => "parecería" ;--# notpresent
    VP (Cond Sg P2) => "parecerías" ;--# notpresent
    VP (Cond Sg P3) => "parecería" ;--# notpresent
    VP (Cond Pl P1) => "pareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "pareceríais" ;--# notpresent
    VP (Cond Pl P3) => "parecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "parece" ;
    VP (Imp Sg P3) => "parezca" ;
    VP (Imp Pl P1) => "parezcamos" ;
    VP (Imp Pl P2) => "pareced" ;
    VP (Imp Pl P3) => "parezcan" ;
    VP (Pass Sg Masc) => "parecido" ;
    VP (Pass Sg Fem) => "parecida" ;
    VP (Pass Pl Masc) => "parecidos" ;
    VP (Pass Pl Fem) => "parecidas"
    }
  } ;

lin perecer_V = verboV 
 {s = table {
    VI Infn => "perecer" ;
    VI Ger => "pereciendo" ;
    VI Part => "perecido" ;
    VP (Pres Ind Sg P1) => "perezco" ;
    VP (Pres Ind Sg P2) => "pereces" ;
    VP (Pres Ind Sg P3) => "perece" ;
    VP (Pres Ind Pl P1) => "perecemos" ;
    VP (Pres Ind Pl P2) => "perecéis" ;
    VP (Pres Ind Pl P3) => "perecen" ;
    VP (Pres Subj Sg P1) => "perezca" ;
    VP (Pres Subj Sg P2) => "perezcas" ;
    VP (Pres Subj Sg P3) => "perezca" ;
    VP (Pres Subj Pl P1) => "perezcamos" ;
    VP (Pres Subj Pl P2) => "perezcáis" ;
    VP (Pres Subj Pl P3) => "perezcan" ;
    VP (Impf Ind Sg P1) => "perecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "perecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "perecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "perecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "perecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "perecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pereciera" ; "pereciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"perecieras" ; "perecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pereciera" ; "pereciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pereciéramos" ; "pereciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"perecierais" ; "perecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"perecieran" ; "pereciesen"} ;--# notpresent
    VP (Pret Sg P1) => "perecí" ;--# notpresent
    VP (Pret Sg P2) => "pereciste" ;--# notpresent
    VP (Pret Sg P3) => "pereció" ;--# notpresent
    VP (Pret Pl P1) => "perecimos" ;--# notpresent
    VP (Pret Pl P2) => "perecisteis" ;--# notpresent
    VP (Pret Pl P3) => "perecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pereceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "perecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "perecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pereceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pereceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "perecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pereciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "perecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pereciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pereciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pereciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "perecieren" ;--# notpresent
    VP (Cond Sg P1) => "perecería" ;--# notpresent
    VP (Cond Sg P2) => "perecerías" ;--# notpresent
    VP (Cond Sg P3) => "perecería" ;--# notpresent
    VP (Cond Pl P1) => "pereceríamos" ;--# notpresent
    VP (Cond Pl P2) => "pereceríais" ;--# notpresent
    VP (Cond Pl P3) => "perecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "perece" ;
    VP (Imp Sg P3) => "perezca" ;
    VP (Imp Pl P1) => "perezcamos" ;
    VP (Imp Pl P2) => "pereced" ;
    VP (Imp Pl P3) => "perezcan" ;
    VP (Pass Sg Masc) => "perecido" ;
    VP (Pass Sg Fem) => "perecida" ;
    VP (Pass Pl Masc) => "perecidos" ;
    VP (Pass Pl Fem) => "perecidas"
    }
  } ;

lin permanecer_V = verboV 
 {s = table {
    VI Infn => "permanecer" ;
    VI Ger => "permaneciendo" ;
    VI Part => "permanecido" ;
    VP (Pres Ind Sg P1) => "permanezco" ;
    VP (Pres Ind Sg P2) => "permaneces" ;
    VP (Pres Ind Sg P3) => "permanece" ;
    VP (Pres Ind Pl P1) => "permanecemos" ;
    VP (Pres Ind Pl P2) => "permanecéis" ;
    VP (Pres Ind Pl P3) => "permanecen" ;
    VP (Pres Subj Sg P1) => "permanezca" ;
    VP (Pres Subj Sg P2) => "permanezcas" ;
    VP (Pres Subj Sg P3) => "permanezca" ;
    VP (Pres Subj Pl P1) => "permanezcamos" ;
    VP (Pres Subj Pl P2) => "permanezcáis" ;
    VP (Pres Subj Pl P3) => "permanezcan" ;
    VP (Impf Ind Sg P1) => "permanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "permanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "permanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "permanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "permanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "permanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"permaneciera" ; "permaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"permanecieras" ; "permanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"permaneciera" ; "permaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"permaneciéramos" ; "permaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"permanecierais" ; "permanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"permanecieran" ; "permaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "permanecí" ;--# notpresent
    VP (Pret Sg P2) => "permaneciste" ;--# notpresent
    VP (Pret Sg P3) => "permaneció" ;--# notpresent
    VP (Pret Pl P1) => "permanecimos" ;--# notpresent
    VP (Pret Pl P2) => "permanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "permanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "permaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "permanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "permanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "permaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "permaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "permanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "permaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "permanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "permaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "permaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "permaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "permanecieren" ;--# notpresent
    VP (Cond Sg P1) => "permanecería" ;--# notpresent
    VP (Cond Sg P2) => "permanecerías" ;--# notpresent
    VP (Cond Sg P3) => "permanecería" ;--# notpresent
    VP (Cond Pl P1) => "permaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "permaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "permanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "permanece" ;
    VP (Imp Sg P3) => "permanezca" ;
    VP (Imp Pl P1) => "permanezcamos" ;
    VP (Imp Pl P2) => "permaneced" ;
    VP (Imp Pl P3) => "permanezcan" ;
    VP (Pass Sg Masc) => "permanecido" ;
    VP (Pass Sg Fem) => "permanecida" ;
    VP (Pass Pl Masc) => "permanecidos" ;
    VP (Pass Pl Fem) => "permanecidas"
    }
  } ;

lin pertenecer_V = verboV 
 {s = table {
    VI Infn => "pertenecer" ;
    VI Ger => "perteneciendo" ;
    VI Part => "pertenecido" ;
    VP (Pres Ind Sg P1) => "pertenezco" ;
    VP (Pres Ind Sg P2) => "perteneces" ;
    VP (Pres Ind Sg P3) => "pertenece" ;
    VP (Pres Ind Pl P1) => "pertenecemos" ;
    VP (Pres Ind Pl P2) => "pertenecéis" ;
    VP (Pres Ind Pl P3) => "pertenecen" ;
    VP (Pres Subj Sg P1) => "pertenezca" ;
    VP (Pres Subj Sg P2) => "pertenezcas" ;
    VP (Pres Subj Sg P3) => "pertenezca" ;
    VP (Pres Subj Pl P1) => "pertenezcamos" ;
    VP (Pres Subj Pl P2) => "pertenezcáis" ;
    VP (Pres Subj Pl P3) => "pertenezcan" ;
    VP (Impf Ind Sg P1) => "pertenecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "pertenecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pertenecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "pertenecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pertenecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pertenecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"perteneciera" ; "perteneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pertenecieras" ; "pertenecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"perteneciera" ; "perteneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"perteneciéramos" ; "perteneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pertenecierais" ; "pertenecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pertenecieran" ; "perteneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "pertenecí" ;--# notpresent
    VP (Pret Sg P2) => "perteneciste" ;--# notpresent
    VP (Pret Sg P3) => "perteneció" ;--# notpresent
    VP (Pret Pl P1) => "pertenecimos" ;--# notpresent
    VP (Pret Pl P2) => "pertenecisteis" ;--# notpresent
    VP (Pret Pl P3) => "pertenecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "perteneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pertenecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pertenecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "perteneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "perteneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pertenecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "perteneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pertenecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "perteneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "perteneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "perteneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pertenecieren" ;--# notpresent
    VP (Cond Sg P1) => "pertenecería" ;--# notpresent
    VP (Cond Sg P2) => "pertenecerías" ;--# notpresent
    VP (Cond Sg P3) => "pertenecería" ;--# notpresent
    VP (Cond Pl P1) => "perteneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "perteneceríais" ;--# notpresent
    VP (Cond Pl P3) => "pertenecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pertenece" ;
    VP (Imp Sg P3) => "pertenezca" ;
    VP (Imp Pl P1) => "pertenezcamos" ;
    VP (Imp Pl P2) => "perteneced" ;
    VP (Imp Pl P3) => "pertenezcan" ;
    VP (Pass Sg Masc) => "pertenecido" ;
    VP (Pass Sg Fem) => "pertenecida" ;
    VP (Pass Pl Masc) => "pertenecidos" ;
    VP (Pass Pl Fem) => "pertenecidas"
    }
  } ;

lin pimpollecer_V = verboV 
 {s = table {
    VI Infn => "pimpollecer" ;
    VI Ger => "pimpolleciendo" ;
    VI Part => "pimpollecido" ;
    VP (Pres Ind Sg P1) => "pimpollezco" ;
    VP (Pres Ind Sg P2) => "pimpolleces" ;
    VP (Pres Ind Sg P3) => "pimpollece" ;
    VP (Pres Ind Pl P1) => "pimpollecemos" ;
    VP (Pres Ind Pl P2) => "pimpollecéis" ;
    VP (Pres Ind Pl P3) => "pimpollecen" ;
    VP (Pres Subj Sg P1) => "pimpollezca" ;
    VP (Pres Subj Sg P2) => "pimpollezcas" ;
    VP (Pres Subj Sg P3) => "pimpollezca" ;
    VP (Pres Subj Pl P1) => "pimpollezcamos" ;
    VP (Pres Subj Pl P2) => "pimpollezcáis" ;
    VP (Pres Subj Pl P3) => "pimpollezcan" ;
    VP (Impf Ind Sg P1) => "pimpollecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "pimpollecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pimpollecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "pimpollecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pimpollecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pimpollecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pimpolleciera" ; "pimpolleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pimpollecieras" ; "pimpollecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pimpolleciera" ; "pimpolleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pimpolleciéramos" ; "pimpolleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pimpollecierais" ; "pimpollecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pimpollecieran" ; "pimpolleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "pimpollecí" ;--# notpresent
    VP (Pret Sg P2) => "pimpolleciste" ;--# notpresent
    VP (Pret Sg P3) => "pimpolleció" ;--# notpresent
    VP (Pret Pl P1) => "pimpollecimos" ;--# notpresent
    VP (Pret Pl P2) => "pimpollecisteis" ;--# notpresent
    VP (Pret Pl P3) => "pimpollecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pimpolleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pimpollecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pimpollecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pimpolleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pimpolleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pimpollecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pimpolleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pimpollecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pimpolleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pimpolleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pimpolleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pimpollecieren" ;--# notpresent
    VP (Cond Sg P1) => "pimpollecería" ;--# notpresent
    VP (Cond Sg P2) => "pimpollecerías" ;--# notpresent
    VP (Cond Sg P3) => "pimpollecería" ;--# notpresent
    VP (Cond Pl P1) => "pimpolleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "pimpolleceríais" ;--# notpresent
    VP (Cond Pl P3) => "pimpollecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pimpollece" ;
    VP (Imp Sg P3) => "pimpollezca" ;
    VP (Imp Pl P1) => "pimpollezcamos" ;
    VP (Imp Pl P2) => "pimpolleced" ;
    VP (Imp Pl P3) => "pimpollezcan" ;
    VP (Pass Sg Masc) => "pimpollecido" ;
    VP (Pass Sg Fem) => "pimpollecida" ;
    VP (Pass Pl Masc) => "pimpollecidos" ;
    VP (Pass Pl Fem) => "pimpollecidas"
    }
  } ;

lin plastecer_V = verboV 
 {s = table {
    VI Infn => "plastecer" ;
    VI Ger => "plasteciendo" ;
    VI Part => "plastecido" ;
    VP (Pres Ind Sg P1) => "plastezco" ;
    VP (Pres Ind Sg P2) => "plasteces" ;
    VP (Pres Ind Sg P3) => "plastece" ;
    VP (Pres Ind Pl P1) => "plastecemos" ;
    VP (Pres Ind Pl P2) => "plastecéis" ;
    VP (Pres Ind Pl P3) => "plastecen" ;
    VP (Pres Subj Sg P1) => "plastezca" ;
    VP (Pres Subj Sg P2) => "plastezcas" ;
    VP (Pres Subj Sg P3) => "plastezca" ;
    VP (Pres Subj Pl P1) => "plastezcamos" ;
    VP (Pres Subj Pl P2) => "plastezcáis" ;
    VP (Pres Subj Pl P3) => "plastezcan" ;
    VP (Impf Ind Sg P1) => "plastecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "plastecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "plastecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "plastecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "plastecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "plastecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"plasteciera" ; "plasteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"plastecieras" ; "plastecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"plasteciera" ; "plasteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"plasteciéramos" ; "plasteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"plastecierais" ; "plastecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"plastecieran" ; "plasteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "plastecí" ;--# notpresent
    VP (Pret Sg P2) => "plasteciste" ;--# notpresent
    VP (Pret Sg P3) => "plasteció" ;--# notpresent
    VP (Pret Pl P1) => "plastecimos" ;--# notpresent
    VP (Pret Pl P2) => "plastecisteis" ;--# notpresent
    VP (Pret Pl P3) => "plastecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "plasteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "plastecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "plastecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "plasteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "plasteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "plastecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "plasteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "plastecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "plasteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "plasteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "plasteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "plastecieren" ;--# notpresent
    VP (Cond Sg P1) => "plastecería" ;--# notpresent
    VP (Cond Sg P2) => "plastecerías" ;--# notpresent
    VP (Cond Sg P3) => "plastecería" ;--# notpresent
    VP (Cond Pl P1) => "plasteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "plasteceríais" ;--# notpresent
    VP (Cond Pl P3) => "plastecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "plastece" ;
    VP (Imp Sg P3) => "plastezca" ;
    VP (Imp Pl P1) => "plastezcamos" ;
    VP (Imp Pl P2) => "plasteced" ;
    VP (Imp Pl P3) => "plastezcan" ;
    VP (Pass Sg Masc) => "plastecido" ;
    VP (Pass Sg Fem) => "plastecida" ;
    VP (Pass Pl Masc) => "plastecidos" ;
    VP (Pass Pl Fem) => "plastecidas"
    }
  } ;

lin preestablecer_V = verboV 
 {s = table {
    VI Infn => "preestablecer" ;
    VI Ger => "preestableciendo" ;
    VI Part => "preestablecido" ;
    VP (Pres Ind Sg P1) => "preestablezco" ;
    VP (Pres Ind Sg P2) => "preestableces" ;
    VP (Pres Ind Sg P3) => "preestablece" ;
    VP (Pres Ind Pl P1) => "preestablecemos" ;
    VP (Pres Ind Pl P2) => "preestablecéis" ;
    VP (Pres Ind Pl P3) => "preestablecen" ;
    VP (Pres Subj Sg P1) => "preestablezca" ;
    VP (Pres Subj Sg P2) => "preestablezcas" ;
    VP (Pres Subj Sg P3) => "preestablezca" ;
    VP (Pres Subj Pl P1) => "preestablezcamos" ;
    VP (Pres Subj Pl P2) => "preestablezcáis" ;
    VP (Pres Subj Pl P3) => "preestablezcan" ;
    VP (Impf Ind Sg P1) => "preestablecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "preestablecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "preestablecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preestablecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preestablecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preestablecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"preestableciera" ; "preestableciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"preestablecieras" ; "preestablecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"preestableciera" ; "preestableciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"preestableciéramos" ; "preestableciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"preestablecierais" ; "preestablecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"preestablecieran" ; "preestableciesen"} ;--# notpresent
    VP (Pret Sg P1) => "preestablecí" ;--# notpresent
    VP (Pret Sg P2) => "preestableciste" ;--# notpresent
    VP (Pret Sg P3) => "preestableció" ;--# notpresent
    VP (Pret Pl P1) => "preestablecimos" ;--# notpresent
    VP (Pret Pl P2) => "preestablecisteis" ;--# notpresent
    VP (Pret Pl P3) => "preestablecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preestableceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "preestablecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "preestablecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preestableceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preestableceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "preestablecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "preestableciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "preestablecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "preestableciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "preestableciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "preestableciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "preestablecieren" ;--# notpresent
    VP (Cond Sg P1) => "preestablecería" ;--# notpresent
    VP (Cond Sg P2) => "preestablecerías" ;--# notpresent
    VP (Cond Sg P3) => "preestablecería" ;--# notpresent
    VP (Cond Pl P1) => "preestableceríamos" ;--# notpresent
    VP (Cond Pl P2) => "preestableceríais" ;--# notpresent
    VP (Cond Pl P3) => "preestablecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preestablece" ;
    VP (Imp Sg P3) => "preestablezca" ;
    VP (Imp Pl P1) => "preestablezcamos" ;
    VP (Imp Pl P2) => "preestableced" ;
    VP (Imp Pl P3) => "preestablezcan" ;
    VP (Pass Sg Masc) => "preestablecido" ;
    VP (Pass Sg Fem) => "preestablecida" ;
    VP (Pass Pl Masc) => "preestablecidos" ;
    VP (Pass Pl Fem) => "preestablecidas"
    }
  } ;

lin prevalecer_V = verboV 
 {s = table {
    VI Infn => "prevalecer" ;
    VI Ger => "prevaleciendo" ;
    VI Part => "prevalecido" ;
    VP (Pres Ind Sg P1) => "prevalezco" ;
    VP (Pres Ind Sg P2) => "prevaleces" ;
    VP (Pres Ind Sg P3) => "prevalece" ;
    VP (Pres Ind Pl P1) => "prevalecemos" ;
    VP (Pres Ind Pl P2) => "prevalecéis" ;
    VP (Pres Ind Pl P3) => "prevalecen" ;
    VP (Pres Subj Sg P1) => "prevalezca" ;
    VP (Pres Subj Sg P2) => "prevalezcas" ;
    VP (Pres Subj Sg P3) => "prevalezca" ;
    VP (Pres Subj Pl P1) => "prevalezcamos" ;
    VP (Pres Subj Pl P2) => "prevalezcáis" ;
    VP (Pres Subj Pl P3) => "prevalezcan" ;
    VP (Impf Ind Sg P1) => "prevalecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prevalecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prevalecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prevalecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prevalecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prevalecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prevaleciera" ; "prevaleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prevalecieras" ; "prevalecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prevaleciera" ; "prevaleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prevaleciéramos" ; "prevaleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prevalecierais" ; "prevalecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prevalecieran" ; "prevaleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "prevalecí" ;--# notpresent
    VP (Pret Sg P2) => "prevaleciste" ;--# notpresent
    VP (Pret Sg P3) => "prevaleció" ;--# notpresent
    VP (Pret Pl P1) => "prevalecimos" ;--# notpresent
    VP (Pret Pl P2) => "prevalecisteis" ;--# notpresent
    VP (Pret Pl P3) => "prevalecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prevaleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prevalecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prevalecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prevaleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prevaleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prevalecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prevaleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prevalecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prevaleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prevaleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prevaleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prevalecieren" ;--# notpresent
    VP (Cond Sg P1) => "prevalecería" ;--# notpresent
    VP (Cond Sg P2) => "prevalecerías" ;--# notpresent
    VP (Cond Sg P3) => "prevalecería" ;--# notpresent
    VP (Cond Pl P1) => "prevaleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "prevaleceríais" ;--# notpresent
    VP (Cond Pl P3) => "prevalecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prevalece" ;
    VP (Imp Sg P3) => "prevalezca" ;
    VP (Imp Pl P1) => "prevalezcamos" ;
    VP (Imp Pl P2) => "prevaleced" ;
    VP (Imp Pl P3) => "prevalezcan" ;
    VP (Pass Sg Masc) => "prevalecido" ;
    VP (Pass Sg Fem) => "prevalecida" ;
    VP (Pass Pl Masc) => "prevalecidos" ;
    VP (Pass Pl Fem) => "prevalecidas"
    }
  } ;

lin reaparecer_V = verboV 
 {s = table {
    VI Infn => "reaparecer" ;
    VI Ger => "reapareciendo" ;
    VI Part => "reaparecido" ;
    VP (Pres Ind Sg P1) => "reaparezco" ;
    VP (Pres Ind Sg P2) => "reapareces" ;
    VP (Pres Ind Sg P3) => "reaparece" ;
    VP (Pres Ind Pl P1) => "reaparecemos" ;
    VP (Pres Ind Pl P2) => "reaparecéis" ;
    VP (Pres Ind Pl P3) => "reaparecen" ;
    VP (Pres Subj Sg P1) => "reaparezca" ;
    VP (Pres Subj Sg P2) => "reaparezcas" ;
    VP (Pres Subj Sg P3) => "reaparezca" ;
    VP (Pres Subj Pl P1) => "reaparezcamos" ;
    VP (Pres Subj Pl P2) => "reaparezcáis" ;
    VP (Pres Subj Pl P3) => "reaparezcan" ;
    VP (Impf Ind Sg P1) => "reaparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reaparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reaparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reaparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reaparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reaparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reapareciera" ; "reapareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reaparecieras" ; "reaparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reapareciera" ; "reapareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reapareciéramos" ; "reapareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reaparecierais" ; "reaparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reaparecieran" ; "reapareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "reaparecí" ;--# notpresent
    VP (Pret Sg P2) => "reapareciste" ;--# notpresent
    VP (Pret Sg P3) => "reapareció" ;--# notpresent
    VP (Pret Pl P1) => "reaparecimos" ;--# notpresent
    VP (Pret Pl P2) => "reaparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "reaparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reapareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reaparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reaparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reapareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reapareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reaparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reapareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reaparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reapareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reapareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reapareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reaparecieren" ;--# notpresent
    VP (Cond Sg P1) => "reaparecería" ;--# notpresent
    VP (Cond Sg P2) => "reaparecerías" ;--# notpresent
    VP (Cond Sg P3) => "reaparecería" ;--# notpresent
    VP (Cond Pl P1) => "reapareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "reapareceríais" ;--# notpresent
    VP (Cond Pl P3) => "reaparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reaparece" ;
    VP (Imp Sg P3) => "reaparezca" ;
    VP (Imp Pl P1) => "reaparezcamos" ;
    VP (Imp Pl P2) => "reapareced" ;
    VP (Imp Pl P3) => "reaparezcan" ;
    VP (Pass Sg Masc) => "reaparecido" ;
    VP (Pass Sg Fem) => "reaparecida" ;
    VP (Pass Pl Masc) => "reaparecidos" ;
    VP (Pass Pl Fem) => "reaparecidas"
    }
  } ;

lin reblandecer_V = verboV 
 {s = table {
    VI Infn => "reblandecer" ;
    VI Ger => "reblandeciendo" ;
    VI Part => "reblandecido" ;
    VP (Pres Ind Sg P1) => "reblandezco" ;
    VP (Pres Ind Sg P2) => "reblandeces" ;
    VP (Pres Ind Sg P3) => "reblandece" ;
    VP (Pres Ind Pl P1) => "reblandecemos" ;
    VP (Pres Ind Pl P2) => "reblandecéis" ;
    VP (Pres Ind Pl P3) => "reblandecen" ;
    VP (Pres Subj Sg P1) => "reblandezca" ;
    VP (Pres Subj Sg P2) => "reblandezcas" ;
    VP (Pres Subj Sg P3) => "reblandezca" ;
    VP (Pres Subj Pl P1) => "reblandezcamos" ;
    VP (Pres Subj Pl P2) => "reblandezcáis" ;
    VP (Pres Subj Pl P3) => "reblandezcan" ;
    VP (Impf Ind Sg P1) => "reblandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reblandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reblandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reblandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reblandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reblandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reblandeciera" ; "reblandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reblandecieras" ; "reblandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reblandeciera" ; "reblandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reblandeciéramos" ; "reblandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reblandecierais" ; "reblandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reblandecieran" ; "reblandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "reblandecí" ;--# notpresent
    VP (Pret Sg P2) => "reblandeciste" ;--# notpresent
    VP (Pret Sg P3) => "reblandeció" ;--# notpresent
    VP (Pret Pl P1) => "reblandecimos" ;--# notpresent
    VP (Pret Pl P2) => "reblandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "reblandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reblandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reblandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reblandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reblandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reblandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reblandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reblandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reblandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reblandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reblandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reblandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reblandecieren" ;--# notpresent
    VP (Cond Sg P1) => "reblandecería" ;--# notpresent
    VP (Cond Sg P2) => "reblandecerías" ;--# notpresent
    VP (Cond Sg P3) => "reblandecería" ;--# notpresent
    VP (Cond Pl P1) => "reblandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "reblandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "reblandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reblandece" ;
    VP (Imp Sg P3) => "reblandezca" ;
    VP (Imp Pl P1) => "reblandezcamos" ;
    VP (Imp Pl P2) => "reblandeced" ;
    VP (Imp Pl P3) => "reblandezcan" ;
    VP (Pass Sg Masc) => "reblandecido" ;
    VP (Pass Sg Fem) => "reblandecida" ;
    VP (Pass Pl Masc) => "reblandecidos" ;
    VP (Pass Pl Fem) => "reblandecidas"
    }
  } ;

lin reconvalecer_V = verboV 
 {s = table {
    VI Infn => "reconvalecer" ;
    VI Ger => "reconvaleciendo" ;
    VI Part => "reconvalecido" ;
    VP (Pres Ind Sg P1) => "reconvalezco" ;
    VP (Pres Ind Sg P2) => "reconvaleces" ;
    VP (Pres Ind Sg P3) => "reconvalece" ;
    VP (Pres Ind Pl P1) => "reconvalecemos" ;
    VP (Pres Ind Pl P2) => "reconvalecéis" ;
    VP (Pres Ind Pl P3) => "reconvalecen" ;
    VP (Pres Subj Sg P1) => "reconvalezca" ;
    VP (Pres Subj Sg P2) => "reconvalezcas" ;
    VP (Pres Subj Sg P3) => "reconvalezca" ;
    VP (Pres Subj Pl P1) => "reconvalezcamos" ;
    VP (Pres Subj Pl P2) => "reconvalezcáis" ;
    VP (Pres Subj Pl P3) => "reconvalezcan" ;
    VP (Impf Ind Sg P1) => "reconvalecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconvalecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconvalecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconvalecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconvalecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconvalecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reconvaleciera" ; "reconvaleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reconvalecieras" ; "reconvalecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reconvaleciera" ; "reconvaleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reconvaleciéramos" ; "reconvaleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reconvalecierais" ; "reconvalecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reconvalecieran" ; "reconvaleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconvalecí" ;--# notpresent
    VP (Pret Sg P2) => "reconvaleciste" ;--# notpresent
    VP (Pret Sg P3) => "reconvaleció" ;--# notpresent
    VP (Pret Pl P1) => "reconvalecimos" ;--# notpresent
    VP (Pret Pl P2) => "reconvalecisteis" ;--# notpresent
    VP (Pret Pl P3) => "reconvalecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconvaleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconvalecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconvalecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconvaleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconvaleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconvalecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reconvaleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reconvalecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reconvaleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reconvaleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reconvaleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reconvalecieren" ;--# notpresent
    VP (Cond Sg P1) => "reconvalecería" ;--# notpresent
    VP (Cond Sg P2) => "reconvalecerías" ;--# notpresent
    VP (Cond Sg P3) => "reconvalecería" ;--# notpresent
    VP (Cond Pl P1) => "reconvaleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconvaleceríais" ;--# notpresent
    VP (Cond Pl P3) => "reconvalecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconvalece" ;
    VP (Imp Sg P3) => "reconvalezca" ;
    VP (Imp Pl P1) => "reconvalezcamos" ;
    VP (Imp Pl P2) => "reconvaleced" ;
    VP (Imp Pl P3) => "reconvalezcan" ;
    VP (Pass Sg Masc) => "reconvalecido" ;
    VP (Pass Sg Fem) => "reconvalecida" ;
    VP (Pass Pl Masc) => "reconvalecidos" ;
    VP (Pass Pl Fem) => "reconvalecidas"
    }
  } ;

lin recrecer_V = verboV 
 {s = table {
    VI Infn => "recrecer" ;
    VI Ger => "recreciendo" ;
    VI Part => "recrecido" ;
    VP (Pres Ind Sg P1) => "recrezco" ;
    VP (Pres Ind Sg P2) => "recreces" ;
    VP (Pres Ind Sg P3) => "recrece" ;
    VP (Pres Ind Pl P1) => "recrecemos" ;
    VP (Pres Ind Pl P2) => "recrecéis" ;
    VP (Pres Ind Pl P3) => "recrecen" ;
    VP (Pres Subj Sg P1) => "recrezca" ;
    VP (Pres Subj Sg P2) => "recrezcas" ;
    VP (Pres Subj Sg P3) => "recrezca" ;
    VP (Pres Subj Pl P1) => "recrezcamos" ;
    VP (Pres Subj Pl P2) => "recrezcáis" ;
    VP (Pres Subj Pl P3) => "recrezcan" ;
    VP (Impf Ind Sg P1) => "recrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recreciera" ; "recreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recrecieras" ; "recrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recreciera" ; "recreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recreciéramos" ; "recreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recrecierais" ; "recrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recrecieran" ; "recreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "recrecí" ;--# notpresent
    VP (Pret Sg P2) => "recreciste" ;--# notpresent
    VP (Pret Sg P3) => "recreció" ;--# notpresent
    VP (Pret Pl P1) => "recrecimos" ;--# notpresent
    VP (Pret Pl P2) => "recrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "recrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recrecieren" ;--# notpresent
    VP (Cond Sg P1) => "recrecería" ;--# notpresent
    VP (Cond Sg P2) => "recrecerías" ;--# notpresent
    VP (Cond Sg P3) => "recrecería" ;--# notpresent
    VP (Cond Pl P1) => "recreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "recreceríais" ;--# notpresent
    VP (Cond Pl P3) => "recrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recrece" ;
    VP (Imp Sg P3) => "recrezca" ;
    VP (Imp Pl P1) => "recrezcamos" ;
    VP (Imp Pl P2) => "recreced" ;
    VP (Imp Pl P3) => "recrezcan" ;
    VP (Pass Sg Masc) => "recrecido" ;
    VP (Pass Sg Fem) => "recrecida" ;
    VP (Pass Pl Masc) => "recrecidos" ;
    VP (Pass Pl Fem) => "recrecidas"
    }
  } ;

lin recrudecer_V = verboV 
 {s = table {
    VI Infn => "recrudecer" ;
    VI Ger => "recrudeciendo" ;
    VI Part => "recrudecido" ;
    VP (Pres Ind Sg P1) => "recrudezco" ;
    VP (Pres Ind Sg P2) => "recrudeces" ;
    VP (Pres Ind Sg P3) => "recrudece" ;
    VP (Pres Ind Pl P1) => "recrudecemos" ;
    VP (Pres Ind Pl P2) => "recrudecéis" ;
    VP (Pres Ind Pl P3) => "recrudecen" ;
    VP (Pres Subj Sg P1) => "recrudezca" ;
    VP (Pres Subj Sg P2) => "recrudezcas" ;
    VP (Pres Subj Sg P3) => "recrudezca" ;
    VP (Pres Subj Pl P1) => "recrudezcamos" ;
    VP (Pres Subj Pl P2) => "recrudezcáis" ;
    VP (Pres Subj Pl P3) => "recrudezcan" ;
    VP (Impf Ind Sg P1) => "recrudecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recrudecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recrudecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recrudecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recrudecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recrudecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recrudeciera" ; "recrudeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recrudecieras" ; "recrudecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recrudeciera" ; "recrudeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recrudeciéramos" ; "recrudeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recrudecierais" ; "recrudecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recrudecieran" ; "recrudeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "recrudecí" ;--# notpresent
    VP (Pret Sg P2) => "recrudeciste" ;--# notpresent
    VP (Pret Sg P3) => "recrudeció" ;--# notpresent
    VP (Pret Pl P1) => "recrudecimos" ;--# notpresent
    VP (Pret Pl P2) => "recrudecisteis" ;--# notpresent
    VP (Pret Pl P3) => "recrudecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recrudeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recrudecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recrudecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recrudeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recrudeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recrudecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recrudeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recrudecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recrudeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recrudeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recrudeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recrudecieren" ;--# notpresent
    VP (Cond Sg P1) => "recrudecería" ;--# notpresent
    VP (Cond Sg P2) => "recrudecerías" ;--# notpresent
    VP (Cond Sg P3) => "recrudecería" ;--# notpresent
    VP (Cond Pl P1) => "recrudeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "recrudeceríais" ;--# notpresent
    VP (Cond Pl P3) => "recrudecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recrudece" ;
    VP (Imp Sg P3) => "recrudezca" ;
    VP (Imp Pl P1) => "recrudezcamos" ;
    VP (Imp Pl P2) => "recrudeced" ;
    VP (Imp Pl P3) => "recrudezcan" ;
    VP (Pass Sg Masc) => "recrudecido" ;
    VP (Pass Sg Fem) => "recrudecida" ;
    VP (Pass Pl Masc) => "recrudecidos" ;
    VP (Pass Pl Fem) => "recrudecidas"
    }
  } ;

lin reflorecer_V = verboV 
 {s = table {
    VI Infn => "reflorecer" ;
    VI Ger => "refloreciendo" ;
    VI Part => "reflorecido" ;
    VP (Pres Ind Sg P1) => "reflorezco" ;
    VP (Pres Ind Sg P2) => "refloreces" ;
    VP (Pres Ind Sg P3) => "reflorece" ;
    VP (Pres Ind Pl P1) => "reflorecemos" ;
    VP (Pres Ind Pl P2) => "reflorecéis" ;
    VP (Pres Ind Pl P3) => "reflorecen" ;
    VP (Pres Subj Sg P1) => "reflorezca" ;
    VP (Pres Subj Sg P2) => "reflorezcas" ;
    VP (Pres Subj Sg P3) => "reflorezca" ;
    VP (Pres Subj Pl P1) => "reflorezcamos" ;
    VP (Pres Subj Pl P2) => "reflorezcáis" ;
    VP (Pres Subj Pl P3) => "reflorezcan" ;
    VP (Impf Ind Sg P1) => "reflorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reflorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reflorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reflorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reflorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reflorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refloreciera" ; "refloreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reflorecieras" ; "reflorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refloreciera" ; "refloreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refloreciéramos" ; "refloreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reflorecierais" ; "reflorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reflorecieran" ; "refloreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "reflorecí" ;--# notpresent
    VP (Pret Sg P2) => "refloreciste" ;--# notpresent
    VP (Pret Sg P3) => "refloreció" ;--# notpresent
    VP (Pret Pl P1) => "reflorecimos" ;--# notpresent
    VP (Pret Pl P2) => "reflorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "reflorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "refloreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reflorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reflorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "refloreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "refloreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reflorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refloreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reflorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "refloreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "refloreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refloreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reflorecieren" ;--# notpresent
    VP (Cond Sg P1) => "reflorecería" ;--# notpresent
    VP (Cond Sg P2) => "reflorecerías" ;--# notpresent
    VP (Cond Sg P3) => "reflorecería" ;--# notpresent
    VP (Cond Pl P1) => "refloreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "refloreceríais" ;--# notpresent
    VP (Cond Pl P3) => "reflorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reflorece" ;
    VP (Imp Sg P3) => "reflorezca" ;
    VP (Imp Pl P1) => "reflorezcamos" ;
    VP (Imp Pl P2) => "refloreced" ;
    VP (Imp Pl P3) => "reflorezcan" ;
    VP (Pass Sg Masc) => "reflorecido" ;
    VP (Pass Sg Fem) => "reflorecida" ;
    VP (Pass Pl Masc) => "reflorecidos" ;
    VP (Pass Pl Fem) => "reflorecidas"
    }
  } ;

lin reguarnecer_V = verboV 
 {s = table {
    VI Infn => "reguarnecer" ;
    VI Ger => "reguarneciendo" ;
    VI Part => "reguarnecido" ;
    VP (Pres Ind Sg P1) => "reguarnezco" ;
    VP (Pres Ind Sg P2) => "reguarneces" ;
    VP (Pres Ind Sg P3) => "reguarnece" ;
    VP (Pres Ind Pl P1) => "reguarnecemos" ;
    VP (Pres Ind Pl P2) => "reguarnecéis" ;
    VP (Pres Ind Pl P3) => "reguarnecen" ;
    VP (Pres Subj Sg P1) => "reguarnezca" ;
    VP (Pres Subj Sg P2) => "reguarnezcas" ;
    VP (Pres Subj Sg P3) => "reguarnezca" ;
    VP (Pres Subj Pl P1) => "reguarnezcamos" ;
    VP (Pres Subj Pl P2) => "reguarnezcáis" ;
    VP (Pres Subj Pl P3) => "reguarnezcan" ;
    VP (Impf Ind Sg P1) => "reguarnecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reguarnecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reguarnecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reguarnecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reguarnecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reguarnecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reguarneciera" ; "reguarneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reguarnecieras" ; "reguarnecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reguarneciera" ; "reguarneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reguarneciéramos" ; "reguarneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reguarnecierais" ; "reguarnecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reguarnecieran" ; "reguarneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "reguarnecí" ;--# notpresent
    VP (Pret Sg P2) => "reguarneciste" ;--# notpresent
    VP (Pret Sg P3) => "reguarneció" ;--# notpresent
    VP (Pret Pl P1) => "reguarnecimos" ;--# notpresent
    VP (Pret Pl P2) => "reguarnecisteis" ;--# notpresent
    VP (Pret Pl P3) => "reguarnecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reguarneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reguarnecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reguarnecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reguarneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reguarneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reguarnecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reguarneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reguarnecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reguarneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reguarneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reguarneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reguarnecieren" ;--# notpresent
    VP (Cond Sg P1) => "reguarnecería" ;--# notpresent
    VP (Cond Sg P2) => "reguarnecerías" ;--# notpresent
    VP (Cond Sg P3) => "reguarnecería" ;--# notpresent
    VP (Cond Pl P1) => "reguarneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "reguarneceríais" ;--# notpresent
    VP (Cond Pl P3) => "reguarnecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reguarnece" ;
    VP (Imp Sg P3) => "reguarnezca" ;
    VP (Imp Pl P1) => "reguarnezcamos" ;
    VP (Imp Pl P2) => "reguarneced" ;
    VP (Imp Pl P3) => "reguarnezcan" ;
    VP (Pass Sg Masc) => "reguarnecido" ;
    VP (Pass Sg Fem) => "reguarnecida" ;
    VP (Pass Pl Masc) => "reguarnecidos" ;
    VP (Pass Pl Fem) => "reguarnecidas"
    }
  } ;

lin rehumedecer_V = verboV 
 {s = table {
    VI Infn => "rehumedecer" ;
    VI Ger => "rehumedeciendo" ;
    VI Part => "rehumedecido" ;
    VP (Pres Ind Sg P1) => "rehumedezco" ;
    VP (Pres Ind Sg P2) => "rehumedeces" ;
    VP (Pres Ind Sg P3) => "rehumedece" ;
    VP (Pres Ind Pl P1) => "rehumedecemos" ;
    VP (Pres Ind Pl P2) => "rehumedecéis" ;
    VP (Pres Ind Pl P3) => "rehumedecen" ;
    VP (Pres Subj Sg P1) => "rehumedezca" ;
    VP (Pres Subj Sg P2) => "rehumedezcas" ;
    VP (Pres Subj Sg P3) => "rehumedezca" ;
    VP (Pres Subj Pl P1) => "rehumedezcamos" ;
    VP (Pres Subj Pl P2) => "rehumedezcáis" ;
    VP (Pres Subj Pl P3) => "rehumedezcan" ;
    VP (Impf Ind Sg P1) => "rehumedecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rehumedecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehumedecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rehumedecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rehumedecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rehumedecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehumedeciera" ; "rehumedeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehumedecieras" ; "rehumedecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehumedeciera" ; "rehumedeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rehumedeciéramos" ; "rehumedeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehumedecierais" ; "rehumedecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehumedecieran" ; "rehumedeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "rehumedecí" ;--# notpresent
    VP (Pret Sg P2) => "rehumedeciste" ;--# notpresent
    VP (Pret Sg P3) => "rehumedeció" ;--# notpresent
    VP (Pret Pl P1) => "rehumedecimos" ;--# notpresent
    VP (Pret Pl P2) => "rehumedecisteis" ;--# notpresent
    VP (Pret Pl P3) => "rehumedecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rehumedeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rehumedecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rehumedecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rehumedeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rehumedeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rehumedecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehumedeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehumedecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehumedeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rehumedeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehumedeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehumedecieren" ;--# notpresent
    VP (Cond Sg P1) => "rehumedecería" ;--# notpresent
    VP (Cond Sg P2) => "rehumedecerías" ;--# notpresent
    VP (Cond Sg P3) => "rehumedecería" ;--# notpresent
    VP (Cond Pl P1) => "rehumedeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "rehumedeceríais" ;--# notpresent
    VP (Cond Pl P3) => "rehumedecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehumedece" ;
    VP (Imp Sg P3) => "rehumedezca" ;
    VP (Imp Pl P1) => "rehumedezcamos" ;
    VP (Imp Pl P2) => "rehumedeced" ;
    VP (Imp Pl P3) => "rehumedezcan" ;
    VP (Pass Sg Masc) => "rehumedecido" ;
    VP (Pass Sg Fem) => "rehumedecida" ;
    VP (Pass Pl Masc) => "rehumedecidos" ;
    VP (Pass Pl Fem) => "rehumedecidas"
    }
  } ;

lin rejuvenecer_V = verboV 
 {s = table {
    VI Infn => "rejuvenecer" ;
    VI Ger => "rejuveneciendo" ;
    VI Part => "rejuvenecido" ;
    VP (Pres Ind Sg P1) => "rejuvenezco" ;
    VP (Pres Ind Sg P2) => "rejuveneces" ;
    VP (Pres Ind Sg P3) => "rejuvenece" ;
    VP (Pres Ind Pl P1) => "rejuvenecemos" ;
    VP (Pres Ind Pl P2) => "rejuvenecéis" ;
    VP (Pres Ind Pl P3) => "rejuvenecen" ;
    VP (Pres Subj Sg P1) => "rejuvenezca" ;
    VP (Pres Subj Sg P2) => "rejuvenezcas" ;
    VP (Pres Subj Sg P3) => "rejuvenezca" ;
    VP (Pres Subj Pl P1) => "rejuvenezcamos" ;
    VP (Pres Subj Pl P2) => "rejuvenezcáis" ;
    VP (Pres Subj Pl P3) => "rejuvenezcan" ;
    VP (Impf Ind Sg P1) => "rejuvenecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rejuvenecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rejuvenecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rejuvenecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rejuvenecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rejuvenecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rejuveneciera" ; "rejuveneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rejuvenecieras" ; "rejuvenecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rejuveneciera" ; "rejuveneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rejuveneciéramos" ; "rejuveneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rejuvenecierais" ; "rejuvenecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rejuvenecieran" ; "rejuveneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "rejuvenecí" ;--# notpresent
    VP (Pret Sg P2) => "rejuveneciste" ;--# notpresent
    VP (Pret Sg P3) => "rejuveneció" ;--# notpresent
    VP (Pret Pl P1) => "rejuvenecimos" ;--# notpresent
    VP (Pret Pl P2) => "rejuvenecisteis" ;--# notpresent
    VP (Pret Pl P3) => "rejuvenecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rejuveneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rejuvenecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rejuvenecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rejuveneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rejuveneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rejuvenecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rejuveneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rejuvenecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rejuveneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rejuveneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rejuveneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rejuvenecieren" ;--# notpresent
    VP (Cond Sg P1) => "rejuvenecería" ;--# notpresent
    VP (Cond Sg P2) => "rejuvenecerías" ;--# notpresent
    VP (Cond Sg P3) => "rejuvenecería" ;--# notpresent
    VP (Cond Pl P1) => "rejuveneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "rejuveneceríais" ;--# notpresent
    VP (Cond Pl P3) => "rejuvenecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rejuvenece" ;
    VP (Imp Sg P3) => "rejuvenezca" ;
    VP (Imp Pl P1) => "rejuvenezcamos" ;
    VP (Imp Pl P2) => "rejuveneced" ;
    VP (Imp Pl P3) => "rejuvenezcan" ;
    VP (Pass Sg Masc) => "rejuvenecido" ;
    VP (Pass Sg Fem) => "rejuvenecida" ;
    VP (Pass Pl Masc) => "rejuvenecidos" ;
    VP (Pass Pl Fem) => "rejuvenecidas"
    }
  } ;

lin relentecer_V = verboV 
 {s = table {
    VI Infn => "relentecer" ;
    VI Ger => "relenteciendo" ;
    VI Part => "relentecido" ;
    VP (Pres Ind Sg P1) => "relentezco" ;
    VP (Pres Ind Sg P2) => "relenteces" ;
    VP (Pres Ind Sg P3) => "relentece" ;
    VP (Pres Ind Pl P1) => "relentecemos" ;
    VP (Pres Ind Pl P2) => "relentecéis" ;
    VP (Pres Ind Pl P3) => "relentecen" ;
    VP (Pres Subj Sg P1) => "relentezca" ;
    VP (Pres Subj Sg P2) => "relentezcas" ;
    VP (Pres Subj Sg P3) => "relentezca" ;
    VP (Pres Subj Pl P1) => "relentezcamos" ;
    VP (Pres Subj Pl P2) => "relentezcáis" ;
    VP (Pres Subj Pl P3) => "relentezcan" ;
    VP (Impf Ind Sg P1) => "relentecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "relentecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "relentecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "relentecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "relentecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "relentecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"relenteciera" ; "relenteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"relentecieras" ; "relentecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"relenteciera" ; "relenteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"relenteciéramos" ; "relenteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"relentecierais" ; "relentecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"relentecieran" ; "relenteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "relentecí" ;--# notpresent
    VP (Pret Sg P2) => "relenteciste" ;--# notpresent
    VP (Pret Sg P3) => "relenteció" ;--# notpresent
    VP (Pret Pl P1) => "relentecimos" ;--# notpresent
    VP (Pret Pl P2) => "relentecisteis" ;--# notpresent
    VP (Pret Pl P3) => "relentecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "relenteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "relentecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "relentecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "relenteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "relenteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "relentecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "relenteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "relentecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "relenteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "relenteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "relenteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "relentecieren" ;--# notpresent
    VP (Cond Sg P1) => "relentecería" ;--# notpresent
    VP (Cond Sg P2) => "relentecerías" ;--# notpresent
    VP (Cond Sg P3) => "relentecería" ;--# notpresent
    VP (Cond Pl P1) => "relenteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "relenteceríais" ;--# notpresent
    VP (Cond Pl P3) => "relentecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "relentece" ;
    VP (Imp Sg P3) => "relentezca" ;
    VP (Imp Pl P1) => "relentezcamos" ;
    VP (Imp Pl P2) => "relenteced" ;
    VP (Imp Pl P3) => "relentezcan" ;
    VP (Pass Sg Masc) => "relentecido" ;
    VP (Pass Sg Fem) => "relentecida" ;
    VP (Pass Pl Masc) => "relentecidos" ;
    VP (Pass Pl Fem) => "relentecidas"
    }
  } ;

lin remanecer_V = verboV 
 {s = table {
    VI Infn => "remanecer" ;
    VI Ger => "remaneciendo" ;
    VI Part => "remanecido" ;
    VP (Pres Ind Sg P1) => "remanezco" ;
    VP (Pres Ind Sg P2) => "remaneces" ;
    VP (Pres Ind Sg P3) => "remanece" ;
    VP (Pres Ind Pl P1) => "remanecemos" ;
    VP (Pres Ind Pl P2) => "remanecéis" ;
    VP (Pres Ind Pl P3) => "remanecen" ;
    VP (Pres Subj Sg P1) => "remanezca" ;
    VP (Pres Subj Sg P2) => "remanezcas" ;
    VP (Pres Subj Sg P3) => "remanezca" ;
    VP (Pres Subj Pl P1) => "remanezcamos" ;
    VP (Pres Subj Pl P2) => "remanezcáis" ;
    VP (Pres Subj Pl P3) => "remanezcan" ;
    VP (Impf Ind Sg P1) => "remanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "remanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "remanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "remanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remaneciera" ; "remaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remanecieras" ; "remanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remaneciera" ; "remaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remaneciéramos" ; "remaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remanecierais" ; "remanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remanecieran" ; "remaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "remanecí" ;--# notpresent
    VP (Pret Sg P2) => "remaneciste" ;--# notpresent
    VP (Pret Sg P3) => "remaneció" ;--# notpresent
    VP (Pret Pl P1) => "remanecimos" ;--# notpresent
    VP (Pret Pl P2) => "remanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "remanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "remaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "remanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "remaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "remaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remanecieren" ;--# notpresent
    VP (Cond Sg P1) => "remanecería" ;--# notpresent
    VP (Cond Sg P2) => "remanecerías" ;--# notpresent
    VP (Cond Sg P3) => "remanecería" ;--# notpresent
    VP (Cond Pl P1) => "remaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "remaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "remanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remanece" ;
    VP (Imp Sg P3) => "remanezca" ;
    VP (Imp Pl P1) => "remanezcamos" ;
    VP (Imp Pl P2) => "remaneced" ;
    VP (Imp Pl P3) => "remanezcan" ;
    VP (Pass Sg Masc) => "remanecido" ;
    VP (Pass Sg Fem) => "remanecida" ;
    VP (Pass Pl Masc) => "remanecidos" ;
    VP (Pass Pl Fem) => "remanecidas"
    }
  } ;

lin renacer_V = verboV 
 {s = table {
    VI Infn => "renacer" ;
    VI Ger => "renaciendo" ;
    VI Part => "renacido" ;
    VP (Pres Ind Sg P1) => "renazco" ;
    VP (Pres Ind Sg P2) => "renaces" ;
    VP (Pres Ind Sg P3) => "renace" ;
    VP (Pres Ind Pl P1) => "renacemos" ;
    VP (Pres Ind Pl P2) => "renacéis" ;
    VP (Pres Ind Pl P3) => "renacen" ;
    VP (Pres Subj Sg P1) => "renazca" ;
    VP (Pres Subj Sg P2) => "renazcas" ;
    VP (Pres Subj Sg P3) => "renazca" ;
    VP (Pres Subj Pl P1) => "renazcamos" ;
    VP (Pres Subj Pl P2) => "renazcáis" ;
    VP (Pres Subj Pl P3) => "renazcan" ;
    VP (Impf Ind Sg P1) => "renacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "renacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "renacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "renacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "renacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "renacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"renaciera" ; "renaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"renacieras" ; "renacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"renaciera" ; "renaciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"renaciéramos" ; "renaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"renacierais" ; "renacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"renacieran" ; "renaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "renací" ;--# notpresent
    VP (Pret Sg P2) => "renaciste" ;--# notpresent
    VP (Pret Sg P3) => "renació" ;--# notpresent
    VP (Pret Pl P1) => "renacimos" ;--# notpresent
    VP (Pret Pl P2) => "renacisteis" ;--# notpresent
    VP (Pret Pl P3) => "renacieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "renaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "renacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "renacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "renaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "renaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "renacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "renaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "renacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "renaciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "renaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "renaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "renacieren" ;--# notpresent
    VP (Cond Sg P1) => "renacería" ;--# notpresent
    VP (Cond Sg P2) => "renacerías" ;--# notpresent
    VP (Cond Sg P3) => "renacería" ;--# notpresent
    VP (Cond Pl P1) => "renaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "renaceríais" ;--# notpresent
    VP (Cond Pl P3) => "renacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "renace" ;
    VP (Imp Sg P3) => "renazca" ;
    VP (Imp Pl P1) => "renazcamos" ;
    VP (Imp Pl P2) => "renaced" ;
    VP (Imp Pl P3) => "renazcan" ;
    VP (Pass Sg Masc) => "renacido" ;
    VP (Pass Sg Fem) => "renacida" ;
    VP (Pass Pl Masc) => "renacidos" ;
    VP (Pass Pl Fem) => "renacidas"
    }
  } ;

lin repacer_V = verboV 
 {s = table {
    VI Infn => "repacer" ;
    VI Ger => "repaciendo" ;
    VI Part => "repacido" ;
    VP (Pres Ind Sg P1) => "repazco" ;
    VP (Pres Ind Sg P2) => "repaces" ;
    VP (Pres Ind Sg P3) => "repace" ;
    VP (Pres Ind Pl P1) => "repacemos" ;
    VP (Pres Ind Pl P2) => "repacéis" ;
    VP (Pres Ind Pl P3) => "repacen" ;
    VP (Pres Subj Sg P1) => "repazca" ;
    VP (Pres Subj Sg P2) => "repazcas" ;
    VP (Pres Subj Sg P3) => "repazca" ;
    VP (Pres Subj Pl P1) => "repazcamos" ;
    VP (Pres Subj Pl P2) => "repazcáis" ;
    VP (Pres Subj Pl P3) => "repazcan" ;
    VP (Impf Ind Sg P1) => "repacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "repacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "repacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "repacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "repacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "repacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"repaciera" ; "repaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"repacieras" ; "repacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"repaciera" ; "repaciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"repaciéramos" ; "repaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"repacierais" ; "repacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"repacieran" ; "repaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "repací" ;--# notpresent
    VP (Pret Sg P2) => "repaciste" ;--# notpresent
    VP (Pret Sg P3) => "repació" ;--# notpresent
    VP (Pret Pl P1) => "repacimos" ;--# notpresent
    VP (Pret Pl P2) => "repacisteis" ;--# notpresent
    VP (Pret Pl P3) => "repacieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "repaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "repacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "repacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "repaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "repaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "repacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "repaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "repacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "repaciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "repaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "repaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "repacieren" ;--# notpresent
    VP (Cond Sg P1) => "repacería" ;--# notpresent
    VP (Cond Sg P2) => "repacerías" ;--# notpresent
    VP (Cond Sg P3) => "repacería" ;--# notpresent
    VP (Cond Pl P1) => "repaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "repaceríais" ;--# notpresent
    VP (Cond Pl P3) => "repacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "repace" ;
    VP (Imp Sg P3) => "repazca" ;
    VP (Imp Pl P1) => "repazcamos" ;
    VP (Imp Pl P2) => "repaced" ;
    VP (Imp Pl P3) => "repazcan" ;
    VP (Pass Sg Masc) => "repacido" ;
    VP (Pass Sg Fem) => "repacida" ;
    VP (Pass Pl Masc) => "repacidos" ;
    VP (Pass Pl Fem) => "repacidas"
    }
  } ;

lin resplandecer_V = verboV 
 {s = table {
    VI Infn => "resplandecer" ;
    VI Ger => "resplandeciendo" ;
    VI Part => "resplandecido" ;
    VP (Pres Ind Sg P1) => "resplandezco" ;
    VP (Pres Ind Sg P2) => "resplandeces" ;
    VP (Pres Ind Sg P3) => "resplandece" ;
    VP (Pres Ind Pl P1) => "resplandecemos" ;
    VP (Pres Ind Pl P2) => "resplandecéis" ;
    VP (Pres Ind Pl P3) => "resplandecen" ;
    VP (Pres Subj Sg P1) => "resplandezca" ;
    VP (Pres Subj Sg P2) => "resplandezcas" ;
    VP (Pres Subj Sg P3) => "resplandezca" ;
    VP (Pres Subj Pl P1) => "resplandezcamos" ;
    VP (Pres Subj Pl P2) => "resplandezcáis" ;
    VP (Pres Subj Pl P3) => "resplandezcan" ;
    VP (Impf Ind Sg P1) => "resplandecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "resplandecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "resplandecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "resplandecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resplandecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resplandecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resplandeciera" ; "resplandeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resplandecieras" ; "resplandecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resplandeciera" ; "resplandeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resplandeciéramos" ; "resplandeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resplandecierais" ; "resplandecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resplandecieran" ; "resplandeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "resplandecí" ;--# notpresent
    VP (Pret Sg P2) => "resplandeciste" ;--# notpresent
    VP (Pret Sg P3) => "resplandeció" ;--# notpresent
    VP (Pret Pl P1) => "resplandecimos" ;--# notpresent
    VP (Pret Pl P2) => "resplandecisteis" ;--# notpresent
    VP (Pret Pl P3) => "resplandecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resplandeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resplandecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resplandecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "resplandeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resplandeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resplandecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resplandeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resplandecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resplandeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resplandeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resplandeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resplandecieren" ;--# notpresent
    VP (Cond Sg P1) => "resplandecería" ;--# notpresent
    VP (Cond Sg P2) => "resplandecerías" ;--# notpresent
    VP (Cond Sg P3) => "resplandecería" ;--# notpresent
    VP (Cond Pl P1) => "resplandeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "resplandeceríais" ;--# notpresent
    VP (Cond Pl P3) => "resplandecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resplandece" ;
    VP (Imp Sg P3) => "resplandezca" ;
    VP (Imp Pl P1) => "resplandezcamos" ;
    VP (Imp Pl P2) => "resplandeced" ;
    VP (Imp Pl P3) => "resplandezcan" ;
    VP (Pass Sg Masc) => "resplandecido" ;
    VP (Pass Sg Fem) => "resplandecida" ;
    VP (Pass Pl Masc) => "resplandecidos" ;
    VP (Pass Pl Fem) => "resplandecidas"
    }
  } ;

lin restablecer_V = verboV 
 {s = table {
    VI Infn => "restablecer" ;
    VI Ger => "restableciendo" ;
    VI Part => "restablecido" ;
    VP (Pres Ind Sg P1) => "restablezco" ;
    VP (Pres Ind Sg P2) => "restableces" ;
    VP (Pres Ind Sg P3) => "restablece" ;
    VP (Pres Ind Pl P1) => "restablecemos" ;
    VP (Pres Ind Pl P2) => "restablecéis" ;
    VP (Pres Ind Pl P3) => "restablecen" ;
    VP (Pres Subj Sg P1) => "restablezca" ;
    VP (Pres Subj Sg P2) => "restablezcas" ;
    VP (Pres Subj Sg P3) => "restablezca" ;
    VP (Pres Subj Pl P1) => "restablezcamos" ;
    VP (Pres Subj Pl P2) => "restablezcáis" ;
    VP (Pres Subj Pl P3) => "restablezcan" ;
    VP (Impf Ind Sg P1) => "restablecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "restablecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "restablecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "restablecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "restablecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "restablecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"restableciera" ; "restableciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"restablecieras" ; "restablecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"restableciera" ; "restableciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"restableciéramos" ; "restableciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"restablecierais" ; "restablecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"restablecieran" ; "restableciesen"} ;--# notpresent
    VP (Pret Sg P1) => "restablecí" ;--# notpresent
    VP (Pret Sg P2) => "restableciste" ;--# notpresent
    VP (Pret Sg P3) => "restableció" ;--# notpresent
    VP (Pret Pl P1) => "restablecimos" ;--# notpresent
    VP (Pret Pl P2) => "restablecisteis" ;--# notpresent
    VP (Pret Pl P3) => "restablecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "restableceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "restablecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "restablecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "restableceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "restableceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "restablecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "restableciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "restablecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "restableciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "restableciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "restableciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "restablecieren" ;--# notpresent
    VP (Cond Sg P1) => "restablecería" ;--# notpresent
    VP (Cond Sg P2) => "restablecerías" ;--# notpresent
    VP (Cond Sg P3) => "restablecería" ;--# notpresent
    VP (Cond Pl P1) => "restableceríamos" ;--# notpresent
    VP (Cond Pl P2) => "restableceríais" ;--# notpresent
    VP (Cond Pl P3) => "restablecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "restablece" ;
    VP (Imp Sg P3) => "restablezca" ;
    VP (Imp Pl P1) => "restablezcamos" ;
    VP (Imp Pl P2) => "restableced" ;
    VP (Imp Pl P3) => "restablezcan" ;
    VP (Pass Sg Masc) => "restablecido" ;
    VP (Pass Sg Fem) => "restablecida" ;
    VP (Pass Pl Masc) => "restablecidos" ;
    VP (Pass Pl Fem) => "restablecidas"
    }
  } ;

lin retallecer_V = verboV 
 {s = table {
    VI Infn => "retallecer" ;
    VI Ger => "retalleciendo" ;
    VI Part => "retallecido" ;
    VP (Pres Ind Sg P1) => "retallezco" ;
    VP (Pres Ind Sg P2) => "retalleces" ;
    VP (Pres Ind Sg P3) => "retallece" ;
    VP (Pres Ind Pl P1) => "retallecemos" ;
    VP (Pres Ind Pl P2) => "retallecéis" ;
    VP (Pres Ind Pl P3) => "retallecen" ;
    VP (Pres Subj Sg P1) => "retallezca" ;
    VP (Pres Subj Sg P2) => "retallezcas" ;
    VP (Pres Subj Sg P3) => "retallezca" ;
    VP (Pres Subj Pl P1) => "retallezcamos" ;
    VP (Pres Subj Pl P2) => "retallezcáis" ;
    VP (Pres Subj Pl P3) => "retallezcan" ;
    VP (Impf Ind Sg P1) => "retallecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retallecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retallecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retallecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retallecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retallecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retalleciera" ; "retalleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retallecieras" ; "retallecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retalleciera" ; "retalleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retalleciéramos" ; "retalleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retallecierais" ; "retallecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retallecieran" ; "retalleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "retallecí" ;--# notpresent
    VP (Pret Sg P2) => "retalleciste" ;--# notpresent
    VP (Pret Sg P3) => "retalleció" ;--# notpresent
    VP (Pret Pl P1) => "retallecimos" ;--# notpresent
    VP (Pret Pl P2) => "retallecisteis" ;--# notpresent
    VP (Pret Pl P3) => "retallecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retalleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retallecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retallecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retalleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retalleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retallecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retalleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retallecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retalleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retalleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retalleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retallecieren" ;--# notpresent
    VP (Cond Sg P1) => "retallecería" ;--# notpresent
    VP (Cond Sg P2) => "retallecerías" ;--# notpresent
    VP (Cond Sg P3) => "retallecería" ;--# notpresent
    VP (Cond Pl P1) => "retalleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "retalleceríais" ;--# notpresent
    VP (Cond Pl P3) => "retallecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retallece" ;
    VP (Imp Sg P3) => "retallezca" ;
    VP (Imp Pl P1) => "retallezcamos" ;
    VP (Imp Pl P2) => "retalleced" ;
    VP (Imp Pl P3) => "retallezcan" ;
    VP (Pass Sg Masc) => "retallecido" ;
    VP (Pass Sg Fem) => "retallecida" ;
    VP (Pass Pl Masc) => "retallecidos" ;
    VP (Pass Pl Fem) => "retallecidas"
    }
  } ;

lin retoñecer_V = verboV 
 {s = table {
    VI Infn => "retoñecer" ;
    VI Ger => "retoñeciendo" ;
    VI Part => "retoñecido" ;
    VP (Pres Ind Sg P1) => "retoñezco" ;
    VP (Pres Ind Sg P2) => "retoñeces" ;
    VP (Pres Ind Sg P3) => "retoñece" ;
    VP (Pres Ind Pl P1) => "retoñecemos" ;
    VP (Pres Ind Pl P2) => "retoñecéis" ;
    VP (Pres Ind Pl P3) => "retoñecen" ;
    VP (Pres Subj Sg P1) => "retoñezca" ;
    VP (Pres Subj Sg P2) => "retoñezcas" ;
    VP (Pres Subj Sg P3) => "retoñezca" ;
    VP (Pres Subj Pl P1) => "retoñezcamos" ;
    VP (Pres Subj Pl P2) => "retoñezcáis" ;
    VP (Pres Subj Pl P3) => "retoñezcan" ;
    VP (Impf Ind Sg P1) => "retoñecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retoñecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retoñecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retoñecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retoñecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retoñecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retoñeciera" ; "retoñeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retoñecieras" ; "retoñecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retoñeciera" ; "retoñeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retoñeciéramos" ; "retoñeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retoñecierais" ; "retoñecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retoñecieran" ; "retoñeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "retoñecí" ;--# notpresent
    VP (Pret Sg P2) => "retoñeciste" ;--# notpresent
    VP (Pret Sg P3) => "retoñeció" ;--# notpresent
    VP (Pret Pl P1) => "retoñecimos" ;--# notpresent
    VP (Pret Pl P2) => "retoñecisteis" ;--# notpresent
    VP (Pret Pl P3) => "retoñecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retoñeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retoñecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retoñecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retoñeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retoñeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retoñecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retoñeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retoñecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retoñeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retoñeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retoñeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retoñecieren" ;--# notpresent
    VP (Cond Sg P1) => "retoñecería" ;--# notpresent
    VP (Cond Sg P2) => "retoñecerías" ;--# notpresent
    VP (Cond Sg P3) => "retoñecería" ;--# notpresent
    VP (Cond Pl P1) => "retoñeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "retoñeceríais" ;--# notpresent
    VP (Cond Pl P3) => "retoñecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retoñece" ;
    VP (Imp Sg P3) => "retoñezca" ;
    VP (Imp Pl P1) => "retoñezcamos" ;
    VP (Imp Pl P2) => "retoñeced" ;
    VP (Imp Pl P3) => "retoñezcan" ;
    VP (Pass Sg Masc) => "retoñecido" ;
    VP (Pass Sg Fem) => "retoñecida" ;
    VP (Pass Pl Masc) => "retoñecidos" ;
    VP (Pass Pl Fem) => "retoñecidas"
    }
  } ;

lin revejecer_V = verboV 
 {s = table {
    VI Infn => "revejecer" ;
    VI Ger => "revejeciendo" ;
    VI Part => "revejecido" ;
    VP (Pres Ind Sg P1) => "revejezco" ;
    VP (Pres Ind Sg P2) => "revejeces" ;
    VP (Pres Ind Sg P3) => "revejece" ;
    VP (Pres Ind Pl P1) => "revejecemos" ;
    VP (Pres Ind Pl P2) => "revejecéis" ;
    VP (Pres Ind Pl P3) => "revejecen" ;
    VP (Pres Subj Sg P1) => "revejezca" ;
    VP (Pres Subj Sg P2) => "revejezcas" ;
    VP (Pres Subj Sg P3) => "revejezca" ;
    VP (Pres Subj Pl P1) => "revejezcamos" ;
    VP (Pres Subj Pl P2) => "revejezcáis" ;
    VP (Pres Subj Pl P3) => "revejezcan" ;
    VP (Impf Ind Sg P1) => "revejecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "revejecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "revejecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "revejecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revejecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revejecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revejeciera" ; "revejeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revejecieras" ; "revejecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revejeciera" ; "revejeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revejeciéramos" ; "revejeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revejecierais" ; "revejecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revejecieran" ; "revejeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "revejecí" ;--# notpresent
    VP (Pret Sg P2) => "revejeciste" ;--# notpresent
    VP (Pret Sg P3) => "revejeció" ;--# notpresent
    VP (Pret Pl P1) => "revejecimos" ;--# notpresent
    VP (Pret Pl P2) => "revejecisteis" ;--# notpresent
    VP (Pret Pl P3) => "revejecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revejeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revejecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revejecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "revejeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revejeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revejecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revejeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revejecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "revejeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "revejeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revejeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revejecieren" ;--# notpresent
    VP (Cond Sg P1) => "revejecería" ;--# notpresent
    VP (Cond Sg P2) => "revejecerías" ;--# notpresent
    VP (Cond Sg P3) => "revejecería" ;--# notpresent
    VP (Cond Pl P1) => "revejeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "revejeceríais" ;--# notpresent
    VP (Cond Pl P3) => "revejecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revejece" ;
    VP (Imp Sg P3) => "revejezca" ;
    VP (Imp Pl P1) => "revejezcamos" ;
    VP (Imp Pl P2) => "revejeced" ;
    VP (Imp Pl P3) => "revejezcan" ;
    VP (Pass Sg Masc) => "revejecido" ;
    VP (Pass Sg Fem) => "revejecida" ;
    VP (Pass Pl Masc) => "revejecidos" ;
    VP (Pass Pl Fem) => "revejecidas"
    }
  } ;

lin reverdecer_V = verboV 
 {s = table {
    VI Infn => "reverdecer" ;
    VI Ger => "reverdeciendo" ;
    VI Part => "reverdecido" ;
    VP (Pres Ind Sg P1) => "reverdezco" ;
    VP (Pres Ind Sg P2) => "reverdeces" ;
    VP (Pres Ind Sg P3) => "reverdece" ;
    VP (Pres Ind Pl P1) => "reverdecemos" ;
    VP (Pres Ind Pl P2) => "reverdecéis" ;
    VP (Pres Ind Pl P3) => "reverdecen" ;
    VP (Pres Subj Sg P1) => "reverdezca" ;
    VP (Pres Subj Sg P2) => "reverdezcas" ;
    VP (Pres Subj Sg P3) => "reverdezca" ;
    VP (Pres Subj Pl P1) => "reverdezcamos" ;
    VP (Pres Subj Pl P2) => "reverdezcáis" ;
    VP (Pres Subj Pl P3) => "reverdezcan" ;
    VP (Impf Ind Sg P1) => "reverdecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reverdecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reverdecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reverdecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reverdecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reverdecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reverdeciera" ; "reverdeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reverdecieras" ; "reverdecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reverdeciera" ; "reverdeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reverdeciéramos" ; "reverdeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reverdecierais" ; "reverdecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reverdecieran" ; "reverdeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "reverdecí" ;--# notpresent
    VP (Pret Sg P2) => "reverdeciste" ;--# notpresent
    VP (Pret Sg P3) => "reverdeció" ;--# notpresent
    VP (Pret Pl P1) => "reverdecimos" ;--# notpresent
    VP (Pret Pl P2) => "reverdecisteis" ;--# notpresent
    VP (Pret Pl P3) => "reverdecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reverdeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reverdecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reverdecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reverdeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reverdeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reverdecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reverdeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reverdecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reverdeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reverdeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reverdeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reverdecieren" ;--# notpresent
    VP (Cond Sg P1) => "reverdecería" ;--# notpresent
    VP (Cond Sg P2) => "reverdecerías" ;--# notpresent
    VP (Cond Sg P3) => "reverdecería" ;--# notpresent
    VP (Cond Pl P1) => "reverdeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "reverdeceríais" ;--# notpresent
    VP (Cond Pl P3) => "reverdecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reverdece" ;
    VP (Imp Sg P3) => "reverdezca" ;
    VP (Imp Pl P1) => "reverdezcamos" ;
    VP (Imp Pl P2) => "reverdeced" ;
    VP (Imp Pl P3) => "reverdezcan" ;
    VP (Pass Sg Masc) => "reverdecido" ;
    VP (Pass Sg Fem) => "reverdecida" ;
    VP (Pass Pl Masc) => "reverdecidos" ;
    VP (Pass Pl Fem) => "reverdecidas"
    }
  } ;

lin robustecer_V = verboV 
 {s = table {
    VI Infn => "robustecer" ;
    VI Ger => "robusteciendo" ;
    VI Part => "robustecido" ;
    VP (Pres Ind Sg P1) => "robustezco" ;
    VP (Pres Ind Sg P2) => "robusteces" ;
    VP (Pres Ind Sg P3) => "robustece" ;
    VP (Pres Ind Pl P1) => "robustecemos" ;
    VP (Pres Ind Pl P2) => "robustecéis" ;
    VP (Pres Ind Pl P3) => "robustecen" ;
    VP (Pres Subj Sg P1) => "robustezca" ;
    VP (Pres Subj Sg P2) => "robustezcas" ;
    VP (Pres Subj Sg P3) => "robustezca" ;
    VP (Pres Subj Pl P1) => "robustezcamos" ;
    VP (Pres Subj Pl P2) => "robustezcáis" ;
    VP (Pres Subj Pl P3) => "robustezcan" ;
    VP (Impf Ind Sg P1) => "robustecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "robustecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "robustecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "robustecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "robustecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "robustecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"robusteciera" ; "robusteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"robustecieras" ; "robustecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"robusteciera" ; "robusteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"robusteciéramos" ; "robusteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"robustecierais" ; "robustecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"robustecieran" ; "robusteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "robustecí" ;--# notpresent
    VP (Pret Sg P2) => "robusteciste" ;--# notpresent
    VP (Pret Sg P3) => "robusteció" ;--# notpresent
    VP (Pret Pl P1) => "robustecimos" ;--# notpresent
    VP (Pret Pl P2) => "robustecisteis" ;--# notpresent
    VP (Pret Pl P3) => "robustecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "robusteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "robustecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "robustecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "robusteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "robusteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "robustecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "robusteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "robustecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "robusteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "robusteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "robusteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "robustecieren" ;--# notpresent
    VP (Cond Sg P1) => "robustecería" ;--# notpresent
    VP (Cond Sg P2) => "robustecerías" ;--# notpresent
    VP (Cond Sg P3) => "robustecería" ;--# notpresent
    VP (Cond Pl P1) => "robusteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "robusteceríais" ;--# notpresent
    VP (Cond Pl P3) => "robustecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "robustece" ;
    VP (Imp Sg P3) => "robustezca" ;
    VP (Imp Pl P1) => "robustezcamos" ;
    VP (Imp Pl P2) => "robusteced" ;
    VP (Imp Pl P3) => "robustezcan" ;
    VP (Pass Sg Masc) => "robustecido" ;
    VP (Pass Sg Fem) => "robustecida" ;
    VP (Pass Pl Masc) => "robustecidos" ;
    VP (Pass Pl Fem) => "robustecidas"
    }
  } ;

lin sobrecrecer_V = verboV 
 {s = table {
    VI Infn => "sobrecrecer" ;
    VI Ger => "sobrecreciendo" ;
    VI Part => "sobrecrecido" ;
    VP (Pres Ind Sg P1) => "sobrecrezco" ;
    VP (Pres Ind Sg P2) => "sobrecreces" ;
    VP (Pres Ind Sg P3) => "sobrecrece" ;
    VP (Pres Ind Pl P1) => "sobrecrecemos" ;
    VP (Pres Ind Pl P2) => "sobrecrecéis" ;
    VP (Pres Ind Pl P3) => "sobrecrecen" ;
    VP (Pres Subj Sg P1) => "sobrecrezca" ;
    VP (Pres Subj Sg P2) => "sobrecrezcas" ;
    VP (Pres Subj Sg P3) => "sobrecrezca" ;
    VP (Pres Subj Pl P1) => "sobrecrezcamos" ;
    VP (Pres Subj Pl P2) => "sobrecrezcáis" ;
    VP (Pres Subj Pl P3) => "sobrecrezcan" ;
    VP (Impf Ind Sg P1) => "sobrecrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrecrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrecrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrecrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrecrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrecrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrecreciera" ; "sobrecreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrecrecieras" ; "sobrecrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrecreciera" ; "sobrecreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrecreciéramos" ; "sobrecreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrecrecierais" ; "sobrecrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrecrecieran" ; "sobrecreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrecrecí" ;--# notpresent
    VP (Pret Sg P2) => "sobrecreciste" ;--# notpresent
    VP (Pret Sg P3) => "sobrecreció" ;--# notpresent
    VP (Pret Pl P1) => "sobrecrecimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrecrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrecrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrecreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrecrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrecrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrecreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrecreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrecrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrecreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrecrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrecreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrecreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrecreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrecrecieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrecrecería" ;--# notpresent
    VP (Cond Sg P2) => "sobrecrecerías" ;--# notpresent
    VP (Cond Sg P3) => "sobrecrecería" ;--# notpresent
    VP (Cond Pl P1) => "sobrecreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrecreceríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrecrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrecrece" ;
    VP (Imp Sg P3) => "sobrecrezca" ;
    VP (Imp Pl P1) => "sobrecrezcamos" ;
    VP (Imp Pl P2) => "sobrecreced" ;
    VP (Imp Pl P3) => "sobrecrezcan" ;
    VP (Pass Sg Masc) => "sobrecrecido" ;
    VP (Pass Sg Fem) => "sobrecrecida" ;
    VP (Pass Pl Masc) => "sobrecrecidos" ;
    VP (Pass Pl Fem) => "sobrecrecidas"
    }
  } ;

lin tallecer_V = verboV 
 {s = table {
    VI Infn => "tallecer" ;
    VI Ger => "talleciendo" ;
    VI Part => "tallecido" ;
    VP (Pres Ind Sg P1) => "tallezco" ;
    VP (Pres Ind Sg P2) => "talleces" ;
    VP (Pres Ind Sg P3) => "tallece" ;
    VP (Pres Ind Pl P1) => "tallecemos" ;
    VP (Pres Ind Pl P2) => "tallecéis" ;
    VP (Pres Ind Pl P3) => "tallecen" ;
    VP (Pres Subj Sg P1) => "tallezca" ;
    VP (Pres Subj Sg P2) => "tallezcas" ;
    VP (Pres Subj Sg P3) => "tallezca" ;
    VP (Pres Subj Pl P1) => "tallezcamos" ;
    VP (Pres Subj Pl P2) => "tallezcáis" ;
    VP (Pres Subj Pl P3) => "tallezcan" ;
    VP (Impf Ind Sg P1) => "tallecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tallecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tallecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tallecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tallecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tallecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"talleciera" ; "talleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tallecieras" ; "tallecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"talleciera" ; "talleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"talleciéramos" ; "talleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tallecierais" ; "tallecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tallecieran" ; "talleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "tallecí" ;--# notpresent
    VP (Pret Sg P2) => "talleciste" ;--# notpresent
    VP (Pret Sg P3) => "talleció" ;--# notpresent
    VP (Pret Pl P1) => "tallecimos" ;--# notpresent
    VP (Pret Pl P2) => "tallecisteis" ;--# notpresent
    VP (Pret Pl P3) => "tallecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "talleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tallecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tallecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "talleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "talleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tallecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "talleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tallecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "talleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "talleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "talleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tallecieren" ;--# notpresent
    VP (Cond Sg P1) => "tallecería" ;--# notpresent
    VP (Cond Sg P2) => "tallecerías" ;--# notpresent
    VP (Cond Sg P3) => "tallecería" ;--# notpresent
    VP (Cond Pl P1) => "talleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "talleceríais" ;--# notpresent
    VP (Cond Pl P3) => "tallecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tallece" ;
    VP (Imp Sg P3) => "tallezca" ;
    VP (Imp Pl P1) => "tallezcamos" ;
    VP (Imp Pl P2) => "talleced" ;
    VP (Imp Pl P3) => "tallezcan" ;
    VP (Pass Sg Masc) => "tallecido" ;
    VP (Pass Sg Fem) => "tallecida" ;
    VP (Pass Pl Masc) => "tallecidos" ;
    VP (Pass Pl Fem) => "tallecidas"
    }
  } ;

lin tardecer_V = verboV 
 {s = table {
    VI Infn => "tardecer" ;
    VI Ger => "tardeciendo" ;
    VI Part => "tardecido" ;
    VP (Pres Ind Sg P1) => "tardezco" ;
    VP (Pres Ind Sg P2) => "tardeces" ;
    VP (Pres Ind Sg P3) => "tardece" ;
    VP (Pres Ind Pl P1) => "tardecemos" ;
    VP (Pres Ind Pl P2) => "tardecéis" ;
    VP (Pres Ind Pl P3) => "tardecen" ;
    VP (Pres Subj Sg P1) => "tardezca" ;
    VP (Pres Subj Sg P2) => "tardezcas" ;
    VP (Pres Subj Sg P3) => "tardezca" ;
    VP (Pres Subj Pl P1) => "tardezcamos" ;
    VP (Pres Subj Pl P2) => "tardezcáis" ;
    VP (Pres Subj Pl P3) => "tardezcan" ;
    VP (Impf Ind Sg P1) => "tardecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tardecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tardecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tardecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tardecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tardecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tardeciera" ; "tardeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tardecieras" ; "tardecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tardeciera" ; "tardeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tardeciéramos" ; "tardeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tardecierais" ; "tardecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tardecieran" ; "tardeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "tardecí" ;--# notpresent
    VP (Pret Sg P2) => "tardeciste" ;--# notpresent
    VP (Pret Sg P3) => "tardeció" ;--# notpresent
    VP (Pret Pl P1) => "tardecimos" ;--# notpresent
    VP (Pret Pl P2) => "tardecisteis" ;--# notpresent
    VP (Pret Pl P3) => "tardecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tardeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tardecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tardecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "tardeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tardeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tardecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tardeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tardecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tardeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tardeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tardeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tardecieren" ;--# notpresent
    VP (Cond Sg P1) => "tardecería" ;--# notpresent
    VP (Cond Sg P2) => "tardecerías" ;--# notpresent
    VP (Cond Sg P3) => "tardecería" ;--# notpresent
    VP (Cond Pl P1) => "tardeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "tardeceríais" ;--# notpresent
    VP (Cond Pl P3) => "tardecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tardece" ;
    VP (Imp Sg P3) => "tardezca" ;
    VP (Imp Pl P1) => "tardezcamos" ;
    VP (Imp Pl P2) => "tardeced" ;
    VP (Imp Pl P3) => "tardezcan" ;
    VP (Pass Sg Masc) => "tardecido" ;
    VP (Pass Sg Fem) => "tardecida" ;
    VP (Pass Pl Masc) => "tardecidos" ;
    VP (Pass Pl Fem) => "tardecidas"
    }
  } ;

lin trasparecer_V = verboV 
 {s = table {
    VI Infn => "trasparecer" ;
    VI Ger => "traspareciendo" ;
    VI Part => "trasparecido" ;
    VP (Pres Ind Sg P1) => "trasparezco" ;
    VP (Pres Ind Sg P2) => "traspareces" ;
    VP (Pres Ind Sg P3) => "trasparece" ;
    VP (Pres Ind Pl P1) => "trasparecemos" ;
    VP (Pres Ind Pl P2) => "trasparecéis" ;
    VP (Pres Ind Pl P3) => "trasparecen" ;
    VP (Pres Subj Sg P1) => "trasparezca" ;
    VP (Pres Subj Sg P2) => "trasparezcas" ;
    VP (Pres Subj Sg P3) => "trasparezca" ;
    VP (Pres Subj Pl P1) => "trasparezcamos" ;
    VP (Pres Subj Pl P2) => "trasparezcáis" ;
    VP (Pres Subj Pl P3) => "trasparezcan" ;
    VP (Impf Ind Sg P1) => "trasparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"traspareciera" ; "traspareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasparecieras" ; "trasparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"traspareciera" ; "traspareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"traspareciéramos" ; "traspareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasparecierais" ; "trasparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasparecieran" ; "traspareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "trasparecí" ;--# notpresent
    VP (Pret Sg P2) => "traspareciste" ;--# notpresent
    VP (Pret Sg P3) => "traspareció" ;--# notpresent
    VP (Pret Pl P1) => "trasparecimos" ;--# notpresent
    VP (Pret Pl P2) => "trasparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "trasparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "traspareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "traspareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "traspareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "traspareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "traspareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "traspareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "traspareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasparecieren" ;--# notpresent
    VP (Cond Sg P1) => "trasparecería" ;--# notpresent
    VP (Cond Sg P2) => "trasparecerías" ;--# notpresent
    VP (Cond Sg P3) => "trasparecería" ;--# notpresent
    VP (Cond Pl P1) => "traspareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "traspareceríais" ;--# notpresent
    VP (Cond Pl P3) => "trasparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasparece" ;
    VP (Imp Sg P3) => "trasparezca" ;
    VP (Imp Pl P1) => "trasparezcamos" ;
    VP (Imp Pl P2) => "traspareced" ;
    VP (Imp Pl P3) => "trasparezcan" ;
    VP (Pass Sg Masc) => "trasparecido" ;
    VP (Pass Sg Fem) => "trasparecida" ;
    VP (Pass Pl Masc) => "trasparecidos" ;
    VP (Pass Pl Fem) => "trasparecidas"
    }
  } ;

lin tullecer_V = verboV 
 {s = table {
    VI Infn => "tullecer" ;
    VI Ger => "tulleciendo" ;
    VI Part => "tullecido" ;
    VP (Pres Ind Sg P1) => "tullezco" ;
    VP (Pres Ind Sg P2) => "tulleces" ;
    VP (Pres Ind Sg P3) => "tullece" ;
    VP (Pres Ind Pl P1) => "tullecemos" ;
    VP (Pres Ind Pl P2) => "tullecéis" ;
    VP (Pres Ind Pl P3) => "tullecen" ;
    VP (Pres Subj Sg P1) => "tullezca" ;
    VP (Pres Subj Sg P2) => "tullezcas" ;
    VP (Pres Subj Sg P3) => "tullezca" ;
    VP (Pres Subj Pl P1) => "tullezcamos" ;
    VP (Pres Subj Pl P2) => "tullezcáis" ;
    VP (Pres Subj Pl P3) => "tullezcan" ;
    VP (Impf Ind Sg P1) => "tullecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tullecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tullecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tullecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tullecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tullecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tulleciera" ; "tulleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tullecieras" ; "tullecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tulleciera" ; "tulleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tulleciéramos" ; "tulleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tullecierais" ; "tullecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tullecieran" ; "tulleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "tullecí" ;--# notpresent
    VP (Pret Sg P2) => "tulleciste" ;--# notpresent
    VP (Pret Sg P3) => "tulleció" ;--# notpresent
    VP (Pret Pl P1) => "tullecimos" ;--# notpresent
    VP (Pret Pl P2) => "tullecisteis" ;--# notpresent
    VP (Pret Pl P3) => "tullecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tulleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tullecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tullecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "tulleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tulleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tullecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tulleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tullecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tulleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tulleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tulleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tullecieren" ;--# notpresent
    VP (Cond Sg P1) => "tullecería" ;--# notpresent
    VP (Cond Sg P2) => "tullecerías" ;--# notpresent
    VP (Cond Sg P3) => "tullecería" ;--# notpresent
    VP (Cond Pl P1) => "tulleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "tulleceríais" ;--# notpresent
    VP (Cond Pl P3) => "tullecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tullece" ;
    VP (Imp Sg P3) => "tullezca" ;
    VP (Imp Pl P1) => "tullezcamos" ;
    VP (Imp Pl P2) => "tulleced" ;
    VP (Imp Pl P3) => "tullezcan" ;
    VP (Pass Sg Masc) => "tullecido" ;
    VP (Pass Sg Fem) => "tullecida" ;
    VP (Pass Pl Masc) => "tullecidos" ;
    VP (Pass Pl Fem) => "tullecidas"
    }
  } ;

lin verdecer_V = verboV 
 {s = table {
    VI Infn => "verdecer" ;
    VI Ger => "verdeciendo" ;
    VI Part => "verdecido" ;
    VP (Pres Ind Sg P1) => "verdezco" ;
    VP (Pres Ind Sg P2) => "verdeces" ;
    VP (Pres Ind Sg P3) => "verdece" ;
    VP (Pres Ind Pl P1) => "verdecemos" ;
    VP (Pres Ind Pl P2) => "verdecéis" ;
    VP (Pres Ind Pl P3) => "verdecen" ;
    VP (Pres Subj Sg P1) => "verdezca" ;
    VP (Pres Subj Sg P2) => "verdezcas" ;
    VP (Pres Subj Sg P3) => "verdezca" ;
    VP (Pres Subj Pl P1) => "verdezcamos" ;
    VP (Pres Subj Pl P2) => "verdezcáis" ;
    VP (Pres Subj Pl P3) => "verdezcan" ;
    VP (Impf Ind Sg P1) => "verdecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "verdecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "verdecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "verdecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "verdecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "verdecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"verdeciera" ; "verdeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"verdecieras" ; "verdecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"verdeciera" ; "verdeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"verdeciéramos" ; "verdeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"verdecierais" ; "verdecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"verdecieran" ; "verdeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "verdecí" ;--# notpresent
    VP (Pret Sg P2) => "verdeciste" ;--# notpresent
    VP (Pret Sg P3) => "verdeció" ;--# notpresent
    VP (Pret Pl P1) => "verdecimos" ;--# notpresent
    VP (Pret Pl P2) => "verdecisteis" ;--# notpresent
    VP (Pret Pl P3) => "verdecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "verdeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "verdecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "verdecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "verdeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "verdeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "verdecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "verdeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "verdecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "verdeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "verdeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "verdeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "verdecieren" ;--# notpresent
    VP (Cond Sg P1) => "verdecería" ;--# notpresent
    VP (Cond Sg P2) => "verdecerías" ;--# notpresent
    VP (Cond Sg P3) => "verdecería" ;--# notpresent
    VP (Cond Pl P1) => "verdeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "verdeceríais" ;--# notpresent
    VP (Cond Pl P3) => "verdecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "verdece" ;
    VP (Imp Sg P3) => "verdezca" ;
    VP (Imp Pl P1) => "verdezcamos" ;
    VP (Imp Pl P2) => "verdeced" ;
    VP (Imp Pl P3) => "verdezcan" ;
    VP (Pass Sg Masc) => "verdecido" ;
    VP (Pass Sg Fem) => "verdecida" ;
    VP (Pass Pl Masc) => "verdecidos" ;
    VP (Pass Pl Fem) => "verdecidas"
    }
  } ;

lin aplacer_V = verboV 
 {s = table {
    VI Infn => "aplacer" ;
    VI Ger => "aplaciendo" ;
    VI Part => "aplacido" ;
    VP (Pres Ind Sg P1) => "aplazco" ;
    VP (Pres Ind Sg P2) => "aplaces" ;
    VP (Pres Ind Sg P3) => "aplace" ;
    VP (Pres Ind Pl P1) => "aplacemos" ;
    VP (Pres Ind Pl P2) => "aplacéis" ;
    VP (Pres Ind Pl P3) => "aplacen" ;
    VP (Pres Subj Sg P1) => "aplazca" ;
    VP (Pres Subj Sg P2) => "aplazcas" ;
    VP (Pres Subj Sg P3) => variants {"aplazca" ; "plegue" ; "plega"} ;
    VP (Pres Subj Pl P1) => "aplazcamos" ;
    VP (Pres Subj Pl P2) => "aplazcáis" ;
    VP (Pres Subj Pl P3) => "aplazcan" ;
    VP (Impf Ind Sg P1) => "aplacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aplacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aplacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aplacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aplacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aplacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aplaciera" ; "aplaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aplacieras" ; "aplacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aplaciera" ; "aplaciese" ; "pluguiera" ; "pluguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aplaciéramos" ; "aplaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aplacierais" ; "aplacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aplacieran" ; "aplaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "aplací" ;--# notpresent
    VP (Pret Sg P2) => "aplaciste" ;--# notpresent
    VP (Pret Sg P3) => variants {"aplació" ; "plugo"} ;--# notpresent
    VP (Pret Pl P1) => "aplacimos" ;--# notpresent
    VP (Pret Pl P2) => "aplacisteis" ;--# notpresent
    VP (Pret Pl P3) => variants {"aplacieron" ; "pluguieron"} ;--# notpresent
    VP (Fut Ind Sg P1) => "aplaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aplacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aplacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aplaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aplaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aplacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aplaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aplacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => variants {"aplaciere" ; "pluguiere"} ;--# notpresent
    VP (Fut Subj Pl P1) => "aplaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aplaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aplacieren" ;--# notpresent
    VP (Cond Sg P1) => "aplacería" ;--# notpresent
    VP (Cond Sg P2) => "aplacerías" ;--# notpresent
    VP (Cond Sg P3) => "aplacería" ;--# notpresent
    VP (Cond Pl P1) => "aplaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "aplaceríais" ;--# notpresent
    VP (Cond Pl P3) => "aplacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aplace" ;
    VP (Imp Sg P3) => "aplazca" ;
    VP (Imp Pl P1) => "aplazcamos" ;
    VP (Imp Pl P2) => "aplaced" ;
    VP (Imp Pl P3) => "aplazcan" ;
    VP (Pass Sg Masc) => "aplacido" ;
    VP (Pass Sg Fem) => "aplacida" ;
    VP (Pass Pl Masc) => "aplacidos" ;
    VP (Pass Pl Fem) => "aplacidas"
    }
  } ;

lin complacer_V = verboV 
 {s = table {
    VI Infn => "complacer" ;
    VI Ger => "complaciendo" ;
    VI Part => "complacido" ;
    VP (Pres Ind Sg P1) => "complazco" ;
    VP (Pres Ind Sg P2) => "complaces" ;
    VP (Pres Ind Sg P3) => "complace" ;
    VP (Pres Ind Pl P1) => "complacemos" ;
    VP (Pres Ind Pl P2) => "complacéis" ;
    VP (Pres Ind Pl P3) => "complacen" ;
    VP (Pres Subj Sg P1) => "complazca" ;
    VP (Pres Subj Sg P2) => "complazcas" ;
    VP (Pres Subj Sg P3) => variants {"complazca" ; "plegue" ; "plega"} ;
    VP (Pres Subj Pl P1) => "complazcamos" ;
    VP (Pres Subj Pl P2) => "complazcáis" ;
    VP (Pres Subj Pl P3) => "complazcan" ;
    VP (Impf Ind Sg P1) => "complacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "complacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "complacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "complacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "complacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "complacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"complaciera" ; "complaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"complacieras" ; "complacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"complaciera" ; "complaciese" ; "pluguiera" ; "pluguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"complaciéramos" ; "complaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"complacierais" ; "complacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"complacieran" ; "complaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "complací" ;--# notpresent
    VP (Pret Sg P2) => "complaciste" ;--# notpresent
    VP (Pret Sg P3) => variants {"complació" ; "plugo"} ;--# notpresent
    VP (Pret Pl P1) => "complacimos" ;--# notpresent
    VP (Pret Pl P2) => "complacisteis" ;--# notpresent
    VP (Pret Pl P3) => variants {"complacieron" ; "pluguieron"} ;--# notpresent
    VP (Fut Ind Sg P1) => "complaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "complacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "complacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "complaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "complaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "complacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "complaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "complacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => variants {"complaciere" ; "pluguiere"} ;--# notpresent
    VP (Fut Subj Pl P1) => "complaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "complaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "complacieren" ;--# notpresent
    VP (Cond Sg P1) => "complacería" ;--# notpresent
    VP (Cond Sg P2) => "complacerías" ;--# notpresent
    VP (Cond Sg P3) => "complacería" ;--# notpresent
    VP (Cond Pl P1) => "complaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "complaceríais" ;--# notpresent
    VP (Cond Pl P3) => "complacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "complace" ;
    VP (Imp Sg P3) => "complazca" ;
    VP (Imp Pl P1) => "complazcamos" ;
    VP (Imp Pl P2) => "complaced" ;
    VP (Imp Pl P3) => "complazcan" ;
    VP (Pass Sg Masc) => "complacido" ;
    VP (Pass Sg Fem) => "complacida" ;
    VP (Pass Pl Masc) => "complacidos" ;
    VP (Pass Pl Fem) => "complacidas"
    }
  } ;

lin desplacer_V = verboV 
 {s = table {
    VI Infn => "desplacer" ;
    VI Ger => "desplaciendo" ;
    VI Part => "desplacido" ;
    VP (Pres Ind Sg P1) => "desplazco" ;
    VP (Pres Ind Sg P2) => "desplaces" ;
    VP (Pres Ind Sg P3) => "desplace" ;
    VP (Pres Ind Pl P1) => "desplacemos" ;
    VP (Pres Ind Pl P2) => "desplacéis" ;
    VP (Pres Ind Pl P3) => "desplacen" ;
    VP (Pres Subj Sg P1) => "desplazca" ;
    VP (Pres Subj Sg P2) => "desplazcas" ;
    VP (Pres Subj Sg P3) => variants {"desplazca" ; "plegue" ; "plega"} ;
    VP (Pres Subj Pl P1) => "desplazcamos" ;
    VP (Pres Subj Pl P2) => "desplazcáis" ;
    VP (Pres Subj Pl P3) => "desplazcan" ;
    VP (Impf Ind Sg P1) => "desplacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desplacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desplacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desplacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desplacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desplacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desplaciera" ; "desplaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desplacieras" ; "desplacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desplaciera" ; "desplaciese" ; "pluguiera" ; "pluguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desplaciéramos" ; "desplaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desplacierais" ; "desplacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desplacieran" ; "desplaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desplací" ;--# notpresent
    VP (Pret Sg P2) => "desplaciste" ;--# notpresent
    VP (Pret Sg P3) => variants {"desplació" ; "plugo"} ;--# notpresent
    VP (Pret Pl P1) => "desplacimos" ;--# notpresent
    VP (Pret Pl P2) => "desplacisteis" ;--# notpresent
    VP (Pret Pl P3) => variants {"desplacieron" ; "pluguieron"} ;--# notpresent
    VP (Fut Ind Sg P1) => "desplaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desplacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desplacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desplaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desplaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desplacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desplaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desplacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => variants {"desplaciere" ; "pluguiere"} ;--# notpresent
    VP (Fut Subj Pl P1) => "desplaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desplaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desplacieren" ;--# notpresent
    VP (Cond Sg P1) => "desplacería" ;--# notpresent
    VP (Cond Sg P2) => "desplacerías" ;--# notpresent
    VP (Cond Sg P3) => "desplacería" ;--# notpresent
    VP (Cond Pl P1) => "desplaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desplaceríais" ;--# notpresent
    VP (Cond Pl P3) => "desplacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desplace" ;
    VP (Imp Sg P3) => "desplazca" ;
    VP (Imp Pl P1) => "desplazcamos" ;
    VP (Imp Pl P2) => "desplaced" ;
    VP (Imp Pl P3) => "desplazcan" ;
    VP (Pass Sg Masc) => "desplacido" ;
    VP (Pass Sg Fem) => "desplacida" ;
    VP (Pass Pl Masc) => "desplacidos" ;
    VP (Pass Pl Fem) => "desplacidas"
    }
  } ;

lin displacer_V = verboV 
 {s = table {
    VI Infn => "displacer" ;
    VI Ger => "displaciendo" ;
    VI Part => "displacido" ;
    VP (Pres Ind Sg P1) => "displazco" ;
    VP (Pres Ind Sg P2) => "displaces" ;
    VP (Pres Ind Sg P3) => "displace" ;
    VP (Pres Ind Pl P1) => "displacemos" ;
    VP (Pres Ind Pl P2) => "displacéis" ;
    VP (Pres Ind Pl P3) => "displacen" ;
    VP (Pres Subj Sg P1) => "displazca" ;
    VP (Pres Subj Sg P2) => "displazcas" ;
    VP (Pres Subj Sg P3) => variants {"displazca" ; "plegue" ; "plega"} ;
    VP (Pres Subj Pl P1) => "displazcamos" ;
    VP (Pres Subj Pl P2) => "displazcáis" ;
    VP (Pres Subj Pl P3) => "displazcan" ;
    VP (Impf Ind Sg P1) => "displacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "displacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "displacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "displacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "displacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "displacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"displaciera" ; "displaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"displacieras" ; "displacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"displaciera" ; "displaciese" ; "pluguiera" ; "pluguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"displaciéramos" ; "displaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"displacierais" ; "displacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"displacieran" ; "displaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "displací" ;--# notpresent
    VP (Pret Sg P2) => "displaciste" ;--# notpresent
    VP (Pret Sg P3) => variants {"displació" ; "plugo"} ;--# notpresent
    VP (Pret Pl P1) => "displacimos" ;--# notpresent
    VP (Pret Pl P2) => "displacisteis" ;--# notpresent
    VP (Pret Pl P3) => variants {"displacieron" ; "pluguieron"} ;--# notpresent
    VP (Fut Ind Sg P1) => "displaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "displacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "displacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "displaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "displaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "displacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "displaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "displacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => variants {"displaciere" ; "pluguiere"} ;--# notpresent
    VP (Fut Subj Pl P1) => "displaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "displaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "displacieren" ;--# notpresent
    VP (Cond Sg P1) => "displacería" ;--# notpresent
    VP (Cond Sg P2) => "displacerías" ;--# notpresent
    VP (Cond Sg P3) => "displacería" ;--# notpresent
    VP (Cond Pl P1) => "displaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "displaceríais" ;--# notpresent
    VP (Cond Pl P3) => "displacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "displace" ;
    VP (Imp Sg P3) => "displazca" ;
    VP (Imp Pl P1) => "displazcamos" ;
    VP (Imp Pl P2) => "displaced" ;
    VP (Imp Pl P3) => "displazcan" ;
    VP (Pass Sg Masc) => "displacido" ;
    VP (Pass Sg Fem) => "displacida" ;
    VP (Pass Pl Masc) => "displacidos" ;
    VP (Pass Pl Fem) => "displacidas"
    }
  } ;

lin placer_V = verboV 
 {s = table {
    VI Infn => "placer" ;
    VI Ger => "placiendo" ;
    VI Part => "placido" ;
    VP (Pres Ind Sg P1) => "plazco" ;
    VP (Pres Ind Sg P2) => "places" ;
    VP (Pres Ind Sg P3) => "place" ;
    VP (Pres Ind Pl P1) => "placemos" ;
    VP (Pres Ind Pl P2) => "placéis" ;
    VP (Pres Ind Pl P3) => "placen" ;
    VP (Pres Subj Sg P1) => "plazca" ;
    VP (Pres Subj Sg P2) => "plazcas" ;
    VP (Pres Subj Sg P3) => variants {"plazca" ; "plegue" ; "plega"} ;
    VP (Pres Subj Pl P1) => "plazcamos" ;
    VP (Pres Subj Pl P2) => "plazcáis" ;
    VP (Pres Subj Pl P3) => "plazcan" ;
    VP (Impf Ind Sg P1) => "placía" ;--# notpresent
    VP (Impf Ind Sg P2) => "placías" ;--# notpresent
    VP (Impf Ind Sg P3) => "placía" ;--# notpresent
    VP (Impf Ind Pl P1) => "placíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "placíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "placían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"placiera" ; "placiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"placieras" ; "placieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"placiera" ; "placiese" ; "pluguiera" ; "pluguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"placiéramos" ; "placiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"placierais" ; "placieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"placieran" ; "placiesen"} ;--# notpresent
    VP (Pret Sg P1) => "plací" ;--# notpresent
    VP (Pret Sg P2) => "placiste" ;--# notpresent
    VP (Pret Sg P3) => variants {"plació" ; "plugo"} ;--# notpresent
    VP (Pret Pl P1) => "placimos" ;--# notpresent
    VP (Pret Pl P2) => "placisteis" ;--# notpresent
    VP (Pret Pl P3) => variants {"placieron" ; "pluguieron"} ;--# notpresent
    VP (Fut Ind Sg P1) => "placeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "placerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "placerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "placeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "placeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "placerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "placiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "placieres" ;--# notpresent
    VP (Fut Subj Sg P3) => variants {"placiere" ; "pluguiere"} ;--# notpresent
    VP (Fut Subj Pl P1) => "placiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "placiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "placieren" ;--# notpresent
    VP (Cond Sg P1) => "placería" ;--# notpresent
    VP (Cond Sg P2) => "placerías" ;--# notpresent
    VP (Cond Sg P3) => "placería" ;--# notpresent
    VP (Cond Pl P1) => "placeríamos" ;--# notpresent
    VP (Cond Pl P2) => "placeríais" ;--# notpresent
    VP (Cond Pl P3) => "placerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "place" ;
    VP (Imp Sg P3) => "plazca" ;
    VP (Imp Pl P1) => "plazcamos" ;
    VP (Imp Pl P2) => "placed" ;
    VP (Imp Pl P3) => "plazcan" ;
    VP (Pass Sg Masc) => "placido" ;
    VP (Pass Sg Fem) => "placida" ;
    VP (Pass Pl Masc) => "placidos" ;
    VP (Pass Pl Fem) => "placidas"
    }
  } ;

lin translucirse_V = reflVerboV 
 {s = table {
    VI Infn => "translucir" ;
    VI Ger => "transluciendo" ;
    VI Part => "translucido" ;
    VP (Pres Ind Sg P1) => "transluzco" ;
    VP (Pres Ind Sg P2) => "transluces" ;
    VP (Pres Ind Sg P3) => "transluce" ;
    VP (Pres Ind Pl P1) => "translucimos" ;
    VP (Pres Ind Pl P2) => "translucís" ;
    VP (Pres Ind Pl P3) => "translucen" ;
    VP (Pres Subj Sg P1) => "transluzca" ;
    VP (Pres Subj Sg P2) => "transluzcas" ;
    VP (Pres Subj Sg P3) => "transluzca" ;
    VP (Pres Subj Pl P1) => "transluzcamos" ;
    VP (Pres Subj Pl P2) => "transluzcáis" ;
    VP (Pres Subj Pl P3) => "transluzcan" ;
    VP (Impf Ind Sg P1) => "translucía" ;--# notpresent
    VP (Impf Ind Sg P2) => "translucías" ;--# notpresent
    VP (Impf Ind Sg P3) => "translucía" ;--# notpresent
    VP (Impf Ind Pl P1) => "translucíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "translucíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "translucían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transluciera" ; "transluciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"translucieras" ; "translucieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transluciera" ; "transluciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transluciéramos" ; "transluciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"translucierais" ; "translucieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"translucieran" ; "transluciesen"} ;--# notpresent
    VP (Pret Sg P1) => "translucí" ;--# notpresent
    VP (Pret Sg P2) => "transluciste" ;--# notpresent
    VP (Pret Sg P3) => "translució" ;--# notpresent
    VP (Pret Pl P1) => "translucimos" ;--# notpresent
    VP (Pret Pl P2) => "translucisteis" ;--# notpresent
    VP (Pret Pl P3) => "translucieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transluciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "translucirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "translucirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transluciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transluciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "translucirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transluciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "translucieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transluciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transluciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transluciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "translucieren" ;--# notpresent
    VP (Cond Sg P1) => "transluciría" ;--# notpresent
    VP (Cond Sg P2) => "translucirías" ;--# notpresent
    VP (Cond Sg P3) => "transluciría" ;--# notpresent
    VP (Cond Pl P1) => "transluciríamos" ;--# notpresent
    VP (Cond Pl P2) => "transluciríais" ;--# notpresent
    VP (Cond Pl P3) => "translucirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "transluce" ;
    VP (Imp Sg P3) => "transluzca" ;
    VP (Imp Pl P1) => "transluzcamos" ;
    VP (Imp Pl P2) => "translucid" ;
    VP (Imp Pl P3) => "transluzcan" ;
    VP (Pass Sg Masc) => "translucido" ;
    VP (Pass Sg Fem) => "translucida" ;
    VP (Pass Pl Masc) => "translucidos" ;
    VP (Pass Pl Fem) => "translucidas"
    }
  } ;

lin aloquecerse_V = reflVerboV 
 {s = table {
    VI Infn => "aloquecer" ;
    VI Ger => "aloqueciendo" ;
    VI Part => "aloquecido" ;
    VP (Pres Ind Sg P1) => "aloquezco" ;
    VP (Pres Ind Sg P2) => "aloqueces" ;
    VP (Pres Ind Sg P3) => "aloquece" ;
    VP (Pres Ind Pl P1) => "aloquecemos" ;
    VP (Pres Ind Pl P2) => "aloquecéis" ;
    VP (Pres Ind Pl P3) => "aloquecen" ;
    VP (Pres Subj Sg P1) => "aloquezca" ;
    VP (Pres Subj Sg P2) => "aloquezcas" ;
    VP (Pres Subj Sg P3) => "aloquezca" ;
    VP (Pres Subj Pl P1) => "aloquezcamos" ;
    VP (Pres Subj Pl P2) => "aloquezcáis" ;
    VP (Pres Subj Pl P3) => "aloquezcan" ;
    VP (Impf Ind Sg P1) => "aloquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aloquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aloquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aloquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aloquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aloquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aloqueciera" ; "aloqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aloquecieras" ; "aloquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aloqueciera" ; "aloqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aloqueciéramos" ; "aloqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aloquecierais" ; "aloquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aloquecieran" ; "aloqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "aloquecí" ;--# notpresent
    VP (Pret Sg P2) => "aloqueciste" ;--# notpresent
    VP (Pret Sg P3) => "aloqueció" ;--# notpresent
    VP (Pret Pl P1) => "aloquecimos" ;--# notpresent
    VP (Pret Pl P2) => "aloquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "aloquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aloqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aloquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aloquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aloqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aloqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aloquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aloqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "aloquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "aloqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "aloqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aloqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aloquecieren" ;--# notpresent
    VP (Cond Sg P1) => "aloquecería" ;--# notpresent
    VP (Cond Sg P2) => "aloquecerías" ;--# notpresent
    VP (Cond Sg P3) => "aloquecería" ;--# notpresent
    VP (Cond Pl P1) => "aloqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "aloqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "aloquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aloquece" ;
    VP (Imp Sg P3) => "aloquezca" ;
    VP (Imp Pl P1) => "aloquezcamos" ;
    VP (Imp Pl P2) => "aloqueced" ;
    VP (Imp Pl P3) => "aloquezcan" ;
    VP (Pass Sg Masc) => "aloquecido" ;
    VP (Pass Sg Fem) => "aloquecida" ;
    VP (Pass Pl Masc) => "aloquecidos" ;
    VP (Pass Pl Fem) => "aloquecidas"
    }
  } ;

lin avanecerse_V = reflVerboV 
 {s = table {
    VI Infn => "avanecer" ;
    VI Ger => "avaneciendo" ;
    VI Part => "avanecido" ;
    VP (Pres Ind Sg P1) => "avanezco" ;
    VP (Pres Ind Sg P2) => "avaneces" ;
    VP (Pres Ind Sg P3) => "avanece" ;
    VP (Pres Ind Pl P1) => "avanecemos" ;
    VP (Pres Ind Pl P2) => "avanecéis" ;
    VP (Pres Ind Pl P3) => "avanecen" ;
    VP (Pres Subj Sg P1) => "avanezca" ;
    VP (Pres Subj Sg P2) => "avanezcas" ;
    VP (Pres Subj Sg P3) => "avanezca" ;
    VP (Pres Subj Pl P1) => "avanezcamos" ;
    VP (Pres Subj Pl P2) => "avanezcáis" ;
    VP (Pres Subj Pl P3) => "avanezcan" ;
    VP (Impf Ind Sg P1) => "avanecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "avanecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "avanecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "avanecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "avanecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "avanecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"avaneciera" ; "avaneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"avanecieras" ; "avanecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"avaneciera" ; "avaneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"avaneciéramos" ; "avaneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"avanecierais" ; "avanecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"avanecieran" ; "avaneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "avanecí" ;--# notpresent
    VP (Pret Sg P2) => "avaneciste" ;--# notpresent
    VP (Pret Sg P3) => "avaneció" ;--# notpresent
    VP (Pret Pl P1) => "avanecimos" ;--# notpresent
    VP (Pret Pl P2) => "avanecisteis" ;--# notpresent
    VP (Pret Pl P3) => "avanecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "avaneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "avanecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "avanecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "avaneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "avaneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "avanecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "avaneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "avanecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "avaneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "avaneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "avaneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "avanecieren" ;--# notpresent
    VP (Cond Sg P1) => "avanecería" ;--# notpresent
    VP (Cond Sg P2) => "avanecerías" ;--# notpresent
    VP (Cond Sg P3) => "avanecería" ;--# notpresent
    VP (Cond Pl P1) => "avaneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "avaneceríais" ;--# notpresent
    VP (Cond Pl P3) => "avanecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "avanece" ;
    VP (Imp Sg P3) => "avanezca" ;
    VP (Imp Pl P1) => "avanezcamos" ;
    VP (Imp Pl P2) => "avaneced" ;
    VP (Imp Pl P3) => "avanezcan" ;
    VP (Pass Sg Masc) => "avanecido" ;
    VP (Pass Sg Fem) => "avanecida" ;
    VP (Pass Pl Masc) => "avanecidos" ;
    VP (Pass Pl Fem) => "avanecidas"
    }
  } ;

lin canecerse_V = reflVerboV 
 {s = table {
    VI Infn => "canecer" ;
    VI Ger => "caneciendo" ;
    VI Part => "canecido" ;
    VP (Pres Ind Sg P1) => "canezco" ;
    VP (Pres Ind Sg P2) => "caneces" ;
    VP (Pres Ind Sg P3) => "canece" ;
    VP (Pres Ind Pl P1) => "canecemos" ;
    VP (Pres Ind Pl P2) => "canecéis" ;
    VP (Pres Ind Pl P3) => "canecen" ;
    VP (Pres Subj Sg P1) => "canezca" ;
    VP (Pres Subj Sg P2) => "canezcas" ;
    VP (Pres Subj Sg P3) => "canezca" ;
    VP (Pres Subj Pl P1) => "canezcamos" ;
    VP (Pres Subj Pl P2) => "canezcáis" ;
    VP (Pres Subj Pl P3) => "canezcan" ;
    VP (Impf Ind Sg P1) => "canecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "canecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "canecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "canecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "canecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "canecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"caneciera" ; "caneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"canecieras" ; "canecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"caneciera" ; "caneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"caneciéramos" ; "caneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"canecierais" ; "canecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"canecieran" ; "caneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "canecí" ;--# notpresent
    VP (Pret Sg P2) => "caneciste" ;--# notpresent
    VP (Pret Sg P3) => "caneció" ;--# notpresent
    VP (Pret Pl P1) => "canecimos" ;--# notpresent
    VP (Pret Pl P2) => "canecisteis" ;--# notpresent
    VP (Pret Pl P3) => "canecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "caneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "canecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "canecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "caneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "caneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "canecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "caneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "canecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "caneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "caneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "caneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "canecieren" ;--# notpresent
    VP (Cond Sg P1) => "canecería" ;--# notpresent
    VP (Cond Sg P2) => "canecerías" ;--# notpresent
    VP (Cond Sg P3) => "canecería" ;--# notpresent
    VP (Cond Pl P1) => "caneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "caneceríais" ;--# notpresent
    VP (Cond Pl P3) => "canecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "canece" ;
    VP (Imp Sg P3) => "canezca" ;
    VP (Imp Pl P1) => "canezcamos" ;
    VP (Imp Pl P2) => "caneced" ;
    VP (Imp Pl P3) => "canezcan" ;
    VP (Pass Sg Masc) => "canecido" ;
    VP (Pass Sg Fem) => "canecida" ;
    VP (Pass Pl Masc) => "canecidos" ;
    VP (Pass Pl Fem) => "canecidas"
    }
  } ;

lin condolecerse_V = reflVerboV 
 {s = table {
    VI Infn => "condolecer" ;
    VI Ger => "condoleciendo" ;
    VI Part => "condolecido" ;
    VP (Pres Ind Sg P1) => "condolezco" ;
    VP (Pres Ind Sg P2) => "condoleces" ;
    VP (Pres Ind Sg P3) => "condolece" ;
    VP (Pres Ind Pl P1) => "condolecemos" ;
    VP (Pres Ind Pl P2) => "condolecéis" ;
    VP (Pres Ind Pl P3) => "condolecen" ;
    VP (Pres Subj Sg P1) => "condolezca" ;
    VP (Pres Subj Sg P2) => "condolezcas" ;
    VP (Pres Subj Sg P3) => "condolezca" ;
    VP (Pres Subj Pl P1) => "condolezcamos" ;
    VP (Pres Subj Pl P2) => "condolezcáis" ;
    VP (Pres Subj Pl P3) => "condolezcan" ;
    VP (Impf Ind Sg P1) => "condolecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "condolecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "condolecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "condolecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "condolecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "condolecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"condoleciera" ; "condoleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"condolecieras" ; "condolecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"condoleciera" ; "condoleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"condoleciéramos" ; "condoleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"condolecierais" ; "condolecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"condolecieran" ; "condoleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "condolecí" ;--# notpresent
    VP (Pret Sg P2) => "condoleciste" ;--# notpresent
    VP (Pret Sg P3) => "condoleció" ;--# notpresent
    VP (Pret Pl P1) => "condolecimos" ;--# notpresent
    VP (Pret Pl P2) => "condolecisteis" ;--# notpresent
    VP (Pret Pl P3) => "condolecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "condoleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "condolecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "condolecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "condoleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "condoleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "condolecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "condoleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "condolecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "condoleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "condoleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "condoleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "condolecieren" ;--# notpresent
    VP (Cond Sg P1) => "condolecería" ;--# notpresent
    VP (Cond Sg P2) => "condolecerías" ;--# notpresent
    VP (Cond Sg P3) => "condolecería" ;--# notpresent
    VP (Cond Pl P1) => "condoleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "condoleceríais" ;--# notpresent
    VP (Cond Pl P3) => "condolecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "condolece" ;
    VP (Imp Sg P3) => "condolezca" ;
    VP (Imp Pl P1) => "condolezcamos" ;
    VP (Imp Pl P2) => "condoleced" ;
    VP (Imp Pl P3) => "condolezcan" ;
    VP (Pass Sg Masc) => "condolecido" ;
    VP (Pass Sg Fem) => "condolecida" ;
    VP (Pass Pl Masc) => "condolecidos" ;
    VP (Pass Pl Fem) => "condolecidas"
    }
  } ;

lin desembebecerse_V = reflVerboV 
 {s = table {
    VI Infn => "desembebecer" ;
    VI Ger => "desembebeciendo" ;
    VI Part => "desembebecido" ;
    VP (Pres Ind Sg P1) => "desembebezco" ;
    VP (Pres Ind Sg P2) => "desembebeces" ;
    VP (Pres Ind Sg P3) => "desembebece" ;
    VP (Pres Ind Pl P1) => "desembebecemos" ;
    VP (Pres Ind Pl P2) => "desembebecéis" ;
    VP (Pres Ind Pl P3) => "desembebecen" ;
    VP (Pres Subj Sg P1) => "desembebezca" ;
    VP (Pres Subj Sg P2) => "desembebezcas" ;
    VP (Pres Subj Sg P3) => "desembebezca" ;
    VP (Pres Subj Pl P1) => "desembebezcamos" ;
    VP (Pres Subj Pl P2) => "desembebezcáis" ;
    VP (Pres Subj Pl P3) => "desembebezcan" ;
    VP (Impf Ind Sg P1) => "desembebecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desembebecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desembebecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desembebecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desembebecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desembebecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desembebeciera" ; "desembebeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desembebecieras" ; "desembebecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desembebeciera" ; "desembebeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desembebeciéramos" ; "desembebeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desembebecierais" ; "desembebecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desembebecieran" ; "desembebeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desembebecí" ;--# notpresent
    VP (Pret Sg P2) => "desembebeciste" ;--# notpresent
    VP (Pret Sg P3) => "desembebeció" ;--# notpresent
    VP (Pret Pl P1) => "desembebecimos" ;--# notpresent
    VP (Pret Pl P2) => "desembebecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desembebecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desembebeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desembebecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desembebecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desembebeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desembebeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desembebecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desembebeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desembebecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desembebeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desembebeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desembebeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desembebecieren" ;--# notpresent
    VP (Cond Sg P1) => "desembebecería" ;--# notpresent
    VP (Cond Sg P2) => "desembebecerías" ;--# notpresent
    VP (Cond Sg P3) => "desembebecería" ;--# notpresent
    VP (Cond Pl P1) => "desembebeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "desembebeceríais" ;--# notpresent
    VP (Cond Pl P3) => "desembebecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desembebece" ;
    VP (Imp Sg P3) => "desembebezca" ;
    VP (Imp Pl P1) => "desembebezcamos" ;
    VP (Imp Pl P2) => "desembebeced" ;
    VP (Imp Pl P3) => "desembebezcan" ;
    VP (Pass Sg Masc) => "desembebecido" ;
    VP (Pass Sg Fem) => "desembebecida" ;
    VP (Pass Pl Masc) => "desembebecidos" ;
    VP (Pass Pl Fem) => "desembebecidas"
    }
  } ;

lin desperecerse_V = reflVerboV 
 {s = table {
    VI Infn => "desperecer" ;
    VI Ger => "despereciendo" ;
    VI Part => "desperecido" ;
    VP (Pres Ind Sg P1) => "desperezco" ;
    VP (Pres Ind Sg P2) => "despereces" ;
    VP (Pres Ind Sg P3) => "desperece" ;
    VP (Pres Ind Pl P1) => "desperecemos" ;
    VP (Pres Ind Pl P2) => "desperecéis" ;
    VP (Pres Ind Pl P3) => "desperecen" ;
    VP (Pres Subj Sg P1) => "desperezca" ;
    VP (Pres Subj Sg P2) => "desperezcas" ;
    VP (Pres Subj Sg P3) => "desperezca" ;
    VP (Pres Subj Pl P1) => "desperezcamos" ;
    VP (Pres Subj Pl P2) => "desperezcáis" ;
    VP (Pres Subj Pl P3) => "desperezcan" ;
    VP (Impf Ind Sg P1) => "desperecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desperecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desperecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desperecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desperecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desperecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despereciera" ; "despereciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desperecieras" ; "desperecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despereciera" ; "despereciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despereciéramos" ; "despereciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desperecierais" ; "desperecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desperecieran" ; "despereciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desperecí" ;--# notpresent
    VP (Pret Sg P2) => "despereciste" ;--# notpresent
    VP (Pret Sg P3) => "despereció" ;--# notpresent
    VP (Pret Pl P1) => "desperecimos" ;--# notpresent
    VP (Pret Pl P2) => "desperecisteis" ;--# notpresent
    VP (Pret Pl P3) => "desperecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despereceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desperecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desperecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "despereceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despereceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desperecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despereciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desperecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "despereciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "despereciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despereciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desperecieren" ;--# notpresent
    VP (Cond Sg P1) => "desperecería" ;--# notpresent
    VP (Cond Sg P2) => "desperecerías" ;--# notpresent
    VP (Cond Sg P3) => "desperecería" ;--# notpresent
    VP (Cond Pl P1) => "despereceríamos" ;--# notpresent
    VP (Cond Pl P2) => "despereceríais" ;--# notpresent
    VP (Cond Pl P3) => "desperecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desperece" ;
    VP (Imp Sg P3) => "desperezca" ;
    VP (Imp Pl P1) => "desperezcamos" ;
    VP (Imp Pl P2) => "despereced" ;
    VP (Imp Pl P3) => "desperezcan" ;
    VP (Pass Sg Masc) => "desperecido" ;
    VP (Pass Sg Fem) => "desperecida" ;
    VP (Pass Pl Masc) => "desperecidos" ;
    VP (Pass Pl Fem) => "desperecidas"
    }
  } ;

lin eflorecerse_V = reflVerboV 
 {s = table {
    VI Infn => "eflorecer" ;
    VI Ger => "efloreciendo" ;
    VI Part => "eflorecido" ;
    VP (Pres Ind Sg P1) => "eflorezco" ;
    VP (Pres Ind Sg P2) => "efloreces" ;
    VP (Pres Ind Sg P3) => "eflorece" ;
    VP (Pres Ind Pl P1) => "eflorecemos" ;
    VP (Pres Ind Pl P2) => "eflorecéis" ;
    VP (Pres Ind Pl P3) => "eflorecen" ;
    VP (Pres Subj Sg P1) => "eflorezca" ;
    VP (Pres Subj Sg P2) => "eflorezcas" ;
    VP (Pres Subj Sg P3) => "eflorezca" ;
    VP (Pres Subj Pl P1) => "eflorezcamos" ;
    VP (Pres Subj Pl P2) => "eflorezcáis" ;
    VP (Pres Subj Pl P3) => "eflorezcan" ;
    VP (Impf Ind Sg P1) => "eflorecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "eflorecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "eflorecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "eflorecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "eflorecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "eflorecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"efloreciera" ; "efloreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"eflorecieras" ; "eflorecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"efloreciera" ; "efloreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"efloreciéramos" ; "efloreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"eflorecierais" ; "eflorecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"eflorecieran" ; "efloreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "eflorecí" ;--# notpresent
    VP (Pret Sg P2) => "efloreciste" ;--# notpresent
    VP (Pret Sg P3) => "efloreció" ;--# notpresent
    VP (Pret Pl P1) => "eflorecimos" ;--# notpresent
    VP (Pret Pl P2) => "eflorecisteis" ;--# notpresent
    VP (Pret Pl P3) => "eflorecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "efloreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "eflorecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "eflorecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "efloreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "efloreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "eflorecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "efloreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "eflorecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "efloreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "efloreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "efloreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "eflorecieren" ;--# notpresent
    VP (Cond Sg P1) => "eflorecería" ;--# notpresent
    VP (Cond Sg P2) => "eflorecerías" ;--# notpresent
    VP (Cond Sg P3) => "eflorecería" ;--# notpresent
    VP (Cond Pl P1) => "efloreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "efloreceríais" ;--# notpresent
    VP (Cond Pl P3) => "eflorecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "eflorece" ;
    VP (Imp Sg P3) => "eflorezca" ;
    VP (Imp Pl P1) => "eflorezcamos" ;
    VP (Imp Pl P2) => "efloreced" ;
    VP (Imp Pl P3) => "eflorezcan" ;
    VP (Pass Sg Masc) => "eflorecido" ;
    VP (Pass Sg Fem) => "eflorecida" ;
    VP (Pass Pl Masc) => "eflorecidos" ;
    VP (Pass Pl Fem) => "eflorecidas"
    }
  } ;

lin embellaquecerse_V = reflVerboV 
 {s = table {
    VI Infn => "embellaquecer" ;
    VI Ger => "embellaqueciendo" ;
    VI Part => "embellaquecido" ;
    VP (Pres Ind Sg P1) => "embellaquezco" ;
    VP (Pres Ind Sg P2) => "embellaqueces" ;
    VP (Pres Ind Sg P3) => "embellaquece" ;
    VP (Pres Ind Pl P1) => "embellaquecemos" ;
    VP (Pres Ind Pl P2) => "embellaquecéis" ;
    VP (Pres Ind Pl P3) => "embellaquecen" ;
    VP (Pres Subj Sg P1) => "embellaquezca" ;
    VP (Pres Subj Sg P2) => "embellaquezcas" ;
    VP (Pres Subj Sg P3) => "embellaquezca" ;
    VP (Pres Subj Pl P1) => "embellaquezcamos" ;
    VP (Pres Subj Pl P2) => "embellaquezcáis" ;
    VP (Pres Subj Pl P3) => "embellaquezcan" ;
    VP (Impf Ind Sg P1) => "embellaquecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embellaquecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embellaquecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embellaquecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embellaquecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embellaquecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embellaqueciera" ; "embellaqueciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embellaquecieras" ; "embellaquecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embellaqueciera" ; "embellaqueciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embellaqueciéramos" ; "embellaqueciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embellaquecierais" ; "embellaquecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embellaquecieran" ; "embellaqueciesen"} ;--# notpresent
    VP (Pret Sg P1) => "embellaquecí" ;--# notpresent
    VP (Pret Sg P2) => "embellaqueciste" ;--# notpresent
    VP (Pret Sg P3) => "embellaqueció" ;--# notpresent
    VP (Pret Pl P1) => "embellaquecimos" ;--# notpresent
    VP (Pret Pl P2) => "embellaquecisteis" ;--# notpresent
    VP (Pret Pl P3) => "embellaquecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embellaqueceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embellaquecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embellaquecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embellaqueceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embellaqueceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embellaquecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embellaqueciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embellaquecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embellaqueciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embellaqueciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embellaqueciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embellaquecieren" ;--# notpresent
    VP (Cond Sg P1) => "embellaquecería" ;--# notpresent
    VP (Cond Sg P2) => "embellaquecerías" ;--# notpresent
    VP (Cond Sg P3) => "embellaquecería" ;--# notpresent
    VP (Cond Pl P1) => "embellaqueceríamos" ;--# notpresent
    VP (Cond Pl P2) => "embellaqueceríais" ;--# notpresent
    VP (Cond Pl P3) => "embellaquecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embellaquece" ;
    VP (Imp Sg P3) => "embellaquezca" ;
    VP (Imp Pl P1) => "embellaquezcamos" ;
    VP (Imp Pl P2) => "embellaqueced" ;
    VP (Imp Pl P3) => "embellaquezcan" ;
    VP (Pass Sg Masc) => "embellaquecido" ;
    VP (Pass Sg Fem) => "embellaquecida" ;
    VP (Pass Pl Masc) => "embellaquecidos" ;
    VP (Pass Pl Fem) => "embellaquecidas"
    }
  } ;

lin empoltronecerse_V = reflVerboV 
 {s = table {
    VI Infn => "empoltronecer" ;
    VI Ger => "empoltroneciendo" ;
    VI Part => "empoltronecido" ;
    VP (Pres Ind Sg P1) => "empoltronezco" ;
    VP (Pres Ind Sg P2) => "empoltroneces" ;
    VP (Pres Ind Sg P3) => "empoltronece" ;
    VP (Pres Ind Pl P1) => "empoltronecemos" ;
    VP (Pres Ind Pl P2) => "empoltronecéis" ;
    VP (Pres Ind Pl P3) => "empoltronecen" ;
    VP (Pres Subj Sg P1) => "empoltronezca" ;
    VP (Pres Subj Sg P2) => "empoltronezcas" ;
    VP (Pres Subj Sg P3) => "empoltronezca" ;
    VP (Pres Subj Pl P1) => "empoltronezcamos" ;
    VP (Pres Subj Pl P2) => "empoltronezcáis" ;
    VP (Pres Subj Pl P3) => "empoltronezcan" ;
    VP (Impf Ind Sg P1) => "empoltronecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empoltronecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empoltronecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empoltronecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empoltronecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empoltronecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empoltroneciera" ; "empoltroneciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empoltronecieras" ; "empoltronecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empoltroneciera" ; "empoltroneciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empoltroneciéramos" ; "empoltroneciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empoltronecierais" ; "empoltronecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empoltronecieran" ; "empoltroneciesen"} ;--# notpresent
    VP (Pret Sg P1) => "empoltronecí" ;--# notpresent
    VP (Pret Sg P2) => "empoltroneciste" ;--# notpresent
    VP (Pret Sg P3) => "empoltroneció" ;--# notpresent
    VP (Pret Pl P1) => "empoltronecimos" ;--# notpresent
    VP (Pret Pl P2) => "empoltronecisteis" ;--# notpresent
    VP (Pret Pl P3) => "empoltronecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empoltroneceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empoltronecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empoltronecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empoltroneceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empoltroneceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empoltronecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empoltroneciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empoltronecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empoltroneciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empoltroneciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empoltroneciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empoltronecieren" ;--# notpresent
    VP (Cond Sg P1) => "empoltronecería" ;--# notpresent
    VP (Cond Sg P2) => "empoltronecerías" ;--# notpresent
    VP (Cond Sg P3) => "empoltronecería" ;--# notpresent
    VP (Cond Pl P1) => "empoltroneceríamos" ;--# notpresent
    VP (Cond Pl P2) => "empoltroneceríais" ;--# notpresent
    VP (Cond Pl P3) => "empoltronecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empoltronece" ;
    VP (Imp Sg P3) => "empoltronezca" ;
    VP (Imp Pl P1) => "empoltronezcamos" ;
    VP (Imp Pl P2) => "empoltroneced" ;
    VP (Imp Pl P3) => "empoltronezcan" ;
    VP (Pass Sg Masc) => "empoltronecido" ;
    VP (Pass Sg Fem) => "empoltronecida" ;
    VP (Pass Pl Masc) => "empoltronecidos" ;
    VP (Pass Pl Fem) => "empoltronecidas"
    }
  } ;

lin encabellecerse_V = reflVerboV 
 {s = table {
    VI Infn => "encabellecer" ;
    VI Ger => "encabelleciendo" ;
    VI Part => "encabellecido" ;
    VP (Pres Ind Sg P1) => "encabellezco" ;
    VP (Pres Ind Sg P2) => "encabelleces" ;
    VP (Pres Ind Sg P3) => "encabellece" ;
    VP (Pres Ind Pl P1) => "encabellecemos" ;
    VP (Pres Ind Pl P2) => "encabellecéis" ;
    VP (Pres Ind Pl P3) => "encabellecen" ;
    VP (Pres Subj Sg P1) => "encabellezca" ;
    VP (Pres Subj Sg P2) => "encabellezcas" ;
    VP (Pres Subj Sg P3) => "encabellezca" ;
    VP (Pres Subj Pl P1) => "encabellezcamos" ;
    VP (Pres Subj Pl P2) => "encabellezcáis" ;
    VP (Pres Subj Pl P3) => "encabellezcan" ;
    VP (Impf Ind Sg P1) => "encabellecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "encabellecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "encabellecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "encabellecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encabellecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encabellecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encabelleciera" ; "encabelleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encabellecieras" ; "encabellecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encabelleciera" ; "encabelleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encabelleciéramos" ; "encabelleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encabellecierais" ; "encabellecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encabellecieran" ; "encabelleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "encabellecí" ;--# notpresent
    VP (Pret Sg P2) => "encabelleciste" ;--# notpresent
    VP (Pret Sg P3) => "encabelleció" ;--# notpresent
    VP (Pret Pl P1) => "encabellecimos" ;--# notpresent
    VP (Pret Pl P2) => "encabellecisteis" ;--# notpresent
    VP (Pret Pl P3) => "encabellecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encabelleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encabellecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encabellecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "encabelleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encabelleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encabellecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encabelleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "encabellecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "encabelleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "encabelleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encabelleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encabellecieren" ;--# notpresent
    VP (Cond Sg P1) => "encabellecería" ;--# notpresent
    VP (Cond Sg P2) => "encabellecerías" ;--# notpresent
    VP (Cond Sg P3) => "encabellecería" ;--# notpresent
    VP (Cond Pl P1) => "encabelleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "encabelleceríais" ;--# notpresent
    VP (Cond Pl P3) => "encabellecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encabellece" ;
    VP (Imp Sg P3) => "encabellezca" ;
    VP (Imp Pl P1) => "encabellezcamos" ;
    VP (Imp Pl P2) => "encabelleced" ;
    VP (Imp Pl P3) => "encabellezcan" ;
    VP (Pass Sg Masc) => "encabellecido" ;
    VP (Pass Sg Fem) => "encabellecida" ;
    VP (Pass Pl Masc) => "encabellecidos" ;
    VP (Pass Pl Fem) => "encabellecidas"
    }
  } ;

lin engrumecerse_V = reflVerboV 
 {s = table {
    VI Infn => "engrumecer" ;
    VI Ger => "engrumeciendo" ;
    VI Part => "engrumecido" ;
    VP (Pres Ind Sg P1) => "engrumezco" ;
    VP (Pres Ind Sg P2) => "engrumeces" ;
    VP (Pres Ind Sg P3) => "engrumece" ;
    VP (Pres Ind Pl P1) => "engrumecemos" ;
    VP (Pres Ind Pl P2) => "engrumecéis" ;
    VP (Pres Ind Pl P3) => "engrumecen" ;
    VP (Pres Subj Sg P1) => "engrumezca" ;
    VP (Pres Subj Sg P2) => "engrumezcas" ;
    VP (Pres Subj Sg P3) => "engrumezca" ;
    VP (Pres Subj Pl P1) => "engrumezcamos" ;
    VP (Pres Subj Pl P2) => "engrumezcáis" ;
    VP (Pres Subj Pl P3) => "engrumezcan" ;
    VP (Impf Ind Sg P1) => "engrumecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "engrumecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "engrumecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "engrumecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engrumecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engrumecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engrumeciera" ; "engrumeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engrumecieras" ; "engrumecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engrumeciera" ; "engrumeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engrumeciéramos" ; "engrumeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engrumecierais" ; "engrumecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engrumecieran" ; "engrumeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "engrumecí" ;--# notpresent
    VP (Pret Sg P2) => "engrumeciste" ;--# notpresent
    VP (Pret Sg P3) => "engrumeció" ;--# notpresent
    VP (Pret Pl P1) => "engrumecimos" ;--# notpresent
    VP (Pret Pl P2) => "engrumecisteis" ;--# notpresent
    VP (Pret Pl P3) => "engrumecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engrumeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engrumecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engrumecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "engrumeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engrumeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engrumecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engrumeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "engrumecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "engrumeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "engrumeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engrumeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engrumecieren" ;--# notpresent
    VP (Cond Sg P1) => "engrumecería" ;--# notpresent
    VP (Cond Sg P2) => "engrumecerías" ;--# notpresent
    VP (Cond Sg P3) => "engrumecería" ;--# notpresent
    VP (Cond Pl P1) => "engrumeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "engrumeceríais" ;--# notpresent
    VP (Cond Pl P3) => "engrumecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "engrumece" ;
    VP (Imp Sg P3) => "engrumezca" ;
    VP (Imp Pl P1) => "engrumezcamos" ;
    VP (Imp Pl P2) => "engrumeced" ;
    VP (Imp Pl P3) => "engrumezcan" ;
    VP (Pass Sg Masc) => "engrumecido" ;
    VP (Pass Sg Fem) => "engrumecida" ;
    VP (Pass Pl Masc) => "engrumecidos" ;
    VP (Pass Pl Fem) => "engrumecidas"
    }
  } ;

lin enmarillecerse_V = reflVerboV 
 {s = table {
    VI Infn => "enmarillecer" ;
    VI Ger => "enmarilleciendo" ;
    VI Part => "enmarillecido" ;
    VP (Pres Ind Sg P1) => "enmarillezco" ;
    VP (Pres Ind Sg P2) => "enmarilleces" ;
    VP (Pres Ind Sg P3) => "enmarillece" ;
    VP (Pres Ind Pl P1) => "enmarillecemos" ;
    VP (Pres Ind Pl P2) => "enmarillecéis" ;
    VP (Pres Ind Pl P3) => "enmarillecen" ;
    VP (Pres Subj Sg P1) => "enmarillezca" ;
    VP (Pres Subj Sg P2) => "enmarillezcas" ;
    VP (Pres Subj Sg P3) => "enmarillezca" ;
    VP (Pres Subj Pl P1) => "enmarillezcamos" ;
    VP (Pres Subj Pl P2) => "enmarillezcáis" ;
    VP (Pres Subj Pl P3) => "enmarillezcan" ;
    VP (Impf Ind Sg P1) => "enmarillecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmarillecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmarillecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmarillecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmarillecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmarillecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmarilleciera" ; "enmarilleciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmarillecieras" ; "enmarillecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmarilleciera" ; "enmarilleciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmarilleciéramos" ; "enmarilleciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmarillecierais" ; "enmarillecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmarillecieran" ; "enmarilleciesen"} ;--# notpresent
    VP (Pret Sg P1) => "enmarillecí" ;--# notpresent
    VP (Pret Sg P2) => "enmarilleciste" ;--# notpresent
    VP (Pret Sg P3) => "enmarilleció" ;--# notpresent
    VP (Pret Pl P1) => "enmarillecimos" ;--# notpresent
    VP (Pret Pl P2) => "enmarillecisteis" ;--# notpresent
    VP (Pret Pl P3) => "enmarillecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmarilleceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmarillecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmarillecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmarilleceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmarilleceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmarillecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmarilleciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmarillecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmarilleciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmarilleciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmarilleciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmarillecieren" ;--# notpresent
    VP (Cond Sg P1) => "enmarillecería" ;--# notpresent
    VP (Cond Sg P2) => "enmarillecerías" ;--# notpresent
    VP (Cond Sg P3) => "enmarillecería" ;--# notpresent
    VP (Cond Pl P1) => "enmarilleceríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmarilleceríais" ;--# notpresent
    VP (Cond Pl P3) => "enmarillecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmarillece" ;
    VP (Imp Sg P3) => "enmarillezca" ;
    VP (Imp Pl P1) => "enmarillezcamos" ;
    VP (Imp Pl P2) => "enmarilleced" ;
    VP (Imp Pl P3) => "enmarillezcan" ;
    VP (Pass Sg Masc) => "enmarillecido" ;
    VP (Pass Sg Fem) => "enmarillecida" ;
    VP (Pass Pl Masc) => "enmarillecidos" ;
    VP (Pass Pl Fem) => "enmarillecidas"
    }
  } ;

lin ensilvecerse_V = reflVerboV 
 {s = table {
    VI Infn => "ensilvecer" ;
    VI Ger => "ensilveciendo" ;
    VI Part => "ensilvecido" ;
    VP (Pres Ind Sg P1) => "ensilvezco" ;
    VP (Pres Ind Sg P2) => "ensilveces" ;
    VP (Pres Ind Sg P3) => "ensilvece" ;
    VP (Pres Ind Pl P1) => "ensilvecemos" ;
    VP (Pres Ind Pl P2) => "ensilvecéis" ;
    VP (Pres Ind Pl P3) => "ensilvecen" ;
    VP (Pres Subj Sg P1) => "ensilvezca" ;
    VP (Pres Subj Sg P2) => "ensilvezcas" ;
    VP (Pres Subj Sg P3) => "ensilvezca" ;
    VP (Pres Subj Pl P1) => "ensilvezcamos" ;
    VP (Pres Subj Pl P2) => "ensilvezcáis" ;
    VP (Pres Subj Pl P3) => "ensilvezcan" ;
    VP (Impf Ind Sg P1) => "ensilvecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensilvecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensilvecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensilvecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensilvecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensilvecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensilveciera" ; "ensilveciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensilvecieras" ; "ensilvecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensilveciera" ; "ensilveciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensilveciéramos" ; "ensilveciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensilvecierais" ; "ensilvecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensilvecieran" ; "ensilveciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ensilvecí" ;--# notpresent
    VP (Pret Sg P2) => "ensilveciste" ;--# notpresent
    VP (Pret Sg P3) => "ensilveció" ;--# notpresent
    VP (Pret Pl P1) => "ensilvecimos" ;--# notpresent
    VP (Pret Pl P2) => "ensilvecisteis" ;--# notpresent
    VP (Pret Pl P3) => "ensilvecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensilveceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensilvecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensilvecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensilveceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensilveceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensilvecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensilveciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensilvecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensilveciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensilveciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensilveciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensilvecieren" ;--# notpresent
    VP (Cond Sg P1) => "ensilvecería" ;--# notpresent
    VP (Cond Sg P2) => "ensilvecerías" ;--# notpresent
    VP (Cond Sg P3) => "ensilvecería" ;--# notpresent
    VP (Cond Pl P1) => "ensilveceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensilveceríais" ;--# notpresent
    VP (Cond Pl P3) => "ensilvecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensilvece" ;
    VP (Imp Sg P3) => "ensilvezca" ;
    VP (Imp Pl P1) => "ensilvezcamos" ;
    VP (Imp Pl P2) => "ensilveced" ;
    VP (Imp Pl P3) => "ensilvezcan" ;
    VP (Pass Sg Masc) => "ensilvecido" ;
    VP (Pass Sg Fem) => "ensilvecida" ;
    VP (Pass Pl Masc) => "ensilvecidos" ;
    VP (Pass Pl Fem) => "ensilvecidas"
    }
  } ;

lin entigrecerse_V = reflVerboV 
 {s = table {
    VI Infn => "entigrecer" ;
    VI Ger => "entigreciendo" ;
    VI Part => "entigrecido" ;
    VP (Pres Ind Sg P1) => "entigrezco" ;
    VP (Pres Ind Sg P2) => "entigreces" ;
    VP (Pres Ind Sg P3) => "entigrece" ;
    VP (Pres Ind Pl P1) => "entigrecemos" ;
    VP (Pres Ind Pl P2) => "entigrecéis" ;
    VP (Pres Ind Pl P3) => "entigrecen" ;
    VP (Pres Subj Sg P1) => "entigrezca" ;
    VP (Pres Subj Sg P2) => "entigrezcas" ;
    VP (Pres Subj Sg P3) => "entigrezca" ;
    VP (Pres Subj Pl P1) => "entigrezcamos" ;
    VP (Pres Subj Pl P2) => "entigrezcáis" ;
    VP (Pres Subj Pl P3) => "entigrezcan" ;
    VP (Impf Ind Sg P1) => "entigrecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entigrecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entigrecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entigrecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entigrecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entigrecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entigreciera" ; "entigreciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entigrecieras" ; "entigrecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entigreciera" ; "entigreciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entigreciéramos" ; "entigreciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entigrecierais" ; "entigrecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entigrecieran" ; "entigreciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entigrecí" ;--# notpresent
    VP (Pret Sg P2) => "entigreciste" ;--# notpresent
    VP (Pret Sg P3) => "entigreció" ;--# notpresent
    VP (Pret Pl P1) => "entigrecimos" ;--# notpresent
    VP (Pret Pl P2) => "entigrecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entigrecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entigreceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entigrecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entigrecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entigreceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entigreceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entigrecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entigreciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entigrecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entigreciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entigreciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entigreciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entigrecieren" ;--# notpresent
    VP (Cond Sg P1) => "entigrecería" ;--# notpresent
    VP (Cond Sg P2) => "entigrecerías" ;--# notpresent
    VP (Cond Sg P3) => "entigrecería" ;--# notpresent
    VP (Cond Pl P1) => "entigreceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entigreceríais" ;--# notpresent
    VP (Cond Pl P3) => "entigrecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entigrece" ;
    VP (Imp Sg P3) => "entigrezca" ;
    VP (Imp Pl P1) => "entigrezcamos" ;
    VP (Imp Pl P2) => "entigreced" ;
    VP (Imp Pl P3) => "entigrezcan" ;
    VP (Pass Sg Masc) => "entigrecido" ;
    VP (Pass Sg Fem) => "entigrecida" ;
    VP (Pass Pl Masc) => "entigrecidos" ;
    VP (Pass Pl Fem) => "entigrecidas"
    }
  } ;

lin entreparecerse_V = reflVerboV 
 {s = table {
    VI Infn => "entreparecer" ;
    VI Ger => "entrepareciendo" ;
    VI Part => "entreparecido" ;
    VP (Pres Ind Sg P1) => "entreparezco" ;
    VP (Pres Ind Sg P2) => "entrepareces" ;
    VP (Pres Ind Sg P3) => "entreparece" ;
    VP (Pres Ind Pl P1) => "entreparecemos" ;
    VP (Pres Ind Pl P2) => "entreparecéis" ;
    VP (Pres Ind Pl P3) => "entreparecen" ;
    VP (Pres Subj Sg P1) => "entreparezca" ;
    VP (Pres Subj Sg P2) => "entreparezcas" ;
    VP (Pres Subj Sg P3) => "entreparezca" ;
    VP (Pres Subj Pl P1) => "entreparezcamos" ;
    VP (Pres Subj Pl P2) => "entreparezcáis" ;
    VP (Pres Subj Pl P3) => "entreparezcan" ;
    VP (Impf Ind Sg P1) => "entreparecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entreparecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entreparecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entreparecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entreparecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entreparecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entrepareciera" ; "entrepareciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entreparecieras" ; "entreparecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entrepareciera" ; "entrepareciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entrepareciéramos" ; "entrepareciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entreparecierais" ; "entreparecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entreparecieran" ; "entrepareciesen"} ;--# notpresent
    VP (Pret Sg P1) => "entreparecí" ;--# notpresent
    VP (Pret Sg P2) => "entrepareciste" ;--# notpresent
    VP (Pret Sg P3) => "entrepareció" ;--# notpresent
    VP (Pret Pl P1) => "entreparecimos" ;--# notpresent
    VP (Pret Pl P2) => "entreparecisteis" ;--# notpresent
    VP (Pret Pl P3) => "entreparecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entrepareceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entreparecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entreparecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entrepareceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entrepareceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entreparecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entrepareciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entreparecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entrepareciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entrepareciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entrepareciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entreparecieren" ;--# notpresent
    VP (Cond Sg P1) => "entreparecería" ;--# notpresent
    VP (Cond Sg P2) => "entreparecerías" ;--# notpresent
    VP (Cond Sg P3) => "entreparecería" ;--# notpresent
    VP (Cond Pl P1) => "entrepareceríamos" ;--# notpresent
    VP (Cond Pl P2) => "entrepareceríais" ;--# notpresent
    VP (Cond Pl P3) => "entreparecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entreparece" ;
    VP (Imp Sg P3) => "entreparezca" ;
    VP (Imp Pl P1) => "entreparezcamos" ;
    VP (Imp Pl P2) => "entrepareced" ;
    VP (Imp Pl P3) => "entreparezcan" ;
    VP (Pass Sg Masc) => "entreparecido" ;
    VP (Pass Sg Fem) => "entreparecida" ;
    VP (Pass Pl Masc) => "entreparecidos" ;
    VP (Pass Pl Fem) => "entreparecidas"
    }
  } ;

lin escalfecerse_V = reflVerboV 
 {s = table {
    VI Infn => "escalfecer" ;
    VI Ger => "escalfeciendo" ;
    VI Part => "escalfecido" ;
    VP (Pres Ind Sg P1) => "escalfezco" ;
    VP (Pres Ind Sg P2) => "escalfeces" ;
    VP (Pres Ind Sg P3) => "escalfece" ;
    VP (Pres Ind Pl P1) => "escalfecemos" ;
    VP (Pres Ind Pl P2) => "escalfecéis" ;
    VP (Pres Ind Pl P3) => "escalfecen" ;
    VP (Pres Subj Sg P1) => "escalfezca" ;
    VP (Pres Subj Sg P2) => "escalfezcas" ;
    VP (Pres Subj Sg P3) => "escalfezca" ;
    VP (Pres Subj Pl P1) => "escalfezcamos" ;
    VP (Pres Subj Pl P2) => "escalfezcáis" ;
    VP (Pres Subj Pl P3) => "escalfezcan" ;
    VP (Impf Ind Sg P1) => "escalfecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escalfecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escalfecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escalfecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escalfecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escalfecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escalfeciera" ; "escalfeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escalfecieras" ; "escalfecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escalfeciera" ; "escalfeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escalfeciéramos" ; "escalfeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escalfecierais" ; "escalfecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escalfecieran" ; "escalfeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "escalfecí" ;--# notpresent
    VP (Pret Sg P2) => "escalfeciste" ;--# notpresent
    VP (Pret Sg P3) => "escalfeció" ;--# notpresent
    VP (Pret Pl P1) => "escalfecimos" ;--# notpresent
    VP (Pret Pl P2) => "escalfecisteis" ;--# notpresent
    VP (Pret Pl P3) => "escalfecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escalfeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escalfecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escalfecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escalfeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escalfeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escalfecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escalfeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escalfecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escalfeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escalfeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escalfeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escalfecieren" ;--# notpresent
    VP (Cond Sg P1) => "escalfecería" ;--# notpresent
    VP (Cond Sg P2) => "escalfecerías" ;--# notpresent
    VP (Cond Sg P3) => "escalfecería" ;--# notpresent
    VP (Cond Pl P1) => "escalfeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "escalfeceríais" ;--# notpresent
    VP (Cond Pl P3) => "escalfecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escalfece" ;
    VP (Imp Sg P3) => "escalfezca" ;
    VP (Imp Pl P1) => "escalfezcamos" ;
    VP (Imp Pl P2) => "escalfeced" ;
    VP (Imp Pl P3) => "escalfezcan" ;
    VP (Pass Sg Masc) => "escalfecido" ;
    VP (Pass Sg Fem) => "escalfecida" ;
    VP (Pass Pl Masc) => "escalfecidos" ;
    VP (Pass Pl Fem) => "escalfecidas"
    }
  } ;

lin remostecerse_V = reflVerboV 
 {s = table {
    VI Infn => "remostecer" ;
    VI Ger => "remosteciendo" ;
    VI Part => "remostecido" ;
    VP (Pres Ind Sg P1) => "remostezco" ;
    VP (Pres Ind Sg P2) => "remosteces" ;
    VP (Pres Ind Sg P3) => "remostece" ;
    VP (Pres Ind Pl P1) => "remostecemos" ;
    VP (Pres Ind Pl P2) => "remostecéis" ;
    VP (Pres Ind Pl P3) => "remostecen" ;
    VP (Pres Subj Sg P1) => "remostezca" ;
    VP (Pres Subj Sg P2) => "remostezcas" ;
    VP (Pres Subj Sg P3) => "remostezca" ;
    VP (Pres Subj Pl P1) => "remostezcamos" ;
    VP (Pres Subj Pl P2) => "remostezcáis" ;
    VP (Pres Subj Pl P3) => "remostezcan" ;
    VP (Impf Ind Sg P1) => "remostecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "remostecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "remostecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "remostecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remostecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remostecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remosteciera" ; "remosteciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remostecieras" ; "remostecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remosteciera" ; "remosteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remosteciéramos" ; "remosteciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remostecierais" ; "remostecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remostecieran" ; "remosteciesen"} ;--# notpresent
    VP (Pret Sg P1) => "remostecí" ;--# notpresent
    VP (Pret Sg P2) => "remosteciste" ;--# notpresent
    VP (Pret Sg P3) => "remosteció" ;--# notpresent
    VP (Pret Pl P1) => "remostecimos" ;--# notpresent
    VP (Pret Pl P2) => "remostecisteis" ;--# notpresent
    VP (Pret Pl P3) => "remostecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remosteceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remostecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remostecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "remosteceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remosteceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remostecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remosteciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "remostecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "remosteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "remosteciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remosteciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remostecieren" ;--# notpresent
    VP (Cond Sg P1) => "remostecería" ;--# notpresent
    VP (Cond Sg P2) => "remostecerías" ;--# notpresent
    VP (Cond Sg P3) => "remostecería" ;--# notpresent
    VP (Cond Pl P1) => "remosteceríamos" ;--# notpresent
    VP (Cond Pl P2) => "remosteceríais" ;--# notpresent
    VP (Cond Pl P3) => "remostecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remostece" ;
    VP (Imp Sg P3) => "remostezca" ;
    VP (Imp Pl P1) => "remostezcamos" ;
    VP (Imp Pl P2) => "remosteced" ;
    VP (Imp Pl P3) => "remostezcan" ;
    VP (Pass Sg Masc) => "remostecido" ;
    VP (Pass Sg Fem) => "remostecida" ;
    VP (Pass Pl Masc) => "remostecidos" ;
    VP (Pass Pl Fem) => "remostecidas"
    }
  } ;

lin avergonzar_V = verboV 
 {s = table {
    VI Infn => "avergonzar" ;
    VI Ger => "avergonzando" ;
    VI Part => "avergonzado" ;
    VP (Pres Ind Sg P1) => "avergüenzo" ;
    VP (Pres Ind Sg P2) => "avergüenzas" ;
    VP (Pres Ind Sg P3) => "avergüenza" ;
    VP (Pres Ind Pl P1) => "avergonzamos" ;
    VP (Pres Ind Pl P2) => "avergonzáis" ;
    VP (Pres Ind Pl P3) => "avergüenzan" ;
    VP (Pres Subj Sg P1) => "avergüence" ;
    VP (Pres Subj Sg P2) => "avergüences" ;
    VP (Pres Subj Sg P3) => "avergüence" ;
    VP (Pres Subj Pl P1) => "avergoncemos" ;
    VP (Pres Subj Pl P2) => "avergoncéis" ;
    VP (Pres Subj Pl P3) => "avergüencen" ;
    VP (Impf Ind Sg P1) => "avergonzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "avergonzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "avergonzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "avergonzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "avergonzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "avergonzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"avergonzara" ; "avergonzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"avergonzaras" ; "avergonzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"avergonzara" ; "avergonzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"avergonzáramos" ; "avergonzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"avergonzarais" ; "avergonzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"avergonzaran" ; "avergonzasen"} ;--# notpresent
    VP (Pret Sg P1) => "avergoncé" ;--# notpresent
    VP (Pret Sg P2) => "avergonzaste" ;--# notpresent
    VP (Pret Sg P3) => "avergonzó" ;--# notpresent
    VP (Pret Pl P1) => "avergonzamos" ;--# notpresent
    VP (Pret Pl P2) => "avergonzasteis" ;--# notpresent
    VP (Pret Pl P3) => "avergonzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "avergonzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "avergonzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "avergonzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "avergonzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "avergonzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "avergonzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "avergonzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "avergonzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "avergonzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "avergonzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "avergonzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "avergonzaren" ;--# notpresent
    VP (Cond Sg P1) => "avergonzaría" ;--# notpresent
    VP (Cond Sg P2) => "avergonzarías" ;--# notpresent
    VP (Cond Sg P3) => "avergonzaría" ;--# notpresent
    VP (Cond Pl P1) => "avergonzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "avergonzaríais" ;--# notpresent
    VP (Cond Pl P3) => "avergonzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "avergüenza" ;
    VP (Imp Sg P3) => "avergüence" ;
    VP (Imp Pl P1) => "avergoncemos" ;
    VP (Imp Pl P2) => "avergonzad" ;
    VP (Imp Pl P3) => "avergüencen" ;
    VP (Pass Sg Masc) => "avergonzado" ;
    VP (Pass Sg Fem) => "avergonzada" ;
    VP (Pass Pl Masc) => "avergonzados" ;
    VP (Pass Pl Fem) => "avergonzadas"
    }
  } ;


lin astriñir_V = verboV 
 {s = table {
    VI Infn => "astriñir" ;
    VI Ger => "astriñendo" ;
    VI Part => "astriñido" ;
    VP (Pres Ind Sg P1) => "astriño" ;
    VP (Pres Ind Sg P2) => "astriñes" ;
    VP (Pres Ind Sg P3) => "astriñe" ;
    VP (Pres Ind Pl P1) => "astriñimos" ;
    VP (Pres Ind Pl P2) => "astriñís" ;
    VP (Pres Ind Pl P3) => "astriñen" ;
    VP (Pres Subj Sg P1) => "astriña" ;
    VP (Pres Subj Sg P2) => "astriñas" ;
    VP (Pres Subj Sg P3) => "astriña" ;
    VP (Pres Subj Pl P1) => "astriñamos" ;
    VP (Pres Subj Pl P2) => "astriñáis" ;
    VP (Pres Subj Pl P3) => "astriñan" ;
    VP (Impf Ind Sg P1) => "astriñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "astriñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "astriñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "astriñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "astriñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "astriñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"astriñera" ; "astriñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"astriñeras" ; "astriñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"astriñera" ; "astriñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"astriñéramos" ; "astriñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"astriñerais" ; "astriñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"astriñeran" ; "astriñesen"} ;--# notpresent
    VP (Pret Sg P1) => "astriñí" ;--# notpresent
    VP (Pret Sg P2) => "astriñiste" ;--# notpresent
    VP (Pret Sg P3) => "astriñó" ;--# notpresent
    VP (Pret Pl P1) => "astriñimos" ;--# notpresent
    VP (Pret Pl P2) => "astriñisteis" ;--# notpresent
    VP (Pret Pl P3) => "astriñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "astriñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "astriñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "astriñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "astriñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "astriñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "astriñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "astriñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "astriñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "astriñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "astriñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "astriñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "astriñeren" ;--# notpresent
    VP (Cond Sg P1) => "astriñiría" ;--# notpresent
    VP (Cond Sg P2) => "astriñirías" ;--# notpresent
    VP (Cond Sg P3) => "astriñiría" ;--# notpresent
    VP (Cond Pl P1) => "astriñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "astriñiríais" ;--# notpresent
    VP (Cond Pl P3) => "astriñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "astriñe" ;
    VP (Imp Sg P3) => "astriña" ;
    VP (Imp Pl P1) => "astriñamos" ;
    VP (Imp Pl P2) => "astriñid" ;
    VP (Imp Pl P3) => "astriñan" ;
    VP (Pass Sg Masc) => "astriñido" ;
    VP (Pass Sg Fem) => "astriñida" ;
    VP (Pass Pl Masc) => "astriñidos" ;
    VP (Pass Pl Fem) => "astriñidas"
    }
  } ;

lin bruñir_V = verboV 
 {s = table {
    VI Infn => "bruñir" ;
    VI Ger => "bruñendo" ;
    VI Part => "bruñido" ;
    VP (Pres Ind Sg P1) => "bruño" ;
    VP (Pres Ind Sg P2) => "bruñes" ;
    VP (Pres Ind Sg P3) => "bruñe" ;
    VP (Pres Ind Pl P1) => "bruñimos" ;
    VP (Pres Ind Pl P2) => "bruñís" ;
    VP (Pres Ind Pl P3) => "bruñen" ;
    VP (Pres Subj Sg P1) => "bruña" ;
    VP (Pres Subj Sg P2) => "bruñas" ;
    VP (Pres Subj Sg P3) => "bruña" ;
    VP (Pres Subj Pl P1) => "bruñamos" ;
    VP (Pres Subj Pl P2) => "bruñáis" ;
    VP (Pres Subj Pl P3) => "bruñan" ;
    VP (Impf Ind Sg P1) => "bruñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "bruñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "bruñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "bruñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "bruñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "bruñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"bruñera" ; "bruñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"bruñeras" ; "bruñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"bruñera" ; "bruñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"bruñéramos" ; "bruñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"bruñerais" ; "bruñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"bruñeran" ; "bruñesen"} ;--# notpresent
    VP (Pret Sg P1) => "bruñí" ;--# notpresent
    VP (Pret Sg P2) => "bruñiste" ;--# notpresent
    VP (Pret Sg P3) => "bruñó" ;--# notpresent
    VP (Pret Pl P1) => "bruñimos" ;--# notpresent
    VP (Pret Pl P2) => "bruñisteis" ;--# notpresent
    VP (Pret Pl P3) => "bruñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "bruñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "bruñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "bruñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "bruñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "bruñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "bruñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "bruñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "bruñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "bruñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "bruñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "bruñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "bruñeren" ;--# notpresent
    VP (Cond Sg P1) => "bruñiría" ;--# notpresent
    VP (Cond Sg P2) => "bruñirías" ;--# notpresent
    VP (Cond Sg P3) => "bruñiría" ;--# notpresent
    VP (Cond Pl P1) => "bruñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "bruñiríais" ;--# notpresent
    VP (Cond Pl P3) => "bruñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "bruñe" ;
    VP (Imp Sg P3) => "bruña" ;
    VP (Imp Pl P1) => "bruñamos" ;
    VP (Imp Pl P2) => "bruñid" ;
    VP (Imp Pl P3) => "bruñan" ;
    VP (Pass Sg Masc) => "bruñido" ;
    VP (Pass Sg Fem) => "bruñida" ;
    VP (Pass Pl Masc) => "bruñidos" ;
    VP (Pass Pl Fem) => "bruñidas"
    }
  } ;

lin bullir_V = verboV 
 {s = table {
    VI Infn => "bullir" ;
    VI Ger => "bullendo" ;
    VI Part => "bullido" ;
    VP (Pres Ind Sg P1) => "bullo" ;
    VP (Pres Ind Sg P2) => "bulles" ;
    VP (Pres Ind Sg P3) => "bulle" ;
    VP (Pres Ind Pl P1) => "bullimos" ;
    VP (Pres Ind Pl P2) => "bullís" ;
    VP (Pres Ind Pl P3) => "bullen" ;
    VP (Pres Subj Sg P1) => "bulla" ;
    VP (Pres Subj Sg P2) => "bullas" ;
    VP (Pres Subj Sg P3) => "bulla" ;
    VP (Pres Subj Pl P1) => "bullamos" ;
    VP (Pres Subj Pl P2) => "bulláis" ;
    VP (Pres Subj Pl P3) => "bullan" ;
    VP (Impf Ind Sg P1) => "bullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "bullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "bullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "bullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "bullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "bullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"bullera" ; "bullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"bulleras" ; "bulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"bullera" ; "bullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"bulléramos" ; "bullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"bullerais" ; "bulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"bulleran" ; "bullesen"} ;--# notpresent
    VP (Pret Sg P1) => "bullí" ;--# notpresent
    VP (Pret Sg P2) => "bulliste" ;--# notpresent
    VP (Pret Sg P3) => "bulló" ;--# notpresent
    VP (Pret Pl P1) => "bullimos" ;--# notpresent
    VP (Pret Pl P2) => "bullisteis" ;--# notpresent
    VP (Pret Pl P3) => "bulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "bulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "bullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "bullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "bulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "bulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "bullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "bullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "bulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "bullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "bulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "bullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "bulleren" ;--# notpresent
    VP (Cond Sg P1) => "bulliría" ;--# notpresent
    VP (Cond Sg P2) => "bullirías" ;--# notpresent
    VP (Cond Sg P3) => "bulliría" ;--# notpresent
    VP (Cond Pl P1) => "bulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "bulliríais" ;--# notpresent
    VP (Cond Pl P3) => "bullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "bulle" ;
    VP (Imp Sg P3) => "bulla" ;
    VP (Imp Pl P1) => "bullamos" ;
    VP (Imp Pl P2) => "bullid" ;
    VP (Imp Pl P3) => "bullan" ;
    VP (Pass Sg Masc) => "bullido" ;
    VP (Pass Sg Fem) => "bullida" ;
    VP (Pass Pl Masc) => "bullidos" ;
    VP (Pass Pl Fem) => "bullidas"
    }
  } ;

lin desmullir_V = verboV 
 {s = table {
    VI Infn => "desmullir" ;
    VI Ger => "desmullendo" ;
    VI Part => "desmullido" ;
    VP (Pres Ind Sg P1) => "desmullo" ;
    VP (Pres Ind Sg P2) => "desmulles" ;
    VP (Pres Ind Sg P3) => "desmulle" ;
    VP (Pres Ind Pl P1) => "desmullimos" ;
    VP (Pres Ind Pl P2) => "desmullís" ;
    VP (Pres Ind Pl P3) => "desmullen" ;
    VP (Pres Subj Sg P1) => "desmulla" ;
    VP (Pres Subj Sg P2) => "desmullas" ;
    VP (Pres Subj Sg P3) => "desmulla" ;
    VP (Pres Subj Pl P1) => "desmullamos" ;
    VP (Pres Subj Pl P2) => "desmulláis" ;
    VP (Pres Subj Pl P3) => "desmullan" ;
    VP (Impf Ind Sg P1) => "desmullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmullera" ; "desmullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmulleras" ; "desmulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmullera" ; "desmullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmulléramos" ; "desmullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmullerais" ; "desmulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmulleran" ; "desmullesen"} ;--# notpresent
    VP (Pret Sg P1) => "desmullí" ;--# notpresent
    VP (Pret Sg P2) => "desmulliste" ;--# notpresent
    VP (Pret Sg P3) => "desmulló" ;--# notpresent
    VP (Pret Pl P1) => "desmullimos" ;--# notpresent
    VP (Pret Pl P2) => "desmullisteis" ;--# notpresent
    VP (Pret Pl P3) => "desmulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmulleren" ;--# notpresent
    VP (Cond Sg P1) => "desmulliría" ;--# notpresent
    VP (Cond Sg P2) => "desmullirías" ;--# notpresent
    VP (Cond Sg P3) => "desmulliría" ;--# notpresent
    VP (Cond Pl P1) => "desmulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmulliríais" ;--# notpresent
    VP (Cond Pl P3) => "desmullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmulle" ;
    VP (Imp Sg P3) => "desmulla" ;
    VP (Imp Pl P1) => "desmullamos" ;
    VP (Imp Pl P2) => "desmullid" ;
    VP (Imp Pl P3) => "desmullan" ;
    VP (Pass Sg Masc) => "desmullido" ;
    VP (Pass Sg Fem) => "desmullida" ;
    VP (Pass Pl Masc) => "desmullidos" ;
    VP (Pass Pl Fem) => "desmullidas"
    }
  } ;

lin empeller_V = verboV 
 {s = table {
    VI Infn => "empeller" ;
    VI Ger => "empellendo" ;
    VI Part => "empellido" ;
    VP (Pres Ind Sg P1) => "empello" ;
    VP (Pres Ind Sg P2) => "empelles" ;
    VP (Pres Ind Sg P3) => "empelle" ;
    VP (Pres Ind Pl P1) => "empellemos" ;
    VP (Pres Ind Pl P2) => "empelléis" ;
    VP (Pres Ind Pl P3) => "empellen" ;
    VP (Pres Subj Sg P1) => "empella" ;
    VP (Pres Subj Sg P2) => "empellas" ;
    VP (Pres Subj Sg P3) => "empella" ;
    VP (Pres Subj Pl P1) => "empellamos" ;
    VP (Pres Subj Pl P2) => "empelláis" ;
    VP (Pres Subj Pl P3) => "empellan" ;
    VP (Impf Ind Sg P1) => "empellía" ;--# notpresent
    VP (Impf Ind Sg P2) => "empellías" ;--# notpresent
    VP (Impf Ind Sg P3) => "empellía" ;--# notpresent
    VP (Impf Ind Pl P1) => "empellíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empellíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empellían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empellera" ; "empellese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empelleras" ; "empelleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empellera" ; "empellese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empelléramos" ; "empellésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empellerais" ; "empelleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empelleran" ; "empellesen"} ;--# notpresent
    VP (Pret Sg P1) => "empellí" ;--# notpresent
    VP (Pret Sg P2) => "empelliste" ;--# notpresent
    VP (Pret Sg P3) => "empelló" ;--# notpresent
    VP (Pret Pl P1) => "empellimos" ;--# notpresent
    VP (Pret Pl P2) => "empellisteis" ;--# notpresent
    VP (Pret Pl P3) => "empelleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empelleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empellerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empellerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "empelleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empelleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empellerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empellere" ;--# notpresent
    VP (Fut Subj Sg P2) => "empelleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "empellere" ;--# notpresent
    VP (Fut Subj Pl P1) => "empelléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empellereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empelleren" ;--# notpresent
    VP (Cond Sg P1) => "empellería" ;--# notpresent
    VP (Cond Sg P2) => "empellerías" ;--# notpresent
    VP (Cond Sg P3) => "empellería" ;--# notpresent
    VP (Cond Pl P1) => "empelleríamos" ;--# notpresent
    VP (Cond Pl P2) => "empelleríais" ;--# notpresent
    VP (Cond Pl P3) => "empellerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empelle" ;
    VP (Imp Sg P3) => "empella" ;
    VP (Imp Pl P1) => "empellamos" ;
    VP (Imp Pl P2) => "empelled" ;
    VP (Imp Pl P3) => "empellan" ;
    VP (Pass Sg Masc) => "empellido" ;
    VP (Pass Sg Fem) => "empellida" ;
    VP (Pass Pl Masc) => "empellidos" ;
    VP (Pass Pl Fem) => "empellidas"
    }
  } ;

lin engullir_V = verboV 
 {s = table {
    VI Infn => "engullir" ;
    VI Ger => "engullendo" ;
    VI Part => "engullido" ;
    VP (Pres Ind Sg P1) => "engullo" ;
    VP (Pres Ind Sg P2) => "engulles" ;
    VP (Pres Ind Sg P3) => "engulle" ;
    VP (Pres Ind Pl P1) => "engullimos" ;
    VP (Pres Ind Pl P2) => "engullís" ;
    VP (Pres Ind Pl P3) => "engullen" ;
    VP (Pres Subj Sg P1) => "engulla" ;
    VP (Pres Subj Sg P2) => "engullas" ;
    VP (Pres Subj Sg P3) => "engulla" ;
    VP (Pres Subj Pl P1) => "engullamos" ;
    VP (Pres Subj Pl P2) => "engulláis" ;
    VP (Pres Subj Pl P3) => "engullan" ;
    VP (Impf Ind Sg P1) => "engullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "engullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "engullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "engullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engullera" ; "engullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engulleras" ; "engulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engullera" ; "engullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engulléramos" ; "engullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engullerais" ; "engulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engulleran" ; "engullesen"} ;--# notpresent
    VP (Pret Sg P1) => "engullí" ;--# notpresent
    VP (Pret Sg P2) => "engulliste" ;--# notpresent
    VP (Pret Sg P3) => "engulló" ;--# notpresent
    VP (Pret Pl P1) => "engullimos" ;--# notpresent
    VP (Pret Pl P2) => "engullisteis" ;--# notpresent
    VP (Pret Pl P3) => "engulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "engulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "engulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "engullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "engulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engulleren" ;--# notpresent
    VP (Cond Sg P1) => "engulliría" ;--# notpresent
    VP (Cond Sg P2) => "engullirías" ;--# notpresent
    VP (Cond Sg P3) => "engulliría" ;--# notpresent
    VP (Cond Pl P1) => "engulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "engulliríais" ;--# notpresent
    VP (Cond Pl P3) => "engullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "engulle" ;
    VP (Imp Sg P3) => "engulla" ;
    VP (Imp Pl P1) => "engullamos" ;
    VP (Imp Pl P2) => "engullid" ;
    VP (Imp Pl P3) => "engullan" ;
    VP (Pass Sg Masc) => "engullido" ;
    VP (Pass Sg Fem) => "engullida" ;
    VP (Pass Pl Masc) => "engullidos" ;
    VP (Pass Pl Fem) => "engullidas"
    }
  } ;

lin gañir_V = verboV 
 {s = table {
    VI Infn => "gañir" ;
    VI Ger => "gañendo" ;
    VI Part => "gañido" ;
    VP (Pres Ind Sg P1) => "gaño" ;
    VP (Pres Ind Sg P2) => "gañes" ;
    VP (Pres Ind Sg P3) => "gañe" ;
    VP (Pres Ind Pl P1) => "gañimos" ;
    VP (Pres Ind Pl P2) => "gañís" ;
    VP (Pres Ind Pl P3) => "gañen" ;
    VP (Pres Subj Sg P1) => "gaña" ;
    VP (Pres Subj Sg P2) => "gañas" ;
    VP (Pres Subj Sg P3) => "gaña" ;
    VP (Pres Subj Pl P1) => "gañamos" ;
    VP (Pres Subj Pl P2) => "gañáis" ;
    VP (Pres Subj Pl P3) => "gañan" ;
    VP (Impf Ind Sg P1) => "gañía" ;--# notpresent
    VP (Impf Ind Sg P2) => "gañías" ;--# notpresent
    VP (Impf Ind Sg P3) => "gañía" ;--# notpresent
    VP (Impf Ind Pl P1) => "gañíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "gañíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "gañían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"gañera" ; "gañese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"gañeras" ; "gañeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"gañera" ; "gañese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"gañéramos" ; "gañésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"gañerais" ; "gañeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"gañeran" ; "gañesen"} ;--# notpresent
    VP (Pret Sg P1) => "gañí" ;--# notpresent
    VP (Pret Sg P2) => "gañiste" ;--# notpresent
    VP (Pret Sg P3) => "gañó" ;--# notpresent
    VP (Pret Pl P1) => "gañimos" ;--# notpresent
    VP (Pret Pl P2) => "gañisteis" ;--# notpresent
    VP (Pret Pl P3) => "gañeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "gañiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "gañirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "gañirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "gañiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "gañiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "gañirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "gañere" ;--# notpresent
    VP (Fut Subj Sg P2) => "gañeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "gañere" ;--# notpresent
    VP (Fut Subj Pl P1) => "gañéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "gañereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "gañeren" ;--# notpresent
    VP (Cond Sg P1) => "gañiría" ;--# notpresent
    VP (Cond Sg P2) => "gañirías" ;--# notpresent
    VP (Cond Sg P3) => "gañiría" ;--# notpresent
    VP (Cond Pl P1) => "gañiríamos" ;--# notpresent
    VP (Cond Pl P2) => "gañiríais" ;--# notpresent
    VP (Cond Pl P3) => "gañirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "gañe" ;
    VP (Imp Sg P3) => "gaña" ;
    VP (Imp Pl P1) => "gañamos" ;
    VP (Imp Pl P2) => "gañid" ;
    VP (Imp Pl P3) => "gañan" ;
    VP (Pass Sg Masc) => "gañido" ;
    VP (Pass Sg Fem) => "gañida" ;
    VP (Pass Pl Masc) => "gañidos" ;
    VP (Pass Pl Fem) => "gañidas"
    }
  } ;

lin gruñir_V = verboV 
 {s = table {
    VI Infn => "gruñir" ;
    VI Ger => "gruñendo" ;
    VI Part => "gruñido" ;
    VP (Pres Ind Sg P1) => "gruño" ;
    VP (Pres Ind Sg P2) => "gruñes" ;
    VP (Pres Ind Sg P3) => "gruñe" ;
    VP (Pres Ind Pl P1) => "gruñimos" ;
    VP (Pres Ind Pl P2) => "gruñís" ;
    VP (Pres Ind Pl P3) => "gruñen" ;
    VP (Pres Subj Sg P1) => "gruña" ;
    VP (Pres Subj Sg P2) => "gruñas" ;
    VP (Pres Subj Sg P3) => "gruña" ;
    VP (Pres Subj Pl P1) => "gruñamos" ;
    VP (Pres Subj Pl P2) => "gruñáis" ;
    VP (Pres Subj Pl P3) => "gruñan" ;
    VP (Impf Ind Sg P1) => "gruñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "gruñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "gruñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "gruñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "gruñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "gruñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"gruñera" ; "gruñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"gruñeras" ; "gruñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"gruñera" ; "gruñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"gruñéramos" ; "gruñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"gruñerais" ; "gruñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"gruñeran" ; "gruñesen"} ;--# notpresent
    VP (Pret Sg P1) => "gruñí" ;--# notpresent
    VP (Pret Sg P2) => "gruñiste" ;--# notpresent
    VP (Pret Sg P3) => "gruñó" ;--# notpresent
    VP (Pret Pl P1) => "gruñimos" ;--# notpresent
    VP (Pret Pl P2) => "gruñisteis" ;--# notpresent
    VP (Pret Pl P3) => "gruñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "gruñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "gruñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "gruñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "gruñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "gruñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "gruñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "gruñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "gruñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "gruñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "gruñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "gruñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "gruñeren" ;--# notpresent
    VP (Cond Sg P1) => "gruñiría" ;--# notpresent
    VP (Cond Sg P2) => "gruñirías" ;--# notpresent
    VP (Cond Sg P3) => "gruñiría" ;--# notpresent
    VP (Cond Pl P1) => "gruñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "gruñiríais" ;--# notpresent
    VP (Cond Pl P3) => "gruñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "gruñe" ;
    VP (Imp Sg P3) => "gruña" ;
    VP (Imp Pl P1) => "gruñamos" ;
    VP (Imp Pl P2) => "gruñid" ;
    VP (Imp Pl P3) => "gruñan" ;
    VP (Pass Sg Masc) => "gruñido" ;
    VP (Pass Sg Fem) => "gruñida" ;
    VP (Pass Pl Masc) => "gruñidos" ;
    VP (Pass Pl Fem) => "gruñidas"
    }
  } ;

lin guañir_V = verboV 
 {s = table {
    VI Infn => "guañir" ;
    VI Ger => "guañendo" ;
    VI Part => "guañido" ;
    VP (Pres Ind Sg P1) => "guaño" ;
    VP (Pres Ind Sg P2) => "guañes" ;
    VP (Pres Ind Sg P3) => "guañe" ;
    VP (Pres Ind Pl P1) => "guañimos" ;
    VP (Pres Ind Pl P2) => "guañís" ;
    VP (Pres Ind Pl P3) => "guañen" ;
    VP (Pres Subj Sg P1) => "guaña" ;
    VP (Pres Subj Sg P2) => "guañas" ;
    VP (Pres Subj Sg P3) => "guaña" ;
    VP (Pres Subj Pl P1) => "guañamos" ;
    VP (Pres Subj Pl P2) => "guañáis" ;
    VP (Pres Subj Pl P3) => "guañan" ;
    VP (Impf Ind Sg P1) => "guañía" ;--# notpresent
    VP (Impf Ind Sg P2) => "guañías" ;--# notpresent
    VP (Impf Ind Sg P3) => "guañía" ;--# notpresent
    VP (Impf Ind Pl P1) => "guañíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "guañíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "guañían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"guañera" ; "guañese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"guañeras" ; "guañeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"guañera" ; "guañese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"guañéramos" ; "guañésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"guañerais" ; "guañeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"guañeran" ; "guañesen"} ;--# notpresent
    VP (Pret Sg P1) => "guañí" ;--# notpresent
    VP (Pret Sg P2) => "guañiste" ;--# notpresent
    VP (Pret Sg P3) => "guañó" ;--# notpresent
    VP (Pret Pl P1) => "guañimos" ;--# notpresent
    VP (Pret Pl P2) => "guañisteis" ;--# notpresent
    VP (Pret Pl P3) => "guañeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "guañiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "guañirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "guañirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "guañiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "guañiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "guañirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "guañere" ;--# notpresent
    VP (Fut Subj Sg P2) => "guañeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "guañere" ;--# notpresent
    VP (Fut Subj Pl P1) => "guañéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "guañereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "guañeren" ;--# notpresent
    VP (Cond Sg P1) => "guañiría" ;--# notpresent
    VP (Cond Sg P2) => "guañirías" ;--# notpresent
    VP (Cond Sg P3) => "guañiría" ;--# notpresent
    VP (Cond Pl P1) => "guañiríamos" ;--# notpresent
    VP (Cond Pl P2) => "guañiríais" ;--# notpresent
    VP (Cond Pl P3) => "guañirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "guañe" ;
    VP (Imp Sg P3) => "guaña" ;
    VP (Imp Pl P1) => "guañamos" ;
    VP (Imp Pl P2) => "guañid" ;
    VP (Imp Pl P3) => "guañan" ;
    VP (Pass Sg Masc) => "guañido" ;
    VP (Pass Sg Fem) => "guañida" ;
    VP (Pass Pl Masc) => "guañidos" ;
    VP (Pass Pl Fem) => "guañidas"
    }
  } ;

lin juñir_V = verboV 
 {s = table {
    VI Infn => "juñir" ;
    VI Ger => "juñendo" ;
    VI Part => "juñido" ;
    VP (Pres Ind Sg P1) => "juño" ;
    VP (Pres Ind Sg P2) => "juñes" ;
    VP (Pres Ind Sg P3) => "juñe" ;
    VP (Pres Ind Pl P1) => "juñimos" ;
    VP (Pres Ind Pl P2) => "juñís" ;
    VP (Pres Ind Pl P3) => "juñen" ;
    VP (Pres Subj Sg P1) => "juña" ;
    VP (Pres Subj Sg P2) => "juñas" ;
    VP (Pres Subj Sg P3) => "juña" ;
    VP (Pres Subj Pl P1) => "juñamos" ;
    VP (Pres Subj Pl P2) => "juñáis" ;
    VP (Pres Subj Pl P3) => "juñan" ;
    VP (Impf Ind Sg P1) => "juñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "juñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "juñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "juñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "juñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "juñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"juñera" ; "juñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"juñeras" ; "juñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"juñera" ; "juñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"juñéramos" ; "juñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"juñerais" ; "juñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"juñeran" ; "juñesen"} ;--# notpresent
    VP (Pret Sg P1) => "juñí" ;--# notpresent
    VP (Pret Sg P2) => "juñiste" ;--# notpresent
    VP (Pret Sg P3) => "juñó" ;--# notpresent
    VP (Pret Pl P1) => "juñimos" ;--# notpresent
    VP (Pret Pl P2) => "juñisteis" ;--# notpresent
    VP (Pret Pl P3) => "juñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "juñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "juñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "juñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "juñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "juñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "juñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "juñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "juñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "juñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "juñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "juñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "juñeren" ;--# notpresent
    VP (Cond Sg P1) => "juñiría" ;--# notpresent
    VP (Cond Sg P2) => "juñirías" ;--# notpresent
    VP (Cond Sg P3) => "juñiría" ;--# notpresent
    VP (Cond Pl P1) => "juñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "juñiríais" ;--# notpresent
    VP (Cond Pl P3) => "juñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "juñe" ;
    VP (Imp Sg P3) => "juña" ;
    VP (Imp Pl P1) => "juñamos" ;
    VP (Imp Pl P2) => "juñid" ;
    VP (Imp Pl P3) => "juñan" ;
    VP (Pass Sg Masc) => "juñido" ;
    VP (Pass Sg Fem) => "juñida" ;
    VP (Pass Pl Masc) => "juñidos" ;
    VP (Pass Pl Fem) => "juñidas"
    }
  } ;

lin mullir_V = verboV 
 {s = table {
    VI Infn => "mullir" ;
    VI Ger => "mullendo" ;
    VI Part => "mullido" ;
    VP (Pres Ind Sg P1) => "mullo" ;
    VP (Pres Ind Sg P2) => "mulles" ;
    VP (Pres Ind Sg P3) => "mulle" ;
    VP (Pres Ind Pl P1) => "mullimos" ;
    VP (Pres Ind Pl P2) => "mullís" ;
    VP (Pres Ind Pl P3) => "mullen" ;
    VP (Pres Subj Sg P1) => "mulla" ;
    VP (Pres Subj Sg P2) => "mullas" ;
    VP (Pres Subj Sg P3) => "mulla" ;
    VP (Pres Subj Pl P1) => "mullamos" ;
    VP (Pres Subj Pl P2) => "mulláis" ;
    VP (Pres Subj Pl P3) => "mullan" ;
    VP (Impf Ind Sg P1) => "mullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "mullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mullera" ; "mullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mulleras" ; "mulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mullera" ; "mullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mulléramos" ; "mullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mullerais" ; "mulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mulleran" ; "mullesen"} ;--# notpresent
    VP (Pret Sg P1) => "mullí" ;--# notpresent
    VP (Pret Sg P2) => "mulliste" ;--# notpresent
    VP (Pret Sg P3) => "mulló" ;--# notpresent
    VP (Pret Pl P1) => "mullimos" ;--# notpresent
    VP (Pret Pl P2) => "mullisteis" ;--# notpresent
    VP (Pret Pl P3) => "mulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "mulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "mullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "mulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mulleren" ;--# notpresent
    VP (Cond Sg P1) => "mulliría" ;--# notpresent
    VP (Cond Sg P2) => "mullirías" ;--# notpresent
    VP (Cond Sg P3) => "mulliría" ;--# notpresent
    VP (Cond Pl P1) => "mulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "mulliríais" ;--# notpresent
    VP (Cond Pl P3) => "mullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mulle" ;
    VP (Imp Sg P3) => "mulla" ;
    VP (Imp Pl P1) => "mullamos" ;
    VP (Imp Pl P2) => "mullid" ;
    VP (Imp Pl P3) => "mullan" ;
    VP (Pass Sg Masc) => "mullido" ;
    VP (Pass Sg Fem) => "mullida" ;
    VP (Pass Pl Masc) => "mullidos" ;
    VP (Pass Pl Fem) => "mullidas"
    }
  } ;

lin muñir_V = verboV 
 {s = table {
    VI Infn => "muñir" ;
    VI Ger => "muñendo" ;
    VI Part => "muñido" ;
    VP (Pres Ind Sg P1) => "muño" ;
    VP (Pres Ind Sg P2) => "muñes" ;
    VP (Pres Ind Sg P3) => "muñe" ;
    VP (Pres Ind Pl P1) => "muñimos" ;
    VP (Pres Ind Pl P2) => "muñís" ;
    VP (Pres Ind Pl P3) => "muñen" ;
    VP (Pres Subj Sg P1) => "muña" ;
    VP (Pres Subj Sg P2) => "muñas" ;
    VP (Pres Subj Sg P3) => "muña" ;
    VP (Pres Subj Pl P1) => "muñamos" ;
    VP (Pres Subj Pl P2) => "muñáis" ;
    VP (Pres Subj Pl P3) => "muñan" ;
    VP (Impf Ind Sg P1) => "muñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "muñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "muñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "muñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "muñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "muñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"muñera" ; "muñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"muñeras" ; "muñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"muñera" ; "muñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"muñéramos" ; "muñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"muñerais" ; "muñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"muñeran" ; "muñesen"} ;--# notpresent
    VP (Pret Sg P1) => "muñí" ;--# notpresent
    VP (Pret Sg P2) => "muñiste" ;--# notpresent
    VP (Pret Sg P3) => "muñó" ;--# notpresent
    VP (Pret Pl P1) => "muñimos" ;--# notpresent
    VP (Pret Pl P2) => "muñisteis" ;--# notpresent
    VP (Pret Pl P3) => "muñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "muñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "muñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "muñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "muñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "muñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "muñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "muñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "muñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "muñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "muñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "muñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "muñeren" ;--# notpresent
    VP (Cond Sg P1) => "muñiría" ;--# notpresent
    VP (Cond Sg P2) => "muñirías" ;--# notpresent
    VP (Cond Sg P3) => "muñiría" ;--# notpresent
    VP (Cond Pl P1) => "muñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "muñiríais" ;--# notpresent
    VP (Cond Pl P3) => "muñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muñe" ;
    VP (Imp Sg P3) => "muña" ;
    VP (Imp Pl P1) => "muñamos" ;
    VP (Imp Pl P2) => "muñid" ;
    VP (Imp Pl P3) => "muñan" ;
    VP (Pass Sg Masc) => "muñido" ;
    VP (Pass Sg Fem) => "muñida" ;
    VP (Pass Pl Masc) => "muñidos" ;
    VP (Pass Pl Fem) => "muñidas"
    }
  } ;

lin plañir_V = verboV 
 {s = table {
    VI Infn => "plañir" ;
    VI Ger => "plañendo" ;
    VI Part => "plañido" ;
    VP (Pres Ind Sg P1) => "plaño" ;
    VP (Pres Ind Sg P2) => "plañes" ;
    VP (Pres Ind Sg P3) => "plañe" ;
    VP (Pres Ind Pl P1) => "plañimos" ;
    VP (Pres Ind Pl P2) => "plañís" ;
    VP (Pres Ind Pl P3) => "plañen" ;
    VP (Pres Subj Sg P1) => "plaña" ;
    VP (Pres Subj Sg P2) => "plañas" ;
    VP (Pres Subj Sg P3) => "plaña" ;
    VP (Pres Subj Pl P1) => "plañamos" ;
    VP (Pres Subj Pl P2) => "plañáis" ;
    VP (Pres Subj Pl P3) => "plañan" ;
    VP (Impf Ind Sg P1) => "plañía" ;--# notpresent
    VP (Impf Ind Sg P2) => "plañías" ;--# notpresent
    VP (Impf Ind Sg P3) => "plañía" ;--# notpresent
    VP (Impf Ind Pl P1) => "plañíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "plañíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "plañían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"plañera" ; "plañese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"plañeras" ; "plañeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"plañera" ; "plañese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"plañéramos" ; "plañésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"plañerais" ; "plañeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"plañeran" ; "plañesen"} ;--# notpresent
    VP (Pret Sg P1) => "plañí" ;--# notpresent
    VP (Pret Sg P2) => "plañiste" ;--# notpresent
    VP (Pret Sg P3) => "plañó" ;--# notpresent
    VP (Pret Pl P1) => "plañimos" ;--# notpresent
    VP (Pret Pl P2) => "plañisteis" ;--# notpresent
    VP (Pret Pl P3) => "plañeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "plañiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "plañirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "plañirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "plañiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "plañiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "plañirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "plañere" ;--# notpresent
    VP (Fut Subj Sg P2) => "plañeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "plañere" ;--# notpresent
    VP (Fut Subj Pl P1) => "plañéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "plañereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "plañeren" ;--# notpresent
    VP (Cond Sg P1) => "plañiría" ;--# notpresent
    VP (Cond Sg P2) => "plañirías" ;--# notpresent
    VP (Cond Sg P3) => "plañiría" ;--# notpresent
    VP (Cond Pl P1) => "plañiríamos" ;--# notpresent
    VP (Cond Pl P2) => "plañiríais" ;--# notpresent
    VP (Cond Pl P3) => "plañirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "plañe" ;
    VP (Imp Sg P3) => "plaña" ;
    VP (Imp Pl P1) => "plañamos" ;
    VP (Imp Pl P2) => "plañid" ;
    VP (Imp Pl P3) => "plañan" ;
    VP (Pass Sg Masc) => "plañido" ;
    VP (Pass Sg Fem) => "plañida" ;
    VP (Pass Pl Masc) => "plañidos" ;
    VP (Pass Pl Fem) => "plañidas"
    }
  } ;

lin rebullir_V = verboV 
 {s = table {
    VI Infn => "rebullir" ;
    VI Ger => "rebullendo" ;
    VI Part => "rebullido" ;
    VP (Pres Ind Sg P1) => "rebullo" ;
    VP (Pres Ind Sg P2) => "rebulles" ;
    VP (Pres Ind Sg P3) => "rebulle" ;
    VP (Pres Ind Pl P1) => "rebullimos" ;
    VP (Pres Ind Pl P2) => "rebullís" ;
    VP (Pres Ind Pl P3) => "rebullen" ;
    VP (Pres Subj Sg P1) => "rebulla" ;
    VP (Pres Subj Sg P2) => "rebullas" ;
    VP (Pres Subj Sg P3) => "rebulla" ;
    VP (Pres Subj Pl P1) => "rebullamos" ;
    VP (Pres Subj Pl P2) => "rebulláis" ;
    VP (Pres Subj Pl P3) => "rebullan" ;
    VP (Impf Ind Sg P1) => "rebullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rebullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rebullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rebullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rebullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rebullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rebullera" ; "rebullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rebulleras" ; "rebulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rebullera" ; "rebullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rebulléramos" ; "rebullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rebullerais" ; "rebulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rebulleran" ; "rebullesen"} ;--# notpresent
    VP (Pret Sg P1) => "rebullí" ;--# notpresent
    VP (Pret Sg P2) => "rebulliste" ;--# notpresent
    VP (Pret Sg P3) => "rebulló" ;--# notpresent
    VP (Pret Pl P1) => "rebullimos" ;--# notpresent
    VP (Pret Pl P2) => "rebullisteis" ;--# notpresent
    VP (Pret Pl P3) => "rebulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rebulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rebullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rebullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rebulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rebulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rebullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rebullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rebulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rebullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rebulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rebullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rebulleren" ;--# notpresent
    VP (Cond Sg P1) => "rebulliría" ;--# notpresent
    VP (Cond Sg P2) => "rebullirías" ;--# notpresent
    VP (Cond Sg P3) => "rebulliría" ;--# notpresent
    VP (Cond Pl P1) => "rebulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "rebulliríais" ;--# notpresent
    VP (Cond Pl P3) => "rebullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rebulle" ;
    VP (Imp Sg P3) => "rebulla" ;
    VP (Imp Pl P1) => "rebullamos" ;
    VP (Imp Pl P2) => "rebullid" ;
    VP (Imp Pl P3) => "rebullan" ;
    VP (Pass Sg Masc) => "rebullido" ;
    VP (Pass Sg Fem) => "rebullida" ;
    VP (Pass Pl Masc) => "rebullidos" ;
    VP (Pass Pl Fem) => "rebullidas"
    }
  } ;

lin regañir_V = verboV 
 {s = table {
    VI Infn => "regañir" ;
    VI Ger => "regañendo" ;
    VI Part => "regañido" ;
    VP (Pres Ind Sg P1) => "regaño" ;
    VP (Pres Ind Sg P2) => "regañes" ;
    VP (Pres Ind Sg P3) => "regañe" ;
    VP (Pres Ind Pl P1) => "regañimos" ;
    VP (Pres Ind Pl P2) => "regañís" ;
    VP (Pres Ind Pl P3) => "regañen" ;
    VP (Pres Subj Sg P1) => "regaña" ;
    VP (Pres Subj Sg P2) => "regañas" ;
    VP (Pres Subj Sg P3) => "regaña" ;
    VP (Pres Subj Pl P1) => "regañamos" ;
    VP (Pres Subj Pl P2) => "regañáis" ;
    VP (Pres Subj Pl P3) => "regañan" ;
    VP (Impf Ind Sg P1) => "regañía" ;--# notpresent
    VP (Impf Ind Sg P2) => "regañías" ;--# notpresent
    VP (Impf Ind Sg P3) => "regañía" ;--# notpresent
    VP (Impf Ind Pl P1) => "regañíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "regañíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "regañían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"regañera" ; "regañese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"regañeras" ; "regañeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"regañera" ; "regañese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"regañéramos" ; "regañésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"regañerais" ; "regañeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"regañeran" ; "regañesen"} ;--# notpresent
    VP (Pret Sg P1) => "regañí" ;--# notpresent
    VP (Pret Sg P2) => "regañiste" ;--# notpresent
    VP (Pret Sg P3) => "regañó" ;--# notpresent
    VP (Pret Pl P1) => "regañimos" ;--# notpresent
    VP (Pret Pl P2) => "regañisteis" ;--# notpresent
    VP (Pret Pl P3) => "regañeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "regañiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "regañirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "regañirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "regañiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "regañiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "regañirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "regañere" ;--# notpresent
    VP (Fut Subj Sg P2) => "regañeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "regañere" ;--# notpresent
    VP (Fut Subj Pl P1) => "regañéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "regañereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "regañeren" ;--# notpresent
    VP (Cond Sg P1) => "regañiría" ;--# notpresent
    VP (Cond Sg P2) => "regañirías" ;--# notpresent
    VP (Cond Sg P3) => "regañiría" ;--# notpresent
    VP (Cond Pl P1) => "regañiríamos" ;--# notpresent
    VP (Cond Pl P2) => "regañiríais" ;--# notpresent
    VP (Cond Pl P3) => "regañirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "regañe" ;
    VP (Imp Sg P3) => "regaña" ;
    VP (Imp Pl P1) => "regañamos" ;
    VP (Imp Pl P2) => "regañid" ;
    VP (Imp Pl P3) => "regañan" ;
    VP (Pass Sg Masc) => "regañido" ;
    VP (Pass Sg Fem) => "regañida" ;
    VP (Pass Pl Masc) => "regañidos" ;
    VP (Pass Pl Fem) => "regañidas"
    }
  } ;

lin regruñir_V = verboV 
 {s = table {
    VI Infn => "regruñir" ;
    VI Ger => "regruñendo" ;
    VI Part => "regruñido" ;
    VP (Pres Ind Sg P1) => "regruño" ;
    VP (Pres Ind Sg P2) => "regruñes" ;
    VP (Pres Ind Sg P3) => "regruñe" ;
    VP (Pres Ind Pl P1) => "regruñimos" ;
    VP (Pres Ind Pl P2) => "regruñís" ;
    VP (Pres Ind Pl P3) => "regruñen" ;
    VP (Pres Subj Sg P1) => "regruña" ;
    VP (Pres Subj Sg P2) => "regruñas" ;
    VP (Pres Subj Sg P3) => "regruña" ;
    VP (Pres Subj Pl P1) => "regruñamos" ;
    VP (Pres Subj Pl P2) => "regruñáis" ;
    VP (Pres Subj Pl P3) => "regruñan" ;
    VP (Impf Ind Sg P1) => "regruñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "regruñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "regruñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "regruñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "regruñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "regruñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"regruñera" ; "regruñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"regruñeras" ; "regruñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"regruñera" ; "regruñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"regruñéramos" ; "regruñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"regruñerais" ; "regruñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"regruñeran" ; "regruñesen"} ;--# notpresent
    VP (Pret Sg P1) => "regruñí" ;--# notpresent
    VP (Pret Sg P2) => "regruñiste" ;--# notpresent
    VP (Pret Sg P3) => "regruñó" ;--# notpresent
    VP (Pret Pl P1) => "regruñimos" ;--# notpresent
    VP (Pret Pl P2) => "regruñisteis" ;--# notpresent
    VP (Pret Pl P3) => "regruñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "regruñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "regruñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "regruñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "regruñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "regruñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "regruñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "regruñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "regruñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "regruñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "regruñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "regruñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "regruñeren" ;--# notpresent
    VP (Cond Sg P1) => "regruñiría" ;--# notpresent
    VP (Cond Sg P2) => "regruñirías" ;--# notpresent
    VP (Cond Sg P3) => "regruñiría" ;--# notpresent
    VP (Cond Pl P1) => "regruñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "regruñiríais" ;--# notpresent
    VP (Cond Pl P3) => "regruñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "regruñe" ;
    VP (Imp Sg P3) => "regruña" ;
    VP (Imp Pl P1) => "regruñamos" ;
    VP (Imp Pl P2) => "regruñid" ;
    VP (Imp Pl P3) => "regruñan" ;
    VP (Pass Sg Masc) => "regruñido" ;
    VP (Pass Sg Fem) => "regruñida" ;
    VP (Pass Pl Masc) => "regruñidos" ;
    VP (Pass Pl Fem) => "regruñidas"
    }
  } ;

lin remullir_V = verboV 
 {s = table {
    VI Infn => "remullir" ;
    VI Ger => "remullendo" ;
    VI Part => "remullido" ;
    VP (Pres Ind Sg P1) => "remullo" ;
    VP (Pres Ind Sg P2) => "remulles" ;
    VP (Pres Ind Sg P3) => "remulle" ;
    VP (Pres Ind Pl P1) => "remullimos" ;
    VP (Pres Ind Pl P2) => "remullís" ;
    VP (Pres Ind Pl P3) => "remullen" ;
    VP (Pres Subj Sg P1) => "remulla" ;
    VP (Pres Subj Sg P2) => "remullas" ;
    VP (Pres Subj Sg P3) => "remulla" ;
    VP (Pres Subj Pl P1) => "remullamos" ;
    VP (Pres Subj Pl P2) => "remulláis" ;
    VP (Pres Subj Pl P3) => "remullan" ;
    VP (Impf Ind Sg P1) => "remullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "remullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "remullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "remullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remullera" ; "remullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remulleras" ; "remulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remullera" ; "remullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remulléramos" ; "remullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remullerais" ; "remulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remulleran" ; "remullesen"} ;--# notpresent
    VP (Pret Sg P1) => "remullí" ;--# notpresent
    VP (Pret Sg P2) => "remulliste" ;--# notpresent
    VP (Pret Sg P3) => "remulló" ;--# notpresent
    VP (Pret Pl P1) => "remullimos" ;--# notpresent
    VP (Pret Pl P2) => "remullisteis" ;--# notpresent
    VP (Pret Pl P3) => "remulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "remulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "remulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "remullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "remulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remulleren" ;--# notpresent
    VP (Cond Sg P1) => "remulliría" ;--# notpresent
    VP (Cond Sg P2) => "remullirías" ;--# notpresent
    VP (Cond Sg P3) => "remulliría" ;--# notpresent
    VP (Cond Pl P1) => "remulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "remulliríais" ;--# notpresent
    VP (Cond Pl P3) => "remullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remulle" ;
    VP (Imp Sg P3) => "remulla" ;
    VP (Imp Pl P1) => "remullamos" ;
    VP (Imp Pl P2) => "remullid" ;
    VP (Imp Pl P3) => "remullan" ;
    VP (Pass Sg Masc) => "remullido" ;
    VP (Pass Sg Fem) => "remullida" ;
    VP (Pass Pl Masc) => "remullidos" ;
    VP (Pass Pl Fem) => "remullidas"
    }
  } ;

lin restriñir_V = verboV 
 {s = table {
    VI Infn => "restriñir" ;
    VI Ger => "restriñendo" ;
    VI Part => "restriñido" ;
    VP (Pres Ind Sg P1) => "restriño" ;
    VP (Pres Ind Sg P2) => "restriñes" ;
    VP (Pres Ind Sg P3) => "restriñe" ;
    VP (Pres Ind Pl P1) => "restriñimos" ;
    VP (Pres Ind Pl P2) => "restriñís" ;
    VP (Pres Ind Pl P3) => "restriñen" ;
    VP (Pres Subj Sg P1) => "restriña" ;
    VP (Pres Subj Sg P2) => "restriñas" ;
    VP (Pres Subj Sg P3) => "restriña" ;
    VP (Pres Subj Pl P1) => "restriñamos" ;
    VP (Pres Subj Pl P2) => "restriñáis" ;
    VP (Pres Subj Pl P3) => "restriñan" ;
    VP (Impf Ind Sg P1) => "restriñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "restriñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "restriñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "restriñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "restriñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "restriñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"restriñera" ; "restriñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"restriñeras" ; "restriñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"restriñera" ; "restriñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"restriñéramos" ; "restriñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"restriñerais" ; "restriñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"restriñeran" ; "restriñesen"} ;--# notpresent
    VP (Pret Sg P1) => "restriñí" ;--# notpresent
    VP (Pret Sg P2) => "restriñiste" ;--# notpresent
    VP (Pret Sg P3) => "restriñó" ;--# notpresent
    VP (Pret Pl P1) => "restriñimos" ;--# notpresent
    VP (Pret Pl P2) => "restriñisteis" ;--# notpresent
    VP (Pret Pl P3) => "restriñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "restriñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "restriñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "restriñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "restriñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "restriñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "restriñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "restriñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "restriñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "restriñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "restriñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "restriñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "restriñeren" ;--# notpresent
    VP (Cond Sg P1) => "restriñiría" ;--# notpresent
    VP (Cond Sg P2) => "restriñirías" ;--# notpresent
    VP (Cond Sg P3) => "restriñiría" ;--# notpresent
    VP (Cond Pl P1) => "restriñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "restriñiríais" ;--# notpresent
    VP (Cond Pl P3) => "restriñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "restriñe" ;
    VP (Imp Sg P3) => "restriña" ;
    VP (Imp Pl P1) => "restriñamos" ;
    VP (Imp Pl P2) => "restriñid" ;
    VP (Imp Pl P3) => "restriñan" ;
    VP (Pass Sg Masc) => "restriñido" ;
    VP (Pass Sg Fem) => "restriñida" ;
    VP (Pass Pl Masc) => "restriñidos" ;
    VP (Pass Pl Fem) => "restriñidas"
    }
  } ;

lin retiñir_V = verboV 
 {s = table {
    VI Infn => "retiñir" ;
    VI Ger => "retiñendo" ;
    VI Part => "retiñido" ;
    VP (Pres Ind Sg P1) => "retiño" ;
    VP (Pres Ind Sg P2) => "retiñes" ;
    VP (Pres Ind Sg P3) => "retiñe" ;
    VP (Pres Ind Pl P1) => "retiñimos" ;
    VP (Pres Ind Pl P2) => "retiñís" ;
    VP (Pres Ind Pl P3) => "retiñen" ;
    VP (Pres Subj Sg P1) => "retiña" ;
    VP (Pres Subj Sg P2) => "retiñas" ;
    VP (Pres Subj Sg P3) => "retiña" ;
    VP (Pres Subj Pl P1) => "retiñamos" ;
    VP (Pres Subj Pl P2) => "retiñáis" ;
    VP (Pres Subj Pl P3) => "retiñan" ;
    VP (Impf Ind Sg P1) => "retiñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retiñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retiñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retiñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retiñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retiñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retiñera" ; "retiñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retiñeras" ; "retiñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retiñera" ; "retiñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retiñéramos" ; "retiñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retiñerais" ; "retiñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retiñeran" ; "retiñesen"} ;--# notpresent
    VP (Pret Sg P1) => "retiñí" ;--# notpresent
    VP (Pret Sg P2) => "retiñiste" ;--# notpresent
    VP (Pret Sg P3) => "retiñó" ;--# notpresent
    VP (Pret Pl P1) => "retiñimos" ;--# notpresent
    VP (Pret Pl P2) => "retiñisteis" ;--# notpresent
    VP (Pret Pl P3) => "retiñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retiñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retiñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retiñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retiñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retiñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retiñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retiñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retiñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retiñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retiñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retiñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retiñeren" ;--# notpresent
    VP (Cond Sg P1) => "retiñiría" ;--# notpresent
    VP (Cond Sg P2) => "retiñirías" ;--# notpresent
    VP (Cond Sg P3) => "retiñiría" ;--# notpresent
    VP (Cond Pl P1) => "retiñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "retiñiríais" ;--# notpresent
    VP (Cond Pl P3) => "retiñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retiñe" ;
    VP (Imp Sg P3) => "retiña" ;
    VP (Imp Pl P1) => "retiñamos" ;
    VP (Imp Pl P2) => "retiñid" ;
    VP (Imp Pl P3) => "retiñan" ;
    VP (Pass Sg Masc) => "retiñido" ;
    VP (Pass Sg Fem) => "retiñida" ;
    VP (Pass Pl Masc) => "retiñidos" ;
    VP (Pass Pl Fem) => "retiñidas"
    }
  } ;

lin salpullir_V = verboV 
 {s = table {
    VI Infn => "salpullir" ;
    VI Ger => "salpullendo" ;
    VI Part => "salpullido" ;
    VP (Pres Ind Sg P1) => "salpullo" ;
    VP (Pres Ind Sg P2) => "salpulles" ;
    VP (Pres Ind Sg P3) => "salpulle" ;
    VP (Pres Ind Pl P1) => "salpullimos" ;
    VP (Pres Ind Pl P2) => "salpullís" ;
    VP (Pres Ind Pl P3) => "salpullen" ;
    VP (Pres Subj Sg P1) => "salpulla" ;
    VP (Pres Subj Sg P2) => "salpullas" ;
    VP (Pres Subj Sg P3) => "salpulla" ;
    VP (Pres Subj Pl P1) => "salpullamos" ;
    VP (Pres Subj Pl P2) => "salpulláis" ;
    VP (Pres Subj Pl P3) => "salpullan" ;
    VP (Impf Ind Sg P1) => "salpullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "salpullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "salpullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "salpullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "salpullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "salpullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"salpullera" ; "salpullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"salpulleras" ; "salpulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"salpullera" ; "salpullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"salpulléramos" ; "salpullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"salpullerais" ; "salpulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"salpulleran" ; "salpullesen"} ;--# notpresent
    VP (Pret Sg P1) => "salpullí" ;--# notpresent
    VP (Pret Sg P2) => "salpulliste" ;--# notpresent
    VP (Pret Sg P3) => "salpulló" ;--# notpresent
    VP (Pret Pl P1) => "salpullimos" ;--# notpresent
    VP (Pret Pl P2) => "salpullisteis" ;--# notpresent
    VP (Pret Pl P3) => "salpulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "salpulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "salpullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "salpullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "salpulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "salpulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "salpullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "salpullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "salpulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "salpullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "salpulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "salpullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "salpulleren" ;--# notpresent
    VP (Cond Sg P1) => "salpulliría" ;--# notpresent
    VP (Cond Sg P2) => "salpullirías" ;--# notpresent
    VP (Cond Sg P3) => "salpulliría" ;--# notpresent
    VP (Cond Pl P1) => "salpulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "salpulliríais" ;--# notpresent
    VP (Cond Pl P3) => "salpullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "salpulle" ;
    VP (Imp Sg P3) => "salpulla" ;
    VP (Imp Pl P1) => "salpullamos" ;
    VP (Imp Pl P2) => "salpullid" ;
    VP (Imp Pl P3) => "salpullan" ;
    VP (Pass Sg Masc) => "salpullido" ;
    VP (Pass Sg Fem) => "salpullida" ;
    VP (Pass Pl Masc) => "salpullidos" ;
    VP (Pass Pl Fem) => "salpullidas"
    }
  } ;

lin sarpullir_V = verboV 
 {s = table {
    VI Infn => "sarpullir" ;
    VI Ger => "sarpullendo" ;
    VI Part => "sarpullido" ;
    VP (Pres Ind Sg P1) => "sarpullo" ;
    VP (Pres Ind Sg P2) => "sarpulles" ;
    VP (Pres Ind Sg P3) => "sarpulle" ;
    VP (Pres Ind Pl P1) => "sarpullimos" ;
    VP (Pres Ind Pl P2) => "sarpullís" ;
    VP (Pres Ind Pl P3) => "sarpullen" ;
    VP (Pres Subj Sg P1) => "sarpulla" ;
    VP (Pres Subj Sg P2) => "sarpullas" ;
    VP (Pres Subj Sg P3) => "sarpulla" ;
    VP (Pres Subj Pl P1) => "sarpullamos" ;
    VP (Pres Subj Pl P2) => "sarpulláis" ;
    VP (Pres Subj Pl P3) => "sarpullan" ;
    VP (Impf Ind Sg P1) => "sarpullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sarpullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sarpullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sarpullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sarpullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sarpullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sarpullera" ; "sarpullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sarpulleras" ; "sarpulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sarpullera" ; "sarpullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sarpulléramos" ; "sarpullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sarpullerais" ; "sarpulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sarpulleran" ; "sarpullesen"} ;--# notpresent
    VP (Pret Sg P1) => "sarpullí" ;--# notpresent
    VP (Pret Sg P2) => "sarpulliste" ;--# notpresent
    VP (Pret Sg P3) => "sarpulló" ;--# notpresent
    VP (Pret Pl P1) => "sarpullimos" ;--# notpresent
    VP (Pret Pl P2) => "sarpullisteis" ;--# notpresent
    VP (Pret Pl P3) => "sarpulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sarpulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sarpullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sarpullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sarpulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sarpulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sarpullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sarpullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sarpulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sarpullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sarpulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sarpullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sarpulleren" ;--# notpresent
    VP (Cond Sg P1) => "sarpulliría" ;--# notpresent
    VP (Cond Sg P2) => "sarpullirías" ;--# notpresent
    VP (Cond Sg P3) => "sarpulliría" ;--# notpresent
    VP (Cond Pl P1) => "sarpulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "sarpulliríais" ;--# notpresent
    VP (Cond Pl P3) => "sarpullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sarpulle" ;
    VP (Imp Sg P3) => "sarpulla" ;
    VP (Imp Pl P1) => "sarpullamos" ;
    VP (Imp Pl P2) => "sarpullid" ;
    VP (Imp Pl P3) => "sarpullan" ;
    VP (Pass Sg Masc) => "sarpullido" ;
    VP (Pass Sg Fem) => "sarpullida" ;
    VP (Pass Pl Masc) => "sarpullidos" ;
    VP (Pass Pl Fem) => "sarpullidas"
    }
  } ;

lin tañer_V = verboV 
 {s = table {
    VI Infn => "tañer" ;
    VI Ger => "tañendo" ;
    VI Part => "tañido" ;
    VP (Pres Ind Sg P1) => "taño" ;
    VP (Pres Ind Sg P2) => "tañes" ;
    VP (Pres Ind Sg P3) => "tañe" ;
    VP (Pres Ind Pl P1) => "tañemos" ;
    VP (Pres Ind Pl P2) => "tañéis" ;
    VP (Pres Ind Pl P3) => "tañen" ;
    VP (Pres Subj Sg P1) => "taña" ;
    VP (Pres Subj Sg P2) => "tañas" ;
    VP (Pres Subj Sg P3) => "taña" ;
    VP (Pres Subj Pl P1) => "tañamos" ;
    VP (Pres Subj Pl P2) => "tañáis" ;
    VP (Pres Subj Pl P3) => "tañan" ;
    VP (Impf Ind Sg P1) => "tañía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tañías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tañía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tañíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tañíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tañían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tañera" ; "tañese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tañeras" ; "tañeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tañera" ; "tañese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tañéramos" ; "tañésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tañerais" ; "tañeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tañeran" ; "tañesen"} ;--# notpresent
    VP (Pret Sg P1) => "tañí" ;--# notpresent
    VP (Pret Sg P2) => "tañiste" ;--# notpresent
    VP (Pret Sg P3) => "tañó" ;--# notpresent
    VP (Pret Pl P1) => "tañimos" ;--# notpresent
    VP (Pret Pl P2) => "tañisteis" ;--# notpresent
    VP (Pret Pl P3) => "tañeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tañeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tañerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tañerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "tañeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tañeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tañerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tañere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tañeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tañere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tañéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tañereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tañeren" ;--# notpresent
    VP (Cond Sg P1) => "tañería" ;--# notpresent
    VP (Cond Sg P2) => "tañerías" ;--# notpresent
    VP (Cond Sg P3) => "tañería" ;--# notpresent
    VP (Cond Pl P1) => "tañeríamos" ;--# notpresent
    VP (Cond Pl P2) => "tañeríais" ;--# notpresent
    VP (Cond Pl P3) => "tañerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tañe" ;
    VP (Imp Sg P3) => "taña" ;
    VP (Imp Pl P1) => "tañamos" ;
    VP (Imp Pl P2) => "tañed" ;
    VP (Imp Pl P3) => "tañan" ;
    VP (Pass Sg Masc) => "tañido" ;
    VP (Pass Sg Fem) => "tañida" ;
    VP (Pass Pl Masc) => "tañidos" ;
    VP (Pass Pl Fem) => "tañidas"
    }
  } ;

lin tullir_V = verboV 
 {s = table {
    VI Infn => "tullir" ;
    VI Ger => "tullendo" ;
    VI Part => "tullido" ;
    VP (Pres Ind Sg P1) => "tullo" ;
    VP (Pres Ind Sg P2) => "tulles" ;
    VP (Pres Ind Sg P3) => "tulle" ;
    VP (Pres Ind Pl P1) => "tullimos" ;
    VP (Pres Ind Pl P2) => "tullís" ;
    VP (Pres Ind Pl P3) => "tullen" ;
    VP (Pres Subj Sg P1) => "tulla" ;
    VP (Pres Subj Sg P2) => "tullas" ;
    VP (Pres Subj Sg P3) => "tulla" ;
    VP (Pres Subj Pl P1) => "tullamos" ;
    VP (Pres Subj Pl P2) => "tulláis" ;
    VP (Pres Subj Pl P3) => "tullan" ;
    VP (Impf Ind Sg P1) => "tullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tullera" ; "tullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tulleras" ; "tulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tullera" ; "tullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tulléramos" ; "tullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tullerais" ; "tulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tulleran" ; "tullesen"} ;--# notpresent
    VP (Pret Sg P1) => "tullí" ;--# notpresent
    VP (Pret Sg P2) => "tulliste" ;--# notpresent
    VP (Pret Sg P3) => "tulló" ;--# notpresent
    VP (Pret Pl P1) => "tullimos" ;--# notpresent
    VP (Pret Pl P2) => "tullisteis" ;--# notpresent
    VP (Pret Pl P3) => "tulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "tulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tulleren" ;--# notpresent
    VP (Cond Sg P1) => "tulliría" ;--# notpresent
    VP (Cond Sg P2) => "tullirías" ;--# notpresent
    VP (Cond Sg P3) => "tulliría" ;--# notpresent
    VP (Cond Pl P1) => "tulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "tulliríais" ;--# notpresent
    VP (Cond Pl P3) => "tullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tulle" ;
    VP (Imp Sg P3) => "tulla" ;
    VP (Imp Pl P1) => "tullamos" ;
    VP (Imp Pl P2) => "tullid" ;
    VP (Imp Pl P3) => "tullan" ;
    VP (Pass Sg Masc) => "tullido" ;
    VP (Pass Sg Fem) => "tullida" ;
    VP (Pass Pl Masc) => "tullidos" ;
    VP (Pass Pl Fem) => "tullidas"
    }
  } ;

lin zabullir_V = verboV 
 {s = table {
    VI Infn => "zabullir" ;
    VI Ger => "zabullendo" ;
    VI Part => "zabullido" ;
    VP (Pres Ind Sg P1) => "zabullo" ;
    VP (Pres Ind Sg P2) => "zabulles" ;
    VP (Pres Ind Sg P3) => "zabulle" ;
    VP (Pres Ind Pl P1) => "zabullimos" ;
    VP (Pres Ind Pl P2) => "zabullís" ;
    VP (Pres Ind Pl P3) => "zabullen" ;
    VP (Pres Subj Sg P1) => "zabulla" ;
    VP (Pres Subj Sg P2) => "zabullas" ;
    VP (Pres Subj Sg P3) => "zabulla" ;
    VP (Pres Subj Pl P1) => "zabullamos" ;
    VP (Pres Subj Pl P2) => "zabulláis" ;
    VP (Pres Subj Pl P3) => "zabullan" ;
    VP (Impf Ind Sg P1) => "zabullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "zabullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "zabullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "zabullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "zabullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "zabullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"zabullera" ; "zabullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"zabulleras" ; "zabulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"zabullera" ; "zabullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"zabulléramos" ; "zabullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"zabullerais" ; "zabulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"zabulleran" ; "zabullesen"} ;--# notpresent
    VP (Pret Sg P1) => "zabullí" ;--# notpresent
    VP (Pret Sg P2) => "zabulliste" ;--# notpresent
    VP (Pret Sg P3) => "zabulló" ;--# notpresent
    VP (Pret Pl P1) => "zabullimos" ;--# notpresent
    VP (Pret Pl P2) => "zabullisteis" ;--# notpresent
    VP (Pret Pl P3) => "zabulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "zabulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "zabullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "zabullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "zabulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "zabulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "zabullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "zabullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "zabulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "zabullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "zabulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "zabullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "zabulleren" ;--# notpresent
    VP (Cond Sg P1) => "zabulliría" ;--# notpresent
    VP (Cond Sg P2) => "zabullirías" ;--# notpresent
    VP (Cond Sg P3) => "zabulliría" ;--# notpresent
    VP (Cond Pl P1) => "zabulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "zabulliríais" ;--# notpresent
    VP (Cond Pl P3) => "zabullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "zabulle" ;
    VP (Imp Sg P3) => "zabulla" ;
    VP (Imp Pl P1) => "zabullamos" ;
    VP (Imp Pl P2) => "zabullid" ;
    VP (Imp Pl P3) => "zabullan" ;
    VP (Pass Sg Masc) => "zabullido" ;
    VP (Pass Sg Fem) => "zabullida" ;
    VP (Pass Pl Masc) => "zabullidos" ;
    VP (Pass Pl Fem) => "zabullidas"
    }
  } ;

lin zambullir_V = verboV 
 {s = table {
    VI Infn => "zambullir" ;
    VI Ger => "zambullendo" ;
    VI Part => "zambullido" ;
    VP (Pres Ind Sg P1) => "zambullo" ;
    VP (Pres Ind Sg P2) => "zambulles" ;
    VP (Pres Ind Sg P3) => "zambulle" ;
    VP (Pres Ind Pl P1) => "zambullimos" ;
    VP (Pres Ind Pl P2) => "zambullís" ;
    VP (Pres Ind Pl P3) => "zambullen" ;
    VP (Pres Subj Sg P1) => "zambulla" ;
    VP (Pres Subj Sg P2) => "zambullas" ;
    VP (Pres Subj Sg P3) => "zambulla" ;
    VP (Pres Subj Pl P1) => "zambullamos" ;
    VP (Pres Subj Pl P2) => "zambulláis" ;
    VP (Pres Subj Pl P3) => "zambullan" ;
    VP (Impf Ind Sg P1) => "zambullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "zambullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "zambullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "zambullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "zambullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "zambullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"zambullera" ; "zambullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"zambulleras" ; "zambulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"zambullera" ; "zambullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"zambulléramos" ; "zambullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"zambullerais" ; "zambulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"zambulleran" ; "zambullesen"} ;--# notpresent
    VP (Pret Sg P1) => "zambullí" ;--# notpresent
    VP (Pret Sg P2) => "zambulliste" ;--# notpresent
    VP (Pret Sg P3) => "zambulló" ;--# notpresent
    VP (Pret Pl P1) => "zambullimos" ;--# notpresent
    VP (Pret Pl P2) => "zambullisteis" ;--# notpresent
    VP (Pret Pl P3) => "zambulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "zambulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "zambullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "zambullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "zambulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "zambulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "zambullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "zambullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "zambulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "zambullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "zambulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "zambullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "zambulleren" ;--# notpresent
    VP (Cond Sg P1) => "zambulliría" ;--# notpresent
    VP (Cond Sg P2) => "zambullirías" ;--# notpresent
    VP (Cond Sg P3) => "zambulliría" ;--# notpresent
    VP (Cond Pl P1) => "zambulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "zambulliríais" ;--# notpresent
    VP (Cond Pl P3) => "zambullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "zambulle" ;
    VP (Imp Sg P3) => "zambulla" ;
    VP (Imp Pl P1) => "zambullamos" ;
    VP (Imp Pl P2) => "zambullid" ;
    VP (Imp Pl P3) => "zambullan" ;
    VP (Pass Sg Masc) => "zambullido" ;
    VP (Pass Sg Fem) => "zambullida" ;
    VP (Pass Pl Masc) => "zambullidos" ;
    VP (Pass Pl Fem) => "zambullidas"
    }
  } ;

lin descabullirse_V = reflVerboV 
 {s = table {
    VI Infn => "descabullir" ;
    VI Ger => "descabullendo" ;
    VI Part => "descabullido" ;
    VP (Pres Ind Sg P1) => "descabullo" ;
    VP (Pres Ind Sg P2) => "descabulles" ;
    VP (Pres Ind Sg P3) => "descabulle" ;
    VP (Pres Ind Pl P1) => "descabullimos" ;
    VP (Pres Ind Pl P2) => "descabullís" ;
    VP (Pres Ind Pl P3) => "descabullen" ;
    VP (Pres Subj Sg P1) => "descabulla" ;
    VP (Pres Subj Sg P2) => "descabullas" ;
    VP (Pres Subj Sg P3) => "descabulla" ;
    VP (Pres Subj Pl P1) => "descabullamos" ;
    VP (Pres Subj Pl P2) => "descabulláis" ;
    VP (Pres Subj Pl P3) => "descabullan" ;
    VP (Impf Ind Sg P1) => "descabullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descabullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descabullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descabullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descabullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descabullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descabullera" ; "descabullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descabulleras" ; "descabulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descabullera" ; "descabullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descabulléramos" ; "descabullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descabullerais" ; "descabulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descabulleran" ; "descabullesen"} ;--# notpresent
    VP (Pret Sg P1) => "descabullí" ;--# notpresent
    VP (Pret Sg P2) => "descabulliste" ;--# notpresent
    VP (Pret Sg P3) => "descabulló" ;--# notpresent
    VP (Pret Pl P1) => "descabullimos" ;--# notpresent
    VP (Pret Pl P2) => "descabullisteis" ;--# notpresent
    VP (Pret Pl P3) => "descabulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descabulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descabullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descabullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descabulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descabulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descabullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descabullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descabulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descabullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descabulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descabullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descabulleren" ;--# notpresent
    VP (Cond Sg P1) => "descabulliría" ;--# notpresent
    VP (Cond Sg P2) => "descabullirías" ;--# notpresent
    VP (Cond Sg P3) => "descabulliría" ;--# notpresent
    VP (Cond Pl P1) => "descabulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "descabulliríais" ;--# notpresent
    VP (Cond Pl P3) => "descabullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descabulle" ;
    VP (Imp Sg P3) => "descabulla" ;
    VP (Imp Pl P1) => "descabullamos" ;
    VP (Imp Pl P2) => "descabullid" ;
    VP (Imp Pl P3) => "descabullan" ;
    VP (Pass Sg Masc) => "descabullido" ;
    VP (Pass Sg Fem) => "descabullida" ;
    VP (Pass Pl Masc) => "descabullidos" ;
    VP (Pass Pl Fem) => "descabullidas"
    }
  } ;

lin escabullirse_V = reflVerboV 
 {s = table {
    VI Infn => "escabullir" ;
    VI Ger => "escabullendo" ;
    VI Part => "escabullido" ;
    VP (Pres Ind Sg P1) => "escabullo" ;
    VP (Pres Ind Sg P2) => "escabulles" ;
    VP (Pres Ind Sg P3) => "escabulle" ;
    VP (Pres Ind Pl P1) => "escabullimos" ;
    VP (Pres Ind Pl P2) => "escabullís" ;
    VP (Pres Ind Pl P3) => "escabullen" ;
    VP (Pres Subj Sg P1) => "escabulla" ;
    VP (Pres Subj Sg P2) => "escabullas" ;
    VP (Pres Subj Sg P3) => "escabulla" ;
    VP (Pres Subj Pl P1) => "escabullamos" ;
    VP (Pres Subj Pl P2) => "escabulláis" ;
    VP (Pres Subj Pl P3) => "escabullan" ;
    VP (Impf Ind Sg P1) => "escabullía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escabullías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escabullía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escabullíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escabullíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escabullían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escabullera" ; "escabullese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escabulleras" ; "escabulleses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escabullera" ; "escabullese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escabulléramos" ; "escabullésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escabullerais" ; "escabulleseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escabulleran" ; "escabullesen"} ;--# notpresent
    VP (Pret Sg P1) => "escabullí" ;--# notpresent
    VP (Pret Sg P2) => "escabulliste" ;--# notpresent
    VP (Pret Sg P3) => "escabulló" ;--# notpresent
    VP (Pret Pl P1) => "escabullimos" ;--# notpresent
    VP (Pret Pl P2) => "escabullisteis" ;--# notpresent
    VP (Pret Pl P3) => "escabulleron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escabulliré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escabullirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escabullirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escabulliremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escabulliréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escabullirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escabullere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escabulleres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escabullere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escabulléremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escabullereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escabulleren" ;--# notpresent
    VP (Cond Sg P1) => "escabulliría" ;--# notpresent
    VP (Cond Sg P2) => "escabullirías" ;--# notpresent
    VP (Cond Sg P3) => "escabulliría" ;--# notpresent
    VP (Cond Pl P1) => "escabulliríamos" ;--# notpresent
    VP (Cond Pl P2) => "escabulliríais" ;--# notpresent
    VP (Cond Pl P3) => "escabullirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escabulle" ;
    VP (Imp Sg P3) => "escabulla" ;
    VP (Imp Pl P1) => "escabullamos" ;
    VP (Imp Pl P2) => "escabullid" ;
    VP (Imp Pl P3) => "escabullan" ;
    VP (Pass Sg Masc) => "escabullido" ;
    VP (Pass Sg Fem) => "escabullida" ;
    VP (Pass Pl Masc) => "escabullidos" ;
    VP (Pass Pl Fem) => "escabullidas"
    }
  } ;

lin abstraer_V = verboV 
 {s = table {
    VI Infn => "abstraer" ;
    VI Ger => "abstrayendo" ;
    VI Part => "abstraído" ;
    VP (Pres Ind Sg P1) => "abstrao" ;
    VP (Pres Ind Sg P2) => "abstraes" ;
    VP (Pres Ind Sg P3) => "abstrae" ;
    VP (Pres Ind Pl P1) => "abstraemos" ;
    VP (Pres Ind Pl P2) => "abstraéis" ;
    VP (Pres Ind Pl P3) => "abstraen" ;
    VP (Pres Subj Sg P1) => "abstraa" ;
    VP (Pres Subj Sg P2) => "abstraas" ;
    VP (Pres Subj Sg P3) => "abstraa" ;
    VP (Pres Subj Pl P1) => "abstraamos" ;
    VP (Pres Subj Pl P2) => "abstraáis" ;
    VP (Pres Subj Pl P3) => "abstraan" ;
    VP (Impf Ind Sg P1) => "abstraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "abstraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "abstraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "abstraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abstraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abstraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abstrayera" ; "abstrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abstrayeras" ; "abstrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abstrayera" ; "abstrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abstrayéramos" ; "abstrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abstrayerais" ; "abstrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abstrayeran" ; "abstrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "abstraí" ;--# notpresent
    VP (Pret Sg P2) => "abstraíste" ;--# notpresent
    VP (Pret Sg P3) => "abstrayó" ;--# notpresent
    VP (Pret Pl P1) => "abstraímos" ;--# notpresent
    VP (Pret Pl P2) => "abstraísteis" ;--# notpresent
    VP (Pret Pl P3) => "abstrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abstraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abstraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abstraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "abstraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abstraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abstraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abstrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "abstrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "abstrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "abstrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abstrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abstrayeren" ;--# notpresent
    VP (Cond Sg P1) => "abstraería" ;--# notpresent
    VP (Cond Sg P2) => "abstraerías" ;--# notpresent
    VP (Cond Sg P3) => "abstraería" ;--# notpresent
    VP (Cond Pl P1) => "abstraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "abstraeríais" ;--# notpresent
    VP (Cond Pl P3) => "abstraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abstrae" ;
    VP (Imp Sg P3) => "abstraa" ;
    VP (Imp Pl P1) => "abstraamos" ;
    VP (Imp Pl P2) => "abstraed" ;
    VP (Imp Pl P3) => "abstraan" ;
    VP (Pass Sg Masc) => "abstraído" ;
    VP (Pass Sg Fem) => "abstraída" ;
    VP (Pass Pl Masc) => "abstraídos" ;
    VP (Pass Pl Fem) => "abstraídas"
    }
  } ;

lin atraer_V = verboV 
 {s = table {
    VI Infn => "atraer" ;
    VI Ger => "atrayendo" ;
    VI Part => "atraído" ;
    VP (Pres Ind Sg P1) => "atrao" ;
    VP (Pres Ind Sg P2) => "atraes" ;
    VP (Pres Ind Sg P3) => "atrae" ;
    VP (Pres Ind Pl P1) => "atraemos" ;
    VP (Pres Ind Pl P2) => "atraéis" ;
    VP (Pres Ind Pl P3) => "atraen" ;
    VP (Pres Subj Sg P1) => "atraa" ;
    VP (Pres Subj Sg P2) => "atraas" ;
    VP (Pres Subj Sg P3) => "atraa" ;
    VP (Pres Subj Pl P1) => "atraamos" ;
    VP (Pres Subj Pl P2) => "atraáis" ;
    VP (Pres Subj Pl P3) => "atraan" ;
    VP (Impf Ind Sg P1) => "atraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "atraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "atraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "atraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atrayera" ; "atrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atrayeras" ; "atrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atrayera" ; "atrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atrayéramos" ; "atrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atrayerais" ; "atrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atrayeran" ; "atrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "atraí" ;--# notpresent
    VP (Pret Sg P2) => "atraíste" ;--# notpresent
    VP (Pret Sg P3) => "atrayó" ;--# notpresent
    VP (Pret Pl P1) => "atraímos" ;--# notpresent
    VP (Pret Pl P2) => "atraísteis" ;--# notpresent
    VP (Pret Pl P3) => "atrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "atraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "atrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "atrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "atrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atrayeren" ;--# notpresent
    VP (Cond Sg P1) => "atraería" ;--# notpresent
    VP (Cond Sg P2) => "atraerías" ;--# notpresent
    VP (Cond Sg P3) => "atraería" ;--# notpresent
    VP (Cond Pl P1) => "atraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "atraeríais" ;--# notpresent
    VP (Cond Pl P3) => "atraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atrae" ;
    VP (Imp Sg P3) => "atraa" ;
    VP (Imp Pl P1) => "atraamos" ;
    VP (Imp Pl P2) => "atraed" ;
    VP (Imp Pl P3) => "atraan" ;
    VP (Pass Sg Masc) => "atraído" ;
    VP (Pass Sg Fem) => "atraída" ;
    VP (Pass Pl Masc) => "atraídos" ;
    VP (Pass Pl Fem) => "atraídas"
    }
  } ;

lin caer_V = verboV 
 {s = table {
    VI Infn => "caer" ;
    VI Ger => "cayendo" ;
    VI Part => "caído" ;
    VP (Pres Ind Sg P1) => "caigo" ;
    VP (Pres Ind Sg P2) => "caes" ;
    VP (Pres Ind Sg P3) => "cae" ;
    VP (Pres Ind Pl P1) => "caemos" ;
    VP (Pres Ind Pl P2) => "caéis" ;
    VP (Pres Ind Pl P3) => "caen" ;
    VP (Pres Subj Sg P1) => "caiga" ;
    VP (Pres Subj Sg P2) => "caigas" ;
    VP (Pres Subj Sg P3) => "caiga" ;
    VP (Pres Subj Pl P1) => "caigamos" ;
    VP (Pres Subj Pl P2) => "caigáis" ;
    VP (Pres Subj Pl P3) => "caigan" ;
    VP (Impf Ind Sg P1) => "caía" ;--# notpresent
    VP (Impf Ind Sg P2) => "caías" ;--# notpresent
    VP (Impf Ind Sg P3) => "caía" ;--# notpresent
    VP (Impf Ind Pl P1) => "caíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "caíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "caían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cayera" ; "cayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cayeras" ; "cayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cayera" ; "cayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cayéramos" ; "cayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cayerais" ; "cayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cayeran" ; "cayesen"} ;--# notpresent
    VP (Pret Sg P1) => "caí" ;--# notpresent
    VP (Pret Sg P2) => "caíste" ;--# notpresent
    VP (Pret Sg P3) => "cayó" ;--# notpresent
    VP (Pret Pl P1) => "caímos" ;--# notpresent
    VP (Pret Pl P2) => "caísteis" ;--# notpresent
    VP (Pret Pl P3) => "cayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "caeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "caerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "caerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "caeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "caeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "caerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cayeren" ;--# notpresent
    VP (Cond Sg P1) => "caería" ;--# notpresent
    VP (Cond Sg P2) => "caerías" ;--# notpresent
    VP (Cond Sg P3) => "caería" ;--# notpresent
    VP (Cond Pl P1) => "caeríamos" ;--# notpresent
    VP (Cond Pl P2) => "caeríais" ;--# notpresent
    VP (Cond Pl P3) => "caerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cae" ;
    VP (Imp Sg P3) => "caiga" ;
    VP (Imp Pl P1) => "caigamos" ;
    VP (Imp Pl P2) => "caed" ;
    VP (Imp Pl P3) => "caigan" ;
    VP (Pass Sg Masc) => "caído" ;
    VP (Pass Sg Fem) => "caída" ;
    VP (Pass Pl Masc) => "caídos" ;
    VP (Pass Pl Fem) => "caídas"
    }
  } ;

lin contraer_V = verboV 
 {s = table {
    VI Infn => "contraer" ;
    VI Ger => "contrayendo" ;
    VI Part => "contraído" ;
    VP (Pres Ind Sg P1) => "contrao" ;
    VP (Pres Ind Sg P2) => "contraes" ;
    VP (Pres Ind Sg P3) => "contrae" ;
    VP (Pres Ind Pl P1) => "contraemos" ;
    VP (Pres Ind Pl P2) => "contraéis" ;
    VP (Pres Ind Pl P3) => "contraen" ;
    VP (Pres Subj Sg P1) => "contraa" ;
    VP (Pres Subj Sg P2) => "contraas" ;
    VP (Pres Subj Sg P3) => "contraa" ;
    VP (Pres Subj Pl P1) => "contraamos" ;
    VP (Pres Subj Pl P2) => "contraáis" ;
    VP (Pres Subj Pl P3) => "contraan" ;
    VP (Impf Ind Sg P1) => "contraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contrayera" ; "contrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contrayeras" ; "contrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contrayera" ; "contrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contrayéramos" ; "contrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contrayerais" ; "contrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contrayeran" ; "contrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "contraí" ;--# notpresent
    VP (Pret Sg P2) => "contraíste" ;--# notpresent
    VP (Pret Sg P3) => "contrayó" ;--# notpresent
    VP (Pret Pl P1) => "contraímos" ;--# notpresent
    VP (Pret Pl P2) => "contraísteis" ;--# notpresent
    VP (Pret Pl P3) => "contrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contrayeren" ;--# notpresent
    VP (Cond Sg P1) => "contraería" ;--# notpresent
    VP (Cond Sg P2) => "contraerías" ;--# notpresent
    VP (Cond Sg P3) => "contraería" ;--# notpresent
    VP (Cond Pl P1) => "contraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "contraeríais" ;--# notpresent
    VP (Cond Pl P3) => "contraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contrae" ;
    VP (Imp Sg P3) => "contraa" ;
    VP (Imp Pl P1) => "contraamos" ;
    VP (Imp Pl P2) => "contraed" ;
    VP (Imp Pl P3) => "contraan" ;
    VP (Pass Sg Masc) => "contraído" ;
    VP (Pass Sg Fem) => "contraída" ;
    VP (Pass Pl Masc) => "contraídos" ;
    VP (Pass Pl Fem) => "contraídas"
    }
  } ;

lin corroer_V = verboV 
 {s = table {
    VI Infn => "corroer" ;
    VI Ger => "corroyendo" ;
    VI Part => "corroído" ;
    VP (Pres Ind Sg P1) => "corroo" ;
    VP (Pres Ind Sg P2) => "corroes" ;
    VP (Pres Ind Sg P3) => "corroe" ;
    VP (Pres Ind Pl P1) => "corroemos" ;
    VP (Pres Ind Pl P2) => "corroéis" ;
    VP (Pres Ind Pl P3) => "corroen" ;
    VP (Pres Subj Sg P1) => "corroa" ;
    VP (Pres Subj Sg P2) => "corroas" ;
    VP (Pres Subj Sg P3) => "corroa" ;
    VP (Pres Subj Pl P1) => "corroamos" ;
    VP (Pres Subj Pl P2) => "corroáis" ;
    VP (Pres Subj Pl P3) => "corroan" ;
    VP (Impf Ind Sg P1) => "corroía" ;--# notpresent
    VP (Impf Ind Sg P2) => "corroías" ;--# notpresent
    VP (Impf Ind Sg P3) => "corroía" ;--# notpresent
    VP (Impf Ind Pl P1) => "corroíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "corroíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "corroían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"corroyera" ; "corroyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"corroyeras" ; "corroyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"corroyera" ; "corroyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"corroyéramos" ; "corroyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"corroyerais" ; "corroyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"corroyeran" ; "corroyesen"} ;--# notpresent
    VP (Pret Sg P1) => "corroí" ;--# notpresent
    VP (Pret Sg P2) => "corroíste" ;--# notpresent
    VP (Pret Sg P3) => "corroyó" ;--# notpresent
    VP (Pret Pl P1) => "corroímos" ;--# notpresent
    VP (Pret Pl P2) => "corroísteis" ;--# notpresent
    VP (Pret Pl P3) => "corroyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "corroeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "corroerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "corroerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "corroeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "corroeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "corroerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "corroyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "corroyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "corroyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "corroyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "corroyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "corroyeren" ;--# notpresent
    VP (Cond Sg P1) => "corroería" ;--# notpresent
    VP (Cond Sg P2) => "corroerías" ;--# notpresent
    VP (Cond Sg P3) => "corroería" ;--# notpresent
    VP (Cond Pl P1) => "corroeríamos" ;--# notpresent
    VP (Cond Pl P2) => "corroeríais" ;--# notpresent
    VP (Cond Pl P3) => "corroerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "corroe" ;
    VP (Imp Sg P3) => "corroa" ;
    VP (Imp Pl P1) => "corroamos" ;
    VP (Imp Pl P2) => "corroed" ;
    VP (Imp Pl P3) => "corroan" ;
    VP (Pass Sg Masc) => "corroído" ;
    VP (Pass Sg Fem) => "corroída" ;
    VP (Pass Pl Masc) => "corroídos" ;
    VP (Pass Pl Fem) => "corroídas"
    }
  } ;

lin creer_V = verboV 
 {s = table {
    VI Infn => "creer" ;
    VI Ger => "creyendo" ;
    VI Part => "creído" ;
    VP (Pres Ind Sg P1) => "creo" ;
    VP (Pres Ind Sg P2) => "crees" ;
    VP (Pres Ind Sg P3) => "cree" ;
    VP (Pres Ind Pl P1) => "creemos" ;
    VP (Pres Ind Pl P2) => "creéis" ;
    VP (Pres Ind Pl P3) => "creen" ;
    VP (Pres Subj Sg P1) => "crea" ;
    VP (Pres Subj Sg P2) => "creas" ;
    VP (Pres Subj Sg P3) => "crea" ;
    VP (Pres Subj Pl P1) => "creamos" ;
    VP (Pres Subj Pl P2) => "creáis" ;
    VP (Pres Subj Pl P3) => "crean" ;
    VP (Impf Ind Sg P1) => "creía" ;--# notpresent
    VP (Impf Ind Sg P2) => "creías" ;--# notpresent
    VP (Impf Ind Sg P3) => "creía" ;--# notpresent
    VP (Impf Ind Pl P1) => "creíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "creíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "creían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"creyera" ; "creyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"creyeras" ; "creyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"creyera" ; "creyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"creyéramos" ; "creyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"creyerais" ; "creyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"creyeran" ; "creyesen"} ;--# notpresent
    VP (Pret Sg P1) => "creí" ;--# notpresent
    VP (Pret Sg P2) => "creíste" ;--# notpresent
    VP (Pret Sg P3) => "creyó" ;--# notpresent
    VP (Pret Pl P1) => "creímos" ;--# notpresent
    VP (Pret Pl P2) => "creísteis" ;--# notpresent
    VP (Pret Pl P3) => "creyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "creeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "creerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "creerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "creeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "creeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "creerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "creyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "creyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "creyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "creyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "creyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "creyeren" ;--# notpresent
    VP (Cond Sg P1) => "creería" ;--# notpresent
    VP (Cond Sg P2) => "creerías" ;--# notpresent
    VP (Cond Sg P3) => "creería" ;--# notpresent
    VP (Cond Pl P1) => "creeríamos" ;--# notpresent
    VP (Cond Pl P2) => "creeríais" ;--# notpresent
    VP (Cond Pl P3) => "creerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cree" ;
    VP (Imp Sg P3) => "crea" ;
    VP (Imp Pl P1) => "creamos" ;
    VP (Imp Pl P2) => "creed" ;
    VP (Imp Pl P3) => "crean" ;
    VP (Pass Sg Masc) => "creído" ;
    VP (Pass Sg Fem) => "creída" ;
    VP (Pass Pl Masc) => "creídos" ;
    VP (Pass Pl Fem) => "creídas"
    }
  } ;

lin decaer_V = verboV 
 {s = table {
    VI Infn => "decaer" ;
    VI Ger => "decayendo" ;
    VI Part => "decaído" ;
    VP (Pres Ind Sg P1) => "decaigo" ;
    VP (Pres Ind Sg P2) => "decaes" ;
    VP (Pres Ind Sg P3) => "decae" ;
    VP (Pres Ind Pl P1) => "decaemos" ;
    VP (Pres Ind Pl P2) => "decaéis" ;
    VP (Pres Ind Pl P3) => "decaen" ;
    VP (Pres Subj Sg P1) => "decaiga" ;
    VP (Pres Subj Sg P2) => "decaigas" ;
    VP (Pres Subj Sg P3) => "decaiga" ;
    VP (Pres Subj Pl P1) => "decaigamos" ;
    VP (Pres Subj Pl P2) => "decaigáis" ;
    VP (Pres Subj Pl P3) => "decaigan" ;
    VP (Impf Ind Sg P1) => "decaía" ;--# notpresent
    VP (Impf Ind Sg P2) => "decaías" ;--# notpresent
    VP (Impf Ind Sg P3) => "decaía" ;--# notpresent
    VP (Impf Ind Pl P1) => "decaíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "decaíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "decaían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"decayera" ; "decayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"decayeras" ; "decayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"decayera" ; "decayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"decayéramos" ; "decayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"decayerais" ; "decayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"decayeran" ; "decayesen"} ;--# notpresent
    VP (Pret Sg P1) => "decaí" ;--# notpresent
    VP (Pret Sg P2) => "decaíste" ;--# notpresent
    VP (Pret Sg P3) => "decayó" ;--# notpresent
    VP (Pret Pl P1) => "decaímos" ;--# notpresent
    VP (Pret Pl P2) => "decaísteis" ;--# notpresent
    VP (Pret Pl P3) => "decayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "decaeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "decaerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "decaerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "decaeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "decaeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "decaerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "decayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "decayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "decayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "decayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "decayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "decayeren" ;--# notpresent
    VP (Cond Sg P1) => "decaería" ;--# notpresent
    VP (Cond Sg P2) => "decaerías" ;--# notpresent
    VP (Cond Sg P3) => "decaería" ;--# notpresent
    VP (Cond Pl P1) => "decaeríamos" ;--# notpresent
    VP (Cond Pl P2) => "decaeríais" ;--# notpresent
    VP (Cond Pl P3) => "decaerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "decae" ;
    VP (Imp Sg P3) => "decaiga" ;
    VP (Imp Pl P1) => "decaigamos" ;
    VP (Imp Pl P2) => "decaed" ;
    VP (Imp Pl P3) => "decaigan" ;
    VP (Pass Sg Masc) => "decaído" ;
    VP (Pass Sg Fem) => "decaída" ;
    VP (Pass Pl Masc) => "decaídos" ;
    VP (Pass Pl Fem) => "decaídas"
    }
  } ;

lin descaer_V = verboV 
 {s = table {
    VI Infn => "descaer" ;
    VI Ger => "descayendo" ;
    VI Part => "descaído" ;
    VP (Pres Ind Sg P1) => "descaigo" ;
    VP (Pres Ind Sg P2) => "descaes" ;
    VP (Pres Ind Sg P3) => "descae" ;
    VP (Pres Ind Pl P1) => "descaemos" ;
    VP (Pres Ind Pl P2) => "descaéis" ;
    VP (Pres Ind Pl P3) => "descaen" ;
    VP (Pres Subj Sg P1) => "descaiga" ;
    VP (Pres Subj Sg P2) => "descaigas" ;
    VP (Pres Subj Sg P3) => "descaiga" ;
    VP (Pres Subj Pl P1) => "descaigamos" ;
    VP (Pres Subj Pl P2) => "descaigáis" ;
    VP (Pres Subj Pl P3) => "descaigan" ;
    VP (Impf Ind Sg P1) => "descaía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descaías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descaía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descaíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descaíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descaían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descayera" ; "descayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descayeras" ; "descayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descayera" ; "descayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descayéramos" ; "descayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descayerais" ; "descayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descayeran" ; "descayesen"} ;--# notpresent
    VP (Pret Sg P1) => "descaí" ;--# notpresent
    VP (Pret Sg P2) => "descaíste" ;--# notpresent
    VP (Pret Sg P3) => "descayó" ;--# notpresent
    VP (Pret Pl P1) => "descaímos" ;--# notpresent
    VP (Pret Pl P2) => "descaísteis" ;--# notpresent
    VP (Pret Pl P3) => "descayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descaeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descaerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descaerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descaeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descaeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descaerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descayeren" ;--# notpresent
    VP (Cond Sg P1) => "descaería" ;--# notpresent
    VP (Cond Sg P2) => "descaerías" ;--# notpresent
    VP (Cond Sg P3) => "descaería" ;--# notpresent
    VP (Cond Pl P1) => "descaeríamos" ;--# notpresent
    VP (Cond Pl P2) => "descaeríais" ;--# notpresent
    VP (Cond Pl P3) => "descaerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descae" ;
    VP (Imp Sg P3) => "descaiga" ;
    VP (Imp Pl P1) => "descaigamos" ;
    VP (Imp Pl P2) => "descaed" ;
    VP (Imp Pl P3) => "descaigan" ;
    VP (Pass Sg Masc) => "descaído" ;
    VP (Pass Sg Fem) => "descaída" ;
    VP (Pass Pl Masc) => "descaídos" ;
    VP (Pass Pl Fem) => "descaídas"
    }
  } ;

lin descreer_V = verboV 
 {s = table {
    VI Infn => "descreer" ;
    VI Ger => "descreyendo" ;
    VI Part => "descreído" ;
    VP (Pres Ind Sg P1) => "descreo" ;
    VP (Pres Ind Sg P2) => "descrees" ;
    VP (Pres Ind Sg P3) => "descree" ;
    VP (Pres Ind Pl P1) => "descreemos" ;
    VP (Pres Ind Pl P2) => "descreéis" ;
    VP (Pres Ind Pl P3) => "descreen" ;
    VP (Pres Subj Sg P1) => "descrea" ;
    VP (Pres Subj Sg P2) => "descreas" ;
    VP (Pres Subj Sg P3) => "descrea" ;
    VP (Pres Subj Pl P1) => "descreamos" ;
    VP (Pres Subj Pl P2) => "descreáis" ;
    VP (Pres Subj Pl P3) => "descrean" ;
    VP (Impf Ind Sg P1) => "descreía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descreías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descreía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descreíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descreíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descreían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descreyera" ; "descreyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descreyeras" ; "descreyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descreyera" ; "descreyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descreyéramos" ; "descreyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descreyerais" ; "descreyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descreyeran" ; "descreyesen"} ;--# notpresent
    VP (Pret Sg P1) => "descreí" ;--# notpresent
    VP (Pret Sg P2) => "descreíste" ;--# notpresent
    VP (Pret Sg P3) => "descreyó" ;--# notpresent
    VP (Pret Pl P1) => "descreímos" ;--# notpresent
    VP (Pret Pl P2) => "descreísteis" ;--# notpresent
    VP (Pret Pl P3) => "descreyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descreeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descreerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descreerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descreeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descreeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descreerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descreyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descreyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descreyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descreyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descreyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descreyeren" ;--# notpresent
    VP (Cond Sg P1) => "descreería" ;--# notpresent
    VP (Cond Sg P2) => "descreerías" ;--# notpresent
    VP (Cond Sg P3) => "descreería" ;--# notpresent
    VP (Cond Pl P1) => "descreeríamos" ;--# notpresent
    VP (Cond Pl P2) => "descreeríais" ;--# notpresent
    VP (Cond Pl P3) => "descreerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descree" ;
    VP (Imp Sg P3) => "descrea" ;
    VP (Imp Pl P1) => "descreamos" ;
    VP (Imp Pl P2) => "descreed" ;
    VP (Imp Pl P3) => "descrean" ;
    VP (Pass Sg Masc) => "descreído" ;
    VP (Pass Sg Fem) => "descreída" ;
    VP (Pass Pl Masc) => "descreídos" ;
    VP (Pass Pl Fem) => "descreídas"
    }
  } ;

lin desposeer_V = verboV 
 {s = table {
    VI Infn => "desposeer" ;
    VI Ger => "desposeyendo" ;
    VI Part => "desposeído" ;
    VP (Pres Ind Sg P1) => "desposeo" ;
    VP (Pres Ind Sg P2) => "desposees" ;
    VP (Pres Ind Sg P3) => "desposee" ;
    VP (Pres Ind Pl P1) => "desposeemos" ;
    VP (Pres Ind Pl P2) => "desposeéis" ;
    VP (Pres Ind Pl P3) => "desposeen" ;
    VP (Pres Subj Sg P1) => "desposea" ;
    VP (Pres Subj Sg P2) => "desposeas" ;
    VP (Pres Subj Sg P3) => "desposea" ;
    VP (Pres Subj Pl P1) => "desposeamos" ;
    VP (Pres Subj Pl P2) => "desposeáis" ;
    VP (Pres Subj Pl P3) => "desposean" ;
    VP (Impf Ind Sg P1) => "desposeía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desposeías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desposeía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desposeíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desposeíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desposeían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desposeyera" ; "desposeyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desposeyeras" ; "desposeyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desposeyera" ; "desposeyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desposeyéramos" ; "desposeyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desposeyerais" ; "desposeyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desposeyeran" ; "desposeyesen"} ;--# notpresent
    VP (Pret Sg P1) => "desposeí" ;--# notpresent
    VP (Pret Sg P2) => "desposeíste" ;--# notpresent
    VP (Pret Sg P3) => "desposeyó" ;--# notpresent
    VP (Pret Pl P1) => "desposeímos" ;--# notpresent
    VP (Pret Pl P2) => "desposeísteis" ;--# notpresent
    VP (Pret Pl P3) => "desposeyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desposeeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desposeerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desposeerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desposeeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desposeeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desposeerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desposeyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desposeyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desposeyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desposeyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desposeyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desposeyeren" ;--# notpresent
    VP (Cond Sg P1) => "desposeería" ;--# notpresent
    VP (Cond Sg P2) => "desposeerías" ;--# notpresent
    VP (Cond Sg P3) => "desposeería" ;--# notpresent
    VP (Cond Pl P1) => "desposeeríamos" ;--# notpresent
    VP (Cond Pl P2) => "desposeeríais" ;--# notpresent
    VP (Cond Pl P3) => "desposeerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desposee" ;
    VP (Imp Sg P3) => "desposea" ;
    VP (Imp Pl P1) => "desposeamos" ;
    VP (Imp Pl P2) => "desposeed" ;
    VP (Imp Pl P3) => "desposean" ;
    VP (Pass Sg Masc) => "desposeído" ;
    VP (Pass Sg Fem) => "desposeída" ;
    VP (Pass Pl Masc) => "desposeídos" ;
    VP (Pass Pl Fem) => "desposeídas"
    }
  } ;

lin desproveer_V = verboV 
 {s = table {
    VI Infn => "desproveer" ;
    VI Ger => "desproveyendo" ;
    VI Part => "desproveído" ;
    VP (Pres Ind Sg P1) => "desproveo" ;
    VP (Pres Ind Sg P2) => "desprovees" ;
    VP (Pres Ind Sg P3) => "desprovee" ;
    VP (Pres Ind Pl P1) => "desproveemos" ;
    VP (Pres Ind Pl P2) => "desproveéis" ;
    VP (Pres Ind Pl P3) => "desproveen" ;
    VP (Pres Subj Sg P1) => "desprovea" ;
    VP (Pres Subj Sg P2) => "desproveas" ;
    VP (Pres Subj Sg P3) => "desprovea" ;
    VP (Pres Subj Pl P1) => "desproveamos" ;
    VP (Pres Subj Pl P2) => "desproveáis" ;
    VP (Pres Subj Pl P3) => "desprovean" ;
    VP (Impf Ind Sg P1) => "desproveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desproveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desproveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desproveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desproveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desproveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desproveyera" ; "desproveyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desproveyeras" ; "desproveyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desproveyera" ; "desproveyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desproveyéramos" ; "desproveyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desproveyerais" ; "desproveyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desproveyeran" ; "desproveyesen"} ;--# notpresent
    VP (Pret Sg P1) => "desproveí" ;--# notpresent
    VP (Pret Sg P2) => "desproveíste" ;--# notpresent
    VP (Pret Sg P3) => "desproveyó" ;--# notpresent
    VP (Pret Pl P1) => "desproveímos" ;--# notpresent
    VP (Pret Pl P2) => "desproveísteis" ;--# notpresent
    VP (Pret Pl P3) => "desproveyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desproveeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desproveerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desproveerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desproveeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desproveeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desproveerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desproveyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desproveyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desproveyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desproveyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desproveyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desproveyeren" ;--# notpresent
    VP (Cond Sg P1) => "desproveería" ;--# notpresent
    VP (Cond Sg P2) => "desproveerías" ;--# notpresent
    VP (Cond Sg P3) => "desproveería" ;--# notpresent
    VP (Cond Pl P1) => "desproveeríamos" ;--# notpresent
    VP (Cond Pl P2) => "desproveeríais" ;--# notpresent
    VP (Cond Pl P3) => "desproveerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desprovee" ;
    VP (Imp Sg P3) => "desprovea" ;
    VP (Imp Pl P1) => "desproveamos" ;
    VP (Imp Pl P2) => "desproveed" ;
    VP (Imp Pl P3) => "desprovean" ;
    VP (Pass Sg Masc) => "desproveído" ;
    VP (Pass Sg Fem) => "desproveída" ;
    VP (Pass Pl Masc) => "desproveídos" ;
    VP (Pass Pl Fem) => "desproveídas"
    }
  } ;

lin detraer_V = verboV 
 {s = table {
    VI Infn => "detraer" ;
    VI Ger => "detrayendo" ;
    VI Part => "detraído" ;
    VP (Pres Ind Sg P1) => "detrao" ;
    VP (Pres Ind Sg P2) => "detraes" ;
    VP (Pres Ind Sg P3) => "detrae" ;
    VP (Pres Ind Pl P1) => "detraemos" ;
    VP (Pres Ind Pl P2) => "detraéis" ;
    VP (Pres Ind Pl P3) => "detraen" ;
    VP (Pres Subj Sg P1) => "detraa" ;
    VP (Pres Subj Sg P2) => "detraas" ;
    VP (Pres Subj Sg P3) => "detraa" ;
    VP (Pres Subj Pl P1) => "detraamos" ;
    VP (Pres Subj Pl P2) => "detraáis" ;
    VP (Pres Subj Pl P3) => "detraan" ;
    VP (Impf Ind Sg P1) => "detraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "detraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "detraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "detraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "detraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "detraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"detrayera" ; "detrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"detrayeras" ; "detrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"detrayera" ; "detrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"detrayéramos" ; "detrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"detrayerais" ; "detrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"detrayeran" ; "detrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "detraí" ;--# notpresent
    VP (Pret Sg P2) => "detraíste" ;--# notpresent
    VP (Pret Sg P3) => "detrayó" ;--# notpresent
    VP (Pret Pl P1) => "detraímos" ;--# notpresent
    VP (Pret Pl P2) => "detraísteis" ;--# notpresent
    VP (Pret Pl P3) => "detrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "detraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "detraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "detraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "detraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "detraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "detraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "detrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "detrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "detrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "detrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "detrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "detrayeren" ;--# notpresent
    VP (Cond Sg P1) => "detraería" ;--# notpresent
    VP (Cond Sg P2) => "detraerías" ;--# notpresent
    VP (Cond Sg P3) => "detraería" ;--# notpresent
    VP (Cond Pl P1) => "detraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "detraeríais" ;--# notpresent
    VP (Cond Pl P3) => "detraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "detrae" ;
    VP (Imp Sg P3) => "detraa" ;
    VP (Imp Pl P1) => "detraamos" ;
    VP (Imp Pl P2) => "detraed" ;
    VP (Imp Pl P3) => "detraan" ;
    VP (Pass Sg Masc) => "detraído" ;
    VP (Pass Sg Fem) => "detraída" ;
    VP (Pass Pl Masc) => "detraídos" ;
    VP (Pass Pl Fem) => "detraídas"
    }
  } ;

lin distraer_V = verboV 
 {s = table {
    VI Infn => "distraer" ;
    VI Ger => "distrayendo" ;
    VI Part => "distraído" ;
    VP (Pres Ind Sg P1) => "distrao" ;
    VP (Pres Ind Sg P2) => "distraes" ;
    VP (Pres Ind Sg P3) => "distrae" ;
    VP (Pres Ind Pl P1) => "distraemos" ;
    VP (Pres Ind Pl P2) => "distraéis" ;
    VP (Pres Ind Pl P3) => "distraen" ;
    VP (Pres Subj Sg P1) => "distraa" ;
    VP (Pres Subj Sg P2) => "distraas" ;
    VP (Pres Subj Sg P3) => "distraa" ;
    VP (Pres Subj Pl P1) => "distraamos" ;
    VP (Pres Subj Pl P2) => "distraáis" ;
    VP (Pres Subj Pl P3) => "distraan" ;
    VP (Impf Ind Sg P1) => "distraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "distraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "distraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "distraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "distraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "distraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"distrayera" ; "distrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"distrayeras" ; "distrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"distrayera" ; "distrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"distrayéramos" ; "distrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"distrayerais" ; "distrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"distrayeran" ; "distrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "distraí" ;--# notpresent
    VP (Pret Sg P2) => "distraíste" ;--# notpresent
    VP (Pret Sg P3) => "distrayó" ;--# notpresent
    VP (Pret Pl P1) => "distraímos" ;--# notpresent
    VP (Pret Pl P2) => "distraísteis" ;--# notpresent
    VP (Pret Pl P3) => "distrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "distraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "distraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "distraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "distraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "distraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "distraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "distrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "distrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "distrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "distrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "distrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "distrayeren" ;--# notpresent
    VP (Cond Sg P1) => "distraería" ;--# notpresent
    VP (Cond Sg P2) => "distraerías" ;--# notpresent
    VP (Cond Sg P3) => "distraería" ;--# notpresent
    VP (Cond Pl P1) => "distraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "distraeríais" ;--# notpresent
    VP (Cond Pl P3) => "distraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "distrae" ;
    VP (Imp Sg P3) => "distraa" ;
    VP (Imp Pl P1) => "distraamos" ;
    VP (Imp Pl P2) => "distraed" ;
    VP (Imp Pl P3) => "distraan" ;
    VP (Pass Sg Masc) => "distraído" ;
    VP (Pass Sg Fem) => "distraída" ;
    VP (Pass Pl Masc) => "distraídos" ;
    VP (Pass Pl Fem) => "distraídas"
    }
  } ;

lin extraer_V = verboV 
 {s = table {
    VI Infn => "extraer" ;
    VI Ger => "extrayendo" ;
    VI Part => "extraído" ;
    VP (Pres Ind Sg P1) => "extrao" ;
    VP (Pres Ind Sg P2) => "extraes" ;
    VP (Pres Ind Sg P3) => "extrae" ;
    VP (Pres Ind Pl P1) => "extraemos" ;
    VP (Pres Ind Pl P2) => "extraéis" ;
    VP (Pres Ind Pl P3) => "extraen" ;
    VP (Pres Subj Sg P1) => "extraa" ;
    VP (Pres Subj Sg P2) => "extraas" ;
    VP (Pres Subj Sg P3) => "extraa" ;
    VP (Pres Subj Pl P1) => "extraamos" ;
    VP (Pres Subj Pl P2) => "extraáis" ;
    VP (Pres Subj Pl P3) => "extraan" ;
    VP (Impf Ind Sg P1) => "extraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "extraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "extraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "extraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "extraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "extraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"extrayera" ; "extrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"extrayeras" ; "extrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"extrayera" ; "extrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"extrayéramos" ; "extrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"extrayerais" ; "extrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"extrayeran" ; "extrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "extraí" ;--# notpresent
    VP (Pret Sg P2) => "extraíste" ;--# notpresent
    VP (Pret Sg P3) => "extrayó" ;--# notpresent
    VP (Pret Pl P1) => "extraímos" ;--# notpresent
    VP (Pret Pl P2) => "extraísteis" ;--# notpresent
    VP (Pret Pl P3) => "extrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "extraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "extraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "extraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "extraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "extraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "extraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "extrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "extrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "extrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "extrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "extrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "extrayeren" ;--# notpresent
    VP (Cond Sg P1) => "extraería" ;--# notpresent
    VP (Cond Sg P2) => "extraerías" ;--# notpresent
    VP (Cond Sg P3) => "extraería" ;--# notpresent
    VP (Cond Pl P1) => "extraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "extraeríais" ;--# notpresent
    VP (Cond Pl P3) => "extraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "extrae" ;
    VP (Imp Sg P3) => "extraa" ;
    VP (Imp Pl P1) => "extraamos" ;
    VP (Imp Pl P2) => "extraed" ;
    VP (Imp Pl P3) => "extraan" ;
    VP (Pass Sg Masc) => "extraído" ;
    VP (Pass Sg Fem) => "extraída" ;
    VP (Pass Pl Masc) => "extraídos" ;
    VP (Pass Pl Fem) => "extraídas"
    }
  } ;

lin leer_V = verboV 
 {s = table {
    VI Infn => "leer" ;
    VI Ger => "leyendo" ;
    VI Part => "leído" ;
    VP (Pres Ind Sg P1) => "leo" ;
    VP (Pres Ind Sg P2) => "lees" ;
    VP (Pres Ind Sg P3) => "lee" ;
    VP (Pres Ind Pl P1) => "leemos" ;
    VP (Pres Ind Pl P2) => "leéis" ;
    VP (Pres Ind Pl P3) => "leen" ;
    VP (Pres Subj Sg P1) => "lea" ;
    VP (Pres Subj Sg P2) => "leas" ;
    VP (Pres Subj Sg P3) => "lea" ;
    VP (Pres Subj Pl P1) => "leamos" ;
    VP (Pres Subj Pl P2) => "leáis" ;
    VP (Pres Subj Pl P3) => "lean" ;
    VP (Impf Ind Sg P1) => "leía" ;--# notpresent
    VP (Impf Ind Sg P2) => "leías" ;--# notpresent
    VP (Impf Ind Sg P3) => "leía" ;--# notpresent
    VP (Impf Ind Pl P1) => "leíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "leíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "leían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"leyera" ; "leyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"leyeras" ; "leyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"leyera" ; "leyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"leyéramos" ; "leyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"leyerais" ; "leyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"leyeran" ; "leyesen"} ;--# notpresent
    VP (Pret Sg P1) => "leí" ;--# notpresent
    VP (Pret Sg P2) => "leíste" ;--# notpresent
    VP (Pret Sg P3) => "leyó" ;--# notpresent
    VP (Pret Pl P1) => "leímos" ;--# notpresent
    VP (Pret Pl P2) => "leísteis" ;--# notpresent
    VP (Pret Pl P3) => "leyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "leeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "leerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "leerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "leeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "leeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "leerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "leyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "leyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "leyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "leyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "leyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "leyeren" ;--# notpresent
    VP (Cond Sg P1) => "leería" ;--# notpresent
    VP (Cond Sg P2) => "leerías" ;--# notpresent
    VP (Cond Sg P3) => "leería" ;--# notpresent
    VP (Cond Pl P1) => "leeríamos" ;--# notpresent
    VP (Cond Pl P2) => "leeríais" ;--# notpresent
    VP (Cond Pl P3) => "leerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "lee" ;
    VP (Imp Sg P3) => "lea" ;
    VP (Imp Pl P1) => "leamos" ;
    VP (Imp Pl P2) => "leed" ;
    VP (Imp Pl P3) => "lean" ;
    VP (Pass Sg Masc) => "leído" ;
    VP (Pass Sg Fem) => "leída" ;
    VP (Pass Pl Masc) => "leídos" ;
    VP (Pass Pl Fem) => "leídas"
    }
  } ;

lin maltraer_V = verboV 
 {s = table {
    VI Infn => "maltraer" ;
    VI Ger => "maltrayendo" ;
    VI Part => "maltraído" ;
    VP (Pres Ind Sg P1) => "maltrao" ;
    VP (Pres Ind Sg P2) => "maltraes" ;
    VP (Pres Ind Sg P3) => "maltrae" ;
    VP (Pres Ind Pl P1) => "maltraemos" ;
    VP (Pres Ind Pl P2) => "maltraéis" ;
    VP (Pres Ind Pl P3) => "maltraen" ;
    VP (Pres Subj Sg P1) => "maltraa" ;
    VP (Pres Subj Sg P2) => "maltraas" ;
    VP (Pres Subj Sg P3) => "maltraa" ;
    VP (Pres Subj Pl P1) => "maltraamos" ;
    VP (Pres Subj Pl P2) => "maltraáis" ;
    VP (Pres Subj Pl P3) => "maltraan" ;
    VP (Impf Ind Sg P1) => "maltraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "maltraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "maltraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "maltraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "maltraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "maltraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"maltrayera" ; "maltrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"maltrayeras" ; "maltrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"maltrayera" ; "maltrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"maltrayéramos" ; "maltrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"maltrayerais" ; "maltrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"maltrayeran" ; "maltrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "maltraí" ;--# notpresent
    VP (Pret Sg P2) => "maltraíste" ;--# notpresent
    VP (Pret Sg P3) => "maltrayó" ;--# notpresent
    VP (Pret Pl P1) => "maltraímos" ;--# notpresent
    VP (Pret Pl P2) => "maltraísteis" ;--# notpresent
    VP (Pret Pl P3) => "maltrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "maltraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "maltraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "maltraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "maltraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "maltraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "maltraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "maltrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "maltrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "maltrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "maltrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "maltrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "maltrayeren" ;--# notpresent
    VP (Cond Sg P1) => "maltraería" ;--# notpresent
    VP (Cond Sg P2) => "maltraerías" ;--# notpresent
    VP (Cond Sg P3) => "maltraería" ;--# notpresent
    VP (Cond Pl P1) => "maltraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "maltraeríais" ;--# notpresent
    VP (Cond Pl P3) => "maltraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "maltrae" ;
    VP (Imp Sg P3) => "maltraa" ;
    VP (Imp Pl P1) => "maltraamos" ;
    VP (Imp Pl P2) => "maltraed" ;
    VP (Imp Pl P3) => "maltraan" ;
    VP (Pass Sg Masc) => "maltraído" ;
    VP (Pass Sg Fem) => "maltraída" ;
    VP (Pass Pl Masc) => "maltraídos" ;
    VP (Pass Pl Fem) => "maltraídas"
    }
  } ;

lin poseer_V = verboV 
 {s = table {
    VI Infn => "poseer" ;
    VI Ger => "poseyendo" ;
    VI Part => "poseído" ;
    VP (Pres Ind Sg P1) => "poseo" ;
    VP (Pres Ind Sg P2) => "posees" ;
    VP (Pres Ind Sg P3) => "posee" ;
    VP (Pres Ind Pl P1) => "poseemos" ;
    VP (Pres Ind Pl P2) => "poseéis" ;
    VP (Pres Ind Pl P3) => "poseen" ;
    VP (Pres Subj Sg P1) => "posea" ;
    VP (Pres Subj Sg P2) => "poseas" ;
    VP (Pres Subj Sg P3) => "posea" ;
    VP (Pres Subj Pl P1) => "poseamos" ;
    VP (Pres Subj Pl P2) => "poseáis" ;
    VP (Pres Subj Pl P3) => "posean" ;
    VP (Impf Ind Sg P1) => "poseía" ;--# notpresent
    VP (Impf Ind Sg P2) => "poseías" ;--# notpresent
    VP (Impf Ind Sg P3) => "poseía" ;--# notpresent
    VP (Impf Ind Pl P1) => "poseíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "poseíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "poseían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"poseyera" ; "poseyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"poseyeras" ; "poseyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"poseyera" ; "poseyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"poseyéramos" ; "poseyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"poseyerais" ; "poseyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"poseyeran" ; "poseyesen"} ;--# notpresent
    VP (Pret Sg P1) => "poseí" ;--# notpresent
    VP (Pret Sg P2) => "poseíste" ;--# notpresent
    VP (Pret Sg P3) => "poseyó" ;--# notpresent
    VP (Pret Pl P1) => "poseímos" ;--# notpresent
    VP (Pret Pl P2) => "poseísteis" ;--# notpresent
    VP (Pret Pl P3) => "poseyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "poseeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "poseerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "poseerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "poseeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "poseeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "poseerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "poseyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "poseyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "poseyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "poseyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "poseyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "poseyeren" ;--# notpresent
    VP (Cond Sg P1) => "poseería" ;--# notpresent
    VP (Cond Sg P2) => "poseerías" ;--# notpresent
    VP (Cond Sg P3) => "poseería" ;--# notpresent
    VP (Cond Pl P1) => "poseeríamos" ;--# notpresent
    VP (Cond Pl P2) => "poseeríais" ;--# notpresent
    VP (Cond Pl P3) => "poseerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "posee" ;
    VP (Imp Sg P3) => "posea" ;
    VP (Imp Pl P1) => "poseamos" ;
    VP (Imp Pl P2) => "poseed" ;
    VP (Imp Pl P3) => "posean" ;
    VP (Pass Sg Masc) => "poseído" ;
    VP (Pass Sg Fem) => "poseída" ;
    VP (Pass Pl Masc) => "poseídos" ;
    VP (Pass Pl Fem) => "poseídas"
    }
  } ;

lin proveer_V = verboV 
 {s = table {
    VI Infn => "proveer" ;
    VI Ger => "proveyendo" ;
    VI Part => variants {"proveído" ; "provisto"} ;
    VP (Pres Ind Sg P1) => "proveo" ;
    VP (Pres Ind Sg P2) => "provees" ;
    VP (Pres Ind Sg P3) => "provee" ;
    VP (Pres Ind Pl P1) => "proveemos" ;
    VP (Pres Ind Pl P2) => "proveéis" ;
    VP (Pres Ind Pl P3) => "proveen" ;
    VP (Pres Subj Sg P1) => "provea" ;
    VP (Pres Subj Sg P2) => "proveas" ;
    VP (Pres Subj Sg P3) => "provea" ;
    VP (Pres Subj Pl P1) => "proveamos" ;
    VP (Pres Subj Pl P2) => "proveáis" ;
    VP (Pres Subj Pl P3) => "provean" ;
    VP (Impf Ind Sg P1) => "proveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "proveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "proveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "proveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "proveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "proveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"proveyera" ; "proveyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"proveyeras" ; "proveyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"proveyera" ; "proveyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"proveyéramos" ; "proveyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"proveyerais" ; "proveyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"proveyeran" ; "proveyesen"} ;--# notpresent
    VP (Pret Sg P1) => "proveí" ;--# notpresent
    VP (Pret Sg P2) => "proveíste" ;--# notpresent
    VP (Pret Sg P3) => "proveyó" ;--# notpresent
    VP (Pret Pl P1) => "proveímos" ;--# notpresent
    VP (Pret Pl P2) => "proveísteis" ;--# notpresent
    VP (Pret Pl P3) => "proveyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "proveeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "proveerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "proveerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "proveeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "proveeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "proveerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "proveyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "proveyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "proveyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "proveyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "proveyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "proveyeren" ;--# notpresent
    VP (Cond Sg P1) => "proveería" ;--# notpresent
    VP (Cond Sg P2) => "proveerías" ;--# notpresent
    VP (Cond Sg P3) => "proveería" ;--# notpresent
    VP (Cond Pl P1) => "proveeríamos" ;--# notpresent
    VP (Cond Pl P2) => "proveeríais" ;--# notpresent
    VP (Cond Pl P3) => "proveerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "provee" ;
    VP (Imp Sg P3) => "provea" ;
    VP (Imp Pl P1) => "proveamos" ;
    VP (Imp Pl P2) => "proveed" ;
    VP (Imp Pl P3) => "provean" ;
    VP (Pass Sg Masc) => variants {"proveído" ; "provisto"} ;
    VP (Pass Sg Fem) => variants {"proveída" ; "provista"} ;
    VP (Pass Pl Masc) => variants {"proveídos" ; "provistos"} ;
    VP (Pass Pl Fem) => variants {"proveídas" ; "provistas"}
    }
  } ;

lin recaer_V = verboV 
 {s = table {
    VI Infn => "recaer" ;
    VI Ger => "recayendo" ;
    VI Part => "recaído" ;
    VP (Pres Ind Sg P1) => "recaigo" ;
    VP (Pres Ind Sg P2) => "recaes" ;
    VP (Pres Ind Sg P3) => "recae" ;
    VP (Pres Ind Pl P1) => "recaemos" ;
    VP (Pres Ind Pl P2) => "recaéis" ;
    VP (Pres Ind Pl P3) => "recaen" ;
    VP (Pres Subj Sg P1) => "recaiga" ;
    VP (Pres Subj Sg P2) => "recaigas" ;
    VP (Pres Subj Sg P3) => "recaiga" ;
    VP (Pres Subj Pl P1) => "recaigamos" ;
    VP (Pres Subj Pl P2) => "recaigáis" ;
    VP (Pres Subj Pl P3) => "recaigan" ;
    VP (Impf Ind Sg P1) => "recaía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recaías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recaía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recaíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recaíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recaían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recayera" ; "recayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recayeras" ; "recayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recayera" ; "recayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recayéramos" ; "recayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recayerais" ; "recayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recayeran" ; "recayesen"} ;--# notpresent
    VP (Pret Sg P1) => "recaí" ;--# notpresent
    VP (Pret Sg P2) => "recaíste" ;--# notpresent
    VP (Pret Sg P3) => "recayó" ;--# notpresent
    VP (Pret Pl P1) => "recaímos" ;--# notpresent
    VP (Pret Pl P2) => "recaísteis" ;--# notpresent
    VP (Pret Pl P3) => "recayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recaeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recaerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recaerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recaeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recaeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recaerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recayeren" ;--# notpresent
    VP (Cond Sg P1) => "recaería" ;--# notpresent
    VP (Cond Sg P2) => "recaerías" ;--# notpresent
    VP (Cond Sg P3) => "recaería" ;--# notpresent
    VP (Cond Pl P1) => "recaeríamos" ;--# notpresent
    VP (Cond Pl P2) => "recaeríais" ;--# notpresent
    VP (Cond Pl P3) => "recaerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recae" ;
    VP (Imp Sg P3) => "recaiga" ;
    VP (Imp Pl P1) => "recaigamos" ;
    VP (Imp Pl P2) => "recaed" ;
    VP (Imp Pl P3) => "recaigan" ;
    VP (Pass Sg Masc) => "recaído" ;
    VP (Pass Sg Fem) => "recaída" ;
    VP (Pass Pl Masc) => "recaídos" ;
    VP (Pass Pl Fem) => "recaídas"
    }
  } ;

lin releer_V = verboV 
 {s = table {
    VI Infn => "releer" ;
    VI Ger => "releyendo" ;
    VI Part => "releído" ;
    VP (Pres Ind Sg P1) => "releo" ;
    VP (Pres Ind Sg P2) => "relees" ;
    VP (Pres Ind Sg P3) => "relee" ;
    VP (Pres Ind Pl P1) => "releemos" ;
    VP (Pres Ind Pl P2) => "releéis" ;
    VP (Pres Ind Pl P3) => "releen" ;
    VP (Pres Subj Sg P1) => "relea" ;
    VP (Pres Subj Sg P2) => "releas" ;
    VP (Pres Subj Sg P3) => "relea" ;
    VP (Pres Subj Pl P1) => "releamos" ;
    VP (Pres Subj Pl P2) => "releáis" ;
    VP (Pres Subj Pl P3) => "relean" ;
    VP (Impf Ind Sg P1) => "releía" ;--# notpresent
    VP (Impf Ind Sg P2) => "releías" ;--# notpresent
    VP (Impf Ind Sg P3) => "releía" ;--# notpresent
    VP (Impf Ind Pl P1) => "releíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "releíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "releían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"releyera" ; "releyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"releyeras" ; "releyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"releyera" ; "releyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"releyéramos" ; "releyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"releyerais" ; "releyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"releyeran" ; "releyesen"} ;--# notpresent
    VP (Pret Sg P1) => "releí" ;--# notpresent
    VP (Pret Sg P2) => "releíste" ;--# notpresent
    VP (Pret Sg P3) => "releyó" ;--# notpresent
    VP (Pret Pl P1) => "releímos" ;--# notpresent
    VP (Pret Pl P2) => "releísteis" ;--# notpresent
    VP (Pret Pl P3) => "releyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "releeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "releerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "releerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "releeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "releeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "releerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "releyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "releyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "releyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "releyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "releyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "releyeren" ;--# notpresent
    VP (Cond Sg P1) => "releería" ;--# notpresent
    VP (Cond Sg P2) => "releerías" ;--# notpresent
    VP (Cond Sg P3) => "releería" ;--# notpresent
    VP (Cond Pl P1) => "releeríamos" ;--# notpresent
    VP (Cond Pl P2) => "releeríais" ;--# notpresent
    VP (Cond Pl P3) => "releerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "relee" ;
    VP (Imp Sg P3) => "relea" ;
    VP (Imp Pl P1) => "releamos" ;
    VP (Imp Pl P2) => "releed" ;
    VP (Imp Pl P3) => "relean" ;
    VP (Pass Sg Masc) => "releído" ;
    VP (Pass Sg Fem) => "releída" ;
    VP (Pass Pl Masc) => "releídos" ;
    VP (Pass Pl Fem) => "releídas"
    }
  } ;

lin retraer_V = verboV 
 {s = table {
    VI Infn => "retraer" ;
    VI Ger => "retrayendo" ;
    VI Part => "retraído" ;
    VP (Pres Ind Sg P1) => "retrao" ;
    VP (Pres Ind Sg P2) => "retraes" ;
    VP (Pres Ind Sg P3) => "retrae" ;
    VP (Pres Ind Pl P1) => "retraemos" ;
    VP (Pres Ind Pl P2) => "retraéis" ;
    VP (Pres Ind Pl P3) => "retraen" ;
    VP (Pres Subj Sg P1) => "retraa" ;
    VP (Pres Subj Sg P2) => "retraas" ;
    VP (Pres Subj Sg P3) => "retraa" ;
    VP (Pres Subj Pl P1) => "retraamos" ;
    VP (Pres Subj Pl P2) => "retraáis" ;
    VP (Pres Subj Pl P3) => "retraan" ;
    VP (Impf Ind Sg P1) => "retraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retrayera" ; "retrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retrayeras" ; "retrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retrayera" ; "retrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retrayéramos" ; "retrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retrayerais" ; "retrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retrayeran" ; "retrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "retraí" ;--# notpresent
    VP (Pret Sg P2) => "retraíste" ;--# notpresent
    VP (Pret Sg P3) => "retrayó" ;--# notpresent
    VP (Pret Pl P1) => "retraímos" ;--# notpresent
    VP (Pret Pl P2) => "retraísteis" ;--# notpresent
    VP (Pret Pl P3) => "retrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retrayeren" ;--# notpresent
    VP (Cond Sg P1) => "retraería" ;--# notpresent
    VP (Cond Sg P2) => "retraerías" ;--# notpresent
    VP (Cond Sg P3) => "retraería" ;--# notpresent
    VP (Cond Pl P1) => "retraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "retraeríais" ;--# notpresent
    VP (Cond Pl P3) => "retraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retrae" ;
    VP (Imp Sg P3) => "retraa" ;
    VP (Imp Pl P1) => "retraamos" ;
    VP (Imp Pl P2) => "retraed" ;
    VP (Imp Pl P3) => "retraan" ;
    VP (Pass Sg Masc) => "retraído" ;
    VP (Pass Sg Fem) => "retraída" ;
    VP (Pass Pl Masc) => "retraídos" ;
    VP (Pass Pl Fem) => "retraídas"
    }
  } ;

lin retrotraer_V = verboV 
 {s = table {
    VI Infn => "retrotraer" ;
    VI Ger => "retrotrayendo" ;
    VI Part => "retrotraído" ;
    VP (Pres Ind Sg P1) => "retrotrao" ;
    VP (Pres Ind Sg P2) => "retrotraes" ;
    VP (Pres Ind Sg P3) => "retrotrae" ;
    VP (Pres Ind Pl P1) => "retrotraemos" ;
    VP (Pres Ind Pl P2) => "retrotraéis" ;
    VP (Pres Ind Pl P3) => "retrotraen" ;
    VP (Pres Subj Sg P1) => "retrotraa" ;
    VP (Pres Subj Sg P2) => "retrotraas" ;
    VP (Pres Subj Sg P3) => "retrotraa" ;
    VP (Pres Subj Pl P1) => "retrotraamos" ;
    VP (Pres Subj Pl P2) => "retrotraáis" ;
    VP (Pres Subj Pl P3) => "retrotraan" ;
    VP (Impf Ind Sg P1) => "retrotraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retrotraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retrotraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retrotraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retrotraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retrotraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retrotrayera" ; "retrotrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retrotrayeras" ; "retrotrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retrotrayera" ; "retrotrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retrotrayéramos" ; "retrotrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retrotrayerais" ; "retrotrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retrotrayeran" ; "retrotrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "retrotraí" ;--# notpresent
    VP (Pret Sg P2) => "retrotraíste" ;--# notpresent
    VP (Pret Sg P3) => "retrotrayó" ;--# notpresent
    VP (Pret Pl P1) => "retrotraímos" ;--# notpresent
    VP (Pret Pl P2) => "retrotraísteis" ;--# notpresent
    VP (Pret Pl P3) => "retrotrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retrotraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retrotraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retrotraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retrotraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retrotraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retrotraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retrotrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retrotrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retrotrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retrotrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retrotrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retrotrayeren" ;--# notpresent
    VP (Cond Sg P1) => "retrotraería" ;--# notpresent
    VP (Cond Sg P2) => "retrotraerías" ;--# notpresent
    VP (Cond Sg P3) => "retrotraería" ;--# notpresent
    VP (Cond Pl P1) => "retrotraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "retrotraeríais" ;--# notpresent
    VP (Cond Pl P3) => "retrotraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retrotrae" ;
    VP (Imp Sg P3) => "retrotraa" ;
    VP (Imp Pl P1) => "retrotraamos" ;
    VP (Imp Pl P2) => "retrotraed" ;
    VP (Imp Pl P3) => "retrotraan" ;
    VP (Pass Sg Masc) => "retrotraído" ;
    VP (Pass Sg Fem) => "retrotraída" ;
    VP (Pass Pl Masc) => "retrotraídos" ;
    VP (Pass Pl Fem) => "retrotraídas"
    }
  } ;

lin roer_V = verboV 
 {s = table {
    VI Infn => "roer" ;
    VI Ger => "royendo" ;
    VI Part => "roído" ;
    VP (Pres Ind Sg P1) => variants {"roo" ; "roigo"} ;
    VP (Pres Ind Sg P2) => "roes" ;
    VP (Pres Ind Sg P3) => "roe" ;
    VP (Pres Ind Pl P1) => "roemos" ;
    VP (Pres Ind Pl P2) => "roéis" ;
    VP (Pres Ind Pl P3) => "roen" ;
    VP (Pres Subj Sg P1) => "roa" ;
    VP (Pres Subj Sg P2) => "roas" ;
    VP (Pres Subj Sg P3) => "roa" ;
    VP (Pres Subj Pl P1) => "roamos" ;
    VP (Pres Subj Pl P2) => "roáis" ;
    VP (Pres Subj Pl P3) => "roan" ;
    VP (Impf Ind Sg P1) => "roía" ;--# notpresent
    VP (Impf Ind Sg P2) => "roías" ;--# notpresent
    VP (Impf Ind Sg P3) => "roía" ;--# notpresent
    VP (Impf Ind Pl P1) => "roíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "roíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "roían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"royera" ; "royese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"royeras" ; "royeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"royera" ; "royese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"royéramos" ; "royésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"royerais" ; "royeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"royeran" ; "royesen"} ;--# notpresent
    VP (Pret Sg P1) => "roí" ;--# notpresent
    VP (Pret Sg P2) => "roíste" ;--# notpresent
    VP (Pret Sg P3) => "royó" ;--# notpresent
    VP (Pret Pl P1) => "roímos" ;--# notpresent
    VP (Pret Pl P2) => "roísteis" ;--# notpresent
    VP (Pret Pl P3) => "royeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "roeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "roerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "roerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "roeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "roeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "roerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "royere" ;--# notpresent
    VP (Fut Subj Sg P2) => "royeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "royere" ;--# notpresent
    VP (Fut Subj Pl P1) => "royéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "royereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "royeren" ;--# notpresent
    VP (Cond Sg P1) => "roería" ;--# notpresent
    VP (Cond Sg P2) => "roerías" ;--# notpresent
    VP (Cond Sg P3) => "roería" ;--# notpresent
    VP (Cond Pl P1) => "roeríamos" ;--# notpresent
    VP (Cond Pl P2) => "roeríais" ;--# notpresent
    VP (Cond Pl P3) => "roerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "roe" ;
    VP (Imp Sg P3) => "roa" ;
    VP (Imp Pl P1) => "roamos" ;
    VP (Imp Pl P2) => "roed" ;
    VP (Imp Pl P3) => "roan" ;
    VP (Pass Sg Masc) => "roído" ;
    VP (Pass Sg Fem) => "roída" ;
    VP (Pass Pl Masc) => "roídos" ;
    VP (Pass Pl Fem) => "roídas"
    }
  } ;

lin sobreseer_V = verboV 
 {s = table {
    VI Infn => "sobreseer" ;
    VI Ger => "sobreseyendo" ;
    VI Part => "sobreseído" ;
    VP (Pres Ind Sg P1) => "sobreseo" ;
    VP (Pres Ind Sg P2) => "sobresees" ;
    VP (Pres Ind Sg P3) => "sobresee" ;
    VP (Pres Ind Pl P1) => "sobreseemos" ;
    VP (Pres Ind Pl P2) => "sobreseéis" ;
    VP (Pres Ind Pl P3) => "sobreseen" ;
    VP (Pres Subj Sg P1) => "sobresea" ;
    VP (Pres Subj Sg P2) => "sobreseas" ;
    VP (Pres Subj Sg P3) => "sobresea" ;
    VP (Pres Subj Pl P1) => "sobreseamos" ;
    VP (Pres Subj Pl P2) => "sobreseáis" ;
    VP (Pres Subj Pl P3) => "sobresean" ;
    VP (Impf Ind Sg P1) => "sobreseía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobreseías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobreseía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobreseíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobreseíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobreseían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobreseyera" ; "sobreseyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobreseyeras" ; "sobreseyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobreseyera" ; "sobreseyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobreseyéramos" ; "sobreseyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobreseyerais" ; "sobreseyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobreseyeran" ; "sobreseyesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobreseí" ;--# notpresent
    VP (Pret Sg P2) => "sobreseíste" ;--# notpresent
    VP (Pret Sg P3) => "sobreseyó" ;--# notpresent
    VP (Pret Pl P1) => "sobreseímos" ;--# notpresent
    VP (Pret Pl P2) => "sobreseísteis" ;--# notpresent
    VP (Pret Pl P3) => "sobreseyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobreseeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobreseerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobreseerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobreseeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobreseeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobreseerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobreseyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobreseyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobreseyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobreseyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobreseyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobreseyeren" ;--# notpresent
    VP (Cond Sg P1) => "sobreseería" ;--# notpresent
    VP (Cond Sg P2) => "sobreseerías" ;--# notpresent
    VP (Cond Sg P3) => "sobreseería" ;--# notpresent
    VP (Cond Pl P1) => "sobreseeríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobreseeríais" ;--# notpresent
    VP (Cond Pl P3) => "sobreseerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobresee" ;
    VP (Imp Sg P3) => "sobresea" ;
    VP (Imp Pl P1) => "sobreseamos" ;
    VP (Imp Pl P2) => "sobreseed" ;
    VP (Imp Pl P3) => "sobresean" ;
    VP (Pass Sg Masc) => "sobreseído" ;
    VP (Pass Sg Fem) => "sobreseída" ;
    VP (Pass Pl Masc) => "sobreseídos" ;
    VP (Pass Pl Fem) => "sobreseídas"
    }
  } ;

lin substraer_V = verboV 
 {s = table {
    VI Infn => "substraer" ;
    VI Ger => "substrayendo" ;
    VI Part => "substraído" ;
    VP (Pres Ind Sg P1) => "substrao" ;
    VP (Pres Ind Sg P2) => "substraes" ;
    VP (Pres Ind Sg P3) => "substrae" ;
    VP (Pres Ind Pl P1) => "substraemos" ;
    VP (Pres Ind Pl P2) => "substraéis" ;
    VP (Pres Ind Pl P3) => "substraen" ;
    VP (Pres Subj Sg P1) => "substraa" ;
    VP (Pres Subj Sg P2) => "substraas" ;
    VP (Pres Subj Sg P3) => "substraa" ;
    VP (Pres Subj Pl P1) => "substraamos" ;
    VP (Pres Subj Pl P2) => "substraáis" ;
    VP (Pres Subj Pl P3) => "substraan" ;
    VP (Impf Ind Sg P1) => "substraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "substraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "substraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "substraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "substraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "substraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"substrayera" ; "substrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"substrayeras" ; "substrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"substrayera" ; "substrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"substrayéramos" ; "substrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"substrayerais" ; "substrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"substrayeran" ; "substrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "substraí" ;--# notpresent
    VP (Pret Sg P2) => "substraíste" ;--# notpresent
    VP (Pret Sg P3) => "substrayó" ;--# notpresent
    VP (Pret Pl P1) => "substraímos" ;--# notpresent
    VP (Pret Pl P2) => "substraísteis" ;--# notpresent
    VP (Pret Pl P3) => "substrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "substraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "substraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "substraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "substraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "substraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "substraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "substrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "substrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "substrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "substrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "substrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "substrayeren" ;--# notpresent
    VP (Cond Sg P1) => "substraería" ;--# notpresent
    VP (Cond Sg P2) => "substraerías" ;--# notpresent
    VP (Cond Sg P3) => "substraería" ;--# notpresent
    VP (Cond Pl P1) => "substraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "substraeríais" ;--# notpresent
    VP (Cond Pl P3) => "substraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "substrae" ;
    VP (Imp Sg P3) => "substraa" ;
    VP (Imp Pl P1) => "substraamos" ;
    VP (Imp Pl P2) => "substraed" ;
    VP (Imp Pl P3) => "substraan" ;
    VP (Pass Sg Masc) => "substraído" ;
    VP (Pass Sg Fem) => "substraída" ;
    VP (Pass Pl Masc) => "substraídos" ;
    VP (Pass Pl Fem) => "substraídas"
    }
  } ;

lin sustraer_V = verboV 
 {s = table {
    VI Infn => "sustraer" ;
    VI Ger => "sustrayendo" ;
    VI Part => "sustraído" ;
    VP (Pres Ind Sg P1) => "sustrao" ;
    VP (Pres Ind Sg P2) => "sustraes" ;
    VP (Pres Ind Sg P3) => "sustrae" ;
    VP (Pres Ind Pl P1) => "sustraemos" ;
    VP (Pres Ind Pl P2) => "sustraéis" ;
    VP (Pres Ind Pl P3) => "sustraen" ;
    VP (Pres Subj Sg P1) => "sustraa" ;
    VP (Pres Subj Sg P2) => "sustraas" ;
    VP (Pres Subj Sg P3) => "sustraa" ;
    VP (Pres Subj Pl P1) => "sustraamos" ;
    VP (Pres Subj Pl P2) => "sustraáis" ;
    VP (Pres Subj Pl P3) => "sustraan" ;
    VP (Impf Ind Sg P1) => "sustraía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sustraías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sustraía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sustraíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sustraíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sustraían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sustrayera" ; "sustrayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sustrayeras" ; "sustrayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sustrayera" ; "sustrayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sustrayéramos" ; "sustrayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sustrayerais" ; "sustrayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sustrayeran" ; "sustrayesen"} ;--# notpresent
    VP (Pret Sg P1) => "sustraí" ;--# notpresent
    VP (Pret Sg P2) => "sustraíste" ;--# notpresent
    VP (Pret Sg P3) => "sustrayó" ;--# notpresent
    VP (Pret Pl P1) => "sustraímos" ;--# notpresent
    VP (Pret Pl P2) => "sustraísteis" ;--# notpresent
    VP (Pret Pl P3) => "sustrayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sustraeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sustraerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sustraerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sustraeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sustraeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sustraerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sustrayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sustrayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sustrayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sustrayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sustrayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sustrayeren" ;--# notpresent
    VP (Cond Sg P1) => "sustraería" ;--# notpresent
    VP (Cond Sg P2) => "sustraerías" ;--# notpresent
    VP (Cond Sg P3) => "sustraería" ;--# notpresent
    VP (Cond Pl P1) => "sustraeríamos" ;--# notpresent
    VP (Cond Pl P2) => "sustraeríais" ;--# notpresent
    VP (Cond Pl P3) => "sustraerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sustrae" ;
    VP (Imp Sg P3) => "sustraa" ;
    VP (Imp Pl P1) => "sustraamos" ;
    VP (Imp Pl P2) => "sustraed" ;
    VP (Imp Pl P3) => "sustraan" ;
    VP (Pass Sg Masc) => "sustraído" ;
    VP (Pass Sg Fem) => "sustraída" ;
    VP (Pass Pl Masc) => "sustraídos" ;
    VP (Pass Pl Fem) => "sustraídas"
    }
  } ;

lin traer_V = verboV 
 {s = table {
    VI Infn => "traer" ;
    VI Ger => "trayendo" ;
    VI Part => "traído" ;
    VP (Pres Ind Sg P1) => "trao" ;
    VP (Pres Ind Sg P2) => "traes" ;
    VP (Pres Ind Sg P3) => "trae" ;
    VP (Pres Ind Pl P1) => "traemos" ;
    VP (Pres Ind Pl P2) => "traéis" ;
    VP (Pres Ind Pl P3) => "traen" ;
    VP (Pres Subj Sg P1) => "traa" ;
    VP (Pres Subj Sg P2) => "traas" ;
    VP (Pres Subj Sg P3) => "traa" ;
    VP (Pres Subj Pl P1) => "traamos" ;
    VP (Pres Subj Pl P2) => "traáis" ;
    VP (Pres Subj Pl P3) => "traan" ;
    VP (Impf Ind Sg P1) => "traía" ;--# notpresent
    VP (Impf Ind Sg P2) => "traías" ;--# notpresent
    VP (Impf Ind Sg P3) => "traía" ;--# notpresent
    VP (Impf Ind Pl P1) => "traíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "traíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "traían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trayera" ; "trayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trayeras" ; "trayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trayera" ; "trayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trayéramos" ; "trayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trayerais" ; "trayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trayeran" ; "trayesen"} ;--# notpresent
    VP (Pret Sg P1) => "traí" ;--# notpresent
    VP (Pret Sg P2) => "traíste" ;--# notpresent
    VP (Pret Sg P3) => "trayó" ;--# notpresent
    VP (Pret Pl P1) => "traímos" ;--# notpresent
    VP (Pret Pl P2) => "traísteis" ;--# notpresent
    VP (Pret Pl P3) => "trayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "traeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "traerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "traerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "traeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "traeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "traerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trayeren" ;--# notpresent
    VP (Cond Sg P1) => "traería" ;--# notpresent
    VP (Cond Sg P2) => "traerías" ;--# notpresent
    VP (Cond Sg P3) => "traería" ;--# notpresent
    VP (Cond Pl P1) => "traeríamos" ;--# notpresent
    VP (Cond Pl P2) => "traeríais" ;--# notpresent
    VP (Cond Pl P3) => "traerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trae" ;
    VP (Imp Sg P3) => "traa" ;
    VP (Imp Pl P1) => "traamos" ;
    VP (Imp Pl P2) => "traed" ;
    VP (Imp Pl P3) => "traan" ;
    VP (Pass Sg Masc) => "traído" ;
    VP (Pass Sg Fem) => "traída" ;
    VP (Pass Pl Masc) => "traídos" ;
    VP (Pass Pl Fem) => "traídas"
    }
  } ;

lin cocer_V = verboV 
 {s = table {
    VI Infn => "cocer" ;
    VI Ger => "cociendo" ;
    VI Part => "cocido" ;
    VP (Pres Ind Sg P1) => "cuezo" ;
    VP (Pres Ind Sg P2) => "cueces" ;
    VP (Pres Ind Sg P3) => "cuece" ;
    VP (Pres Ind Pl P1) => "cocemos" ;
    VP (Pres Ind Pl P2) => "cocéis" ;
    VP (Pres Ind Pl P3) => "cuecen" ;
    VP (Pres Subj Sg P1) => "cueza" ;
    VP (Pres Subj Sg P2) => "cuezas" ;
    VP (Pres Subj Sg P3) => "cueza" ;
    VP (Pres Subj Pl P1) => "cozamos" ;
    VP (Pres Subj Pl P2) => "cozáis" ;
    VP (Pres Subj Pl P3) => "cuezan" ;
    VP (Impf Ind Sg P1) => "cocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cociera" ; "cociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cocieras" ; "cocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cociera" ; "cociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cociéramos" ; "cociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cocierais" ; "cocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cocieran" ; "cociesen"} ;--# notpresent
    VP (Pret Sg P1) => "cocí" ;--# notpresent
    VP (Pret Sg P2) => "cociste" ;--# notpresent
    VP (Pret Sg P3) => "coció" ;--# notpresent
    VP (Pret Pl P1) => "cocimos" ;--# notpresent
    VP (Pret Pl P2) => "cocisteis" ;--# notpresent
    VP (Pret Pl P3) => "cocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "coceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "coceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "coceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cocieren" ;--# notpresent
    VP (Cond Sg P1) => "cocería" ;--# notpresent
    VP (Cond Sg P2) => "cocerías" ;--# notpresent
    VP (Cond Sg P3) => "cocería" ;--# notpresent
    VP (Cond Pl P1) => "coceríamos" ;--# notpresent
    VP (Cond Pl P2) => "coceríais" ;--# notpresent
    VP (Cond Pl P3) => "cocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cuece" ;
    VP (Imp Sg P3) => "cueza" ;
    VP (Imp Pl P1) => "cozamos" ;
    VP (Imp Pl P2) => "coced" ;
    VP (Imp Pl P3) => "cuezan" ;
    VP (Pass Sg Masc) => "cocido" ;
    VP (Pass Sg Fem) => "cocida" ;
    VP (Pass Pl Masc) => "cocidos" ;
    VP (Pass Pl Fem) => "cocidas"
    }
  } ;

lin descocer_V = verboV 
 {s = table {
    VI Infn => "descocer" ;
    VI Ger => "descociendo" ;
    VI Part => "descocido" ;
    VP (Pres Ind Sg P1) => "descuezo" ;
    VP (Pres Ind Sg P2) => "descueces" ;
    VP (Pres Ind Sg P3) => "descuece" ;
    VP (Pres Ind Pl P1) => "descocemos" ;
    VP (Pres Ind Pl P2) => "descocéis" ;
    VP (Pres Ind Pl P3) => "descuecen" ;
    VP (Pres Subj Sg P1) => "descueza" ;
    VP (Pres Subj Sg P2) => "descuezas" ;
    VP (Pres Subj Sg P3) => "descueza" ;
    VP (Pres Subj Pl P1) => "descozamos" ;
    VP (Pres Subj Pl P2) => "descozáis" ;
    VP (Pres Subj Pl P3) => "descuezan" ;
    VP (Impf Ind Sg P1) => "descocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descociera" ; "descociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descocieras" ; "descocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descociera" ; "descociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descociéramos" ; "descociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descocierais" ; "descocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descocieran" ; "descociesen"} ;--# notpresent
    VP (Pret Sg P1) => "descocí" ;--# notpresent
    VP (Pret Sg P2) => "descociste" ;--# notpresent
    VP (Pret Sg P3) => "descoció" ;--# notpresent
    VP (Pret Pl P1) => "descocimos" ;--# notpresent
    VP (Pret Pl P2) => "descocisteis" ;--# notpresent
    VP (Pret Pl P3) => "descocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descocieren" ;--# notpresent
    VP (Cond Sg P1) => "descocería" ;--# notpresent
    VP (Cond Sg P2) => "descocerías" ;--# notpresent
    VP (Cond Sg P3) => "descocería" ;--# notpresent
    VP (Cond Pl P1) => "descoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "descoceríais" ;--# notpresent
    VP (Cond Pl P3) => "descocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descuece" ;
    VP (Imp Sg P3) => "descueza" ;
    VP (Imp Pl P1) => "descozamos" ;
    VP (Imp Pl P2) => "descoced" ;
    VP (Imp Pl P3) => "descuezan" ;
    VP (Pass Sg Masc) => "descocido" ;
    VP (Pass Sg Fem) => "descocida" ;
    VP (Pass Pl Masc) => "descocidos" ;
    VP (Pass Pl Fem) => "descocidas"
    }
  } ;

lin destorcer_V = verboV 
 {s = table {
    VI Infn => "destorcer" ;
    VI Ger => "destorciendo" ;
    VI Part => "destorcido" ;
    VP (Pres Ind Sg P1) => "destuerzo" ;
    VP (Pres Ind Sg P2) => "destuerces" ;
    VP (Pres Ind Sg P3) => "destuerce" ;
    VP (Pres Ind Pl P1) => "destorcemos" ;
    VP (Pres Ind Pl P2) => "destorcéis" ;
    VP (Pres Ind Pl P3) => "destuercen" ;
    VP (Pres Subj Sg P1) => "destuerza" ;
    VP (Pres Subj Sg P2) => "destuerzas" ;
    VP (Pres Subj Sg P3) => "destuerza" ;
    VP (Pres Subj Pl P1) => "destorzamos" ;
    VP (Pres Subj Pl P2) => "destorzáis" ;
    VP (Pres Subj Pl P3) => "destuerzan" ;
    VP (Impf Ind Sg P1) => "destorcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "destorcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "destorcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "destorcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "destorcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "destorcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"destorciera" ; "destorciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"destorcieras" ; "destorcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"destorciera" ; "destorciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"destorciéramos" ; "destorciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"destorcierais" ; "destorcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"destorcieran" ; "destorciesen"} ;--# notpresent
    VP (Pret Sg P1) => "destorcí" ;--# notpresent
    VP (Pret Sg P2) => "destorciste" ;--# notpresent
    VP (Pret Sg P3) => "destorció" ;--# notpresent
    VP (Pret Pl P1) => "destorcimos" ;--# notpresent
    VP (Pret Pl P2) => "destorcisteis" ;--# notpresent
    VP (Pret Pl P3) => "destorcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "destorceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "destorcerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "destorcerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "destorceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "destorceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "destorcerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "destorciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "destorcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "destorciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "destorciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "destorciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "destorcieren" ;--# notpresent
    VP (Cond Sg P1) => "destorcería" ;--# notpresent
    VP (Cond Sg P2) => "destorcerías" ;--# notpresent
    VP (Cond Sg P3) => "destorcería" ;--# notpresent
    VP (Cond Pl P1) => "destorceríamos" ;--# notpresent
    VP (Cond Pl P2) => "destorceríais" ;--# notpresent
    VP (Cond Pl P3) => "destorcerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "destuerce" ;
    VP (Imp Sg P3) => "destuerza" ;
    VP (Imp Pl P1) => "destorzamos" ;
    VP (Imp Pl P2) => "destorced" ;
    VP (Imp Pl P3) => "destuerzan" ;
    VP (Pass Sg Masc) => "destorcido" ;
    VP (Pass Sg Fem) => "destorcida" ;
    VP (Pass Pl Masc) => "destorcidos" ;
    VP (Pass Pl Fem) => "destorcidas"
    }
  } ;

lin escocer_V = verboV 
 {s = table {
    VI Infn => "escocer" ;
    VI Ger => "escociendo" ;
    VI Part => "escocido" ;
    VP (Pres Ind Sg P1) => "escuezo" ;
    VP (Pres Ind Sg P2) => "escueces" ;
    VP (Pres Ind Sg P3) => "escuece" ;
    VP (Pres Ind Pl P1) => "escocemos" ;
    VP (Pres Ind Pl P2) => "escocéis" ;
    VP (Pres Ind Pl P3) => "escuecen" ;
    VP (Pres Subj Sg P1) => "escueza" ;
    VP (Pres Subj Sg P2) => "escuezas" ;
    VP (Pres Subj Sg P3) => "escueza" ;
    VP (Pres Subj Pl P1) => "escozamos" ;
    VP (Pres Subj Pl P2) => "escozáis" ;
    VP (Pres Subj Pl P3) => "escuezan" ;
    VP (Impf Ind Sg P1) => "escocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "escocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "escocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "escocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escociera" ; "escociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escocieras" ; "escocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escociera" ; "escociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escociéramos" ; "escociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escocierais" ; "escocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escocieran" ; "escociesen"} ;--# notpresent
    VP (Pret Sg P1) => "escocí" ;--# notpresent
    VP (Pret Sg P2) => "escociste" ;--# notpresent
    VP (Pret Sg P3) => "escoció" ;--# notpresent
    VP (Pret Pl P1) => "escocimos" ;--# notpresent
    VP (Pret Pl P2) => "escocisteis" ;--# notpresent
    VP (Pret Pl P3) => "escocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "escoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "escocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "escociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "escociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escocieren" ;--# notpresent
    VP (Cond Sg P1) => "escocería" ;--# notpresent
    VP (Cond Sg P2) => "escocerías" ;--# notpresent
    VP (Cond Sg P3) => "escocería" ;--# notpresent
    VP (Cond Pl P1) => "escoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "escoceríais" ;--# notpresent
    VP (Cond Pl P3) => "escocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escuece" ;
    VP (Imp Sg P3) => "escueza" ;
    VP (Imp Pl P1) => "escozamos" ;
    VP (Imp Pl P2) => "escoced" ;
    VP (Imp Pl P3) => "escuezan" ;
    VP (Pass Sg Masc) => "escocido" ;
    VP (Pass Sg Fem) => "escocida" ;
    VP (Pass Pl Masc) => "escocidos" ;
    VP (Pass Pl Fem) => "escocidas"
    }
  } ;

lin recocer_V = verboV 
 {s = table {
    VI Infn => "recocer" ;
    VI Ger => "recociendo" ;
    VI Part => "recocido" ;
    VP (Pres Ind Sg P1) => "recuezo" ;
    VP (Pres Ind Sg P2) => "recueces" ;
    VP (Pres Ind Sg P3) => "recuece" ;
    VP (Pres Ind Pl P1) => "recocemos" ;
    VP (Pres Ind Pl P2) => "recocéis" ;
    VP (Pres Ind Pl P3) => "recuecen" ;
    VP (Pres Subj Sg P1) => "recueza" ;
    VP (Pres Subj Sg P2) => "recuezas" ;
    VP (Pres Subj Sg P3) => "recueza" ;
    VP (Pres Subj Pl P1) => "recozamos" ;
    VP (Pres Subj Pl P2) => "recozáis" ;
    VP (Pres Subj Pl P3) => "recuezan" ;
    VP (Impf Ind Sg P1) => "recocía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recocías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recocía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recocíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recocíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recocían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recociera" ; "recociese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recocieras" ; "recocieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recociera" ; "recociese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recociéramos" ; "recociésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recocierais" ; "recocieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recocieran" ; "recociesen"} ;--# notpresent
    VP (Pret Sg P1) => "recocí" ;--# notpresent
    VP (Pret Sg P2) => "recociste" ;--# notpresent
    VP (Pret Sg P3) => "recoció" ;--# notpresent
    VP (Pret Pl P1) => "recocimos" ;--# notpresent
    VP (Pret Pl P2) => "recocisteis" ;--# notpresent
    VP (Pret Pl P3) => "recocieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recoceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recocerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recocerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recoceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recoceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recocerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recociere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recocieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recociere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recociéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recociereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recocieren" ;--# notpresent
    VP (Cond Sg P1) => "recocería" ;--# notpresent
    VP (Cond Sg P2) => "recocerías" ;--# notpresent
    VP (Cond Sg P3) => "recocería" ;--# notpresent
    VP (Cond Pl P1) => "recoceríamos" ;--# notpresent
    VP (Cond Pl P2) => "recoceríais" ;--# notpresent
    VP (Cond Pl P3) => "recocerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recuece" ;
    VP (Imp Sg P3) => "recueza" ;
    VP (Imp Pl P1) => "recozamos" ;
    VP (Imp Pl P2) => "recoced" ;
    VP (Imp Pl P3) => "recuezan" ;
    VP (Pass Sg Masc) => "recocido" ;
    VP (Pass Sg Fem) => "recocida" ;
    VP (Pass Pl Masc) => "recocidos" ;
    VP (Pass Pl Fem) => "recocidas"
    }
  } ;

lin retorcer_V = verboV 
 {s = table {
    VI Infn => "retorcer" ;
    VI Ger => "retorciendo" ;
    VI Part => "retorcido" ;
    VP (Pres Ind Sg P1) => "retuerzo" ;
    VP (Pres Ind Sg P2) => "retuerces" ;
    VP (Pres Ind Sg P3) => "retuerce" ;
    VP (Pres Ind Pl P1) => "retorcemos" ;
    VP (Pres Ind Pl P2) => "retorcéis" ;
    VP (Pres Ind Pl P3) => "retuercen" ;
    VP (Pres Subj Sg P1) => "retuerza" ;
    VP (Pres Subj Sg P2) => "retuerzas" ;
    VP (Pres Subj Sg P3) => "retuerza" ;
    VP (Pres Subj Pl P1) => "retorzamos" ;
    VP (Pres Subj Pl P2) => "retorzáis" ;
    VP (Pres Subj Pl P3) => "retuerzan" ;
    VP (Impf Ind Sg P1) => "retorcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retorcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retorcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retorcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retorcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retorcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retorciera" ; "retorciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retorcieras" ; "retorcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retorciera" ; "retorciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retorciéramos" ; "retorciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retorcierais" ; "retorcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retorcieran" ; "retorciesen"} ;--# notpresent
    VP (Pret Sg P1) => "retorcí" ;--# notpresent
    VP (Pret Sg P2) => "retorciste" ;--# notpresent
    VP (Pret Sg P3) => "retorció" ;--# notpresent
    VP (Pret Pl P1) => "retorcimos" ;--# notpresent
    VP (Pret Pl P2) => "retorcisteis" ;--# notpresent
    VP (Pret Pl P3) => "retorcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retorceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retorcerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retorcerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retorceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retorceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retorcerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retorciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retorcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retorciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retorciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retorciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retorcieren" ;--# notpresent
    VP (Cond Sg P1) => "retorcería" ;--# notpresent
    VP (Cond Sg P2) => "retorcerías" ;--# notpresent
    VP (Cond Sg P3) => "retorcería" ;--# notpresent
    VP (Cond Pl P1) => "retorceríamos" ;--# notpresent
    VP (Cond Pl P2) => "retorceríais" ;--# notpresent
    VP (Cond Pl P3) => "retorcerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retuerce" ;
    VP (Imp Sg P3) => "retuerza" ;
    VP (Imp Pl P1) => "retorzamos" ;
    VP (Imp Pl P2) => "retorced" ;
    VP (Imp Pl P3) => "retuerzan" ;
    VP (Pass Sg Masc) => "retorcido" ;
    VP (Pass Sg Fem) => "retorcida" ;
    VP (Pass Pl Masc) => "retorcidos" ;
    VP (Pass Pl Fem) => "retorcidas"
    }
  } ;

lin torcer_V = verboV 
 {s = table {
    VI Infn => "torcer" ;
    VI Ger => "torciendo" ;
    VI Part => "torcido" ;
    VP (Pres Ind Sg P1) => "tuerzo" ;
    VP (Pres Ind Sg P2) => "tuerces" ;
    VP (Pres Ind Sg P3) => "tuerce" ;
    VP (Pres Ind Pl P1) => "torcemos" ;
    VP (Pres Ind Pl P2) => "torcéis" ;
    VP (Pres Ind Pl P3) => "tuercen" ;
    VP (Pres Subj Sg P1) => "tuerza" ;
    VP (Pres Subj Sg P2) => "tuerzas" ;
    VP (Pres Subj Sg P3) => "tuerza" ;
    VP (Pres Subj Pl P1) => "torzamos" ;
    VP (Pres Subj Pl P2) => "torzáis" ;
    VP (Pres Subj Pl P3) => "tuerzan" ;
    VP (Impf Ind Sg P1) => "torcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "torcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "torcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "torcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "torcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "torcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"torciera" ; "torciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"torcieras" ; "torcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"torciera" ; "torciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"torciéramos" ; "torciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"torcierais" ; "torcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"torcieran" ; "torciesen"} ;--# notpresent
    VP (Pret Sg P1) => "torcí" ;--# notpresent
    VP (Pret Sg P2) => "torciste" ;--# notpresent
    VP (Pret Sg P3) => "torció" ;--# notpresent
    VP (Pret Pl P1) => "torcimos" ;--# notpresent
    VP (Pret Pl P2) => "torcisteis" ;--# notpresent
    VP (Pret Pl P3) => "torcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "torceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "torcerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "torcerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "torceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "torceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "torcerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "torciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "torcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "torciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "torciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "torciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "torcieren" ;--# notpresent
    VP (Cond Sg P1) => "torcería" ;--# notpresent
    VP (Cond Sg P2) => "torcerías" ;--# notpresent
    VP (Cond Sg P3) => "torcería" ;--# notpresent
    VP (Cond Pl P1) => "torceríamos" ;--# notpresent
    VP (Cond Pl P2) => "torceríais" ;--# notpresent
    VP (Cond Pl P3) => "torcerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tuerce" ;
    VP (Imp Sg P3) => "tuerza" ;
    VP (Imp Pl P1) => "torzamos" ;
    VP (Imp Pl P2) => "torced" ;
    VP (Imp Pl P3) => "tuerzan" ;
    VP (Pass Sg Masc) => "torcido" ;
    VP (Pass Sg Fem) => "torcida" ;
    VP (Pass Pl Masc) => "torcidos" ;
    VP (Pass Pl Fem) => "torcidas"
    }
  } ;

lin abnegar_V = verboV 
 {s = table {
    VI Infn => "abnegar" ;
    VI Ger => "abnegando" ;
    VI Part => "abnegado" ;
    VP (Pres Ind Sg P1) => "abniego" ;
    VP (Pres Ind Sg P2) => "abniegas" ;
    VP (Pres Ind Sg P3) => "abniega" ;
    VP (Pres Ind Pl P1) => "abnegamos" ;
    VP (Pres Ind Pl P2) => "abnegáis" ;
    VP (Pres Ind Pl P3) => "abniegan" ;
    VP (Pres Subj Sg P1) => "abniegue" ;
    VP (Pres Subj Sg P2) => "abniegues" ;
    VP (Pres Subj Sg P3) => "abniegue" ;
    VP (Pres Subj Pl P1) => "abneguemos" ;
    VP (Pres Subj Pl P2) => "abneguéis" ;
    VP (Pres Subj Pl P3) => "abnieguen" ;
    VP (Impf Ind Sg P1) => "abnegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "abnegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "abnegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "abnegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abnegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abnegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abnegara" ; "abnegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abnegaras" ; "abnegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abnegara" ; "abnegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abnegáramos" ; "abnegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abnegarais" ; "abnegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abnegaran" ; "abnegasen"} ;--# notpresent
    VP (Pret Sg P1) => "abnegué" ;--# notpresent
    VP (Pret Sg P2) => "abnegaste" ;--# notpresent
    VP (Pret Sg P3) => "abnegó" ;--# notpresent
    VP (Pret Pl P1) => "abnegamos" ;--# notpresent
    VP (Pret Pl P2) => "abnegasteis" ;--# notpresent
    VP (Pret Pl P3) => "abnegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abnegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abnegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abnegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "abnegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abnegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abnegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abnegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "abnegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "abnegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "abnegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abnegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abnegaren" ;--# notpresent
    VP (Cond Sg P1) => "abnegaría" ;--# notpresent
    VP (Cond Sg P2) => "abnegarías" ;--# notpresent
    VP (Cond Sg P3) => "abnegaría" ;--# notpresent
    VP (Cond Pl P1) => "abnegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "abnegaríais" ;--# notpresent
    VP (Cond Pl P3) => "abnegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abniega" ;
    VP (Imp Sg P3) => "abniegue" ;
    VP (Imp Pl P1) => "abneguemos" ;
    VP (Imp Pl P2) => "abnegad" ;
    VP (Imp Pl P3) => "abnieguen" ;
    VP (Pass Sg Masc) => "abnegado" ;
    VP (Pass Sg Fem) => "abnegada" ;
    VP (Pass Pl Masc) => "abnegados" ;
    VP (Pass Pl Fem) => "abnegadas"
    }
  } ;

lin almorzar_V = verboV 
 {s = table {
    VI Infn => "almorzar" ;
    VI Ger => "almorzando" ;
    VI Part => "almorzado" ;
    VP (Pres Ind Sg P1) => "almuerzo" ;
    VP (Pres Ind Sg P2) => "almuerzas" ;
    VP (Pres Ind Sg P3) => "almuerza" ;
    VP (Pres Ind Pl P1) => "almorzamos" ;
    VP (Pres Ind Pl P2) => "almorzáis" ;
    VP (Pres Ind Pl P3) => "almuerzan" ;
    VP (Pres Subj Sg P1) => "almuerce" ;
    VP (Pres Subj Sg P2) => "almuerces" ;
    VP (Pres Subj Sg P3) => "almuerce" ;
    VP (Pres Subj Pl P1) => "almorcemos" ;
    VP (Pres Subj Pl P2) => "almorcéis" ;
    VP (Pres Subj Pl P3) => "almuercen" ;
    VP (Impf Ind Sg P1) => "almorzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "almorzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "almorzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "almorzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "almorzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "almorzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"almorzara" ; "almorzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"almorzaras" ; "almorzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"almorzara" ; "almorzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"almorzáramos" ; "almorzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"almorzarais" ; "almorzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"almorzaran" ; "almorzasen"} ;--# notpresent
    VP (Pret Sg P1) => "almorcé" ;--# notpresent
    VP (Pret Sg P2) => "almorzaste" ;--# notpresent
    VP (Pret Sg P3) => "almorzó" ;--# notpresent
    VP (Pret Pl P1) => "almorzamos" ;--# notpresent
    VP (Pret Pl P2) => "almorzasteis" ;--# notpresent
    VP (Pret Pl P3) => "almorzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "almorzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "almorzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "almorzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "almorzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "almorzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "almorzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "almorzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "almorzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "almorzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "almorzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "almorzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "almorzaren" ;--# notpresent
    VP (Cond Sg P1) => "almorzaría" ;--# notpresent
    VP (Cond Sg P2) => "almorzarías" ;--# notpresent
    VP (Cond Sg P3) => "almorzaría" ;--# notpresent
    VP (Cond Pl P1) => "almorzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "almorzaríais" ;--# notpresent
    VP (Cond Pl P3) => "almorzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "almuerza" ;
    VP (Imp Sg P3) => "almuerce" ;
    VP (Imp Pl P1) => "almorcemos" ;
    VP (Imp Pl P2) => "almorzad" ;
    VP (Imp Pl P3) => "almuercen" ;
    VP (Pass Sg Masc) => "almorzado" ;
    VP (Pass Sg Fem) => "almorzada" ;
    VP (Pass Pl Masc) => "almorzados" ;
    VP (Pass Pl Fem) => "almorzadas"
    }
  } ;

lin alongar_V = verboV 
 {s = table {
    VI Infn => "alongar" ;
    VI Ger => "alongando" ;
    VI Part => "alongado" ;
    VP (Pres Ind Sg P1) => "aluengo" ;
    VP (Pres Ind Sg P2) => "aluengas" ;
    VP (Pres Ind Sg P3) => "aluenga" ;
    VP (Pres Ind Pl P1) => "alongamos" ;
    VP (Pres Ind Pl P2) => "alongáis" ;
    VP (Pres Ind Pl P3) => "aluengan" ;
    VP (Pres Subj Sg P1) => "aluengue" ;
    VP (Pres Subj Sg P2) => "aluengues" ;
    VP (Pres Subj Sg P3) => "aluengue" ;
    VP (Pres Subj Pl P1) => "alonguemos" ;
    VP (Pres Subj Pl P2) => "alonguéis" ;
    VP (Pres Subj Pl P3) => "aluenguen" ;
    VP (Impf Ind Sg P1) => "alongaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "alongabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "alongaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "alongábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "alongabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "alongaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"alongara" ; "alongase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"alongaras" ; "alongases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"alongara" ; "alongase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"alongáramos" ; "alongásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"alongarais" ; "alongaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"alongaran" ; "alongasen"} ;--# notpresent
    VP (Pret Sg P1) => "alongué" ;--# notpresent
    VP (Pret Sg P2) => "alongaste" ;--# notpresent
    VP (Pret Sg P3) => "alongó" ;--# notpresent
    VP (Pret Pl P1) => "alongamos" ;--# notpresent
    VP (Pret Pl P2) => "alongasteis" ;--# notpresent
    VP (Pret Pl P3) => "alongaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "alongaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "alongarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "alongará" ;--# notpresent
    VP (Fut Ind Pl P1) => "alongaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "alongaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "alongarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "alongare" ;--# notpresent
    VP (Fut Subj Sg P2) => "alongares" ;--# notpresent
    VP (Fut Subj Sg P3) => "alongare" ;--# notpresent
    VP (Fut Subj Pl P1) => "alongáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "alongareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "alongaren" ;--# notpresent
    VP (Cond Sg P1) => "alongaría" ;--# notpresent
    VP (Cond Sg P2) => "alongarías" ;--# notpresent
    VP (Cond Sg P3) => "alongaría" ;--# notpresent
    VP (Cond Pl P1) => "alongaríamos" ;--# notpresent
    VP (Cond Pl P2) => "alongaríais" ;--# notpresent
    VP (Cond Pl P3) => "alongarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aluenga" ;
    VP (Imp Sg P3) => "aluengue" ;
    VP (Imp Pl P1) => "alonguemos" ;
    VP (Imp Pl P2) => "alongad" ;
    VP (Imp Pl P3) => "aluenguen" ;
    VP (Pass Sg Masc) => "alongado" ;
    VP (Pass Sg Fem) => "alongada" ;
    VP (Pass Pl Masc) => "alongados" ;
    VP (Pass Pl Fem) => "alongadas"
    }
  } ;

lin cegar_V = verboV 
 {s = table {
    VI Infn => "cegar" ;
    VI Ger => "cegando" ;
    VI Part => "cegado" ;
    VP (Pres Ind Sg P1) => "ciego" ;
    VP (Pres Ind Sg P2) => "ciegas" ;
    VP (Pres Ind Sg P3) => "ciega" ;
    VP (Pres Ind Pl P1) => "cegamos" ;
    VP (Pres Ind Pl P2) => "cegáis" ;
    VP (Pres Ind Pl P3) => "ciegan" ;
    VP (Pres Subj Sg P1) => "ciegue" ;
    VP (Pres Subj Sg P2) => "ciegues" ;
    VP (Pres Subj Sg P3) => "ciegue" ;
    VP (Pres Subj Pl P1) => "ceguemos" ;
    VP (Pres Subj Pl P2) => "ceguéis" ;
    VP (Pres Subj Pl P3) => "cieguen" ;
    VP (Impf Ind Sg P1) => "cegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "cegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "cegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "cegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cegara" ; "cegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cegaras" ; "cegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cegara" ; "cegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cegáramos" ; "cegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cegarais" ; "cegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cegaran" ; "cegasen"} ;--# notpresent
    VP (Pret Sg P1) => "cegué" ;--# notpresent
    VP (Pret Sg P2) => "cegaste" ;--# notpresent
    VP (Pret Sg P3) => "cegó" ;--# notpresent
    VP (Pret Pl P1) => "cegamos" ;--# notpresent
    VP (Pret Pl P2) => "cegasteis" ;--# notpresent
    VP (Pret Pl P3) => "cegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "cegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "cegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "cegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "cegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cegaren" ;--# notpresent
    VP (Cond Sg P1) => "cegaría" ;--# notpresent
    VP (Cond Sg P2) => "cegarías" ;--# notpresent
    VP (Cond Sg P3) => "cegaría" ;--# notpresent
    VP (Cond Pl P1) => "cegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "cegaríais" ;--# notpresent
    VP (Cond Pl P3) => "cegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ciega" ;
    VP (Imp Sg P3) => "ciegue" ;
    VP (Imp Pl P1) => "ceguemos" ;
    VP (Imp Pl P2) => "cegad" ;
    VP (Imp Pl P3) => "cieguen" ;
    VP (Pass Sg Masc) => "cegado" ;
    VP (Pass Sg Fem) => "cegada" ;
    VP (Pass Pl Masc) => "cegados" ;
    VP (Pass Pl Fem) => "cegadas"
    }
  } ;

lin clocar_V = verboV 
 {s = table {
    VI Infn => "clocar" ;
    VI Ger => "clocando" ;
    VI Part => "clocado" ;
    VP (Pres Ind Sg P1) => "clueco" ;
    VP (Pres Ind Sg P2) => "cluecas" ;
    VP (Pres Ind Sg P3) => "clueca" ;
    VP (Pres Ind Pl P1) => "clocamos" ;
    VP (Pres Ind Pl P2) => "clocáis" ;
    VP (Pres Ind Pl P3) => "cluecan" ;
    VP (Pres Subj Sg P1) => "clueque" ;
    VP (Pres Subj Sg P2) => "clueques" ;
    VP (Pres Subj Sg P3) => "clueque" ;
    VP (Pres Subj Pl P1) => "cloquemos" ;
    VP (Pres Subj Pl P2) => "cloquéis" ;
    VP (Pres Subj Pl P3) => "cluequen" ;
    VP (Impf Ind Sg P1) => "clocaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "clocabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "clocaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "clocábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "clocabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "clocaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"clocara" ; "clocase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"clocaras" ; "clocases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"clocara" ; "clocase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"clocáramos" ; "clocásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"clocarais" ; "clocaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"clocaran" ; "clocasen"} ;--# notpresent
    VP (Pret Sg P1) => "cloqué" ;--# notpresent
    VP (Pret Sg P2) => "clocaste" ;--# notpresent
    VP (Pret Sg P3) => "clocó" ;--# notpresent
    VP (Pret Pl P1) => "clocamos" ;--# notpresent
    VP (Pret Pl P2) => "clocasteis" ;--# notpresent
    VP (Pret Pl P3) => "clocaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "clocaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "clocarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "clocará" ;--# notpresent
    VP (Fut Ind Pl P1) => "clocaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "clocaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "clocarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "clocare" ;--# notpresent
    VP (Fut Subj Sg P2) => "clocares" ;--# notpresent
    VP (Fut Subj Sg P3) => "clocare" ;--# notpresent
    VP (Fut Subj Pl P1) => "clocáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "clocareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "clocaren" ;--# notpresent
    VP (Cond Sg P1) => "clocaría" ;--# notpresent
    VP (Cond Sg P2) => "clocarías" ;--# notpresent
    VP (Cond Sg P3) => "clocaría" ;--# notpresent
    VP (Cond Pl P1) => "clocaríamos" ;--# notpresent
    VP (Cond Pl P2) => "clocaríais" ;--# notpresent
    VP (Cond Pl P3) => "clocarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "clueca" ;
    VP (Imp Sg P3) => "clueque" ;
    VP (Imp Pl P1) => "cloquemos" ;
    VP (Imp Pl P2) => "clocad" ;
    VP (Imp Pl P3) => "cluequen" ;
    VP (Pass Sg Masc) => "clocado" ;
    VP (Pass Sg Fem) => "clocada" ;
    VP (Pass Pl Masc) => "clocados" ;
    VP (Pass Pl Fem) => "clocadas"
    }
  } ;

lin colgar_V = verboV 
 {s = table {
    VI Infn => "colgar" ;
    VI Ger => "colgando" ;
    VI Part => "colgado" ;
    VP (Pres Ind Sg P1) => "cuelgo" ;
    VP (Pres Ind Sg P2) => "cuelgas" ;
    VP (Pres Ind Sg P3) => "cuelga" ;
    VP (Pres Ind Pl P1) => "colgamos" ;
    VP (Pres Ind Pl P2) => "colgáis" ;
    VP (Pres Ind Pl P3) => "cuelgan" ;
    VP (Pres Subj Sg P1) => "cuelgue" ;
    VP (Pres Subj Sg P2) => "cuelgues" ;
    VP (Pres Subj Sg P3) => "cuelgue" ;
    VP (Pres Subj Pl P1) => "colguemos" ;
    VP (Pres Subj Pl P2) => "colguéis" ;
    VP (Pres Subj Pl P3) => "cuelguen" ;
    VP (Impf Ind Sg P1) => "colgaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "colgabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "colgaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "colgábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "colgabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "colgaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"colgara" ; "colgase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"colgaras" ; "colgases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"colgara" ; "colgase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"colgáramos" ; "colgásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"colgarais" ; "colgaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"colgaran" ; "colgasen"} ;--# notpresent
    VP (Pret Sg P1) => "colgué" ;--# notpresent
    VP (Pret Sg P2) => "colgaste" ;--# notpresent
    VP (Pret Sg P3) => "colgó" ;--# notpresent
    VP (Pret Pl P1) => "colgamos" ;--# notpresent
    VP (Pret Pl P2) => "colgasteis" ;--# notpresent
    VP (Pret Pl P3) => "colgaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "colgaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "colgarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "colgará" ;--# notpresent
    VP (Fut Ind Pl P1) => "colgaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "colgaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "colgarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "colgare" ;--# notpresent
    VP (Fut Subj Sg P2) => "colgares" ;--# notpresent
    VP (Fut Subj Sg P3) => "colgare" ;--# notpresent
    VP (Fut Subj Pl P1) => "colgáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "colgareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "colgaren" ;--# notpresent
    VP (Cond Sg P1) => "colgaría" ;--# notpresent
    VP (Cond Sg P2) => "colgarías" ;--# notpresent
    VP (Cond Sg P3) => "colgaría" ;--# notpresent
    VP (Cond Pl P1) => "colgaríamos" ;--# notpresent
    VP (Cond Pl P2) => "colgaríais" ;--# notpresent
    VP (Cond Pl P3) => "colgarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cuelga" ;
    VP (Imp Sg P3) => "cuelgue" ;
    VP (Imp Pl P1) => "colguemos" ;
    VP (Imp Pl P2) => "colgad" ;
    VP (Imp Pl P3) => "cuelguen" ;
    VP (Pass Sg Masc) => "colgado" ;
    VP (Pass Sg Fem) => "colgada" ;
    VP (Pass Pl Masc) => "colgados" ;
    VP (Pass Pl Fem) => "colgadas"
    }
  } ;

lin comenzar_V = verboV 
 {s = table {
    VI Infn => "comenzar" ;
    VI Ger => "comenzando" ;
    VI Part => "comenzado" ;
    VP (Pres Ind Sg P1) => "comienzo" ;
    VP (Pres Ind Sg P2) => "comienzas" ;
    VP (Pres Ind Sg P3) => "comienza" ;
    VP (Pres Ind Pl P1) => "comenzamos" ;
    VP (Pres Ind Pl P2) => "comenzáis" ;
    VP (Pres Ind Pl P3) => "comienzan" ;
    VP (Pres Subj Sg P1) => "comience" ;
    VP (Pres Subj Sg P2) => "comiences" ;
    VP (Pres Subj Sg P3) => "comience" ;
    VP (Pres Subj Pl P1) => "comencemos" ;
    VP (Pres Subj Pl P2) => "comencéis" ;
    VP (Pres Subj Pl P3) => "comiencen" ;
    VP (Impf Ind Sg P1) => "comenzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "comenzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "comenzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "comenzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "comenzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "comenzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"comenzara" ; "comenzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"comenzaras" ; "comenzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"comenzara" ; "comenzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"comenzáramos" ; "comenzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"comenzarais" ; "comenzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"comenzaran" ; "comenzasen"} ;--# notpresent
    VP (Pret Sg P1) => "comencé" ;--# notpresent
    VP (Pret Sg P2) => "comenzaste" ;--# notpresent
    VP (Pret Sg P3) => "comenzó" ;--# notpresent
    VP (Pret Pl P1) => "comenzamos" ;--# notpresent
    VP (Pret Pl P2) => "comenzasteis" ;--# notpresent
    VP (Pret Pl P3) => "comenzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "comenzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "comenzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "comenzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "comenzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "comenzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "comenzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "comenzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "comenzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "comenzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "comenzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "comenzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "comenzaren" ;--# notpresent
    VP (Cond Sg P1) => "comenzaría" ;--# notpresent
    VP (Cond Sg P2) => "comenzarías" ;--# notpresent
    VP (Cond Sg P3) => "comenzaría" ;--# notpresent
    VP (Cond Pl P1) => "comenzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "comenzaríais" ;--# notpresent
    VP (Cond Pl P3) => "comenzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "comienza" ;
    VP (Imp Sg P3) => "comience" ;
    VP (Imp Pl P1) => "comencemos" ;
    VP (Imp Pl P2) => "comenzad" ;
    VP (Imp Pl P3) => "comiencen" ;
    VP (Pass Sg Masc) => "comenzado" ;
    VP (Pass Sg Fem) => "comenzada" ;
    VP (Pass Pl Masc) => "comenzados" ;
    VP (Pass Pl Fem) => "comenzadas"
    }
  } ;

lin denegar_V = verboV 
 {s = table {
    VI Infn => "denegar" ;
    VI Ger => "denegando" ;
    VI Part => "denegado" ;
    VP (Pres Ind Sg P1) => "deniego" ;
    VP (Pres Ind Sg P2) => "deniegas" ;
    VP (Pres Ind Sg P3) => "deniega" ;
    VP (Pres Ind Pl P1) => "denegamos" ;
    VP (Pres Ind Pl P2) => "denegáis" ;
    VP (Pres Ind Pl P3) => "deniegan" ;
    VP (Pres Subj Sg P1) => "deniegue" ;
    VP (Pres Subj Sg P2) => "deniegues" ;
    VP (Pres Subj Sg P3) => "deniegue" ;
    VP (Pres Subj Pl P1) => "deneguemos" ;
    VP (Pres Subj Pl P2) => "deneguéis" ;
    VP (Pres Subj Pl P3) => "denieguen" ;
    VP (Impf Ind Sg P1) => "denegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "denegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "denegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "denegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "denegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "denegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"denegara" ; "denegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"denegaras" ; "denegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"denegara" ; "denegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"denegáramos" ; "denegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"denegarais" ; "denegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"denegaran" ; "denegasen"} ;--# notpresent
    VP (Pret Sg P1) => "denegué" ;--# notpresent
    VP (Pret Sg P2) => "denegaste" ;--# notpresent
    VP (Pret Sg P3) => "denegó" ;--# notpresent
    VP (Pret Pl P1) => "denegamos" ;--# notpresent
    VP (Pret Pl P2) => "denegasteis" ;--# notpresent
    VP (Pret Pl P3) => "denegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "denegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "denegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "denegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "denegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "denegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "denegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "denegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "denegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "denegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "denegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "denegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "denegaren" ;--# notpresent
    VP (Cond Sg P1) => "denegaría" ;--# notpresent
    VP (Cond Sg P2) => "denegarías" ;--# notpresent
    VP (Cond Sg P3) => "denegaría" ;--# notpresent
    VP (Cond Pl P1) => "denegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "denegaríais" ;--# notpresent
    VP (Cond Pl P3) => "denegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deniega" ;
    VP (Imp Sg P3) => "deniegue" ;
    VP (Imp Pl P1) => "deneguemos" ;
    VP (Imp Pl P2) => "denegad" ;
    VP (Imp Pl P3) => "denieguen" ;
    VP (Pass Sg Masc) => "denegado" ;
    VP (Pass Sg Fem) => "denegada" ;
    VP (Pass Pl Masc) => "denegados" ;
    VP (Pass Pl Fem) => "denegadas"
    }
  } ;

lin derrenegar_V = verboV 
 {s = table {
    VI Infn => "derrenegar" ;
    VI Ger => "derrenegando" ;
    VI Part => "derrenegado" ;
    VP (Pres Ind Sg P1) => "derreniego" ;
    VP (Pres Ind Sg P2) => "derreniegas" ;
    VP (Pres Ind Sg P3) => "derreniega" ;
    VP (Pres Ind Pl P1) => "derrenegamos" ;
    VP (Pres Ind Pl P2) => "derrenegáis" ;
    VP (Pres Ind Pl P3) => "derreniegan" ;
    VP (Pres Subj Sg P1) => "derreniegue" ;
    VP (Pres Subj Sg P2) => "derreniegues" ;
    VP (Pres Subj Sg P3) => "derreniegue" ;
    VP (Pres Subj Pl P1) => "derreneguemos" ;
    VP (Pres Subj Pl P2) => "derreneguéis" ;
    VP (Pres Subj Pl P3) => "derrenieguen" ;
    VP (Impf Ind Sg P1) => "derrenegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "derrenegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "derrenegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "derrenegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "derrenegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "derrenegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"derrenegara" ; "derrenegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"derrenegaras" ; "derrenegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"derrenegara" ; "derrenegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"derrenegáramos" ; "derrenegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"derrenegarais" ; "derrenegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"derrenegaran" ; "derrenegasen"} ;--# notpresent
    VP (Pret Sg P1) => "derrenegué" ;--# notpresent
    VP (Pret Sg P2) => "derrenegaste" ;--# notpresent
    VP (Pret Sg P3) => "derrenegó" ;--# notpresent
    VP (Pret Pl P1) => "derrenegamos" ;--# notpresent
    VP (Pret Pl P2) => "derrenegasteis" ;--# notpresent
    VP (Pret Pl P3) => "derrenegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "derrenegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "derrenegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "derrenegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "derrenegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "derrenegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "derrenegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "derrenegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "derrenegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "derrenegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "derrenegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "derrenegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "derrenegaren" ;--# notpresent
    VP (Cond Sg P1) => "derrenegaría" ;--# notpresent
    VP (Cond Sg P2) => "derrenegarías" ;--# notpresent
    VP (Cond Sg P3) => "derrenegaría" ;--# notpresent
    VP (Cond Pl P1) => "derrenegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "derrenegaríais" ;--# notpresent
    VP (Cond Pl P3) => "derrenegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "derreniega" ;
    VP (Imp Sg P3) => "derreniegue" ;
    VP (Imp Pl P1) => "derreneguemos" ;
    VP (Imp Pl P2) => "derrenegad" ;
    VP (Imp Pl P3) => "derrenieguen" ;
    VP (Pass Sg Masc) => "derrenegado" ;
    VP (Pass Sg Fem) => "derrenegada" ;
    VP (Pass Pl Masc) => "derrenegados" ;
    VP (Pass Pl Fem) => "derrenegadas"
    }
  } ;

lin derrengar_V = verboV 
 {s = table {
    VI Infn => "derrengar" ;
    VI Ger => "derrengando" ;
    VI Part => "derrengado" ;
    VP (Pres Ind Sg P1) => "derriengo" ;
    VP (Pres Ind Sg P2) => "derriengas" ;
    VP (Pres Ind Sg P3) => "derrienga" ;
    VP (Pres Ind Pl P1) => "derrengamos" ;
    VP (Pres Ind Pl P2) => "derrengáis" ;
    VP (Pres Ind Pl P3) => "derriengan" ;
    VP (Pres Subj Sg P1) => "derriengue" ;
    VP (Pres Subj Sg P2) => "derriengues" ;
    VP (Pres Subj Sg P3) => "derriengue" ;
    VP (Pres Subj Pl P1) => "derrenguemos" ;
    VP (Pres Subj Pl P2) => "derrenguéis" ;
    VP (Pres Subj Pl P3) => "derrienguen" ;
    VP (Impf Ind Sg P1) => "derrengaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "derrengabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "derrengaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "derrengábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "derrengabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "derrengaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"derrengara" ; "derrengase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"derrengaras" ; "derrengases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"derrengara" ; "derrengase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"derrengáramos" ; "derrengásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"derrengarais" ; "derrengaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"derrengaran" ; "derrengasen"} ;--# notpresent
    VP (Pret Sg P1) => "derrengué" ;--# notpresent
    VP (Pret Sg P2) => "derrengaste" ;--# notpresent
    VP (Pret Sg P3) => "derrengó" ;--# notpresent
    VP (Pret Pl P1) => "derrengamos" ;--# notpresent
    VP (Pret Pl P2) => "derrengasteis" ;--# notpresent
    VP (Pret Pl P3) => "derrengaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "derrengaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "derrengarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "derrengará" ;--# notpresent
    VP (Fut Ind Pl P1) => "derrengaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "derrengaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "derrengarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "derrengare" ;--# notpresent
    VP (Fut Subj Sg P2) => "derrengares" ;--# notpresent
    VP (Fut Subj Sg P3) => "derrengare" ;--# notpresent
    VP (Fut Subj Pl P1) => "derrengáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "derrengareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "derrengaren" ;--# notpresent
    VP (Cond Sg P1) => "derrengaría" ;--# notpresent
    VP (Cond Sg P2) => "derrengarías" ;--# notpresent
    VP (Cond Sg P3) => "derrengaría" ;--# notpresent
    VP (Cond Pl P1) => "derrengaríamos" ;--# notpresent
    VP (Cond Pl P2) => "derrengaríais" ;--# notpresent
    VP (Cond Pl P3) => "derrengarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "derrienga" ;
    VP (Imp Sg P3) => "derriengue" ;
    VP (Imp Pl P1) => "derrenguemos" ;
    VP (Imp Pl P2) => "derrengad" ;
    VP (Imp Pl P3) => "derrienguen" ;
    VP (Pass Sg Masc) => "derrengado" ;
    VP (Pass Sg Fem) => "derrengada" ;
    VP (Pass Pl Masc) => "derrengados" ;
    VP (Pass Pl Fem) => "derrengadas"
    }
  } ;

lin desasosegar_V = verboV 
 {s = table {
    VI Infn => "desasosegar" ;
    VI Ger => "desasosegando" ;
    VI Part => "desasosegado" ;
    VP (Pres Ind Sg P1) => "desasosiego" ;
    VP (Pres Ind Sg P2) => "desasosiegas" ;
    VP (Pres Ind Sg P3) => "desasosiega" ;
    VP (Pres Ind Pl P1) => "desasosegamos" ;
    VP (Pres Ind Pl P2) => "desasosegáis" ;
    VP (Pres Ind Pl P3) => "desasosiegan" ;
    VP (Pres Subj Sg P1) => "desasosiegue" ;
    VP (Pres Subj Sg P2) => "desasosiegues" ;
    VP (Pres Subj Sg P3) => "desasosiegue" ;
    VP (Pres Subj Pl P1) => "desasoseguemos" ;
    VP (Pres Subj Pl P2) => "desasoseguéis" ;
    VP (Pres Subj Pl P3) => "desasosieguen" ;
    VP (Impf Ind Sg P1) => "desasosegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desasosegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desasosegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desasosegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desasosegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desasosegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desasosegara" ; "desasosegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desasosegaras" ; "desasosegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desasosegara" ; "desasosegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desasosegáramos" ; "desasosegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desasosegarais" ; "desasosegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desasosegaran" ; "desasosegasen"} ;--# notpresent
    VP (Pret Sg P1) => "desasosegué" ;--# notpresent
    VP (Pret Sg P2) => "desasosegaste" ;--# notpresent
    VP (Pret Sg P3) => "desasosegó" ;--# notpresent
    VP (Pret Pl P1) => "desasosegamos" ;--# notpresent
    VP (Pret Pl P2) => "desasosegasteis" ;--# notpresent
    VP (Pret Pl P3) => "desasosegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desasosegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desasosegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desasosegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desasosegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desasosegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desasosegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desasosegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desasosegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desasosegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desasosegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desasosegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desasosegaren" ;--# notpresent
    VP (Cond Sg P1) => "desasosegaría" ;--# notpresent
    VP (Cond Sg P2) => "desasosegarías" ;--# notpresent
    VP (Cond Sg P3) => "desasosegaría" ;--# notpresent
    VP (Cond Pl P1) => "desasosegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desasosegaríais" ;--# notpresent
    VP (Cond Pl P3) => "desasosegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desasosiega" ;
    VP (Imp Sg P3) => "desasosiegue" ;
    VP (Imp Pl P1) => "desasoseguemos" ;
    VP (Imp Pl P2) => "desasosegad" ;
    VP (Imp Pl P3) => "desasosieguen" ;
    VP (Pass Sg Masc) => "desasosegado" ;
    VP (Pass Sg Fem) => "desasosegada" ;
    VP (Pass Pl Masc) => "desasosegados" ;
    VP (Pass Pl Fem) => "desasosegadas"
    }
  } ;

lin descolgar_V = verboV 
 {s = table {
    VI Infn => "descolgar" ;
    VI Ger => "descolgando" ;
    VI Part => "descolgado" ;
    VP (Pres Ind Sg P1) => "descuelgo" ;
    VP (Pres Ind Sg P2) => "descuelgas" ;
    VP (Pres Ind Sg P3) => "descuelga" ;
    VP (Pres Ind Pl P1) => "descolgamos" ;
    VP (Pres Ind Pl P2) => "descolgáis" ;
    VP (Pres Ind Pl P3) => "descuelgan" ;
    VP (Pres Subj Sg P1) => "descuelgue" ;
    VP (Pres Subj Sg P2) => "descuelgues" ;
    VP (Pres Subj Sg P3) => "descuelgue" ;
    VP (Pres Subj Pl P1) => "descolguemos" ;
    VP (Pres Subj Pl P2) => "descolguéis" ;
    VP (Pres Subj Pl P3) => "descuelguen" ;
    VP (Impf Ind Sg P1) => "descolgaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descolgabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descolgaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descolgábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descolgabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descolgaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descolgara" ; "descolgase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descolgaras" ; "descolgases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descolgara" ; "descolgase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descolgáramos" ; "descolgásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descolgarais" ; "descolgaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descolgaran" ; "descolgasen"} ;--# notpresent
    VP (Pret Sg P1) => "descolgué" ;--# notpresent
    VP (Pret Sg P2) => "descolgaste" ;--# notpresent
    VP (Pret Sg P3) => "descolgó" ;--# notpresent
    VP (Pret Pl P1) => "descolgamos" ;--# notpresent
    VP (Pret Pl P2) => "descolgasteis" ;--# notpresent
    VP (Pret Pl P3) => "descolgaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descolgaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descolgarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descolgará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descolgaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descolgaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descolgarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descolgare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descolgares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descolgare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descolgáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descolgareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descolgaren" ;--# notpresent
    VP (Cond Sg P1) => "descolgaría" ;--# notpresent
    VP (Cond Sg P2) => "descolgarías" ;--# notpresent
    VP (Cond Sg P3) => "descolgaría" ;--# notpresent
    VP (Cond Pl P1) => "descolgaríamos" ;--# notpresent
    VP (Cond Pl P2) => "descolgaríais" ;--# notpresent
    VP (Cond Pl P3) => "descolgarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descuelga" ;
    VP (Imp Sg P3) => "descuelgue" ;
    VP (Imp Pl P1) => "descolguemos" ;
    VP (Imp Pl P2) => "descolgad" ;
    VP (Imp Pl P3) => "descuelguen" ;
    VP (Pass Sg Masc) => "descolgado" ;
    VP (Pass Sg Fem) => "descolgada" ;
    VP (Pass Pl Masc) => "descolgados" ;
    VP (Pass Pl Fem) => "descolgadas"
    }
  } ;

lin desosegar_V = verboV 
 {s = table {
    VI Infn => "desosegar" ;
    VI Ger => "desosegando" ;
    VI Part => "desosegado" ;
    VP (Pres Ind Sg P1) => "desosiego" ;
    VP (Pres Ind Sg P2) => "desosiegas" ;
    VP (Pres Ind Sg P3) => "desosiega" ;
    VP (Pres Ind Pl P1) => "desosegamos" ;
    VP (Pres Ind Pl P2) => "desosegáis" ;
    VP (Pres Ind Pl P3) => "desosiegan" ;
    VP (Pres Subj Sg P1) => "desosiegue" ;
    VP (Pres Subj Sg P2) => "desosiegues" ;
    VP (Pres Subj Sg P3) => "desosiegue" ;
    VP (Pres Subj Pl P1) => "desoseguemos" ;
    VP (Pres Subj Pl P2) => "desoseguéis" ;
    VP (Pres Subj Pl P3) => "desosieguen" ;
    VP (Impf Ind Sg P1) => "desosegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desosegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desosegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desosegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desosegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desosegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desosegara" ; "desosegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desosegaras" ; "desosegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desosegara" ; "desosegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desosegáramos" ; "desosegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desosegarais" ; "desosegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desosegaran" ; "desosegasen"} ;--# notpresent
    VP (Pret Sg P1) => "desosegué" ;--# notpresent
    VP (Pret Sg P2) => "desosegaste" ;--# notpresent
    VP (Pret Sg P3) => "desosegó" ;--# notpresent
    VP (Pret Pl P1) => "desosegamos" ;--# notpresent
    VP (Pret Pl P2) => "desosegasteis" ;--# notpresent
    VP (Pret Pl P3) => "desosegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desosegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desosegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desosegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desosegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desosegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desosegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desosegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desosegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desosegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desosegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desosegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desosegaren" ;--# notpresent
    VP (Cond Sg P1) => "desosegaría" ;--# notpresent
    VP (Cond Sg P2) => "desosegarías" ;--# notpresent
    VP (Cond Sg P3) => "desosegaría" ;--# notpresent
    VP (Cond Pl P1) => "desosegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desosegaríais" ;--# notpresent
    VP (Cond Pl P3) => "desosegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desosiega" ;
    VP (Imp Sg P3) => "desosiegue" ;
    VP (Imp Pl P1) => "desoseguemos" ;
    VP (Imp Pl P2) => "desosegad" ;
    VP (Imp Pl P3) => "desosieguen" ;
    VP (Pass Sg Masc) => "desosegado" ;
    VP (Pass Sg Fem) => "desosegada" ;
    VP (Pass Pl Masc) => "desosegados" ;
    VP (Pass Pl Fem) => "desosegadas"
    }
  } ;

lin despezar_V = verboV 
 {s = table {
    VI Infn => "despezar" ;
    VI Ger => "despezando" ;
    VI Part => "despezado" ;
    VP (Pres Ind Sg P1) => "despiezo" ;
    VP (Pres Ind Sg P2) => "despiezas" ;
    VP (Pres Ind Sg P3) => "despieza" ;
    VP (Pres Ind Pl P1) => "despezamos" ;
    VP (Pres Ind Pl P2) => "despezáis" ;
    VP (Pres Ind Pl P3) => "despiezan" ;
    VP (Pres Subj Sg P1) => "despiece" ;
    VP (Pres Subj Sg P2) => "despieces" ;
    VP (Pres Subj Sg P3) => "despiece" ;
    VP (Pres Subj Pl P1) => "despecemos" ;
    VP (Pres Subj Pl P2) => "despecéis" ;
    VP (Pres Subj Pl P3) => "despiecen" ;
    VP (Impf Ind Sg P1) => "despezaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "despezabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "despezaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "despezábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "despezabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "despezaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despezara" ; "despezase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"despezaras" ; "despezases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despezara" ; "despezase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despezáramos" ; "despezásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"despezarais" ; "despezaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"despezaran" ; "despezasen"} ;--# notpresent
    VP (Pret Sg P1) => "despecé" ;--# notpresent
    VP (Pret Sg P2) => "despezaste" ;--# notpresent
    VP (Pret Sg P3) => "despezó" ;--# notpresent
    VP (Pret Pl P1) => "despezamos" ;--# notpresent
    VP (Pret Pl P2) => "despezasteis" ;--# notpresent
    VP (Pret Pl P3) => "despezaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despezaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "despezarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "despezará" ;--# notpresent
    VP (Fut Ind Pl P1) => "despezaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despezaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "despezarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despezare" ;--# notpresent
    VP (Fut Subj Sg P2) => "despezares" ;--# notpresent
    VP (Fut Subj Sg P3) => "despezare" ;--# notpresent
    VP (Fut Subj Pl P1) => "despezáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despezareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "despezaren" ;--# notpresent
    VP (Cond Sg P1) => "despezaría" ;--# notpresent
    VP (Cond Sg P2) => "despezarías" ;--# notpresent
    VP (Cond Sg P3) => "despezaría" ;--# notpresent
    VP (Cond Pl P1) => "despezaríamos" ;--# notpresent
    VP (Cond Pl P2) => "despezaríais" ;--# notpresent
    VP (Cond Pl P3) => "despezarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despieza" ;
    VP (Imp Sg P3) => "despiece" ;
    VP (Imp Pl P1) => "despecemos" ;
    VP (Imp Pl P2) => "despezad" ;
    VP (Imp Pl P3) => "despiecen" ;
    VP (Pass Sg Masc) => "despezado" ;
    VP (Pass Sg Fem) => "despezada" ;
    VP (Pass Pl Masc) => "despezados" ;
    VP (Pass Pl Fem) => "despezadas"
    }
  } ;

lin desplegar_V = verboV 
 {s = table {
    VI Infn => "desplegar" ;
    VI Ger => "desplegando" ;
    VI Part => "desplegado" ;
    VP (Pres Ind Sg P1) => "despliego" ;
    VP (Pres Ind Sg P2) => "despliegas" ;
    VP (Pres Ind Sg P3) => "despliega" ;
    VP (Pres Ind Pl P1) => "desplegamos" ;
    VP (Pres Ind Pl P2) => "desplegáis" ;
    VP (Pres Ind Pl P3) => "despliegan" ;
    VP (Pres Subj Sg P1) => "despliegue" ;
    VP (Pres Subj Sg P2) => "despliegues" ;
    VP (Pres Subj Sg P3) => "despliegue" ;
    VP (Pres Subj Pl P1) => "despleguemos" ;
    VP (Pres Subj Pl P2) => "despleguéis" ;
    VP (Pres Subj Pl P3) => "desplieguen" ;
    VP (Impf Ind Sg P1) => "desplegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desplegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desplegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desplegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desplegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desplegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desplegara" ; "desplegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desplegaras" ; "desplegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desplegara" ; "desplegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desplegáramos" ; "desplegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desplegarais" ; "desplegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desplegaran" ; "desplegasen"} ;--# notpresent
    VP (Pret Sg P1) => "desplegué" ;--# notpresent
    VP (Pret Sg P2) => "desplegaste" ;--# notpresent
    VP (Pret Sg P3) => "desplegó" ;--# notpresent
    VP (Pret Pl P1) => "desplegamos" ;--# notpresent
    VP (Pret Pl P2) => "desplegasteis" ;--# notpresent
    VP (Pret Pl P3) => "desplegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desplegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desplegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desplegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desplegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desplegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desplegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desplegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desplegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desplegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desplegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desplegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desplegaren" ;--# notpresent
    VP (Cond Sg P1) => "desplegaría" ;--# notpresent
    VP (Cond Sg P2) => "desplegarías" ;--# notpresent
    VP (Cond Sg P3) => "desplegaría" ;--# notpresent
    VP (Cond Pl P1) => "desplegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desplegaríais" ;--# notpresent
    VP (Cond Pl P3) => "desplegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despliega" ;
    VP (Imp Sg P3) => "despliegue" ;
    VP (Imp Pl P1) => "despleguemos" ;
    VP (Imp Pl P2) => "desplegad" ;
    VP (Imp Pl P3) => "desplieguen" ;
    VP (Pass Sg Masc) => "desplegado" ;
    VP (Pass Sg Fem) => "desplegada" ;
    VP (Pass Pl Masc) => "desplegados" ;
    VP (Pass Pl Fem) => "desplegadas"
    }
  } ;

lin empezar_V = verboV 
 {s = table {
    VI Infn => "empezar" ;
    VI Ger => "empezando" ;
    VI Part => "empezado" ;
    VP (Pres Ind Sg P1) => "empiezo" ;
    VP (Pres Ind Sg P2) => "empiezas" ;
    VP (Pres Ind Sg P3) => "empieza" ;
    VP (Pres Ind Pl P1) => "empezamos" ;
    VP (Pres Ind Pl P2) => "empezáis" ;
    VP (Pres Ind Pl P3) => "empiezan" ;
    VP (Pres Subj Sg P1) => "empiece" ;
    VP (Pres Subj Sg P2) => "empieces" ;
    VP (Pres Subj Sg P3) => "empiece" ;
    VP (Pres Subj Pl P1) => "empecemos" ;
    VP (Pres Subj Pl P2) => "empecéis" ;
    VP (Pres Subj Pl P3) => "empiecen" ;
    VP (Impf Ind Sg P1) => "empezaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "empezabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "empezaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "empezábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empezabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empezaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empezara" ; "empezase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empezaras" ; "empezases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empezara" ; "empezase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empezáramos" ; "empezásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empezarais" ; "empezaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empezaran" ; "empezasen"} ;--# notpresent
    VP (Pret Sg P1) => "empecé" ;--# notpresent
    VP (Pret Sg P2) => "empezaste" ;--# notpresent
    VP (Pret Sg P3) => "empezó" ;--# notpresent
    VP (Pret Pl P1) => "empezamos" ;--# notpresent
    VP (Pret Pl P2) => "empezasteis" ;--# notpresent
    VP (Pret Pl P3) => "empezaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empezaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empezarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empezará" ;--# notpresent
    VP (Fut Ind Pl P1) => "empezaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empezaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empezarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empezare" ;--# notpresent
    VP (Fut Subj Sg P2) => "empezares" ;--# notpresent
    VP (Fut Subj Sg P3) => "empezare" ;--# notpresent
    VP (Fut Subj Pl P1) => "empezáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empezareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empezaren" ;--# notpresent
    VP (Cond Sg P1) => "empezaría" ;--# notpresent
    VP (Cond Sg P2) => "empezarías" ;--# notpresent
    VP (Cond Sg P3) => "empezaría" ;--# notpresent
    VP (Cond Pl P1) => "empezaríamos" ;--# notpresent
    VP (Cond Pl P2) => "empezaríais" ;--# notpresent
    VP (Cond Pl P3) => "empezarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empieza" ;
    VP (Imp Sg P3) => "empiece" ;
    VP (Imp Pl P1) => "empecemos" ;
    VP (Imp Pl P2) => "empezad" ;
    VP (Imp Pl P3) => "empiecen" ;
    VP (Pass Sg Masc) => "empezado" ;
    VP (Pass Sg Fem) => "empezada" ;
    VP (Pass Pl Masc) => "empezados" ;
    VP (Pass Pl Fem) => "empezadas"
    }
  } ;

lin emporcar_V = verboV 
 {s = table {
    VI Infn => "emporcar" ;
    VI Ger => "emporcando" ;
    VI Part => "emporcado" ;
    VP (Pres Ind Sg P1) => "empuerco" ;
    VP (Pres Ind Sg P2) => "empuercas" ;
    VP (Pres Ind Sg P3) => "empuerca" ;
    VP (Pres Ind Pl P1) => "emporcamos" ;
    VP (Pres Ind Pl P2) => "emporcáis" ;
    VP (Pres Ind Pl P3) => "empuercan" ;
    VP (Pres Subj Sg P1) => "empuerque" ;
    VP (Pres Subj Sg P2) => "empuerques" ;
    VP (Pres Subj Sg P3) => "empuerque" ;
    VP (Pres Subj Pl P1) => "emporquemos" ;
    VP (Pres Subj Pl P2) => "emporquéis" ;
    VP (Pres Subj Pl P3) => "empuerquen" ;
    VP (Impf Ind Sg P1) => "emporcaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "emporcabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "emporcaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "emporcábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emporcabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emporcaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emporcara" ; "emporcase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emporcaras" ; "emporcases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emporcara" ; "emporcase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emporcáramos" ; "emporcásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emporcarais" ; "emporcaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emporcaran" ; "emporcasen"} ;--# notpresent
    VP (Pret Sg P1) => "emporqué" ;--# notpresent
    VP (Pret Sg P2) => "emporcaste" ;--# notpresent
    VP (Pret Sg P3) => "emporcó" ;--# notpresent
    VP (Pret Pl P1) => "emporcamos" ;--# notpresent
    VP (Pret Pl P2) => "emporcasteis" ;--# notpresent
    VP (Pret Pl P3) => "emporcaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emporcaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emporcarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emporcará" ;--# notpresent
    VP (Fut Ind Pl P1) => "emporcaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emporcaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emporcarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emporcare" ;--# notpresent
    VP (Fut Subj Sg P2) => "emporcares" ;--# notpresent
    VP (Fut Subj Sg P3) => "emporcare" ;--# notpresent
    VP (Fut Subj Pl P1) => "emporcáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emporcareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emporcaren" ;--# notpresent
    VP (Cond Sg P1) => "emporcaría" ;--# notpresent
    VP (Cond Sg P2) => "emporcarías" ;--# notpresent
    VP (Cond Sg P3) => "emporcaría" ;--# notpresent
    VP (Cond Pl P1) => "emporcaríamos" ;--# notpresent
    VP (Cond Pl P2) => "emporcaríais" ;--# notpresent
    VP (Cond Pl P3) => "emporcarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empuerca" ;
    VP (Imp Sg P3) => "empuerque" ;
    VP (Imp Pl P1) => "emporquemos" ;
    VP (Imp Pl P2) => "emporcad" ;
    VP (Imp Pl P3) => "empuerquen" ;
    VP (Pass Sg Masc) => "emporcado" ;
    VP (Pass Sg Fem) => "emporcada" ;
    VP (Pass Pl Masc) => "emporcados" ;
    VP (Pass Pl Fem) => "emporcadas"
    }
  } ;

lin enclocar_V = verboV 
 {s = table {
    VI Infn => "enclocar" ;
    VI Ger => "enclocando" ;
    VI Part => "enclocado" ;
    VP (Pres Ind Sg P1) => "enclueco" ;
    VP (Pres Ind Sg P2) => "encluecas" ;
    VP (Pres Ind Sg P3) => "enclueca" ;
    VP (Pres Ind Pl P1) => "enclocamos" ;
    VP (Pres Ind Pl P2) => "enclocáis" ;
    VP (Pres Ind Pl P3) => "encluecan" ;
    VP (Pres Subj Sg P1) => "enclueque" ;
    VP (Pres Subj Sg P2) => "enclueques" ;
    VP (Pres Subj Sg P3) => "enclueque" ;
    VP (Pres Subj Pl P1) => "encloquemos" ;
    VP (Pres Subj Pl P2) => "encloquéis" ;
    VP (Pres Subj Pl P3) => "encluequen" ;
    VP (Impf Ind Sg P1) => "enclocaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enclocabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enclocaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enclocábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enclocabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enclocaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enclocara" ; "enclocase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enclocaras" ; "enclocases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enclocara" ; "enclocase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enclocáramos" ; "enclocásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enclocarais" ; "enclocaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enclocaran" ; "enclocasen"} ;--# notpresent
    VP (Pret Sg P1) => "encloqué" ;--# notpresent
    VP (Pret Sg P2) => "enclocaste" ;--# notpresent
    VP (Pret Sg P3) => "enclocó" ;--# notpresent
    VP (Pret Pl P1) => "enclocamos" ;--# notpresent
    VP (Pret Pl P2) => "enclocasteis" ;--# notpresent
    VP (Pret Pl P3) => "enclocaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enclocaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enclocarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enclocará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enclocaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enclocaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enclocarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enclocare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enclocares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enclocare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enclocáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enclocareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enclocaren" ;--# notpresent
    VP (Cond Sg P1) => "enclocaría" ;--# notpresent
    VP (Cond Sg P2) => "enclocarías" ;--# notpresent
    VP (Cond Sg P3) => "enclocaría" ;--# notpresent
    VP (Cond Pl P1) => "enclocaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enclocaríais" ;--# notpresent
    VP (Cond Pl P3) => "enclocarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enclueca" ;
    VP (Imp Sg P3) => "enclueque" ;
    VP (Imp Pl P1) => "encloquemos" ;
    VP (Imp Pl P2) => "enclocad" ;
    VP (Imp Pl P3) => "encluequen" ;
    VP (Pass Sg Masc) => "enclocado" ;
    VP (Pass Sg Fem) => "enclocada" ;
    VP (Pass Pl Masc) => "enclocados" ;
    VP (Pass Pl Fem) => "enclocadas"
    }
  } ;

lin enlenzar_V = verboV 
 {s = table {
    VI Infn => "enlenzar" ;
    VI Ger => "enlenzando" ;
    VI Part => "enlenzado" ;
    VP (Pres Ind Sg P1) => "enlienzo" ;
    VP (Pres Ind Sg P2) => "enlienzas" ;
    VP (Pres Ind Sg P3) => "enlienza" ;
    VP (Pres Ind Pl P1) => "enlenzamos" ;
    VP (Pres Ind Pl P2) => "enlenzáis" ;
    VP (Pres Ind Pl P3) => "enlienzan" ;
    VP (Pres Subj Sg P1) => "enlience" ;
    VP (Pres Subj Sg P2) => "enliences" ;
    VP (Pres Subj Sg P3) => "enlience" ;
    VP (Pres Subj Pl P1) => "enlencemos" ;
    VP (Pres Subj Pl P2) => "enlencéis" ;
    VP (Pres Subj Pl P3) => "enliencen" ;
    VP (Impf Ind Sg P1) => "enlenzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enlenzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enlenzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enlenzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enlenzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enlenzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enlenzara" ; "enlenzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enlenzaras" ; "enlenzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enlenzara" ; "enlenzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enlenzáramos" ; "enlenzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enlenzarais" ; "enlenzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enlenzaran" ; "enlenzasen"} ;--# notpresent
    VP (Pret Sg P1) => "enlencé" ;--# notpresent
    VP (Pret Sg P2) => "enlenzaste" ;--# notpresent
    VP (Pret Sg P3) => "enlenzó" ;--# notpresent
    VP (Pret Pl P1) => "enlenzamos" ;--# notpresent
    VP (Pret Pl P2) => "enlenzasteis" ;--# notpresent
    VP (Pret Pl P3) => "enlenzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enlenzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enlenzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enlenzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enlenzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enlenzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enlenzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enlenzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enlenzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enlenzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enlenzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enlenzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enlenzaren" ;--# notpresent
    VP (Cond Sg P1) => "enlenzaría" ;--# notpresent
    VP (Cond Sg P2) => "enlenzarías" ;--# notpresent
    VP (Cond Sg P3) => "enlenzaría" ;--# notpresent
    VP (Cond Pl P1) => "enlenzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enlenzaríais" ;--# notpresent
    VP (Cond Pl P3) => "enlenzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enlienza" ;
    VP (Imp Sg P3) => "enlience" ;
    VP (Imp Pl P1) => "enlencemos" ;
    VP (Imp Pl P2) => "enlenzad" ;
    VP (Imp Pl P3) => "enliencen" ;
    VP (Pass Sg Masc) => "enlenzado" ;
    VP (Pass Sg Fem) => "enlenzada" ;
    VP (Pass Pl Masc) => "enlenzados" ;
    VP (Pass Pl Fem) => "enlenzadas"
    }
  } ;

lin enrocar_V = verboV 
 {s = table {
    VI Infn => "enrocar" ;
    VI Ger => "enrocando" ;
    VI Part => "enrocado" ;
    VP (Pres Ind Sg P1) => "enrueco" ;
    VP (Pres Ind Sg P2) => "enruecas" ;
    VP (Pres Ind Sg P3) => "enrueca" ;
    VP (Pres Ind Pl P1) => "enrocamos" ;
    VP (Pres Ind Pl P2) => "enrocáis" ;
    VP (Pres Ind Pl P3) => "enruecan" ;
    VP (Pres Subj Sg P1) => "enrueque" ;
    VP (Pres Subj Sg P2) => "enrueques" ;
    VP (Pres Subj Sg P3) => "enrueque" ;
    VP (Pres Subj Pl P1) => "enroquemos" ;
    VP (Pres Subj Pl P2) => "enroquéis" ;
    VP (Pres Subj Pl P3) => "enruequen" ;
    VP (Impf Ind Sg P1) => "enrocaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enrocabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enrocaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enrocábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enrocabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enrocaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enrocara" ; "enrocase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enrocaras" ; "enrocases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enrocara" ; "enrocase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enrocáramos" ; "enrocásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enrocarais" ; "enrocaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enrocaran" ; "enrocasen"} ;--# notpresent
    VP (Pret Sg P1) => "enroqué" ;--# notpresent
    VP (Pret Sg P2) => "enrocaste" ;--# notpresent
    VP (Pret Sg P3) => "enrocó" ;--# notpresent
    VP (Pret Pl P1) => "enrocamos" ;--# notpresent
    VP (Pret Pl P2) => "enrocasteis" ;--# notpresent
    VP (Pret Pl P3) => "enrocaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enrocaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enrocarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enrocará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enrocaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enrocaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enrocarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enrocare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enrocares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enrocare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enrocáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enrocareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enrocaren" ;--# notpresent
    VP (Cond Sg P1) => "enrocaría" ;--# notpresent
    VP (Cond Sg P2) => "enrocarías" ;--# notpresent
    VP (Cond Sg P3) => "enrocaría" ;--# notpresent
    VP (Cond Pl P1) => "enrocaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enrocaríais" ;--# notpresent
    VP (Cond Pl P3) => "enrocarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enrueca" ;
    VP (Imp Sg P3) => "enrueque" ;
    VP (Imp Pl P1) => "enroquemos" ;
    VP (Imp Pl P2) => "enrocad" ;
    VP (Imp Pl P3) => "enruequen" ;
    VP (Pass Sg Masc) => "enrocado" ;
    VP (Pass Sg Fem) => "enrocada" ;
    VP (Pass Pl Masc) => "enrocados" ;
    VP (Pass Pl Fem) => "enrocadas"
    }
  } ;

lin esforzar_V = verboV 
 {s = table {
    VI Infn => "esforzar" ;
    VI Ger => "esforzando" ;
    VI Part => "esforzado" ;
    VP (Pres Ind Sg P1) => "esfuerzo" ;
    VP (Pres Ind Sg P2) => "esfuerzas" ;
    VP (Pres Ind Sg P3) => "esfuerza" ;
    VP (Pres Ind Pl P1) => "esforzamos" ;
    VP (Pres Ind Pl P2) => "esforzáis" ;
    VP (Pres Ind Pl P3) => "esfuerzan" ;
    VP (Pres Subj Sg P1) => "esfuerce" ;
    VP (Pres Subj Sg P2) => "esfuerces" ;
    VP (Pres Subj Sg P3) => "esfuerce" ;
    VP (Pres Subj Pl P1) => "esforcemos" ;
    VP (Pres Subj Pl P2) => "esforcéis" ;
    VP (Pres Subj Pl P3) => "esfuercen" ;
    VP (Impf Ind Sg P1) => "esforzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "esforzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "esforzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "esforzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "esforzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "esforzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"esforzara" ; "esforzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"esforzaras" ; "esforzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"esforzara" ; "esforzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"esforzáramos" ; "esforzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"esforzarais" ; "esforzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"esforzaran" ; "esforzasen"} ;--# notpresent
    VP (Pret Sg P1) => "esforcé" ;--# notpresent
    VP (Pret Sg P2) => "esforzaste" ;--# notpresent
    VP (Pret Sg P3) => "esforzó" ;--# notpresent
    VP (Pret Pl P1) => "esforzamos" ;--# notpresent
    VP (Pret Pl P2) => "esforzasteis" ;--# notpresent
    VP (Pret Pl P3) => "esforzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "esforzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "esforzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "esforzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "esforzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "esforzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "esforzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "esforzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "esforzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "esforzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "esforzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "esforzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "esforzaren" ;--# notpresent
    VP (Cond Sg P1) => "esforzaría" ;--# notpresent
    VP (Cond Sg P2) => "esforzarías" ;--# notpresent
    VP (Cond Sg P3) => "esforzaría" ;--# notpresent
    VP (Cond Pl P1) => "esforzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "esforzaríais" ;--# notpresent
    VP (Cond Pl P3) => "esforzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "esfuerza" ;
    VP (Imp Sg P3) => "esfuerce" ;
    VP (Imp Pl P1) => "esforcemos" ;
    VP (Imp Pl P2) => "esforzad" ;
    VP (Imp Pl P3) => "esfuercen" ;
    VP (Pass Sg Masc) => "esforzado" ;
    VP (Pass Sg Fem) => "esforzada" ;
    VP (Pass Pl Masc) => "esforzados" ;
    VP (Pass Pl Fem) => "esforzadas"
    }
  } ;

lin estregar_V = verboV 
 {s = table {
    VI Infn => "estregar" ;
    VI Ger => "estregando" ;
    VI Part => "estregado" ;
    VP (Pres Ind Sg P1) => "estriego" ;
    VP (Pres Ind Sg P2) => "estriegas" ;
    VP (Pres Ind Sg P3) => "estriega" ;
    VP (Pres Ind Pl P1) => "estregamos" ;
    VP (Pres Ind Pl P2) => "estregáis" ;
    VP (Pres Ind Pl P3) => "estriegan" ;
    VP (Pres Subj Sg P1) => "estriegue" ;
    VP (Pres Subj Sg P2) => "estriegues" ;
    VP (Pres Subj Sg P3) => "estriegue" ;
    VP (Pres Subj Pl P1) => "estreguemos" ;
    VP (Pres Subj Pl P2) => "estreguéis" ;
    VP (Pres Subj Pl P3) => "estrieguen" ;
    VP (Impf Ind Sg P1) => "estregaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "estregabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "estregaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "estregábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "estregabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "estregaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estregara" ; "estregase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"estregaras" ; "estregases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estregara" ; "estregase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estregáramos" ; "estregásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"estregarais" ; "estregaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"estregaran" ; "estregasen"} ;--# notpresent
    VP (Pret Sg P1) => "estregué" ;--# notpresent
    VP (Pret Sg P2) => "estregaste" ;--# notpresent
    VP (Pret Sg P3) => "estregó" ;--# notpresent
    VP (Pret Pl P1) => "estregamos" ;--# notpresent
    VP (Pret Pl P2) => "estregasteis" ;--# notpresent
    VP (Pret Pl P3) => "estregaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estregaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "estregarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "estregará" ;--# notpresent
    VP (Fut Ind Pl P1) => "estregaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estregaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "estregarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estregare" ;--# notpresent
    VP (Fut Subj Sg P2) => "estregares" ;--# notpresent
    VP (Fut Subj Sg P3) => "estregare" ;--# notpresent
    VP (Fut Subj Pl P1) => "estregáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estregareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "estregaren" ;--# notpresent
    VP (Cond Sg P1) => "estregaría" ;--# notpresent
    VP (Cond Sg P2) => "estregarías" ;--# notpresent
    VP (Cond Sg P3) => "estregaría" ;--# notpresent
    VP (Cond Pl P1) => "estregaríamos" ;--# notpresent
    VP (Cond Pl P2) => "estregaríais" ;--# notpresent
    VP (Cond Pl P3) => "estregarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "estriega" ;
    VP (Imp Sg P3) => "estriegue" ;
    VP (Imp Pl P1) => "estreguemos" ;
    VP (Imp Pl P2) => "estregad" ;
    VP (Imp Pl P3) => "estrieguen" ;
    VP (Pass Sg Masc) => "estregado" ;
    VP (Pass Sg Fem) => "estregada" ;
    VP (Pass Pl Masc) => "estregados" ;
    VP (Pass Pl Fem) => "estregadas"
    }
  } ;

lin forzar_V = verboV 
 {s = table {
    VI Infn => "forzar" ;
    VI Ger => "forzando" ;
    VI Part => "forzado" ;
    VP (Pres Ind Sg P1) => "fuerzo" ;
    VP (Pres Ind Sg P2) => "fuerzas" ;
    VP (Pres Ind Sg P3) => "fuerza" ;
    VP (Pres Ind Pl P1) => "forzamos" ;
    VP (Pres Ind Pl P2) => "forzáis" ;
    VP (Pres Ind Pl P3) => "fuerzan" ;
    VP (Pres Subj Sg P1) => "fuerce" ;
    VP (Pres Subj Sg P2) => "fuerces" ;
    VP (Pres Subj Sg P3) => "fuerce" ;
    VP (Pres Subj Pl P1) => "forcemos" ;
    VP (Pres Subj Pl P2) => "forcéis" ;
    VP (Pres Subj Pl P3) => "fuercen" ;
    VP (Impf Ind Sg P1) => "forzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "forzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "forzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "forzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "forzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "forzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"forzara" ; "forzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"forzaras" ; "forzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"forzara" ; "forzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"forzáramos" ; "forzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"forzarais" ; "forzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"forzaran" ; "forzasen"} ;--# notpresent
    VP (Pret Sg P1) => "forcé" ;--# notpresent
    VP (Pret Sg P2) => "forzaste" ;--# notpresent
    VP (Pret Sg P3) => "forzó" ;--# notpresent
    VP (Pret Pl P1) => "forzamos" ;--# notpresent
    VP (Pret Pl P2) => "forzasteis" ;--# notpresent
    VP (Pret Pl P3) => "forzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "forzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "forzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "forzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "forzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "forzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "forzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "forzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "forzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "forzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "forzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "forzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "forzaren" ;--# notpresent
    VP (Cond Sg P1) => "forzaría" ;--# notpresent
    VP (Cond Sg P2) => "forzarías" ;--# notpresent
    VP (Cond Sg P3) => "forzaría" ;--# notpresent
    VP (Cond Pl P1) => "forzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "forzaríais" ;--# notpresent
    VP (Cond Pl P3) => "forzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fuerza" ;
    VP (Imp Sg P3) => "fuerce" ;
    VP (Imp Pl P1) => "forcemos" ;
    VP (Imp Pl P2) => "forzad" ;
    VP (Imp Pl P3) => "fuercen" ;
    VP (Pass Sg Masc) => "forzado" ;
    VP (Pass Sg Fem) => "forzada" ;
    VP (Pass Pl Masc) => "forzados" ;
    VP (Pass Pl Fem) => "forzadas"
    }
  } ;

lin fregar_V = verboV 
 {s = table {
    VI Infn => "fregar" ;
    VI Ger => "fregando" ;
    VI Part => "fregado" ;
    VP (Pres Ind Sg P1) => "friego" ;
    VP (Pres Ind Sg P2) => "friegas" ;
    VP (Pres Ind Sg P3) => "friega" ;
    VP (Pres Ind Pl P1) => "fregamos" ;
    VP (Pres Ind Pl P2) => "fregáis" ;
    VP (Pres Ind Pl P3) => "friegan" ;
    VP (Pres Subj Sg P1) => "friegue" ;
    VP (Pres Subj Sg P2) => "friegues" ;
    VP (Pres Subj Sg P3) => "friegue" ;
    VP (Pres Subj Pl P1) => "freguemos" ;
    VP (Pres Subj Pl P2) => "freguéis" ;
    VP (Pres Subj Pl P3) => "frieguen" ;
    VP (Impf Ind Sg P1) => "fregaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "fregabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "fregaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "fregábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fregabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fregaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fregara" ; "fregase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fregaras" ; "fregases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fregara" ; "fregase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fregáramos" ; "fregásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fregarais" ; "fregaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fregaran" ; "fregasen"} ;--# notpresent
    VP (Pret Sg P1) => "fregué" ;--# notpresent
    VP (Pret Sg P2) => "fregaste" ;--# notpresent
    VP (Pret Sg P3) => "fregó" ;--# notpresent
    VP (Pret Pl P1) => "fregamos" ;--# notpresent
    VP (Pret Pl P2) => "fregasteis" ;--# notpresent
    VP (Pret Pl P3) => "fregaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fregaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fregarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fregará" ;--# notpresent
    VP (Fut Ind Pl P1) => "fregaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fregaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fregarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fregare" ;--# notpresent
    VP (Fut Subj Sg P2) => "fregares" ;--# notpresent
    VP (Fut Subj Sg P3) => "fregare" ;--# notpresent
    VP (Fut Subj Pl P1) => "fregáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fregareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fregaren" ;--# notpresent
    VP (Cond Sg P1) => "fregaría" ;--# notpresent
    VP (Cond Sg P2) => "fregarías" ;--# notpresent
    VP (Cond Sg P3) => "fregaría" ;--# notpresent
    VP (Cond Pl P1) => "fregaríamos" ;--# notpresent
    VP (Cond Pl P2) => "fregaríais" ;--# notpresent
    VP (Cond Pl P3) => "fregarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "friega" ;
    VP (Imp Sg P3) => "friegue" ;
    VP (Imp Pl P1) => "freguemos" ;
    VP (Imp Pl P2) => "fregad" ;
    VP (Imp Pl P3) => "frieguen" ;
    VP (Pass Sg Masc) => "fregado" ;
    VP (Pass Sg Fem) => "fregada" ;
    VP (Pass Pl Masc) => "fregados" ;
    VP (Pass Pl Fem) => "fregadas"
    }
  } ;

lin holgar_V = verboV 
 {s = table {
    VI Infn => "holgar" ;
    VI Ger => "holgando" ;
    VI Part => "holgado" ;
    VP (Pres Ind Sg P1) => "huelgo" ;
    VP (Pres Ind Sg P2) => "huelgas" ;
    VP (Pres Ind Sg P3) => "huelga" ;
    VP (Pres Ind Pl P1) => "holgamos" ;
    VP (Pres Ind Pl P2) => "holgáis" ;
    VP (Pres Ind Pl P3) => "huelgan" ;
    VP (Pres Subj Sg P1) => "huelgue" ;
    VP (Pres Subj Sg P2) => "huelgues" ;
    VP (Pres Subj Sg P3) => "huelgue" ;
    VP (Pres Subj Pl P1) => "holguemos" ;
    VP (Pres Subj Pl P2) => "holguéis" ;
    VP (Pres Subj Pl P3) => "huelguen" ;
    VP (Impf Ind Sg P1) => "holgaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "holgabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "holgaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "holgábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "holgabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "holgaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"holgara" ; "holgase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"holgaras" ; "holgases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"holgara" ; "holgase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"holgáramos" ; "holgásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"holgarais" ; "holgaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"holgaran" ; "holgasen"} ;--# notpresent
    VP (Pret Sg P1) => "holgué" ;--# notpresent
    VP (Pret Sg P2) => "holgaste" ;--# notpresent
    VP (Pret Sg P3) => "holgó" ;--# notpresent
    VP (Pret Pl P1) => "holgamos" ;--# notpresent
    VP (Pret Pl P2) => "holgasteis" ;--# notpresent
    VP (Pret Pl P3) => "holgaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "holgaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "holgarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "holgará" ;--# notpresent
    VP (Fut Ind Pl P1) => "holgaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "holgaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "holgarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "holgare" ;--# notpresent
    VP (Fut Subj Sg P2) => "holgares" ;--# notpresent
    VP (Fut Subj Sg P3) => "holgare" ;--# notpresent
    VP (Fut Subj Pl P1) => "holgáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "holgareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "holgaren" ;--# notpresent
    VP (Cond Sg P1) => "holgaría" ;--# notpresent
    VP (Cond Sg P2) => "holgarías" ;--# notpresent
    VP (Cond Sg P3) => "holgaría" ;--# notpresent
    VP (Cond Pl P1) => "holgaríamos" ;--# notpresent
    VP (Cond Pl P2) => "holgaríais" ;--# notpresent
    VP (Cond Pl P3) => "holgarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "huelga" ;
    VP (Imp Sg P3) => "huelgue" ;
    VP (Imp Pl P1) => "holguemos" ;
    VP (Imp Pl P2) => "holgad" ;
    VP (Imp Pl P3) => "huelguen" ;
    VP (Pass Sg Masc) => "holgado" ;
    VP (Pass Sg Fem) => "holgada" ;
    VP (Pass Pl Masc) => "holgados" ;
    VP (Pass Pl Fem) => "holgadas"
    }
  } ;

lin jimenzar_V = verboV 
 {s = table {
    VI Infn => "jimenzar" ;
    VI Ger => "jimenzando" ;
    VI Part => "jimenzado" ;
    VP (Pres Ind Sg P1) => "jimienzo" ;
    VP (Pres Ind Sg P2) => "jimienzas" ;
    VP (Pres Ind Sg P3) => "jimienza" ;
    VP (Pres Ind Pl P1) => "jimenzamos" ;
    VP (Pres Ind Pl P2) => "jimenzáis" ;
    VP (Pres Ind Pl P3) => "jimienzan" ;
    VP (Pres Subj Sg P1) => "jimience" ;
    VP (Pres Subj Sg P2) => "jimiences" ;
    VP (Pres Subj Sg P3) => "jimience" ;
    VP (Pres Subj Pl P1) => "jimencemos" ;
    VP (Pres Subj Pl P2) => "jimencéis" ;
    VP (Pres Subj Pl P3) => "jimiencen" ;
    VP (Impf Ind Sg P1) => "jimenzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "jimenzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "jimenzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "jimenzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "jimenzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "jimenzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"jimenzara" ; "jimenzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"jimenzaras" ; "jimenzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"jimenzara" ; "jimenzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"jimenzáramos" ; "jimenzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"jimenzarais" ; "jimenzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"jimenzaran" ; "jimenzasen"} ;--# notpresent
    VP (Pret Sg P1) => "jimencé" ;--# notpresent
    VP (Pret Sg P2) => "jimenzaste" ;--# notpresent
    VP (Pret Sg P3) => "jimenzó" ;--# notpresent
    VP (Pret Pl P1) => "jimenzamos" ;--# notpresent
    VP (Pret Pl P2) => "jimenzasteis" ;--# notpresent
    VP (Pret Pl P3) => "jimenzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "jimenzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "jimenzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "jimenzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "jimenzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "jimenzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "jimenzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "jimenzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "jimenzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "jimenzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "jimenzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "jimenzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "jimenzaren" ;--# notpresent
    VP (Cond Sg P1) => "jimenzaría" ;--# notpresent
    VP (Cond Sg P2) => "jimenzarías" ;--# notpresent
    VP (Cond Sg P3) => "jimenzaría" ;--# notpresent
    VP (Cond Pl P1) => "jimenzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "jimenzaríais" ;--# notpresent
    VP (Cond Pl P3) => "jimenzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "jimienza" ;
    VP (Imp Sg P3) => "jimience" ;
    VP (Imp Pl P1) => "jimencemos" ;
    VP (Imp Pl P2) => "jimenzad" ;
    VP (Imp Pl P3) => "jimiencen" ;
    VP (Pass Sg Masc) => "jimenzado" ;
    VP (Pass Sg Fem) => "jimenzada" ;
    VP (Pass Pl Masc) => "jimenzados" ;
    VP (Pass Pl Fem) => "jimenzadas"
    }
  } ;

lin jugar_V = verboV 
 {s = table {
    VI Infn => "jugar" ;
    VI Ger => "jugando" ;
    VI Part => "jugado" ;
    VP (Pres Ind Sg P1) => "juego" ;
    VP (Pres Ind Sg P2) => "juegas" ;
    VP (Pres Ind Sg P3) => "juega" ;
    VP (Pres Ind Pl P1) => "jugamos" ;
    VP (Pres Ind Pl P2) => "jugáis" ;
    VP (Pres Ind Pl P3) => "juegan" ;
    VP (Pres Subj Sg P1) => "juegue" ;
    VP (Pres Subj Sg P2) => "juegues" ;
    VP (Pres Subj Sg P3) => "juegue" ;
    VP (Pres Subj Pl P1) => "juguemos" ;
    VP (Pres Subj Pl P2) => "juguéis" ;
    VP (Pres Subj Pl P3) => "jueguen" ;
    VP (Impf Ind Sg P1) => "jugaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "jugabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "jugaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "jugábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "jugabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "jugaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"jugara" ; "jugase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"jugaras" ; "jugases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"jugara" ; "jugase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"jugáramos" ; "jugásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"jugarais" ; "jugaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"jugaran" ; "jugasen"} ;--# notpresent
    VP (Pret Sg P1) => "jugué" ;--# notpresent
    VP (Pret Sg P2) => "jugaste" ;--# notpresent
    VP (Pret Sg P3) => "jugó" ;--# notpresent
    VP (Pret Pl P1) => "jugamos" ;--# notpresent
    VP (Pret Pl P2) => "jugasteis" ;--# notpresent
    VP (Pret Pl P3) => "jugaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "jugaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "jugarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "jugará" ;--# notpresent
    VP (Fut Ind Pl P1) => "jugaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "jugaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "jugarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "jugare" ;--# notpresent
    VP (Fut Subj Sg P2) => "jugares" ;--# notpresent
    VP (Fut Subj Sg P3) => "jugare" ;--# notpresent
    VP (Fut Subj Pl P1) => "jugáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "jugareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "jugaren" ;--# notpresent
    VP (Cond Sg P1) => "jugaría" ;--# notpresent
    VP (Cond Sg P2) => "jugarías" ;--# notpresent
    VP (Cond Sg P3) => "jugaría" ;--# notpresent
    VP (Cond Pl P1) => "jugaríamos" ;--# notpresent
    VP (Cond Pl P2) => "jugaríais" ;--# notpresent
    VP (Cond Pl P3) => "jugarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "juega" ;
    VP (Imp Sg P3) => "juegue" ;
    VP (Imp Pl P1) => "juguemos" ;
    VP (Imp Pl P2) => "jugad" ;
    VP (Imp Pl P3) => "jueguen" ;
    VP (Pass Sg Masc) => "jugado" ;
    VP (Pass Sg Fem) => "jugada" ;
    VP (Pass Pl Masc) => "jugados" ;
    VP (Pass Pl Fem) => "jugadas"
    }
  } ;

lin negar_V = verboV 
 {s = table {
    VI Infn => "negar" ;
    VI Ger => "negando" ;
    VI Part => "negado" ;
    VP (Pres Ind Sg P1) => "niego" ;
    VP (Pres Ind Sg P2) => "niegas" ;
    VP (Pres Ind Sg P3) => "niega" ;
    VP (Pres Ind Pl P1) => "negamos" ;
    VP (Pres Ind Pl P2) => "negáis" ;
    VP (Pres Ind Pl P3) => "niegan" ;
    VP (Pres Subj Sg P1) => "niegue" ;
    VP (Pres Subj Sg P2) => "niegues" ;
    VP (Pres Subj Sg P3) => "niegue" ;
    VP (Pres Subj Pl P1) => "neguemos" ;
    VP (Pres Subj Pl P2) => "neguéis" ;
    VP (Pres Subj Pl P3) => "nieguen" ;
    VP (Impf Ind Sg P1) => "negaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "negabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "negaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "negábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "negabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "negaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"negara" ; "negase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"negaras" ; "negases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"negara" ; "negase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"negáramos" ; "negásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"negarais" ; "negaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"negaran" ; "negasen"} ;--# notpresent
    VP (Pret Sg P1) => "negué" ;--# notpresent
    VP (Pret Sg P2) => "negaste" ;--# notpresent
    VP (Pret Sg P3) => "negó" ;--# notpresent
    VP (Pret Pl P1) => "negamos" ;--# notpresent
    VP (Pret Pl P2) => "negasteis" ;--# notpresent
    VP (Pret Pl P3) => "negaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "negaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "negarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "negará" ;--# notpresent
    VP (Fut Ind Pl P1) => "negaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "negaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "negarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "negare" ;--# notpresent
    VP (Fut Subj Sg P2) => "negares" ;--# notpresent
    VP (Fut Subj Sg P3) => "negare" ;--# notpresent
    VP (Fut Subj Pl P1) => "negáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "negareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "negaren" ;--# notpresent
    VP (Cond Sg P1) => "negaría" ;--# notpresent
    VP (Cond Sg P2) => "negarías" ;--# notpresent
    VP (Cond Sg P3) => "negaría" ;--# notpresent
    VP (Cond Pl P1) => "negaríamos" ;--# notpresent
    VP (Cond Pl P2) => "negaríais" ;--# notpresent
    VP (Cond Pl P3) => "negarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "niega" ;
    VP (Imp Sg P3) => "niegue" ;
    VP (Imp Pl P1) => "neguemos" ;
    VP (Imp Pl P2) => "negad" ;
    VP (Imp Pl P3) => "nieguen" ;
    VP (Pass Sg Masc) => "negado" ;
    VP (Pass Sg Fem) => "negada" ;
    VP (Pass Pl Masc) => "negados" ;
    VP (Pass Pl Fem) => "negadas"
    }
  } ;

lin plegar_V = verboV 
 {s = table {
    VI Infn => "plegar" ;
    VI Ger => "plegando" ;
    VI Part => "plegado" ;
    VP (Pres Ind Sg P1) => "pliego" ;
    VP (Pres Ind Sg P2) => "pliegas" ;
    VP (Pres Ind Sg P3) => "pliega" ;
    VP (Pres Ind Pl P1) => "plegamos" ;
    VP (Pres Ind Pl P2) => "plegáis" ;
    VP (Pres Ind Pl P3) => "pliegan" ;
    VP (Pres Subj Sg P1) => "pliegue" ;
    VP (Pres Subj Sg P2) => "pliegues" ;
    VP (Pres Subj Sg P3) => "pliegue" ;
    VP (Pres Subj Pl P1) => "pleguemos" ;
    VP (Pres Subj Pl P2) => "pleguéis" ;
    VP (Pres Subj Pl P3) => "plieguen" ;
    VP (Impf Ind Sg P1) => "plegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "plegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "plegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "plegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "plegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "plegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"plegara" ; "plegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"plegaras" ; "plegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"plegara" ; "plegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"plegáramos" ; "plegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"plegarais" ; "plegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"plegaran" ; "plegasen"} ;--# notpresent
    VP (Pret Sg P1) => "plegué" ;--# notpresent
    VP (Pret Sg P2) => "plegaste" ;--# notpresent
    VP (Pret Sg P3) => "plegó" ;--# notpresent
    VP (Pret Pl P1) => "plegamos" ;--# notpresent
    VP (Pret Pl P2) => "plegasteis" ;--# notpresent
    VP (Pret Pl P3) => "plegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "plegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "plegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "plegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "plegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "plegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "plegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "plegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "plegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "plegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "plegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "plegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "plegaren" ;--# notpresent
    VP (Cond Sg P1) => "plegaría" ;--# notpresent
    VP (Cond Sg P2) => "plegarías" ;--# notpresent
    VP (Cond Sg P3) => "plegaría" ;--# notpresent
    VP (Cond Pl P1) => "plegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "plegaríais" ;--# notpresent
    VP (Cond Pl P3) => "plegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pliega" ;
    VP (Imp Sg P3) => "pliegue" ;
    VP (Imp Pl P1) => "pleguemos" ;
    VP (Imp Pl P2) => "plegad" ;
    VP (Imp Pl P3) => "plieguen" ;
    VP (Pass Sg Masc) => "plegado" ;
    VP (Pass Sg Fem) => "plegada" ;
    VP (Pass Pl Masc) => "plegados" ;
    VP (Pass Pl Fem) => "plegadas"
    }
  } ;

lin recomenzar_V = verboV 
 {s = table {
    VI Infn => "recomenzar" ;
    VI Ger => "recomenzando" ;
    VI Part => "recomenzado" ;
    VP (Pres Ind Sg P1) => "recomienzo" ;
    VP (Pres Ind Sg P2) => "recomienzas" ;
    VP (Pres Ind Sg P3) => "recomienza" ;
    VP (Pres Ind Pl P1) => "recomenzamos" ;
    VP (Pres Ind Pl P2) => "recomenzáis" ;
    VP (Pres Ind Pl P3) => "recomienzan" ;
    VP (Pres Subj Sg P1) => "recomience" ;
    VP (Pres Subj Sg P2) => "recomiences" ;
    VP (Pres Subj Sg P3) => "recomience" ;
    VP (Pres Subj Pl P1) => "recomencemos" ;
    VP (Pres Subj Pl P2) => "recomencéis" ;
    VP (Pres Subj Pl P3) => "recomiencen" ;
    VP (Impf Ind Sg P1) => "recomenzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recomenzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recomenzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recomenzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recomenzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recomenzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recomenzara" ; "recomenzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recomenzaras" ; "recomenzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recomenzara" ; "recomenzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recomenzáramos" ; "recomenzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recomenzarais" ; "recomenzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recomenzaran" ; "recomenzasen"} ;--# notpresent
    VP (Pret Sg P1) => "recomencé" ;--# notpresent
    VP (Pret Sg P2) => "recomenzaste" ;--# notpresent
    VP (Pret Sg P3) => "recomenzó" ;--# notpresent
    VP (Pret Pl P1) => "recomenzamos" ;--# notpresent
    VP (Pret Pl P2) => "recomenzasteis" ;--# notpresent
    VP (Pret Pl P3) => "recomenzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recomenzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recomenzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recomenzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recomenzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recomenzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recomenzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recomenzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recomenzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recomenzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recomenzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recomenzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recomenzaren" ;--# notpresent
    VP (Cond Sg P1) => "recomenzaría" ;--# notpresent
    VP (Cond Sg P2) => "recomenzarías" ;--# notpresent
    VP (Cond Sg P3) => "recomenzaría" ;--# notpresent
    VP (Cond Pl P1) => "recomenzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recomenzaríais" ;--# notpresent
    VP (Cond Pl P3) => "recomenzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recomienza" ;
    VP (Imp Sg P3) => "recomience" ;
    VP (Imp Pl P1) => "recomencemos" ;
    VP (Imp Pl P2) => "recomenzad" ;
    VP (Imp Pl P3) => "recomiencen" ;
    VP (Pass Sg Masc) => "recomenzado" ;
    VP (Pass Sg Fem) => "recomenzada" ;
    VP (Pass Pl Masc) => "recomenzados" ;
    VP (Pass Pl Fem) => "recomenzadas"
    }
  } ;

lin reforzar_V = verboV 
 {s = table {
    VI Infn => "reforzar" ;
    VI Ger => "reforzando" ;
    VI Part => "reforzado" ;
    VP (Pres Ind Sg P1) => "refuerzo" ;
    VP (Pres Ind Sg P2) => "refuerzas" ;
    VP (Pres Ind Sg P3) => "refuerza" ;
    VP (Pres Ind Pl P1) => "reforzamos" ;
    VP (Pres Ind Pl P2) => "reforzáis" ;
    VP (Pres Ind Pl P3) => "refuerzan" ;
    VP (Pres Subj Sg P1) => "refuerce" ;
    VP (Pres Subj Sg P2) => "refuerces" ;
    VP (Pres Subj Sg P3) => "refuerce" ;
    VP (Pres Subj Pl P1) => "reforcemos" ;
    VP (Pres Subj Pl P2) => "reforcéis" ;
    VP (Pres Subj Pl P3) => "refuercen" ;
    VP (Impf Ind Sg P1) => "reforzaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reforzabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reforzaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reforzábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reforzabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reforzaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reforzara" ; "reforzase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reforzaras" ; "reforzases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reforzara" ; "reforzase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reforzáramos" ; "reforzásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reforzarais" ; "reforzaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reforzaran" ; "reforzasen"} ;--# notpresent
    VP (Pret Sg P1) => "reforcé" ;--# notpresent
    VP (Pret Sg P2) => "reforzaste" ;--# notpresent
    VP (Pret Sg P3) => "reforzó" ;--# notpresent
    VP (Pret Pl P1) => "reforzamos" ;--# notpresent
    VP (Pret Pl P2) => "reforzasteis" ;--# notpresent
    VP (Pret Pl P3) => "reforzaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reforzaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reforzarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reforzará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reforzaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reforzaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reforzarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reforzare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reforzares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reforzare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reforzáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reforzareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reforzaren" ;--# notpresent
    VP (Cond Sg P1) => "reforzaría" ;--# notpresent
    VP (Cond Sg P2) => "reforzarías" ;--# notpresent
    VP (Cond Sg P3) => "reforzaría" ;--# notpresent
    VP (Cond Pl P1) => "reforzaríamos" ;--# notpresent
    VP (Cond Pl P2) => "reforzaríais" ;--# notpresent
    VP (Cond Pl P3) => "reforzarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refuerza" ;
    VP (Imp Sg P3) => "refuerce" ;
    VP (Imp Pl P1) => "reforcemos" ;
    VP (Imp Pl P2) => "reforzad" ;
    VP (Imp Pl P3) => "refuercen" ;
    VP (Pass Sg Masc) => "reforzado" ;
    VP (Pass Sg Fem) => "reforzada" ;
    VP (Pass Pl Masc) => "reforzados" ;
    VP (Pass Pl Fem) => "reforzadas"
    }
  } ;

lin refregar_V = verboV 
 {s = table {
    VI Infn => "refregar" ;
    VI Ger => "refregando" ;
    VI Part => "refregado" ;
    VP (Pres Ind Sg P1) => "refriego" ;
    VP (Pres Ind Sg P2) => "refriegas" ;
    VP (Pres Ind Sg P3) => "refriega" ;
    VP (Pres Ind Pl P1) => "refregamos" ;
    VP (Pres Ind Pl P2) => "refregáis" ;
    VP (Pres Ind Pl P3) => "refriegan" ;
    VP (Pres Subj Sg P1) => "refriegue" ;
    VP (Pres Subj Sg P2) => "refriegues" ;
    VP (Pres Subj Sg P3) => "refriegue" ;
    VP (Pres Subj Pl P1) => "refreguemos" ;
    VP (Pres Subj Pl P2) => "refreguéis" ;
    VP (Pres Subj Pl P3) => "refrieguen" ;
    VP (Impf Ind Sg P1) => "refregaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "refregabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "refregaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "refregábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "refregabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "refregaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refregara" ; "refregase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"refregaras" ; "refregases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refregara" ; "refregase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refregáramos" ; "refregásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"refregarais" ; "refregaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"refregaran" ; "refregasen"} ;--# notpresent
    VP (Pret Sg P1) => "refregué" ;--# notpresent
    VP (Pret Sg P2) => "refregaste" ;--# notpresent
    VP (Pret Sg P3) => "refregó" ;--# notpresent
    VP (Pret Pl P1) => "refregamos" ;--# notpresent
    VP (Pret Pl P2) => "refregasteis" ;--# notpresent
    VP (Pret Pl P3) => "refregaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "refregaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "refregarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "refregará" ;--# notpresent
    VP (Fut Ind Pl P1) => "refregaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "refregaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "refregarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refregare" ;--# notpresent
    VP (Fut Subj Sg P2) => "refregares" ;--# notpresent
    VP (Fut Subj Sg P3) => "refregare" ;--# notpresent
    VP (Fut Subj Pl P1) => "refregáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refregareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "refregaren" ;--# notpresent
    VP (Cond Sg P1) => "refregaría" ;--# notpresent
    VP (Cond Sg P2) => "refregarías" ;--# notpresent
    VP (Cond Sg P3) => "refregaría" ;--# notpresent
    VP (Cond Pl P1) => "refregaríamos" ;--# notpresent
    VP (Cond Pl P2) => "refregaríais" ;--# notpresent
    VP (Cond Pl P3) => "refregarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refriega" ;
    VP (Imp Sg P3) => "refriegue" ;
    VP (Imp Pl P1) => "refreguemos" ;
    VP (Imp Pl P2) => "refregad" ;
    VP (Imp Pl P3) => "refrieguen" ;
    VP (Pass Sg Masc) => "refregado" ;
    VP (Pass Sg Fem) => "refregada" ;
    VP (Pass Pl Masc) => "refregados" ;
    VP (Pass Pl Fem) => "refregadas"
    }
  } ;

lin regar_V = verboV 
 {s = table {
    VI Infn => "regar" ;
    VI Ger => "regando" ;
    VI Part => "regado" ;
    VP (Pres Ind Sg P1) => "riego" ;
    VP (Pres Ind Sg P2) => "riegas" ;
    VP (Pres Ind Sg P3) => "riega" ;
    VP (Pres Ind Pl P1) => "regamos" ;
    VP (Pres Ind Pl P2) => "regáis" ;
    VP (Pres Ind Pl P3) => "riegan" ;
    VP (Pres Subj Sg P1) => "riegue" ;
    VP (Pres Subj Sg P2) => "riegues" ;
    VP (Pres Subj Sg P3) => "riegue" ;
    VP (Pres Subj Pl P1) => "reguemos" ;
    VP (Pres Subj Pl P2) => "reguéis" ;
    VP (Pres Subj Pl P3) => "rieguen" ;
    VP (Impf Ind Sg P1) => "regaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "regabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "regaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "regábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "regabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "regaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"regara" ; "regase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"regaras" ; "regases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"regara" ; "regase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"regáramos" ; "regásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"regarais" ; "regaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"regaran" ; "regasen"} ;--# notpresent
    VP (Pret Sg P1) => "regué" ;--# notpresent
    VP (Pret Sg P2) => "regaste" ;--# notpresent
    VP (Pret Sg P3) => "regó" ;--# notpresent
    VP (Pret Pl P1) => "regamos" ;--# notpresent
    VP (Pret Pl P2) => "regasteis" ;--# notpresent
    VP (Pret Pl P3) => "regaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "regaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "regarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "regará" ;--# notpresent
    VP (Fut Ind Pl P1) => "regaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "regaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "regarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "regare" ;--# notpresent
    VP (Fut Subj Sg P2) => "regares" ;--# notpresent
    VP (Fut Subj Sg P3) => "regare" ;--# notpresent
    VP (Fut Subj Pl P1) => "regáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "regareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "regaren" ;--# notpresent
    VP (Cond Sg P1) => "regaría" ;--# notpresent
    VP (Cond Sg P2) => "regarías" ;--# notpresent
    VP (Cond Sg P3) => "regaría" ;--# notpresent
    VP (Cond Pl P1) => "regaríamos" ;--# notpresent
    VP (Cond Pl P2) => "regaríais" ;--# notpresent
    VP (Cond Pl P3) => "regarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "riega" ;
    VP (Imp Sg P3) => "riegue" ;
    VP (Imp Pl P1) => "reguemos" ;
    VP (Imp Pl P2) => "regad" ;
    VP (Imp Pl P3) => "rieguen" ;
    VP (Pass Sg Masc) => "regado" ;
    VP (Pass Sg Fem) => "regada" ;
    VP (Pass Pl Masc) => "regados" ;
    VP (Pass Pl Fem) => "regadas"
    }
  } ;

lin renegar_V = verboV 
 {s = table {
    VI Infn => "renegar" ;
    VI Ger => "renegando" ;
    VI Part => "renegado" ;
    VP (Pres Ind Sg P1) => "reniego" ;
    VP (Pres Ind Sg P2) => "reniegas" ;
    VP (Pres Ind Sg P3) => "reniega" ;
    VP (Pres Ind Pl P1) => "renegamos" ;
    VP (Pres Ind Pl P2) => "renegáis" ;
    VP (Pres Ind Pl P3) => "reniegan" ;
    VP (Pres Subj Sg P1) => "reniegue" ;
    VP (Pres Subj Sg P2) => "reniegues" ;
    VP (Pres Subj Sg P3) => "reniegue" ;
    VP (Pres Subj Pl P1) => "reneguemos" ;
    VP (Pres Subj Pl P2) => "reneguéis" ;
    VP (Pres Subj Pl P3) => "renieguen" ;
    VP (Impf Ind Sg P1) => "renegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "renegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "renegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "renegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "renegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "renegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"renegara" ; "renegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"renegaras" ; "renegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"renegara" ; "renegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"renegáramos" ; "renegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"renegarais" ; "renegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"renegaran" ; "renegasen"} ;--# notpresent
    VP (Pret Sg P1) => "renegué" ;--# notpresent
    VP (Pret Sg P2) => "renegaste" ;--# notpresent
    VP (Pret Sg P3) => "renegó" ;--# notpresent
    VP (Pret Pl P1) => "renegamos" ;--# notpresent
    VP (Pret Pl P2) => "renegasteis" ;--# notpresent
    VP (Pret Pl P3) => "renegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "renegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "renegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "renegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "renegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "renegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "renegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "renegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "renegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "renegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "renegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "renegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "renegaren" ;--# notpresent
    VP (Cond Sg P1) => "renegaría" ;--# notpresent
    VP (Cond Sg P2) => "renegarías" ;--# notpresent
    VP (Cond Sg P3) => "renegaría" ;--# notpresent
    VP (Cond Pl P1) => "renegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "renegaríais" ;--# notpresent
    VP (Cond Pl P3) => "renegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reniega" ;
    VP (Imp Sg P3) => "reniegue" ;
    VP (Imp Pl P1) => "reneguemos" ;
    VP (Imp Pl P2) => "renegad" ;
    VP (Imp Pl P3) => "renieguen" ;
    VP (Pass Sg Masc) => "renegado" ;
    VP (Pass Sg Fem) => "renegada" ;
    VP (Pass Pl Masc) => "renegados" ;
    VP (Pass Pl Fem) => "renegadas"
    }
  } ;

lin replegar_V = verboV 
 {s = table {
    VI Infn => "replegar" ;
    VI Ger => "replegando" ;
    VI Part => "replegado" ;
    VP (Pres Ind Sg P1) => "repliego" ;
    VP (Pres Ind Sg P2) => "repliegas" ;
    VP (Pres Ind Sg P3) => "repliega" ;
    VP (Pres Ind Pl P1) => "replegamos" ;
    VP (Pres Ind Pl P2) => "replegáis" ;
    VP (Pres Ind Pl P3) => "repliegan" ;
    VP (Pres Subj Sg P1) => "repliegue" ;
    VP (Pres Subj Sg P2) => "repliegues" ;
    VP (Pres Subj Sg P3) => "repliegue" ;
    VP (Pres Subj Pl P1) => "repleguemos" ;
    VP (Pres Subj Pl P2) => "repleguéis" ;
    VP (Pres Subj Pl P3) => "replieguen" ;
    VP (Impf Ind Sg P1) => "replegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "replegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "replegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "replegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "replegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "replegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"replegara" ; "replegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"replegaras" ; "replegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"replegara" ; "replegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"replegáramos" ; "replegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"replegarais" ; "replegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"replegaran" ; "replegasen"} ;--# notpresent
    VP (Pret Sg P1) => "replegué" ;--# notpresent
    VP (Pret Sg P2) => "replegaste" ;--# notpresent
    VP (Pret Sg P3) => "replegó" ;--# notpresent
    VP (Pret Pl P1) => "replegamos" ;--# notpresent
    VP (Pret Pl P2) => "replegasteis" ;--# notpresent
    VP (Pret Pl P3) => "replegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "replegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "replegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "replegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "replegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "replegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "replegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "replegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "replegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "replegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "replegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "replegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "replegaren" ;--# notpresent
    VP (Cond Sg P1) => "replegaría" ;--# notpresent
    VP (Cond Sg P2) => "replegarías" ;--# notpresent
    VP (Cond Sg P3) => "replegaría" ;--# notpresent
    VP (Cond Pl P1) => "replegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "replegaríais" ;--# notpresent
    VP (Cond Pl P3) => "replegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "repliega" ;
    VP (Imp Sg P3) => "repliegue" ;
    VP (Imp Pl P1) => "repleguemos" ;
    VP (Imp Pl P2) => "replegad" ;
    VP (Imp Pl P3) => "replieguen" ;
    VP (Pass Sg Masc) => "replegado" ;
    VP (Pass Sg Fem) => "replegada" ;
    VP (Pass Pl Masc) => "replegados" ;
    VP (Pass Pl Fem) => "replegadas"
    }
  } ;

lin resegar_V = verboV 
 {s = table {
    VI Infn => "resegar" ;
    VI Ger => "resegando" ;
    VI Part => "resegado" ;
    VP (Pres Ind Sg P1) => "resiego" ;
    VP (Pres Ind Sg P2) => "resiegas" ;
    VP (Pres Ind Sg P3) => "resiega" ;
    VP (Pres Ind Pl P1) => "resegamos" ;
    VP (Pres Ind Pl P2) => "resegáis" ;
    VP (Pres Ind Pl P3) => "resiegan" ;
    VP (Pres Subj Sg P1) => "resiegue" ;
    VP (Pres Subj Sg P2) => "resiegues" ;
    VP (Pres Subj Sg P3) => "resiegue" ;
    VP (Pres Subj Pl P1) => "reseguemos" ;
    VP (Pres Subj Pl P2) => "reseguéis" ;
    VP (Pres Subj Pl P3) => "resieguen" ;
    VP (Impf Ind Sg P1) => "resegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "resegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "resegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "resegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resegara" ; "resegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resegaras" ; "resegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resegara" ; "resegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resegáramos" ; "resegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resegarais" ; "resegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resegaran" ; "resegasen"} ;--# notpresent
    VP (Pret Sg P1) => "resegué" ;--# notpresent
    VP (Pret Sg P2) => "resegaste" ;--# notpresent
    VP (Pret Sg P3) => "resegó" ;--# notpresent
    VP (Pret Pl P1) => "resegamos" ;--# notpresent
    VP (Pret Pl P2) => "resegasteis" ;--# notpresent
    VP (Pret Pl P3) => "resegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "resegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "resegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "resegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "resegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resegaren" ;--# notpresent
    VP (Cond Sg P1) => "resegaría" ;--# notpresent
    VP (Cond Sg P2) => "resegarías" ;--# notpresent
    VP (Cond Sg P3) => "resegaría" ;--# notpresent
    VP (Cond Pl P1) => "resegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "resegaríais" ;--# notpresent
    VP (Cond Pl P3) => "resegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resiega" ;
    VP (Imp Sg P3) => "resiegue" ;
    VP (Imp Pl P1) => "reseguemos" ;
    VP (Imp Pl P2) => "resegad" ;
    VP (Imp Pl P3) => "resieguen" ;
    VP (Pass Sg Masc) => "resegado" ;
    VP (Pass Sg Fem) => "resegada" ;
    VP (Pass Pl Masc) => "resegados" ;
    VP (Pass Pl Fem) => "resegadas"
    }
  } ;

lin restregar_V = verboV 
 {s = table {
    VI Infn => "restregar" ;
    VI Ger => "restregando" ;
    VI Part => "restregado" ;
    VP (Pres Ind Sg P1) => "restriego" ;
    VP (Pres Ind Sg P2) => "restriegas" ;
    VP (Pres Ind Sg P3) => "restriega" ;
    VP (Pres Ind Pl P1) => "restregamos" ;
    VP (Pres Ind Pl P2) => "restregáis" ;
    VP (Pres Ind Pl P3) => "restriegan" ;
    VP (Pres Subj Sg P1) => "restriegue" ;
    VP (Pres Subj Sg P2) => "restriegues" ;
    VP (Pres Subj Sg P3) => "restriegue" ;
    VP (Pres Subj Pl P1) => "restreguemos" ;
    VP (Pres Subj Pl P2) => "restreguéis" ;
    VP (Pres Subj Pl P3) => "restrieguen" ;
    VP (Impf Ind Sg P1) => "restregaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "restregabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "restregaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "restregábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "restregabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "restregaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"restregara" ; "restregase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"restregaras" ; "restregases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"restregara" ; "restregase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"restregáramos" ; "restregásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"restregarais" ; "restregaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"restregaran" ; "restregasen"} ;--# notpresent
    VP (Pret Sg P1) => "restregué" ;--# notpresent
    VP (Pret Sg P2) => "restregaste" ;--# notpresent
    VP (Pret Sg P3) => "restregó" ;--# notpresent
    VP (Pret Pl P1) => "restregamos" ;--# notpresent
    VP (Pret Pl P2) => "restregasteis" ;--# notpresent
    VP (Pret Pl P3) => "restregaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "restregaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "restregarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "restregará" ;--# notpresent
    VP (Fut Ind Pl P1) => "restregaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "restregaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "restregarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "restregare" ;--# notpresent
    VP (Fut Subj Sg P2) => "restregares" ;--# notpresent
    VP (Fut Subj Sg P3) => "restregare" ;--# notpresent
    VP (Fut Subj Pl P1) => "restregáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "restregareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "restregaren" ;--# notpresent
    VP (Cond Sg P1) => "restregaría" ;--# notpresent
    VP (Cond Sg P2) => "restregarías" ;--# notpresent
    VP (Cond Sg P3) => "restregaría" ;--# notpresent
    VP (Cond Pl P1) => "restregaríamos" ;--# notpresent
    VP (Cond Pl P2) => "restregaríais" ;--# notpresent
    VP (Cond Pl P3) => "restregarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "restriega" ;
    VP (Imp Sg P3) => "restriegue" ;
    VP (Imp Pl P1) => "restreguemos" ;
    VP (Imp Pl P2) => "restregad" ;
    VP (Imp Pl P3) => "restrieguen" ;
    VP (Pass Sg Masc) => "restregado" ;
    VP (Pass Sg Fem) => "restregada" ;
    VP (Pass Pl Masc) => "restregados" ;
    VP (Pass Pl Fem) => "restregadas"
    }
  } ;

lin revolcar_V = verboV 
 {s = table {
    VI Infn => "revolcar" ;
    VI Ger => "revolcando" ;
    VI Part => "revolcado" ;
    VP (Pres Ind Sg P1) => "revuelco" ;
    VP (Pres Ind Sg P2) => "revuelcas" ;
    VP (Pres Ind Sg P3) => "revuelca" ;
    VP (Pres Ind Pl P1) => "revolcamos" ;
    VP (Pres Ind Pl P2) => "revolcáis" ;
    VP (Pres Ind Pl P3) => "revuelcan" ;
    VP (Pres Subj Sg P1) => "revuelque" ;
    VP (Pres Subj Sg P2) => "revuelques" ;
    VP (Pres Subj Sg P3) => "revuelque" ;
    VP (Pres Subj Pl P1) => "revolquemos" ;
    VP (Pres Subj Pl P2) => "revolquéis" ;
    VP (Pres Subj Pl P3) => "revuelquen" ;
    VP (Impf Ind Sg P1) => "revolcaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "revolcabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "revolcaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "revolcábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revolcabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revolcaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revolcara" ; "revolcase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revolcaras" ; "revolcases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revolcara" ; "revolcase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revolcáramos" ; "revolcásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revolcarais" ; "revolcaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revolcaran" ; "revolcasen"} ;--# notpresent
    VP (Pret Sg P1) => "revolqué" ;--# notpresent
    VP (Pret Sg P2) => "revolcaste" ;--# notpresent
    VP (Pret Sg P3) => "revolcó" ;--# notpresent
    VP (Pret Pl P1) => "revolcamos" ;--# notpresent
    VP (Pret Pl P2) => "revolcasteis" ;--# notpresent
    VP (Pret Pl P3) => "revolcaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revolcaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revolcarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revolcará" ;--# notpresent
    VP (Fut Ind Pl P1) => "revolcaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revolcaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revolcarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revolcare" ;--# notpresent
    VP (Fut Subj Sg P2) => "revolcares" ;--# notpresent
    VP (Fut Subj Sg P3) => "revolcare" ;--# notpresent
    VP (Fut Subj Pl P1) => "revolcáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revolcareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revolcaren" ;--# notpresent
    VP (Cond Sg P1) => "revolcaría" ;--# notpresent
    VP (Cond Sg P2) => "revolcarías" ;--# notpresent
    VP (Cond Sg P3) => "revolcaría" ;--# notpresent
    VP (Cond Pl P1) => "revolcaríamos" ;--# notpresent
    VP (Cond Pl P2) => "revolcaríais" ;--# notpresent
    VP (Cond Pl P3) => "revolcarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revuelca" ;
    VP (Imp Sg P3) => "revuelque" ;
    VP (Imp Pl P1) => "revolquemos" ;
    VP (Imp Pl P2) => "revolcad" ;
    VP (Imp Pl P3) => "revuelquen" ;
    VP (Pass Sg Masc) => "revolcado" ;
    VP (Pass Sg Fem) => "revolcada" ;
    VP (Pass Pl Masc) => "revolcados" ;
    VP (Pass Pl Fem) => "revolcadas"
    }
  } ;

lin rogar_V = verboV 
 {s = table {
    VI Infn => "rogar" ;
    VI Ger => "rogando" ;
    VI Part => "rogado" ;
    VP (Pres Ind Sg P1) => "ruego" ;
    VP (Pres Ind Sg P2) => "ruegas" ;
    VP (Pres Ind Sg P3) => "ruega" ;
    VP (Pres Ind Pl P1) => "rogamos" ;
    VP (Pres Ind Pl P2) => "rogáis" ;
    VP (Pres Ind Pl P3) => "ruegan" ;
    VP (Pres Subj Sg P1) => "ruegue" ;
    VP (Pres Subj Sg P2) => "ruegues" ;
    VP (Pres Subj Sg P3) => "ruegue" ;
    VP (Pres Subj Pl P1) => "roguemos" ;
    VP (Pres Subj Pl P2) => "roguéis" ;
    VP (Pres Subj Pl P3) => "rueguen" ;
    VP (Impf Ind Sg P1) => "rogaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "rogabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "rogaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "rogábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rogabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rogaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rogara" ; "rogase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rogaras" ; "rogases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rogara" ; "rogase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rogáramos" ; "rogásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rogarais" ; "rogaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rogaran" ; "rogasen"} ;--# notpresent
    VP (Pret Sg P1) => "rogué" ;--# notpresent
    VP (Pret Sg P2) => "rogaste" ;--# notpresent
    VP (Pret Sg P3) => "rogó" ;--# notpresent
    VP (Pret Pl P1) => "rogamos" ;--# notpresent
    VP (Pret Pl P2) => "rogasteis" ;--# notpresent
    VP (Pret Pl P3) => "rogaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rogaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rogarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rogará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rogaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rogaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rogarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rogare" ;--# notpresent
    VP (Fut Subj Sg P2) => "rogares" ;--# notpresent
    VP (Fut Subj Sg P3) => "rogare" ;--# notpresent
    VP (Fut Subj Pl P1) => "rogáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rogareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rogaren" ;--# notpresent
    VP (Cond Sg P1) => "rogaría" ;--# notpresent
    VP (Cond Sg P2) => "rogarías" ;--# notpresent
    VP (Cond Sg P3) => "rogaría" ;--# notpresent
    VP (Cond Pl P1) => "rogaríamos" ;--# notpresent
    VP (Cond Pl P2) => "rogaríais" ;--# notpresent
    VP (Cond Pl P3) => "rogarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ruega" ;
    VP (Imp Sg P3) => "ruegue" ;
    VP (Imp Pl P1) => "roguemos" ;
    VP (Imp Pl P2) => "rogad" ;
    VP (Imp Pl P3) => "rueguen" ;
    VP (Pass Sg Masc) => "rogado" ;
    VP (Pass Sg Fem) => "rogada" ;
    VP (Pass Pl Masc) => "rogados" ;
    VP (Pass Pl Fem) => "rogadas"
    }
  } ;

lin segar_V = verboV 
 {s = table {
    VI Infn => "segar" ;
    VI Ger => "segando" ;
    VI Part => "segado" ;
    VP (Pres Ind Sg P1) => "siego" ;
    VP (Pres Ind Sg P2) => "siegas" ;
    VP (Pres Ind Sg P3) => "siega" ;
    VP (Pres Ind Pl P1) => "segamos" ;
    VP (Pres Ind Pl P2) => "segáis" ;
    VP (Pres Ind Pl P3) => "siegan" ;
    VP (Pres Subj Sg P1) => "siegue" ;
    VP (Pres Subj Sg P2) => "siegues" ;
    VP (Pres Subj Sg P3) => "siegue" ;
    VP (Pres Subj Pl P1) => "seguemos" ;
    VP (Pres Subj Pl P2) => "seguéis" ;
    VP (Pres Subj Pl P3) => "sieguen" ;
    VP (Impf Ind Sg P1) => "segaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "segabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "segaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "segábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "segabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "segaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"segara" ; "segase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"segaras" ; "segases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"segara" ; "segase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"segáramos" ; "segásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"segarais" ; "segaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"segaran" ; "segasen"} ;--# notpresent
    VP (Pret Sg P1) => "segué" ;--# notpresent
    VP (Pret Sg P2) => "segaste" ;--# notpresent
    VP (Pret Sg P3) => "segó" ;--# notpresent
    VP (Pret Pl P1) => "segamos" ;--# notpresent
    VP (Pret Pl P2) => "segasteis" ;--# notpresent
    VP (Pret Pl P3) => "segaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "segaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "segarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "segará" ;--# notpresent
    VP (Fut Ind Pl P1) => "segaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "segaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "segarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "segare" ;--# notpresent
    VP (Fut Subj Sg P2) => "segares" ;--# notpresent
    VP (Fut Subj Sg P3) => "segare" ;--# notpresent
    VP (Fut Subj Pl P1) => "segáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "segareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "segaren" ;--# notpresent
    VP (Cond Sg P1) => "segaría" ;--# notpresent
    VP (Cond Sg P2) => "segarías" ;--# notpresent
    VP (Cond Sg P3) => "segaría" ;--# notpresent
    VP (Cond Pl P1) => "segaríamos" ;--# notpresent
    VP (Cond Pl P2) => "segaríais" ;--# notpresent
    VP (Cond Pl P3) => "segarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "siega" ;
    VP (Imp Sg P3) => "siegue" ;
    VP (Imp Pl P1) => "seguemos" ;
    VP (Imp Pl P2) => "segad" ;
    VP (Imp Pl P3) => "sieguen" ;
    VP (Pass Sg Masc) => "segado" ;
    VP (Pass Sg Fem) => "segada" ;
    VP (Pass Pl Masc) => "segados" ;
    VP (Pass Pl Fem) => "segadas"
    }
  } ;

lin sorregar_V = verboV 
 {s = table {
    VI Infn => "sorregar" ;
    VI Ger => "sorregando" ;
    VI Part => "sorregado" ;
    VP (Pres Ind Sg P1) => "sorriego" ;
    VP (Pres Ind Sg P2) => "sorriegas" ;
    VP (Pres Ind Sg P3) => "sorriega" ;
    VP (Pres Ind Pl P1) => "sorregamos" ;
    VP (Pres Ind Pl P2) => "sorregáis" ;
    VP (Pres Ind Pl P3) => "sorriegan" ;
    VP (Pres Subj Sg P1) => "sorriegue" ;
    VP (Pres Subj Sg P2) => "sorriegues" ;
    VP (Pres Subj Sg P3) => "sorriegue" ;
    VP (Pres Subj Pl P1) => "sorreguemos" ;
    VP (Pres Subj Pl P2) => "sorreguéis" ;
    VP (Pres Subj Pl P3) => "sorrieguen" ;
    VP (Impf Ind Sg P1) => "sorregaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sorregabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sorregaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sorregábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sorregabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sorregaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sorregara" ; "sorregase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sorregaras" ; "sorregases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sorregara" ; "sorregase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sorregáramos" ; "sorregásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sorregarais" ; "sorregaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sorregaran" ; "sorregasen"} ;--# notpresent
    VP (Pret Sg P1) => "sorregué" ;--# notpresent
    VP (Pret Sg P2) => "sorregaste" ;--# notpresent
    VP (Pret Sg P3) => "sorregó" ;--# notpresent
    VP (Pret Pl P1) => "sorregamos" ;--# notpresent
    VP (Pret Pl P2) => "sorregasteis" ;--# notpresent
    VP (Pret Pl P3) => "sorregaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sorregaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sorregarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sorregará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sorregaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sorregaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sorregarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sorregare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sorregares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sorregare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sorregáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sorregareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sorregaren" ;--# notpresent
    VP (Cond Sg P1) => "sorregaría" ;--# notpresent
    VP (Cond Sg P2) => "sorregarías" ;--# notpresent
    VP (Cond Sg P3) => "sorregaría" ;--# notpresent
    VP (Cond Pl P1) => "sorregaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sorregaríais" ;--# notpresent
    VP (Cond Pl P3) => "sorregarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sorriega" ;
    VP (Imp Sg P3) => "sorriegue" ;
    VP (Imp Pl P1) => "sorreguemos" ;
    VP (Imp Pl P2) => "sorregad" ;
    VP (Imp Pl P3) => "sorrieguen" ;
    VP (Pass Sg Masc) => "sorregado" ;
    VP (Pass Sg Fem) => "sorregada" ;
    VP (Pass Pl Masc) => "sorregados" ;
    VP (Pass Pl Fem) => "sorregadas"
    }
  } ;

lin sosegar_V = verboV 
 {s = table {
    VI Infn => "sosegar" ;
    VI Ger => "sosegando" ;
    VI Part => "sosegado" ;
    VP (Pres Ind Sg P1) => "sosiego" ;
    VP (Pres Ind Sg P2) => "sosiegas" ;
    VP (Pres Ind Sg P3) => "sosiega" ;
    VP (Pres Ind Pl P1) => "sosegamos" ;
    VP (Pres Ind Pl P2) => "sosegáis" ;
    VP (Pres Ind Pl P3) => "sosiegan" ;
    VP (Pres Subj Sg P1) => "sosiegue" ;
    VP (Pres Subj Sg P2) => "sosiegues" ;
    VP (Pres Subj Sg P3) => "sosiegue" ;
    VP (Pres Subj Pl P1) => "soseguemos" ;
    VP (Pres Subj Pl P2) => "soseguéis" ;
    VP (Pres Subj Pl P3) => "sosieguen" ;
    VP (Impf Ind Sg P1) => "sosegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sosegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sosegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sosegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sosegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sosegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sosegara" ; "sosegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sosegaras" ; "sosegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sosegara" ; "sosegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sosegáramos" ; "sosegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sosegarais" ; "sosegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sosegaran" ; "sosegasen"} ;--# notpresent
    VP (Pret Sg P1) => "sosegué" ;--# notpresent
    VP (Pret Sg P2) => "sosegaste" ;--# notpresent
    VP (Pret Sg P3) => "sosegó" ;--# notpresent
    VP (Pret Pl P1) => "sosegamos" ;--# notpresent
    VP (Pret Pl P2) => "sosegasteis" ;--# notpresent
    VP (Pret Pl P3) => "sosegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sosegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sosegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sosegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sosegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sosegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sosegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sosegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sosegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sosegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sosegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sosegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sosegaren" ;--# notpresent
    VP (Cond Sg P1) => "sosegaría" ;--# notpresent
    VP (Cond Sg P2) => "sosegarías" ;--# notpresent
    VP (Cond Sg P3) => "sosegaría" ;--# notpresent
    VP (Cond Pl P1) => "sosegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sosegaríais" ;--# notpresent
    VP (Cond Pl P3) => "sosegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sosiega" ;
    VP (Imp Sg P3) => "sosiegue" ;
    VP (Imp Pl P1) => "soseguemos" ;
    VP (Imp Pl P2) => "sosegad" ;
    VP (Imp Pl P3) => "sosieguen" ;
    VP (Pass Sg Masc) => "sosegado" ;
    VP (Pass Sg Fem) => "sosegada" ;
    VP (Pass Pl Masc) => "sosegados" ;
    VP (Pass Pl Fem) => "sosegadas"
    }
  } ;

lin trasegar_V = verboV 
 {s = table {
    VI Infn => "trasegar" ;
    VI Ger => "trasegando" ;
    VI Part => "trasegado" ;
    VP (Pres Ind Sg P1) => "trasiego" ;
    VP (Pres Ind Sg P2) => "trasiegas" ;
    VP (Pres Ind Sg P3) => "trasiega" ;
    VP (Pres Ind Pl P1) => "trasegamos" ;
    VP (Pres Ind Pl P2) => "trasegáis" ;
    VP (Pres Ind Pl P3) => "trasiegan" ;
    VP (Pres Subj Sg P1) => "trasiegue" ;
    VP (Pres Subj Sg P2) => "trasiegues" ;
    VP (Pres Subj Sg P3) => "trasiegue" ;
    VP (Pres Subj Pl P1) => "traseguemos" ;
    VP (Pres Subj Pl P2) => "traseguéis" ;
    VP (Pres Subj Pl P3) => "trasieguen" ;
    VP (Impf Ind Sg P1) => "trasegaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasegabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasegaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasegábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasegabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasegaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasegara" ; "trasegase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasegaras" ; "trasegases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasegara" ; "trasegase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasegáramos" ; "trasegásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasegarais" ; "trasegaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasegaran" ; "trasegasen"} ;--# notpresent
    VP (Pret Sg P1) => "trasegué" ;--# notpresent
    VP (Pret Sg P2) => "trasegaste" ;--# notpresent
    VP (Pret Sg P3) => "trasegó" ;--# notpresent
    VP (Pret Pl P1) => "trasegamos" ;--# notpresent
    VP (Pret Pl P2) => "trasegasteis" ;--# notpresent
    VP (Pret Pl P3) => "trasegaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasegaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasegarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasegará" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasegaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasegaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasegarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasegare" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasegares" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasegare" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasegáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasegareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasegaren" ;--# notpresent
    VP (Cond Sg P1) => "trasegaría" ;--# notpresent
    VP (Cond Sg P2) => "trasegarías" ;--# notpresent
    VP (Cond Sg P3) => "trasegaría" ;--# notpresent
    VP (Cond Pl P1) => "trasegaríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasegaríais" ;--# notpresent
    VP (Cond Pl P3) => "trasegarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasiega" ;
    VP (Imp Sg P3) => "trasiegue" ;
    VP (Imp Pl P1) => "traseguemos" ;
    VP (Imp Pl P2) => "trasegad" ;
    VP (Imp Pl P3) => "trasieguen" ;
    VP (Pass Sg Masc) => "trasegado" ;
    VP (Pass Sg Fem) => "trasegada" ;
    VP (Pass Pl Masc) => "trasegados" ;
    VP (Pass Pl Fem) => "trasegadas"
    }
  } ;

lin trasfregar_V = verboV 
 {s = table {
    VI Infn => "trasfregar" ;
    VI Ger => "trasfregando" ;
    VI Part => "trasfregado" ;
    VP (Pres Ind Sg P1) => "trasfriego" ;
    VP (Pres Ind Sg P2) => "trasfriegas" ;
    VP (Pres Ind Sg P3) => "trasfriega" ;
    VP (Pres Ind Pl P1) => "trasfregamos" ;
    VP (Pres Ind Pl P2) => "trasfregáis" ;
    VP (Pres Ind Pl P3) => "trasfriegan" ;
    VP (Pres Subj Sg P1) => "trasfriegue" ;
    VP (Pres Subj Sg P2) => "trasfriegues" ;
    VP (Pres Subj Sg P3) => "trasfriegue" ;
    VP (Pres Subj Pl P1) => "trasfreguemos" ;
    VP (Pres Subj Pl P2) => "trasfreguéis" ;
    VP (Pres Subj Pl P3) => "trasfrieguen" ;
    VP (Impf Ind Sg P1) => "trasfregaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasfregabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasfregaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasfregábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasfregabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasfregaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasfregara" ; "trasfregase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasfregaras" ; "trasfregases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasfregara" ; "trasfregase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasfregáramos" ; "trasfregásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasfregarais" ; "trasfregaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasfregaran" ; "trasfregasen"} ;--# notpresent
    VP (Pret Sg P1) => "trasfregué" ;--# notpresent
    VP (Pret Sg P2) => "trasfregaste" ;--# notpresent
    VP (Pret Sg P3) => "trasfregó" ;--# notpresent
    VP (Pret Pl P1) => "trasfregamos" ;--# notpresent
    VP (Pret Pl P2) => "trasfregasteis" ;--# notpresent
    VP (Pret Pl P3) => "trasfregaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasfregaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasfregarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasfregará" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasfregaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasfregaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasfregarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasfregare" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasfregares" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasfregare" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasfregáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasfregareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasfregaren" ;--# notpresent
    VP (Cond Sg P1) => "trasfregaría" ;--# notpresent
    VP (Cond Sg P2) => "trasfregarías" ;--# notpresent
    VP (Cond Sg P3) => "trasfregaría" ;--# notpresent
    VP (Cond Pl P1) => "trasfregaríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasfregaríais" ;--# notpresent
    VP (Cond Pl P3) => "trasfregarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasfriega" ;
    VP (Imp Sg P3) => "trasfriegue" ;
    VP (Imp Pl P1) => "trasfreguemos" ;
    VP (Imp Pl P2) => "trasfregad" ;
    VP (Imp Pl P3) => "trasfrieguen" ;
    VP (Pass Sg Masc) => "trasfregado" ;
    VP (Pass Sg Fem) => "trasfregada" ;
    VP (Pass Pl Masc) => "trasfregados" ;
    VP (Pass Pl Fem) => "trasfregadas"
    }
  } ;

lin trastrocar_V = verboV 
 {s = table {
    VI Infn => "trastrocar" ;
    VI Ger => "trastrocando" ;
    VI Part => "trastrocado" ;
    VP (Pres Ind Sg P1) => "trastrueco" ;
    VP (Pres Ind Sg P2) => "trastruecas" ;
    VP (Pres Ind Sg P3) => "trastrueca" ;
    VP (Pres Ind Pl P1) => "trastrocamos" ;
    VP (Pres Ind Pl P2) => "trastrocáis" ;
    VP (Pres Ind Pl P3) => "trastruecan" ;
    VP (Pres Subj Sg P1) => "trastrueque" ;
    VP (Pres Subj Sg P2) => "trastrueques" ;
    VP (Pres Subj Sg P3) => "trastrueque" ;
    VP (Pres Subj Pl P1) => "trastroquemos" ;
    VP (Pres Subj Pl P2) => "trastroquéis" ;
    VP (Pres Subj Pl P3) => "trastruequen" ;
    VP (Impf Ind Sg P1) => "trastrocaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "trastrocabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "trastrocaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "trastrocábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trastrocabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trastrocaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trastrocara" ; "trastrocase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trastrocaras" ; "trastrocases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trastrocara" ; "trastrocase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trastrocáramos" ; "trastrocásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trastrocarais" ; "trastrocaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trastrocaran" ; "trastrocasen"} ;--# notpresent
    VP (Pret Sg P1) => "trastroqué" ;--# notpresent
    VP (Pret Sg P2) => "trastrocaste" ;--# notpresent
    VP (Pret Sg P3) => "trastrocó" ;--# notpresent
    VP (Pret Pl P1) => "trastrocamos" ;--# notpresent
    VP (Pret Pl P2) => "trastrocasteis" ;--# notpresent
    VP (Pret Pl P3) => "trastrocaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trastrocaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trastrocarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trastrocará" ;--# notpresent
    VP (Fut Ind Pl P1) => "trastrocaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trastrocaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trastrocarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trastrocare" ;--# notpresent
    VP (Fut Subj Sg P2) => "trastrocares" ;--# notpresent
    VP (Fut Subj Sg P3) => "trastrocare" ;--# notpresent
    VP (Fut Subj Pl P1) => "trastrocáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trastrocareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trastrocaren" ;--# notpresent
    VP (Cond Sg P1) => "trastrocaría" ;--# notpresent
    VP (Cond Sg P2) => "trastrocarías" ;--# notpresent
    VP (Cond Sg P3) => "trastrocaría" ;--# notpresent
    VP (Cond Pl P1) => "trastrocaríamos" ;--# notpresent
    VP (Cond Pl P2) => "trastrocaríais" ;--# notpresent
    VP (Cond Pl P3) => "trastrocarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trastrueca" ;
    VP (Imp Sg P3) => "trastrueque" ;
    VP (Imp Pl P1) => "trastroquemos" ;
    VP (Imp Pl P2) => "trastrocad" ;
    VP (Imp Pl P3) => "trastruequen" ;
    VP (Pass Sg Masc) => "trastrocado" ;
    VP (Pass Sg Fem) => "trastrocada" ;
    VP (Pass Pl Masc) => "trastrocados" ;
    VP (Pass Pl Fem) => "trastrocadas"
    }
  } ;

lin trocar_V = verboV 
 {s = table {
    VI Infn => "trocar" ;
    VI Ger => "trocando" ;
    VI Part => "trocado" ;
    VP (Pres Ind Sg P1) => "trueco" ;
    VP (Pres Ind Sg P2) => "truecas" ;
    VP (Pres Ind Sg P3) => "trueca" ;
    VP (Pres Ind Pl P1) => "trocamos" ;
    VP (Pres Ind Pl P2) => "trocáis" ;
    VP (Pres Ind Pl P3) => "truecan" ;
    VP (Pres Subj Sg P1) => "trueque" ;
    VP (Pres Subj Sg P2) => "trueques" ;
    VP (Pres Subj Sg P3) => "trueque" ;
    VP (Pres Subj Pl P1) => "troquemos" ;
    VP (Pres Subj Pl P2) => "troquéis" ;
    VP (Pres Subj Pl P3) => "truequen" ;
    VP (Impf Ind Sg P1) => "trocaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "trocabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "trocaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "trocábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trocabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trocaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trocara" ; "trocase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trocaras" ; "trocases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trocara" ; "trocase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trocáramos" ; "trocásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trocarais" ; "trocaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trocaran" ; "trocasen"} ;--# notpresent
    VP (Pret Sg P1) => "troqué" ;--# notpresent
    VP (Pret Sg P2) => "trocaste" ;--# notpresent
    VP (Pret Sg P3) => "trocó" ;--# notpresent
    VP (Pret Pl P1) => "trocamos" ;--# notpresent
    VP (Pret Pl P2) => "trocasteis" ;--# notpresent
    VP (Pret Pl P3) => "trocaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trocaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trocarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trocará" ;--# notpresent
    VP (Fut Ind Pl P1) => "trocaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trocaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trocarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trocare" ;--# notpresent
    VP (Fut Subj Sg P2) => "trocares" ;--# notpresent
    VP (Fut Subj Sg P3) => "trocare" ;--# notpresent
    VP (Fut Subj Pl P1) => "trocáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trocareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trocaren" ;--# notpresent
    VP (Cond Sg P1) => "trocaría" ;--# notpresent
    VP (Cond Sg P2) => "trocarías" ;--# notpresent
    VP (Cond Sg P3) => "trocaría" ;--# notpresent
    VP (Cond Pl P1) => "trocaríamos" ;--# notpresent
    VP (Cond Pl P2) => "trocaríais" ;--# notpresent
    VP (Cond Pl P3) => "trocarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trueca" ;
    VP (Imp Sg P3) => "trueque" ;
    VP (Imp Pl P1) => "troquemos" ;
    VP (Imp Pl P2) => "trocad" ;
    VP (Imp Pl P3) => "truequen" ;
    VP (Pass Sg Masc) => "trocado" ;
    VP (Pass Sg Fem) => "trocada" ;
    VP (Pass Pl Masc) => "trocados" ;
    VP (Pass Pl Fem) => "trocadas"
    }
  } ;

lin tropezar_V = verboV 
 {s = table {
    VI Infn => "tropezar" ;
    VI Ger => "tropezando" ;
    VI Part => "tropezado" ;
    VP (Pres Ind Sg P1) => "tropiezo" ;
    VP (Pres Ind Sg P2) => "tropiezas" ;
    VP (Pres Ind Sg P3) => "tropieza" ;
    VP (Pres Ind Pl P1) => "tropezamos" ;
    VP (Pres Ind Pl P2) => "tropezáis" ;
    VP (Pres Ind Pl P3) => "tropiezan" ;
    VP (Pres Subj Sg P1) => "tropiece" ;
    VP (Pres Subj Sg P2) => "tropieces" ;
    VP (Pres Subj Sg P3) => "tropiece" ;
    VP (Pres Subj Pl P1) => "tropecemos" ;
    VP (Pres Subj Pl P2) => "tropecéis" ;
    VP (Pres Subj Pl P3) => "tropiecen" ;
    VP (Impf Ind Sg P1) => "tropezaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "tropezabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "tropezaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "tropezábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tropezabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tropezaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tropezara" ; "tropezase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tropezaras" ; "tropezases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tropezara" ; "tropezase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tropezáramos" ; "tropezásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tropezarais" ; "tropezaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tropezaran" ; "tropezasen"} ;--# notpresent
    VP (Pret Sg P1) => "tropecé" ;--# notpresent
    VP (Pret Sg P2) => "tropezaste" ;--# notpresent
    VP (Pret Sg P3) => "tropezó" ;--# notpresent
    VP (Pret Pl P1) => "tropezamos" ;--# notpresent
    VP (Pret Pl P2) => "tropezasteis" ;--# notpresent
    VP (Pret Pl P3) => "tropezaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tropezaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tropezarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tropezará" ;--# notpresent
    VP (Fut Ind Pl P1) => "tropezaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tropezaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tropezarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tropezare" ;--# notpresent
    VP (Fut Subj Sg P2) => "tropezares" ;--# notpresent
    VP (Fut Subj Sg P3) => "tropezare" ;--# notpresent
    VP (Fut Subj Pl P1) => "tropezáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tropezareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tropezaren" ;--# notpresent
    VP (Cond Sg P1) => "tropezaría" ;--# notpresent
    VP (Cond Sg P2) => "tropezarías" ;--# notpresent
    VP (Cond Sg P3) => "tropezaría" ;--# notpresent
    VP (Cond Pl P1) => "tropezaríamos" ;--# notpresent
    VP (Cond Pl P2) => "tropezaríais" ;--# notpresent
    VP (Cond Pl P3) => "tropezarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tropieza" ;
    VP (Imp Sg P3) => "tropiece" ;
    VP (Imp Pl P1) => "tropecemos" ;
    VP (Imp Pl P2) => "tropezad" ;
    VP (Imp Pl P3) => "tropiecen" ;
    VP (Pass Sg Masc) => "tropezado" ;
    VP (Pass Sg Fem) => "tropezada" ;
    VP (Pass Pl Masc) => "tropezados" ;
    VP (Pass Pl Fem) => "tropezadas"
    }
  } ;

lin volcar_V = verboV 
 {s = table {
    VI Infn => "volcar" ;
    VI Ger => "volcando" ;
    VI Part => "volcado" ;
    VP (Pres Ind Sg P1) => "vuelco" ;
    VP (Pres Ind Sg P2) => "vuelcas" ;
    VP (Pres Ind Sg P3) => "vuelca" ;
    VP (Pres Ind Pl P1) => "volcamos" ;
    VP (Pres Ind Pl P2) => "volcáis" ;
    VP (Pres Ind Pl P3) => "vuelcan" ;
    VP (Pres Subj Sg P1) => "vuelque" ;
    VP (Pres Subj Sg P2) => "vuelques" ;
    VP (Pres Subj Sg P3) => "vuelque" ;
    VP (Pres Subj Pl P1) => "volquemos" ;
    VP (Pres Subj Pl P2) => "volquéis" ;
    VP (Pres Subj Pl P3) => "vuelquen" ;
    VP (Impf Ind Sg P1) => "volcaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "volcabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "volcaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "volcábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "volcabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "volcaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"volcara" ; "volcase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"volcaras" ; "volcases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"volcara" ; "volcase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"volcáramos" ; "volcásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"volcarais" ; "volcaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"volcaran" ; "volcasen"} ;--# notpresent
    VP (Pret Sg P1) => "volqué" ;--# notpresent
    VP (Pret Sg P2) => "volcaste" ;--# notpresent
    VP (Pret Sg P3) => "volcó" ;--# notpresent
    VP (Pret Pl P1) => "volcamos" ;--# notpresent
    VP (Pret Pl P2) => "volcasteis" ;--# notpresent
    VP (Pret Pl P3) => "volcaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "volcaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "volcarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "volcará" ;--# notpresent
    VP (Fut Ind Pl P1) => "volcaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "volcaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "volcarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "volcare" ;--# notpresent
    VP (Fut Subj Sg P2) => "volcares" ;--# notpresent
    VP (Fut Subj Sg P3) => "volcare" ;--# notpresent
    VP (Fut Subj Pl P1) => "volcáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "volcareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "volcaren" ;--# notpresent
    VP (Cond Sg P1) => "volcaría" ;--# notpresent
    VP (Cond Sg P2) => "volcarías" ;--# notpresent
    VP (Cond Sg P3) => "volcaría" ;--# notpresent
    VP (Cond Pl P1) => "volcaríamos" ;--# notpresent
    VP (Cond Pl P2) => "volcaríais" ;--# notpresent
    VP (Cond Pl P3) => "volcarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vuelca" ;
    VP (Imp Sg P3) => "vuelque" ;
    VP (Imp Pl P1) => "volquemos" ;
    VP (Imp Pl P2) => "volcad" ;
    VP (Imp Pl P3) => "vuelquen" ;
    VP (Pass Sg Masc) => "volcado" ;
    VP (Pass Sg Fem) => "volcada" ;
    VP (Pass Pl Masc) => "volcados" ;
    VP (Pass Pl Fem) => "volcadas"
    }
  } ;

lin dar_V = verboV 
 {s = table {
    VI Infn => "dar" ;
    VI Ger => "dando" ;
    VI Part => "dado" ;
    VP (Pres Ind Sg P1) => "doy" ;
    VP (Pres Ind Sg P2) => "das" ;
    VP (Pres Ind Sg P3) => "da" ;
    VP (Pres Ind Pl P1) => "damos" ;
    VP (Pres Ind Pl P2) => "dais" ;
    VP (Pres Ind Pl P3) => "dan" ;
    VP (Pres Subj Sg P1) => "dé" ;
    VP (Pres Subj Sg P2) => "des" ;
    VP (Pres Subj Sg P3) => "dé" ;
    VP (Pres Subj Pl P1) => "demos" ;
    VP (Pres Subj Pl P2) => "deis" ;
    VP (Pres Subj Pl P3) => "den" ;
    VP (Impf Ind Sg P1) => "daba" ;--# notpresent
    VP (Impf Ind Sg P2) => "dabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "daba" ;--# notpresent
    VP (Impf Ind Pl P1) => "dábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "daban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"diera" ; "diese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dieras" ; "dieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"diera" ; "diese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"diéramos" ; "diésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dierais" ; "dieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dieran" ; "diesen"} ;--# notpresent
    VP (Pret Sg P1) => "di" ;--# notpresent
    VP (Pret Sg P2) => "diste" ;--# notpresent
    VP (Pret Sg P3) => "dio" ;--# notpresent
    VP (Pret Pl P1) => "dimos" ;--# notpresent
    VP (Pret Pl P2) => "disteis" ;--# notpresent
    VP (Pret Pl P3) => "dieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "daré" ;--# notpresent
    VP (Fut Ind Sg P2) => "darás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dará" ;--# notpresent
    VP (Fut Ind Pl P1) => "daremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "daréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "darán" ;--# notpresent
    VP (Fut Subj Sg P1) => "diere" ;--# notpresent
    VP (Fut Subj Sg P2) => "dieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "diere" ;--# notpresent
    VP (Fut Subj Pl P1) => "diéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "diereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dieren" ;--# notpresent
    VP (Cond Sg P1) => "daría" ;--# notpresent
    VP (Cond Sg P2) => "darías" ;--# notpresent
    VP (Cond Sg P3) => "daría" ;--# notpresent
    VP (Cond Pl P1) => "daríamos" ;--# notpresent
    VP (Cond Pl P2) => "daríais" ;--# notpresent
    VP (Cond Pl P3) => "darían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "da" ;
    VP (Imp Sg P3) => "dé" ;
    VP (Imp Pl P1) => "demos" ;
    VP (Imp Pl P2) => "dad" ;
    VP (Imp Pl P3) => "den" ;
    VP (Pass Sg Masc) => "dado" ;
    VP (Pass Sg Fem) => "dada" ;
    VP (Pass Pl Masc) => "dados" ;
    VP (Pass Pl Fem) => "dadas"
    }
  } ;

lin decir_V = verboV 
 {s = table {
    VI Infn => "decir" ;
    VI Ger => "diciendo" ;
    VI Part => "dicho" ;
    VP (Pres Ind Sg P1) => "digo" ;
    VP (Pres Ind Sg P2) => "dices" ;
    VP (Pres Ind Sg P3) => "dice" ;
    VP (Pres Ind Pl P1) => "decimos" ;
    VP (Pres Ind Pl P2) => "decís" ;
    VP (Pres Ind Pl P3) => "dicen" ;
    VP (Pres Subj Sg P1) => "diga" ;
    VP (Pres Subj Sg P2) => "digas" ;
    VP (Pres Subj Sg P3) => "diga" ;
    VP (Pres Subj Pl P1) => "digamos" ;
    VP (Pres Subj Pl P2) => "digáis" ;
    VP (Pres Subj Pl P3) => "digan" ;
    VP (Impf Ind Sg P1) => "decía" ;--# notpresent
    VP (Impf Ind Sg P2) => "decías" ;--# notpresent
    VP (Impf Ind Sg P3) => "decía" ;--# notpresent
    VP (Impf Ind Pl P1) => "decíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "decíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "decían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dijera" ; "dijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dijeras" ; "dijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dijera" ; "dijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"dijéramos" ; "dijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dijerais" ; "dijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dijeran" ; "dijesen"} ;--# notpresent
    VP (Pret Sg P1) => "dije" ;--# notpresent
    VP (Pret Sg P2) => "dijiste" ;--# notpresent
    VP (Pret Sg P3) => "dijo" ;--# notpresent
    VP (Pret Pl P1) => "dijimos" ;--# notpresent
    VP (Pret Pl P2) => "dijisteis" ;--# notpresent
    VP (Pret Pl P3) => "dijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "diré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "diremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "diréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "dijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "dijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "dijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dijeren" ;--# notpresent
    VP (Cond Sg P1) => "diría" ;--# notpresent
    VP (Cond Sg P2) => "dirías" ;--# notpresent
    VP (Cond Sg P3) => "diría" ;--# notpresent
    VP (Cond Pl P1) => "diríamos" ;--# notpresent
    VP (Cond Pl P2) => "diríais" ;--# notpresent
    VP (Cond Pl P3) => "dirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "di" ;
    VP (Imp Sg P3) => "diga" ;
    VP (Imp Pl P1) => "digamos" ;
    VP (Imp Pl P2) => "decid" ;
    VP (Imp Pl P3) => "digan" ;
    VP (Pass Sg Masc) => "dicho" ;
    VP (Pass Sg Fem) => "dicha" ;
    VP (Pass Pl Masc) => "dichos" ;
    VP (Pass Pl Fem) => "dichas"
    }
  } ;

lin condecir_V = verboV 
 {s = table {
    VI Infn => "condecir" ;
    VI Ger => "condiciendo" ;
    VI Part => "condicho" ;
    VP (Pres Ind Sg P1) => "condigo" ;
    VP (Pres Ind Sg P2) => "condices" ;
    VP (Pres Ind Sg P3) => "condice" ;
    VP (Pres Ind Pl P1) => "condecimos" ;
    VP (Pres Ind Pl P2) => "condecís" ;
    VP (Pres Ind Pl P3) => "condicen" ;
    VP (Pres Subj Sg P1) => "condiga" ;
    VP (Pres Subj Sg P2) => "condigas" ;
    VP (Pres Subj Sg P3) => "condiga" ;
    VP (Pres Subj Pl P1) => "condigamos" ;
    VP (Pres Subj Pl P2) => "condigáis" ;
    VP (Pres Subj Pl P3) => "condigan" ;
    VP (Impf Ind Sg P1) => "condecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "condecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "condecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "condecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "condecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "condecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"condijera" ; "condijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"condijeras" ; "condijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"condijera" ; "condijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"condijéramos" ; "condijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"condijerais" ; "condijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"condijeran" ; "condijesen"} ;--# notpresent
    VP (Pret Sg P1) => "condije" ;--# notpresent
    VP (Pret Sg P2) => "condijiste" ;--# notpresent
    VP (Pret Sg P3) => "condijo" ;--# notpresent
    VP (Pret Pl P1) => "condijimos" ;--# notpresent
    VP (Pret Pl P2) => "condijisteis" ;--# notpresent
    VP (Pret Pl P3) => "condijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "condiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "condirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "condirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "condiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "condiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "condirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "condijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "condijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "condijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "condijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "condijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "condijeren" ;--# notpresent
    VP (Cond Sg P1) => "condiría" ;--# notpresent
    VP (Cond Sg P2) => "condirías" ;--# notpresent
    VP (Cond Sg P3) => "condiría" ;--# notpresent
    VP (Cond Pl P1) => "condiríamos" ;--# notpresent
    VP (Cond Pl P2) => "condiríais" ;--# notpresent
    VP (Cond Pl P3) => "condirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "condi" ;
    VP (Imp Sg P3) => "condiga" ;
    VP (Imp Pl P1) => "condigamos" ;
    VP (Imp Pl P2) => "condecid" ;
    VP (Imp Pl P3) => "condigan" ;
    VP (Pass Sg Masc) => "condicho" ;
    VP (Pass Sg Fem) => "condicha" ;
    VP (Pass Pl Masc) => "condichos" ;
    VP (Pass Pl Fem) => "condichas"
    }
  } ;

lin redecir_V = verboV 
 {s = table {
    VI Infn => "redecir" ;
    VI Ger => "rediciendo" ;
    VI Part => "redicho" ;
    VP (Pres Ind Sg P1) => "redigo" ;
    VP (Pres Ind Sg P2) => "redices" ;
    VP (Pres Ind Sg P3) => "redice" ;
    VP (Pres Ind Pl P1) => "redecimos" ;
    VP (Pres Ind Pl P2) => "redecís" ;
    VP (Pres Ind Pl P3) => "redicen" ;
    VP (Pres Subj Sg P1) => "rediga" ;
    VP (Pres Subj Sg P2) => "redigas" ;
    VP (Pres Subj Sg P3) => "rediga" ;
    VP (Pres Subj Pl P1) => "redigamos" ;
    VP (Pres Subj Pl P2) => "redigáis" ;
    VP (Pres Subj Pl P3) => "redigan" ;
    VP (Impf Ind Sg P1) => "redecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "redecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "redecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "redecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "redecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "redecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"redijera" ; "redijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"redijeras" ; "redijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"redijera" ; "redijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"redijéramos" ; "redijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"redijerais" ; "redijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"redijeran" ; "redijesen"} ;--# notpresent
    VP (Pret Sg P1) => "redije" ;--# notpresent
    VP (Pret Sg P2) => "redijiste" ;--# notpresent
    VP (Pret Sg P3) => "redijo" ;--# notpresent
    VP (Pret Pl P1) => "redijimos" ;--# notpresent
    VP (Pret Pl P2) => "redijisteis" ;--# notpresent
    VP (Pret Pl P3) => "redijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "redirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "redirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "redirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "redijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "redijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "redijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "redijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "redijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "redijeren" ;--# notpresent
    VP (Cond Sg P1) => "rediría" ;--# notpresent
    VP (Cond Sg P2) => "redirías" ;--# notpresent
    VP (Cond Sg P3) => "rediría" ;--# notpresent
    VP (Cond Pl P1) => "rediríamos" ;--# notpresent
    VP (Cond Pl P2) => "rediríais" ;--# notpresent
    VP (Cond Pl P3) => "redirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "redi" ;
    VP (Imp Sg P3) => "rediga" ;
    VP (Imp Pl P1) => "redigamos" ;
    VP (Imp Pl P2) => "redecid" ;
    VP (Imp Pl P3) => "redigan" ;
    VP (Pass Sg Masc) => "redicho" ;
    VP (Pass Sg Fem) => "redicha" ;
    VP (Pass Pl Masc) => "redichos" ;
    VP (Pass Pl Fem) => "redichas"
    }
  } ;

lin aberrar_V = verboV 
 {s = table {
    VI Infn => "aberrar" ;
    VI Ger => "aberrando" ;
    VI Part => "aberrado" ;
    VP (Pres Ind Sg P1) => "abyerro" ;
    VP (Pres Ind Sg P2) => "abyerras" ;
    VP (Pres Ind Sg P3) => "abyerra" ;
    VP (Pres Ind Pl P1) => "aberramos" ;
    VP (Pres Ind Pl P2) => "aberráis" ;
    VP (Pres Ind Pl P3) => "abyerran" ;
    VP (Pres Subj Sg P1) => "abyerre" ;
    VP (Pres Subj Sg P2) => "abyerres" ;
    VP (Pres Subj Sg P3) => "abyerre" ;
    VP (Pres Subj Pl P1) => "aberremos" ;
    VP (Pres Subj Pl P2) => "aberréis" ;
    VP (Pres Subj Pl P3) => "abyerren" ;
    VP (Impf Ind Sg P1) => "aberraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aberrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aberraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aberrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aberrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aberraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aberrara" ; "aberrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aberraras" ; "aberrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aberrara" ; "aberrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aberráramos" ; "aberrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aberrarais" ; "aberraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aberraran" ; "aberrasen"} ;--# notpresent
    VP (Pret Sg P1) => "aberré" ;--# notpresent
    VP (Pret Sg P2) => "aberraste" ;--# notpresent
    VP (Pret Sg P3) => "aberró" ;--# notpresent
    VP (Pret Pl P1) => "aberramos" ;--# notpresent
    VP (Pret Pl P2) => "aberrasteis" ;--# notpresent
    VP (Pret Pl P3) => "aberraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aberraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aberrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aberrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aberraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aberraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aberrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aberrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aberrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aberrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aberráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aberrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aberraren" ;--# notpresent
    VP (Cond Sg P1) => "aberraría" ;--# notpresent
    VP (Cond Sg P2) => "aberrarías" ;--# notpresent
    VP (Cond Sg P3) => "aberraría" ;--# notpresent
    VP (Cond Pl P1) => "aberraríamos" ;--# notpresent
    VP (Cond Pl P2) => "aberraríais" ;--# notpresent
    VP (Cond Pl P3) => "aberrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abyerra" ;
    VP (Imp Sg P3) => "abyerre" ;
    VP (Imp Pl P1) => "aberremos" ;
    VP (Imp Pl P2) => "aberrad" ;
    VP (Imp Pl P3) => "abyerren" ;
    VP (Pass Sg Masc) => "aberrado" ;
    VP (Pass Sg Fem) => "aberrada" ;
    VP (Pass Pl Masc) => "aberrados" ;
    VP (Pass Pl Fem) => "aberradas"
    }
  } ;

lin desosar_V = verboV 
 {s = table {
    VI Infn => "desosar" ;
    VI Ger => "desosando" ;
    VI Part => "desosado" ;
    VP (Pres Ind Sg P1) => "deshueso" ;
    VP (Pres Ind Sg P2) => "deshuesas" ;
    VP (Pres Ind Sg P3) => "deshuesa" ;
    VP (Pres Ind Pl P1) => "desosamos" ;
    VP (Pres Ind Pl P2) => "desosáis" ;
    VP (Pres Ind Pl P3) => "deshuesan" ;
    VP (Pres Subj Sg P1) => "deshuese" ;
    VP (Pres Subj Sg P2) => "deshueses" ;
    VP (Pres Subj Sg P3) => "deshuese" ;
    VP (Pres Subj Pl P1) => "desosemos" ;
    VP (Pres Subj Pl P2) => "desoséis" ;
    VP (Pres Subj Pl P3) => "deshuesen" ;
    VP (Impf Ind Sg P1) => "desosaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desosabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desosaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desosábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desosabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desosaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desosara" ; "desosase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desosaras" ; "desosases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desosara" ; "desosase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desosáramos" ; "desosásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desosarais" ; "desosaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desosaran" ; "desosasen"} ;--# notpresent
    VP (Pret Sg P1) => "desosé" ;--# notpresent
    VP (Pret Sg P2) => "desosaste" ;--# notpresent
    VP (Pret Sg P3) => "desosó" ;--# notpresent
    VP (Pret Pl P1) => "desosamos" ;--# notpresent
    VP (Pret Pl P2) => "desosasteis" ;--# notpresent
    VP (Pret Pl P3) => "desosaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desosaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desosarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desosará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desosaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desosaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desosarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desosare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desosares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desosare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desosáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desosareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desosaren" ;--# notpresent
    VP (Cond Sg P1) => "desosaría" ;--# notpresent
    VP (Cond Sg P2) => "desosarías" ;--# notpresent
    VP (Cond Sg P3) => "desosaría" ;--# notpresent
    VP (Cond Pl P1) => "desosaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desosaríais" ;--# notpresent
    VP (Cond Pl P3) => "desosarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deshuesa" ;
    VP (Imp Sg P3) => "deshuese" ;
    VP (Imp Pl P1) => "desosemos" ;
    VP (Imp Pl P2) => "desosad" ;
    VP (Imp Pl P3) => "deshuesen" ;
    VP (Pass Sg Masc) => "desosado" ;
    VP (Pass Sg Fem) => "desosada" ;
    VP (Pass Pl Masc) => "desosados" ;
    VP (Pass Pl Fem) => "desosadas"
    }
  } ;

lin errar_V = verboV 
 {s = table {
    VI Infn => "errar" ;
    VI Ger => "errando" ;
    VI Part => "errado" ;
    VP (Pres Ind Sg P1) => "yerro" ;
    VP (Pres Ind Sg P2) => "yerras" ;
    VP (Pres Ind Sg P3) => "yerra" ;
    VP (Pres Ind Pl P1) => "erramos" ;
    VP (Pres Ind Pl P2) => "erráis" ;
    VP (Pres Ind Pl P3) => "yerran" ;
    VP (Pres Subj Sg P1) => "yerre" ;
    VP (Pres Subj Sg P2) => "yerres" ;
    VP (Pres Subj Sg P3) => "yerre" ;
    VP (Pres Subj Pl P1) => "erremos" ;
    VP (Pres Subj Pl P2) => "erréis" ;
    VP (Pres Subj Pl P3) => "yerren" ;
    VP (Impf Ind Sg P1) => "erraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "errabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "erraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "errábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "errabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "erraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"errara" ; "errase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"erraras" ; "errases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"errara" ; "errase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"erráramos" ; "errásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"errarais" ; "erraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"erraran" ; "errasen"} ;--# notpresent
    VP (Pret Sg P1) => "erré" ;--# notpresent
    VP (Pret Sg P2) => "erraste" ;--# notpresent
    VP (Pret Sg P3) => "erró" ;--# notpresent
    VP (Pret Pl P1) => "erramos" ;--# notpresent
    VP (Pret Pl P2) => "errasteis" ;--# notpresent
    VP (Pret Pl P3) => "erraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "erraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "errarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "errará" ;--# notpresent
    VP (Fut Ind Pl P1) => "erraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "erraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "errarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "errare" ;--# notpresent
    VP (Fut Subj Sg P2) => "errares" ;--# notpresent
    VP (Fut Subj Sg P3) => "errare" ;--# notpresent
    VP (Fut Subj Pl P1) => "erráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "errareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "erraren" ;--# notpresent
    VP (Cond Sg P1) => "erraría" ;--# notpresent
    VP (Cond Sg P2) => "errarías" ;--# notpresent
    VP (Cond Sg P3) => "erraría" ;--# notpresent
    VP (Cond Pl P1) => "erraríamos" ;--# notpresent
    VP (Cond Pl P2) => "erraríais" ;--# notpresent
    VP (Cond Pl P3) => "errarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "yerra" ;
    VP (Imp Sg P3) => "yerre" ;
    VP (Imp Pl P1) => "erremos" ;
    VP (Imp Pl P2) => "errad" ;
    VP (Imp Pl P3) => "yerren" ;
    VP (Pass Sg Masc) => "errado" ;
    VP (Pass Sg Fem) => "errada" ;
    VP (Pass Pl Masc) => "errados" ;
    VP (Pass Pl Fem) => "erradas"
    }
  } ;

lin adherir_V = verboV 
 {s = table {
    VI Infn => "adherir" ;
    VI Ger => "adhiriendo" ;
    VI Part => "adherido" ;
    VP (Pres Ind Sg P1) => "adhiero" ;
    VP (Pres Ind Sg P2) => "adhieres" ;
    VP (Pres Ind Sg P3) => "adhiere" ;
    VP (Pres Ind Pl P1) => "adherimos" ;
    VP (Pres Ind Pl P2) => "adherís" ;
    VP (Pres Ind Pl P3) => "adhieren" ;
    VP (Pres Subj Sg P1) => "adhiera" ;
    VP (Pres Subj Sg P2) => "adhieras" ;
    VP (Pres Subj Sg P3) => "adhiera" ;
    VP (Pres Subj Pl P1) => "adhiramos" ;
    VP (Pres Subj Pl P2) => "adhiráis" ;
    VP (Pres Subj Pl P3) => "adhieran" ;
    VP (Impf Ind Sg P1) => "adhería" ;--# notpresent
    VP (Impf Ind Sg P2) => "adherías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adhería" ;--# notpresent
    VP (Impf Ind Pl P1) => "adheríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adheríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adherían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adhiriera" ; "adhiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adhirieras" ; "adhirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adhiriera" ; "adhiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adhiriéramos" ; "adhiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adhirierais" ; "adhirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adhirieran" ; "adhiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "adherí" ;--# notpresent
    VP (Pret Sg P2) => "adheriste" ;--# notpresent
    VP (Pret Sg P3) => "adhirió" ;--# notpresent
    VP (Pret Pl P1) => "adherimos" ;--# notpresent
    VP (Pret Pl P2) => "adheristeis" ;--# notpresent
    VP (Pret Pl P3) => "adhirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adheriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adherirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adherirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adheriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adheriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adherirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adhiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adhirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adhiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adhiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adhiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adhirieren" ;--# notpresent
    VP (Cond Sg P1) => "adheriría" ;--# notpresent
    VP (Cond Sg P2) => "adherirías" ;--# notpresent
    VP (Cond Sg P3) => "adheriría" ;--# notpresent
    VP (Cond Pl P1) => "adheriríamos" ;--# notpresent
    VP (Cond Pl P2) => "adheriríais" ;--# notpresent
    VP (Cond Pl P3) => "adherirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adhiere" ;
    VP (Imp Sg P3) => "adhiera" ;
    VP (Imp Pl P1) => "adhiramos" ;
    VP (Imp Pl P2) => "adherid" ;
    VP (Imp Pl P3) => "adhieran" ;
    VP (Pass Sg Masc) => "adherido" ;
    VP (Pass Sg Fem) => "adherida" ;
    VP (Pass Pl Masc) => "adheridos" ;
    VP (Pass Pl Fem) => "adheridas"
    }
  } ;

lin adormir_V = verboV 
 {s = table {
    VI Infn => "adormir" ;
    VI Ger => "adurmiendo" ;
    VI Part => "adormido" ;
    VP (Pres Ind Sg P1) => "aduermo" ;
    VP (Pres Ind Sg P2) => "aduermes" ;
    VP (Pres Ind Sg P3) => "aduerme" ;
    VP (Pres Ind Pl P1) => "adormimos" ;
    VP (Pres Ind Pl P2) => "adormís" ;
    VP (Pres Ind Pl P3) => "aduermen" ;
    VP (Pres Subj Sg P1) => "aduerma" ;
    VP (Pres Subj Sg P2) => "aduermas" ;
    VP (Pres Subj Sg P3) => "aduerma" ;
    VP (Pres Subj Pl P1) => "adurmamos" ;
    VP (Pres Subj Pl P2) => "adurmáis" ;
    VP (Pres Subj Pl P3) => "aduerman" ;
    VP (Impf Ind Sg P1) => "adormía" ;--# notpresent
    VP (Impf Ind Sg P2) => "adormías" ;--# notpresent
    VP (Impf Ind Sg P3) => "adormía" ;--# notpresent
    VP (Impf Ind Pl P1) => "adormíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adormíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adormían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adurmiera" ; "adurmiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adurmieras" ; "adurmieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adurmiera" ; "adurmiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adurmiéramos" ; "adurmiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adurmierais" ; "adurmieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adurmieran" ; "adurmiesen"} ;--# notpresent
    VP (Pret Sg P1) => "adormí" ;--# notpresent
    VP (Pret Sg P2) => "adormiste" ;--# notpresent
    VP (Pret Sg P3) => "adurmió" ;--# notpresent
    VP (Pret Pl P1) => "adormimos" ;--# notpresent
    VP (Pret Pl P2) => "adormisteis" ;--# notpresent
    VP (Pret Pl P3) => "adurmieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adormiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adormirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adormirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "adormiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adormiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adormirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adurmiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adurmieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adurmiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adurmiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adurmiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adurmieren" ;--# notpresent
    VP (Cond Sg P1) => "adormiría" ;--# notpresent
    VP (Cond Sg P2) => "adormirías" ;--# notpresent
    VP (Cond Sg P3) => "adormiría" ;--# notpresent
    VP (Cond Pl P1) => "adormiríamos" ;--# notpresent
    VP (Cond Pl P2) => "adormiríais" ;--# notpresent
    VP (Cond Pl P3) => "adormirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aduerme" ;
    VP (Imp Sg P3) => "aduerma" ;
    VP (Imp Pl P1) => "adurmamos" ;
    VP (Imp Pl P2) => "adormid" ;
    VP (Imp Pl P3) => "aduerman" ;
    VP (Pass Sg Masc) => "adormido" ;
    VP (Pass Sg Fem) => "adormida" ;
    VP (Pass Pl Masc) => "adormidos" ;
    VP (Pass Pl Fem) => "adormidas"
    }
  } ;

lin advertir_V = verboV 
 {s = table {
    VI Infn => "advertir" ;
    VI Ger => "advirtiendo" ;
    VI Part => "advertido" ;
    VP (Pres Ind Sg P1) => "advierto" ;
    VP (Pres Ind Sg P2) => "adviertes" ;
    VP (Pres Ind Sg P3) => "advierte" ;
    VP (Pres Ind Pl P1) => "advertimos" ;
    VP (Pres Ind Pl P2) => "advertís" ;
    VP (Pres Ind Pl P3) => "advierten" ;
    VP (Pres Subj Sg P1) => "advierta" ;
    VP (Pres Subj Sg P2) => "adviertas" ;
    VP (Pres Subj Sg P3) => "advierta" ;
    VP (Pres Subj Pl P1) => "advirtamos" ;
    VP (Pres Subj Pl P2) => "advirtáis" ;
    VP (Pres Subj Pl P3) => "adviertan" ;
    VP (Impf Ind Sg P1) => "advertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "advertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "advertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "advertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "advertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "advertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"advirtiera" ; "advirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"advirtieras" ; "advirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"advirtiera" ; "advirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"advirtiéramos" ; "advirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"advirtierais" ; "advirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"advirtieran" ; "advirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "advertí" ;--# notpresent
    VP (Pret Sg P2) => "advertiste" ;--# notpresent
    VP (Pret Sg P3) => "advirtió" ;--# notpresent
    VP (Pret Pl P1) => "advertimos" ;--# notpresent
    VP (Pret Pl P2) => "advertisteis" ;--# notpresent
    VP (Pret Pl P3) => "advirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "advertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "advertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "advertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "advertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "advertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "advertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "advirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "advirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "advirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "advirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "advirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "advirtieren" ;--# notpresent
    VP (Cond Sg P1) => "advertiría" ;--# notpresent
    VP (Cond Sg P2) => "advertirías" ;--# notpresent
    VP (Cond Sg P3) => "advertiría" ;--# notpresent
    VP (Cond Pl P1) => "advertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "advertiríais" ;--# notpresent
    VP (Cond Pl P3) => "advertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "advierte" ;
    VP (Imp Sg P3) => "advierta" ;
    VP (Imp Pl P1) => "advirtamos" ;
    VP (Imp Pl P2) => "advertid" ;
    VP (Imp Pl P3) => "adviertan" ;
    VP (Pass Sg Masc) => "advertido" ;
    VP (Pass Sg Fem) => "advertida" ;
    VP (Pass Pl Masc) => "advertidos" ;
    VP (Pass Pl Fem) => "advertidas"
    }
  } ;

lin asentir_V = verboV 
 {s = table {
    VI Infn => "asentir" ;
    VI Ger => "asintiendo" ;
    VI Part => "asentido" ;
    VP (Pres Ind Sg P1) => "asiento" ;
    VP (Pres Ind Sg P2) => "asientes" ;
    VP (Pres Ind Sg P3) => "asiente" ;
    VP (Pres Ind Pl P1) => "asentimos" ;
    VP (Pres Ind Pl P2) => "asentís" ;
    VP (Pres Ind Pl P3) => "asienten" ;
    VP (Pres Subj Sg P1) => "asienta" ;
    VP (Pres Subj Sg P2) => "asientas" ;
    VP (Pres Subj Sg P3) => "asienta" ;
    VP (Pres Subj Pl P1) => "asintamos" ;
    VP (Pres Subj Pl P2) => "asintáis" ;
    VP (Pres Subj Pl P3) => "asientan" ;
    VP (Impf Ind Sg P1) => "asentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "asentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "asentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "asentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asintiera" ; "asintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asintieras" ; "asintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asintiera" ; "asintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asintiéramos" ; "asintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asintierais" ; "asintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asintieran" ; "asintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "asentí" ;--# notpresent
    VP (Pret Sg P2) => "asentiste" ;--# notpresent
    VP (Pret Sg P3) => "asintió" ;--# notpresent
    VP (Pret Pl P1) => "asentimos" ;--# notpresent
    VP (Pret Pl P2) => "asentisteis" ;--# notpresent
    VP (Pret Pl P3) => "asintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "asentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "asintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "asintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "asintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asintieren" ;--# notpresent
    VP (Cond Sg P1) => "asentiría" ;--# notpresent
    VP (Cond Sg P2) => "asentirías" ;--# notpresent
    VP (Cond Sg P3) => "asentiría" ;--# notpresent
    VP (Cond Pl P1) => "asentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "asentiríais" ;--# notpresent
    VP (Cond Pl P3) => "asentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asiente" ;
    VP (Imp Sg P3) => "asienta" ;
    VP (Imp Pl P1) => "asintamos" ;
    VP (Imp Pl P2) => "asentid" ;
    VP (Imp Pl P3) => "asientan" ;
    VP (Pass Sg Masc) => "asentido" ;
    VP (Pass Sg Fem) => "asentida" ;
    VP (Pass Pl Masc) => "asentidos" ;
    VP (Pass Pl Fem) => "asentidas"
    }
  } ;

lin circunferir_V = verboV 
 {s = table {
    VI Infn => "circunferir" ;
    VI Ger => "circunfiriendo" ;
    VI Part => "circunferido" ;
    VP (Pres Ind Sg P1) => "circunfiero" ;
    VP (Pres Ind Sg P2) => "circunfieres" ;
    VP (Pres Ind Sg P3) => "circunfiere" ;
    VP (Pres Ind Pl P1) => "circunferimos" ;
    VP (Pres Ind Pl P2) => "circunferís" ;
    VP (Pres Ind Pl P3) => "circunfieren" ;
    VP (Pres Subj Sg P1) => "circunfiera" ;
    VP (Pres Subj Sg P2) => "circunfieras" ;
    VP (Pres Subj Sg P3) => "circunfiera" ;
    VP (Pres Subj Pl P1) => "circunfiramos" ;
    VP (Pres Subj Pl P2) => "circunfiráis" ;
    VP (Pres Subj Pl P3) => "circunfieran" ;
    VP (Impf Ind Sg P1) => "circunfería" ;--# notpresent
    VP (Impf Ind Sg P2) => "circunferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "circunfería" ;--# notpresent
    VP (Impf Ind Pl P1) => "circunferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "circunferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "circunferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"circunfiriera" ; "circunfiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"circunfirieras" ; "circunfirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"circunfiriera" ; "circunfiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"circunfiriéramos" ; "circunfiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"circunfirierais" ; "circunfirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"circunfirieran" ; "circunfiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "circunferí" ;--# notpresent
    VP (Pret Sg P2) => "circunferiste" ;--# notpresent
    VP (Pret Sg P3) => "circunfirió" ;--# notpresent
    VP (Pret Pl P1) => "circunferimos" ;--# notpresent
    VP (Pret Pl P2) => "circunferisteis" ;--# notpresent
    VP (Pret Pl P3) => "circunfirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "circunferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "circunferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "circunferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "circunferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "circunferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "circunferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "circunfiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "circunfirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "circunfiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "circunfiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "circunfiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "circunfirieren" ;--# notpresent
    VP (Cond Sg P1) => "circunferiría" ;--# notpresent
    VP (Cond Sg P2) => "circunferirías" ;--# notpresent
    VP (Cond Sg P3) => "circunferiría" ;--# notpresent
    VP (Cond Pl P1) => "circunferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "circunferiríais" ;--# notpresent
    VP (Cond Pl P3) => "circunferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "circunfiere" ;
    VP (Imp Sg P3) => "circunfiera" ;
    VP (Imp Pl P1) => "circunfiramos" ;
    VP (Imp Pl P2) => "circunferid" ;
    VP (Imp Pl P3) => "circunfieran" ;
    VP (Pass Sg Masc) => "circunferido" ;
    VP (Pass Sg Fem) => "circunferida" ;
    VP (Pass Pl Masc) => "circunferidos" ;
    VP (Pass Pl Fem) => "circunferidas"
    }
  } ;

lin conferir_V = verboV 
 {s = table {
    VI Infn => "conferir" ;
    VI Ger => "confiriendo" ;
    VI Part => "conferido" ;
    VP (Pres Ind Sg P1) => "confiero" ;
    VP (Pres Ind Sg P2) => "confieres" ;
    VP (Pres Ind Sg P3) => "confiere" ;
    VP (Pres Ind Pl P1) => "conferimos" ;
    VP (Pres Ind Pl P2) => "conferís" ;
    VP (Pres Ind Pl P3) => "confieren" ;
    VP (Pres Subj Sg P1) => "confiera" ;
    VP (Pres Subj Sg P2) => "confieras" ;
    VP (Pres Subj Sg P3) => "confiera" ;
    VP (Pres Subj Pl P1) => "confiramos" ;
    VP (Pres Subj Pl P2) => "confiráis" ;
    VP (Pres Subj Pl P3) => "confieran" ;
    VP (Impf Ind Sg P1) => "confería" ;--# notpresent
    VP (Impf Ind Sg P2) => "conferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "confería" ;--# notpresent
    VP (Impf Ind Pl P1) => "conferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "conferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"confiriera" ; "confiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"confirieras" ; "confirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"confiriera" ; "confiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"confiriéramos" ; "confiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"confirierais" ; "confirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"confirieran" ; "confiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "conferí" ;--# notpresent
    VP (Pret Sg P2) => "conferiste" ;--# notpresent
    VP (Pret Sg P3) => "confirió" ;--# notpresent
    VP (Pret Pl P1) => "conferimos" ;--# notpresent
    VP (Pret Pl P2) => "conferisteis" ;--# notpresent
    VP (Pret Pl P3) => "confirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "conferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "conferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "conferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "conferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "conferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "conferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "confiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "confirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "confiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "confiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "confiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "confirieren" ;--# notpresent
    VP (Cond Sg P1) => "conferiría" ;--# notpresent
    VP (Cond Sg P2) => "conferirías" ;--# notpresent
    VP (Cond Sg P3) => "conferiría" ;--# notpresent
    VP (Cond Pl P1) => "conferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "conferiríais" ;--# notpresent
    VP (Cond Pl P3) => "conferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "confiere" ;
    VP (Imp Sg P3) => "confiera" ;
    VP (Imp Pl P1) => "confiramos" ;
    VP (Imp Pl P2) => "conferid" ;
    VP (Imp Pl P3) => "confieran" ;
    VP (Pass Sg Masc) => "conferido" ;
    VP (Pass Sg Fem) => "conferida" ;
    VP (Pass Pl Masc) => "conferidos" ;
    VP (Pass Pl Fem) => "conferidas"
    }
  } ;

lin consentir_V = verboV 
 {s = table {
    VI Infn => "consentir" ;
    VI Ger => "consintiendo" ;
    VI Part => "consentido" ;
    VP (Pres Ind Sg P1) => "consiento" ;
    VP (Pres Ind Sg P2) => "consientes" ;
    VP (Pres Ind Sg P3) => "consiente" ;
    VP (Pres Ind Pl P1) => "consentimos" ;
    VP (Pres Ind Pl P2) => "consentís" ;
    VP (Pres Ind Pl P3) => "consienten" ;
    VP (Pres Subj Sg P1) => "consienta" ;
    VP (Pres Subj Sg P2) => "consientas" ;
    VP (Pres Subj Sg P3) => "consienta" ;
    VP (Pres Subj Pl P1) => "consintamos" ;
    VP (Pres Subj Pl P2) => "consintáis" ;
    VP (Pres Subj Pl P3) => "consientan" ;
    VP (Impf Ind Sg P1) => "consentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "consentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "consentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "consentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "consentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "consentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"consintiera" ; "consintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"consintieras" ; "consintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"consintiera" ; "consintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"consintiéramos" ; "consintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"consintierais" ; "consintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"consintieran" ; "consintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "consentí" ;--# notpresent
    VP (Pret Sg P2) => "consentiste" ;--# notpresent
    VP (Pret Sg P3) => "consintió" ;--# notpresent
    VP (Pret Pl P1) => "consentimos" ;--# notpresent
    VP (Pret Pl P2) => "consentisteis" ;--# notpresent
    VP (Pret Pl P3) => "consintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "consentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "consentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "consentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "consentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "consentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "consentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "consintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "consintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "consintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "consintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "consintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "consintieren" ;--# notpresent
    VP (Cond Sg P1) => "consentiría" ;--# notpresent
    VP (Cond Sg P2) => "consentirías" ;--# notpresent
    VP (Cond Sg P3) => "consentiría" ;--# notpresent
    VP (Cond Pl P1) => "consentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "consentiríais" ;--# notpresent
    VP (Cond Pl P3) => "consentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "consiente" ;
    VP (Imp Sg P3) => "consienta" ;
    VP (Imp Pl P1) => "consintamos" ;
    VP (Imp Pl P2) => "consentid" ;
    VP (Imp Pl P3) => "consientan" ;
    VP (Pass Sg Masc) => "consentido" ;
    VP (Pass Sg Fem) => "consentida" ;
    VP (Pass Pl Masc) => "consentidos" ;
    VP (Pass Pl Fem) => "consentidas"
    }
  } ;

lin controvertir_V = verboV 
 {s = table {
    VI Infn => "controvertir" ;
    VI Ger => "controvirtiendo" ;
    VI Part => "controvertido" ;
    VP (Pres Ind Sg P1) => "controvierto" ;
    VP (Pres Ind Sg P2) => "controviertes" ;
    VP (Pres Ind Sg P3) => "controvierte" ;
    VP (Pres Ind Pl P1) => "controvertimos" ;
    VP (Pres Ind Pl P2) => "controvertís" ;
    VP (Pres Ind Pl P3) => "controvierten" ;
    VP (Pres Subj Sg P1) => "controvierta" ;
    VP (Pres Subj Sg P2) => "controviertas" ;
    VP (Pres Subj Sg P3) => "controvierta" ;
    VP (Pres Subj Pl P1) => "controvirtamos" ;
    VP (Pres Subj Pl P2) => "controvirtáis" ;
    VP (Pres Subj Pl P3) => "controviertan" ;
    VP (Impf Ind Sg P1) => "controvertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "controvertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "controvertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "controvertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "controvertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "controvertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"controvirtiera" ; "controvirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"controvirtieras" ; "controvirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"controvirtiera" ; "controvirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"controvirtiéramos" ; "controvirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"controvirtierais" ; "controvirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"controvirtieran" ; "controvirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "controvertí" ;--# notpresent
    VP (Pret Sg P2) => "controvertiste" ;--# notpresent
    VP (Pret Sg P3) => "controvirtió" ;--# notpresent
    VP (Pret Pl P1) => "controvertimos" ;--# notpresent
    VP (Pret Pl P2) => "controvertisteis" ;--# notpresent
    VP (Pret Pl P3) => "controvirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "controvertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "controvertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "controvertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "controvertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "controvertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "controvertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "controvirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "controvirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "controvirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "controvirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "controvirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "controvirtieren" ;--# notpresent
    VP (Cond Sg P1) => "controvertiría" ;--# notpresent
    VP (Cond Sg P2) => "controvertirías" ;--# notpresent
    VP (Cond Sg P3) => "controvertiría" ;--# notpresent
    VP (Cond Pl P1) => "controvertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "controvertiríais" ;--# notpresent
    VP (Cond Pl P3) => "controvertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "controvierte" ;
    VP (Imp Sg P3) => "controvierta" ;
    VP (Imp Pl P1) => "controvirtamos" ;
    VP (Imp Pl P2) => "controvertid" ;
    VP (Imp Pl P3) => "controviertan" ;
    VP (Pass Sg Masc) => "controvertido" ;
    VP (Pass Sg Fem) => "controvertida" ;
    VP (Pass Pl Masc) => "controvertidos" ;
    VP (Pass Pl Fem) => "controvertidas"
    }
  } ;

lin convertir_V = verboV 
 {s = table {
    VI Infn => "convertir" ;
    VI Ger => "convirtiendo" ;
    VI Part => "convertido" ;
    VP (Pres Ind Sg P1) => "convierto" ;
    VP (Pres Ind Sg P2) => "conviertes" ;
    VP (Pres Ind Sg P3) => "convierte" ;
    VP (Pres Ind Pl P1) => "convertimos" ;
    VP (Pres Ind Pl P2) => "convertís" ;
    VP (Pres Ind Pl P3) => "convierten" ;
    VP (Pres Subj Sg P1) => "convierta" ;
    VP (Pres Subj Sg P2) => "conviertas" ;
    VP (Pres Subj Sg P3) => "convierta" ;
    VP (Pres Subj Pl P1) => "convirtamos" ;
    VP (Pres Subj Pl P2) => "convirtáis" ;
    VP (Pres Subj Pl P3) => "conviertan" ;
    VP (Impf Ind Sg P1) => "convertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "convertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "convertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"convirtiera" ; "convirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convirtieras" ; "convirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"convirtiera" ; "convirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"convirtiéramos" ; "convirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convirtierais" ; "convirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convirtieran" ; "convirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "convertí" ;--# notpresent
    VP (Pret Sg P2) => "convertiste" ;--# notpresent
    VP (Pret Sg P3) => "convirtió" ;--# notpresent
    VP (Pret Pl P1) => "convertimos" ;--# notpresent
    VP (Pret Pl P2) => "convertisteis" ;--# notpresent
    VP (Pret Pl P3) => "convirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "convirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "convirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "convirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "convirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convirtieren" ;--# notpresent
    VP (Cond Sg P1) => "convertiría" ;--# notpresent
    VP (Cond Sg P2) => "convertirías" ;--# notpresent
    VP (Cond Sg P3) => "convertiría" ;--# notpresent
    VP (Cond Pl P1) => "convertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "convertiríais" ;--# notpresent
    VP (Cond Pl P3) => "convertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "convierte" ;
    VP (Imp Sg P3) => "convierta" ;
    VP (Imp Pl P1) => "convirtamos" ;
    VP (Imp Pl P2) => "convertid" ;
    VP (Imp Pl P3) => "conviertan" ;
    VP (Pass Sg Masc) => "convertido" ;
    VP (Pass Sg Fem) => "convertida" ;
    VP (Pass Pl Masc) => "convertidos" ;
    VP (Pass Pl Fem) => "convertidas"
    }
  } ;

lin deferir_V = verboV 
 {s = table {
    VI Infn => "deferir" ;
    VI Ger => "defiriendo" ;
    VI Part => "deferido" ;
    VP (Pres Ind Sg P1) => "defiero" ;
    VP (Pres Ind Sg P2) => "defieres" ;
    VP (Pres Ind Sg P3) => "defiere" ;
    VP (Pres Ind Pl P1) => "deferimos" ;
    VP (Pres Ind Pl P2) => "deferís" ;
    VP (Pres Ind Pl P3) => "defieren" ;
    VP (Pres Subj Sg P1) => "defiera" ;
    VP (Pres Subj Sg P2) => "defieras" ;
    VP (Pres Subj Sg P3) => "defiera" ;
    VP (Pres Subj Pl P1) => "defiramos" ;
    VP (Pres Subj Pl P2) => "defiráis" ;
    VP (Pres Subj Pl P3) => "defieran" ;
    VP (Impf Ind Sg P1) => "defería" ;--# notpresent
    VP (Impf Ind Sg P2) => "deferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "defería" ;--# notpresent
    VP (Impf Ind Pl P1) => "deferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"defiriera" ; "defiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"defirieras" ; "defirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"defiriera" ; "defiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"defiriéramos" ; "defiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"defirierais" ; "defirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"defirieran" ; "defiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "deferí" ;--# notpresent
    VP (Pret Sg P2) => "deferiste" ;--# notpresent
    VP (Pret Sg P3) => "defirió" ;--# notpresent
    VP (Pret Pl P1) => "deferimos" ;--# notpresent
    VP (Pret Pl P2) => "deferisteis" ;--# notpresent
    VP (Pret Pl P3) => "defirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "deferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "deferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "deferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "defiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "defirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "defiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "defiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "defiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "defirieren" ;--# notpresent
    VP (Cond Sg P1) => "deferiría" ;--# notpresent
    VP (Cond Sg P2) => "deferirías" ;--# notpresent
    VP (Cond Sg P3) => "deferiría" ;--# notpresent
    VP (Cond Pl P1) => "deferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "deferiríais" ;--# notpresent
    VP (Cond Pl P3) => "deferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "defiere" ;
    VP (Imp Sg P3) => "defiera" ;
    VP (Imp Pl P1) => "defiramos" ;
    VP (Imp Pl P2) => "deferid" ;
    VP (Imp Pl P3) => "defieran" ;
    VP (Pass Sg Masc) => "deferido" ;
    VP (Pass Sg Fem) => "deferida" ;
    VP (Pass Pl Masc) => "deferidos" ;
    VP (Pass Pl Fem) => "deferidas"
    }
  } ;

lin desadvertir_V = verboV 
 {s = table {
    VI Infn => "desadvertir" ;
    VI Ger => "desadvirtiendo" ;
    VI Part => "desadvertido" ;
    VP (Pres Ind Sg P1) => "desadvierto" ;
    VP (Pres Ind Sg P2) => "desadviertes" ;
    VP (Pres Ind Sg P3) => "desadvierte" ;
    VP (Pres Ind Pl P1) => "desadvertimos" ;
    VP (Pres Ind Pl P2) => "desadvertís" ;
    VP (Pres Ind Pl P3) => "desadvierten" ;
    VP (Pres Subj Sg P1) => "desadvierta" ;
    VP (Pres Subj Sg P2) => "desadviertas" ;
    VP (Pres Subj Sg P3) => "desadvierta" ;
    VP (Pres Subj Pl P1) => "desadvirtamos" ;
    VP (Pres Subj Pl P2) => "desadvirtáis" ;
    VP (Pres Subj Pl P3) => "desadviertan" ;
    VP (Impf Ind Sg P1) => "desadvertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desadvertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desadvertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desadvertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desadvertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desadvertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desadvirtiera" ; "desadvirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desadvirtieras" ; "desadvirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desadvirtiera" ; "desadvirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desadvirtiéramos" ; "desadvirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desadvirtierais" ; "desadvirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desadvirtieran" ; "desadvirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desadvertí" ;--# notpresent
    VP (Pret Sg P2) => "desadvertiste" ;--# notpresent
    VP (Pret Sg P3) => "desadvirtió" ;--# notpresent
    VP (Pret Pl P1) => "desadvertimos" ;--# notpresent
    VP (Pret Pl P2) => "desadvertisteis" ;--# notpresent
    VP (Pret Pl P3) => "desadvirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desadvertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desadvertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desadvertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desadvertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desadvertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desadvertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desadvirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desadvirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desadvirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desadvirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desadvirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desadvirtieren" ;--# notpresent
    VP (Cond Sg P1) => "desadvertiría" ;--# notpresent
    VP (Cond Sg P2) => "desadvertirías" ;--# notpresent
    VP (Cond Sg P3) => "desadvertiría" ;--# notpresent
    VP (Cond Pl P1) => "desadvertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desadvertiríais" ;--# notpresent
    VP (Cond Pl P3) => "desadvertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desadvierte" ;
    VP (Imp Sg P3) => "desadvierta" ;
    VP (Imp Pl P1) => "desadvirtamos" ;
    VP (Imp Pl P2) => "desadvertid" ;
    VP (Imp Pl P3) => "desadviertan" ;
    VP (Pass Sg Masc) => "desadvertido" ;
    VP (Pass Sg Fem) => "desadvertida" ;
    VP (Pass Pl Masc) => "desadvertidos" ;
    VP (Pass Pl Fem) => "desadvertidas"
    }
  } ;

lin desconsentir_V = verboV 
 {s = table {
    VI Infn => "desconsentir" ;
    VI Ger => "desconsintiendo" ;
    VI Part => "desconsentido" ;
    VP (Pres Ind Sg P1) => "desconsiento" ;
    VP (Pres Ind Sg P2) => "desconsientes" ;
    VP (Pres Ind Sg P3) => "desconsiente" ;
    VP (Pres Ind Pl P1) => "desconsentimos" ;
    VP (Pres Ind Pl P2) => "desconsentís" ;
    VP (Pres Ind Pl P3) => "desconsienten" ;
    VP (Pres Subj Sg P1) => "desconsienta" ;
    VP (Pres Subj Sg P2) => "desconsientas" ;
    VP (Pres Subj Sg P3) => "desconsienta" ;
    VP (Pres Subj Pl P1) => "desconsintamos" ;
    VP (Pres Subj Pl P2) => "desconsintáis" ;
    VP (Pres Subj Pl P3) => "desconsientan" ;
    VP (Impf Ind Sg P1) => "desconsentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desconsentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desconsentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desconsentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desconsentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desconsentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desconsintiera" ; "desconsintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desconsintieras" ; "desconsintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desconsintiera" ; "desconsintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desconsintiéramos" ; "desconsintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desconsintierais" ; "desconsintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desconsintieran" ; "desconsintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desconsentí" ;--# notpresent
    VP (Pret Sg P2) => "desconsentiste" ;--# notpresent
    VP (Pret Sg P3) => "desconsintió" ;--# notpresent
    VP (Pret Pl P1) => "desconsentimos" ;--# notpresent
    VP (Pret Pl P2) => "desconsentisteis" ;--# notpresent
    VP (Pret Pl P3) => "desconsintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desconsentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desconsentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desconsentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desconsentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desconsentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desconsentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desconsintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desconsintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desconsintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desconsintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desconsintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desconsintieren" ;--# notpresent
    VP (Cond Sg P1) => "desconsentiría" ;--# notpresent
    VP (Cond Sg P2) => "desconsentirías" ;--# notpresent
    VP (Cond Sg P3) => "desconsentiría" ;--# notpresent
    VP (Cond Pl P1) => "desconsentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desconsentiríais" ;--# notpresent
    VP (Cond Pl P3) => "desconsentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desconsiente" ;
    VP (Imp Sg P3) => "desconsienta" ;
    VP (Imp Pl P1) => "desconsintamos" ;
    VP (Imp Pl P2) => "desconsentid" ;
    VP (Imp Pl P3) => "desconsientan" ;
    VP (Pass Sg Masc) => "desconsentido" ;
    VP (Pass Sg Fem) => "desconsentida" ;
    VP (Pass Pl Masc) => "desconsentidos" ;
    VP (Pass Pl Fem) => "desconsentidas"
    }
  } ;

lin desmentir_V = verboV 
 {s = table {
    VI Infn => "desmentir" ;
    VI Ger => "desmintiendo" ;
    VI Part => "desmentido" ;
    VP (Pres Ind Sg P1) => "desmiento" ;
    VP (Pres Ind Sg P2) => "desmientes" ;
    VP (Pres Ind Sg P3) => "desmiente" ;
    VP (Pres Ind Pl P1) => "desmentimos" ;
    VP (Pres Ind Pl P2) => "desmentís" ;
    VP (Pres Ind Pl P3) => "desmienten" ;
    VP (Pres Subj Sg P1) => "desmienta" ;
    VP (Pres Subj Sg P2) => "desmientas" ;
    VP (Pres Subj Sg P3) => "desmienta" ;
    VP (Pres Subj Pl P1) => "desmintamos" ;
    VP (Pres Subj Pl P2) => "desmintáis" ;
    VP (Pres Subj Pl P3) => "desmientan" ;
    VP (Impf Ind Sg P1) => "desmentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmintiera" ; "desmintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmintieras" ; "desmintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmintiera" ; "desmintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmintiéramos" ; "desmintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmintierais" ; "desmintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmintieran" ; "desmintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desmentí" ;--# notpresent
    VP (Pret Sg P2) => "desmentiste" ;--# notpresent
    VP (Pret Sg P3) => "desmintió" ;--# notpresent
    VP (Pret Pl P1) => "desmentimos" ;--# notpresent
    VP (Pret Pl P2) => "desmentisteis" ;--# notpresent
    VP (Pret Pl P3) => "desmintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmintieren" ;--# notpresent
    VP (Cond Sg P1) => "desmentiría" ;--# notpresent
    VP (Cond Sg P2) => "desmentirías" ;--# notpresent
    VP (Cond Sg P3) => "desmentiría" ;--# notpresent
    VP (Cond Pl P1) => "desmentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmentiríais" ;--# notpresent
    VP (Cond Pl P3) => "desmentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmiente" ;
    VP (Imp Sg P3) => "desmienta" ;
    VP (Imp Pl P1) => "desmintamos" ;
    VP (Imp Pl P2) => "desmentid" ;
    VP (Imp Pl P3) => "desmientan" ;
    VP (Pass Sg Masc) => "desmentido" ;
    VP (Pass Sg Fem) => "desmentida" ;
    VP (Pass Pl Masc) => "desmentidos" ;
    VP (Pass Pl Fem) => "desmentidas"
    }
  } ;

lin diferir_V = verboV 
 {s = table {
    VI Infn => "diferir" ;
    VI Ger => "difiriendo" ;
    VI Part => "diferido" ;
    VP (Pres Ind Sg P1) => "difiero" ;
    VP (Pres Ind Sg P2) => "difieres" ;
    VP (Pres Ind Sg P3) => "difiere" ;
    VP (Pres Ind Pl P1) => "diferimos" ;
    VP (Pres Ind Pl P2) => "diferís" ;
    VP (Pres Ind Pl P3) => "difieren" ;
    VP (Pres Subj Sg P1) => "difiera" ;
    VP (Pres Subj Sg P2) => "difieras" ;
    VP (Pres Subj Sg P3) => "difiera" ;
    VP (Pres Subj Pl P1) => "difiramos" ;
    VP (Pres Subj Pl P2) => "difiráis" ;
    VP (Pres Subj Pl P3) => "difieran" ;
    VP (Impf Ind Sg P1) => "difería" ;--# notpresent
    VP (Impf Ind Sg P2) => "diferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "difería" ;--# notpresent
    VP (Impf Ind Pl P1) => "diferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "diferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "diferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"difiriera" ; "difiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"difirieras" ; "difirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"difiriera" ; "difiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"difiriéramos" ; "difiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"difirierais" ; "difirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"difirieran" ; "difiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "diferí" ;--# notpresent
    VP (Pret Sg P2) => "diferiste" ;--# notpresent
    VP (Pret Sg P3) => "difirió" ;--# notpresent
    VP (Pret Pl P1) => "diferimos" ;--# notpresent
    VP (Pret Pl P2) => "diferisteis" ;--# notpresent
    VP (Pret Pl P3) => "difirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "diferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "diferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "diferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "diferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "diferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "diferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "difiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "difirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "difiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "difiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "difiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "difirieren" ;--# notpresent
    VP (Cond Sg P1) => "diferiría" ;--# notpresent
    VP (Cond Sg P2) => "diferirías" ;--# notpresent
    VP (Cond Sg P3) => "diferiría" ;--# notpresent
    VP (Cond Pl P1) => "diferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "diferiríais" ;--# notpresent
    VP (Cond Pl P3) => "diferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "difiere" ;
    VP (Imp Sg P3) => "difiera" ;
    VP (Imp Pl P1) => "difiramos" ;
    VP (Imp Pl P2) => "diferid" ;
    VP (Imp Pl P3) => "difieran" ;
    VP (Pass Sg Masc) => "diferido" ;
    VP (Pass Sg Fem) => "diferida" ;
    VP (Pass Pl Masc) => "diferidos" ;
    VP (Pass Pl Fem) => "diferidas"
    }
  } ;

lin digerir_V = verboV 
 {s = table {
    VI Infn => "digerir" ;
    VI Ger => "digiriendo" ;
    VI Part => "digerido" ;
    VP (Pres Ind Sg P1) => "digiero" ;
    VP (Pres Ind Sg P2) => "digieres" ;
    VP (Pres Ind Sg P3) => "digiere" ;
    VP (Pres Ind Pl P1) => "digerimos" ;
    VP (Pres Ind Pl P2) => "digerís" ;
    VP (Pres Ind Pl P3) => "digieren" ;
    VP (Pres Subj Sg P1) => "digiera" ;
    VP (Pres Subj Sg P2) => "digieras" ;
    VP (Pres Subj Sg P3) => "digiera" ;
    VP (Pres Subj Pl P1) => "digiramos" ;
    VP (Pres Subj Pl P2) => "digiráis" ;
    VP (Pres Subj Pl P3) => "digieran" ;
    VP (Impf Ind Sg P1) => "digería" ;--# notpresent
    VP (Impf Ind Sg P2) => "digerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "digería" ;--# notpresent
    VP (Impf Ind Pl P1) => "digeríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "digeríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "digerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"digiriera" ; "digiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"digirieras" ; "digirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"digiriera" ; "digiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"digiriéramos" ; "digiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"digirierais" ; "digirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"digirieran" ; "digiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "digerí" ;--# notpresent
    VP (Pret Sg P2) => "digeriste" ;--# notpresent
    VP (Pret Sg P3) => "digirió" ;--# notpresent
    VP (Pret Pl P1) => "digerimos" ;--# notpresent
    VP (Pret Pl P2) => "digeristeis" ;--# notpresent
    VP (Pret Pl P3) => "digirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "digeriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "digerirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "digerirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "digeriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "digeriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "digerirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "digiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "digirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "digiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "digiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "digiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "digirieren" ;--# notpresent
    VP (Cond Sg P1) => "digeriría" ;--# notpresent
    VP (Cond Sg P2) => "digerirías" ;--# notpresent
    VP (Cond Sg P3) => "digeriría" ;--# notpresent
    VP (Cond Pl P1) => "digeriríamos" ;--# notpresent
    VP (Cond Pl P2) => "digeriríais" ;--# notpresent
    VP (Cond Pl P3) => "digerirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "digiere" ;
    VP (Imp Sg P3) => "digiera" ;
    VP (Imp Pl P1) => "digiramos" ;
    VP (Imp Pl P2) => "digerid" ;
    VP (Imp Pl P3) => "digieran" ;
    VP (Pass Sg Masc) => "digerido" ;
    VP (Pass Sg Fem) => "digerida" ;
    VP (Pass Pl Masc) => "digeridos" ;
    VP (Pass Pl Fem) => "digeridas"
    }
  } ;

lin disentir_V = verboV 
 {s = table {
    VI Infn => "disentir" ;
    VI Ger => "disintiendo" ;
    VI Part => "disentido" ;
    VP (Pres Ind Sg P1) => "disiento" ;
    VP (Pres Ind Sg P2) => "disientes" ;
    VP (Pres Ind Sg P3) => "disiente" ;
    VP (Pres Ind Pl P1) => "disentimos" ;
    VP (Pres Ind Pl P2) => "disentís" ;
    VP (Pres Ind Pl P3) => "disienten" ;
    VP (Pres Subj Sg P1) => "disienta" ;
    VP (Pres Subj Sg P2) => "disientas" ;
    VP (Pres Subj Sg P3) => "disienta" ;
    VP (Pres Subj Pl P1) => "disintamos" ;
    VP (Pres Subj Pl P2) => "disintáis" ;
    VP (Pres Subj Pl P3) => "disientan" ;
    VP (Impf Ind Sg P1) => "disentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "disentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "disentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "disentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "disentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "disentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"disintiera" ; "disintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"disintieras" ; "disintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"disintiera" ; "disintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"disintiéramos" ; "disintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"disintierais" ; "disintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"disintieran" ; "disintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "disentí" ;--# notpresent
    VP (Pret Sg P2) => "disentiste" ;--# notpresent
    VP (Pret Sg P3) => "disintió" ;--# notpresent
    VP (Pret Pl P1) => "disentimos" ;--# notpresent
    VP (Pret Pl P2) => "disentisteis" ;--# notpresent
    VP (Pret Pl P3) => "disintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "disentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "disentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "disentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "disentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "disentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "disentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "disintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "disintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "disintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "disintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "disintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "disintieren" ;--# notpresent
    VP (Cond Sg P1) => "disentiría" ;--# notpresent
    VP (Cond Sg P2) => "disentirías" ;--# notpresent
    VP (Cond Sg P3) => "disentiría" ;--# notpresent
    VP (Cond Pl P1) => "disentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "disentiríais" ;--# notpresent
    VP (Cond Pl P3) => "disentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "disiente" ;
    VP (Imp Sg P3) => "disienta" ;
    VP (Imp Pl P1) => "disintamos" ;
    VP (Imp Pl P2) => "disentid" ;
    VP (Imp Pl P3) => "disientan" ;
    VP (Pass Sg Masc) => "disentido" ;
    VP (Pass Sg Fem) => "disentida" ;
    VP (Pass Pl Masc) => "disentidos" ;
    VP (Pass Pl Fem) => "disentidas"
    }
  } ;

lin divertir_V = verboV 
 {s = table {
    VI Infn => "divertir" ;
    VI Ger => "divirtiendo" ;
    VI Part => "divertido" ;
    VP (Pres Ind Sg P1) => "divierto" ;
    VP (Pres Ind Sg P2) => "diviertes" ;
    VP (Pres Ind Sg P3) => "divierte" ;
    VP (Pres Ind Pl P1) => "divertimos" ;
    VP (Pres Ind Pl P2) => "divertís" ;
    VP (Pres Ind Pl P3) => "divierten" ;
    VP (Pres Subj Sg P1) => "divierta" ;
    VP (Pres Subj Sg P2) => "diviertas" ;
    VP (Pres Subj Sg P3) => "divierta" ;
    VP (Pres Subj Pl P1) => "divirtamos" ;
    VP (Pres Subj Pl P2) => "divirtáis" ;
    VP (Pres Subj Pl P3) => "diviertan" ;
    VP (Impf Ind Sg P1) => "divertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "divertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "divertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "divertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "divertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "divertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"divirtiera" ; "divirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"divirtieras" ; "divirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"divirtiera" ; "divirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"divirtiéramos" ; "divirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"divirtierais" ; "divirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"divirtieran" ; "divirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "divertí" ;--# notpresent
    VP (Pret Sg P2) => "divertiste" ;--# notpresent
    VP (Pret Sg P3) => "divirtió" ;--# notpresent
    VP (Pret Pl P1) => "divertimos" ;--# notpresent
    VP (Pret Pl P2) => "divertisteis" ;--# notpresent
    VP (Pret Pl P3) => "divirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "divertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "divertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "divertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "divertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "divertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "divertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "divirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "divirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "divirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "divirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "divirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "divirtieren" ;--# notpresent
    VP (Cond Sg P1) => "divertiría" ;--# notpresent
    VP (Cond Sg P2) => "divertirías" ;--# notpresent
    VP (Cond Sg P3) => "divertiría" ;--# notpresent
    VP (Cond Pl P1) => "divertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "divertiríais" ;--# notpresent
    VP (Cond Pl P3) => "divertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "divierte" ;
    VP (Imp Sg P3) => "divierta" ;
    VP (Imp Pl P1) => "divirtamos" ;
    VP (Imp Pl P2) => "divertid" ;
    VP (Imp Pl P3) => "diviertan" ;
    VP (Pass Sg Masc) => "divertido" ;
    VP (Pass Sg Fem) => "divertida" ;
    VP (Pass Pl Masc) => "divertidos" ;
    VP (Pass Pl Fem) => "divertidas"
    }
  } ;

lin dormir_V = verboV 
 {s = table {
    VI Infn => "dormir" ;
    VI Ger => "durmiendo" ;
    VI Part => "dormido" ;
    VP (Pres Ind Sg P1) => "duermo" ;
    VP (Pres Ind Sg P2) => "duermes" ;
    VP (Pres Ind Sg P3) => "duerme" ;
    VP (Pres Ind Pl P1) => "dormimos" ;
    VP (Pres Ind Pl P2) => "dormís" ;
    VP (Pres Ind Pl P3) => "duermen" ;
    VP (Pres Subj Sg P1) => "duerma" ;
    VP (Pres Subj Sg P2) => "duermas" ;
    VP (Pres Subj Sg P3) => "duerma" ;
    VP (Pres Subj Pl P1) => "durmamos" ;
    VP (Pres Subj Pl P2) => "durmáis" ;
    VP (Pres Subj Pl P3) => "duerman" ;
    VP (Impf Ind Sg P1) => "dormía" ;--# notpresent
    VP (Impf Ind Sg P2) => "dormías" ;--# notpresent
    VP (Impf Ind Sg P3) => "dormía" ;--# notpresent
    VP (Impf Ind Pl P1) => "dormíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dormíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "dormían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"durmiera" ; "durmiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"durmieras" ; "durmieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"durmiera" ; "durmiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"durmiéramos" ; "durmiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"durmierais" ; "durmieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"durmieran" ; "durmiesen"} ;--# notpresent
    VP (Pret Sg P1) => "dormí" ;--# notpresent
    VP (Pret Sg P2) => "dormiste" ;--# notpresent
    VP (Pret Sg P3) => "durmió" ;--# notpresent
    VP (Pret Pl P1) => "dormimos" ;--# notpresent
    VP (Pret Pl P2) => "dormisteis" ;--# notpresent
    VP (Pret Pl P3) => "durmieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "dormiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dormirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dormirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "dormiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "dormiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dormirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "durmiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "durmieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "durmiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "durmiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "durmiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "durmieren" ;--# notpresent
    VP (Cond Sg P1) => "dormiría" ;--# notpresent
    VP (Cond Sg P2) => "dormirías" ;--# notpresent
    VP (Cond Sg P3) => "dormiría" ;--# notpresent
    VP (Cond Pl P1) => "dormiríamos" ;--# notpresent
    VP (Cond Pl P2) => "dormiríais" ;--# notpresent
    VP (Cond Pl P3) => "dormirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "duerme" ;
    VP (Imp Sg P3) => "duerma" ;
    VP (Imp Pl P1) => "durmamos" ;
    VP (Imp Pl P2) => "dormid" ;
    VP (Imp Pl P3) => "duerman" ;
    VP (Pass Sg Masc) => "dormido" ;
    VP (Pass Sg Fem) => "dormida" ;
    VP (Pass Pl Masc) => "dormidos" ;
    VP (Pass Pl Fem) => "dormidas"
    }
  } ;

lin herir_V = verboV 
 {s = table {
    VI Infn => "herir" ;
    VI Ger => "hiriendo" ;
    VI Part => "herido" ;
    VP (Pres Ind Sg P1) => "hiero" ;
    VP (Pres Ind Sg P2) => "hieres" ;
    VP (Pres Ind Sg P3) => "hiere" ;
    VP (Pres Ind Pl P1) => "herimos" ;
    VP (Pres Ind Pl P2) => "herís" ;
    VP (Pres Ind Pl P3) => "hieren" ;
    VP (Pres Subj Sg P1) => "hiera" ;
    VP (Pres Subj Sg P2) => "hieras" ;
    VP (Pres Subj Sg P3) => "hiera" ;
    VP (Pres Subj Pl P1) => "hiramos" ;
    VP (Pres Subj Pl P2) => "hiráis" ;
    VP (Pres Subj Pl P3) => "hieran" ;
    VP (Impf Ind Sg P1) => "hería" ;--# notpresent
    VP (Impf Ind Sg P2) => "herías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hería" ;--# notpresent
    VP (Impf Ind Pl P1) => "heríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "heríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "herían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hiriera" ; "hiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hirieras" ; "hirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hiriera" ; "hiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hiriéramos" ; "hiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hirierais" ; "hirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hirieran" ; "hiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "herí" ;--# notpresent
    VP (Pret Sg P2) => "heriste" ;--# notpresent
    VP (Pret Sg P3) => "hirió" ;--# notpresent
    VP (Pret Pl P1) => "herimos" ;--# notpresent
    VP (Pret Pl P2) => "heristeis" ;--# notpresent
    VP (Pret Pl P3) => "hirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "heriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "herirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "herirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "heriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "heriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "herirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hirieren" ;--# notpresent
    VP (Cond Sg P1) => "heriría" ;--# notpresent
    VP (Cond Sg P2) => "herirías" ;--# notpresent
    VP (Cond Sg P3) => "heriría" ;--# notpresent
    VP (Cond Pl P1) => "heriríamos" ;--# notpresent
    VP (Cond Pl P2) => "heriríais" ;--# notpresent
    VP (Cond Pl P3) => "herirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hiere" ;
    VP (Imp Sg P3) => "hiera" ;
    VP (Imp Pl P1) => "hiramos" ;
    VP (Imp Pl P2) => "herid" ;
    VP (Imp Pl P3) => "hieran" ;
    VP (Pass Sg Masc) => "herido" ;
    VP (Pass Sg Fem) => "herida" ;
    VP (Pass Pl Masc) => "heridos" ;
    VP (Pass Pl Fem) => "heridas"
    }
  } ;

lin hervir_V = verboV 
 {s = table {
    VI Infn => "hervir" ;
    VI Ger => "hirviendo" ;
    VI Part => "hervido" ;
    VP (Pres Ind Sg P1) => "hiervo" ;
    VP (Pres Ind Sg P2) => "hierves" ;
    VP (Pres Ind Sg P3) => "hierve" ;
    VP (Pres Ind Pl P1) => "hervimos" ;
    VP (Pres Ind Pl P2) => "hervís" ;
    VP (Pres Ind Pl P3) => "hierven" ;
    VP (Pres Subj Sg P1) => "hierva" ;
    VP (Pres Subj Sg P2) => "hiervas" ;
    VP (Pres Subj Sg P3) => "hierva" ;
    VP (Pres Subj Pl P1) => "hirvamos" ;
    VP (Pres Subj Pl P2) => "hirváis" ;
    VP (Pres Subj Pl P3) => "hiervan" ;
    VP (Impf Ind Sg P1) => "hervía" ;--# notpresent
    VP (Impf Ind Sg P2) => "hervías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hervía" ;--# notpresent
    VP (Impf Ind Pl P1) => "hervíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hervíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hervían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hirviera" ; "hirviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hirvieras" ; "hirvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hirviera" ; "hirviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hirviéramos" ; "hirviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hirvierais" ; "hirvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hirvieran" ; "hirviesen"} ;--# notpresent
    VP (Pret Sg P1) => "herví" ;--# notpresent
    VP (Pret Sg P2) => "herviste" ;--# notpresent
    VP (Pret Sg P3) => "hirvió" ;--# notpresent
    VP (Pret Pl P1) => "hervimos" ;--# notpresent
    VP (Pret Pl P2) => "hervisteis" ;--# notpresent
    VP (Pret Pl P3) => "hirvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "herviré" ;--# notpresent
    VP (Fut Ind Sg P2) => "hervirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hervirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "herviremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "herviréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "hervirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hirviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hirvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hirviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hirviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hirviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hirvieren" ;--# notpresent
    VP (Cond Sg P1) => "herviría" ;--# notpresent
    VP (Cond Sg P2) => "hervirías" ;--# notpresent
    VP (Cond Sg P3) => "herviría" ;--# notpresent
    VP (Cond Pl P1) => "herviríamos" ;--# notpresent
    VP (Cond Pl P2) => "herviríais" ;--# notpresent
    VP (Cond Pl P3) => "hervirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hierve" ;
    VP (Imp Sg P3) => "hierva" ;
    VP (Imp Pl P1) => "hirvamos" ;
    VP (Imp Pl P2) => "hervid" ;
    VP (Imp Pl P3) => "hiervan" ;
    VP (Pass Sg Masc) => "hervido" ;
    VP (Pass Sg Fem) => "hervida" ;
    VP (Pass Pl Masc) => "hervidos" ;
    VP (Pass Pl Fem) => "hervidas"
    }
  } ;

lin inferir_V = verboV 
 {s = table {
    VI Infn => "inferir" ;
    VI Ger => "infiriendo" ;
    VI Part => "inferido" ;
    VP (Pres Ind Sg P1) => "infiero" ;
    VP (Pres Ind Sg P2) => "infieres" ;
    VP (Pres Ind Sg P3) => "infiere" ;
    VP (Pres Ind Pl P1) => "inferimos" ;
    VP (Pres Ind Pl P2) => "inferís" ;
    VP (Pres Ind Pl P3) => "infieren" ;
    VP (Pres Subj Sg P1) => "infiera" ;
    VP (Pres Subj Sg P2) => "infieras" ;
    VP (Pres Subj Sg P3) => "infiera" ;
    VP (Pres Subj Pl P1) => "infiramos" ;
    VP (Pres Subj Pl P2) => "infiráis" ;
    VP (Pres Subj Pl P3) => "infieran" ;
    VP (Impf Ind Sg P1) => "infería" ;--# notpresent
    VP (Impf Ind Sg P2) => "inferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "infería" ;--# notpresent
    VP (Impf Ind Pl P1) => "inferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"infiriera" ; "infiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"infirieras" ; "infirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"infiriera" ; "infiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"infiriéramos" ; "infiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"infirierais" ; "infirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"infirieran" ; "infiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "inferí" ;--# notpresent
    VP (Pret Sg P2) => "inferiste" ;--# notpresent
    VP (Pret Sg P3) => "infirió" ;--# notpresent
    VP (Pret Pl P1) => "inferimos" ;--# notpresent
    VP (Pret Pl P2) => "inferisteis" ;--# notpresent
    VP (Pret Pl P3) => "infirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "inferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "inferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "inferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "infiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "infirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "infiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "infiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "infiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "infirieren" ;--# notpresent
    VP (Cond Sg P1) => "inferiría" ;--# notpresent
    VP (Cond Sg P2) => "inferirías" ;--# notpresent
    VP (Cond Sg P3) => "inferiría" ;--# notpresent
    VP (Cond Pl P1) => "inferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "inferiríais" ;--# notpresent
    VP (Cond Pl P3) => "inferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "infiere" ;
    VP (Imp Sg P3) => "infiera" ;
    VP (Imp Pl P1) => "infiramos" ;
    VP (Imp Pl P2) => "inferid" ;
    VP (Imp Pl P3) => "infieran" ;
    VP (Pass Sg Masc) => "inferido" ;
    VP (Pass Sg Fem) => "inferida" ;
    VP (Pass Pl Masc) => "inferidos" ;
    VP (Pass Pl Fem) => "inferidas"
    }
  } ;

lin ingerir_V = verboV 
 {s = table {
    VI Infn => "ingerir" ;
    VI Ger => "ingiriendo" ;
    VI Part => "ingerido" ;
    VP (Pres Ind Sg P1) => "ingiero" ;
    VP (Pres Ind Sg P2) => "ingieres" ;
    VP (Pres Ind Sg P3) => "ingiere" ;
    VP (Pres Ind Pl P1) => "ingerimos" ;
    VP (Pres Ind Pl P2) => "ingerís" ;
    VP (Pres Ind Pl P3) => "ingieren" ;
    VP (Pres Subj Sg P1) => "ingiera" ;
    VP (Pres Subj Sg P2) => "ingieras" ;
    VP (Pres Subj Sg P3) => "ingiera" ;
    VP (Pres Subj Pl P1) => "ingiramos" ;
    VP (Pres Subj Pl P2) => "ingiráis" ;
    VP (Pres Subj Pl P3) => "ingieran" ;
    VP (Impf Ind Sg P1) => "ingería" ;--# notpresent
    VP (Impf Ind Sg P2) => "ingerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ingería" ;--# notpresent
    VP (Impf Ind Pl P1) => "ingeríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ingeríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ingerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ingiriera" ; "ingiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ingirieras" ; "ingirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ingiriera" ; "ingiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ingiriéramos" ; "ingiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ingirierais" ; "ingirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ingirieran" ; "ingiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "ingerí" ;--# notpresent
    VP (Pret Sg P2) => "ingeriste" ;--# notpresent
    VP (Pret Sg P3) => "ingirió" ;--# notpresent
    VP (Pret Pl P1) => "ingerimos" ;--# notpresent
    VP (Pret Pl P2) => "ingeristeis" ;--# notpresent
    VP (Pret Pl P3) => "ingirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ingeriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ingerirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ingerirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ingeriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ingeriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ingerirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ingiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ingirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ingiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ingiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ingiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ingirieren" ;--# notpresent
    VP (Cond Sg P1) => "ingeriría" ;--# notpresent
    VP (Cond Sg P2) => "ingerirías" ;--# notpresent
    VP (Cond Sg P3) => "ingeriría" ;--# notpresent
    VP (Cond Pl P1) => "ingeriríamos" ;--# notpresent
    VP (Cond Pl P2) => "ingeriríais" ;--# notpresent
    VP (Cond Pl P3) => "ingerirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ingiere" ;
    VP (Imp Sg P3) => "ingiera" ;
    VP (Imp Pl P1) => "ingiramos" ;
    VP (Imp Pl P2) => "ingerid" ;
    VP (Imp Pl P3) => "ingieran" ;
    VP (Pass Sg Masc) => "ingerido" ;
    VP (Pass Sg Fem) => "ingerida" ;
    VP (Pass Pl Masc) => "ingeridos" ;
    VP (Pass Pl Fem) => "ingeridas"
    }
  } ;

lin injerir_V = verboV 
 {s = table {
    VI Infn => "injerir" ;
    VI Ger => "injiriendo" ;
    VI Part => "injerido" ;
    VP (Pres Ind Sg P1) => "injiero" ;
    VP (Pres Ind Sg P2) => "injieres" ;
    VP (Pres Ind Sg P3) => "injiere" ;
    VP (Pres Ind Pl P1) => "injerimos" ;
    VP (Pres Ind Pl P2) => "injerís" ;
    VP (Pres Ind Pl P3) => "injieren" ;
    VP (Pres Subj Sg P1) => "injiera" ;
    VP (Pres Subj Sg P2) => "injieras" ;
    VP (Pres Subj Sg P3) => "injiera" ;
    VP (Pres Subj Pl P1) => "injiramos" ;
    VP (Pres Subj Pl P2) => "injiráis" ;
    VP (Pres Subj Pl P3) => "injieran" ;
    VP (Impf Ind Sg P1) => "injería" ;--# notpresent
    VP (Impf Ind Sg P2) => "injerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "injería" ;--# notpresent
    VP (Impf Ind Pl P1) => "injeríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "injeríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "injerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"injiriera" ; "injiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"injirieras" ; "injirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"injiriera" ; "injiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"injiriéramos" ; "injiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"injirierais" ; "injirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"injirieran" ; "injiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "injerí" ;--# notpresent
    VP (Pret Sg P2) => "injeriste" ;--# notpresent
    VP (Pret Sg P3) => "injirió" ;--# notpresent
    VP (Pret Pl P1) => "injerimos" ;--# notpresent
    VP (Pret Pl P2) => "injeristeis" ;--# notpresent
    VP (Pret Pl P3) => "injirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "injeriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "injerirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "injerirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "injeriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "injeriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "injerirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "injiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "injirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "injiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "injiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "injiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "injirieren" ;--# notpresent
    VP (Cond Sg P1) => "injeriría" ;--# notpresent
    VP (Cond Sg P2) => "injerirías" ;--# notpresent
    VP (Cond Sg P3) => "injeriría" ;--# notpresent
    VP (Cond Pl P1) => "injeriríamos" ;--# notpresent
    VP (Cond Pl P2) => "injeriríais" ;--# notpresent
    VP (Cond Pl P3) => "injerirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "injiere" ;
    VP (Imp Sg P3) => "injiera" ;
    VP (Imp Pl P1) => "injiramos" ;
    VP (Imp Pl P2) => "injerid" ;
    VP (Imp Pl P3) => "injieran" ;
    VP (Pass Sg Masc) => "injerido" ;
    VP (Pass Sg Fem) => "injerida" ;
    VP (Pass Pl Masc) => "injeridos" ;
    VP (Pass Pl Fem) => "injeridas"
    }
  } ;

lin inserir_V = verboV 
 {s = table {
    VI Infn => "inserir" ;
    VI Ger => "insiriendo" ;
    VI Part => "inserido" ;
    VP (Pres Ind Sg P1) => "insiero" ;
    VP (Pres Ind Sg P2) => "insieres" ;
    VP (Pres Ind Sg P3) => "insiere" ;
    VP (Pres Ind Pl P1) => "inserimos" ;
    VP (Pres Ind Pl P2) => "inserís" ;
    VP (Pres Ind Pl P3) => "insieren" ;
    VP (Pres Subj Sg P1) => "insiera" ;
    VP (Pres Subj Sg P2) => "insieras" ;
    VP (Pres Subj Sg P3) => "insiera" ;
    VP (Pres Subj Pl P1) => "insiramos" ;
    VP (Pres Subj Pl P2) => "insiráis" ;
    VP (Pres Subj Pl P3) => "insieran" ;
    VP (Impf Ind Sg P1) => "insería" ;--# notpresent
    VP (Impf Ind Sg P2) => "inserías" ;--# notpresent
    VP (Impf Ind Sg P3) => "insería" ;--# notpresent
    VP (Impf Ind Pl P1) => "inseríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inseríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inserían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"insiriera" ; "insiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"insirieras" ; "insirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"insiriera" ; "insiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"insiriéramos" ; "insiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"insirierais" ; "insirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"insirieran" ; "insiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "inserí" ;--# notpresent
    VP (Pret Sg P2) => "inseriste" ;--# notpresent
    VP (Pret Sg P3) => "insirió" ;--# notpresent
    VP (Pret Pl P1) => "inserimos" ;--# notpresent
    VP (Pret Pl P2) => "inseristeis" ;--# notpresent
    VP (Pret Pl P3) => "insirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "inseriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inserirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inserirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "inseriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "inseriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inserirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "insiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "insirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "insiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "insiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "insiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "insirieren" ;--# notpresent
    VP (Cond Sg P1) => "inseriría" ;--# notpresent
    VP (Cond Sg P2) => "inserirías" ;--# notpresent
    VP (Cond Sg P3) => "inseriría" ;--# notpresent
    VP (Cond Pl P1) => "inseriríamos" ;--# notpresent
    VP (Cond Pl P2) => "inseriríais" ;--# notpresent
    VP (Cond Pl P3) => "inserirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "insiere" ;
    VP (Imp Sg P3) => "insiera" ;
    VP (Imp Pl P1) => "insiramos" ;
    VP (Imp Pl P2) => "inserid" ;
    VP (Imp Pl P3) => "insieran" ;
    VP (Pass Sg Masc) => "inserido" ;
    VP (Pass Sg Fem) => "inserida" ;
    VP (Pass Pl Masc) => "inseridos" ;
    VP (Pass Pl Fem) => "inseridas"
    }
  } ;

lin interferir_V = verboV 
 {s = table {
    VI Infn => "interferir" ;
    VI Ger => "interfiriendo" ;
    VI Part => "interferido" ;
    VP (Pres Ind Sg P1) => "interfiero" ;
    VP (Pres Ind Sg P2) => "interfieres" ;
    VP (Pres Ind Sg P3) => "interfiere" ;
    VP (Pres Ind Pl P1) => "interferimos" ;
    VP (Pres Ind Pl P2) => "interferís" ;
    VP (Pres Ind Pl P3) => "interfieren" ;
    VP (Pres Subj Sg P1) => "interfiera" ;
    VP (Pres Subj Sg P2) => "interfieras" ;
    VP (Pres Subj Sg P3) => "interfiera" ;
    VP (Pres Subj Pl P1) => "interfiramos" ;
    VP (Pres Subj Pl P2) => "interfiráis" ;
    VP (Pres Subj Pl P3) => "interfieran" ;
    VP (Impf Ind Sg P1) => "interfería" ;--# notpresent
    VP (Impf Ind Sg P2) => "interferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "interfería" ;--# notpresent
    VP (Impf Ind Pl P1) => "interferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "interferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "interferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"interfiriera" ; "interfiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"interfirieras" ; "interfirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"interfiriera" ; "interfiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"interfiriéramos" ; "interfiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"interfirierais" ; "interfirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"interfirieran" ; "interfiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "interferí" ;--# notpresent
    VP (Pret Sg P2) => "interferiste" ;--# notpresent
    VP (Pret Sg P3) => "interfirió" ;--# notpresent
    VP (Pret Pl P1) => "interferimos" ;--# notpresent
    VP (Pret Pl P2) => "interferisteis" ;--# notpresent
    VP (Pret Pl P3) => "interfirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "interferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "interferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "interferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "interferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "interferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "interferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "interfiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "interfirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "interfiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "interfiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "interfiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "interfirieren" ;--# notpresent
    VP (Cond Sg P1) => "interferiría" ;--# notpresent
    VP (Cond Sg P2) => "interferirías" ;--# notpresent
    VP (Cond Sg P3) => "interferiría" ;--# notpresent
    VP (Cond Pl P1) => "interferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "interferiríais" ;--# notpresent
    VP (Cond Pl P3) => "interferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "interfiere" ;
    VP (Imp Sg P3) => "interfiera" ;
    VP (Imp Pl P1) => "interfiramos" ;
    VP (Imp Pl P2) => "interferid" ;
    VP (Imp Pl P3) => "interfieran" ;
    VP (Pass Sg Masc) => "interferido" ;
    VP (Pass Sg Fem) => "interferida" ;
    VP (Pass Pl Masc) => "interferidos" ;
    VP (Pass Pl Fem) => "interferidas"
    }
  } ;

lin invertir_V = verboV 
 {s = table {
    VI Infn => "invertir" ;
    VI Ger => "invirtiendo" ;
    VI Part => "invertido" ;
    VP (Pres Ind Sg P1) => "invierto" ;
    VP (Pres Ind Sg P2) => "inviertes" ;
    VP (Pres Ind Sg P3) => "invierte" ;
    VP (Pres Ind Pl P1) => "invertimos" ;
    VP (Pres Ind Pl P2) => "invertís" ;
    VP (Pres Ind Pl P3) => "invierten" ;
    VP (Pres Subj Sg P1) => "invierta" ;
    VP (Pres Subj Sg P2) => "inviertas" ;
    VP (Pres Subj Sg P3) => "invierta" ;
    VP (Pres Subj Pl P1) => "invirtamos" ;
    VP (Pres Subj Pl P2) => "invirtáis" ;
    VP (Pres Subj Pl P3) => "inviertan" ;
    VP (Impf Ind Sg P1) => "invertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "invertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "invertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "invertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "invertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "invertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"invirtiera" ; "invirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"invirtieras" ; "invirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"invirtiera" ; "invirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"invirtiéramos" ; "invirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"invirtierais" ; "invirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"invirtieran" ; "invirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "invertí" ;--# notpresent
    VP (Pret Sg P2) => "invertiste" ;--# notpresent
    VP (Pret Sg P3) => "invirtió" ;--# notpresent
    VP (Pret Pl P1) => "invertimos" ;--# notpresent
    VP (Pret Pl P2) => "invertisteis" ;--# notpresent
    VP (Pret Pl P3) => "invirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "invertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "invertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "invertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "invertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "invertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "invertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "invirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "invirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "invirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "invirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "invirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "invirtieren" ;--# notpresent
    VP (Cond Sg P1) => "invertiría" ;--# notpresent
    VP (Cond Sg P2) => "invertirías" ;--# notpresent
    VP (Cond Sg P3) => "invertiría" ;--# notpresent
    VP (Cond Pl P1) => "invertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "invertiríais" ;--# notpresent
    VP (Cond Pl P3) => "invertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "invierte" ;
    VP (Imp Sg P3) => "invierta" ;
    VP (Imp Pl P1) => "invirtamos" ;
    VP (Imp Pl P2) => "invertid" ;
    VP (Imp Pl P3) => "inviertan" ;
    VP (Pass Sg Masc) => "invertido" ;
    VP (Pass Sg Fem) => "invertida" ;
    VP (Pass Pl Masc) => "invertidos" ;
    VP (Pass Pl Fem) => "invertidas"
    }
  } ;

lin malherir_V = verboV 
 {s = table {
    VI Infn => "malherir" ;
    VI Ger => "malhiriendo" ;
    VI Part => "malherido" ;
    VP (Pres Ind Sg P1) => "malhiero" ;
    VP (Pres Ind Sg P2) => "malhieres" ;
    VP (Pres Ind Sg P3) => "malhiere" ;
    VP (Pres Ind Pl P1) => "malherimos" ;
    VP (Pres Ind Pl P2) => "malherís" ;
    VP (Pres Ind Pl P3) => "malhieren" ;
    VP (Pres Subj Sg P1) => "malhiera" ;
    VP (Pres Subj Sg P2) => "malhieras" ;
    VP (Pres Subj Sg P3) => "malhiera" ;
    VP (Pres Subj Pl P1) => "malhiramos" ;
    VP (Pres Subj Pl P2) => "malhiráis" ;
    VP (Pres Subj Pl P3) => "malhieran" ;
    VP (Impf Ind Sg P1) => "malhería" ;--# notpresent
    VP (Impf Ind Sg P2) => "malherías" ;--# notpresent
    VP (Impf Ind Sg P3) => "malhería" ;--# notpresent
    VP (Impf Ind Pl P1) => "malheríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "malheríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "malherían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"malhiriera" ; "malhiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"malhirieras" ; "malhirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"malhiriera" ; "malhiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"malhiriéramos" ; "malhiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"malhirierais" ; "malhirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"malhirieran" ; "malhiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "malherí" ;--# notpresent
    VP (Pret Sg P2) => "malheriste" ;--# notpresent
    VP (Pret Sg P3) => "malhirió" ;--# notpresent
    VP (Pret Pl P1) => "malherimos" ;--# notpresent
    VP (Pret Pl P2) => "malheristeis" ;--# notpresent
    VP (Pret Pl P3) => "malhirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "malheriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "malherirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "malherirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "malheriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "malheriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "malherirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "malhiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "malhirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "malhiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "malhiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "malhiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "malhirieren" ;--# notpresent
    VP (Cond Sg P1) => "malheriría" ;--# notpresent
    VP (Cond Sg P2) => "malherirías" ;--# notpresent
    VP (Cond Sg P3) => "malheriría" ;--# notpresent
    VP (Cond Pl P1) => "malheriríamos" ;--# notpresent
    VP (Cond Pl P2) => "malheriríais" ;--# notpresent
    VP (Cond Pl P3) => "malherirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "malhiere" ;
    VP (Imp Sg P3) => "malhiera" ;
    VP (Imp Pl P1) => "malhiramos" ;
    VP (Imp Pl P2) => "malherid" ;
    VP (Imp Pl P3) => "malhieran" ;
    VP (Pass Sg Masc) => "malherido" ;
    VP (Pass Sg Fem) => "malherida" ;
    VP (Pass Pl Masc) => "malheridos" ;
    VP (Pass Pl Fem) => "malheridas"
    }
  } ;

lin mentir_V = verboV 
 {s = table {
    VI Infn => "mentir" ;
    VI Ger => "mintiendo" ;
    VI Part => "mentido" ;
    VP (Pres Ind Sg P1) => "miento" ;
    VP (Pres Ind Sg P2) => "mientes" ;
    VP (Pres Ind Sg P3) => "miente" ;
    VP (Pres Ind Pl P1) => "mentimos" ;
    VP (Pres Ind Pl P2) => "mentís" ;
    VP (Pres Ind Pl P3) => "mienten" ;
    VP (Pres Subj Sg P1) => "mienta" ;
    VP (Pres Subj Sg P2) => "mientas" ;
    VP (Pres Subj Sg P3) => "mienta" ;
    VP (Pres Subj Pl P1) => "mintamos" ;
    VP (Pres Subj Pl P2) => "mintáis" ;
    VP (Pres Subj Pl P3) => "mientan" ;
    VP (Impf Ind Sg P1) => "mentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "mentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mintiera" ; "mintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mintieras" ; "mintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mintiera" ; "mintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mintiéramos" ; "mintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mintierais" ; "mintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mintieran" ; "mintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "mentí" ;--# notpresent
    VP (Pret Sg P2) => "mentiste" ;--# notpresent
    VP (Pret Sg P3) => "mintió" ;--# notpresent
    VP (Pret Pl P1) => "mentimos" ;--# notpresent
    VP (Pret Pl P2) => "mentisteis" ;--# notpresent
    VP (Pret Pl P3) => "mintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "mentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "mintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "mintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mintieren" ;--# notpresent
    VP (Cond Sg P1) => "mentiría" ;--# notpresent
    VP (Cond Sg P2) => "mentirías" ;--# notpresent
    VP (Cond Sg P3) => "mentiría" ;--# notpresent
    VP (Cond Pl P1) => "mentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "mentiríais" ;--# notpresent
    VP (Cond Pl P3) => "mentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "miente" ;
    VP (Imp Sg P3) => "mienta" ;
    VP (Imp Pl P1) => "mintamos" ;
    VP (Imp Pl P2) => "mentid" ;
    VP (Imp Pl P3) => "mientan" ;
    VP (Pass Sg Masc) => "mentido" ;
    VP (Pass Sg Fem) => "mentida" ;
    VP (Pass Pl Masc) => "mentidos" ;
    VP (Pass Pl Fem) => "mentidas"
    }
  } ;

lin morir_V = verboV 
 {s = table {
    VI Infn => "morir" ;
    VI Ger => "moriendo" ;
    VI Part => "muerto" ;
    VP (Pres Ind Sg P1) => "muero" ;
    VP (Pres Ind Sg P2) => "mueres" ;
    VP (Pres Ind Sg P3) => "muere" ;
    VP (Pres Ind Pl P1) => "morimos" ;
    VP (Pres Ind Pl P2) => "morís" ;
    VP (Pres Ind Pl P3) => "mueren" ;
    VP (Pres Subj Sg P1) => "muera" ;
    VP (Pres Subj Sg P2) => "mueras" ;
    VP (Pres Subj Sg P3) => "muera" ;
    VP (Pres Subj Pl P1) => "muramos" ;
    VP (Pres Subj Pl P2) => "muráis" ;
    VP (Pres Subj Pl P3) => "mueran" ;
    VP (Impf Ind Sg P1) => "moría" ;--# notpresent
    VP (Impf Ind Sg P2) => "morías" ;--# notpresent
    VP (Impf Ind Sg P3) => "moría" ;--# notpresent
    VP (Impf Ind Pl P1) => "moríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "moríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "morían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"muriera" ; "muriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"murieras" ; "murieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"muriera" ; "muriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"muriéramos" ; "muriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"murierais" ; "murieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"murieran" ; "muriesen"} ;--# notpresent
    VP (Pret Sg P1) => "morí" ;--# notpresent
    VP (Pret Sg P2) => "moriste" ;--# notpresent
    VP (Pret Sg P3) => "murió" ;--# notpresent
    VP (Pret Pl P1) => "morimos" ;--# notpresent
    VP (Pret Pl P2) => "moristeis" ;--# notpresent
    VP (Pret Pl P3) => "murieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "moriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "morirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "morirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "moriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "moriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "morirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "muriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "murieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "muriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "muriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "muriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "murieren" ;--# notpresent
    VP (Cond Sg P1) => "moriría" ;--# notpresent
    VP (Cond Sg P2) => "morirías" ;--# notpresent
    VP (Cond Sg P3) => "moriría" ;--# notpresent
    VP (Cond Pl P1) => "moriríamos" ;--# notpresent
    VP (Cond Pl P2) => "moriríais" ;--# notpresent
    VP (Cond Pl P3) => "morirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muere" ;
    VP (Imp Sg P3) => "muera" ;
    VP (Imp Pl P1) => "muramos" ;
    VP (Imp Pl P2) => "morid" ;
    VP (Imp Pl P3) => "mueran" ;
    VP (Pass Sg Masc) => "muerto" ;
    VP (Pass Sg Fem) => "muerta" ;
    VP (Pass Pl Masc) => "muertos" ;
    VP (Pass Pl Fem) => "muertas"
    }
  } ;

lin pervertir_V = verboV 
 {s = table {
    VI Infn => "pervertir" ;
    VI Ger => "pervirtiendo" ;
    VI Part => "pervertido" ;
    VP (Pres Ind Sg P1) => "pervierto" ;
    VP (Pres Ind Sg P2) => "perviertes" ;
    VP (Pres Ind Sg P3) => "pervierte" ;
    VP (Pres Ind Pl P1) => "pervertimos" ;
    VP (Pres Ind Pl P2) => "pervertís" ;
    VP (Pres Ind Pl P3) => "pervierten" ;
    VP (Pres Subj Sg P1) => "pervierta" ;
    VP (Pres Subj Sg P2) => "perviertas" ;
    VP (Pres Subj Sg P3) => "pervierta" ;
    VP (Pres Subj Pl P1) => "pervirtamos" ;
    VP (Pres Subj Pl P2) => "pervirtáis" ;
    VP (Pres Subj Pl P3) => "perviertan" ;
    VP (Impf Ind Sg P1) => "pervertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "pervertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pervertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "pervertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pervertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pervertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pervirtiera" ; "pervirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pervirtieras" ; "pervirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pervirtiera" ; "pervirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pervirtiéramos" ; "pervirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pervirtierais" ; "pervirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pervirtieran" ; "pervirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "pervertí" ;--# notpresent
    VP (Pret Sg P2) => "pervertiste" ;--# notpresent
    VP (Pret Sg P3) => "pervirtió" ;--# notpresent
    VP (Pret Pl P1) => "pervertimos" ;--# notpresent
    VP (Pret Pl P2) => "pervertisteis" ;--# notpresent
    VP (Pret Pl P3) => "pervirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pervertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pervertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pervertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pervertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pervertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pervertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pervirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pervirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pervirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pervirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pervirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pervirtieren" ;--# notpresent
    VP (Cond Sg P1) => "pervertiría" ;--# notpresent
    VP (Cond Sg P2) => "pervertirías" ;--# notpresent
    VP (Cond Sg P3) => "pervertiría" ;--# notpresent
    VP (Cond Pl P1) => "pervertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "pervertiríais" ;--# notpresent
    VP (Cond Pl P3) => "pervertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pervierte" ;
    VP (Imp Sg P3) => "pervierta" ;
    VP (Imp Pl P1) => "pervirtamos" ;
    VP (Imp Pl P2) => "pervertid" ;
    VP (Imp Pl P3) => "perviertan" ;
    VP (Pass Sg Masc) => "pervertido" ;
    VP (Pass Sg Fem) => "pervertida" ;
    VP (Pass Pl Masc) => "pervertidos" ;
    VP (Pass Pl Fem) => "pervertidas"
    }
  } ;

lin preferir_V = verboV 
 {s = table {
    VI Infn => "preferir" ;
    VI Ger => "prefiriendo" ;
    VI Part => "preferido" ;
    VP (Pres Ind Sg P1) => "prefiero" ;
    VP (Pres Ind Sg P2) => "prefieres" ;
    VP (Pres Ind Sg P3) => "prefiere" ;
    VP (Pres Ind Pl P1) => "preferimos" ;
    VP (Pres Ind Pl P2) => "preferís" ;
    VP (Pres Ind Pl P3) => "prefieren" ;
    VP (Pres Subj Sg P1) => "prefiera" ;
    VP (Pres Subj Sg P2) => "prefieras" ;
    VP (Pres Subj Sg P3) => "prefiera" ;
    VP (Pres Subj Pl P1) => "prefiramos" ;
    VP (Pres Subj Pl P2) => "prefiráis" ;
    VP (Pres Subj Pl P3) => "prefieran" ;
    VP (Impf Ind Sg P1) => "prefería" ;--# notpresent
    VP (Impf Ind Sg P2) => "preferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prefería" ;--# notpresent
    VP (Impf Ind Pl P1) => "preferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prefiriera" ; "prefiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prefirieras" ; "prefirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prefiriera" ; "prefiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prefiriéramos" ; "prefiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prefirierais" ; "prefirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prefirieran" ; "prefiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "preferí" ;--# notpresent
    VP (Pret Sg P2) => "preferiste" ;--# notpresent
    VP (Pret Sg P3) => "prefirió" ;--# notpresent
    VP (Pret Pl P1) => "preferimos" ;--# notpresent
    VP (Pret Pl P2) => "preferisteis" ;--# notpresent
    VP (Pret Pl P3) => "prefirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "preferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "preferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "preferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prefiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prefirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prefiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prefiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prefiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prefirieren" ;--# notpresent
    VP (Cond Sg P1) => "preferiría" ;--# notpresent
    VP (Cond Sg P2) => "preferirías" ;--# notpresent
    VP (Cond Sg P3) => "preferiría" ;--# notpresent
    VP (Cond Pl P1) => "preferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "preferiríais" ;--# notpresent
    VP (Cond Pl P3) => "preferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prefiere" ;
    VP (Imp Sg P3) => "prefiera" ;
    VP (Imp Pl P1) => "prefiramos" ;
    VP (Imp Pl P2) => "preferid" ;
    VP (Imp Pl P3) => "prefieran" ;
    VP (Pass Sg Masc) => "preferido" ;
    VP (Pass Sg Fem) => "preferida" ;
    VP (Pass Pl Masc) => "preferidos" ;
    VP (Pass Pl Fem) => "preferidas"
    }
  } ;

lin premorir_V = verboV 
 {s = table {
    VI Infn => "premorir" ;
    VI Ger => "premoriendo" ;
    VI Part => "premuerto" ;
    VP (Pres Ind Sg P1) => "premuero" ;
    VP (Pres Ind Sg P2) => "premueres" ;
    VP (Pres Ind Sg P3) => "premuere" ;
    VP (Pres Ind Pl P1) => "premorimos" ;
    VP (Pres Ind Pl P2) => "premorís" ;
    VP (Pres Ind Pl P3) => "premueren" ;
    VP (Pres Subj Sg P1) => "premuera" ;
    VP (Pres Subj Sg P2) => "premueras" ;
    VP (Pres Subj Sg P3) => "premuera" ;
    VP (Pres Subj Pl P1) => "premuramos" ;
    VP (Pres Subj Pl P2) => "premuráis" ;
    VP (Pres Subj Pl P3) => "premueran" ;
    VP (Impf Ind Sg P1) => "premoría" ;--# notpresent
    VP (Impf Ind Sg P2) => "premorías" ;--# notpresent
    VP (Impf Ind Sg P3) => "premoría" ;--# notpresent
    VP (Impf Ind Pl P1) => "premoríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "premoríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "premorían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"premuriera" ; "premuriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"premurieras" ; "premurieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"premuriera" ; "premuriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"premuriéramos" ; "premuriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"premurierais" ; "premurieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"premurieran" ; "premuriesen"} ;--# notpresent
    VP (Pret Sg P1) => "premorí" ;--# notpresent
    VP (Pret Sg P2) => "premoriste" ;--# notpresent
    VP (Pret Sg P3) => "premurió" ;--# notpresent
    VP (Pret Pl P1) => "premorimos" ;--# notpresent
    VP (Pret Pl P2) => "premoristeis" ;--# notpresent
    VP (Pret Pl P3) => "premurieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "premoriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "premorirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "premorirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "premoriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "premoriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "premorirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "premuriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "premurieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "premuriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "premuriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "premuriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "premurieren" ;--# notpresent
    VP (Cond Sg P1) => "premoriría" ;--# notpresent
    VP (Cond Sg P2) => "premorirías" ;--# notpresent
    VP (Cond Sg P3) => "premoriría" ;--# notpresent
    VP (Cond Pl P1) => "premoriríamos" ;--# notpresent
    VP (Cond Pl P2) => "premoriríais" ;--# notpresent
    VP (Cond Pl P3) => "premorirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "premuere" ;
    VP (Imp Sg P3) => "premuera" ;
    VP (Imp Pl P1) => "premuramos" ;
    VP (Imp Pl P2) => "premorid" ;
    VP (Imp Pl P3) => "premueran" ;
    VP (Pass Sg Masc) => "premuerto" ;
    VP (Pass Sg Fem) => "premuerta" ;
    VP (Pass Pl Masc) => "premuertos" ;
    VP (Pass Pl Fem) => "premuertas"
    }
  } ;

lin presentir_V = verboV 
 {s = table {
    VI Infn => "presentir" ;
    VI Ger => "presintiendo" ;
    VI Part => "presentido" ;
    VP (Pres Ind Sg P1) => "presiento" ;
    VP (Pres Ind Sg P2) => "presientes" ;
    VP (Pres Ind Sg P3) => "presiente" ;
    VP (Pres Ind Pl P1) => "presentimos" ;
    VP (Pres Ind Pl P2) => "presentís" ;
    VP (Pres Ind Pl P3) => "presienten" ;
    VP (Pres Subj Sg P1) => "presienta" ;
    VP (Pres Subj Sg P2) => "presientas" ;
    VP (Pres Subj Sg P3) => "presienta" ;
    VP (Pres Subj Pl P1) => "presintamos" ;
    VP (Pres Subj Pl P2) => "presintáis" ;
    VP (Pres Subj Pl P3) => "presientan" ;
    VP (Impf Ind Sg P1) => "presentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "presentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "presentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "presentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "presentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "presentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"presintiera" ; "presintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"presintieras" ; "presintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"presintiera" ; "presintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"presintiéramos" ; "presintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"presintierais" ; "presintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"presintieran" ; "presintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "presentí" ;--# notpresent
    VP (Pret Sg P2) => "presentiste" ;--# notpresent
    VP (Pret Sg P3) => "presintió" ;--# notpresent
    VP (Pret Pl P1) => "presentimos" ;--# notpresent
    VP (Pret Pl P2) => "presentisteis" ;--# notpresent
    VP (Pret Pl P3) => "presintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "presentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "presentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "presentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "presentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "presentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "presentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "presintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "presintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "presintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "presintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "presintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "presintieren" ;--# notpresent
    VP (Cond Sg P1) => "presentiría" ;--# notpresent
    VP (Cond Sg P2) => "presentirías" ;--# notpresent
    VP (Cond Sg P3) => "presentiría" ;--# notpresent
    VP (Cond Pl P1) => "presentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "presentiríais" ;--# notpresent
    VP (Cond Pl P3) => "presentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "presiente" ;
    VP (Imp Sg P3) => "presienta" ;
    VP (Imp Pl P1) => "presintamos" ;
    VP (Imp Pl P2) => "presentid" ;
    VP (Imp Pl P3) => "presientan" ;
    VP (Pass Sg Masc) => "presentido" ;
    VP (Pass Sg Fem) => "presentida" ;
    VP (Pass Pl Masc) => "presentidos" ;
    VP (Pass Pl Fem) => "presentidas"
    }
  } ;

lin proferir_V = verboV 
 {s = table {
    VI Infn => "proferir" ;
    VI Ger => "profiriendo" ;
    VI Part => "proferido" ;
    VP (Pres Ind Sg P1) => "profiero" ;
    VP (Pres Ind Sg P2) => "profieres" ;
    VP (Pres Ind Sg P3) => "profiere" ;
    VP (Pres Ind Pl P1) => "proferimos" ;
    VP (Pres Ind Pl P2) => "proferís" ;
    VP (Pres Ind Pl P3) => "profieren" ;
    VP (Pres Subj Sg P1) => "profiera" ;
    VP (Pres Subj Sg P2) => "profieras" ;
    VP (Pres Subj Sg P3) => "profiera" ;
    VP (Pres Subj Pl P1) => "profiramos" ;
    VP (Pres Subj Pl P2) => "profiráis" ;
    VP (Pres Subj Pl P3) => "profieran" ;
    VP (Impf Ind Sg P1) => "profería" ;--# notpresent
    VP (Impf Ind Sg P2) => "proferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "profería" ;--# notpresent
    VP (Impf Ind Pl P1) => "proferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "proferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "proferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"profiriera" ; "profiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"profirieras" ; "profirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"profiriera" ; "profiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"profiriéramos" ; "profiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"profirierais" ; "profirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"profirieran" ; "profiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "proferí" ;--# notpresent
    VP (Pret Sg P2) => "proferiste" ;--# notpresent
    VP (Pret Sg P3) => "profirió" ;--# notpresent
    VP (Pret Pl P1) => "proferimos" ;--# notpresent
    VP (Pret Pl P2) => "proferisteis" ;--# notpresent
    VP (Pret Pl P3) => "profirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "proferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "proferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "proferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "proferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "proferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "proferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "profiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "profirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "profiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "profiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "profiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "profirieren" ;--# notpresent
    VP (Cond Sg P1) => "proferiría" ;--# notpresent
    VP (Cond Sg P2) => "proferirías" ;--# notpresent
    VP (Cond Sg P3) => "proferiría" ;--# notpresent
    VP (Cond Pl P1) => "proferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "proferiríais" ;--# notpresent
    VP (Cond Pl P3) => "proferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "profiere" ;
    VP (Imp Sg P3) => "profiera" ;
    VP (Imp Pl P1) => "profiramos" ;
    VP (Imp Pl P2) => "proferid" ;
    VP (Imp Pl P3) => "profieran" ;
    VP (Pass Sg Masc) => "proferido" ;
    VP (Pass Sg Fem) => "proferida" ;
    VP (Pass Pl Masc) => "proferidos" ;
    VP (Pass Pl Fem) => "proferidas"
    }
  } ;

lin reconvertir_V = verboV 
 {s = table {
    VI Infn => "reconvertir" ;
    VI Ger => "reconvirtiendo" ;
    VI Part => "reconvertido" ;
    VP (Pres Ind Sg P1) => "reconvierto" ;
    VP (Pres Ind Sg P2) => "reconviertes" ;
    VP (Pres Ind Sg P3) => "reconvierte" ;
    VP (Pres Ind Pl P1) => "reconvertimos" ;
    VP (Pres Ind Pl P2) => "reconvertís" ;
    VP (Pres Ind Pl P3) => "reconvierten" ;
    VP (Pres Subj Sg P1) => "reconvierta" ;
    VP (Pres Subj Sg P2) => "reconviertas" ;
    VP (Pres Subj Sg P3) => "reconvierta" ;
    VP (Pres Subj Pl P1) => "reconvirtamos" ;
    VP (Pres Subj Pl P2) => "reconvirtáis" ;
    VP (Pres Subj Pl P3) => "reconviertan" ;
    VP (Impf Ind Sg P1) => "reconvertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconvertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconvertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconvertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconvertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconvertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reconvirtiera" ; "reconvirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reconvirtieras" ; "reconvirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reconvirtiera" ; "reconvirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reconvirtiéramos" ; "reconvirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reconvirtierais" ; "reconvirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reconvirtieran" ; "reconvirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconvertí" ;--# notpresent
    VP (Pret Sg P2) => "reconvertiste" ;--# notpresent
    VP (Pret Sg P3) => "reconvirtió" ;--# notpresent
    VP (Pret Pl P1) => "reconvertimos" ;--# notpresent
    VP (Pret Pl P2) => "reconvertisteis" ;--# notpresent
    VP (Pret Pl P3) => "reconvirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconvertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconvertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconvertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconvertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconvertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconvertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reconvirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reconvirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reconvirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reconvirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reconvirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reconvirtieren" ;--# notpresent
    VP (Cond Sg P1) => "reconvertiría" ;--# notpresent
    VP (Cond Sg P2) => "reconvertirías" ;--# notpresent
    VP (Cond Sg P3) => "reconvertiría" ;--# notpresent
    VP (Cond Pl P1) => "reconvertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconvertiríais" ;--# notpresent
    VP (Cond Pl P3) => "reconvertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconvierte" ;
    VP (Imp Sg P3) => "reconvierta" ;
    VP (Imp Pl P1) => "reconvirtamos" ;
    VP (Imp Pl P2) => "reconvertid" ;
    VP (Imp Pl P3) => "reconviertan" ;
    VP (Pass Sg Masc) => "reconvertido" ;
    VP (Pass Sg Fem) => "reconvertida" ;
    VP (Pass Pl Masc) => "reconvertidos" ;
    VP (Pass Pl Fem) => "reconvertidas"
    }
  } ;

lin referir_V = verboV 
 {s = table {
    VI Infn => "referir" ;
    VI Ger => "refiriendo" ;
    VI Part => "referido" ;
    VP (Pres Ind Sg P1) => "refiero" ;
    VP (Pres Ind Sg P2) => "refieres" ;
    VP (Pres Ind Sg P3) => "refiere" ;
    VP (Pres Ind Pl P1) => "referimos" ;
    VP (Pres Ind Pl P2) => "referís" ;
    VP (Pres Ind Pl P3) => "refieren" ;
    VP (Pres Subj Sg P1) => "refiera" ;
    VP (Pres Subj Sg P2) => "refieras" ;
    VP (Pres Subj Sg P3) => "refiera" ;
    VP (Pres Subj Pl P1) => "refiramos" ;
    VP (Pres Subj Pl P2) => "refiráis" ;
    VP (Pres Subj Pl P3) => "refieran" ;
    VP (Impf Ind Sg P1) => "refería" ;--# notpresent
    VP (Impf Ind Sg P2) => "referías" ;--# notpresent
    VP (Impf Ind Sg P3) => "refería" ;--# notpresent
    VP (Impf Ind Pl P1) => "referíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "referíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "referían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refiriera" ; "refiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"refirieras" ; "refirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refiriera" ; "refiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refiriéramos" ; "refiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"refirierais" ; "refirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"refirieran" ; "refiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "referí" ;--# notpresent
    VP (Pret Sg P2) => "referiste" ;--# notpresent
    VP (Pret Sg P3) => "refirió" ;--# notpresent
    VP (Pret Pl P1) => "referimos" ;--# notpresent
    VP (Pret Pl P2) => "referisteis" ;--# notpresent
    VP (Pret Pl P3) => "refirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "referiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "referirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "referirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "referiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "referiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "referirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "refirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "refiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "refiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "refirieren" ;--# notpresent
    VP (Cond Sg P1) => "referiría" ;--# notpresent
    VP (Cond Sg P2) => "referirías" ;--# notpresent
    VP (Cond Sg P3) => "referiría" ;--# notpresent
    VP (Cond Pl P1) => "referiríamos" ;--# notpresent
    VP (Cond Pl P2) => "referiríais" ;--# notpresent
    VP (Cond Pl P3) => "referirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refiere" ;
    VP (Imp Sg P3) => "refiera" ;
    VP (Imp Pl P1) => "refiramos" ;
    VP (Imp Pl P2) => "referid" ;
    VP (Imp Pl P3) => "refieran" ;
    VP (Pass Sg Masc) => "referido" ;
    VP (Pass Sg Fem) => "referida" ;
    VP (Pass Pl Masc) => "referidos" ;
    VP (Pass Pl Fem) => "referidas"
    }
  } ;

lin reherir_V = verboV 
 {s = table {
    VI Infn => "reherir" ;
    VI Ger => "rehiriendo" ;
    VI Part => "reherido" ;
    VP (Pres Ind Sg P1) => "rehiero" ;
    VP (Pres Ind Sg P2) => "rehieres" ;
    VP (Pres Ind Sg P3) => "rehiere" ;
    VP (Pres Ind Pl P1) => "reherimos" ;
    VP (Pres Ind Pl P2) => "reherís" ;
    VP (Pres Ind Pl P3) => "rehieren" ;
    VP (Pres Subj Sg P1) => "rehiera" ;
    VP (Pres Subj Sg P2) => "rehieras" ;
    VP (Pres Subj Sg P3) => "rehiera" ;
    VP (Pres Subj Pl P1) => "rehiramos" ;
    VP (Pres Subj Pl P2) => "rehiráis" ;
    VP (Pres Subj Pl P3) => "rehieran" ;
    VP (Impf Ind Sg P1) => "rehería" ;--# notpresent
    VP (Impf Ind Sg P2) => "reherías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehería" ;--# notpresent
    VP (Impf Ind Pl P1) => "reheríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reheríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reherían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehiriera" ; "rehiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehirieras" ; "rehirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehiriera" ; "rehiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rehiriéramos" ; "rehiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehirierais" ; "rehirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehirieran" ; "rehiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "reherí" ;--# notpresent
    VP (Pret Sg P2) => "reheriste" ;--# notpresent
    VP (Pret Sg P3) => "rehirió" ;--# notpresent
    VP (Pret Pl P1) => "reherimos" ;--# notpresent
    VP (Pret Pl P2) => "reheristeis" ;--# notpresent
    VP (Pret Pl P3) => "rehirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reheriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reherirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reherirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reheriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reheriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reherirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rehiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehirieren" ;--# notpresent
    VP (Cond Sg P1) => "reheriría" ;--# notpresent
    VP (Cond Sg P2) => "reherirías" ;--# notpresent
    VP (Cond Sg P3) => "reheriría" ;--# notpresent
    VP (Cond Pl P1) => "reheriríamos" ;--# notpresent
    VP (Cond Pl P2) => "reheriríais" ;--# notpresent
    VP (Cond Pl P3) => "reherirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehiere" ;
    VP (Imp Sg P3) => "rehiera" ;
    VP (Imp Pl P1) => "rehiramos" ;
    VP (Imp Pl P2) => "reherid" ;
    VP (Imp Pl P3) => "rehieran" ;
    VP (Pass Sg Masc) => "reherido" ;
    VP (Pass Sg Fem) => "reherida" ;
    VP (Pass Pl Masc) => "reheridos" ;
    VP (Pass Pl Fem) => "reheridas"
    }
  } ;

lin rehervir_V = verboV 
 {s = table {
    VI Infn => "rehervir" ;
    VI Ger => "rehirviendo" ;
    VI Part => "rehervido" ;
    VP (Pres Ind Sg P1) => "rehiervo" ;
    VP (Pres Ind Sg P2) => "rehierves" ;
    VP (Pres Ind Sg P3) => "rehierve" ;
    VP (Pres Ind Pl P1) => "rehervimos" ;
    VP (Pres Ind Pl P2) => "rehervís" ;
    VP (Pres Ind Pl P3) => "rehierven" ;
    VP (Pres Subj Sg P1) => "rehierva" ;
    VP (Pres Subj Sg P2) => "rehiervas" ;
    VP (Pres Subj Sg P3) => "rehierva" ;
    VP (Pres Subj Pl P1) => "rehirvamos" ;
    VP (Pres Subj Pl P2) => "rehirváis" ;
    VP (Pres Subj Pl P3) => "rehiervan" ;
    VP (Impf Ind Sg P1) => "rehervía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rehervías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehervía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rehervíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rehervíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rehervían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehirviera" ; "rehirviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehirvieras" ; "rehirvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehirviera" ; "rehirviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rehirviéramos" ; "rehirviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehirvierais" ; "rehirvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehirvieran" ; "rehirviesen"} ;--# notpresent
    VP (Pret Sg P1) => "reherví" ;--# notpresent
    VP (Pret Sg P2) => "reherviste" ;--# notpresent
    VP (Pret Sg P3) => "rehirvió" ;--# notpresent
    VP (Pret Pl P1) => "rehervimos" ;--# notpresent
    VP (Pret Pl P2) => "rehervisteis" ;--# notpresent
    VP (Pret Pl P3) => "rehirvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reherviré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rehervirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rehervirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reherviremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reherviréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rehervirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehirviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehirvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehirviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rehirviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehirviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehirvieren" ;--# notpresent
    VP (Cond Sg P1) => "reherviría" ;--# notpresent
    VP (Cond Sg P2) => "rehervirías" ;--# notpresent
    VP (Cond Sg P3) => "reherviría" ;--# notpresent
    VP (Cond Pl P1) => "reherviríamos" ;--# notpresent
    VP (Cond Pl P2) => "reherviríais" ;--# notpresent
    VP (Cond Pl P3) => "rehervirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehierve" ;
    VP (Imp Sg P3) => "rehierva" ;
    VP (Imp Pl P1) => "rehirvamos" ;
    VP (Imp Pl P2) => "rehervid" ;
    VP (Imp Pl P3) => "rehiervan" ;
    VP (Pass Sg Masc) => "rehervido" ;
    VP (Pass Sg Fem) => "rehervida" ;
    VP (Pass Pl Masc) => "rehervidos" ;
    VP (Pass Pl Fem) => "rehervidas"
    }
  } ;

lin requerir_V = verboV 
 {s = table {
    VI Infn => "requerir" ;
    VI Ger => "requiriendo" ;
    VI Part => "requerido" ;
    VP (Pres Ind Sg P1) => "requiero" ;
    VP (Pres Ind Sg P2) => "requieres" ;
    VP (Pres Ind Sg P3) => "requiere" ;
    VP (Pres Ind Pl P1) => "requerimos" ;
    VP (Pres Ind Pl P2) => "requerís" ;
    VP (Pres Ind Pl P3) => "requieren" ;
    VP (Pres Subj Sg P1) => "requiera" ;
    VP (Pres Subj Sg P2) => "requieras" ;
    VP (Pres Subj Sg P3) => "requiera" ;
    VP (Pres Subj Pl P1) => "requiramos" ;
    VP (Pres Subj Pl P2) => "requiráis" ;
    VP (Pres Subj Pl P3) => "requieran" ;
    VP (Impf Ind Sg P1) => "requería" ;--# notpresent
    VP (Impf Ind Sg P2) => "requerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "requería" ;--# notpresent
    VP (Impf Ind Pl P1) => "requeríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "requeríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "requerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"requiriera" ; "requiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"requirieras" ; "requirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"requiriera" ; "requiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"requiriéramos" ; "requiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"requirierais" ; "requirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"requirieran" ; "requiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "requerí" ;--# notpresent
    VP (Pret Sg P2) => "requeriste" ;--# notpresent
    VP (Pret Sg P3) => "requirió" ;--# notpresent
    VP (Pret Pl P1) => "requerimos" ;--# notpresent
    VP (Pret Pl P2) => "requeristeis" ;--# notpresent
    VP (Pret Pl P3) => "requirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "requeriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "requerirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "requerirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "requeriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "requeriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "requerirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "requiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "requirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "requiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "requiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "requiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "requirieren" ;--# notpresent
    VP (Cond Sg P1) => "requeriría" ;--# notpresent
    VP (Cond Sg P2) => "requerirías" ;--# notpresent
    VP (Cond Sg P3) => "requeriría" ;--# notpresent
    VP (Cond Pl P1) => "requeriríamos" ;--# notpresent
    VP (Cond Pl P2) => "requeriríais" ;--# notpresent
    VP (Cond Pl P3) => "requerirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "requiere" ;
    VP (Imp Sg P3) => "requiera" ;
    VP (Imp Pl P1) => "requiramos" ;
    VP (Imp Pl P2) => "requerid" ;
    VP (Imp Pl P3) => "requieran" ;
    VP (Pass Sg Masc) => "requerido" ;
    VP (Pass Sg Fem) => "requerida" ;
    VP (Pass Pl Masc) => "requeridos" ;
    VP (Pass Pl Fem) => "requeridas"
    }
  } ;

lin revertir_V = verboV 
 {s = table {
    VI Infn => "revertir" ;
    VI Ger => "revirtiendo" ;
    VI Part => "revertido" ;
    VP (Pres Ind Sg P1) => "revierto" ;
    VP (Pres Ind Sg P2) => "reviertes" ;
    VP (Pres Ind Sg P3) => "revierte" ;
    VP (Pres Ind Pl P1) => "revertimos" ;
    VP (Pres Ind Pl P2) => "revertís" ;
    VP (Pres Ind Pl P3) => "revierten" ;
    VP (Pres Subj Sg P1) => "revierta" ;
    VP (Pres Subj Sg P2) => "reviertas" ;
    VP (Pres Subj Sg P3) => "revierta" ;
    VP (Pres Subj Pl P1) => "revirtamos" ;
    VP (Pres Subj Pl P2) => "revirtáis" ;
    VP (Pres Subj Pl P3) => "reviertan" ;
    VP (Impf Ind Sg P1) => "revertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "revertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "revertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "revertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revirtiera" ; "revirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revirtieras" ; "revirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revirtiera" ; "revirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revirtiéramos" ; "revirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revirtierais" ; "revirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revirtieran" ; "revirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "revertí" ;--# notpresent
    VP (Pret Sg P2) => "revertiste" ;--# notpresent
    VP (Pret Sg P3) => "revirtió" ;--# notpresent
    VP (Pret Pl P1) => "revertimos" ;--# notpresent
    VP (Pret Pl P2) => "revertisteis" ;--# notpresent
    VP (Pret Pl P3) => "revirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "revertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "revirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "revirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revirtieren" ;--# notpresent
    VP (Cond Sg P1) => "revertiría" ;--# notpresent
    VP (Cond Sg P2) => "revertirías" ;--# notpresent
    VP (Cond Sg P3) => "revertiría" ;--# notpresent
    VP (Cond Pl P1) => "revertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "revertiríais" ;--# notpresent
    VP (Cond Pl P3) => "revertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revierte" ;
    VP (Imp Sg P3) => "revierta" ;
    VP (Imp Pl P1) => "revirtamos" ;
    VP (Imp Pl P2) => "revertid" ;
    VP (Imp Pl P3) => "reviertan" ;
    VP (Pass Sg Masc) => "revertido" ;
    VP (Pass Sg Fem) => "revertida" ;
    VP (Pass Pl Masc) => "revertidos" ;
    VP (Pass Pl Fem) => "revertidas"
    }
  } ;

lin sentir_V = verboV 
 {s = table {
    VI Infn => "sentir" ;
    VI Ger => "sintiendo" ;
    VI Part => "sentido" ;
    VP (Pres Ind Sg P1) => "siento" ;
    VP (Pres Ind Sg P2) => "sientes" ;
    VP (Pres Ind Sg P3) => "siente" ;
    VP (Pres Ind Pl P1) => "sentimos" ;
    VP (Pres Ind Pl P2) => "sentís" ;
    VP (Pres Ind Pl P3) => "sienten" ;
    VP (Pres Subj Sg P1) => "sienta" ;
    VP (Pres Subj Sg P2) => "sientas" ;
    VP (Pres Subj Sg P3) => "sienta" ;
    VP (Pres Subj Pl P1) => "sintamos" ;
    VP (Pres Subj Pl P2) => "sintáis" ;
    VP (Pres Subj Pl P3) => "sientan" ;
    VP (Impf Ind Sg P1) => "sentía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sentías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sentía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sentíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sentíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sentían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sintiera" ; "sintiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sintieras" ; "sintieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sintiera" ; "sintiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sintiéramos" ; "sintiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sintierais" ; "sintieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sintieran" ; "sintiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sentí" ;--# notpresent
    VP (Pret Sg P2) => "sentiste" ;--# notpresent
    VP (Pret Sg P3) => "sintió" ;--# notpresent
    VP (Pret Pl P1) => "sentimos" ;--# notpresent
    VP (Pret Pl P2) => "sentisteis" ;--# notpresent
    VP (Pret Pl P3) => "sintieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sentiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sentirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sentirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sentiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sentiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sentirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sintiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sintieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sintiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sintiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sintiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sintieren" ;--# notpresent
    VP (Cond Sg P1) => "sentiría" ;--# notpresent
    VP (Cond Sg P2) => "sentirías" ;--# notpresent
    VP (Cond Sg P3) => "sentiría" ;--# notpresent
    VP (Cond Pl P1) => "sentiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sentiríais" ;--# notpresent
    VP (Cond Pl P3) => "sentirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "siente" ;
    VP (Imp Sg P3) => "sienta" ;
    VP (Imp Pl P1) => "sintamos" ;
    VP (Imp Pl P2) => "sentid" ;
    VP (Imp Pl P3) => "sientan" ;
    VP (Pass Sg Masc) => "sentido" ;
    VP (Pass Sg Fem) => "sentida" ;
    VP (Pass Pl Masc) => "sentidos" ;
    VP (Pass Pl Fem) => "sentidas"
    }
  } ;

lin subvertir_V = verboV 
 {s = table {
    VI Infn => "subvertir" ;
    VI Ger => "subvirtiendo" ;
    VI Part => "subvertido" ;
    VP (Pres Ind Sg P1) => "subvierto" ;
    VP (Pres Ind Sg P2) => "subviertes" ;
    VP (Pres Ind Sg P3) => "subvierte" ;
    VP (Pres Ind Pl P1) => "subvertimos" ;
    VP (Pres Ind Pl P2) => "subvertís" ;
    VP (Pres Ind Pl P3) => "subvierten" ;
    VP (Pres Subj Sg P1) => "subvierta" ;
    VP (Pres Subj Sg P2) => "subviertas" ;
    VP (Pres Subj Sg P3) => "subvierta" ;
    VP (Pres Subj Pl P1) => "subvirtamos" ;
    VP (Pres Subj Pl P2) => "subvirtáis" ;
    VP (Pres Subj Pl P3) => "subviertan" ;
    VP (Impf Ind Sg P1) => "subvertía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subvertías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subvertía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subvertíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subvertíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subvertían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subvirtiera" ; "subvirtiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subvirtieras" ; "subvirtieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subvirtiera" ; "subvirtiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subvirtiéramos" ; "subvirtiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subvirtierais" ; "subvirtieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subvirtieran" ; "subvirtiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subvertí" ;--# notpresent
    VP (Pret Sg P2) => "subvertiste" ;--# notpresent
    VP (Pret Sg P3) => "subvirtió" ;--# notpresent
    VP (Pret Pl P1) => "subvertimos" ;--# notpresent
    VP (Pret Pl P2) => "subvertisteis" ;--# notpresent
    VP (Pret Pl P3) => "subvirtieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subvertiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subvertirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subvertirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subvertiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subvertiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subvertirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subvirtiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subvirtieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subvirtiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subvirtiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subvirtiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subvirtieren" ;--# notpresent
    VP (Cond Sg P1) => "subvertiría" ;--# notpresent
    VP (Cond Sg P2) => "subvertirías" ;--# notpresent
    VP (Cond Sg P3) => "subvertiría" ;--# notpresent
    VP (Cond Pl P1) => "subvertiríamos" ;--# notpresent
    VP (Cond Pl P2) => "subvertiríais" ;--# notpresent
    VP (Cond Pl P3) => "subvertirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subvierte" ;
    VP (Imp Sg P3) => "subvierta" ;
    VP (Imp Pl P1) => "subvirtamos" ;
    VP (Imp Pl P2) => "subvertid" ;
    VP (Imp Pl P3) => "subviertan" ;
    VP (Pass Sg Masc) => "subvertido" ;
    VP (Pass Sg Fem) => "subvertida" ;
    VP (Pass Pl Masc) => "subvertidos" ;
    VP (Pass Pl Fem) => "subvertidas"
    }
  } ;

lin sugerir_V = verboV 
 {s = table {
    VI Infn => "sugerir" ;
    VI Ger => "sugiriendo" ;
    VI Part => "sugerido" ;
    VP (Pres Ind Sg P1) => "sugiero" ;
    VP (Pres Ind Sg P2) => "sugieres" ;
    VP (Pres Ind Sg P3) => "sugiere" ;
    VP (Pres Ind Pl P1) => "sugerimos" ;
    VP (Pres Ind Pl P2) => "sugerís" ;
    VP (Pres Ind Pl P3) => "sugieren" ;
    VP (Pres Subj Sg P1) => "sugiera" ;
    VP (Pres Subj Sg P2) => "sugieras" ;
    VP (Pres Subj Sg P3) => "sugiera" ;
    VP (Pres Subj Pl P1) => "sugiramos" ;
    VP (Pres Subj Pl P2) => "sugiráis" ;
    VP (Pres Subj Pl P3) => "sugieran" ;
    VP (Impf Ind Sg P1) => "sugería" ;--# notpresent
    VP (Impf Ind Sg P2) => "sugerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sugería" ;--# notpresent
    VP (Impf Ind Pl P1) => "sugeríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sugeríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sugerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sugiriera" ; "sugiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sugirieras" ; "sugirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sugiriera" ; "sugiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sugiriéramos" ; "sugiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sugirierais" ; "sugirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sugirieran" ; "sugiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "sugerí" ;--# notpresent
    VP (Pret Sg P2) => "sugeriste" ;--# notpresent
    VP (Pret Sg P3) => "sugirió" ;--# notpresent
    VP (Pret Pl P1) => "sugerimos" ;--# notpresent
    VP (Pret Pl P2) => "sugeristeis" ;--# notpresent
    VP (Pret Pl P3) => "sugirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sugeriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sugerirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sugerirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sugeriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sugeriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sugerirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sugiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sugirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sugiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sugiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sugiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sugirieren" ;--# notpresent
    VP (Cond Sg P1) => "sugeriría" ;--# notpresent
    VP (Cond Sg P2) => "sugerirías" ;--# notpresent
    VP (Cond Sg P3) => "sugeriría" ;--# notpresent
    VP (Cond Pl P1) => "sugeriríamos" ;--# notpresent
    VP (Cond Pl P2) => "sugeriríais" ;--# notpresent
    VP (Cond Pl P3) => "sugerirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sugiere" ;
    VP (Imp Sg P3) => "sugiera" ;
    VP (Imp Pl P1) => "sugiramos" ;
    VP (Imp Pl P2) => "sugerid" ;
    VP (Imp Pl P3) => "sugieran" ;
    VP (Pass Sg Masc) => "sugerido" ;
    VP (Pass Sg Fem) => "sugerida" ;
    VP (Pass Pl Masc) => "sugeridos" ;
    VP (Pass Pl Fem) => "sugeridas"
    }
  } ;

lin transferir_V = verboV 
 {s = table {
    VI Infn => "transferir" ;
    VI Ger => "transfiriendo" ;
    VI Part => "transferido" ;
    VP (Pres Ind Sg P1) => "transfiero" ;
    VP (Pres Ind Sg P2) => "transfieres" ;
    VP (Pres Ind Sg P3) => "transfiere" ;
    VP (Pres Ind Pl P1) => "transferimos" ;
    VP (Pres Ind Pl P2) => "transferís" ;
    VP (Pres Ind Pl P3) => "transfieren" ;
    VP (Pres Subj Sg P1) => "transfiera" ;
    VP (Pres Subj Sg P2) => "transfieras" ;
    VP (Pres Subj Sg P3) => "transfiera" ;
    VP (Pres Subj Pl P1) => "transfiramos" ;
    VP (Pres Subj Pl P2) => "transfiráis" ;
    VP (Pres Subj Pl P3) => "transfieran" ;
    VP (Impf Ind Sg P1) => "transfería" ;--# notpresent
    VP (Impf Ind Sg P2) => "transferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "transfería" ;--# notpresent
    VP (Impf Ind Pl P1) => "transferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "transferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "transferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"transfiriera" ; "transfiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"transfirieras" ; "transfirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"transfiriera" ; "transfiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"transfiriéramos" ; "transfiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"transfirierais" ; "transfirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"transfirieran" ; "transfiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "transferí" ;--# notpresent
    VP (Pret Sg P2) => "transferiste" ;--# notpresent
    VP (Pret Sg P3) => "transfirió" ;--# notpresent
    VP (Pret Pl P1) => "transferimos" ;--# notpresent
    VP (Pret Pl P2) => "transferisteis" ;--# notpresent
    VP (Pret Pl P3) => "transfirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "transferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "transferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "transferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "transferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "transferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "transferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "transfiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "transfirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "transfiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "transfiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "transfiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "transfirieren" ;--# notpresent
    VP (Cond Sg P1) => "transferiría" ;--# notpresent
    VP (Cond Sg P2) => "transferirías" ;--# notpresent
    VP (Cond Sg P3) => "transferiría" ;--# notpresent
    VP (Cond Pl P1) => "transferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "transferiríais" ;--# notpresent
    VP (Cond Pl P3) => "transferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "transfiere" ;
    VP (Imp Sg P3) => "transfiera" ;
    VP (Imp Pl P1) => "transfiramos" ;
    VP (Imp Pl P2) => "transferid" ;
    VP (Imp Pl P3) => "transfieran" ;
    VP (Pass Sg Masc) => "transferido" ;
    VP (Pass Sg Fem) => "transferida" ;
    VP (Pass Pl Masc) => "transferidos" ;
    VP (Pass Pl Fem) => "transferidas"
    }
  } ;

lin trasferir_V = verboV 
 {s = table {
    VI Infn => "trasferir" ;
    VI Ger => "trasfiriendo" ;
    VI Part => "trasferido" ;
    VP (Pres Ind Sg P1) => "trasfiero" ;
    VP (Pres Ind Sg P2) => "trasfieres" ;
    VP (Pres Ind Sg P3) => "trasfiere" ;
    VP (Pres Ind Pl P1) => "trasferimos" ;
    VP (Pres Ind Pl P2) => "trasferís" ;
    VP (Pres Ind Pl P3) => "trasfieren" ;
    VP (Pres Subj Sg P1) => "trasfiera" ;
    VP (Pres Subj Sg P2) => "trasfieras" ;
    VP (Pres Subj Sg P3) => "trasfiera" ;
    VP (Pres Subj Pl P1) => "trasfiramos" ;
    VP (Pres Subj Pl P2) => "trasfiráis" ;
    VP (Pres Subj Pl P3) => "trasfieran" ;
    VP (Impf Ind Sg P1) => "trasfería" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasferías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasfería" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasferíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasferíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasferían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasfiriera" ; "trasfiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasfirieras" ; "trasfirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasfiriera" ; "trasfiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasfiriéramos" ; "trasfiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasfirierais" ; "trasfirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasfirieran" ; "trasfiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "trasferí" ;--# notpresent
    VP (Pret Sg P2) => "trasferiste" ;--# notpresent
    VP (Pret Sg P3) => "trasfirió" ;--# notpresent
    VP (Pret Pl P1) => "trasferimos" ;--# notpresent
    VP (Pret Pl P2) => "trasferisteis" ;--# notpresent
    VP (Pret Pl P3) => "trasfirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasferiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasferirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasferirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasferiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasferiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasferirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasfiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasfirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasfiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasfiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasfiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasfirieren" ;--# notpresent
    VP (Cond Sg P1) => "trasferiría" ;--# notpresent
    VP (Cond Sg P2) => "trasferirías" ;--# notpresent
    VP (Cond Sg P3) => "trasferiría" ;--# notpresent
    VP (Cond Pl P1) => "trasferiríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasferiríais" ;--# notpresent
    VP (Cond Pl P3) => "trasferirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasfiere" ;
    VP (Imp Sg P3) => "trasfiera" ;
    VP (Imp Pl P1) => "trasfiramos" ;
    VP (Imp Pl P2) => "trasferid" ;
    VP (Imp Pl P3) => "trasfieran" ;
    VP (Pass Sg Masc) => "trasferido" ;
    VP (Pass Sg Fem) => "trasferida" ;
    VP (Pass Pl Masc) => "trasferidos" ;
    VP (Pass Pl Fem) => "trasferidas"
    }
  } ;

lin zaherir_V = verboV 
 {s = table {
    VI Infn => "zaherir" ;
    VI Ger => "zahiriendo" ;
    VI Part => "zaherido" ;
    VP (Pres Ind Sg P1) => "zahiero" ;
    VP (Pres Ind Sg P2) => "zahieres" ;
    VP (Pres Ind Sg P3) => "zahiere" ;
    VP (Pres Ind Pl P1) => "zaherimos" ;
    VP (Pres Ind Pl P2) => "zaherís" ;
    VP (Pres Ind Pl P3) => "zahieren" ;
    VP (Pres Subj Sg P1) => "zahiera" ;
    VP (Pres Subj Sg P2) => "zahieras" ;
    VP (Pres Subj Sg P3) => "zahiera" ;
    VP (Pres Subj Pl P1) => "zahiramos" ;
    VP (Pres Subj Pl P2) => "zahiráis" ;
    VP (Pres Subj Pl P3) => "zahieran" ;
    VP (Impf Ind Sg P1) => "zahería" ;--# notpresent
    VP (Impf Ind Sg P2) => "zaherías" ;--# notpresent
    VP (Impf Ind Sg P3) => "zahería" ;--# notpresent
    VP (Impf Ind Pl P1) => "zaheríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "zaheríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "zaherían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"zahiriera" ; "zahiriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"zahirieras" ; "zahirieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"zahiriera" ; "zahiriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"zahiriéramos" ; "zahiriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"zahirierais" ; "zahirieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"zahirieran" ; "zahiriesen"} ;--# notpresent
    VP (Pret Sg P1) => "zaherí" ;--# notpresent
    VP (Pret Sg P2) => "zaheriste" ;--# notpresent
    VP (Pret Sg P3) => "zahirió" ;--# notpresent
    VP (Pret Pl P1) => "zaherimos" ;--# notpresent
    VP (Pret Pl P2) => "zaheristeis" ;--# notpresent
    VP (Pret Pl P3) => "zahirieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "zaheriré" ;--# notpresent
    VP (Fut Ind Sg P2) => "zaherirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "zaherirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "zaheriremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "zaheriréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "zaherirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "zahiriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "zahirieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "zahiriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "zahiriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "zahiriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "zahirieren" ;--# notpresent
    VP (Cond Sg P1) => "zaheriría" ;--# notpresent
    VP (Cond Sg P2) => "zaherirías" ;--# notpresent
    VP (Cond Sg P3) => "zaheriría" ;--# notpresent
    VP (Cond Pl P1) => "zaheriríamos" ;--# notpresent
    VP (Cond Pl P2) => "zaheriríais" ;--# notpresent
    VP (Cond Pl P3) => "zaherirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "zahiere" ;
    VP (Imp Sg P3) => "zahiera" ;
    VP (Imp Pl P1) => "zahiramos" ;
    VP (Imp Pl P2) => "zaherid" ;
    VP (Imp Pl P3) => "zahieran" ;
    VP (Pass Sg Masc) => "zaherido" ;
    VP (Pass Sg Fem) => "zaherida" ;
    VP (Pass Pl Masc) => "zaheridos" ;
    VP (Pass Pl Fem) => "zaheridas"
    }
  } ;

lin colegir_V = verboV 
 {s = table {
    VI Infn => "colegir" ;
    VI Ger => "coligiendo" ;
    VI Part => "colegido" ;
    VP (Pres Ind Sg P1) => "colijo" ;
    VP (Pres Ind Sg P2) => "coliges" ;
    VP (Pres Ind Sg P3) => "colige" ;
    VP (Pres Ind Pl P1) => "colegimos" ;
    VP (Pres Ind Pl P2) => "colegís" ;
    VP (Pres Ind Pl P3) => "coligen" ;
    VP (Pres Subj Sg P1) => "colija" ;
    VP (Pres Subj Sg P2) => "colijas" ;
    VP (Pres Subj Sg P3) => "colija" ;
    VP (Pres Subj Pl P1) => "colijamos" ;
    VP (Pres Subj Pl P2) => "colijáis" ;
    VP (Pres Subj Pl P3) => "colijan" ;
    VP (Impf Ind Sg P1) => "colegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "colegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "colegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "colegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "colegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "colegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"coligiera" ; "coligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"coligieras" ; "coligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"coligiera" ; "coligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coligiéramos" ; "coligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"coligierais" ; "coligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"coligieran" ; "coligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "colegí" ;--# notpresent
    VP (Pret Sg P2) => "colegiste" ;--# notpresent
    VP (Pret Sg P3) => "coligió" ;--# notpresent
    VP (Pret Pl P1) => "colegimos" ;--# notpresent
    VP (Pret Pl P2) => "colegisteis" ;--# notpresent
    VP (Pret Pl P3) => "coligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "colegiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "colegirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "colegirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "colegiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "colegiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "colegirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "coligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "coligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "coligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "coligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "coligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "coligieren" ;--# notpresent
    VP (Cond Sg P1) => "colegiría" ;--# notpresent
    VP (Cond Sg P2) => "colegirías" ;--# notpresent
    VP (Cond Sg P3) => "colegiría" ;--# notpresent
    VP (Cond Pl P1) => "colegiríamos" ;--# notpresent
    VP (Cond Pl P2) => "colegiríais" ;--# notpresent
    VP (Cond Pl P3) => "colegirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "colige" ;
    VP (Imp Sg P3) => "colija" ;
    VP (Imp Pl P1) => "colijamos" ;
    VP (Imp Pl P2) => "colegid" ;
    VP (Imp Pl P3) => "colijan" ;
    VP (Pass Sg Masc) => "colegido" ;
    VP (Pass Sg Fem) => "colegida" ;
    VP (Pass Pl Masc) => "colegidos" ;
    VP (Pass Pl Fem) => "colegidas"
    }
  } ;

lin corregir_V = verboV 
 {s = table {
    VI Infn => "corregir" ;
    VI Ger => "corrigiendo" ;
    VI Part => "corregido" ;
    VP (Pres Ind Sg P1) => "corrijo" ;
    VP (Pres Ind Sg P2) => "corriges" ;
    VP (Pres Ind Sg P3) => "corrige" ;
    VP (Pres Ind Pl P1) => "corregimos" ;
    VP (Pres Ind Pl P2) => "corregís" ;
    VP (Pres Ind Pl P3) => "corrigen" ;
    VP (Pres Subj Sg P1) => "corrija" ;
    VP (Pres Subj Sg P2) => "corrijas" ;
    VP (Pres Subj Sg P3) => "corrija" ;
    VP (Pres Subj Pl P1) => "corrijamos" ;
    VP (Pres Subj Pl P2) => "corrijáis" ;
    VP (Pres Subj Pl P3) => "corrijan" ;
    VP (Impf Ind Sg P1) => "corregía" ;--# notpresent
    VP (Impf Ind Sg P2) => "corregías" ;--# notpresent
    VP (Impf Ind Sg P3) => "corregía" ;--# notpresent
    VP (Impf Ind Pl P1) => "corregíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "corregíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "corregían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"corrigiera" ; "corrigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"corrigieras" ; "corrigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"corrigiera" ; "corrigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"corrigiéramos" ; "corrigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"corrigierais" ; "corrigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"corrigieran" ; "corrigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "corregí" ;--# notpresent
    VP (Pret Sg P2) => "corregiste" ;--# notpresent
    VP (Pret Sg P3) => "corrigió" ;--# notpresent
    VP (Pret Pl P1) => "corregimos" ;--# notpresent
    VP (Pret Pl P2) => "corregisteis" ;--# notpresent
    VP (Pret Pl P3) => "corrigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "corregiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "corregirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "corregirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "corregiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "corregiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "corregirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "corrigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "corrigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "corrigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "corrigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "corrigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "corrigieren" ;--# notpresent
    VP (Cond Sg P1) => "corregiría" ;--# notpresent
    VP (Cond Sg P2) => "corregirías" ;--# notpresent
    VP (Cond Sg P3) => "corregiría" ;--# notpresent
    VP (Cond Pl P1) => "corregiríamos" ;--# notpresent
    VP (Cond Pl P2) => "corregiríais" ;--# notpresent
    VP (Cond Pl P3) => "corregirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "corrige" ;
    VP (Imp Sg P3) => "corrija" ;
    VP (Imp Pl P1) => "corrijamos" ;
    VP (Imp Pl P2) => "corregid" ;
    VP (Imp Pl P3) => "corrijan" ;
    VP (Pass Sg Masc) => "corregido" ;
    VP (Pass Sg Fem) => "corregida" ;
    VP (Pass Pl Masc) => "corregidos" ;
    VP (Pass Pl Fem) => "corregidas"
    }
  } ;

lin elegir_V = verboV 
 {s = table {
    VI Infn => "elegir" ;
    VI Ger => "eligiendo" ;
    VI Part => variants {"elegido" ; "electo"} ;
    VP (Pres Ind Sg P1) => "elijo" ;
    VP (Pres Ind Sg P2) => "eliges" ;
    VP (Pres Ind Sg P3) => "elige" ;
    VP (Pres Ind Pl P1) => "elegimos" ;
    VP (Pres Ind Pl P2) => "elegís" ;
    VP (Pres Ind Pl P3) => "eligen" ;
    VP (Pres Subj Sg P1) => "elija" ;
    VP (Pres Subj Sg P2) => "elijas" ;
    VP (Pres Subj Sg P3) => "elija" ;
    VP (Pres Subj Pl P1) => "elijamos" ;
    VP (Pres Subj Pl P2) => "elijáis" ;
    VP (Pres Subj Pl P3) => "elijan" ;
    VP (Impf Ind Sg P1) => "elegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "elegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "elegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "elegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "elegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "elegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"eligiera" ; "eligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"eligieras" ; "eligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"eligiera" ; "eligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"eligiéramos" ; "eligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"eligierais" ; "eligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"eligieran" ; "eligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "elegí" ;--# notpresent
    VP (Pret Sg P2) => "elegiste" ;--# notpresent
    VP (Pret Sg P3) => "eligió" ;--# notpresent
    VP (Pret Pl P1) => "elegimos" ;--# notpresent
    VP (Pret Pl P2) => "elegisteis" ;--# notpresent
    VP (Pret Pl P3) => "eligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "elegiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "elegirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "elegirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "elegiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "elegiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "elegirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "eligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "eligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "eligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "eligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "eligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "eligieren" ;--# notpresent
    VP (Cond Sg P1) => "elegiría" ;--# notpresent
    VP (Cond Sg P2) => "elegirías" ;--# notpresent
    VP (Cond Sg P3) => "elegiría" ;--# notpresent
    VP (Cond Pl P1) => "elegiríamos" ;--# notpresent
    VP (Cond Pl P2) => "elegiríais" ;--# notpresent
    VP (Cond Pl P3) => "elegirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "elige" ;
    VP (Imp Sg P3) => "elija" ;
    VP (Imp Pl P1) => "elijamos" ;
    VP (Imp Pl P2) => "elegid" ;
    VP (Imp Pl P3) => "elijan" ;
    VP (Pass Sg Masc) => variants {"elegido" ; "electo"} ;
    VP (Pass Sg Fem) => variants {"elegida" ; "electa"} ;
    VP (Pass Pl Masc) => variants {"elegidos" ; "electos"} ;
    VP (Pass Pl Fem) => variants {"elegidas" ; "electas"}
    }
  } ;

lin preelegir_V = verboV 
 {s = table {
    VI Infn => "preelegir" ;
    VI Ger => "preeligiendo" ;
    VI Part => "preelegido" ;
    VP (Pres Ind Sg P1) => "preelijo" ;
    VP (Pres Ind Sg P2) => "preeliges" ;
    VP (Pres Ind Sg P3) => "preelige" ;
    VP (Pres Ind Pl P1) => "preelegimos" ;
    VP (Pres Ind Pl P2) => "preelegís" ;
    VP (Pres Ind Pl P3) => "preeligen" ;
    VP (Pres Subj Sg P1) => "preelija" ;
    VP (Pres Subj Sg P2) => "preelijas" ;
    VP (Pres Subj Sg P3) => "preelija" ;
    VP (Pres Subj Pl P1) => "preelijamos" ;
    VP (Pres Subj Pl P2) => "preelijáis" ;
    VP (Pres Subj Pl P3) => "preelijan" ;
    VP (Impf Ind Sg P1) => "preelegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "preelegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "preelegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preelegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preelegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preelegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"preeligiera" ; "preeligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"preeligieras" ; "preeligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"preeligiera" ; "preeligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"preeligiéramos" ; "preeligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"preeligierais" ; "preeligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"preeligieran" ; "preeligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "preelegí" ;--# notpresent
    VP (Pret Sg P2) => "preelegiste" ;--# notpresent
    VP (Pret Sg P3) => "preeligió" ;--# notpresent
    VP (Pret Pl P1) => "preelegimos" ;--# notpresent
    VP (Pret Pl P2) => "preelegisteis" ;--# notpresent
    VP (Pret Pl P3) => "preeligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preelegiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "preelegirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "preelegirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preelegiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preelegiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "preelegirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "preeligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "preeligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "preeligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "preeligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "preeligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "preeligieren" ;--# notpresent
    VP (Cond Sg P1) => "preelegiría" ;--# notpresent
    VP (Cond Sg P2) => "preelegirías" ;--# notpresent
    VP (Cond Sg P3) => "preelegiría" ;--# notpresent
    VP (Cond Pl P1) => "preelegiríamos" ;--# notpresent
    VP (Cond Pl P2) => "preelegiríais" ;--# notpresent
    VP (Cond Pl P3) => "preelegirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preelige" ;
    VP (Imp Sg P3) => "preelija" ;
    VP (Imp Pl P1) => "preelijamos" ;
    VP (Imp Pl P2) => "preelegid" ;
    VP (Imp Pl P3) => "preelijan" ;
    VP (Pass Sg Masc) => "preelegido" ;
    VP (Pass Sg Fem) => "preelegida" ;
    VP (Pass Pl Masc) => "preelegidos" ;
    VP (Pass Pl Fem) => "preelegidas"
    }
  } ;

lin recolegir_V = verboV 
 {s = table {
    VI Infn => "recolegir" ;
    VI Ger => "recoligiendo" ;
    VI Part => "recolegido" ;
    VP (Pres Ind Sg P1) => "recolijo" ;
    VP (Pres Ind Sg P2) => "recoliges" ;
    VP (Pres Ind Sg P3) => "recolige" ;
    VP (Pres Ind Pl P1) => "recolegimos" ;
    VP (Pres Ind Pl P2) => "recolegís" ;
    VP (Pres Ind Pl P3) => "recoligen" ;
    VP (Pres Subj Sg P1) => "recolija" ;
    VP (Pres Subj Sg P2) => "recolijas" ;
    VP (Pres Subj Sg P3) => "recolija" ;
    VP (Pres Subj Pl P1) => "recolijamos" ;
    VP (Pres Subj Pl P2) => "recolijáis" ;
    VP (Pres Subj Pl P3) => "recolijan" ;
    VP (Impf Ind Sg P1) => "recolegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recolegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recolegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recolegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recolegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recolegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recoligiera" ; "recoligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recoligieras" ; "recoligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recoligiera" ; "recoligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recoligiéramos" ; "recoligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recoligierais" ; "recoligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recoligieran" ; "recoligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "recolegí" ;--# notpresent
    VP (Pret Sg P2) => "recolegiste" ;--# notpresent
    VP (Pret Sg P3) => "recoligió" ;--# notpresent
    VP (Pret Pl P1) => "recolegimos" ;--# notpresent
    VP (Pret Pl P2) => "recolegisteis" ;--# notpresent
    VP (Pret Pl P3) => "recoligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recolegiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recolegirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recolegirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recolegiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recolegiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recolegirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recoligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recoligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recoligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recoligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recoligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recoligieren" ;--# notpresent
    VP (Cond Sg P1) => "recolegiría" ;--# notpresent
    VP (Cond Sg P2) => "recolegirías" ;--# notpresent
    VP (Cond Sg P3) => "recolegiría" ;--# notpresent
    VP (Cond Pl P1) => "recolegiríamos" ;--# notpresent
    VP (Cond Pl P2) => "recolegiríais" ;--# notpresent
    VP (Cond Pl P3) => "recolegirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recolige" ;
    VP (Imp Sg P3) => "recolija" ;
    VP (Imp Pl P1) => "recolijamos" ;
    VP (Imp Pl P2) => "recolegid" ;
    VP (Imp Pl P3) => "recolijan" ;
    VP (Pass Sg Masc) => "recolegido" ;
    VP (Pass Sg Fem) => "recolegida" ;
    VP (Pass Pl Masc) => "recolegidos" ;
    VP (Pass Pl Fem) => "recolegidas"
    }
  } ;

lin reelegir_V = verboV 
 {s = table {
    VI Infn => "reelegir" ;
    VI Ger => "reeligiendo" ;
    VI Part => "reelegido" ;
    VP (Pres Ind Sg P1) => "reelijo" ;
    VP (Pres Ind Sg P2) => "reeliges" ;
    VP (Pres Ind Sg P3) => "reelige" ;
    VP (Pres Ind Pl P1) => "reelegimos" ;
    VP (Pres Ind Pl P2) => "reelegís" ;
    VP (Pres Ind Pl P3) => "reeligen" ;
    VP (Pres Subj Sg P1) => "reelija" ;
    VP (Pres Subj Sg P2) => "reelijas" ;
    VP (Pres Subj Sg P3) => "reelija" ;
    VP (Pres Subj Pl P1) => "reelijamos" ;
    VP (Pres Subj Pl P2) => "reelijáis" ;
    VP (Pres Subj Pl P3) => "reelijan" ;
    VP (Impf Ind Sg P1) => "reelegía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reelegías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reelegía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reelegíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reelegíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reelegían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reeligiera" ; "reeligiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reeligieras" ; "reeligieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reeligiera" ; "reeligiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reeligiéramos" ; "reeligiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reeligierais" ; "reeligieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reeligieran" ; "reeligiesen"} ;--# notpresent
    VP (Pret Sg P1) => "reelegí" ;--# notpresent
    VP (Pret Sg P2) => "reelegiste" ;--# notpresent
    VP (Pret Sg P3) => "reeligió" ;--# notpresent
    VP (Pret Pl P1) => "reelegimos" ;--# notpresent
    VP (Pret Pl P2) => "reelegisteis" ;--# notpresent
    VP (Pret Pl P3) => "reeligieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reelegiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reelegirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reelegirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reelegiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reelegiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reelegirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reeligiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reeligieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reeligiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reeligiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reeligiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reeligieren" ;--# notpresent
    VP (Cond Sg P1) => "reelegiría" ;--# notpresent
    VP (Cond Sg P2) => "reelegirías" ;--# notpresent
    VP (Cond Sg P3) => "reelegiría" ;--# notpresent
    VP (Cond Pl P1) => "reelegiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reelegiríais" ;--# notpresent
    VP (Cond Pl P3) => "reelegirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reelige" ;
    VP (Imp Sg P3) => "reelija" ;
    VP (Imp Pl P1) => "reelijamos" ;
    VP (Imp Pl P2) => "reelegid" ;
    VP (Imp Pl P3) => "reelijan" ;
    VP (Pass Sg Masc) => "reelegido" ;
    VP (Pass Sg Fem) => "reelegida" ;
    VP (Pass Pl Masc) => "reelegidos" ;
    VP (Pass Pl Fem) => "reelegidas"
    }
  } ;

lin regir_V = verboV 
 {s = table {
    VI Infn => "regir" ;
    VI Ger => "rigiendo" ;
    VI Part => "regido" ;
    VP (Pres Ind Sg P1) => "rijo" ;
    VP (Pres Ind Sg P2) => "riges" ;
    VP (Pres Ind Sg P3) => "rige" ;
    VP (Pres Ind Pl P1) => "regimos" ;
    VP (Pres Ind Pl P2) => "regís" ;
    VP (Pres Ind Pl P3) => "rigen" ;
    VP (Pres Subj Sg P1) => "rija" ;
    VP (Pres Subj Sg P2) => "rijas" ;
    VP (Pres Subj Sg P3) => "rija" ;
    VP (Pres Subj Pl P1) => "rijamos" ;
    VP (Pres Subj Pl P2) => "rijáis" ;
    VP (Pres Subj Pl P3) => "rijan" ;
    VP (Impf Ind Sg P1) => "regía" ;--# notpresent
    VP (Impf Ind Sg P2) => "regías" ;--# notpresent
    VP (Impf Ind Sg P3) => "regía" ;--# notpresent
    VP (Impf Ind Pl P1) => "regíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "regíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "regían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rigiera" ; "rigiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rigieras" ; "rigieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rigiera" ; "rigiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rigiéramos" ; "rigiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rigierais" ; "rigieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rigieran" ; "rigiesen"} ;--# notpresent
    VP (Pret Sg P1) => "regí" ;--# notpresent
    VP (Pret Sg P2) => "registe" ;--# notpresent
    VP (Pret Sg P3) => "rigió" ;--# notpresent
    VP (Pret Pl P1) => "regimos" ;--# notpresent
    VP (Pret Pl P2) => "registeis" ;--# notpresent
    VP (Pret Pl P3) => "rigieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "regiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "regirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "regirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "regiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "regiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "regirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rigiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rigieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rigiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rigiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rigiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rigieren" ;--# notpresent
    VP (Cond Sg P1) => "regiría" ;--# notpresent
    VP (Cond Sg P2) => "regirías" ;--# notpresent
    VP (Cond Sg P3) => "regiría" ;--# notpresent
    VP (Cond Pl P1) => "regiríamos" ;--# notpresent
    VP (Cond Pl P2) => "regiríais" ;--# notpresent
    VP (Cond Pl P3) => "regirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rige" ;
    VP (Imp Sg P3) => "rija" ;
    VP (Imp Pl P1) => "rijamos" ;
    VP (Imp Pl P2) => "regid" ;
    VP (Imp Pl P3) => "rijan" ;
    VP (Pass Sg Masc) => "regido" ;
    VP (Pass Sg Fem) => "regida" ;
    VP (Pass Pl Masc) => "regidos" ;
    VP (Pass Pl Fem) => "regidas"
    }
  } ;

lin abeldar_V = verboV 
 {s = table {
    VI Infn => "abeldar" ;
    VI Ger => "abeldando" ;
    VI Part => "abeldado" ;
    VP (Pres Ind Sg P1) => "abieldo" ;
    VP (Pres Ind Sg P2) => "abieldas" ;
    VP (Pres Ind Sg P3) => "abielda" ;
    VP (Pres Ind Pl P1) => "abeldamos" ;
    VP (Pres Ind Pl P2) => "abeldáis" ;
    VP (Pres Ind Pl P3) => "abieldan" ;
    VP (Pres Subj Sg P1) => "abielde" ;
    VP (Pres Subj Sg P2) => "abieldes" ;
    VP (Pres Subj Sg P3) => "abielde" ;
    VP (Pres Subj Pl P1) => "abeldemos" ;
    VP (Pres Subj Pl P2) => "abeldéis" ;
    VP (Pres Subj Pl P3) => "abielden" ;
    VP (Impf Ind Sg P1) => "abeldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "abeldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "abeldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "abeldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abeldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abeldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abeldara" ; "abeldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abeldaras" ; "abeldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abeldara" ; "abeldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abeldáramos" ; "abeldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abeldarais" ; "abeldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abeldaran" ; "abeldasen"} ;--# notpresent
    VP (Pret Sg P1) => "abeldé" ;--# notpresent
    VP (Pret Sg P2) => "abeldaste" ;--# notpresent
    VP (Pret Sg P3) => "abeldó" ;--# notpresent
    VP (Pret Pl P1) => "abeldamos" ;--# notpresent
    VP (Pret Pl P2) => "abeldasteis" ;--# notpresent
    VP (Pret Pl P3) => "abeldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abeldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abeldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abeldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "abeldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abeldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abeldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abeldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "abeldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "abeldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "abeldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abeldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abeldaren" ;--# notpresent
    VP (Cond Sg P1) => "abeldaría" ;--# notpresent
    VP (Cond Sg P2) => "abeldarías" ;--# notpresent
    VP (Cond Sg P3) => "abeldaría" ;--# notpresent
    VP (Cond Pl P1) => "abeldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "abeldaríais" ;--# notpresent
    VP (Cond Pl P3) => "abeldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abielda" ;
    VP (Imp Sg P3) => "abielde" ;
    VP (Imp Pl P1) => "abeldemos" ;
    VP (Imp Pl P2) => "abeldad" ;
    VP (Imp Pl P3) => "abielden" ;
    VP (Pass Sg Masc) => "abeldado" ;
    VP (Pass Sg Fem) => "abeldada" ;
    VP (Pass Pl Masc) => "abeldados" ;
    VP (Pass Pl Fem) => "abeldadas"
    }
  } ;

lin abuñolar_V = verboV 
 {s = table {
    VI Infn => "abuñolar" ;
    VI Ger => "abuñolando" ;
    VI Part => "abuñolado" ;
    VP (Pres Ind Sg P1) => "abuñuelo" ;
    VP (Pres Ind Sg P2) => "abuñuelas" ;
    VP (Pres Ind Sg P3) => "abuñuela" ;
    VP (Pres Ind Pl P1) => "abuñolamos" ;
    VP (Pres Ind Pl P2) => "abuñoláis" ;
    VP (Pres Ind Pl P3) => "abuñuelan" ;
    VP (Pres Subj Sg P1) => "abuñuele" ;
    VP (Pres Subj Sg P2) => "abuñueles" ;
    VP (Pres Subj Sg P3) => "abuñuele" ;
    VP (Pres Subj Pl P1) => "abuñolemos" ;
    VP (Pres Subj Pl P2) => "abuñoléis" ;
    VP (Pres Subj Pl P3) => "abuñuelen" ;
    VP (Impf Ind Sg P1) => "abuñolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "abuñolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "abuñolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "abuñolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "abuñolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "abuñolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"abuñolara" ; "abuñolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"abuñolaras" ; "abuñolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"abuñolara" ; "abuñolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"abuñoláramos" ; "abuñolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"abuñolarais" ; "abuñolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"abuñolaran" ; "abuñolasen"} ;--# notpresent
    VP (Pret Sg P1) => "abuñolé" ;--# notpresent
    VP (Pret Sg P2) => "abuñolaste" ;--# notpresent
    VP (Pret Sg P3) => "abuñoló" ;--# notpresent
    VP (Pret Pl P1) => "abuñolamos" ;--# notpresent
    VP (Pret Pl P2) => "abuñolasteis" ;--# notpresent
    VP (Pret Pl P3) => "abuñolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "abuñolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "abuñolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "abuñolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "abuñolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "abuñolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "abuñolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "abuñolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "abuñolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "abuñolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "abuñoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "abuñolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "abuñolaren" ;--# notpresent
    VP (Cond Sg P1) => "abuñolaría" ;--# notpresent
    VP (Cond Sg P2) => "abuñolarías" ;--# notpresent
    VP (Cond Sg P3) => "abuñolaría" ;--# notpresent
    VP (Cond Pl P1) => "abuñolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "abuñolaríais" ;--# notpresent
    VP (Cond Pl P3) => "abuñolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "abuñuela" ;
    VP (Imp Sg P3) => "abuñuele" ;
    VP (Imp Pl P1) => "abuñolemos" ;
    VP (Imp Pl P2) => "abuñolad" ;
    VP (Imp Pl P3) => "abuñuelen" ;
    VP (Pass Sg Masc) => "abuñolado" ;
    VP (Pass Sg Fem) => "abuñolada" ;
    VP (Pass Pl Masc) => "abuñolados" ;
    VP (Pass Pl Fem) => "abuñoladas"
    }
  } ;

lin acertar_V = verboV 
 {s = table {
    VI Infn => "acertar" ;
    VI Ger => "acertando" ;
    VI Part => "acertado" ;
    VP (Pres Ind Sg P1) => "acierto" ;
    VP (Pres Ind Sg P2) => "aciertas" ;
    VP (Pres Ind Sg P3) => "acierta" ;
    VP (Pres Ind Pl P1) => "acertamos" ;
    VP (Pres Ind Pl P2) => "acertáis" ;
    VP (Pres Ind Pl P3) => "aciertan" ;
    VP (Pres Subj Sg P1) => "acierte" ;
    VP (Pres Subj Sg P2) => "aciertes" ;
    VP (Pres Subj Sg P3) => "acierte" ;
    VP (Pres Subj Pl P1) => "acertemos" ;
    VP (Pres Subj Pl P2) => "acertéis" ;
    VP (Pres Subj Pl P3) => "acierten" ;
    VP (Impf Ind Sg P1) => "acertaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "acertabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "acertaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "acertábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acertabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acertaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acertara" ; "acertase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acertaras" ; "acertases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acertara" ; "acertase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acertáramos" ; "acertásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acertarais" ; "acertaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acertaran" ; "acertasen"} ;--# notpresent
    VP (Pret Sg P1) => "acerté" ;--# notpresent
    VP (Pret Sg P2) => "acertaste" ;--# notpresent
    VP (Pret Sg P3) => "acertó" ;--# notpresent
    VP (Pret Pl P1) => "acertamos" ;--# notpresent
    VP (Pret Pl P2) => "acertasteis" ;--# notpresent
    VP (Pret Pl P3) => "acertaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acertaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acertarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acertará" ;--# notpresent
    VP (Fut Ind Pl P1) => "acertaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acertaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acertarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acertare" ;--# notpresent
    VP (Fut Subj Sg P2) => "acertares" ;--# notpresent
    VP (Fut Subj Sg P3) => "acertare" ;--# notpresent
    VP (Fut Subj Pl P1) => "acertáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acertareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acertaren" ;--# notpresent
    VP (Cond Sg P1) => "acertaría" ;--# notpresent
    VP (Cond Sg P2) => "acertarías" ;--# notpresent
    VP (Cond Sg P3) => "acertaría" ;--# notpresent
    VP (Cond Pl P1) => "acertaríamos" ;--# notpresent
    VP (Cond Pl P2) => "acertaríais" ;--# notpresent
    VP (Cond Pl P3) => "acertarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acierta" ;
    VP (Imp Sg P3) => "acierte" ;
    VP (Imp Pl P1) => "acertemos" ;
    VP (Imp Pl P2) => "acertad" ;
    VP (Imp Pl P3) => "acierten" ;
    VP (Pass Sg Masc) => "acertado" ;
    VP (Pass Sg Fem) => "acertada" ;
    VP (Pass Pl Masc) => "acertados" ;
    VP (Pass Pl Fem) => "acertadas"
    }
  } ;

lin acollar_V = verboV 
 {s = table {
    VI Infn => "acollar" ;
    VI Ger => "acollando" ;
    VI Part => "acollado" ;
    VP (Pres Ind Sg P1) => "acuello" ;
    VP (Pres Ind Sg P2) => "acuellas" ;
    VP (Pres Ind Sg P3) => "acuella" ;
    VP (Pres Ind Pl P1) => "acollamos" ;
    VP (Pres Ind Pl P2) => "acolláis" ;
    VP (Pres Ind Pl P3) => "acuellan" ;
    VP (Pres Subj Sg P1) => "acuelle" ;
    VP (Pres Subj Sg P2) => "acuelles" ;
    VP (Pres Subj Sg P3) => "acuelle" ;
    VP (Pres Subj Pl P1) => "acollemos" ;
    VP (Pres Subj Pl P2) => "acolléis" ;
    VP (Pres Subj Pl P3) => "acuellen" ;
    VP (Impf Ind Sg P1) => "acollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "acollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "acollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "acollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acollara" ; "acollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acollaras" ; "acollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acollara" ; "acollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acolláramos" ; "acollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acollarais" ; "acollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acollaran" ; "acollasen"} ;--# notpresent
    VP (Pret Sg P1) => "acollé" ;--# notpresent
    VP (Pret Sg P2) => "acollaste" ;--# notpresent
    VP (Pret Sg P3) => "acolló" ;--# notpresent
    VP (Pret Pl P1) => "acollamos" ;--# notpresent
    VP (Pret Pl P2) => "acollasteis" ;--# notpresent
    VP (Pret Pl P3) => "acollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "acollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "acollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "acollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "acolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acollaren" ;--# notpresent
    VP (Cond Sg P1) => "acollaría" ;--# notpresent
    VP (Cond Sg P2) => "acollarías" ;--# notpresent
    VP (Cond Sg P3) => "acollaría" ;--# notpresent
    VP (Cond Pl P1) => "acollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "acollaríais" ;--# notpresent
    VP (Cond Pl P3) => "acollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acuella" ;
    VP (Imp Sg P3) => "acuelle" ;
    VP (Imp Pl P1) => "acollemos" ;
    VP (Imp Pl P2) => "acollad" ;
    VP (Imp Pl P3) => "acuellen" ;
    VP (Pass Sg Masc) => "acollado" ;
    VP (Pass Sg Fem) => "acollada" ;
    VP (Pass Pl Masc) => "acollados" ;
    VP (Pass Pl Fem) => "acolladas"
    }
  } ;

lin acordar_V = verboV 
 {s = table {
    VI Infn => "acordar" ;
    VI Ger => "acordando" ;
    VI Part => "acordado" ;
    VP (Pres Ind Sg P1) => "acuerdo" ;
    VP (Pres Ind Sg P2) => "acuerdas" ;
    VP (Pres Ind Sg P3) => "acuerda" ;
    VP (Pres Ind Pl P1) => "acordamos" ;
    VP (Pres Ind Pl P2) => "acordáis" ;
    VP (Pres Ind Pl P3) => "acuerdan" ;
    VP (Pres Subj Sg P1) => "acuerde" ;
    VP (Pres Subj Sg P2) => "acuerdes" ;
    VP (Pres Subj Sg P3) => "acuerde" ;
    VP (Pres Subj Pl P1) => "acordemos" ;
    VP (Pres Subj Pl P2) => "acordéis" ;
    VP (Pres Subj Pl P3) => "acuerden" ;
    VP (Impf Ind Sg P1) => "acordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "acordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "acordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "acordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acordara" ; "acordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acordaras" ; "acordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acordara" ; "acordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acordáramos" ; "acordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acordarais" ; "acordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acordaran" ; "acordasen"} ;--# notpresent
    VP (Pret Sg P1) => "acordé" ;--# notpresent
    VP (Pret Sg P2) => "acordaste" ;--# notpresent
    VP (Pret Sg P3) => "acordó" ;--# notpresent
    VP (Pret Pl P1) => "acordamos" ;--# notpresent
    VP (Pret Pl P2) => "acordasteis" ;--# notpresent
    VP (Pret Pl P3) => "acordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "acordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "acordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "acordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "acordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acordaren" ;--# notpresent
    VP (Cond Sg P1) => "acordaría" ;--# notpresent
    VP (Cond Sg P2) => "acordarías" ;--# notpresent
    VP (Cond Sg P3) => "acordaría" ;--# notpresent
    VP (Cond Pl P1) => "acordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "acordaríais" ;--# notpresent
    VP (Cond Pl P3) => "acordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acuerda" ;
    VP (Imp Sg P3) => "acuerde" ;
    VP (Imp Pl P1) => "acordemos" ;
    VP (Imp Pl P2) => "acordad" ;
    VP (Imp Pl P3) => "acuerden" ;
    VP (Pass Sg Masc) => "acordado" ;
    VP (Pass Sg Fem) => "acordada" ;
    VP (Pass Pl Masc) => "acordados" ;
    VP (Pass Pl Fem) => "acordadas"
    }
  } ;

lin acornar_V = verboV 
 {s = table {
    VI Infn => "acornar" ;
    VI Ger => "acornando" ;
    VI Part => "acornado" ;
    VP (Pres Ind Sg P1) => "acuerno" ;
    VP (Pres Ind Sg P2) => "acuernas" ;
    VP (Pres Ind Sg P3) => "acuerna" ;
    VP (Pres Ind Pl P1) => "acornamos" ;
    VP (Pres Ind Pl P2) => "acornáis" ;
    VP (Pres Ind Pl P3) => "acuernan" ;
    VP (Pres Subj Sg P1) => "acuerne" ;
    VP (Pres Subj Sg P2) => "acuernes" ;
    VP (Pres Subj Sg P3) => "acuerne" ;
    VP (Pres Subj Pl P1) => "acornemos" ;
    VP (Pres Subj Pl P2) => "acornéis" ;
    VP (Pres Subj Pl P3) => "acuernen" ;
    VP (Impf Ind Sg P1) => "acornaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "acornabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "acornaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "acornábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acornabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acornaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acornara" ; "acornase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acornaras" ; "acornases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acornara" ; "acornase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acornáramos" ; "acornásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acornarais" ; "acornaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acornaran" ; "acornasen"} ;--# notpresent
    VP (Pret Sg P1) => "acorné" ;--# notpresent
    VP (Pret Sg P2) => "acornaste" ;--# notpresent
    VP (Pret Sg P3) => "acornó" ;--# notpresent
    VP (Pret Pl P1) => "acornamos" ;--# notpresent
    VP (Pret Pl P2) => "acornasteis" ;--# notpresent
    VP (Pret Pl P3) => "acornaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acornaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acornarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acornará" ;--# notpresent
    VP (Fut Ind Pl P1) => "acornaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acornaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acornarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acornare" ;--# notpresent
    VP (Fut Subj Sg P2) => "acornares" ;--# notpresent
    VP (Fut Subj Sg P3) => "acornare" ;--# notpresent
    VP (Fut Subj Pl P1) => "acornáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acornareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acornaren" ;--# notpresent
    VP (Cond Sg P1) => "acornaría" ;--# notpresent
    VP (Cond Sg P2) => "acornarías" ;--# notpresent
    VP (Cond Sg P3) => "acornaría" ;--# notpresent
    VP (Cond Pl P1) => "acornaríamos" ;--# notpresent
    VP (Cond Pl P2) => "acornaríais" ;--# notpresent
    VP (Cond Pl P3) => "acornarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acuerna" ;
    VP (Imp Sg P3) => "acuerne" ;
    VP (Imp Pl P1) => "acornemos" ;
    VP (Imp Pl P2) => "acornad" ;
    VP (Imp Pl P3) => "acuernen" ;
    VP (Pass Sg Masc) => "acornado" ;
    VP (Pass Sg Fem) => "acornada" ;
    VP (Pass Pl Masc) => "acornados" ;
    VP (Pass Pl Fem) => "acornadas"
    }
  } ;

lin acostar_V = verboV 
 {s = table {
    VI Infn => "acostar" ;
    VI Ger => "acostando" ;
    VI Part => "acostado" ;
    VP (Pres Ind Sg P1) => "acuesto" ;
    VP (Pres Ind Sg P2) => "acuestas" ;
    VP (Pres Ind Sg P3) => "acuesta" ;
    VP (Pres Ind Pl P1) => "acostamos" ;
    VP (Pres Ind Pl P2) => "acostáis" ;
    VP (Pres Ind Pl P3) => "acuestan" ;
    VP (Pres Subj Sg P1) => "acueste" ;
    VP (Pres Subj Sg P2) => "acuestes" ;
    VP (Pres Subj Sg P3) => "acueste" ;
    VP (Pres Subj Pl P1) => "acostemos" ;
    VP (Pres Subj Pl P2) => "acostéis" ;
    VP (Pres Subj Pl P3) => "acuesten" ;
    VP (Impf Ind Sg P1) => "acostaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "acostabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "acostaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "acostábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acostabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acostaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acostara" ; "acostase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acostaras" ; "acostases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acostara" ; "acostase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acostáramos" ; "acostásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acostarais" ; "acostaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acostaran" ; "acostasen"} ;--# notpresent
    VP (Pret Sg P1) => "acosté" ;--# notpresent
    VP (Pret Sg P2) => "acostaste" ;--# notpresent
    VP (Pret Sg P3) => "acostó" ;--# notpresent
    VP (Pret Pl P1) => "acostamos" ;--# notpresent
    VP (Pret Pl P2) => "acostasteis" ;--# notpresent
    VP (Pret Pl P3) => "acostaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acostaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acostarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acostará" ;--# notpresent
    VP (Fut Ind Pl P1) => "acostaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acostaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acostarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acostare" ;--# notpresent
    VP (Fut Subj Sg P2) => "acostares" ;--# notpresent
    VP (Fut Subj Sg P3) => "acostare" ;--# notpresent
    VP (Fut Subj Pl P1) => "acostáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acostareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acostaren" ;--# notpresent
    VP (Cond Sg P1) => "acostaría" ;--# notpresent
    VP (Cond Sg P2) => "acostarías" ;--# notpresent
    VP (Cond Sg P3) => "acostaría" ;--# notpresent
    VP (Cond Pl P1) => "acostaríamos" ;--# notpresent
    VP (Cond Pl P2) => "acostaríais" ;--# notpresent
    VP (Cond Pl P3) => "acostarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acuesta" ;
    VP (Imp Sg P3) => "acueste" ;
    VP (Imp Pl P1) => "acostemos" ;
    VP (Imp Pl P2) => "acostad" ;
    VP (Imp Pl P3) => "acuesten" ;
    VP (Pass Sg Masc) => "acostado" ;
    VP (Pass Sg Fem) => "acostada" ;
    VP (Pass Pl Masc) => "acostados" ;
    VP (Pass Pl Fem) => "acostadas"
    }
  } ;

lin acrecentar_V = verboV 
 {s = table {
    VI Infn => "acrecentar" ;
    VI Ger => "acrecentando" ;
    VI Part => "acrecentado" ;
    VP (Pres Ind Sg P1) => "acreciento" ;
    VP (Pres Ind Sg P2) => "acrecientas" ;
    VP (Pres Ind Sg P3) => "acrecienta" ;
    VP (Pres Ind Pl P1) => "acrecentamos" ;
    VP (Pres Ind Pl P2) => "acrecentáis" ;
    VP (Pres Ind Pl P3) => "acrecientan" ;
    VP (Pres Subj Sg P1) => "acreciente" ;
    VP (Pres Subj Sg P2) => "acrecientes" ;
    VP (Pres Subj Sg P3) => "acreciente" ;
    VP (Pres Subj Pl P1) => "acrecentemos" ;
    VP (Pres Subj Pl P2) => "acrecentéis" ;
    VP (Pres Subj Pl P3) => "acrecienten" ;
    VP (Impf Ind Sg P1) => "acrecentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "acrecentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "acrecentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "acrecentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acrecentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acrecentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acrecentara" ; "acrecentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acrecentaras" ; "acrecentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acrecentara" ; "acrecentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acrecentáramos" ; "acrecentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acrecentarais" ; "acrecentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acrecentaran" ; "acrecentasen"} ;--# notpresent
    VP (Pret Sg P1) => "acrecenté" ;--# notpresent
    VP (Pret Sg P2) => "acrecentaste" ;--# notpresent
    VP (Pret Sg P3) => "acrecentó" ;--# notpresent
    VP (Pret Pl P1) => "acrecentamos" ;--# notpresent
    VP (Pret Pl P2) => "acrecentasteis" ;--# notpresent
    VP (Pret Pl P3) => "acrecentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acrecentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acrecentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acrecentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "acrecentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acrecentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acrecentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acrecentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "acrecentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "acrecentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "acrecentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acrecentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acrecentaren" ;--# notpresent
    VP (Cond Sg P1) => "acrecentaría" ;--# notpresent
    VP (Cond Sg P2) => "acrecentarías" ;--# notpresent
    VP (Cond Sg P3) => "acrecentaría" ;--# notpresent
    VP (Cond Pl P1) => "acrecentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "acrecentaríais" ;--# notpresent
    VP (Cond Pl P3) => "acrecentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acrecienta" ;
    VP (Imp Sg P3) => "acreciente" ;
    VP (Imp Pl P1) => "acrecentemos" ;
    VP (Imp Pl P2) => "acrecentad" ;
    VP (Imp Pl P3) => "acrecienten" ;
    VP (Pass Sg Masc) => "acrecentado" ;
    VP (Pass Sg Fem) => "acrecentada" ;
    VP (Pass Pl Masc) => "acrecentados" ;
    VP (Pass Pl Fem) => "acrecentadas"
    }
  } ;

lin adestrar_V = verboV 
 {s = table {
    VI Infn => "adestrar" ;
    VI Ger => "adestrando" ;
    VI Part => "adestrado" ;
    VP (Pres Ind Sg P1) => "adiestro" ;
    VP (Pres Ind Sg P2) => "adiestras" ;
    VP (Pres Ind Sg P3) => "adiestra" ;
    VP (Pres Ind Pl P1) => "adestramos" ;
    VP (Pres Ind Pl P2) => "adestráis" ;
    VP (Pres Ind Pl P3) => "adiestran" ;
    VP (Pres Subj Sg P1) => "adiestre" ;
    VP (Pres Subj Sg P2) => "adiestres" ;
    VP (Pres Subj Sg P3) => "adiestre" ;
    VP (Pres Subj Pl P1) => "adestremos" ;
    VP (Pres Subj Pl P2) => "adestréis" ;
    VP (Pres Subj Pl P3) => "adiestren" ;
    VP (Impf Ind Sg P1) => "adestraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "adestrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "adestraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "adestrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "adestrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "adestraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adestrara" ; "adestrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adestraras" ; "adestrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adestrara" ; "adestrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adestráramos" ; "adestrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adestrarais" ; "adestraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adestraran" ; "adestrasen"} ;--# notpresent
    VP (Pret Sg P1) => "adestré" ;--# notpresent
    VP (Pret Sg P2) => "adestraste" ;--# notpresent
    VP (Pret Sg P3) => "adestró" ;--# notpresent
    VP (Pret Pl P1) => "adestramos" ;--# notpresent
    VP (Pret Pl P2) => "adestrasteis" ;--# notpresent
    VP (Pret Pl P3) => "adestraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "adestraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "adestrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "adestrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "adestraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "adestraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "adestrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adestrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "adestrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "adestrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "adestráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adestrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adestraren" ;--# notpresent
    VP (Cond Sg P1) => "adestraría" ;--# notpresent
    VP (Cond Sg P2) => "adestrarías" ;--# notpresent
    VP (Cond Sg P3) => "adestraría" ;--# notpresent
    VP (Cond Pl P1) => "adestraríamos" ;--# notpresent
    VP (Cond Pl P2) => "adestraríais" ;--# notpresent
    VP (Cond Pl P3) => "adestrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "adiestra" ;
    VP (Imp Sg P3) => "adiestre" ;
    VP (Imp Pl P1) => "adestremos" ;
    VP (Imp Pl P2) => "adestrad" ;
    VP (Imp Pl P3) => "adiestren" ;
    VP (Pass Sg Masc) => "adestrado" ;
    VP (Pass Sg Fem) => "adestrada" ;
    VP (Pass Pl Masc) => "adestrados" ;
    VP (Pass Pl Fem) => "adestradas"
    }
  } ;

lin aferrar_V = verboV 
 {s = table {
    VI Infn => "aferrar" ;
    VI Ger => "aferrando" ;
    VI Part => "aferrado" ;
    VP (Pres Ind Sg P1) => "afierro" ;
    VP (Pres Ind Sg P2) => "afierras" ;
    VP (Pres Ind Sg P3) => "afierra" ;
    VP (Pres Ind Pl P1) => "aferramos" ;
    VP (Pres Ind Pl P2) => "aferráis" ;
    VP (Pres Ind Pl P3) => "afierran" ;
    VP (Pres Subj Sg P1) => "afierre" ;
    VP (Pres Subj Sg P2) => "afierres" ;
    VP (Pres Subj Sg P3) => "afierre" ;
    VP (Pres Subj Pl P1) => "aferremos" ;
    VP (Pres Subj Pl P2) => "aferréis" ;
    VP (Pres Subj Pl P3) => "afierren" ;
    VP (Impf Ind Sg P1) => "aferraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aferrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aferraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aferrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aferrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aferraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aferrara" ; "aferrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aferraras" ; "aferrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aferrara" ; "aferrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aferráramos" ; "aferrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aferrarais" ; "aferraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aferraran" ; "aferrasen"} ;--# notpresent
    VP (Pret Sg P1) => "aferré" ;--# notpresent
    VP (Pret Sg P2) => "aferraste" ;--# notpresent
    VP (Pret Sg P3) => "aferró" ;--# notpresent
    VP (Pret Pl P1) => "aferramos" ;--# notpresent
    VP (Pret Pl P2) => "aferrasteis" ;--# notpresent
    VP (Pret Pl P3) => "aferraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aferraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aferrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aferrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aferraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aferraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aferrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aferrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aferrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aferrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aferráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aferrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aferraren" ;--# notpresent
    VP (Cond Sg P1) => "aferraría" ;--# notpresent
    VP (Cond Sg P2) => "aferrarías" ;--# notpresent
    VP (Cond Sg P3) => "aferraría" ;--# notpresent
    VP (Cond Pl P1) => "aferraríamos" ;--# notpresent
    VP (Cond Pl P2) => "aferraríais" ;--# notpresent
    VP (Cond Pl P3) => "aferrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "afierra" ;
    VP (Imp Sg P3) => "afierre" ;
    VP (Imp Pl P1) => "aferremos" ;
    VP (Imp Pl P2) => "aferrad" ;
    VP (Imp Pl P3) => "afierren" ;
    VP (Pass Sg Masc) => "aferrado" ;
    VP (Pass Sg Fem) => "aferrada" ;
    VP (Pass Pl Masc) => "aferrados" ;
    VP (Pass Pl Fem) => "aferradas"
    }
  } ;

lin afollar_V = verboV 
 {s = table {
    VI Infn => "afollar" ;
    VI Ger => "afollando" ;
    VI Part => "afollado" ;
    VP (Pres Ind Sg P1) => "afuello" ;
    VP (Pres Ind Sg P2) => "afuellas" ;
    VP (Pres Ind Sg P3) => "afuella" ;
    VP (Pres Ind Pl P1) => "afollamos" ;
    VP (Pres Ind Pl P2) => "afolláis" ;
    VP (Pres Ind Pl P3) => "afuellan" ;
    VP (Pres Subj Sg P1) => "afuelle" ;
    VP (Pres Subj Sg P2) => "afuelles" ;
    VP (Pres Subj Sg P3) => "afuelle" ;
    VP (Pres Subj Pl P1) => "afollemos" ;
    VP (Pres Subj Pl P2) => "afolléis" ;
    VP (Pres Subj Pl P3) => "afuellen" ;
    VP (Impf Ind Sg P1) => "afollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "afollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "afollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "afollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "afollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "afollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"afollara" ; "afollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"afollaras" ; "afollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"afollara" ; "afollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"afolláramos" ; "afollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"afollarais" ; "afollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"afollaran" ; "afollasen"} ;--# notpresent
    VP (Pret Sg P1) => "afollé" ;--# notpresent
    VP (Pret Sg P2) => "afollaste" ;--# notpresent
    VP (Pret Sg P3) => "afolló" ;--# notpresent
    VP (Pret Pl P1) => "afollamos" ;--# notpresent
    VP (Pret Pl P2) => "afollasteis" ;--# notpresent
    VP (Pret Pl P3) => "afollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "afollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "afollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "afollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "afollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "afollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "afollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "afollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "afollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "afollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "afolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "afollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "afollaren" ;--# notpresent
    VP (Cond Sg P1) => "afollaría" ;--# notpresent
    VP (Cond Sg P2) => "afollarías" ;--# notpresent
    VP (Cond Sg P3) => "afollaría" ;--# notpresent
    VP (Cond Pl P1) => "afollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "afollaríais" ;--# notpresent
    VP (Cond Pl P3) => "afollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "afuella" ;
    VP (Imp Sg P3) => "afuelle" ;
    VP (Imp Pl P1) => "afollemos" ;
    VP (Imp Pl P2) => "afollad" ;
    VP (Imp Pl P3) => "afuellen" ;
    VP (Pass Sg Masc) => "afollado" ;
    VP (Pass Sg Fem) => "afollada" ;
    VP (Pass Pl Masc) => "afollados" ;
    VP (Pass Pl Fem) => "afolladas"
    }
  } ;

lin aforar_V = verboV 
 {s = table {
    VI Infn => "aforar" ;
    VI Ger => "aforando" ;
    VI Part => "aforado" ;
    VP (Pres Ind Sg P1) => "afuero" ;
    VP (Pres Ind Sg P2) => "afueras" ;
    VP (Pres Ind Sg P3) => "afuera" ;
    VP (Pres Ind Pl P1) => "aforamos" ;
    VP (Pres Ind Pl P2) => "aforáis" ;
    VP (Pres Ind Pl P3) => "afueran" ;
    VP (Pres Subj Sg P1) => "afuere" ;
    VP (Pres Subj Sg P2) => "afueres" ;
    VP (Pres Subj Sg P3) => "afuere" ;
    VP (Pres Subj Pl P1) => "aforemos" ;
    VP (Pres Subj Pl P2) => "aforéis" ;
    VP (Pres Subj Pl P3) => "afueren" ;
    VP (Impf Ind Sg P1) => "aforaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aforabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aforaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aforábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aforabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aforaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aforara" ; "aforase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aforaras" ; "aforases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aforara" ; "aforase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aforáramos" ; "aforásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aforarais" ; "aforaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aforaran" ; "aforasen"} ;--# notpresent
    VP (Pret Sg P1) => "aforé" ;--# notpresent
    VP (Pret Sg P2) => "aforaste" ;--# notpresent
    VP (Pret Sg P3) => "aforó" ;--# notpresent
    VP (Pret Pl P1) => "aforamos" ;--# notpresent
    VP (Pret Pl P2) => "aforasteis" ;--# notpresent
    VP (Pret Pl P3) => "aforaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aforaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aforarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aforará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aforaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aforaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aforarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aforare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aforares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aforare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aforáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aforareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aforaren" ;--# notpresent
    VP (Cond Sg P1) => "aforaría" ;--# notpresent
    VP (Cond Sg P2) => "aforarías" ;--# notpresent
    VP (Cond Sg P3) => "aforaría" ;--# notpresent
    VP (Cond Pl P1) => "aforaríamos" ;--# notpresent
    VP (Cond Pl P2) => "aforaríais" ;--# notpresent
    VP (Cond Pl P3) => "aforarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "afuera" ;
    VP (Imp Sg P3) => "afuere" ;
    VP (Imp Pl P1) => "aforemos" ;
    VP (Imp Pl P2) => "aforad" ;
    VP (Imp Pl P3) => "afueren" ;
    VP (Pass Sg Masc) => "aforado" ;
    VP (Pass Sg Fem) => "aforada" ;
    VP (Pass Pl Masc) => "aforados" ;
    VP (Pass Pl Fem) => "aforadas"
    }
  } ;

lin albeldar_V = verboV 
 {s = table {
    VI Infn => "albeldar" ;
    VI Ger => "albeldando" ;
    VI Part => "albeldado" ;
    VP (Pres Ind Sg P1) => "albieldo" ;
    VP (Pres Ind Sg P2) => "albieldas" ;
    VP (Pres Ind Sg P3) => "albielda" ;
    VP (Pres Ind Pl P1) => "albeldamos" ;
    VP (Pres Ind Pl P2) => "albeldáis" ;
    VP (Pres Ind Pl P3) => "albieldan" ;
    VP (Pres Subj Sg P1) => "albielde" ;
    VP (Pres Subj Sg P2) => "albieldes" ;
    VP (Pres Subj Sg P3) => "albielde" ;
    VP (Pres Subj Pl P1) => "albeldemos" ;
    VP (Pres Subj Pl P2) => "albeldéis" ;
    VP (Pres Subj Pl P3) => "albielden" ;
    VP (Impf Ind Sg P1) => "albeldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "albeldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "albeldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "albeldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "albeldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "albeldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"albeldara" ; "albeldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"albeldaras" ; "albeldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"albeldara" ; "albeldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"albeldáramos" ; "albeldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"albeldarais" ; "albeldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"albeldaran" ; "albeldasen"} ;--# notpresent
    VP (Pret Sg P1) => "albeldé" ;--# notpresent
    VP (Pret Sg P2) => "albeldaste" ;--# notpresent
    VP (Pret Sg P3) => "albeldó" ;--# notpresent
    VP (Pret Pl P1) => "albeldamos" ;--# notpresent
    VP (Pret Pl P2) => "albeldasteis" ;--# notpresent
    VP (Pret Pl P3) => "albeldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "albeldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "albeldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "albeldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "albeldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "albeldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "albeldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "albeldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "albeldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "albeldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "albeldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "albeldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "albeldaren" ;--# notpresent
    VP (Cond Sg P1) => "albeldaría" ;--# notpresent
    VP (Cond Sg P2) => "albeldarías" ;--# notpresent
    VP (Cond Sg P3) => "albeldaría" ;--# notpresent
    VP (Cond Pl P1) => "albeldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "albeldaríais" ;--# notpresent
    VP (Cond Pl P3) => "albeldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "albielda" ;
    VP (Imp Sg P3) => "albielde" ;
    VP (Imp Pl P1) => "albeldemos" ;
    VP (Imp Pl P2) => "albeldad" ;
    VP (Imp Pl P3) => "albielden" ;
    VP (Pass Sg Masc) => "albeldado" ;
    VP (Pass Sg Fem) => "albeldada" ;
    VP (Pass Pl Masc) => "albeldados" ;
    VP (Pass Pl Fem) => "albeldadas"
    }
  } ;

lin alentar_V = verboV 
 {s = table {
    VI Infn => "alentar" ;
    VI Ger => "alentando" ;
    VI Part => "alentado" ;
    VP (Pres Ind Sg P1) => "aliento" ;
    VP (Pres Ind Sg P2) => "alientas" ;
    VP (Pres Ind Sg P3) => "alienta" ;
    VP (Pres Ind Pl P1) => "alentamos" ;
    VP (Pres Ind Pl P2) => "alentáis" ;
    VP (Pres Ind Pl P3) => "alientan" ;
    VP (Pres Subj Sg P1) => "aliente" ;
    VP (Pres Subj Sg P2) => "alientes" ;
    VP (Pres Subj Sg P3) => "aliente" ;
    VP (Pres Subj Pl P1) => "alentemos" ;
    VP (Pres Subj Pl P2) => "alentéis" ;
    VP (Pres Subj Pl P3) => "alienten" ;
    VP (Impf Ind Sg P1) => "alentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "alentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "alentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "alentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "alentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "alentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"alentara" ; "alentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"alentaras" ; "alentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"alentara" ; "alentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"alentáramos" ; "alentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"alentarais" ; "alentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"alentaran" ; "alentasen"} ;--# notpresent
    VP (Pret Sg P1) => "alenté" ;--# notpresent
    VP (Pret Sg P2) => "alentaste" ;--# notpresent
    VP (Pret Sg P3) => "alentó" ;--# notpresent
    VP (Pret Pl P1) => "alentamos" ;--# notpresent
    VP (Pret Pl P2) => "alentasteis" ;--# notpresent
    VP (Pret Pl P3) => "alentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "alentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "alentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "alentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "alentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "alentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "alentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "alentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "alentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "alentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "alentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "alentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "alentaren" ;--# notpresent
    VP (Cond Sg P1) => "alentaría" ;--# notpresent
    VP (Cond Sg P2) => "alentarías" ;--# notpresent
    VP (Cond Sg P3) => "alentaría" ;--# notpresent
    VP (Cond Pl P1) => "alentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "alentaríais" ;--# notpresent
    VP (Cond Pl P3) => "alentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "alienta" ;
    VP (Imp Sg P3) => "aliente" ;
    VP (Imp Pl P1) => "alentemos" ;
    VP (Imp Pl P2) => "alentad" ;
    VP (Imp Pl P3) => "alienten" ;
    VP (Pass Sg Masc) => "alentado" ;
    VP (Pass Sg Fem) => "alentada" ;
    VP (Pass Pl Masc) => "alentados" ;
    VP (Pass Pl Fem) => "alentadas"
    }
  } ;

lin aliquebrar_V = verboV 
 {s = table {
    VI Infn => "aliquebrar" ;
    VI Ger => "aliquebrando" ;
    VI Part => "aliquebrado" ;
    VP (Pres Ind Sg P1) => "aliquiebro" ;
    VP (Pres Ind Sg P2) => "aliquiebras" ;
    VP (Pres Ind Sg P3) => "aliquiebra" ;
    VP (Pres Ind Pl P1) => "aliquebramos" ;
    VP (Pres Ind Pl P2) => "aliquebráis" ;
    VP (Pres Ind Pl P3) => "aliquiebran" ;
    VP (Pres Subj Sg P1) => "aliquiebre" ;
    VP (Pres Subj Sg P2) => "aliquiebres" ;
    VP (Pres Subj Sg P3) => "aliquiebre" ;
    VP (Pres Subj Pl P1) => "aliquebremos" ;
    VP (Pres Subj Pl P2) => "aliquebréis" ;
    VP (Pres Subj Pl P3) => "aliquiebren" ;
    VP (Impf Ind Sg P1) => "aliquebraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aliquebrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aliquebraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aliquebrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aliquebrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aliquebraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aliquebrara" ; "aliquebrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aliquebraras" ; "aliquebrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aliquebrara" ; "aliquebrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aliquebráramos" ; "aliquebrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aliquebrarais" ; "aliquebraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aliquebraran" ; "aliquebrasen"} ;--# notpresent
    VP (Pret Sg P1) => "aliquebré" ;--# notpresent
    VP (Pret Sg P2) => "aliquebraste" ;--# notpresent
    VP (Pret Sg P3) => "aliquebró" ;--# notpresent
    VP (Pret Pl P1) => "aliquebramos" ;--# notpresent
    VP (Pret Pl P2) => "aliquebrasteis" ;--# notpresent
    VP (Pret Pl P3) => "aliquebraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aliquebraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aliquebrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aliquebrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aliquebraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aliquebraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aliquebrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aliquebrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aliquebrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aliquebrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aliquebráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aliquebrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aliquebraren" ;--# notpresent
    VP (Cond Sg P1) => "aliquebraría" ;--# notpresent
    VP (Cond Sg P2) => "aliquebrarías" ;--# notpresent
    VP (Cond Sg P3) => "aliquebraría" ;--# notpresent
    VP (Cond Pl P1) => "aliquebraríamos" ;--# notpresent
    VP (Cond Pl P2) => "aliquebraríais" ;--# notpresent
    VP (Cond Pl P3) => "aliquebrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aliquiebra" ;
    VP (Imp Sg P3) => "aliquiebre" ;
    VP (Imp Pl P1) => "aliquebremos" ;
    VP (Imp Pl P2) => "aliquebrad" ;
    VP (Imp Pl P3) => "aliquiebren" ;
    VP (Pass Sg Masc) => "aliquebrado" ;
    VP (Pass Sg Fem) => "aliquebrada" ;
    VP (Pass Pl Masc) => "aliquebrados" ;
    VP (Pass Pl Fem) => "aliquebradas"
    }
  } ;

lin amoblar_V = verboV 
 {s = table {
    VI Infn => "amoblar" ;
    VI Ger => "amoblando" ;
    VI Part => "amoblado" ;
    VP (Pres Ind Sg P1) => "amueblo" ;
    VP (Pres Ind Sg P2) => "amueblas" ;
    VP (Pres Ind Sg P3) => "amuebla" ;
    VP (Pres Ind Pl P1) => "amoblamos" ;
    VP (Pres Ind Pl P2) => "amobláis" ;
    VP (Pres Ind Pl P3) => "amueblan" ;
    VP (Pres Subj Sg P1) => "amueble" ;
    VP (Pres Subj Sg P2) => "amuebles" ;
    VP (Pres Subj Sg P3) => "amueble" ;
    VP (Pres Subj Pl P1) => "amoblemos" ;
    VP (Pres Subj Pl P2) => "amobléis" ;
    VP (Pres Subj Pl P3) => "amueblen" ;
    VP (Impf Ind Sg P1) => "amoblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "amoblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "amoblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "amoblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amoblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amoblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amoblara" ; "amoblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amoblaras" ; "amoblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amoblara" ; "amoblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amobláramos" ; "amoblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amoblarais" ; "amoblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amoblaran" ; "amoblasen"} ;--# notpresent
    VP (Pret Sg P1) => "amoblé" ;--# notpresent
    VP (Pret Sg P2) => "amoblaste" ;--# notpresent
    VP (Pret Sg P3) => "amobló" ;--# notpresent
    VP (Pret Pl P1) => "amoblamos" ;--# notpresent
    VP (Pret Pl P2) => "amoblasteis" ;--# notpresent
    VP (Pret Pl P3) => "amoblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amoblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amoblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amoblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "amoblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amoblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amoblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amoblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "amoblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "amoblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "amobláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amoblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amoblaren" ;--# notpresent
    VP (Cond Sg P1) => "amoblaría" ;--# notpresent
    VP (Cond Sg P2) => "amoblarías" ;--# notpresent
    VP (Cond Sg P3) => "amoblaría" ;--# notpresent
    VP (Cond Pl P1) => "amoblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "amoblaríais" ;--# notpresent
    VP (Cond Pl P3) => "amoblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amuebla" ;
    VP (Imp Sg P3) => "amueble" ;
    VP (Imp Pl P1) => "amoblemos" ;
    VP (Imp Pl P2) => "amoblad" ;
    VP (Imp Pl P3) => "amueblen" ;
    VP (Pass Sg Masc) => "amoblado" ;
    VP (Pass Sg Fem) => "amoblada" ;
    VP (Pass Pl Masc) => "amoblados" ;
    VP (Pass Pl Fem) => "amobladas"
    }
  } ;

lin amolar_V = verboV 
 {s = table {
    VI Infn => "amolar" ;
    VI Ger => "amolando" ;
    VI Part => "amolado" ;
    VP (Pres Ind Sg P1) => "amuelo" ;
    VP (Pres Ind Sg P2) => "amuelas" ;
    VP (Pres Ind Sg P3) => "amuela" ;
    VP (Pres Ind Pl P1) => "amolamos" ;
    VP (Pres Ind Pl P2) => "amoláis" ;
    VP (Pres Ind Pl P3) => "amuelan" ;
    VP (Pres Subj Sg P1) => "amuele" ;
    VP (Pres Subj Sg P2) => "amueles" ;
    VP (Pres Subj Sg P3) => "amuele" ;
    VP (Pres Subj Pl P1) => "amolemos" ;
    VP (Pres Subj Pl P2) => "amoléis" ;
    VP (Pres Subj Pl P3) => "amuelen" ;
    VP (Impf Ind Sg P1) => "amolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "amolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "amolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "amolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "amolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "amolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"amolara" ; "amolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"amolaras" ; "amolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"amolara" ; "amolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"amoláramos" ; "amolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"amolarais" ; "amolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"amolaran" ; "amolasen"} ;--# notpresent
    VP (Pret Sg P1) => "amolé" ;--# notpresent
    VP (Pret Sg P2) => "amolaste" ;--# notpresent
    VP (Pret Sg P3) => "amoló" ;--# notpresent
    VP (Pret Pl P1) => "amolamos" ;--# notpresent
    VP (Pret Pl P2) => "amolasteis" ;--# notpresent
    VP (Pret Pl P3) => "amolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "amolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "amolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "amolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "amolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "amolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "amolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "amolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "amolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "amolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "amoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "amolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "amolaren" ;--# notpresent
    VP (Cond Sg P1) => "amolaría" ;--# notpresent
    VP (Cond Sg P2) => "amolarías" ;--# notpresent
    VP (Cond Sg P3) => "amolaría" ;--# notpresent
    VP (Cond Pl P1) => "amolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "amolaríais" ;--# notpresent
    VP (Cond Pl P3) => "amolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "amuela" ;
    VP (Imp Sg P3) => "amuele" ;
    VP (Imp Pl P1) => "amolemos" ;
    VP (Imp Pl P2) => "amolad" ;
    VP (Imp Pl P3) => "amuelen" ;
    VP (Pass Sg Masc) => "amolado" ;
    VP (Pass Sg Fem) => "amolada" ;
    VP (Pass Pl Masc) => "amolados" ;
    VP (Pass Pl Fem) => "amoladas"
    }
  } ;

lin anzolar_V = verboV 
 {s = table {
    VI Infn => "anzolar" ;
    VI Ger => "anzolando" ;
    VI Part => "anzolado" ;
    VP (Pres Ind Sg P1) => "anzuelo" ;
    VP (Pres Ind Sg P2) => "anzuelas" ;
    VP (Pres Ind Sg P3) => "anzuela" ;
    VP (Pres Ind Pl P1) => "anzolamos" ;
    VP (Pres Ind Pl P2) => "anzoláis" ;
    VP (Pres Ind Pl P3) => "anzuelan" ;
    VP (Pres Subj Sg P1) => "anzuele" ;
    VP (Pres Subj Sg P2) => "anzueles" ;
    VP (Pres Subj Sg P3) => "anzuele" ;
    VP (Pres Subj Pl P1) => "anzolemos" ;
    VP (Pres Subj Pl P2) => "anzoléis" ;
    VP (Pres Subj Pl P3) => "anzuelen" ;
    VP (Impf Ind Sg P1) => "anzolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "anzolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "anzolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "anzolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "anzolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "anzolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"anzolara" ; "anzolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"anzolaras" ; "anzolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"anzolara" ; "anzolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"anzoláramos" ; "anzolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"anzolarais" ; "anzolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"anzolaran" ; "anzolasen"} ;--# notpresent
    VP (Pret Sg P1) => "anzolé" ;--# notpresent
    VP (Pret Sg P2) => "anzolaste" ;--# notpresent
    VP (Pret Sg P3) => "anzoló" ;--# notpresent
    VP (Pret Pl P1) => "anzolamos" ;--# notpresent
    VP (Pret Pl P2) => "anzolasteis" ;--# notpresent
    VP (Pret Pl P3) => "anzolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "anzolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "anzolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "anzolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "anzolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "anzolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "anzolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "anzolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "anzolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "anzolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "anzoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "anzolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "anzolaren" ;--# notpresent
    VP (Cond Sg P1) => "anzolaría" ;--# notpresent
    VP (Cond Sg P2) => "anzolarías" ;--# notpresent
    VP (Cond Sg P3) => "anzolaría" ;--# notpresent
    VP (Cond Pl P1) => "anzolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "anzolaríais" ;--# notpresent
    VP (Cond Pl P3) => "anzolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "anzuela" ;
    VP (Imp Sg P3) => "anzuele" ;
    VP (Imp Pl P1) => "anzolemos" ;
    VP (Imp Pl P2) => "anzolad" ;
    VP (Imp Pl P3) => "anzuelen" ;
    VP (Pass Sg Masc) => "anzolado" ;
    VP (Pass Sg Fem) => "anzolada" ;
    VP (Pass Pl Masc) => "anzolados" ;
    VP (Pass Pl Fem) => "anzoladas"
    }
  } ;

lin apacentar_V = verboV 
 {s = table {
    VI Infn => "apacentar" ;
    VI Ger => "apacentando" ;
    VI Part => "apacentado" ;
    VP (Pres Ind Sg P1) => "apaciento" ;
    VP (Pres Ind Sg P2) => "apacientas" ;
    VP (Pres Ind Sg P3) => "apacienta" ;
    VP (Pres Ind Pl P1) => "apacentamos" ;
    VP (Pres Ind Pl P2) => "apacentáis" ;
    VP (Pres Ind Pl P3) => "apacientan" ;
    VP (Pres Subj Sg P1) => "apaciente" ;
    VP (Pres Subj Sg P2) => "apacientes" ;
    VP (Pres Subj Sg P3) => "apaciente" ;
    VP (Pres Subj Pl P1) => "apacentemos" ;
    VP (Pres Subj Pl P2) => "apacentéis" ;
    VP (Pres Subj Pl P3) => "apacienten" ;
    VP (Impf Ind Sg P1) => "apacentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apacentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apacentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apacentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apacentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apacentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apacentara" ; "apacentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apacentaras" ; "apacentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apacentara" ; "apacentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apacentáramos" ; "apacentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apacentarais" ; "apacentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apacentaran" ; "apacentasen"} ;--# notpresent
    VP (Pret Sg P1) => "apacenté" ;--# notpresent
    VP (Pret Sg P2) => "apacentaste" ;--# notpresent
    VP (Pret Sg P3) => "apacentó" ;--# notpresent
    VP (Pret Pl P1) => "apacentamos" ;--# notpresent
    VP (Pret Pl P2) => "apacentasteis" ;--# notpresent
    VP (Pret Pl P3) => "apacentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apacentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apacentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apacentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apacentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apacentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apacentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apacentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apacentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apacentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apacentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apacentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apacentaren" ;--# notpresent
    VP (Cond Sg P1) => "apacentaría" ;--# notpresent
    VP (Cond Sg P2) => "apacentarías" ;--# notpresent
    VP (Cond Sg P3) => "apacentaría" ;--# notpresent
    VP (Cond Pl P1) => "apacentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apacentaríais" ;--# notpresent
    VP (Cond Pl P3) => "apacentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apacienta" ;
    VP (Imp Sg P3) => "apaciente" ;
    VP (Imp Pl P1) => "apacentemos" ;
    VP (Imp Pl P2) => "apacentad" ;
    VP (Imp Pl P3) => "apacienten" ;
    VP (Pass Sg Masc) => "apacentado" ;
    VP (Pass Sg Fem) => "apacentada" ;
    VP (Pass Pl Masc) => "apacentados" ;
    VP (Pass Pl Fem) => "apacentadas"
    }
  } ;

lin apercollar_V = verboV 
 {s = table {
    VI Infn => "apercollar" ;
    VI Ger => "apercollando" ;
    VI Part => "apercollado" ;
    VP (Pres Ind Sg P1) => "apercuello" ;
    VP (Pres Ind Sg P2) => "apercuellas" ;
    VP (Pres Ind Sg P3) => "apercuella" ;
    VP (Pres Ind Pl P1) => "apercollamos" ;
    VP (Pres Ind Pl P2) => "apercolláis" ;
    VP (Pres Ind Pl P3) => "apercuellan" ;
    VP (Pres Subj Sg P1) => "apercuelle" ;
    VP (Pres Subj Sg P2) => "apercuelles" ;
    VP (Pres Subj Sg P3) => "apercuelle" ;
    VP (Pres Subj Pl P1) => "apercollemos" ;
    VP (Pres Subj Pl P2) => "apercolléis" ;
    VP (Pres Subj Pl P3) => "apercuellen" ;
    VP (Impf Ind Sg P1) => "apercollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apercollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apercollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apercollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apercollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apercollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apercollara" ; "apercollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apercollaras" ; "apercollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apercollara" ; "apercollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apercolláramos" ; "apercollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apercollarais" ; "apercollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apercollaran" ; "apercollasen"} ;--# notpresent
    VP (Pret Sg P1) => "apercollé" ;--# notpresent
    VP (Pret Sg P2) => "apercollaste" ;--# notpresent
    VP (Pret Sg P3) => "apercolló" ;--# notpresent
    VP (Pret Pl P1) => "apercollamos" ;--# notpresent
    VP (Pret Pl P2) => "apercollasteis" ;--# notpresent
    VP (Pret Pl P3) => "apercollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apercollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apercollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apercollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apercollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apercollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apercollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apercollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apercollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apercollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apercolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apercollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apercollaren" ;--# notpresent
    VP (Cond Sg P1) => "apercollaría" ;--# notpresent
    VP (Cond Sg P2) => "apercollarías" ;--# notpresent
    VP (Cond Sg P3) => "apercollaría" ;--# notpresent
    VP (Cond Pl P1) => "apercollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apercollaríais" ;--# notpresent
    VP (Cond Pl P3) => "apercollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apercuella" ;
    VP (Imp Sg P3) => "apercuelle" ;
    VP (Imp Pl P1) => "apercollemos" ;
    VP (Imp Pl P2) => "apercollad" ;
    VP (Imp Pl P3) => "apercuellen" ;
    VP (Pass Sg Masc) => "apercollado" ;
    VP (Pass Sg Fem) => "apercollada" ;
    VP (Pass Pl Masc) => "apercollados" ;
    VP (Pass Pl Fem) => "apercolladas"
    }
  } ;

lin apergollar_V = verboV 
 {s = table {
    VI Infn => "apergollar" ;
    VI Ger => "apergollando" ;
    VI Part => "apergollado" ;
    VP (Pres Ind Sg P1) => "aperguello" ;
    VP (Pres Ind Sg P2) => "aperguellas" ;
    VP (Pres Ind Sg P3) => "aperguella" ;
    VP (Pres Ind Pl P1) => "apergollamos" ;
    VP (Pres Ind Pl P2) => "apergolláis" ;
    VP (Pres Ind Pl P3) => "aperguellan" ;
    VP (Pres Subj Sg P1) => "aperguelle" ;
    VP (Pres Subj Sg P2) => "aperguelles" ;
    VP (Pres Subj Sg P3) => "aperguelle" ;
    VP (Pres Subj Pl P1) => "apergollemos" ;
    VP (Pres Subj Pl P2) => "apergolléis" ;
    VP (Pres Subj Pl P3) => "aperguellen" ;
    VP (Impf Ind Sg P1) => "apergollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apergollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apergollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apergollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apergollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apergollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apergollara" ; "apergollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apergollaras" ; "apergollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apergollara" ; "apergollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apergolláramos" ; "apergollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apergollarais" ; "apergollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apergollaran" ; "apergollasen"} ;--# notpresent
    VP (Pret Sg P1) => "apergollé" ;--# notpresent
    VP (Pret Sg P2) => "apergollaste" ;--# notpresent
    VP (Pret Sg P3) => "apergolló" ;--# notpresent
    VP (Pret Pl P1) => "apergollamos" ;--# notpresent
    VP (Pret Pl P2) => "apergollasteis" ;--# notpresent
    VP (Pret Pl P3) => "apergollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apergollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apergollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apergollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apergollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apergollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apergollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apergollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apergollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apergollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apergolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apergollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apergollaren" ;--# notpresent
    VP (Cond Sg P1) => "apergollaría" ;--# notpresent
    VP (Cond Sg P2) => "apergollarías" ;--# notpresent
    VP (Cond Sg P3) => "apergollaría" ;--# notpresent
    VP (Cond Pl P1) => "apergollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apergollaríais" ;--# notpresent
    VP (Cond Pl P3) => "apergollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aperguella" ;
    VP (Imp Sg P3) => "aperguelle" ;
    VP (Imp Pl P1) => "apergollemos" ;
    VP (Imp Pl P2) => "apergollad" ;
    VP (Imp Pl P3) => "aperguellen" ;
    VP (Pass Sg Masc) => "apergollado" ;
    VP (Pass Sg Fem) => "apergollada" ;
    VP (Pass Pl Masc) => "apergollados" ;
    VP (Pass Pl Fem) => "apergolladas"
    }
  } ;

lin apernar_V = verboV 
 {s = table {
    VI Infn => "apernar" ;
    VI Ger => "apernando" ;
    VI Part => "apernado" ;
    VP (Pres Ind Sg P1) => "apierno" ;
    VP (Pres Ind Sg P2) => "apiernas" ;
    VP (Pres Ind Sg P3) => "apierna" ;
    VP (Pres Ind Pl P1) => "apernamos" ;
    VP (Pres Ind Pl P2) => "apernáis" ;
    VP (Pres Ind Pl P3) => "apiernan" ;
    VP (Pres Subj Sg P1) => "apierne" ;
    VP (Pres Subj Sg P2) => "apiernes" ;
    VP (Pres Subj Sg P3) => "apierne" ;
    VP (Pres Subj Pl P1) => "apernemos" ;
    VP (Pres Subj Pl P2) => "apernéis" ;
    VP (Pres Subj Pl P3) => "apiernen" ;
    VP (Impf Ind Sg P1) => "apernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apernara" ; "apernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apernaras" ; "apernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apernara" ; "apernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apernáramos" ; "apernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apernarais" ; "apernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apernaran" ; "apernasen"} ;--# notpresent
    VP (Pret Sg P1) => "aperné" ;--# notpresent
    VP (Pret Sg P2) => "apernaste" ;--# notpresent
    VP (Pret Sg P3) => "apernó" ;--# notpresent
    VP (Pret Pl P1) => "apernamos" ;--# notpresent
    VP (Pret Pl P2) => "apernasteis" ;--# notpresent
    VP (Pret Pl P3) => "apernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apernaren" ;--# notpresent
    VP (Cond Sg P1) => "apernaría" ;--# notpresent
    VP (Cond Sg P2) => "apernarías" ;--# notpresent
    VP (Cond Sg P3) => "apernaría" ;--# notpresent
    VP (Cond Pl P1) => "apernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apernaríais" ;--# notpresent
    VP (Cond Pl P3) => "apernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apierna" ;
    VP (Imp Sg P3) => "apierne" ;
    VP (Imp Pl P1) => "apernemos" ;
    VP (Imp Pl P2) => "apernad" ;
    VP (Imp Pl P3) => "apiernen" ;
    VP (Pass Sg Masc) => "apernado" ;
    VP (Pass Sg Fem) => "apernada" ;
    VP (Pass Pl Masc) => "apernados" ;
    VP (Pass Pl Fem) => "apernadas"
    }
  } ;

lin apescoliar_V = verboV 
 {s = table {
    VI Infn => "apescoliar" ;
    VI Ger => "apescoliando" ;
    VI Part => "apescoliado" ;
    VP (Pres Ind Sg P1) => "apescolieo" ;
    VP (Pres Ind Sg P2) => "apescolieas" ;
    VP (Pres Ind Sg P3) => "apescoliea" ;
    VP (Pres Ind Pl P1) => "apescoliamos" ;
    VP (Pres Ind Pl P2) => "apescoliáis" ;
    VP (Pres Ind Pl P3) => "apescoliean" ;
    VP (Pres Subj Sg P1) => "apescoliee" ;
    VP (Pres Subj Sg P2) => "apescoliees" ;
    VP (Pres Subj Sg P3) => "apescoliee" ;
    VP (Pres Subj Pl P1) => "apescoliemos" ;
    VP (Pres Subj Pl P2) => "apescoliéis" ;
    VP (Pres Subj Pl P3) => "apescolieen" ;
    VP (Impf Ind Sg P1) => "apescoliaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apescoliabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apescoliaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apescoliábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apescoliabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apescoliaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apescoliara" ; "apescoliase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apescoliaras" ; "apescoliases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apescoliara" ; "apescoliase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apescoliáramos" ; "apescoliásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apescoliarais" ; "apescoliaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apescoliaran" ; "apescoliasen"} ;--# notpresent
    VP (Pret Sg P1) => "apescolié" ;--# notpresent
    VP (Pret Sg P2) => "apescoliaste" ;--# notpresent
    VP (Pret Sg P3) => "apescolió" ;--# notpresent
    VP (Pret Pl P1) => "apescoliamos" ;--# notpresent
    VP (Pret Pl P2) => "apescoliasteis" ;--# notpresent
    VP (Pret Pl P3) => "apescoliaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apescoliaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apescoliarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apescoliará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apescoliaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apescoliaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apescoliarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apescoliare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apescoliares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apescoliare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apescoliáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apescoliareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apescoliaren" ;--# notpresent
    VP (Cond Sg P1) => "apescoliaría" ;--# notpresent
    VP (Cond Sg P2) => "apescoliarías" ;--# notpresent
    VP (Cond Sg P3) => "apescoliaría" ;--# notpresent
    VP (Cond Pl P1) => "apescoliaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apescoliaríais" ;--# notpresent
    VP (Cond Pl P3) => "apescoliarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apescoliea" ;
    VP (Imp Sg P3) => "apescoliee" ;
    VP (Imp Pl P1) => "apescoliemos" ;
    VP (Imp Pl P2) => "apescoliad" ;
    VP (Imp Pl P3) => "apescolieen" ;
    VP (Pass Sg Masc) => "apescoliado" ;
    VP (Pass Sg Fem) => "apescoliada" ;
    VP (Pass Pl Masc) => "apescoliados" ;
    VP (Pass Pl Fem) => "apescoliadas"
    }
  } ;

lin apostar_V = verboV 
 {s = table {
    VI Infn => "apostar" ;
    VI Ger => "apostando" ;
    VI Part => "apostado" ;
    VP (Pres Ind Sg P1) => "apuesto" ;
    VP (Pres Ind Sg P2) => "apuestas" ;
    VP (Pres Ind Sg P3) => "apuesta" ;
    VP (Pres Ind Pl P1) => "apostamos" ;
    VP (Pres Ind Pl P2) => "apostáis" ;
    VP (Pres Ind Pl P3) => "apuestan" ;
    VP (Pres Subj Sg P1) => "apueste" ;
    VP (Pres Subj Sg P2) => "apuestes" ;
    VP (Pres Subj Sg P3) => "apueste" ;
    VP (Pres Subj Pl P1) => "apostemos" ;
    VP (Pres Subj Pl P2) => "apostéis" ;
    VP (Pres Subj Pl P3) => "apuesten" ;
    VP (Impf Ind Sg P1) => "apostaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apostabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apostaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apostábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apostabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apostaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apostara" ; "apostase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apostaras" ; "apostases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apostara" ; "apostase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apostáramos" ; "apostásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apostarais" ; "apostaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apostaran" ; "apostasen"} ;--# notpresent
    VP (Pret Sg P1) => "aposté" ;--# notpresent
    VP (Pret Sg P2) => "apostaste" ;--# notpresent
    VP (Pret Sg P3) => "apostó" ;--# notpresent
    VP (Pret Pl P1) => "apostamos" ;--# notpresent
    VP (Pret Pl P2) => "apostasteis" ;--# notpresent
    VP (Pret Pl P3) => "apostaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apostaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apostarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apostará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apostaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apostaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apostarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apostare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apostares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apostare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apostáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apostareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apostaren" ;--# notpresent
    VP (Cond Sg P1) => "apostaría" ;--# notpresent
    VP (Cond Sg P2) => "apostarías" ;--# notpresent
    VP (Cond Sg P3) => "apostaría" ;--# notpresent
    VP (Cond Pl P1) => "apostaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apostaríais" ;--# notpresent
    VP (Cond Pl P3) => "apostarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "apuesta" ;
    VP (Imp Sg P3) => "apueste" ;
    VP (Imp Pl P1) => "apostemos" ;
    VP (Imp Pl P2) => "apostad" ;
    VP (Imp Pl P3) => "apuesten" ;
    VP (Pass Sg Masc) => "apostado" ;
    VP (Pass Sg Fem) => "apostada" ;
    VP (Pass Pl Masc) => "apostados" ;
    VP (Pass Pl Fem) => "apostadas"
    }
  } ;

lin apretar_V = verboV 
 {s = table {
    VI Infn => "apretar" ;
    VI Ger => "apretando" ;
    VI Part => "apretado" ;
    VP (Pres Ind Sg P1) => "aprieto" ;
    VP (Pres Ind Sg P2) => "aprietas" ;
    VP (Pres Ind Sg P3) => "aprieta" ;
    VP (Pres Ind Pl P1) => "apretamos" ;
    VP (Pres Ind Pl P2) => "apretáis" ;
    VP (Pres Ind Pl P3) => "aprietan" ;
    VP (Pres Subj Sg P1) => "apriete" ;
    VP (Pres Subj Sg P2) => "aprietes" ;
    VP (Pres Subj Sg P3) => "apriete" ;
    VP (Pres Subj Pl P1) => "apretemos" ;
    VP (Pres Subj Pl P2) => "apretéis" ;
    VP (Pres Subj Pl P3) => "aprieten" ;
    VP (Impf Ind Sg P1) => "apretaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "apretabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "apretaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "apretábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "apretabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "apretaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"apretara" ; "apretase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"apretaras" ; "apretases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"apretara" ; "apretase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"apretáramos" ; "apretásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"apretarais" ; "apretaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"apretaran" ; "apretasen"} ;--# notpresent
    VP (Pret Sg P1) => "apreté" ;--# notpresent
    VP (Pret Sg P2) => "apretaste" ;--# notpresent
    VP (Pret Sg P3) => "apretó" ;--# notpresent
    VP (Pret Pl P1) => "apretamos" ;--# notpresent
    VP (Pret Pl P2) => "apretasteis" ;--# notpresent
    VP (Pret Pl P3) => "apretaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "apretaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "apretarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "apretará" ;--# notpresent
    VP (Fut Ind Pl P1) => "apretaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "apretaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "apretarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "apretare" ;--# notpresent
    VP (Fut Subj Sg P2) => "apretares" ;--# notpresent
    VP (Fut Subj Sg P3) => "apretare" ;--# notpresent
    VP (Fut Subj Pl P1) => "apretáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "apretareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "apretaren" ;--# notpresent
    VP (Cond Sg P1) => "apretaría" ;--# notpresent
    VP (Cond Sg P2) => "apretarías" ;--# notpresent
    VP (Cond Sg P3) => "apretaría" ;--# notpresent
    VP (Cond Pl P1) => "apretaríamos" ;--# notpresent
    VP (Cond Pl P2) => "apretaríais" ;--# notpresent
    VP (Cond Pl P3) => "apretarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aprieta" ;
    VP (Imp Sg P3) => "apriete" ;
    VP (Imp Pl P1) => "apretemos" ;
    VP (Imp Pl P2) => "apretad" ;
    VP (Imp Pl P3) => "aprieten" ;
    VP (Pass Sg Masc) => "apretado" ;
    VP (Pass Sg Fem) => "apretada" ;
    VP (Pass Pl Masc) => "apretados" ;
    VP (Pass Pl Fem) => "apretadas"
    }
  } ;

lin aprobar_V = verboV 
 {s = table {
    VI Infn => "aprobar" ;
    VI Ger => "aprobando" ;
    VI Part => "aprobado" ;
    VP (Pres Ind Sg P1) => "apruebo" ;
    VP (Pres Ind Sg P2) => "apruebas" ;
    VP (Pres Ind Sg P3) => "aprueba" ;
    VP (Pres Ind Pl P1) => "aprobamos" ;
    VP (Pres Ind Pl P2) => "aprobáis" ;
    VP (Pres Ind Pl P3) => "aprueban" ;
    VP (Pres Subj Sg P1) => "apruebe" ;
    VP (Pres Subj Sg P2) => "apruebes" ;
    VP (Pres Subj Sg P3) => "apruebe" ;
    VP (Pres Subj Pl P1) => "aprobemos" ;
    VP (Pres Subj Pl P2) => "aprobéis" ;
    VP (Pres Subj Pl P3) => "aprueben" ;
    VP (Impf Ind Sg P1) => "aprobaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aprobabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aprobaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aprobábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aprobabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aprobaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aprobara" ; "aprobase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aprobaras" ; "aprobases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aprobara" ; "aprobase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aprobáramos" ; "aprobásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aprobarais" ; "aprobaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aprobaran" ; "aprobasen"} ;--# notpresent
    VP (Pret Sg P1) => "aprobé" ;--# notpresent
    VP (Pret Sg P2) => "aprobaste" ;--# notpresent
    VP (Pret Sg P3) => "aprobó" ;--# notpresent
    VP (Pret Pl P1) => "aprobamos" ;--# notpresent
    VP (Pret Pl P2) => "aprobasteis" ;--# notpresent
    VP (Pret Pl P3) => "aprobaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aprobaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aprobarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aprobará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aprobaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aprobaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aprobarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aprobare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aprobares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aprobare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aprobáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aprobareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aprobaren" ;--# notpresent
    VP (Cond Sg P1) => "aprobaría" ;--# notpresent
    VP (Cond Sg P2) => "aprobarías" ;--# notpresent
    VP (Cond Sg P3) => "aprobaría" ;--# notpresent
    VP (Cond Pl P1) => "aprobaríamos" ;--# notpresent
    VP (Cond Pl P2) => "aprobaríais" ;--# notpresent
    VP (Cond Pl P3) => "aprobarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aprueba" ;
    VP (Imp Sg P3) => "apruebe" ;
    VP (Imp Pl P1) => "aprobemos" ;
    VP (Imp Pl P2) => "aprobad" ;
    VP (Imp Pl P3) => "aprueben" ;
    VP (Pass Sg Masc) => "aprobado" ;
    VP (Pass Sg Fem) => "aprobada" ;
    VP (Pass Pl Masc) => "aprobados" ;
    VP (Pass Pl Fem) => "aprobadas"
    }
  } ;

lin arrendar_V = verboV 
 {s = table {
    VI Infn => "arrendar" ;
    VI Ger => "arrendando" ;
    VI Part => "arrendado" ;
    VP (Pres Ind Sg P1) => "arriendo" ;
    VP (Pres Ind Sg P2) => "arriendas" ;
    VP (Pres Ind Sg P3) => "arrienda" ;
    VP (Pres Ind Pl P1) => "arrendamos" ;
    VP (Pres Ind Pl P2) => "arrendáis" ;
    VP (Pres Ind Pl P3) => "arriendan" ;
    VP (Pres Subj Sg P1) => "arriende" ;
    VP (Pres Subj Sg P2) => "arriendes" ;
    VP (Pres Subj Sg P3) => "arriende" ;
    VP (Pres Subj Pl P1) => "arrendemos" ;
    VP (Pres Subj Pl P2) => "arrendéis" ;
    VP (Pres Subj Pl P3) => "arrienden" ;
    VP (Impf Ind Sg P1) => "arrendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "arrendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "arrendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "arrendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "arrendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "arrendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"arrendara" ; "arrendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"arrendaras" ; "arrendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"arrendara" ; "arrendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"arrendáramos" ; "arrendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"arrendarais" ; "arrendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"arrendaran" ; "arrendasen"} ;--# notpresent
    VP (Pret Sg P1) => "arrendé" ;--# notpresent
    VP (Pret Sg P2) => "arrendaste" ;--# notpresent
    VP (Pret Sg P3) => "arrendó" ;--# notpresent
    VP (Pret Pl P1) => "arrendamos" ;--# notpresent
    VP (Pret Pl P2) => "arrendasteis" ;--# notpresent
    VP (Pret Pl P3) => "arrendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "arrendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "arrendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "arrendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "arrendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "arrendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "arrendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "arrendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "arrendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "arrendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "arrendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "arrendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "arrendaren" ;--# notpresent
    VP (Cond Sg P1) => "arrendaría" ;--# notpresent
    VP (Cond Sg P2) => "arrendarías" ;--# notpresent
    VP (Cond Sg P3) => "arrendaría" ;--# notpresent
    VP (Cond Pl P1) => "arrendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "arrendaríais" ;--# notpresent
    VP (Cond Pl P3) => "arrendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "arrienda" ;
    VP (Imp Sg P3) => "arriende" ;
    VP (Imp Pl P1) => "arrendemos" ;
    VP (Imp Pl P2) => "arrendad" ;
    VP (Imp Pl P3) => "arrienden" ;
    VP (Pass Sg Masc) => "arrendado" ;
    VP (Pass Sg Fem) => "arrendada" ;
    VP (Pass Pl Masc) => "arrendados" ;
    VP (Pass Pl Fem) => "arrendadas"
    }
  } ;

lin asentar_V = verboV 
 {s = table {
    VI Infn => "asentar" ;
    VI Ger => "asentando" ;
    VI Part => "asentado" ;
    VP (Pres Ind Sg P1) => "asiento" ;
    VP (Pres Ind Sg P2) => "asientas" ;
    VP (Pres Ind Sg P3) => "asienta" ;
    VP (Pres Ind Pl P1) => "asentamos" ;
    VP (Pres Ind Pl P2) => "asentáis" ;
    VP (Pres Ind Pl P3) => "asientan" ;
    VP (Pres Subj Sg P1) => "asiente" ;
    VP (Pres Subj Sg P2) => "asientes" ;
    VP (Pres Subj Sg P3) => "asiente" ;
    VP (Pres Subj Pl P1) => "asentemos" ;
    VP (Pres Subj Pl P2) => "asentéis" ;
    VP (Pres Subj Pl P3) => "asienten" ;
    VP (Impf Ind Sg P1) => "asentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "asentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "asentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "asentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asentara" ; "asentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asentaras" ; "asentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asentara" ; "asentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asentáramos" ; "asentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asentarais" ; "asentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asentaran" ; "asentasen"} ;--# notpresent
    VP (Pret Sg P1) => "asenté" ;--# notpresent
    VP (Pret Sg P2) => "asentaste" ;--# notpresent
    VP (Pret Sg P3) => "asentó" ;--# notpresent
    VP (Pret Pl P1) => "asentamos" ;--# notpresent
    VP (Pret Pl P2) => "asentasteis" ;--# notpresent
    VP (Pret Pl P3) => "asentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "asentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "asentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "asentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "asentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asentaren" ;--# notpresent
    VP (Cond Sg P1) => "asentaría" ;--# notpresent
    VP (Cond Sg P2) => "asentarías" ;--# notpresent
    VP (Cond Sg P3) => "asentaría" ;--# notpresent
    VP (Cond Pl P1) => "asentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "asentaríais" ;--# notpresent
    VP (Cond Pl P3) => "asentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asienta" ;
    VP (Imp Sg P3) => "asiente" ;
    VP (Imp Pl P1) => "asentemos" ;
    VP (Imp Pl P2) => "asentad" ;
    VP (Imp Pl P3) => "asienten" ;
    VP (Pass Sg Masc) => "asentado" ;
    VP (Pass Sg Fem) => "asentada" ;
    VP (Pass Pl Masc) => "asentados" ;
    VP (Pass Pl Fem) => "asentadas"
    }
  } ;

lin aserrar_V = verboV 
 {s = table {
    VI Infn => "aserrar" ;
    VI Ger => "aserrando" ;
    VI Part => "aserrado" ;
    VP (Pres Ind Sg P1) => "asierro" ;
    VP (Pres Ind Sg P2) => "asierras" ;
    VP (Pres Ind Sg P3) => "asierra" ;
    VP (Pres Ind Pl P1) => "aserramos" ;
    VP (Pres Ind Pl P2) => "aserráis" ;
    VP (Pres Ind Pl P3) => "asierran" ;
    VP (Pres Subj Sg P1) => "asierre" ;
    VP (Pres Subj Sg P2) => "asierres" ;
    VP (Pres Subj Sg P3) => "asierre" ;
    VP (Pres Subj Pl P1) => "aserremos" ;
    VP (Pres Subj Pl P2) => "aserréis" ;
    VP (Pres Subj Pl P3) => "asierren" ;
    VP (Impf Ind Sg P1) => "aserraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aserrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aserraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aserrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aserrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aserraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aserrara" ; "aserrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aserraras" ; "aserrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aserrara" ; "aserrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aserráramos" ; "aserrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aserrarais" ; "aserraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aserraran" ; "aserrasen"} ;--# notpresent
    VP (Pret Sg P1) => "aserré" ;--# notpresent
    VP (Pret Sg P2) => "aserraste" ;--# notpresent
    VP (Pret Sg P3) => "aserró" ;--# notpresent
    VP (Pret Pl P1) => "aserramos" ;--# notpresent
    VP (Pret Pl P2) => "aserrasteis" ;--# notpresent
    VP (Pret Pl P3) => "aserraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aserraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aserrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aserrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aserraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aserraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aserrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aserrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aserrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aserrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aserráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aserrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aserraren" ;--# notpresent
    VP (Cond Sg P1) => "aserraría" ;--# notpresent
    VP (Cond Sg P2) => "aserrarías" ;--# notpresent
    VP (Cond Sg P3) => "aserraría" ;--# notpresent
    VP (Cond Pl P1) => "aserraríamos" ;--# notpresent
    VP (Cond Pl P2) => "aserraríais" ;--# notpresent
    VP (Cond Pl P3) => "aserrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asierra" ;
    VP (Imp Sg P3) => "asierre" ;
    VP (Imp Pl P1) => "aserremos" ;
    VP (Imp Pl P2) => "aserrad" ;
    VP (Imp Pl P3) => "asierren" ;
    VP (Pass Sg Masc) => "aserrado" ;
    VP (Pass Sg Fem) => "aserrada" ;
    VP (Pass Pl Masc) => "aserrados" ;
    VP (Pass Pl Fem) => "aserradas"
    }
  } ;

lin asestar_V = verboV 
 {s = table {
    VI Infn => "asestar" ;
    VI Ger => "asestando" ;
    VI Part => "asestado" ;
    VP (Pres Ind Sg P1) => "asiesto" ;
    VP (Pres Ind Sg P2) => "asiestas" ;
    VP (Pres Ind Sg P3) => "asiesta" ;
    VP (Pres Ind Pl P1) => "asestamos" ;
    VP (Pres Ind Pl P2) => "asestáis" ;
    VP (Pres Ind Pl P3) => "asiestan" ;
    VP (Pres Subj Sg P1) => "asieste" ;
    VP (Pres Subj Sg P2) => "asiestes" ;
    VP (Pres Subj Sg P3) => "asieste" ;
    VP (Pres Subj Pl P1) => "asestemos" ;
    VP (Pres Subj Pl P2) => "asestéis" ;
    VP (Pres Subj Pl P3) => "asiesten" ;
    VP (Impf Ind Sg P1) => "asestaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "asestabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "asestaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "asestábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asestabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asestaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asestara" ; "asestase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asestaras" ; "asestases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asestara" ; "asestase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asestáramos" ; "asestásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asestarais" ; "asestaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asestaran" ; "asestasen"} ;--# notpresent
    VP (Pret Sg P1) => "asesté" ;--# notpresent
    VP (Pret Sg P2) => "asestaste" ;--# notpresent
    VP (Pret Sg P3) => "asestó" ;--# notpresent
    VP (Pret Pl P1) => "asestamos" ;--# notpresent
    VP (Pret Pl P2) => "asestasteis" ;--# notpresent
    VP (Pret Pl P3) => "asestaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asestaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asestarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asestará" ;--# notpresent
    VP (Fut Ind Pl P1) => "asestaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asestaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asestarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asestare" ;--# notpresent
    VP (Fut Subj Sg P2) => "asestares" ;--# notpresent
    VP (Fut Subj Sg P3) => "asestare" ;--# notpresent
    VP (Fut Subj Pl P1) => "asestáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asestareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asestaren" ;--# notpresent
    VP (Cond Sg P1) => "asestaría" ;--# notpresent
    VP (Cond Sg P2) => "asestarías" ;--# notpresent
    VP (Cond Sg P3) => "asestaría" ;--# notpresent
    VP (Cond Pl P1) => "asestaríamos" ;--# notpresent
    VP (Cond Pl P2) => "asestaríais" ;--# notpresent
    VP (Cond Pl P3) => "asestarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asiesta" ;
    VP (Imp Sg P3) => "asieste" ;
    VP (Imp Pl P1) => "asestemos" ;
    VP (Imp Pl P2) => "asestad" ;
    VP (Imp Pl P3) => "asiesten" ;
    VP (Pass Sg Masc) => "asestado" ;
    VP (Pass Sg Fem) => "asestada" ;
    VP (Pass Pl Masc) => "asestados" ;
    VP (Pass Pl Fem) => "asestadas"
    }
  } ;

lin asestar2_V = verboV 
 {s = table {
    VI Infn => "asestar" ;
    VI Ger => "asestando" ;
    VI Part => "asestado" ;
    VP (Pres Ind Sg P1) => "asiesto" ;
    VP (Pres Ind Sg P2) => "asiestas" ;
    VP (Pres Ind Sg P3) => "asiesta" ;
    VP (Pres Ind Pl P1) => "asestamos" ;
    VP (Pres Ind Pl P2) => "asestáis" ;
    VP (Pres Ind Pl P3) => "asiestan" ;
    VP (Pres Subj Sg P1) => "asieste" ;
    VP (Pres Subj Sg P2) => "asiestes" ;
    VP (Pres Subj Sg P3) => "asieste" ;
    VP (Pres Subj Pl P1) => "asestemos" ;
    VP (Pres Subj Pl P2) => "asestéis" ;
    VP (Pres Subj Pl P3) => "asiesten" ;
    VP (Impf Ind Sg P1) => "asestaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "asestabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "asestaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "asestábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asestabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asestaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asestara" ; "asestase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asestaras" ; "asestases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asestara" ; "asestase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asestáramos" ; "asestásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asestarais" ; "asestaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asestaran" ; "asestasen"} ;--# notpresent
    VP (Pret Sg P1) => "asesté" ;--# notpresent
    VP (Pret Sg P2) => "asestaste" ;--# notpresent
    VP (Pret Sg P3) => "asestó" ;--# notpresent
    VP (Pret Pl P1) => "asestamos" ;--# notpresent
    VP (Pret Pl P2) => "asestasteis" ;--# notpresent
    VP (Pret Pl P3) => "asestaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asestaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asestarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asestará" ;--# notpresent
    VP (Fut Ind Pl P1) => "asestaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asestaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asestarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asestare" ;--# notpresent
    VP (Fut Subj Sg P2) => "asestares" ;--# notpresent
    VP (Fut Subj Sg P3) => "asestare" ;--# notpresent
    VP (Fut Subj Pl P1) => "asestáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asestareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asestaren" ;--# notpresent
    VP (Cond Sg P1) => "asestaría" ;--# notpresent
    VP (Cond Sg P2) => "asestarías" ;--# notpresent
    VP (Cond Sg P3) => "asestaría" ;--# notpresent
    VP (Cond Pl P1) => "asestaríamos" ;--# notpresent
    VP (Cond Pl P2) => "asestaríais" ;--# notpresent
    VP (Cond Pl P3) => "asestarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asiesta" ;
    VP (Imp Sg P3) => "asieste" ;
    VP (Imp Pl P1) => "asestemos" ;
    VP (Imp Pl P2) => "asestad" ;
    VP (Imp Pl P3) => "asiesten" ;
    VP (Pass Sg Masc) => "asestado" ;
    VP (Pass Sg Fem) => "asestada" ;
    VP (Pass Pl Masc) => "asestados" ;
    VP (Pass Pl Fem) => "asestadas"
    }
  } ;

lin asolar_V = verboV 
 {s = table {
    VI Infn => "asolar" ;
    VI Ger => "asolando" ;
    VI Part => "asolado" ;
    VP (Pres Ind Sg P1) => "asuelo" ;
    VP (Pres Ind Sg P2) => "asuelas" ;
    VP (Pres Ind Sg P3) => "asuela" ;
    VP (Pres Ind Pl P1) => "asolamos" ;
    VP (Pres Ind Pl P2) => "asoláis" ;
    VP (Pres Ind Pl P3) => "asuelan" ;
    VP (Pres Subj Sg P1) => "asuele" ;
    VP (Pres Subj Sg P2) => "asueles" ;
    VP (Pres Subj Sg P3) => "asuele" ;
    VP (Pres Subj Pl P1) => "asolemos" ;
    VP (Pres Subj Pl P2) => "asoléis" ;
    VP (Pres Subj Pl P3) => "asuelen" ;
    VP (Impf Ind Sg P1) => "asolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "asolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "asolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "asolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asolara" ; "asolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asolaras" ; "asolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asolara" ; "asolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asoláramos" ; "asolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asolarais" ; "asolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asolaran" ; "asolasen"} ;--# notpresent
    VP (Pret Sg P1) => "asolé" ;--# notpresent
    VP (Pret Sg P2) => "asolaste" ;--# notpresent
    VP (Pret Sg P3) => "asoló" ;--# notpresent
    VP (Pret Pl P1) => "asolamos" ;--# notpresent
    VP (Pret Pl P2) => "asolasteis" ;--# notpresent
    VP (Pret Pl P3) => "asolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "asolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "asolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "asolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "asoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asolaren" ;--# notpresent
    VP (Cond Sg P1) => "asolaría" ;--# notpresent
    VP (Cond Sg P2) => "asolarías" ;--# notpresent
    VP (Cond Sg P3) => "asolaría" ;--# notpresent
    VP (Cond Pl P1) => "asolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "asolaríais" ;--# notpresent
    VP (Cond Pl P3) => "asolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asuela" ;
    VP (Imp Sg P3) => "asuele" ;
    VP (Imp Pl P1) => "asolemos" ;
    VP (Imp Pl P2) => "asolad" ;
    VP (Imp Pl P3) => "asuelen" ;
    VP (Pass Sg Masc) => "asolado" ;
    VP (Pass Sg Fem) => "asolada" ;
    VP (Pass Pl Masc) => "asolados" ;
    VP (Pass Pl Fem) => "asoladas"
    }
  } ;

lin asoldar_V = verboV 
 {s = table {
    VI Infn => "asoldar" ;
    VI Ger => "asoldando" ;
    VI Part => "asoldado" ;
    VP (Pres Ind Sg P1) => "asueldo" ;
    VP (Pres Ind Sg P2) => "asueldas" ;
    VP (Pres Ind Sg P3) => "asuelda" ;
    VP (Pres Ind Pl P1) => "asoldamos" ;
    VP (Pres Ind Pl P2) => "asoldáis" ;
    VP (Pres Ind Pl P3) => "asueldan" ;
    VP (Pres Subj Sg P1) => "asuelde" ;
    VP (Pres Subj Sg P2) => "asueldes" ;
    VP (Pres Subj Sg P3) => "asuelde" ;
    VP (Pres Subj Pl P1) => "asoldemos" ;
    VP (Pres Subj Pl P2) => "asoldéis" ;
    VP (Pres Subj Pl P3) => "asuelden" ;
    VP (Impf Ind Sg P1) => "asoldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "asoldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "asoldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "asoldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asoldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asoldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asoldara" ; "asoldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asoldaras" ; "asoldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asoldara" ; "asoldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asoldáramos" ; "asoldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asoldarais" ; "asoldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asoldaran" ; "asoldasen"} ;--# notpresent
    VP (Pret Sg P1) => "asoldé" ;--# notpresent
    VP (Pret Sg P2) => "asoldaste" ;--# notpresent
    VP (Pret Sg P3) => "asoldó" ;--# notpresent
    VP (Pret Pl P1) => "asoldamos" ;--# notpresent
    VP (Pret Pl P2) => "asoldasteis" ;--# notpresent
    VP (Pret Pl P3) => "asoldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asoldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asoldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asoldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "asoldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asoldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asoldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asoldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "asoldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "asoldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "asoldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asoldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asoldaren" ;--# notpresent
    VP (Cond Sg P1) => "asoldaría" ;--# notpresent
    VP (Cond Sg P2) => "asoldarías" ;--# notpresent
    VP (Cond Sg P3) => "asoldaría" ;--# notpresent
    VP (Cond Pl P1) => "asoldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "asoldaríais" ;--# notpresent
    VP (Cond Pl P3) => "asoldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asuelda" ;
    VP (Imp Sg P3) => "asuelde" ;
    VP (Imp Pl P1) => "asoldemos" ;
    VP (Imp Pl P2) => "asoldad" ;
    VP (Imp Pl P3) => "asuelden" ;
    VP (Pass Sg Masc) => "asoldado" ;
    VP (Pass Sg Fem) => "asoldada" ;
    VP (Pass Pl Masc) => "asoldados" ;
    VP (Pass Pl Fem) => "asoldadas"
    }
  } ;

lin asonar_V = verboV 
 {s = table {
    VI Infn => "asonar" ;
    VI Ger => "asonando" ;
    VI Part => "asonado" ;
    VP (Pres Ind Sg P1) => "asueno" ;
    VP (Pres Ind Sg P2) => "asuenas" ;
    VP (Pres Ind Sg P3) => "asuena" ;
    VP (Pres Ind Pl P1) => "asonamos" ;
    VP (Pres Ind Pl P2) => "asonáis" ;
    VP (Pres Ind Pl P3) => "asuenan" ;
    VP (Pres Subj Sg P1) => "asuene" ;
    VP (Pres Subj Sg P2) => "asuenes" ;
    VP (Pres Subj Sg P3) => "asuene" ;
    VP (Pres Subj Pl P1) => "asonemos" ;
    VP (Pres Subj Pl P2) => "asonéis" ;
    VP (Pres Subj Pl P3) => "asuenen" ;
    VP (Impf Ind Sg P1) => "asonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "asonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "asonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "asonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "asonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "asonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"asonara" ; "asonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"asonaras" ; "asonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"asonara" ; "asonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"asonáramos" ; "asonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"asonarais" ; "asonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"asonaran" ; "asonasen"} ;--# notpresent
    VP (Pret Sg P1) => "asoné" ;--# notpresent
    VP (Pret Sg P2) => "asonaste" ;--# notpresent
    VP (Pret Sg P3) => "asonó" ;--# notpresent
    VP (Pret Pl P1) => "asonamos" ;--# notpresent
    VP (Pret Pl P2) => "asonasteis" ;--# notpresent
    VP (Pret Pl P3) => "asonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "asonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "asonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "asonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "asonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "asonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "asonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "asonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "asonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "asonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "asonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "asonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "asonaren" ;--# notpresent
    VP (Cond Sg P1) => "asonaría" ;--# notpresent
    VP (Cond Sg P2) => "asonarías" ;--# notpresent
    VP (Cond Sg P3) => "asonaría" ;--# notpresent
    VP (Cond Pl P1) => "asonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "asonaríais" ;--# notpresent
    VP (Cond Pl P3) => "asonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "asuena" ;
    VP (Imp Sg P3) => "asuene" ;
    VP (Imp Pl P1) => "asonemos" ;
    VP (Imp Pl P2) => "asonad" ;
    VP (Imp Pl P3) => "asuenen" ;
    VP (Pass Sg Masc) => "asonado" ;
    VP (Pass Sg Fem) => "asonada" ;
    VP (Pass Pl Masc) => "asonados" ;
    VP (Pass Pl Fem) => "asonadas"
    }
  } ;

lin aspaventar_V = verboV 
 {s = table {
    VI Infn => "aspaventar" ;
    VI Ger => "aspaventando" ;
    VI Part => "aspaventado" ;
    VP (Pres Ind Sg P1) => "aspaviento" ;
    VP (Pres Ind Sg P2) => "aspavientas" ;
    VP (Pres Ind Sg P3) => "aspavienta" ;
    VP (Pres Ind Pl P1) => "aspaventamos" ;
    VP (Pres Ind Pl P2) => "aspaventáis" ;
    VP (Pres Ind Pl P3) => "aspavientan" ;
    VP (Pres Subj Sg P1) => "aspaviente" ;
    VP (Pres Subj Sg P2) => "aspavientes" ;
    VP (Pres Subj Sg P3) => "aspaviente" ;
    VP (Pres Subj Pl P1) => "aspaventemos" ;
    VP (Pres Subj Pl P2) => "aspaventéis" ;
    VP (Pres Subj Pl P3) => "aspavienten" ;
    VP (Impf Ind Sg P1) => "aspaventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aspaventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aspaventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aspaventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aspaventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aspaventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aspaventara" ; "aspaventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aspaventaras" ; "aspaventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aspaventara" ; "aspaventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aspaventáramos" ; "aspaventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aspaventarais" ; "aspaventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aspaventaran" ; "aspaventasen"} ;--# notpresent
    VP (Pret Sg P1) => "aspaventé" ;--# notpresent
    VP (Pret Sg P2) => "aspaventaste" ;--# notpresent
    VP (Pret Sg P3) => "aspaventó" ;--# notpresent
    VP (Pret Pl P1) => "aspaventamos" ;--# notpresent
    VP (Pret Pl P2) => "aspaventasteis" ;--# notpresent
    VP (Pret Pl P3) => "aspaventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aspaventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aspaventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aspaventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aspaventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aspaventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aspaventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aspaventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aspaventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aspaventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aspaventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aspaventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aspaventaren" ;--# notpresent
    VP (Cond Sg P1) => "aspaventaría" ;--# notpresent
    VP (Cond Sg P2) => "aspaventarías" ;--# notpresent
    VP (Cond Sg P3) => "aspaventaría" ;--# notpresent
    VP (Cond Pl P1) => "aspaventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "aspaventaríais" ;--# notpresent
    VP (Cond Pl P3) => "aspaventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aspavienta" ;
    VP (Imp Sg P3) => "aspaviente" ;
    VP (Imp Pl P1) => "aspaventemos" ;
    VP (Imp Pl P2) => "aspaventad" ;
    VP (Imp Pl P3) => "aspavienten" ;
    VP (Pass Sg Masc) => "aspaventado" ;
    VP (Pass Sg Fem) => "aspaventada" ;
    VP (Pass Pl Masc) => "aspaventados" ;
    VP (Pass Pl Fem) => "aspaventadas"
    }
  } ;

lin aterrar_V = verboV 
 {s = table {
    VI Infn => "aterrar" ;
    VI Ger => "aterrando" ;
    VI Part => "aterrado" ;
    VP (Pres Ind Sg P1) => "atierro" ;
    VP (Pres Ind Sg P2) => "atierras" ;
    VP (Pres Ind Sg P3) => "atierra" ;
    VP (Pres Ind Pl P1) => "aterramos" ;
    VP (Pres Ind Pl P2) => "aterráis" ;
    VP (Pres Ind Pl P3) => "atierran" ;
    VP (Pres Subj Sg P1) => "atierre" ;
    VP (Pres Subj Sg P2) => "atierres" ;
    VP (Pres Subj Sg P3) => "atierre" ;
    VP (Pres Subj Pl P1) => "aterremos" ;
    VP (Pres Subj Pl P2) => "aterréis" ;
    VP (Pres Subj Pl P3) => "atierren" ;
    VP (Impf Ind Sg P1) => "aterraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aterrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aterraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aterrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aterrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aterraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aterrara" ; "aterrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aterraras" ; "aterrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aterrara" ; "aterrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aterráramos" ; "aterrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aterrarais" ; "aterraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aterraran" ; "aterrasen"} ;--# notpresent
    VP (Pret Sg P1) => "aterré" ;--# notpresent
    VP (Pret Sg P2) => "aterraste" ;--# notpresent
    VP (Pret Sg P3) => "aterró" ;--# notpresent
    VP (Pret Pl P1) => "aterramos" ;--# notpresent
    VP (Pret Pl P2) => "aterrasteis" ;--# notpresent
    VP (Pret Pl P3) => "aterraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aterraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aterrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aterrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aterraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aterraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aterrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aterrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aterrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aterrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aterráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aterrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aterraren" ;--# notpresent
    VP (Cond Sg P1) => "aterraría" ;--# notpresent
    VP (Cond Sg P2) => "aterrarías" ;--# notpresent
    VP (Cond Sg P3) => "aterraría" ;--# notpresent
    VP (Cond Pl P1) => "aterraríamos" ;--# notpresent
    VP (Cond Pl P2) => "aterraríais" ;--# notpresent
    VP (Cond Pl P3) => "aterrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atierra" ;
    VP (Imp Sg P3) => "atierre" ;
    VP (Imp Pl P1) => "aterremos" ;
    VP (Imp Pl P2) => "aterrad" ;
    VP (Imp Pl P3) => "atierren" ;
    VP (Pass Sg Masc) => "aterrado" ;
    VP (Pass Sg Fem) => "aterrada" ;
    VP (Pass Pl Masc) => "aterrados" ;
    VP (Pass Pl Fem) => "aterradas"
    }
  } ;

lin atestar_V = verboV 
 {s = table {
    VI Infn => "atestar" ;
    VI Ger => "atestando" ;
    VI Part => "atestado" ;
    VP (Pres Ind Sg P1) => "atiesto" ;
    VP (Pres Ind Sg P2) => "atiestas" ;
    VP (Pres Ind Sg P3) => "atiesta" ;
    VP (Pres Ind Pl P1) => "atestamos" ;
    VP (Pres Ind Pl P2) => "atestáis" ;
    VP (Pres Ind Pl P3) => "atiestan" ;
    VP (Pres Subj Sg P1) => "atieste" ;
    VP (Pres Subj Sg P2) => "atiestes" ;
    VP (Pres Subj Sg P3) => "atieste" ;
    VP (Pres Subj Pl P1) => "atestemos" ;
    VP (Pres Subj Pl P2) => "atestéis" ;
    VP (Pres Subj Pl P3) => "atiesten" ;
    VP (Impf Ind Sg P1) => "atestaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "atestabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "atestaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "atestábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atestabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atestaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atestara" ; "atestase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atestaras" ; "atestases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atestara" ; "atestase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atestáramos" ; "atestásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atestarais" ; "atestaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atestaran" ; "atestasen"} ;--# notpresent
    VP (Pret Sg P1) => "atesté" ;--# notpresent
    VP (Pret Sg P2) => "atestaste" ;--# notpresent
    VP (Pret Sg P3) => "atestó" ;--# notpresent
    VP (Pret Pl P1) => "atestamos" ;--# notpresent
    VP (Pret Pl P2) => "atestasteis" ;--# notpresent
    VP (Pret Pl P3) => "atestaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atestaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atestarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atestará" ;--# notpresent
    VP (Fut Ind Pl P1) => "atestaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atestaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atestarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atestare" ;--# notpresent
    VP (Fut Subj Sg P2) => "atestares" ;--# notpresent
    VP (Fut Subj Sg P3) => "atestare" ;--# notpresent
    VP (Fut Subj Pl P1) => "atestáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atestareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atestaren" ;--# notpresent
    VP (Cond Sg P1) => "atestaría" ;--# notpresent
    VP (Cond Sg P2) => "atestarías" ;--# notpresent
    VP (Cond Sg P3) => "atestaría" ;--# notpresent
    VP (Cond Pl P1) => "atestaríamos" ;--# notpresent
    VP (Cond Pl P2) => "atestaríais" ;--# notpresent
    VP (Cond Pl P3) => "atestarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atiesta" ;
    VP (Imp Sg P3) => "atieste" ;
    VP (Imp Pl P1) => "atestemos" ;
    VP (Imp Pl P2) => "atestad" ;
    VP (Imp Pl P3) => "atiesten" ;
    VP (Pass Sg Masc) => "atestado" ;
    VP (Pass Sg Fem) => "atestada" ;
    VP (Pass Pl Masc) => "atestados" ;
    VP (Pass Pl Fem) => "atestadas"
    }
  } ;

lin atorar_V = verboV 
 {s = table {
    VI Infn => "atorar" ;
    VI Ger => "atorando" ;
    VI Part => "atorado" ;
    VP (Pres Ind Sg P1) => "atuero" ;
    VP (Pres Ind Sg P2) => "atueras" ;
    VP (Pres Ind Sg P3) => "atuera" ;
    VP (Pres Ind Pl P1) => "atoramos" ;
    VP (Pres Ind Pl P2) => "atoráis" ;
    VP (Pres Ind Pl P3) => "atueran" ;
    VP (Pres Subj Sg P1) => "atuere" ;
    VP (Pres Subj Sg P2) => "atueres" ;
    VP (Pres Subj Sg P3) => "atuere" ;
    VP (Pres Subj Pl P1) => "atoremos" ;
    VP (Pres Subj Pl P2) => "atoréis" ;
    VP (Pres Subj Pl P3) => "atueren" ;
    VP (Impf Ind Sg P1) => "atoraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "atorabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "atoraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "atorábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atorabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atoraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atorara" ; "atorase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atoraras" ; "atorases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atorara" ; "atorase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atoráramos" ; "atorásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atorarais" ; "atoraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atoraran" ; "atorasen"} ;--# notpresent
    VP (Pret Sg P1) => "atoré" ;--# notpresent
    VP (Pret Sg P2) => "atoraste" ;--# notpresent
    VP (Pret Sg P3) => "atoró" ;--# notpresent
    VP (Pret Pl P1) => "atoramos" ;--# notpresent
    VP (Pret Pl P2) => "atorasteis" ;--# notpresent
    VP (Pret Pl P3) => "atoraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atoraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atorarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atorará" ;--# notpresent
    VP (Fut Ind Pl P1) => "atoraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atoraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atorarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atorare" ;--# notpresent
    VP (Fut Subj Sg P2) => "atorares" ;--# notpresent
    VP (Fut Subj Sg P3) => "atorare" ;--# notpresent
    VP (Fut Subj Pl P1) => "atoráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atorareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atoraren" ;--# notpresent
    VP (Cond Sg P1) => "atoraría" ;--# notpresent
    VP (Cond Sg P2) => "atorarías" ;--# notpresent
    VP (Cond Sg P3) => "atoraría" ;--# notpresent
    VP (Cond Pl P1) => "atoraríamos" ;--# notpresent
    VP (Cond Pl P2) => "atoraríais" ;--# notpresent
    VP (Cond Pl P3) => "atorarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atuera" ;
    VP (Imp Sg P3) => "atuere" ;
    VP (Imp Pl P1) => "atoremos" ;
    VP (Imp Pl P2) => "atorad" ;
    VP (Imp Pl P3) => "atueren" ;
    VP (Pass Sg Masc) => "atorado" ;
    VP (Pass Sg Fem) => "atorada" ;
    VP (Pass Pl Masc) => "atorados" ;
    VP (Pass Pl Fem) => "atoradas"
    }
  } ;

lin atravesar_V = verboV 
 {s = table {
    VI Infn => "atravesar" ;
    VI Ger => "atravesando" ;
    VI Part => "atravesado" ;
    VP (Pres Ind Sg P1) => "atravieso" ;
    VP (Pres Ind Sg P2) => "atraviesas" ;
    VP (Pres Ind Sg P3) => "atraviesa" ;
    VP (Pres Ind Pl P1) => "atravesamos" ;
    VP (Pres Ind Pl P2) => "atravesáis" ;
    VP (Pres Ind Pl P3) => "atraviesan" ;
    VP (Pres Subj Sg P1) => "atraviese" ;
    VP (Pres Subj Sg P2) => "atravieses" ;
    VP (Pres Subj Sg P3) => "atraviese" ;
    VP (Pres Subj Pl P1) => "atravesemos" ;
    VP (Pres Subj Pl P2) => "atraveséis" ;
    VP (Pres Subj Pl P3) => "atraviesen" ;
    VP (Impf Ind Sg P1) => "atravesaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "atravesabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "atravesaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "atravesábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atravesabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atravesaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atravesara" ; "atravesase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atravesaras" ; "atravesases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atravesara" ; "atravesase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atravesáramos" ; "atravesásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atravesarais" ; "atravesaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atravesaran" ; "atravesasen"} ;--# notpresent
    VP (Pret Sg P1) => "atravesé" ;--# notpresent
    VP (Pret Sg P2) => "atravesaste" ;--# notpresent
    VP (Pret Sg P3) => "atravesó" ;--# notpresent
    VP (Pret Pl P1) => "atravesamos" ;--# notpresent
    VP (Pret Pl P2) => "atravesasteis" ;--# notpresent
    VP (Pret Pl P3) => "atravesaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atravesaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atravesarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atravesará" ;--# notpresent
    VP (Fut Ind Pl P1) => "atravesaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atravesaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atravesarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atravesare" ;--# notpresent
    VP (Fut Subj Sg P2) => "atravesares" ;--# notpresent
    VP (Fut Subj Sg P3) => "atravesare" ;--# notpresent
    VP (Fut Subj Pl P1) => "atravesáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atravesareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atravesaren" ;--# notpresent
    VP (Cond Sg P1) => "atravesaría" ;--# notpresent
    VP (Cond Sg P2) => "atravesarías" ;--# notpresent
    VP (Cond Sg P3) => "atravesaría" ;--# notpresent
    VP (Cond Pl P1) => "atravesaríamos" ;--# notpresent
    VP (Cond Pl P2) => "atravesaríais" ;--# notpresent
    VP (Cond Pl P3) => "atravesarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atraviesa" ;
    VP (Imp Sg P3) => "atraviese" ;
    VP (Imp Pl P1) => "atravesemos" ;
    VP (Imp Pl P2) => "atravesad" ;
    VP (Imp Pl P3) => "atraviesen" ;
    VP (Pass Sg Masc) => "atravesado" ;
    VP (Pass Sg Fem) => "atravesada" ;
    VP (Pass Pl Masc) => "atravesados" ;
    VP (Pass Pl Fem) => "atravesadas"
    }
  } ;

lin atronar_V = verboV 
 {s = table {
    VI Infn => "atronar" ;
    VI Ger => "atronando" ;
    VI Part => "atronado" ;
    VP (Pres Ind Sg P1) => "atrueno" ;
    VP (Pres Ind Sg P2) => "atruenas" ;
    VP (Pres Ind Sg P3) => "atruena" ;
    VP (Pres Ind Pl P1) => "atronamos" ;
    VP (Pres Ind Pl P2) => "atronáis" ;
    VP (Pres Ind Pl P3) => "atruenan" ;
    VP (Pres Subj Sg P1) => "atruene" ;
    VP (Pres Subj Sg P2) => "atruenes" ;
    VP (Pres Subj Sg P3) => "atruene" ;
    VP (Pres Subj Pl P1) => "atronemos" ;
    VP (Pres Subj Pl P2) => "atronéis" ;
    VP (Pres Subj Pl P3) => "atruenen" ;
    VP (Impf Ind Sg P1) => "atronaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "atronabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "atronaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "atronábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atronabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atronaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atronara" ; "atronase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atronaras" ; "atronases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atronara" ; "atronase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atronáramos" ; "atronásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atronarais" ; "atronaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atronaran" ; "atronasen"} ;--# notpresent
    VP (Pret Sg P1) => "atroné" ;--# notpresent
    VP (Pret Sg P2) => "atronaste" ;--# notpresent
    VP (Pret Sg P3) => "atronó" ;--# notpresent
    VP (Pret Pl P1) => "atronamos" ;--# notpresent
    VP (Pret Pl P2) => "atronasteis" ;--# notpresent
    VP (Pret Pl P3) => "atronaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atronaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atronarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atronará" ;--# notpresent
    VP (Fut Ind Pl P1) => "atronaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atronaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atronarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atronare" ;--# notpresent
    VP (Fut Subj Sg P2) => "atronares" ;--# notpresent
    VP (Fut Subj Sg P3) => "atronare" ;--# notpresent
    VP (Fut Subj Pl P1) => "atronáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atronareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atronaren" ;--# notpresent
    VP (Cond Sg P1) => "atronaría" ;--# notpresent
    VP (Cond Sg P2) => "atronarías" ;--# notpresent
    VP (Cond Sg P3) => "atronaría" ;--# notpresent
    VP (Cond Pl P1) => "atronaríamos" ;--# notpresent
    VP (Cond Pl P2) => "atronaríais" ;--# notpresent
    VP (Cond Pl P3) => "atronarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atruena" ;
    VP (Imp Sg P3) => "atruene" ;
    VP (Imp Pl P1) => "atronemos" ;
    VP (Imp Pl P2) => "atronad" ;
    VP (Imp Pl P3) => "atruenen" ;
    VP (Pass Sg Masc) => "atronado" ;
    VP (Pass Sg Fem) => "atronada" ;
    VP (Pass Pl Masc) => "atronados" ;
    VP (Pass Pl Fem) => "atronadas"
    }
  } ;

lin aventar_V = verboV 
 {s = table {
    VI Infn => "aventar" ;
    VI Ger => "aventando" ;
    VI Part => "aventado" ;
    VP (Pres Ind Sg P1) => "aviento" ;
    VP (Pres Ind Sg P2) => "avientas" ;
    VP (Pres Ind Sg P3) => "avienta" ;
    VP (Pres Ind Pl P1) => "aventamos" ;
    VP (Pres Ind Pl P2) => "aventáis" ;
    VP (Pres Ind Pl P3) => "avientan" ;
    VP (Pres Subj Sg P1) => "aviente" ;
    VP (Pres Subj Sg P2) => "avientes" ;
    VP (Pres Subj Sg P3) => "aviente" ;
    VP (Pres Subj Pl P1) => "aventemos" ;
    VP (Pres Subj Pl P2) => "aventéis" ;
    VP (Pres Subj Pl P3) => "avienten" ;
    VP (Impf Ind Sg P1) => "aventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "aventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "aventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "aventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"aventara" ; "aventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"aventaras" ; "aventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aventara" ; "aventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"aventáramos" ; "aventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"aventarais" ; "aventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"aventaran" ; "aventasen"} ;--# notpresent
    VP (Pret Sg P1) => "aventé" ;--# notpresent
    VP (Pret Sg P2) => "aventaste" ;--# notpresent
    VP (Pret Sg P3) => "aventó" ;--# notpresent
    VP (Pret Pl P1) => "aventamos" ;--# notpresent
    VP (Pret Pl P2) => "aventasteis" ;--# notpresent
    VP (Pret Pl P3) => "aventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "aventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "aventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "aventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "aventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "aventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "aventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "aventaren" ;--# notpresent
    VP (Cond Sg P1) => "aventaría" ;--# notpresent
    VP (Cond Sg P2) => "aventarías" ;--# notpresent
    VP (Cond Sg P3) => "aventaría" ;--# notpresent
    VP (Cond Pl P1) => "aventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "aventaríais" ;--# notpresent
    VP (Cond Pl P3) => "aventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "avienta" ;
    VP (Imp Sg P3) => "aviente" ;
    VP (Imp Pl P1) => "aventemos" ;
    VP (Imp Pl P2) => "aventad" ;
    VP (Imp Pl P3) => "avienten" ;
    VP (Pass Sg Masc) => "aventado" ;
    VP (Pass Sg Fem) => "aventada" ;
    VP (Pass Pl Masc) => "aventados" ;
    VP (Pass Pl Fem) => "aventadas"
    }
  } ;

lin azolar_V = verboV 
 {s = table {
    VI Infn => "azolar" ;
    VI Ger => "azolando" ;
    VI Part => "azolado" ;
    VP (Pres Ind Sg P1) => "azuelo" ;
    VP (Pres Ind Sg P2) => "azuelas" ;
    VP (Pres Ind Sg P3) => "azuela" ;
    VP (Pres Ind Pl P1) => "azolamos" ;
    VP (Pres Ind Pl P2) => "azoláis" ;
    VP (Pres Ind Pl P3) => "azuelan" ;
    VP (Pres Subj Sg P1) => "azuele" ;
    VP (Pres Subj Sg P2) => "azueles" ;
    VP (Pres Subj Sg P3) => "azuele" ;
    VP (Pres Subj Pl P1) => "azolemos" ;
    VP (Pres Subj Pl P2) => "azoléis" ;
    VP (Pres Subj Pl P3) => "azuelen" ;
    VP (Impf Ind Sg P1) => "azolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "azolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "azolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "azolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "azolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "azolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"azolara" ; "azolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"azolaras" ; "azolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"azolara" ; "azolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"azoláramos" ; "azolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"azolarais" ; "azolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"azolaran" ; "azolasen"} ;--# notpresent
    VP (Pret Sg P1) => "azolé" ;--# notpresent
    VP (Pret Sg P2) => "azolaste" ;--# notpresent
    VP (Pret Sg P3) => "azoló" ;--# notpresent
    VP (Pret Pl P1) => "azolamos" ;--# notpresent
    VP (Pret Pl P2) => "azolasteis" ;--# notpresent
    VP (Pret Pl P3) => "azolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "azolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "azolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "azolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "azolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "azolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "azolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "azolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "azolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "azolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "azoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "azolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "azolaren" ;--# notpresent
    VP (Cond Sg P1) => "azolaría" ;--# notpresent
    VP (Cond Sg P2) => "azolarías" ;--# notpresent
    VP (Cond Sg P3) => "azolaría" ;--# notpresent
    VP (Cond Pl P1) => "azolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "azolaríais" ;--# notpresent
    VP (Cond Pl P3) => "azolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "azuela" ;
    VP (Imp Sg P3) => "azuele" ;
    VP (Imp Pl P1) => "azolemos" ;
    VP (Imp Pl P2) => "azolad" ;
    VP (Imp Pl P3) => "azuelen" ;
    VP (Pass Sg Masc) => "azolado" ;
    VP (Pass Sg Fem) => "azolada" ;
    VP (Pass Pl Masc) => "azolados" ;
    VP (Pass Pl Fem) => "azoladas"
    }
  } ;

lin beldar_V = verboV 
 {s = table {
    VI Infn => "beldar" ;
    VI Ger => "beldando" ;
    VI Part => "beldado" ;
    VP (Pres Ind Sg P1) => "bieldo" ;
    VP (Pres Ind Sg P2) => "bieldas" ;
    VP (Pres Ind Sg P3) => "bielda" ;
    VP (Pres Ind Pl P1) => "beldamos" ;
    VP (Pres Ind Pl P2) => "beldáis" ;
    VP (Pres Ind Pl P3) => "bieldan" ;
    VP (Pres Subj Sg P1) => "bielde" ;
    VP (Pres Subj Sg P2) => "bieldes" ;
    VP (Pres Subj Sg P3) => "bielde" ;
    VP (Pres Subj Pl P1) => "beldemos" ;
    VP (Pres Subj Pl P2) => "beldéis" ;
    VP (Pres Subj Pl P3) => "bielden" ;
    VP (Impf Ind Sg P1) => "beldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "beldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "beldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "beldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "beldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "beldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"beldara" ; "beldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"beldaras" ; "beldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"beldara" ; "beldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"beldáramos" ; "beldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"beldarais" ; "beldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"beldaran" ; "beldasen"} ;--# notpresent
    VP (Pret Sg P1) => "beldé" ;--# notpresent
    VP (Pret Sg P2) => "beldaste" ;--# notpresent
    VP (Pret Sg P3) => "beldó" ;--# notpresent
    VP (Pret Pl P1) => "beldamos" ;--# notpresent
    VP (Pret Pl P2) => "beldasteis" ;--# notpresent
    VP (Pret Pl P3) => "beldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "beldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "beldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "beldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "beldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "beldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "beldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "beldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "beldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "beldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "beldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "beldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "beldaren" ;--# notpresent
    VP (Cond Sg P1) => "beldaría" ;--# notpresent
    VP (Cond Sg P2) => "beldarías" ;--# notpresent
    VP (Cond Sg P3) => "beldaría" ;--# notpresent
    VP (Cond Pl P1) => "beldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "beldaríais" ;--# notpresent
    VP (Cond Pl P3) => "beldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "bielda" ;
    VP (Imp Sg P3) => "bielde" ;
    VP (Imp Pl P1) => "beldemos" ;
    VP (Imp Pl P2) => "beldad" ;
    VP (Imp Pl P3) => "bielden" ;
    VP (Pass Sg Masc) => "beldado" ;
    VP (Pass Sg Fem) => "beldada" ;
    VP (Pass Pl Masc) => "beldados" ;
    VP (Pass Pl Fem) => "beldadas"
    }
  } ;

lin calentar_V = verboV 
 {s = table {
    VI Infn => "calentar" ;
    VI Ger => "calentando" ;
    VI Part => "calentado" ;
    VP (Pres Ind Sg P1) => "caliento" ;
    VP (Pres Ind Sg P2) => "calientas" ;
    VP (Pres Ind Sg P3) => "calienta" ;
    VP (Pres Ind Pl P1) => "calentamos" ;
    VP (Pres Ind Pl P2) => "calentáis" ;
    VP (Pres Ind Pl P3) => "calientan" ;
    VP (Pres Subj Sg P1) => "caliente" ;
    VP (Pres Subj Sg P2) => "calientes" ;
    VP (Pres Subj Sg P3) => "caliente" ;
    VP (Pres Subj Pl P1) => "calentemos" ;
    VP (Pres Subj Pl P2) => "calentéis" ;
    VP (Pres Subj Pl P3) => "calienten" ;
    VP (Impf Ind Sg P1) => "calentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "calentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "calentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "calentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "calentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "calentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"calentara" ; "calentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"calentaras" ; "calentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"calentara" ; "calentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"calentáramos" ; "calentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"calentarais" ; "calentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"calentaran" ; "calentasen"} ;--# notpresent
    VP (Pret Sg P1) => "calenté" ;--# notpresent
    VP (Pret Sg P2) => "calentaste" ;--# notpresent
    VP (Pret Sg P3) => "calentó" ;--# notpresent
    VP (Pret Pl P1) => "calentamos" ;--# notpresent
    VP (Pret Pl P2) => "calentasteis" ;--# notpresent
    VP (Pret Pl P3) => "calentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "calentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "calentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "calentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "calentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "calentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "calentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "calentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "calentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "calentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "calentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "calentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "calentaren" ;--# notpresent
    VP (Cond Sg P1) => "calentaría" ;--# notpresent
    VP (Cond Sg P2) => "calentarías" ;--# notpresent
    VP (Cond Sg P3) => "calentaría" ;--# notpresent
    VP (Cond Pl P1) => "calentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "calentaríais" ;--# notpresent
    VP (Cond Pl P3) => "calentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "calienta" ;
    VP (Imp Sg P3) => "caliente" ;
    VP (Imp Pl P1) => "calentemos" ;
    VP (Imp Pl P2) => "calentad" ;
    VP (Imp Pl P3) => "calienten" ;
    VP (Pass Sg Masc) => "calentado" ;
    VP (Pass Sg Fem) => "calentada" ;
    VP (Pass Pl Masc) => "calentados" ;
    VP (Pass Pl Fem) => "calentadas"
    }
  } ;

lin cerrar_V = verboV 
 {s = table {
    VI Infn => "cerrar" ;
    VI Ger => "cerrando" ;
    VI Part => "cerrado" ;
    VP (Pres Ind Sg P1) => "cierro" ;
    VP (Pres Ind Sg P2) => "cierras" ;
    VP (Pres Ind Sg P3) => "cierra" ;
    VP (Pres Ind Pl P1) => "cerramos" ;
    VP (Pres Ind Pl P2) => "cerráis" ;
    VP (Pres Ind Pl P3) => "cierran" ;
    VP (Pres Subj Sg P1) => "cierre" ;
    VP (Pres Subj Sg P2) => "cierres" ;
    VP (Pres Subj Sg P3) => "cierre" ;
    VP (Pres Subj Pl P1) => "cerremos" ;
    VP (Pres Subj Pl P2) => "cerréis" ;
    VP (Pres Subj Pl P3) => "cierren" ;
    VP (Impf Ind Sg P1) => "cerraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "cerrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "cerraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "cerrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cerrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cerraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cerrara" ; "cerrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cerraras" ; "cerrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cerrara" ; "cerrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cerráramos" ; "cerrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cerrarais" ; "cerraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cerraran" ; "cerrasen"} ;--# notpresent
    VP (Pret Sg P1) => "cerré" ;--# notpresent
    VP (Pret Sg P2) => "cerraste" ;--# notpresent
    VP (Pret Sg P3) => "cerró" ;--# notpresent
    VP (Pret Pl P1) => "cerramos" ;--# notpresent
    VP (Pret Pl P2) => "cerrasteis" ;--# notpresent
    VP (Pret Pl P3) => "cerraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cerraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cerrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cerrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "cerraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cerraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cerrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cerrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "cerrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "cerrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "cerráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cerrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cerraren" ;--# notpresent
    VP (Cond Sg P1) => "cerraría" ;--# notpresent
    VP (Cond Sg P2) => "cerrarías" ;--# notpresent
    VP (Cond Sg P3) => "cerraría" ;--# notpresent
    VP (Cond Pl P1) => "cerraríamos" ;--# notpresent
    VP (Cond Pl P2) => "cerraríais" ;--# notpresent
    VP (Cond Pl P3) => "cerrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cierra" ;
    VP (Imp Sg P3) => "cierre" ;
    VP (Imp Pl P1) => "cerremos" ;
    VP (Imp Pl P2) => "cerrad" ;
    VP (Imp Pl P3) => "cierren" ;
    VP (Pass Sg Masc) => "cerrado" ;
    VP (Pass Sg Fem) => "cerrada" ;
    VP (Pass Pl Masc) => "cerrados" ;
    VP (Pass Pl Fem) => "cerradas"
    }
  } ;

lin cimentar_V = verboV 
 {s = table {
    VI Infn => "cimentar" ;
    VI Ger => "cimentando" ;
    VI Part => "cimentado" ;
    VP (Pres Ind Sg P1) => "cimiento" ;
    VP (Pres Ind Sg P2) => "cimientas" ;
    VP (Pres Ind Sg P3) => "cimienta" ;
    VP (Pres Ind Pl P1) => "cimentamos" ;
    VP (Pres Ind Pl P2) => "cimentáis" ;
    VP (Pres Ind Pl P3) => "cimientan" ;
    VP (Pres Subj Sg P1) => "cimiente" ;
    VP (Pres Subj Sg P2) => "cimientes" ;
    VP (Pres Subj Sg P3) => "cimiente" ;
    VP (Pres Subj Pl P1) => "cimentemos" ;
    VP (Pres Subj Pl P2) => "cimentéis" ;
    VP (Pres Subj Pl P3) => "cimienten" ;
    VP (Impf Ind Sg P1) => "cimentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "cimentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "cimentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "cimentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cimentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cimentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cimentara" ; "cimentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cimentaras" ; "cimentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cimentara" ; "cimentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cimentáramos" ; "cimentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cimentarais" ; "cimentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cimentaran" ; "cimentasen"} ;--# notpresent
    VP (Pret Sg P1) => "cimenté" ;--# notpresent
    VP (Pret Sg P2) => "cimentaste" ;--# notpresent
    VP (Pret Sg P3) => "cimentó" ;--# notpresent
    VP (Pret Pl P1) => "cimentamos" ;--# notpresent
    VP (Pret Pl P2) => "cimentasteis" ;--# notpresent
    VP (Pret Pl P3) => "cimentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cimentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cimentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cimentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "cimentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cimentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cimentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cimentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "cimentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "cimentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "cimentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cimentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cimentaren" ;--# notpresent
    VP (Cond Sg P1) => "cimentaría" ;--# notpresent
    VP (Cond Sg P2) => "cimentarías" ;--# notpresent
    VP (Cond Sg P3) => "cimentaría" ;--# notpresent
    VP (Cond Pl P1) => "cimentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "cimentaríais" ;--# notpresent
    VP (Cond Pl P3) => "cimentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cimienta" ;
    VP (Imp Sg P3) => "cimiente" ;
    VP (Imp Pl P1) => "cimentemos" ;
    VP (Imp Pl P2) => "cimentad" ;
    VP (Imp Pl P3) => "cimienten" ;
    VP (Pass Sg Masc) => "cimentado" ;
    VP (Pass Sg Fem) => "cimentada" ;
    VP (Pass Pl Masc) => "cimentados" ;
    VP (Pass Pl Fem) => "cimentadas"
    }
  } ;

lin circunvolar_V = verboV 
 {s = table {
    VI Infn => "circunvolar" ;
    VI Ger => "circunvolando" ;
    VI Part => "circunvolado" ;
    VP (Pres Ind Sg P1) => "circunvuelo" ;
    VP (Pres Ind Sg P2) => "circunvuelas" ;
    VP (Pres Ind Sg P3) => "circunvuela" ;
    VP (Pres Ind Pl P1) => "circunvolamos" ;
    VP (Pres Ind Pl P2) => "circunvoláis" ;
    VP (Pres Ind Pl P3) => "circunvuelan" ;
    VP (Pres Subj Sg P1) => "circunvuele" ;
    VP (Pres Subj Sg P2) => "circunvueles" ;
    VP (Pres Subj Sg P3) => "circunvuele" ;
    VP (Pres Subj Pl P1) => "circunvolemos" ;
    VP (Pres Subj Pl P2) => "circunvoléis" ;
    VP (Pres Subj Pl P3) => "circunvuelen" ;
    VP (Impf Ind Sg P1) => "circunvolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "circunvolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "circunvolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "circunvolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "circunvolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "circunvolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"circunvolara" ; "circunvolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"circunvolaras" ; "circunvolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"circunvolara" ; "circunvolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"circunvoláramos" ; "circunvolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"circunvolarais" ; "circunvolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"circunvolaran" ; "circunvolasen"} ;--# notpresent
    VP (Pret Sg P1) => "circunvolé" ;--# notpresent
    VP (Pret Sg P2) => "circunvolaste" ;--# notpresent
    VP (Pret Sg P3) => "circunvoló" ;--# notpresent
    VP (Pret Pl P1) => "circunvolamos" ;--# notpresent
    VP (Pret Pl P2) => "circunvolasteis" ;--# notpresent
    VP (Pret Pl P3) => "circunvolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "circunvolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "circunvolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "circunvolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "circunvolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "circunvolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "circunvolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "circunvolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "circunvolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "circunvolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "circunvoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "circunvolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "circunvolaren" ;--# notpresent
    VP (Cond Sg P1) => "circunvolaría" ;--# notpresent
    VP (Cond Sg P2) => "circunvolarías" ;--# notpresent
    VP (Cond Sg P3) => "circunvolaría" ;--# notpresent
    VP (Cond Pl P1) => "circunvolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "circunvolaríais" ;--# notpresent
    VP (Cond Pl P3) => "circunvolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "circunvuela" ;
    VP (Imp Sg P3) => "circunvuele" ;
    VP (Imp Pl P1) => "circunvolemos" ;
    VP (Imp Pl P2) => "circunvolad" ;
    VP (Imp Pl P3) => "circunvuelen" ;
    VP (Pass Sg Masc) => "circunvolado" ;
    VP (Pass Sg Fem) => "circunvolada" ;
    VP (Pass Pl Masc) => "circunvolados" ;
    VP (Pass Pl Fem) => "circunvoladas"
    }
  } ;

lin colar_V = verboV 
 {s = table {
    VI Infn => "colar" ;
    VI Ger => "colando" ;
    VI Part => "colado" ;
    VP (Pres Ind Sg P1) => "cuelo" ;
    VP (Pres Ind Sg P2) => "cuelas" ;
    VP (Pres Ind Sg P3) => "cuela" ;
    VP (Pres Ind Pl P1) => "colamos" ;
    VP (Pres Ind Pl P2) => "coláis" ;
    VP (Pres Ind Pl P3) => "cuelan" ;
    VP (Pres Subj Sg P1) => "cuele" ;
    VP (Pres Subj Sg P2) => "cueles" ;
    VP (Pres Subj Sg P3) => "cuele" ;
    VP (Pres Subj Pl P1) => "colemos" ;
    VP (Pres Subj Pl P2) => "coléis" ;
    VP (Pres Subj Pl P3) => "cuelen" ;
    VP (Impf Ind Sg P1) => "colaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "colabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "colaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "colábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "colabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "colaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"colara" ; "colase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"colaras" ; "colases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"colara" ; "colase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coláramos" ; "colásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"colarais" ; "colaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"colaran" ; "colasen"} ;--# notpresent
    VP (Pret Sg P1) => "colé" ;--# notpresent
    VP (Pret Sg P2) => "colaste" ;--# notpresent
    VP (Pret Sg P3) => "coló" ;--# notpresent
    VP (Pret Pl P1) => "colamos" ;--# notpresent
    VP (Pret Pl P2) => "colasteis" ;--# notpresent
    VP (Pret Pl P3) => "colaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "colaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "colarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "colará" ;--# notpresent
    VP (Fut Ind Pl P1) => "colaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "colaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "colarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "colare" ;--# notpresent
    VP (Fut Subj Sg P2) => "colares" ;--# notpresent
    VP (Fut Subj Sg P3) => "colare" ;--# notpresent
    VP (Fut Subj Pl P1) => "coláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "colareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "colaren" ;--# notpresent
    VP (Cond Sg P1) => "colaría" ;--# notpresent
    VP (Cond Sg P2) => "colarías" ;--# notpresent
    VP (Cond Sg P3) => "colaría" ;--# notpresent
    VP (Cond Pl P1) => "colaríamos" ;--# notpresent
    VP (Cond Pl P2) => "colaríais" ;--# notpresent
    VP (Cond Pl P3) => "colarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cuela" ;
    VP (Imp Sg P3) => "cuele" ;
    VP (Imp Pl P1) => "colemos" ;
    VP (Imp Pl P2) => "colad" ;
    VP (Imp Pl P3) => "cuelen" ;
    VP (Pass Sg Masc) => "colado" ;
    VP (Pass Sg Fem) => "colada" ;
    VP (Pass Pl Masc) => "colados" ;
    VP (Pass Pl Fem) => "coladas"
    }
  } ;

lin comprobar_V = verboV 
 {s = table {
    VI Infn => "comprobar" ;
    VI Ger => "comprobando" ;
    VI Part => "comprobado" ;
    VP (Pres Ind Sg P1) => "compruebo" ;
    VP (Pres Ind Sg P2) => "compruebas" ;
    VP (Pres Ind Sg P3) => "comprueba" ;
    VP (Pres Ind Pl P1) => "comprobamos" ;
    VP (Pres Ind Pl P2) => "comprobáis" ;
    VP (Pres Ind Pl P3) => "comprueban" ;
    VP (Pres Subj Sg P1) => "compruebe" ;
    VP (Pres Subj Sg P2) => "compruebes" ;
    VP (Pres Subj Sg P3) => "compruebe" ;
    VP (Pres Subj Pl P1) => "comprobemos" ;
    VP (Pres Subj Pl P2) => "comprobéis" ;
    VP (Pres Subj Pl P3) => "comprueben" ;
    VP (Impf Ind Sg P1) => "comprobaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "comprobabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "comprobaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "comprobábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "comprobabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "comprobaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"comprobara" ; "comprobase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"comprobaras" ; "comprobases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"comprobara" ; "comprobase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"comprobáramos" ; "comprobásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"comprobarais" ; "comprobaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"comprobaran" ; "comprobasen"} ;--# notpresent
    VP (Pret Sg P1) => "comprobé" ;--# notpresent
    VP (Pret Sg P2) => "comprobaste" ;--# notpresent
    VP (Pret Sg P3) => "comprobó" ;--# notpresent
    VP (Pret Pl P1) => "comprobamos" ;--# notpresent
    VP (Pret Pl P2) => "comprobasteis" ;--# notpresent
    VP (Pret Pl P3) => "comprobaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "comprobaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "comprobarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "comprobará" ;--# notpresent
    VP (Fut Ind Pl P1) => "comprobaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "comprobaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "comprobarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "comprobare" ;--# notpresent
    VP (Fut Subj Sg P2) => "comprobares" ;--# notpresent
    VP (Fut Subj Sg P3) => "comprobare" ;--# notpresent
    VP (Fut Subj Pl P1) => "comprobáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "comprobareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "comprobaren" ;--# notpresent
    VP (Cond Sg P1) => "comprobaría" ;--# notpresent
    VP (Cond Sg P2) => "comprobarías" ;--# notpresent
    VP (Cond Sg P3) => "comprobaría" ;--# notpresent
    VP (Cond Pl P1) => "comprobaríamos" ;--# notpresent
    VP (Cond Pl P2) => "comprobaríais" ;--# notpresent
    VP (Cond Pl P3) => "comprobarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "comprueba" ;
    VP (Imp Sg P3) => "compruebe" ;
    VP (Imp Pl P1) => "comprobemos" ;
    VP (Imp Pl P2) => "comprobad" ;
    VP (Imp Pl P3) => "comprueben" ;
    VP (Pass Sg Masc) => "comprobado" ;
    VP (Pass Sg Fem) => "comprobada" ;
    VP (Pass Pl Masc) => "comprobados" ;
    VP (Pass Pl Fem) => "comprobadas"
    }
  } ;

lin concertar_V = verboV 
 {s = table {
    VI Infn => "concertar" ;
    VI Ger => "concertando" ;
    VI Part => "concertado" ;
    VP (Pres Ind Sg P1) => "concierto" ;
    VP (Pres Ind Sg P2) => "conciertas" ;
    VP (Pres Ind Sg P3) => "concierta" ;
    VP (Pres Ind Pl P1) => "concertamos" ;
    VP (Pres Ind Pl P2) => "concertáis" ;
    VP (Pres Ind Pl P3) => "conciertan" ;
    VP (Pres Subj Sg P1) => "concierte" ;
    VP (Pres Subj Sg P2) => "conciertes" ;
    VP (Pres Subj Sg P3) => "concierte" ;
    VP (Pres Subj Pl P1) => "concertemos" ;
    VP (Pres Subj Pl P2) => "concertéis" ;
    VP (Pres Subj Pl P3) => "concierten" ;
    VP (Impf Ind Sg P1) => "concertaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "concertabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "concertaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "concertábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "concertabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "concertaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"concertara" ; "concertase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"concertaras" ; "concertases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"concertara" ; "concertase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"concertáramos" ; "concertásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"concertarais" ; "concertaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"concertaran" ; "concertasen"} ;--# notpresent
    VP (Pret Sg P1) => "concerté" ;--# notpresent
    VP (Pret Sg P2) => "concertaste" ;--# notpresent
    VP (Pret Sg P3) => "concertó" ;--# notpresent
    VP (Pret Pl P1) => "concertamos" ;--# notpresent
    VP (Pret Pl P2) => "concertasteis" ;--# notpresent
    VP (Pret Pl P3) => "concertaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "concertaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "concertarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "concertará" ;--# notpresent
    VP (Fut Ind Pl P1) => "concertaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "concertaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "concertarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "concertare" ;--# notpresent
    VP (Fut Subj Sg P2) => "concertares" ;--# notpresent
    VP (Fut Subj Sg P3) => "concertare" ;--# notpresent
    VP (Fut Subj Pl P1) => "concertáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "concertareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "concertaren" ;--# notpresent
    VP (Cond Sg P1) => "concertaría" ;--# notpresent
    VP (Cond Sg P2) => "concertarías" ;--# notpresent
    VP (Cond Sg P3) => "concertaría" ;--# notpresent
    VP (Cond Pl P1) => "concertaríamos" ;--# notpresent
    VP (Cond Pl P2) => "concertaríais" ;--# notpresent
    VP (Cond Pl P3) => "concertarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "concierta" ;
    VP (Imp Sg P3) => "concierte" ;
    VP (Imp Pl P1) => "concertemos" ;
    VP (Imp Pl P2) => "concertad" ;
    VP (Imp Pl P3) => "concierten" ;
    VP (Pass Sg Masc) => "concertado" ;
    VP (Pass Sg Fem) => "concertada" ;
    VP (Pass Pl Masc) => "concertados" ;
    VP (Pass Pl Fem) => "concertadas"
    }
  } ;

lin concordar_V = verboV 
 {s = table {
    VI Infn => "concordar" ;
    VI Ger => "concordando" ;
    VI Part => "concordado" ;
    VP (Pres Ind Sg P1) => "concuerdo" ;
    VP (Pres Ind Sg P2) => "concuerdas" ;
    VP (Pres Ind Sg P3) => "concuerda" ;
    VP (Pres Ind Pl P1) => "concordamos" ;
    VP (Pres Ind Pl P2) => "concordáis" ;
    VP (Pres Ind Pl P3) => "concuerdan" ;
    VP (Pres Subj Sg P1) => "concuerde" ;
    VP (Pres Subj Sg P2) => "concuerdes" ;
    VP (Pres Subj Sg P3) => "concuerde" ;
    VP (Pres Subj Pl P1) => "concordemos" ;
    VP (Pres Subj Pl P2) => "concordéis" ;
    VP (Pres Subj Pl P3) => "concuerden" ;
    VP (Impf Ind Sg P1) => "concordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "concordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "concordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "concordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "concordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "concordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"concordara" ; "concordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"concordaras" ; "concordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"concordara" ; "concordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"concordáramos" ; "concordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"concordarais" ; "concordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"concordaran" ; "concordasen"} ;--# notpresent
    VP (Pret Sg P1) => "concordé" ;--# notpresent
    VP (Pret Sg P2) => "concordaste" ;--# notpresent
    VP (Pret Sg P3) => "concordó" ;--# notpresent
    VP (Pret Pl P1) => "concordamos" ;--# notpresent
    VP (Pret Pl P2) => "concordasteis" ;--# notpresent
    VP (Pret Pl P3) => "concordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "concordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "concordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "concordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "concordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "concordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "concordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "concordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "concordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "concordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "concordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "concordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "concordaren" ;--# notpresent
    VP (Cond Sg P1) => "concordaría" ;--# notpresent
    VP (Cond Sg P2) => "concordarías" ;--# notpresent
    VP (Cond Sg P3) => "concordaría" ;--# notpresent
    VP (Cond Pl P1) => "concordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "concordaríais" ;--# notpresent
    VP (Cond Pl P3) => "concordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "concuerda" ;
    VP (Imp Sg P3) => "concuerde" ;
    VP (Imp Pl P1) => "concordemos" ;
    VP (Imp Pl P2) => "concordad" ;
    VP (Imp Pl P3) => "concuerden" ;
    VP (Pass Sg Masc) => "concordado" ;
    VP (Pass Sg Fem) => "concordada" ;
    VP (Pass Pl Masc) => "concordados" ;
    VP (Pass Pl Fem) => "concordadas"
    }
  } ;

lin confesar_V = verboV 
 {s = table {
    VI Infn => "confesar" ;
    VI Ger => "confesando" ;
    VI Part => "confesado" ;
    VP (Pres Ind Sg P1) => "confieso" ;
    VP (Pres Ind Sg P2) => "confiesas" ;
    VP (Pres Ind Sg P3) => "confiesa" ;
    VP (Pres Ind Pl P1) => "confesamos" ;
    VP (Pres Ind Pl P2) => "confesáis" ;
    VP (Pres Ind Pl P3) => "confiesan" ;
    VP (Pres Subj Sg P1) => "confiese" ;
    VP (Pres Subj Sg P2) => "confieses" ;
    VP (Pres Subj Sg P3) => "confiese" ;
    VP (Pres Subj Pl P1) => "confesemos" ;
    VP (Pres Subj Pl P2) => "confeséis" ;
    VP (Pres Subj Pl P3) => "confiesen" ;
    VP (Impf Ind Sg P1) => "confesaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "confesabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "confesaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "confesábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "confesabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "confesaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"confesara" ; "confesase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"confesaras" ; "confesases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"confesara" ; "confesase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"confesáramos" ; "confesásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"confesarais" ; "confesaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"confesaran" ; "confesasen"} ;--# notpresent
    VP (Pret Sg P1) => "confesé" ;--# notpresent
    VP (Pret Sg P2) => "confesaste" ;--# notpresent
    VP (Pret Sg P3) => "confesó" ;--# notpresent
    VP (Pret Pl P1) => "confesamos" ;--# notpresent
    VP (Pret Pl P2) => "confesasteis" ;--# notpresent
    VP (Pret Pl P3) => "confesaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "confesaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "confesarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "confesará" ;--# notpresent
    VP (Fut Ind Pl P1) => "confesaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "confesaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "confesarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "confesare" ;--# notpresent
    VP (Fut Subj Sg P2) => "confesares" ;--# notpresent
    VP (Fut Subj Sg P3) => "confesare" ;--# notpresent
    VP (Fut Subj Pl P1) => "confesáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "confesareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "confesaren" ;--# notpresent
    VP (Cond Sg P1) => "confesaría" ;--# notpresent
    VP (Cond Sg P2) => "confesarías" ;--# notpresent
    VP (Cond Sg P3) => "confesaría" ;--# notpresent
    VP (Cond Pl P1) => "confesaríamos" ;--# notpresent
    VP (Cond Pl P2) => "confesaríais" ;--# notpresent
    VP (Cond Pl P3) => "confesarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "confiesa" ;
    VP (Imp Sg P3) => "confiese" ;
    VP (Imp Pl P1) => "confesemos" ;
    VP (Imp Pl P2) => "confesad" ;
    VP (Imp Pl P3) => "confiesen" ;
    VP (Pass Sg Masc) => "confesado" ;
    VP (Pass Sg Fem) => "confesada" ;
    VP (Pass Pl Masc) => "confesados" ;
    VP (Pass Pl Fem) => "confesadas"
    }
  } ;

lin consolar_V = verboV 
 {s = table {
    VI Infn => "consolar" ;
    VI Ger => "consolando" ;
    VI Part => "consolado" ;
    VP (Pres Ind Sg P1) => "consuelo" ;
    VP (Pres Ind Sg P2) => "consuelas" ;
    VP (Pres Ind Sg P3) => "consuela" ;
    VP (Pres Ind Pl P1) => "consolamos" ;
    VP (Pres Ind Pl P2) => "consoláis" ;
    VP (Pres Ind Pl P3) => "consuelan" ;
    VP (Pres Subj Sg P1) => "consuele" ;
    VP (Pres Subj Sg P2) => "consueles" ;
    VP (Pres Subj Sg P3) => "consuele" ;
    VP (Pres Subj Pl P1) => "consolemos" ;
    VP (Pres Subj Pl P2) => "consoléis" ;
    VP (Pres Subj Pl P3) => "consuelen" ;
    VP (Impf Ind Sg P1) => "consolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "consolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "consolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "consolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "consolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "consolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"consolara" ; "consolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"consolaras" ; "consolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"consolara" ; "consolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"consoláramos" ; "consolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"consolarais" ; "consolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"consolaran" ; "consolasen"} ;--# notpresent
    VP (Pret Sg P1) => "consolé" ;--# notpresent
    VP (Pret Sg P2) => "consolaste" ;--# notpresent
    VP (Pret Sg P3) => "consoló" ;--# notpresent
    VP (Pret Pl P1) => "consolamos" ;--# notpresent
    VP (Pret Pl P2) => "consolasteis" ;--# notpresent
    VP (Pret Pl P3) => "consolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "consolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "consolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "consolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "consolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "consolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "consolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "consolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "consolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "consolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "consoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "consolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "consolaren" ;--# notpresent
    VP (Cond Sg P1) => "consolaría" ;--# notpresent
    VP (Cond Sg P2) => "consolarías" ;--# notpresent
    VP (Cond Sg P3) => "consolaría" ;--# notpresent
    VP (Cond Pl P1) => "consolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "consolaríais" ;--# notpresent
    VP (Cond Pl P3) => "consolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "consuela" ;
    VP (Imp Sg P3) => "consuele" ;
    VP (Imp Pl P1) => "consolemos" ;
    VP (Imp Pl P2) => "consolad" ;
    VP (Imp Pl P3) => "consuelen" ;
    VP (Pass Sg Masc) => "consolado" ;
    VP (Pass Sg Fem) => "consolada" ;
    VP (Pass Pl Masc) => "consolados" ;
    VP (Pass Pl Fem) => "consoladas"
    }
  } ;

lin consonar_V = verboV 
 {s = table {
    VI Infn => "consonar" ;
    VI Ger => "consonando" ;
    VI Part => "consonado" ;
    VP (Pres Ind Sg P1) => "consueno" ;
    VP (Pres Ind Sg P2) => "consuenas" ;
    VP (Pres Ind Sg P3) => "consuena" ;
    VP (Pres Ind Pl P1) => "consonamos" ;
    VP (Pres Ind Pl P2) => "consonáis" ;
    VP (Pres Ind Pl P3) => "consuenan" ;
    VP (Pres Subj Sg P1) => "consuene" ;
    VP (Pres Subj Sg P2) => "consuenes" ;
    VP (Pres Subj Sg P3) => "consuene" ;
    VP (Pres Subj Pl P1) => "consonemos" ;
    VP (Pres Subj Pl P2) => "consonéis" ;
    VP (Pres Subj Pl P3) => "consuenen" ;
    VP (Impf Ind Sg P1) => "consonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "consonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "consonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "consonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "consonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "consonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"consonara" ; "consonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"consonaras" ; "consonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"consonara" ; "consonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"consonáramos" ; "consonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"consonarais" ; "consonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"consonaran" ; "consonasen"} ;--# notpresent
    VP (Pret Sg P1) => "consoné" ;--# notpresent
    VP (Pret Sg P2) => "consonaste" ;--# notpresent
    VP (Pret Sg P3) => "consonó" ;--# notpresent
    VP (Pret Pl P1) => "consonamos" ;--# notpresent
    VP (Pret Pl P2) => "consonasteis" ;--# notpresent
    VP (Pret Pl P3) => "consonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "consonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "consonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "consonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "consonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "consonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "consonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "consonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "consonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "consonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "consonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "consonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "consonaren" ;--# notpresent
    VP (Cond Sg P1) => "consonaría" ;--# notpresent
    VP (Cond Sg P2) => "consonarías" ;--# notpresent
    VP (Cond Sg P3) => "consonaría" ;--# notpresent
    VP (Cond Pl P1) => "consonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "consonaríais" ;--# notpresent
    VP (Cond Pl P3) => "consonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "consuena" ;
    VP (Imp Sg P3) => "consuene" ;
    VP (Imp Pl P1) => "consonemos" ;
    VP (Imp Pl P2) => "consonad" ;
    VP (Imp Pl P3) => "consuenen" ;
    VP (Pass Sg Masc) => "consonado" ;
    VP (Pass Sg Fem) => "consonada" ;
    VP (Pass Pl Masc) => "consonados" ;
    VP (Pass Pl Fem) => "consonadas"
    }
  } ;

lin contar_V = verboV 
 {s = table {
    VI Infn => "contar" ;
    VI Ger => "contando" ;
    VI Part => "contado" ;
    VP (Pres Ind Sg P1) => "cuento" ;
    VP (Pres Ind Sg P2) => "cuentas" ;
    VP (Pres Ind Sg P3) => "cuenta" ;
    VP (Pres Ind Pl P1) => "contamos" ;
    VP (Pres Ind Pl P2) => "contáis" ;
    VP (Pres Ind Pl P3) => "cuentan" ;
    VP (Pres Subj Sg P1) => "cuente" ;
    VP (Pres Subj Sg P2) => "cuentes" ;
    VP (Pres Subj Sg P3) => "cuente" ;
    VP (Pres Subj Pl P1) => "contemos" ;
    VP (Pres Subj Pl P2) => "contéis" ;
    VP (Pres Subj Pl P3) => "cuenten" ;
    VP (Impf Ind Sg P1) => "contaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "contabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "contaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "contábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contara" ; "contase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contaras" ; "contases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contara" ; "contase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contáramos" ; "contásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contarais" ; "contaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contaran" ; "contasen"} ;--# notpresent
    VP (Pret Sg P1) => "conté" ;--# notpresent
    VP (Pret Sg P2) => "contaste" ;--# notpresent
    VP (Pret Sg P3) => "contó" ;--# notpresent
    VP (Pret Pl P1) => "contamos" ;--# notpresent
    VP (Pret Pl P2) => "contasteis" ;--# notpresent
    VP (Pret Pl P3) => "contaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contará" ;--# notpresent
    VP (Fut Ind Pl P1) => "contaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contare" ;--# notpresent
    VP (Fut Subj Sg P2) => "contares" ;--# notpresent
    VP (Fut Subj Sg P3) => "contare" ;--# notpresent
    VP (Fut Subj Pl P1) => "contáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contaren" ;--# notpresent
    VP (Cond Sg P1) => "contaría" ;--# notpresent
    VP (Cond Sg P2) => "contarías" ;--# notpresent
    VP (Cond Sg P3) => "contaría" ;--# notpresent
    VP (Cond Pl P1) => "contaríamos" ;--# notpresent
    VP (Cond Pl P2) => "contaríais" ;--# notpresent
    VP (Cond Pl P3) => "contarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cuenta" ;
    VP (Imp Sg P3) => "cuente" ;
    VP (Imp Pl P1) => "contemos" ;
    VP (Imp Pl P2) => "contad" ;
    VP (Imp Pl P3) => "cuenten" ;
    VP (Pass Sg Masc) => "contado" ;
    VP (Pass Sg Fem) => "contada" ;
    VP (Pass Pl Masc) => "contados" ;
    VP (Pass Pl Fem) => "contadas"
    }
  } ;

lin contramanifestar_V = verboV 
 {s = table {
    VI Infn => "contramanifestar" ;
    VI Ger => "contramanifestando" ;
    VI Part => "contramanifestado" ;
    VP (Pres Ind Sg P1) => "contramanifiesto" ;
    VP (Pres Ind Sg P2) => "contramanifiestas" ;
    VP (Pres Ind Sg P3) => "contramanifiesta" ;
    VP (Pres Ind Pl P1) => "contramanifestamos" ;
    VP (Pres Ind Pl P2) => "contramanifestáis" ;
    VP (Pres Ind Pl P3) => "contramanifiestan" ;
    VP (Pres Subj Sg P1) => "contramanifieste" ;
    VP (Pres Subj Sg P2) => "contramanifiestes" ;
    VP (Pres Subj Sg P3) => "contramanifieste" ;
    VP (Pres Subj Pl P1) => "contramanifestemos" ;
    VP (Pres Subj Pl P2) => "contramanifestéis" ;
    VP (Pres Subj Pl P3) => "contramanifiesten" ;
    VP (Impf Ind Sg P1) => "contramanifestaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "contramanifestabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "contramanifestaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "contramanifestábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contramanifestabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contramanifestaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contramanifestara" ; "contramanifestase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contramanifestaras" ; "contramanifestases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contramanifestara" ; "contramanifestase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contramanifestáramos" ; "contramanifestásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contramanifestarais" ; "contramanifestaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contramanifestaran" ; "contramanifestasen"} ;--# notpresent
    VP (Pret Sg P1) => "contramanifesté" ;--# notpresent
    VP (Pret Sg P2) => "contramanifestaste" ;--# notpresent
    VP (Pret Sg P3) => "contramanifestó" ;--# notpresent
    VP (Pret Pl P1) => "contramanifestamos" ;--# notpresent
    VP (Pret Pl P2) => "contramanifestasteis" ;--# notpresent
    VP (Pret Pl P3) => "contramanifestaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contramanifestaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contramanifestarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contramanifestará" ;--# notpresent
    VP (Fut Ind Pl P1) => "contramanifestaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contramanifestaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contramanifestarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contramanifestare" ;--# notpresent
    VP (Fut Subj Sg P2) => "contramanifestares" ;--# notpresent
    VP (Fut Subj Sg P3) => "contramanifestare" ;--# notpresent
    VP (Fut Subj Pl P1) => "contramanifestáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contramanifestareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contramanifestaren" ;--# notpresent
    VP (Cond Sg P1) => "contramanifestaría" ;--# notpresent
    VP (Cond Sg P2) => "contramanifestarías" ;--# notpresent
    VP (Cond Sg P3) => "contramanifestaría" ;--# notpresent
    VP (Cond Pl P1) => "contramanifestaríamos" ;--# notpresent
    VP (Cond Pl P2) => "contramanifestaríais" ;--# notpresent
    VP (Cond Pl P3) => "contramanifestarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contramanifiesta" ;
    VP (Imp Sg P3) => "contramanifieste" ;
    VP (Imp Pl P1) => "contramanifestemos" ;
    VP (Imp Pl P2) => "contramanifestad" ;
    VP (Imp Pl P3) => "contramanifiesten" ;
    VP (Pass Sg Masc) => "contramanifestado" ;
    VP (Pass Sg Fem) => "contramanifestada" ;
    VP (Pass Pl Masc) => "contramanifestados" ;
    VP (Pass Pl Fem) => "contramanifestadas"
    }
  } ;

lin costar_V = verboV 
 {s = table {
    VI Infn => "costar" ;
    VI Ger => "costando" ;
    VI Part => "costado" ;
    VP (Pres Ind Sg P1) => "cuesto" ;
    VP (Pres Ind Sg P2) => "cuestas" ;
    VP (Pres Ind Sg P3) => "cuesta" ;
    VP (Pres Ind Pl P1) => "costamos" ;
    VP (Pres Ind Pl P2) => "costáis" ;
    VP (Pres Ind Pl P3) => "cuestan" ;
    VP (Pres Subj Sg P1) => "cueste" ;
    VP (Pres Subj Sg P2) => "cuestes" ;
    VP (Pres Subj Sg P3) => "cueste" ;
    VP (Pres Subj Pl P1) => "costemos" ;
    VP (Pres Subj Pl P2) => "costéis" ;
    VP (Pres Subj Pl P3) => "cuesten" ;
    VP (Impf Ind Sg P1) => "costaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "costabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "costaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "costábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "costabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "costaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"costara" ; "costase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"costaras" ; "costases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"costara" ; "costase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"costáramos" ; "costásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"costarais" ; "costaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"costaran" ; "costasen"} ;--# notpresent
    VP (Pret Sg P1) => "costé" ;--# notpresent
    VP (Pret Sg P2) => "costaste" ;--# notpresent
    VP (Pret Sg P3) => "costó" ;--# notpresent
    VP (Pret Pl P1) => "costamos" ;--# notpresent
    VP (Pret Pl P2) => "costasteis" ;--# notpresent
    VP (Pret Pl P3) => "costaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "costaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "costarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "costará" ;--# notpresent
    VP (Fut Ind Pl P1) => "costaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "costaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "costarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "costare" ;--# notpresent
    VP (Fut Subj Sg P2) => "costares" ;--# notpresent
    VP (Fut Subj Sg P3) => "costare" ;--# notpresent
    VP (Fut Subj Pl P1) => "costáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "costareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "costaren" ;--# notpresent
    VP (Cond Sg P1) => "costaría" ;--# notpresent
    VP (Cond Sg P2) => "costarías" ;--# notpresent
    VP (Cond Sg P3) => "costaría" ;--# notpresent
    VP (Cond Pl P1) => "costaríamos" ;--# notpresent
    VP (Cond Pl P2) => "costaríais" ;--# notpresent
    VP (Cond Pl P3) => "costarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cuesta" ;
    VP (Imp Sg P3) => "cueste" ;
    VP (Imp Pl P1) => "costemos" ;
    VP (Imp Pl P2) => "costad" ;
    VP (Imp Pl P3) => "cuesten" ;
    VP (Pass Sg Masc) => "costado" ;
    VP (Pass Sg Fem) => "costada" ;
    VP (Pass Pl Masc) => "costados" ;
    VP (Pass Pl Fem) => "costadas"
    }
  } ;

lin decentar_V = verboV 
 {s = table {
    VI Infn => "decentar" ;
    VI Ger => "decentando" ;
    VI Part => "decentado" ;
    VP (Pres Ind Sg P1) => "deciento" ;
    VP (Pres Ind Sg P2) => "decientas" ;
    VP (Pres Ind Sg P3) => "decienta" ;
    VP (Pres Ind Pl P1) => "decentamos" ;
    VP (Pres Ind Pl P2) => "decentáis" ;
    VP (Pres Ind Pl P3) => "decientan" ;
    VP (Pres Subj Sg P1) => "deciente" ;
    VP (Pres Subj Sg P2) => "decientes" ;
    VP (Pres Subj Sg P3) => "deciente" ;
    VP (Pres Subj Pl P1) => "decentemos" ;
    VP (Pres Subj Pl P2) => "decentéis" ;
    VP (Pres Subj Pl P3) => "decienten" ;
    VP (Impf Ind Sg P1) => "decentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "decentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "decentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "decentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "decentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "decentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"decentara" ; "decentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"decentaras" ; "decentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"decentara" ; "decentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"decentáramos" ; "decentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"decentarais" ; "decentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"decentaran" ; "decentasen"} ;--# notpresent
    VP (Pret Sg P1) => "decenté" ;--# notpresent
    VP (Pret Sg P2) => "decentaste" ;--# notpresent
    VP (Pret Sg P3) => "decentó" ;--# notpresent
    VP (Pret Pl P1) => "decentamos" ;--# notpresent
    VP (Pret Pl P2) => "decentasteis" ;--# notpresent
    VP (Pret Pl P3) => "decentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "decentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "decentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "decentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "decentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "decentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "decentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "decentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "decentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "decentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "decentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "decentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "decentaren" ;--# notpresent
    VP (Cond Sg P1) => "decentaría" ;--# notpresent
    VP (Cond Sg P2) => "decentarías" ;--# notpresent
    VP (Cond Sg P3) => "decentaría" ;--# notpresent
    VP (Cond Pl P1) => "decentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "decentaríais" ;--# notpresent
    VP (Cond Pl P3) => "decentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "decienta" ;
    VP (Imp Sg P3) => "deciente" ;
    VP (Imp Pl P1) => "decentemos" ;
    VP (Imp Pl P2) => "decentad" ;
    VP (Imp Pl P3) => "decienten" ;
    VP (Pass Sg Masc) => "decentado" ;
    VP (Pass Sg Fem) => "decentada" ;
    VP (Pass Pl Masc) => "decentados" ;
    VP (Pass Pl Fem) => "decentadas"
    }
  } ;

lin degollar_V = verboV 
 {s = table {
    VI Infn => "degollar" ;
    VI Ger => "degollando" ;
    VI Part => "degollado" ;
    VP (Pres Ind Sg P1) => "deguello" ;
    VP (Pres Ind Sg P2) => "deguellas" ;
    VP (Pres Ind Sg P3) => "deguella" ;
    VP (Pres Ind Pl P1) => "degollamos" ;
    VP (Pres Ind Pl P2) => "degolláis" ;
    VP (Pres Ind Pl P3) => "deguellan" ;
    VP (Pres Subj Sg P1) => "deguelle" ;
    VP (Pres Subj Sg P2) => "deguelles" ;
    VP (Pres Subj Sg P3) => "deguelle" ;
    VP (Pres Subj Pl P1) => "degollemos" ;
    VP (Pres Subj Pl P2) => "degolléis" ;
    VP (Pres Subj Pl P3) => "deguellen" ;
    VP (Impf Ind Sg P1) => "degollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "degollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "degollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "degollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "degollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "degollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"degollara" ; "degollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"degollaras" ; "degollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"degollara" ; "degollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"degolláramos" ; "degollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"degollarais" ; "degollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"degollaran" ; "degollasen"} ;--# notpresent
    VP (Pret Sg P1) => "degollé" ;--# notpresent
    VP (Pret Sg P2) => "degollaste" ;--# notpresent
    VP (Pret Sg P3) => "degolló" ;--# notpresent
    VP (Pret Pl P1) => "degollamos" ;--# notpresent
    VP (Pret Pl P2) => "degollasteis" ;--# notpresent
    VP (Pret Pl P3) => "degollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "degollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "degollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "degollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "degollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "degollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "degollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "degollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "degollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "degollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "degolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "degollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "degollaren" ;--# notpresent
    VP (Cond Sg P1) => "degollaría" ;--# notpresent
    VP (Cond Sg P2) => "degollarías" ;--# notpresent
    VP (Cond Sg P3) => "degollaría" ;--# notpresent
    VP (Cond Pl P1) => "degollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "degollaríais" ;--# notpresent
    VP (Cond Pl P3) => "degollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deguella" ;
    VP (Imp Sg P3) => "deguelle" ;
    VP (Imp Pl P1) => "degollemos" ;
    VP (Imp Pl P2) => "degollad" ;
    VP (Imp Pl P3) => "deguellen" ;
    VP (Pass Sg Masc) => "degollado" ;
    VP (Pass Sg Fem) => "degollada" ;
    VP (Pass Pl Masc) => "degollados" ;
    VP (Pass Pl Fem) => "degolladas"
    }
  } ;

lin demostrar_V = verboV 
 {s = table {
    VI Infn => "demostrar" ;
    VI Ger => "demostrando" ;
    VI Part => "demostrado" ;
    VP (Pres Ind Sg P1) => "demuestro" ;
    VP (Pres Ind Sg P2) => "demuestras" ;
    VP (Pres Ind Sg P3) => "demuestra" ;
    VP (Pres Ind Pl P1) => "demostramos" ;
    VP (Pres Ind Pl P2) => "demostráis" ;
    VP (Pres Ind Pl P3) => "demuestran" ;
    VP (Pres Subj Sg P1) => "demuestre" ;
    VP (Pres Subj Sg P2) => "demuestres" ;
    VP (Pres Subj Sg P3) => "demuestre" ;
    VP (Pres Subj Pl P1) => "demostremos" ;
    VP (Pres Subj Pl P2) => "demostréis" ;
    VP (Pres Subj Pl P3) => "demuestren" ;
    VP (Impf Ind Sg P1) => "demostraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "demostrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "demostraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "demostrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "demostrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "demostraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"demostrara" ; "demostrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"demostraras" ; "demostrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"demostrara" ; "demostrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"demostráramos" ; "demostrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"demostrarais" ; "demostraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"demostraran" ; "demostrasen"} ;--# notpresent
    VP (Pret Sg P1) => "demostré" ;--# notpresent
    VP (Pret Sg P2) => "demostraste" ;--# notpresent
    VP (Pret Sg P3) => "demostró" ;--# notpresent
    VP (Pret Pl P1) => "demostramos" ;--# notpresent
    VP (Pret Pl P2) => "demostrasteis" ;--# notpresent
    VP (Pret Pl P3) => "demostraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "demostraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "demostrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "demostrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "demostraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "demostraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "demostrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "demostrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "demostrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "demostrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "demostráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "demostrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "demostraren" ;--# notpresent
    VP (Cond Sg P1) => "demostraría" ;--# notpresent
    VP (Cond Sg P2) => "demostrarías" ;--# notpresent
    VP (Cond Sg P3) => "demostraría" ;--# notpresent
    VP (Cond Pl P1) => "demostraríamos" ;--# notpresent
    VP (Cond Pl P2) => "demostraríais" ;--# notpresent
    VP (Cond Pl P3) => "demostrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "demuestra" ;
    VP (Imp Sg P3) => "demuestre" ;
    VP (Imp Pl P1) => "demostremos" ;
    VP (Imp Pl P2) => "demostrad" ;
    VP (Imp Pl P3) => "demuestren" ;
    VP (Pass Sg Masc) => "demostrado" ;
    VP (Pass Sg Fem) => "demostrada" ;
    VP (Pass Pl Masc) => "demostrados" ;
    VP (Pass Pl Fem) => "demostradas"
    }
  } ;

lin denostar_V = verboV 
 {s = table {
    VI Infn => "denostar" ;
    VI Ger => "denostando" ;
    VI Part => "denostado" ;
    VP (Pres Ind Sg P1) => "denuesto" ;
    VP (Pres Ind Sg P2) => "denuestas" ;
    VP (Pres Ind Sg P3) => "denuesta" ;
    VP (Pres Ind Pl P1) => "denostamos" ;
    VP (Pres Ind Pl P2) => "denostáis" ;
    VP (Pres Ind Pl P3) => "denuestan" ;
    VP (Pres Subj Sg P1) => "denueste" ;
    VP (Pres Subj Sg P2) => "denuestes" ;
    VP (Pres Subj Sg P3) => "denueste" ;
    VP (Pres Subj Pl P1) => "denostemos" ;
    VP (Pres Subj Pl P2) => "denostéis" ;
    VP (Pres Subj Pl P3) => "denuesten" ;
    VP (Impf Ind Sg P1) => "denostaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "denostabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "denostaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "denostábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "denostabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "denostaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"denostara" ; "denostase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"denostaras" ; "denostases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"denostara" ; "denostase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"denostáramos" ; "denostásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"denostarais" ; "denostaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"denostaran" ; "denostasen"} ;--# notpresent
    VP (Pret Sg P1) => "denosté" ;--# notpresent
    VP (Pret Sg P2) => "denostaste" ;--# notpresent
    VP (Pret Sg P3) => "denostó" ;--# notpresent
    VP (Pret Pl P1) => "denostamos" ;--# notpresent
    VP (Pret Pl P2) => "denostasteis" ;--# notpresent
    VP (Pret Pl P3) => "denostaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "denostaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "denostarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "denostará" ;--# notpresent
    VP (Fut Ind Pl P1) => "denostaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "denostaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "denostarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "denostare" ;--# notpresent
    VP (Fut Subj Sg P2) => "denostares" ;--# notpresent
    VP (Fut Subj Sg P3) => "denostare" ;--# notpresent
    VP (Fut Subj Pl P1) => "denostáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "denostareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "denostaren" ;--# notpresent
    VP (Cond Sg P1) => "denostaría" ;--# notpresent
    VP (Cond Sg P2) => "denostarías" ;--# notpresent
    VP (Cond Sg P3) => "denostaría" ;--# notpresent
    VP (Cond Pl P1) => "denostaríamos" ;--# notpresent
    VP (Cond Pl P2) => "denostaríais" ;--# notpresent
    VP (Cond Pl P3) => "denostarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "denuesta" ;
    VP (Imp Sg P3) => "denueste" ;
    VP (Imp Pl P1) => "denostemos" ;
    VP (Imp Pl P2) => "denostad" ;
    VP (Imp Pl P3) => "denuesten" ;
    VP (Pass Sg Masc) => "denostado" ;
    VP (Pass Sg Fem) => "denostada" ;
    VP (Pass Pl Masc) => "denostados" ;
    VP (Pass Pl Fem) => "denostadas"
    }
  } ;

lin dentar_V = verboV 
 {s = table {
    VI Infn => "dentar" ;
    VI Ger => "dentando" ;
    VI Part => "dentado" ;
    VP (Pres Ind Sg P1) => "diento" ;
    VP (Pres Ind Sg P2) => "dientas" ;
    VP (Pres Ind Sg P3) => "dienta" ;
    VP (Pres Ind Pl P1) => "dentamos" ;
    VP (Pres Ind Pl P2) => "dentáis" ;
    VP (Pres Ind Pl P3) => "dientan" ;
    VP (Pres Subj Sg P1) => "diente" ;
    VP (Pres Subj Sg P2) => "dientes" ;
    VP (Pres Subj Sg P3) => "diente" ;
    VP (Pres Subj Pl P1) => "dentemos" ;
    VP (Pres Subj Pl P2) => "dentéis" ;
    VP (Pres Subj Pl P3) => "dienten" ;
    VP (Impf Ind Sg P1) => "dentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "dentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "dentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "dentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "dentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dentara" ; "dentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dentaras" ; "dentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dentara" ; "dentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"dentáramos" ; "dentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dentarais" ; "dentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dentaran" ; "dentasen"} ;--# notpresent
    VP (Pret Sg P1) => "denté" ;--# notpresent
    VP (Pret Sg P2) => "dentaste" ;--# notpresent
    VP (Pret Sg P3) => "dentó" ;--# notpresent
    VP (Pret Pl P1) => "dentamos" ;--# notpresent
    VP (Pret Pl P2) => "dentasteis" ;--# notpresent
    VP (Pret Pl P3) => "dentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "dentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "dentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "dentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "dentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "dentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "dentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dentaren" ;--# notpresent
    VP (Cond Sg P1) => "dentaría" ;--# notpresent
    VP (Cond Sg P2) => "dentarías" ;--# notpresent
    VP (Cond Sg P3) => "dentaría" ;--# notpresent
    VP (Cond Pl P1) => "dentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "dentaríais" ;--# notpresent
    VP (Cond Pl P3) => "dentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "dienta" ;
    VP (Imp Sg P3) => "diente" ;
    VP (Imp Pl P1) => "dentemos" ;
    VP (Imp Pl P2) => "dentad" ;
    VP (Imp Pl P3) => "dienten" ;
    VP (Pass Sg Masc) => "dentado" ;
    VP (Pass Sg Fem) => "dentada" ;
    VP (Pass Pl Masc) => "dentados" ;
    VP (Pass Pl Fem) => "dentadas"
    }
  } ;

lin desacertar_V = verboV 
 {s = table {
    VI Infn => "desacertar" ;
    VI Ger => "desacertando" ;
    VI Part => "desacertado" ;
    VP (Pres Ind Sg P1) => "desacierto" ;
    VP (Pres Ind Sg P2) => "desaciertas" ;
    VP (Pres Ind Sg P3) => "desacierta" ;
    VP (Pres Ind Pl P1) => "desacertamos" ;
    VP (Pres Ind Pl P2) => "desacertáis" ;
    VP (Pres Ind Pl P3) => "desaciertan" ;
    VP (Pres Subj Sg P1) => "desacierte" ;
    VP (Pres Subj Sg P2) => "desaciertes" ;
    VP (Pres Subj Sg P3) => "desacierte" ;
    VP (Pres Subj Pl P1) => "desacertemos" ;
    VP (Pres Subj Pl P2) => "desacertéis" ;
    VP (Pres Subj Pl P3) => "desacierten" ;
    VP (Impf Ind Sg P1) => "desacertaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desacertabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desacertaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desacertábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desacertabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desacertaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desacertara" ; "desacertase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desacertaras" ; "desacertases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desacertara" ; "desacertase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desacertáramos" ; "desacertásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desacertarais" ; "desacertaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desacertaran" ; "desacertasen"} ;--# notpresent
    VP (Pret Sg P1) => "desacerté" ;--# notpresent
    VP (Pret Sg P2) => "desacertaste" ;--# notpresent
    VP (Pret Sg P3) => "desacertó" ;--# notpresent
    VP (Pret Pl P1) => "desacertamos" ;--# notpresent
    VP (Pret Pl P2) => "desacertasteis" ;--# notpresent
    VP (Pret Pl P3) => "desacertaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desacertaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desacertarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desacertará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desacertaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desacertaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desacertarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desacertare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desacertares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desacertare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desacertáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desacertareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desacertaren" ;--# notpresent
    VP (Cond Sg P1) => "desacertaría" ;--# notpresent
    VP (Cond Sg P2) => "desacertarías" ;--# notpresent
    VP (Cond Sg P3) => "desacertaría" ;--# notpresent
    VP (Cond Pl P1) => "desacertaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desacertaríais" ;--# notpresent
    VP (Cond Pl P3) => "desacertarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desacierta" ;
    VP (Imp Sg P3) => "desacierte" ;
    VP (Imp Pl P1) => "desacertemos" ;
    VP (Imp Pl P2) => "desacertad" ;
    VP (Imp Pl P3) => "desacierten" ;
    VP (Pass Sg Masc) => "desacertado" ;
    VP (Pass Sg Fem) => "desacertada" ;
    VP (Pass Pl Masc) => "desacertados" ;
    VP (Pass Pl Fem) => "desacertadas"
    }
  } ;

lin desacollar_V = verboV 
 {s = table {
    VI Infn => "desacollar" ;
    VI Ger => "desacollando" ;
    VI Part => "desacollado" ;
    VP (Pres Ind Sg P1) => "desacuello" ;
    VP (Pres Ind Sg P2) => "desacuellas" ;
    VP (Pres Ind Sg P3) => "desacuella" ;
    VP (Pres Ind Pl P1) => "desacollamos" ;
    VP (Pres Ind Pl P2) => "desacolláis" ;
    VP (Pres Ind Pl P3) => "desacuellan" ;
    VP (Pres Subj Sg P1) => "desacuelle" ;
    VP (Pres Subj Sg P2) => "desacuelles" ;
    VP (Pres Subj Sg P3) => "desacuelle" ;
    VP (Pres Subj Pl P1) => "desacollemos" ;
    VP (Pres Subj Pl P2) => "desacolléis" ;
    VP (Pres Subj Pl P3) => "desacuellen" ;
    VP (Impf Ind Sg P1) => "desacollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desacollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desacollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desacollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desacollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desacollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desacollara" ; "desacollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desacollaras" ; "desacollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desacollara" ; "desacollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desacolláramos" ; "desacollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desacollarais" ; "desacollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desacollaran" ; "desacollasen"} ;--# notpresent
    VP (Pret Sg P1) => "desacollé" ;--# notpresent
    VP (Pret Sg P2) => "desacollaste" ;--# notpresent
    VP (Pret Sg P3) => "desacolló" ;--# notpresent
    VP (Pret Pl P1) => "desacollamos" ;--# notpresent
    VP (Pret Pl P2) => "desacollasteis" ;--# notpresent
    VP (Pret Pl P3) => "desacollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desacollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desacollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desacollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desacollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desacollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desacollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desacollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desacollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desacollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desacolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desacollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desacollaren" ;--# notpresent
    VP (Cond Sg P1) => "desacollaría" ;--# notpresent
    VP (Cond Sg P2) => "desacollarías" ;--# notpresent
    VP (Cond Sg P3) => "desacollaría" ;--# notpresent
    VP (Cond Pl P1) => "desacollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desacollaríais" ;--# notpresent
    VP (Cond Pl P3) => "desacollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desacuella" ;
    VP (Imp Sg P3) => "desacuelle" ;
    VP (Imp Pl P1) => "desacollemos" ;
    VP (Imp Pl P2) => "desacollad" ;
    VP (Imp Pl P3) => "desacuellen" ;
    VP (Pass Sg Masc) => "desacollado" ;
    VP (Pass Sg Fem) => "desacollada" ;
    VP (Pass Pl Masc) => "desacollados" ;
    VP (Pass Pl Fem) => "desacolladas"
    }
  } ;

lin desacordar_V = verboV 
 {s = table {
    VI Infn => "desacordar" ;
    VI Ger => "desacordando" ;
    VI Part => "desacordado" ;
    VP (Pres Ind Sg P1) => "desacuerdo" ;
    VP (Pres Ind Sg P2) => "desacuerdas" ;
    VP (Pres Ind Sg P3) => "desacuerda" ;
    VP (Pres Ind Pl P1) => "desacordamos" ;
    VP (Pres Ind Pl P2) => "desacordáis" ;
    VP (Pres Ind Pl P3) => "desacuerdan" ;
    VP (Pres Subj Sg P1) => "desacuerde" ;
    VP (Pres Subj Sg P2) => "desacuerdes" ;
    VP (Pres Subj Sg P3) => "desacuerde" ;
    VP (Pres Subj Pl P1) => "desacordemos" ;
    VP (Pres Subj Pl P2) => "desacordéis" ;
    VP (Pres Subj Pl P3) => "desacuerden" ;
    VP (Impf Ind Sg P1) => "desacordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desacordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desacordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desacordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desacordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desacordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desacordara" ; "desacordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desacordaras" ; "desacordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desacordara" ; "desacordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desacordáramos" ; "desacordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desacordarais" ; "desacordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desacordaran" ; "desacordasen"} ;--# notpresent
    VP (Pret Sg P1) => "desacordé" ;--# notpresent
    VP (Pret Sg P2) => "desacordaste" ;--# notpresent
    VP (Pret Sg P3) => "desacordó" ;--# notpresent
    VP (Pret Pl P1) => "desacordamos" ;--# notpresent
    VP (Pret Pl P2) => "desacordasteis" ;--# notpresent
    VP (Pret Pl P3) => "desacordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desacordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desacordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desacordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desacordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desacordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desacordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desacordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desacordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desacordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desacordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desacordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desacordaren" ;--# notpresent
    VP (Cond Sg P1) => "desacordaría" ;--# notpresent
    VP (Cond Sg P2) => "desacordarías" ;--# notpresent
    VP (Cond Sg P3) => "desacordaría" ;--# notpresent
    VP (Cond Pl P1) => "desacordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desacordaríais" ;--# notpresent
    VP (Cond Pl P3) => "desacordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desacuerda" ;
    VP (Imp Sg P3) => "desacuerde" ;
    VP (Imp Pl P1) => "desacordemos" ;
    VP (Imp Pl P2) => "desacordad" ;
    VP (Imp Pl P3) => "desacuerden" ;
    VP (Pass Sg Masc) => "desacordado" ;
    VP (Pass Sg Fem) => "desacordada" ;
    VP (Pass Pl Masc) => "desacordados" ;
    VP (Pass Pl Fem) => "desacordadas"
    }
  } ;

lin desaferrar_V = verboV 
 {s = table {
    VI Infn => "desaferrar" ;
    VI Ger => "desaferrando" ;
    VI Part => "desaferrado" ;
    VP (Pres Ind Sg P1) => "desafierro" ;
    VP (Pres Ind Sg P2) => "desafierras" ;
    VP (Pres Ind Sg P3) => "desafierra" ;
    VP (Pres Ind Pl P1) => "desaferramos" ;
    VP (Pres Ind Pl P2) => "desaferráis" ;
    VP (Pres Ind Pl P3) => "desafierran" ;
    VP (Pres Subj Sg P1) => "desafierre" ;
    VP (Pres Subj Sg P2) => "desafierres" ;
    VP (Pres Subj Sg P3) => "desafierre" ;
    VP (Pres Subj Pl P1) => "desaferremos" ;
    VP (Pres Subj Pl P2) => "desaferréis" ;
    VP (Pres Subj Pl P3) => "desafierren" ;
    VP (Impf Ind Sg P1) => "desaferraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desaferrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desaferraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desaferrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desaferrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desaferraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desaferrara" ; "desaferrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desaferraras" ; "desaferrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desaferrara" ; "desaferrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desaferráramos" ; "desaferrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desaferrarais" ; "desaferraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desaferraran" ; "desaferrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desaferré" ;--# notpresent
    VP (Pret Sg P2) => "desaferraste" ;--# notpresent
    VP (Pret Sg P3) => "desaferró" ;--# notpresent
    VP (Pret Pl P1) => "desaferramos" ;--# notpresent
    VP (Pret Pl P2) => "desaferrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desaferraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desaferraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desaferrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desaferrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desaferraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desaferraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desaferrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desaferrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desaferrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desaferrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desaferráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desaferrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desaferraren" ;--# notpresent
    VP (Cond Sg P1) => "desaferraría" ;--# notpresent
    VP (Cond Sg P2) => "desaferrarías" ;--# notpresent
    VP (Cond Sg P3) => "desaferraría" ;--# notpresent
    VP (Cond Pl P1) => "desaferraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desaferraríais" ;--# notpresent
    VP (Cond Pl P3) => "desaferrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desafierra" ;
    VP (Imp Sg P3) => "desafierre" ;
    VP (Imp Pl P1) => "desaferremos" ;
    VP (Imp Pl P2) => "desaferrad" ;
    VP (Imp Pl P3) => "desafierren" ;
    VP (Pass Sg Masc) => "desaferrado" ;
    VP (Pass Sg Fem) => "desaferrada" ;
    VP (Pass Pl Masc) => "desaferrados" ;
    VP (Pass Pl Fem) => "desaferradas"
    }
  } ;

lin desaforar_V = verboV 
 {s = table {
    VI Infn => "desaforar" ;
    VI Ger => "desaforando" ;
    VI Part => "desaforado" ;
    VP (Pres Ind Sg P1) => "desafuero" ;
    VP (Pres Ind Sg P2) => "desafueras" ;
    VP (Pres Ind Sg P3) => "desafuera" ;
    VP (Pres Ind Pl P1) => "desaforamos" ;
    VP (Pres Ind Pl P2) => "desaforáis" ;
    VP (Pres Ind Pl P3) => "desafueran" ;
    VP (Pres Subj Sg P1) => "desafuere" ;
    VP (Pres Subj Sg P2) => "desafueres" ;
    VP (Pres Subj Sg P3) => "desafuere" ;
    VP (Pres Subj Pl P1) => "desaforemos" ;
    VP (Pres Subj Pl P2) => "desaforéis" ;
    VP (Pres Subj Pl P3) => "desafueren" ;
    VP (Impf Ind Sg P1) => "desaforaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desaforabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desaforaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desaforábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desaforabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desaforaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desaforara" ; "desaforase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desaforaras" ; "desaforases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desaforara" ; "desaforase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desaforáramos" ; "desaforásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desaforarais" ; "desaforaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desaforaran" ; "desaforasen"} ;--# notpresent
    VP (Pret Sg P1) => "desaforé" ;--# notpresent
    VP (Pret Sg P2) => "desaforaste" ;--# notpresent
    VP (Pret Sg P3) => "desaforó" ;--# notpresent
    VP (Pret Pl P1) => "desaforamos" ;--# notpresent
    VP (Pret Pl P2) => "desaforasteis" ;--# notpresent
    VP (Pret Pl P3) => "desaforaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desaforaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desaforarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desaforará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desaforaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desaforaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desaforarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desaforare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desaforares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desaforare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desaforáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desaforareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desaforaren" ;--# notpresent
    VP (Cond Sg P1) => "desaforaría" ;--# notpresent
    VP (Cond Sg P2) => "desaforarías" ;--# notpresent
    VP (Cond Sg P3) => "desaforaría" ;--# notpresent
    VP (Cond Pl P1) => "desaforaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desaforaríais" ;--# notpresent
    VP (Cond Pl P3) => "desaforarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desafuera" ;
    VP (Imp Sg P3) => "desafuere" ;
    VP (Imp Pl P1) => "desaforemos" ;
    VP (Imp Pl P2) => "desaforad" ;
    VP (Imp Pl P3) => "desafueren" ;
    VP (Pass Sg Masc) => "desaforado" ;
    VP (Pass Sg Fem) => "desaforada" ;
    VP (Pass Pl Masc) => "desaforados" ;
    VP (Pass Pl Fem) => "desaforadas"
    }
  } ;

lin desalentar_V = verboV 
 {s = table {
    VI Infn => "desalentar" ;
    VI Ger => "desalentando" ;
    VI Part => "desalentado" ;
    VP (Pres Ind Sg P1) => "desaliento" ;
    VP (Pres Ind Sg P2) => "desalientas" ;
    VP (Pres Ind Sg P3) => "desalienta" ;
    VP (Pres Ind Pl P1) => "desalentamos" ;
    VP (Pres Ind Pl P2) => "desalentáis" ;
    VP (Pres Ind Pl P3) => "desalientan" ;
    VP (Pres Subj Sg P1) => "desaliente" ;
    VP (Pres Subj Sg P2) => "desalientes" ;
    VP (Pres Subj Sg P3) => "desaliente" ;
    VP (Pres Subj Pl P1) => "desalentemos" ;
    VP (Pres Subj Pl P2) => "desalentéis" ;
    VP (Pres Subj Pl P3) => "desalienten" ;
    VP (Impf Ind Sg P1) => "desalentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desalentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desalentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desalentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desalentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desalentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desalentara" ; "desalentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desalentaras" ; "desalentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desalentara" ; "desalentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desalentáramos" ; "desalentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desalentarais" ; "desalentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desalentaran" ; "desalentasen"} ;--# notpresent
    VP (Pret Sg P1) => "desalenté" ;--# notpresent
    VP (Pret Sg P2) => "desalentaste" ;--# notpresent
    VP (Pret Sg P3) => "desalentó" ;--# notpresent
    VP (Pret Pl P1) => "desalentamos" ;--# notpresent
    VP (Pret Pl P2) => "desalentasteis" ;--# notpresent
    VP (Pret Pl P3) => "desalentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desalentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desalentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desalentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desalentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desalentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desalentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desalentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desalentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desalentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desalentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desalentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desalentaren" ;--# notpresent
    VP (Cond Sg P1) => "desalentaría" ;--# notpresent
    VP (Cond Sg P2) => "desalentarías" ;--# notpresent
    VP (Cond Sg P3) => "desalentaría" ;--# notpresent
    VP (Cond Pl P1) => "desalentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desalentaríais" ;--# notpresent
    VP (Cond Pl P3) => "desalentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desalienta" ;
    VP (Imp Sg P3) => "desaliente" ;
    VP (Imp Pl P1) => "desalentemos" ;
    VP (Imp Pl P2) => "desalentad" ;
    VP (Imp Pl P3) => "desalienten" ;
    VP (Pass Sg Masc) => "desalentado" ;
    VP (Pass Sg Fem) => "desalentada" ;
    VP (Pass Pl Masc) => "desalentados" ;
    VP (Pass Pl Fem) => "desalentadas"
    }
  } ;

lin desamoblar_V = verboV 
 {s = table {
    VI Infn => "desamoblar" ;
    VI Ger => "desamoblando" ;
    VI Part => "desamoblado" ;
    VP (Pres Ind Sg P1) => "desamueblo" ;
    VP (Pres Ind Sg P2) => "desamueblas" ;
    VP (Pres Ind Sg P3) => "desamuebla" ;
    VP (Pres Ind Pl P1) => "desamoblamos" ;
    VP (Pres Ind Pl P2) => "desamobláis" ;
    VP (Pres Ind Pl P3) => "desamueblan" ;
    VP (Pres Subj Sg P1) => "desamueble" ;
    VP (Pres Subj Sg P2) => "desamuebles" ;
    VP (Pres Subj Sg P3) => "desamueble" ;
    VP (Pres Subj Pl P1) => "desamoblemos" ;
    VP (Pres Subj Pl P2) => "desamobléis" ;
    VP (Pres Subj Pl P3) => "desamueblen" ;
    VP (Impf Ind Sg P1) => "desamoblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desamoblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desamoblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desamoblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desamoblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desamoblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desamoblara" ; "desamoblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desamoblaras" ; "desamoblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desamoblara" ; "desamoblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desamobláramos" ; "desamoblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desamoblarais" ; "desamoblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desamoblaran" ; "desamoblasen"} ;--# notpresent
    VP (Pret Sg P1) => "desamoblé" ;--# notpresent
    VP (Pret Sg P2) => "desamoblaste" ;--# notpresent
    VP (Pret Sg P3) => "desamobló" ;--# notpresent
    VP (Pret Pl P1) => "desamoblamos" ;--# notpresent
    VP (Pret Pl P2) => "desamoblasteis" ;--# notpresent
    VP (Pret Pl P3) => "desamoblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desamoblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desamoblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desamoblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desamoblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desamoblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desamoblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desamoblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desamoblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desamoblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desamobláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desamoblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desamoblaren" ;--# notpresent
    VP (Cond Sg P1) => "desamoblaría" ;--# notpresent
    VP (Cond Sg P2) => "desamoblarías" ;--# notpresent
    VP (Cond Sg P3) => "desamoblaría" ;--# notpresent
    VP (Cond Pl P1) => "desamoblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desamoblaríais" ;--# notpresent
    VP (Cond Pl P3) => "desamoblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desamuebla" ;
    VP (Imp Sg P3) => "desamueble" ;
    VP (Imp Pl P1) => "desamoblemos" ;
    VP (Imp Pl P2) => "desamoblad" ;
    VP (Imp Pl P3) => "desamueblen" ;
    VP (Pass Sg Masc) => "desamoblado" ;
    VP (Pass Sg Fem) => "desamoblada" ;
    VP (Pass Pl Masc) => "desamoblados" ;
    VP (Pass Pl Fem) => "desamobladas"
    }
  } ;

lin desapretar_V = verboV 
 {s = table {
    VI Infn => "desapretar" ;
    VI Ger => "desapretando" ;
    VI Part => "desapretado" ;
    VP (Pres Ind Sg P1) => "desaprieto" ;
    VP (Pres Ind Sg P2) => "desaprietas" ;
    VP (Pres Ind Sg P3) => "desaprieta" ;
    VP (Pres Ind Pl P1) => "desapretamos" ;
    VP (Pres Ind Pl P2) => "desapretáis" ;
    VP (Pres Ind Pl P3) => "desaprietan" ;
    VP (Pres Subj Sg P1) => "desapriete" ;
    VP (Pres Subj Sg P2) => "desaprietes" ;
    VP (Pres Subj Sg P3) => "desapriete" ;
    VP (Pres Subj Pl P1) => "desapretemos" ;
    VP (Pres Subj Pl P2) => "desapretéis" ;
    VP (Pres Subj Pl P3) => "desaprieten" ;
    VP (Impf Ind Sg P1) => "desapretaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desapretabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desapretaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desapretábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desapretabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desapretaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desapretara" ; "desapretase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desapretaras" ; "desapretases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desapretara" ; "desapretase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desapretáramos" ; "desapretásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desapretarais" ; "desapretaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desapretaran" ; "desapretasen"} ;--# notpresent
    VP (Pret Sg P1) => "desapreté" ;--# notpresent
    VP (Pret Sg P2) => "desapretaste" ;--# notpresent
    VP (Pret Sg P3) => "desapretó" ;--# notpresent
    VP (Pret Pl P1) => "desapretamos" ;--# notpresent
    VP (Pret Pl P2) => "desapretasteis" ;--# notpresent
    VP (Pret Pl P3) => "desapretaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desapretaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desapretarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desapretará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desapretaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desapretaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desapretarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desapretare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desapretares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desapretare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desapretáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desapretareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desapretaren" ;--# notpresent
    VP (Cond Sg P1) => "desapretaría" ;--# notpresent
    VP (Cond Sg P2) => "desapretarías" ;--# notpresent
    VP (Cond Sg P3) => "desapretaría" ;--# notpresent
    VP (Cond Pl P1) => "desapretaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desapretaríais" ;--# notpresent
    VP (Cond Pl P3) => "desapretarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desaprieta" ;
    VP (Imp Sg P3) => "desapriete" ;
    VP (Imp Pl P1) => "desapretemos" ;
    VP (Imp Pl P2) => "desapretad" ;
    VP (Imp Pl P3) => "desaprieten" ;
    VP (Pass Sg Masc) => "desapretado" ;
    VP (Pass Sg Fem) => "desapretada" ;
    VP (Pass Pl Masc) => "desapretados" ;
    VP (Pass Pl Fem) => "desapretadas"
    }
  } ;

lin desaprobar_V = verboV 
 {s = table {
    VI Infn => "desaprobar" ;
    VI Ger => "desaprobando" ;
    VI Part => "desaprobado" ;
    VP (Pres Ind Sg P1) => "desapruebo" ;
    VP (Pres Ind Sg P2) => "desapruebas" ;
    VP (Pres Ind Sg P3) => "desaprueba" ;
    VP (Pres Ind Pl P1) => "desaprobamos" ;
    VP (Pres Ind Pl P2) => "desaprobáis" ;
    VP (Pres Ind Pl P3) => "desaprueban" ;
    VP (Pres Subj Sg P1) => "desapruebe" ;
    VP (Pres Subj Sg P2) => "desapruebes" ;
    VP (Pres Subj Sg P3) => "desapruebe" ;
    VP (Pres Subj Pl P1) => "desaprobemos" ;
    VP (Pres Subj Pl P2) => "desaprobéis" ;
    VP (Pres Subj Pl P3) => "desaprueben" ;
    VP (Impf Ind Sg P1) => "desaprobaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desaprobabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desaprobaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desaprobábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desaprobabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desaprobaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desaprobara" ; "desaprobase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desaprobaras" ; "desaprobases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desaprobara" ; "desaprobase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desaprobáramos" ; "desaprobásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desaprobarais" ; "desaprobaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desaprobaran" ; "desaprobasen"} ;--# notpresent
    VP (Pret Sg P1) => "desaprobé" ;--# notpresent
    VP (Pret Sg P2) => "desaprobaste" ;--# notpresent
    VP (Pret Sg P3) => "desaprobó" ;--# notpresent
    VP (Pret Pl P1) => "desaprobamos" ;--# notpresent
    VP (Pret Pl P2) => "desaprobasteis" ;--# notpresent
    VP (Pret Pl P3) => "desaprobaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desaprobaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desaprobarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desaprobará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desaprobaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desaprobaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desaprobarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desaprobare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desaprobares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desaprobare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desaprobáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desaprobareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desaprobaren" ;--# notpresent
    VP (Cond Sg P1) => "desaprobaría" ;--# notpresent
    VP (Cond Sg P2) => "desaprobarías" ;--# notpresent
    VP (Cond Sg P3) => "desaprobaría" ;--# notpresent
    VP (Cond Pl P1) => "desaprobaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desaprobaríais" ;--# notpresent
    VP (Cond Pl P3) => "desaprobarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desaprueba" ;
    VP (Imp Sg P3) => "desapruebe" ;
    VP (Imp Pl P1) => "desaprobemos" ;
    VP (Imp Pl P2) => "desaprobad" ;
    VP (Imp Pl P3) => "desaprueben" ;
    VP (Pass Sg Masc) => "desaprobado" ;
    VP (Pass Sg Fem) => "desaprobada" ;
    VP (Pass Pl Masc) => "desaprobados" ;
    VP (Pass Pl Fem) => "desaprobadas"
    }
  } ;

lin desarrendar_V = verboV 
 {s = table {
    VI Infn => "desarrendar" ;
    VI Ger => "desarrendando" ;
    VI Part => "desarrendado" ;
    VP (Pres Ind Sg P1) => "desarriendo" ;
    VP (Pres Ind Sg P2) => "desarriendas" ;
    VP (Pres Ind Sg P3) => "desarrienda" ;
    VP (Pres Ind Pl P1) => "desarrendamos" ;
    VP (Pres Ind Pl P2) => "desarrendáis" ;
    VP (Pres Ind Pl P3) => "desarriendan" ;
    VP (Pres Subj Sg P1) => "desarriende" ;
    VP (Pres Subj Sg P2) => "desarriendes" ;
    VP (Pres Subj Sg P3) => "desarriende" ;
    VP (Pres Subj Pl P1) => "desarrendemos" ;
    VP (Pres Subj Pl P2) => "desarrendéis" ;
    VP (Pres Subj Pl P3) => "desarrienden" ;
    VP (Impf Ind Sg P1) => "desarrendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desarrendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desarrendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desarrendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desarrendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desarrendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desarrendara" ; "desarrendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desarrendaras" ; "desarrendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desarrendara" ; "desarrendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desarrendáramos" ; "desarrendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desarrendarais" ; "desarrendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desarrendaran" ; "desarrendasen"} ;--# notpresent
    VP (Pret Sg P1) => "desarrendé" ;--# notpresent
    VP (Pret Sg P2) => "desarrendaste" ;--# notpresent
    VP (Pret Sg P3) => "desarrendó" ;--# notpresent
    VP (Pret Pl P1) => "desarrendamos" ;--# notpresent
    VP (Pret Pl P2) => "desarrendasteis" ;--# notpresent
    VP (Pret Pl P3) => "desarrendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desarrendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desarrendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desarrendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desarrendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desarrendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desarrendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desarrendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desarrendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desarrendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desarrendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desarrendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desarrendaren" ;--# notpresent
    VP (Cond Sg P1) => "desarrendaría" ;--# notpresent
    VP (Cond Sg P2) => "desarrendarías" ;--# notpresent
    VP (Cond Sg P3) => "desarrendaría" ;--# notpresent
    VP (Cond Pl P1) => "desarrendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desarrendaríais" ;--# notpresent
    VP (Cond Pl P3) => "desarrendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desarrienda" ;
    VP (Imp Sg P3) => "desarriende" ;
    VP (Imp Pl P1) => "desarrendemos" ;
    VP (Imp Pl P2) => "desarrendad" ;
    VP (Imp Pl P3) => "desarrienden" ;
    VP (Pass Sg Masc) => "desarrendado" ;
    VP (Pass Sg Fem) => "desarrendada" ;
    VP (Pass Pl Masc) => "desarrendados" ;
    VP (Pass Pl Fem) => "desarrendadas"
    }
  } ;

lin desasentar_V = verboV 
 {s = table {
    VI Infn => "desasentar" ;
    VI Ger => "desasentando" ;
    VI Part => "desasentado" ;
    VP (Pres Ind Sg P1) => "desasiento" ;
    VP (Pres Ind Sg P2) => "desasientas" ;
    VP (Pres Ind Sg P3) => "desasienta" ;
    VP (Pres Ind Pl P1) => "desasentamos" ;
    VP (Pres Ind Pl P2) => "desasentáis" ;
    VP (Pres Ind Pl P3) => "desasientan" ;
    VP (Pres Subj Sg P1) => "desasiente" ;
    VP (Pres Subj Sg P2) => "desasientes" ;
    VP (Pres Subj Sg P3) => "desasiente" ;
    VP (Pres Subj Pl P1) => "desasentemos" ;
    VP (Pres Subj Pl P2) => "desasentéis" ;
    VP (Pres Subj Pl P3) => "desasienten" ;
    VP (Impf Ind Sg P1) => "desasentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desasentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desasentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desasentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desasentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desasentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desasentara" ; "desasentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desasentaras" ; "desasentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desasentara" ; "desasentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desasentáramos" ; "desasentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desasentarais" ; "desasentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desasentaran" ; "desasentasen"} ;--# notpresent
    VP (Pret Sg P1) => "desasenté" ;--# notpresent
    VP (Pret Sg P2) => "desasentaste" ;--# notpresent
    VP (Pret Sg P3) => "desasentó" ;--# notpresent
    VP (Pret Pl P1) => "desasentamos" ;--# notpresent
    VP (Pret Pl P2) => "desasentasteis" ;--# notpresent
    VP (Pret Pl P3) => "desasentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desasentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desasentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desasentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desasentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desasentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desasentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desasentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desasentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desasentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desasentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desasentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desasentaren" ;--# notpresent
    VP (Cond Sg P1) => "desasentaría" ;--# notpresent
    VP (Cond Sg P2) => "desasentarías" ;--# notpresent
    VP (Cond Sg P3) => "desasentaría" ;--# notpresent
    VP (Cond Pl P1) => "desasentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desasentaríais" ;--# notpresent
    VP (Cond Pl P3) => "desasentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desasienta" ;
    VP (Imp Sg P3) => "desasiente" ;
    VP (Imp Pl P1) => "desasentemos" ;
    VP (Imp Pl P2) => "desasentad" ;
    VP (Imp Pl P3) => "desasienten" ;
    VP (Pass Sg Masc) => "desasentado" ;
    VP (Pass Sg Fem) => "desasentada" ;
    VP (Pass Pl Masc) => "desasentados" ;
    VP (Pass Pl Fem) => "desasentadas"
    }
  } ;

lin desatentar_V = verboV 
 {s = table {
    VI Infn => "desatentar" ;
    VI Ger => "desatentando" ;
    VI Part => "desatentado" ;
    VP (Pres Ind Sg P1) => "desatiento" ;
    VP (Pres Ind Sg P2) => "desatientas" ;
    VP (Pres Ind Sg P3) => "desatienta" ;
    VP (Pres Ind Pl P1) => "desatentamos" ;
    VP (Pres Ind Pl P2) => "desatentáis" ;
    VP (Pres Ind Pl P3) => "desatientan" ;
    VP (Pres Subj Sg P1) => "desatiente" ;
    VP (Pres Subj Sg P2) => "desatientes" ;
    VP (Pres Subj Sg P3) => "desatiente" ;
    VP (Pres Subj Pl P1) => "desatentemos" ;
    VP (Pres Subj Pl P2) => "desatentéis" ;
    VP (Pres Subj Pl P3) => "desatienten" ;
    VP (Impf Ind Sg P1) => "desatentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desatentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desatentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desatentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desatentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desatentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desatentara" ; "desatentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desatentaras" ; "desatentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desatentara" ; "desatentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desatentáramos" ; "desatentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desatentarais" ; "desatentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desatentaran" ; "desatentasen"} ;--# notpresent
    VP (Pret Sg P1) => "desatenté" ;--# notpresent
    VP (Pret Sg P2) => "desatentaste" ;--# notpresent
    VP (Pret Sg P3) => "desatentó" ;--# notpresent
    VP (Pret Pl P1) => "desatentamos" ;--# notpresent
    VP (Pret Pl P2) => "desatentasteis" ;--# notpresent
    VP (Pret Pl P3) => "desatentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desatentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desatentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desatentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desatentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desatentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desatentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desatentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desatentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desatentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desatentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desatentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desatentaren" ;--# notpresent
    VP (Cond Sg P1) => "desatentaría" ;--# notpresent
    VP (Cond Sg P2) => "desatentarías" ;--# notpresent
    VP (Cond Sg P3) => "desatentaría" ;--# notpresent
    VP (Cond Pl P1) => "desatentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desatentaríais" ;--# notpresent
    VP (Cond Pl P3) => "desatentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desatienta" ;
    VP (Imp Sg P3) => "desatiente" ;
    VP (Imp Pl P1) => "desatentemos" ;
    VP (Imp Pl P2) => "desatentad" ;
    VP (Imp Pl P3) => "desatienten" ;
    VP (Pass Sg Masc) => "desatentado" ;
    VP (Pass Sg Fem) => "desatentada" ;
    VP (Pass Pl Masc) => "desatentados" ;
    VP (Pass Pl Fem) => "desatentadas"
    }
  } ;

lin desaterrar_V = verboV 
 {s = table {
    VI Infn => "desaterrar" ;
    VI Ger => "desaterrando" ;
    VI Part => "desaterrado" ;
    VP (Pres Ind Sg P1) => "desatierro" ;
    VP (Pres Ind Sg P2) => "desatierras" ;
    VP (Pres Ind Sg P3) => "desatierra" ;
    VP (Pres Ind Pl P1) => "desaterramos" ;
    VP (Pres Ind Pl P2) => "desaterráis" ;
    VP (Pres Ind Pl P3) => "desatierran" ;
    VP (Pres Subj Sg P1) => "desatierre" ;
    VP (Pres Subj Sg P2) => "desatierres" ;
    VP (Pres Subj Sg P3) => "desatierre" ;
    VP (Pres Subj Pl P1) => "desaterremos" ;
    VP (Pres Subj Pl P2) => "desaterréis" ;
    VP (Pres Subj Pl P3) => "desatierren" ;
    VP (Impf Ind Sg P1) => "desaterraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desaterrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desaterraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desaterrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desaterrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desaterraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desaterrara" ; "desaterrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desaterraras" ; "desaterrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desaterrara" ; "desaterrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desaterráramos" ; "desaterrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desaterrarais" ; "desaterraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desaterraran" ; "desaterrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desaterré" ;--# notpresent
    VP (Pret Sg P2) => "desaterraste" ;--# notpresent
    VP (Pret Sg P3) => "desaterró" ;--# notpresent
    VP (Pret Pl P1) => "desaterramos" ;--# notpresent
    VP (Pret Pl P2) => "desaterrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desaterraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desaterraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desaterrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desaterrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desaterraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desaterraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desaterrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desaterrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desaterrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desaterrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desaterráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desaterrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desaterraren" ;--# notpresent
    VP (Cond Sg P1) => "desaterraría" ;--# notpresent
    VP (Cond Sg P2) => "desaterrarías" ;--# notpresent
    VP (Cond Sg P3) => "desaterraría" ;--# notpresent
    VP (Cond Pl P1) => "desaterraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desaterraríais" ;--# notpresent
    VP (Cond Pl P3) => "desaterrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desatierra" ;
    VP (Imp Sg P3) => "desatierre" ;
    VP (Imp Pl P1) => "desaterremos" ;
    VP (Imp Pl P2) => "desaterrad" ;
    VP (Imp Pl P3) => "desatierren" ;
    VP (Pass Sg Masc) => "desaterrado" ;
    VP (Pass Sg Fem) => "desaterrada" ;
    VP (Pass Pl Masc) => "desaterrados" ;
    VP (Pass Pl Fem) => "desaterradas"
    }
  } ;

lin descerrar_V = verboV 
 {s = table {
    VI Infn => "descerrar" ;
    VI Ger => "descerrando" ;
    VI Part => "descerrado" ;
    VP (Pres Ind Sg P1) => "descierro" ;
    VP (Pres Ind Sg P2) => "descierras" ;
    VP (Pres Ind Sg P3) => "descierra" ;
    VP (Pres Ind Pl P1) => "descerramos" ;
    VP (Pres Ind Pl P2) => "descerráis" ;
    VP (Pres Ind Pl P3) => "descierran" ;
    VP (Pres Subj Sg P1) => "descierre" ;
    VP (Pres Subj Sg P2) => "descierres" ;
    VP (Pres Subj Sg P3) => "descierre" ;
    VP (Pres Subj Pl P1) => "descerremos" ;
    VP (Pres Subj Pl P2) => "descerréis" ;
    VP (Pres Subj Pl P3) => "descierren" ;
    VP (Impf Ind Sg P1) => "descerraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descerrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descerraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descerrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descerrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descerraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descerrara" ; "descerrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descerraras" ; "descerrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descerrara" ; "descerrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descerráramos" ; "descerrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descerrarais" ; "descerraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descerraran" ; "descerrasen"} ;--# notpresent
    VP (Pret Sg P1) => "descerré" ;--# notpresent
    VP (Pret Sg P2) => "descerraste" ;--# notpresent
    VP (Pret Sg P3) => "descerró" ;--# notpresent
    VP (Pret Pl P1) => "descerramos" ;--# notpresent
    VP (Pret Pl P2) => "descerrasteis" ;--# notpresent
    VP (Pret Pl P3) => "descerraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descerraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descerrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descerrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descerraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descerraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descerrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descerrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descerrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descerrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descerráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descerrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descerraren" ;--# notpresent
    VP (Cond Sg P1) => "descerraría" ;--# notpresent
    VP (Cond Sg P2) => "descerrarías" ;--# notpresent
    VP (Cond Sg P3) => "descerraría" ;--# notpresent
    VP (Cond Pl P1) => "descerraríamos" ;--# notpresent
    VP (Cond Pl P2) => "descerraríais" ;--# notpresent
    VP (Cond Pl P3) => "descerrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descierra" ;
    VP (Imp Sg P3) => "descierre" ;
    VP (Imp Pl P1) => "descerremos" ;
    VP (Imp Pl P2) => "descerrad" ;
    VP (Imp Pl P3) => "descierren" ;
    VP (Pass Sg Masc) => "descerrado" ;
    VP (Pass Sg Fem) => "descerrada" ;
    VP (Pass Pl Masc) => "descerrados" ;
    VP (Pass Pl Fem) => "descerradas"
    }
  } ;

lin descimentar_V = verboV 
 {s = table {
    VI Infn => "descimentar" ;
    VI Ger => "descimentando" ;
    VI Part => "descimentado" ;
    VP (Pres Ind Sg P1) => "descimiento" ;
    VP (Pres Ind Sg P2) => "descimientas" ;
    VP (Pres Ind Sg P3) => "descimienta" ;
    VP (Pres Ind Pl P1) => "descimentamos" ;
    VP (Pres Ind Pl P2) => "descimentáis" ;
    VP (Pres Ind Pl P3) => "descimientan" ;
    VP (Pres Subj Sg P1) => "descimiente" ;
    VP (Pres Subj Sg P2) => "descimientes" ;
    VP (Pres Subj Sg P3) => "descimiente" ;
    VP (Pres Subj Pl P1) => "descimentemos" ;
    VP (Pres Subj Pl P2) => "descimentéis" ;
    VP (Pres Subj Pl P3) => "descimienten" ;
    VP (Impf Ind Sg P1) => "descimentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descimentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descimentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descimentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descimentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descimentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descimentara" ; "descimentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descimentaras" ; "descimentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descimentara" ; "descimentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descimentáramos" ; "descimentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descimentarais" ; "descimentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descimentaran" ; "descimentasen"} ;--# notpresent
    VP (Pret Sg P1) => "descimenté" ;--# notpresent
    VP (Pret Sg P2) => "descimentaste" ;--# notpresent
    VP (Pret Sg P3) => "descimentó" ;--# notpresent
    VP (Pret Pl P1) => "descimentamos" ;--# notpresent
    VP (Pret Pl P2) => "descimentasteis" ;--# notpresent
    VP (Pret Pl P3) => "descimentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descimentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descimentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descimentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descimentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descimentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descimentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descimentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descimentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descimentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descimentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descimentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descimentaren" ;--# notpresent
    VP (Cond Sg P1) => "descimentaría" ;--# notpresent
    VP (Cond Sg P2) => "descimentarías" ;--# notpresent
    VP (Cond Sg P3) => "descimentaría" ;--# notpresent
    VP (Cond Pl P1) => "descimentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "descimentaríais" ;--# notpresent
    VP (Cond Pl P3) => "descimentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descimienta" ;
    VP (Imp Sg P3) => "descimiente" ;
    VP (Imp Pl P1) => "descimentemos" ;
    VP (Imp Pl P2) => "descimentad" ;
    VP (Imp Pl P3) => "descimienten" ;
    VP (Pass Sg Masc) => "descimentado" ;
    VP (Pass Sg Fem) => "descimentada" ;
    VP (Pass Pl Masc) => "descimentados" ;
    VP (Pass Pl Fem) => "descimentadas"
    }
  } ;

lin descollar_V = verboV 
 {s = table {
    VI Infn => "descollar" ;
    VI Ger => "descollando" ;
    VI Part => "descollado" ;
    VP (Pres Ind Sg P1) => "descuello" ;
    VP (Pres Ind Sg P2) => "descuellas" ;
    VP (Pres Ind Sg P3) => "descuella" ;
    VP (Pres Ind Pl P1) => "descollamos" ;
    VP (Pres Ind Pl P2) => "descolláis" ;
    VP (Pres Ind Pl P3) => "descuellan" ;
    VP (Pres Subj Sg P1) => "descuelle" ;
    VP (Pres Subj Sg P2) => "descuelles" ;
    VP (Pres Subj Sg P3) => "descuelle" ;
    VP (Pres Subj Pl P1) => "descollemos" ;
    VP (Pres Subj Pl P2) => "descolléis" ;
    VP (Pres Subj Pl P3) => "descuellen" ;
    VP (Impf Ind Sg P1) => "descollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descollara" ; "descollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descollaras" ; "descollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descollara" ; "descollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descolláramos" ; "descollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descollarais" ; "descollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descollaran" ; "descollasen"} ;--# notpresent
    VP (Pret Sg P1) => "descollé" ;--# notpresent
    VP (Pret Sg P2) => "descollaste" ;--# notpresent
    VP (Pret Sg P3) => "descolló" ;--# notpresent
    VP (Pret Pl P1) => "descollamos" ;--# notpresent
    VP (Pret Pl P2) => "descollasteis" ;--# notpresent
    VP (Pret Pl P3) => "descollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descollaren" ;--# notpresent
    VP (Cond Sg P1) => "descollaría" ;--# notpresent
    VP (Cond Sg P2) => "descollarías" ;--# notpresent
    VP (Cond Sg P3) => "descollaría" ;--# notpresent
    VP (Cond Pl P1) => "descollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "descollaríais" ;--# notpresent
    VP (Cond Pl P3) => "descollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descuella" ;
    VP (Imp Sg P3) => "descuelle" ;
    VP (Imp Pl P1) => "descollemos" ;
    VP (Imp Pl P2) => "descollad" ;
    VP (Imp Pl P3) => "descuellen" ;
    VP (Pass Sg Masc) => "descollado" ;
    VP (Pass Sg Fem) => "descollada" ;
    VP (Pass Pl Masc) => "descollados" ;
    VP (Pass Pl Fem) => "descolladas"
    }
  } ;

lin desconcertar_V = verboV 
 {s = table {
    VI Infn => "desconcertar" ;
    VI Ger => "desconcertando" ;
    VI Part => "desconcertado" ;
    VP (Pres Ind Sg P1) => "desconcierto" ;
    VP (Pres Ind Sg P2) => "desconciertas" ;
    VP (Pres Ind Sg P3) => "desconcierta" ;
    VP (Pres Ind Pl P1) => "desconcertamos" ;
    VP (Pres Ind Pl P2) => "desconcertáis" ;
    VP (Pres Ind Pl P3) => "desconciertan" ;
    VP (Pres Subj Sg P1) => "desconcierte" ;
    VP (Pres Subj Sg P2) => "desconciertes" ;
    VP (Pres Subj Sg P3) => "desconcierte" ;
    VP (Pres Subj Pl P1) => "desconcertemos" ;
    VP (Pres Subj Pl P2) => "desconcertéis" ;
    VP (Pres Subj Pl P3) => "desconcierten" ;
    VP (Impf Ind Sg P1) => "desconcertaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desconcertabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desconcertaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desconcertábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desconcertabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desconcertaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desconcertara" ; "desconcertase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desconcertaras" ; "desconcertases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desconcertara" ; "desconcertase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desconcertáramos" ; "desconcertásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desconcertarais" ; "desconcertaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desconcertaran" ; "desconcertasen"} ;--# notpresent
    VP (Pret Sg P1) => "desconcerté" ;--# notpresent
    VP (Pret Sg P2) => "desconcertaste" ;--# notpresent
    VP (Pret Sg P3) => "desconcertó" ;--# notpresent
    VP (Pret Pl P1) => "desconcertamos" ;--# notpresent
    VP (Pret Pl P2) => "desconcertasteis" ;--# notpresent
    VP (Pret Pl P3) => "desconcertaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desconcertaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desconcertarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desconcertará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desconcertaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desconcertaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desconcertarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desconcertare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desconcertares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desconcertare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desconcertáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desconcertareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desconcertaren" ;--# notpresent
    VP (Cond Sg P1) => "desconcertaría" ;--# notpresent
    VP (Cond Sg P2) => "desconcertarías" ;--# notpresent
    VP (Cond Sg P3) => "desconcertaría" ;--# notpresent
    VP (Cond Pl P1) => "desconcertaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desconcertaríais" ;--# notpresent
    VP (Cond Pl P3) => "desconcertarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desconcierta" ;
    VP (Imp Sg P3) => "desconcierte" ;
    VP (Imp Pl P1) => "desconcertemos" ;
    VP (Imp Pl P2) => "desconcertad" ;
    VP (Imp Pl P3) => "desconcierten" ;
    VP (Pass Sg Masc) => "desconcertado" ;
    VP (Pass Sg Fem) => "desconcertada" ;
    VP (Pass Pl Masc) => "desconcertados" ;
    VP (Pass Pl Fem) => "desconcertadas"
    }
  } ;

lin desconsolar_V = verboV 
 {s = table {
    VI Infn => "desconsolar" ;
    VI Ger => "desconsolando" ;
    VI Part => "desconsolado" ;
    VP (Pres Ind Sg P1) => "desconsuelo" ;
    VP (Pres Ind Sg P2) => "desconsuelas" ;
    VP (Pres Ind Sg P3) => "desconsuela" ;
    VP (Pres Ind Pl P1) => "desconsolamos" ;
    VP (Pres Ind Pl P2) => "desconsoláis" ;
    VP (Pres Ind Pl P3) => "desconsuelan" ;
    VP (Pres Subj Sg P1) => "desconsuele" ;
    VP (Pres Subj Sg P2) => "desconsueles" ;
    VP (Pres Subj Sg P3) => "desconsuele" ;
    VP (Pres Subj Pl P1) => "desconsolemos" ;
    VP (Pres Subj Pl P2) => "desconsoléis" ;
    VP (Pres Subj Pl P3) => "desconsuelen" ;
    VP (Impf Ind Sg P1) => "desconsolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desconsolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desconsolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desconsolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desconsolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desconsolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desconsolara" ; "desconsolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desconsolaras" ; "desconsolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desconsolara" ; "desconsolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desconsoláramos" ; "desconsolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desconsolarais" ; "desconsolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desconsolaran" ; "desconsolasen"} ;--# notpresent
    VP (Pret Sg P1) => "desconsolé" ;--# notpresent
    VP (Pret Sg P2) => "desconsolaste" ;--# notpresent
    VP (Pret Sg P3) => "desconsoló" ;--# notpresent
    VP (Pret Pl P1) => "desconsolamos" ;--# notpresent
    VP (Pret Pl P2) => "desconsolasteis" ;--# notpresent
    VP (Pret Pl P3) => "desconsolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desconsolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desconsolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desconsolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desconsolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desconsolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desconsolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desconsolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desconsolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desconsolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desconsoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desconsolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desconsolaren" ;--# notpresent
    VP (Cond Sg P1) => "desconsolaría" ;--# notpresent
    VP (Cond Sg P2) => "desconsolarías" ;--# notpresent
    VP (Cond Sg P3) => "desconsolaría" ;--# notpresent
    VP (Cond Pl P1) => "desconsolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desconsolaríais" ;--# notpresent
    VP (Cond Pl P3) => "desconsolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desconsuela" ;
    VP (Imp Sg P3) => "desconsuele" ;
    VP (Imp Pl P1) => "desconsolemos" ;
    VP (Imp Pl P2) => "desconsolad" ;
    VP (Imp Pl P3) => "desconsuelen" ;
    VP (Pass Sg Masc) => "desconsolado" ;
    VP (Pass Sg Fem) => "desconsolada" ;
    VP (Pass Pl Masc) => "desconsolados" ;
    VP (Pass Pl Fem) => "desconsoladas"
    }
  } ;

lin descontar_V = verboV 
 {s = table {
    VI Infn => "descontar" ;
    VI Ger => "descontando" ;
    VI Part => "descontado" ;
    VP (Pres Ind Sg P1) => "descuento" ;
    VP (Pres Ind Sg P2) => "descuentas" ;
    VP (Pres Ind Sg P3) => "descuenta" ;
    VP (Pres Ind Pl P1) => "descontamos" ;
    VP (Pres Ind Pl P2) => "descontáis" ;
    VP (Pres Ind Pl P3) => "descuentan" ;
    VP (Pres Subj Sg P1) => "descuente" ;
    VP (Pres Subj Sg P2) => "descuentes" ;
    VP (Pres Subj Sg P3) => "descuente" ;
    VP (Pres Subj Pl P1) => "descontemos" ;
    VP (Pres Subj Pl P2) => "descontéis" ;
    VP (Pres Subj Pl P3) => "descuenten" ;
    VP (Impf Ind Sg P1) => "descontaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descontabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descontaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descontábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descontabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descontaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descontara" ; "descontase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descontaras" ; "descontases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descontara" ; "descontase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descontáramos" ; "descontásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descontarais" ; "descontaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descontaran" ; "descontasen"} ;--# notpresent
    VP (Pret Sg P1) => "desconté" ;--# notpresent
    VP (Pret Sg P2) => "descontaste" ;--# notpresent
    VP (Pret Sg P3) => "descontó" ;--# notpresent
    VP (Pret Pl P1) => "descontamos" ;--# notpresent
    VP (Pret Pl P2) => "descontasteis" ;--# notpresent
    VP (Pret Pl P3) => "descontaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descontaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descontarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descontará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descontaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descontaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descontarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descontare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descontares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descontare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descontáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descontareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descontaren" ;--# notpresent
    VP (Cond Sg P1) => "descontaría" ;--# notpresent
    VP (Cond Sg P2) => "descontarías" ;--# notpresent
    VP (Cond Sg P3) => "descontaría" ;--# notpresent
    VP (Cond Pl P1) => "descontaríamos" ;--# notpresent
    VP (Cond Pl P2) => "descontaríais" ;--# notpresent
    VP (Cond Pl P3) => "descontarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descuenta" ;
    VP (Imp Sg P3) => "descuente" ;
    VP (Imp Pl P1) => "descontemos" ;
    VP (Imp Pl P2) => "descontad" ;
    VP (Imp Pl P3) => "descuenten" ;
    VP (Pass Sg Masc) => "descontado" ;
    VP (Pass Sg Fem) => "descontada" ;
    VP (Pass Pl Masc) => "descontados" ;
    VP (Pass Pl Fem) => "descontadas"
    }
  } ;

lin descordar_V = verboV 
 {s = table {
    VI Infn => "descordar" ;
    VI Ger => "descordando" ;
    VI Part => "descordado" ;
    VP (Pres Ind Sg P1) => "descuerdo" ;
    VP (Pres Ind Sg P2) => "descuerdas" ;
    VP (Pres Ind Sg P3) => "descuerda" ;
    VP (Pres Ind Pl P1) => "descordamos" ;
    VP (Pres Ind Pl P2) => "descordáis" ;
    VP (Pres Ind Pl P3) => "descuerdan" ;
    VP (Pres Subj Sg P1) => "descuerde" ;
    VP (Pres Subj Sg P2) => "descuerdes" ;
    VP (Pres Subj Sg P3) => "descuerde" ;
    VP (Pres Subj Pl P1) => "descordemos" ;
    VP (Pres Subj Pl P2) => "descordéis" ;
    VP (Pres Subj Pl P3) => "descuerden" ;
    VP (Impf Ind Sg P1) => "descordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descordara" ; "descordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descordaras" ; "descordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descordara" ; "descordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descordáramos" ; "descordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descordarais" ; "descordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descordaran" ; "descordasen"} ;--# notpresent
    VP (Pret Sg P1) => "descordé" ;--# notpresent
    VP (Pret Sg P2) => "descordaste" ;--# notpresent
    VP (Pret Sg P3) => "descordó" ;--# notpresent
    VP (Pret Pl P1) => "descordamos" ;--# notpresent
    VP (Pret Pl P2) => "descordasteis" ;--# notpresent
    VP (Pret Pl P3) => "descordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descordaren" ;--# notpresent
    VP (Cond Sg P1) => "descordaría" ;--# notpresent
    VP (Cond Sg P2) => "descordarías" ;--# notpresent
    VP (Cond Sg P3) => "descordaría" ;--# notpresent
    VP (Cond Pl P1) => "descordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "descordaríais" ;--# notpresent
    VP (Cond Pl P3) => "descordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descuerda" ;
    VP (Imp Sg P3) => "descuerde" ;
    VP (Imp Pl P1) => "descordemos" ;
    VP (Imp Pl P2) => "descordad" ;
    VP (Imp Pl P3) => "descuerden" ;
    VP (Pass Sg Masc) => "descordado" ;
    VP (Pass Sg Fem) => "descordada" ;
    VP (Pass Pl Masc) => "descordados" ;
    VP (Pass Pl Fem) => "descordadas"
    }
  } ;

lin descornar_V = verboV 
 {s = table {
    VI Infn => "descornar" ;
    VI Ger => "descornando" ;
    VI Part => "descornado" ;
    VP (Pres Ind Sg P1) => "descuerno" ;
    VP (Pres Ind Sg P2) => "descuernas" ;
    VP (Pres Ind Sg P3) => "descuerna" ;
    VP (Pres Ind Pl P1) => "descornamos" ;
    VP (Pres Ind Pl P2) => "descornáis" ;
    VP (Pres Ind Pl P3) => "descuernan" ;
    VP (Pres Subj Sg P1) => "descuerne" ;
    VP (Pres Subj Sg P2) => "descuernes" ;
    VP (Pres Subj Sg P3) => "descuerne" ;
    VP (Pres Subj Pl P1) => "descornemos" ;
    VP (Pres Subj Pl P2) => "descornéis" ;
    VP (Pres Subj Pl P3) => "descuernen" ;
    VP (Impf Ind Sg P1) => "descornaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "descornabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "descornaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "descornábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descornabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descornaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descornara" ; "descornase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descornaras" ; "descornases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descornara" ; "descornase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descornáramos" ; "descornásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descornarais" ; "descornaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descornaran" ; "descornasen"} ;--# notpresent
    VP (Pret Sg P1) => "descorné" ;--# notpresent
    VP (Pret Sg P2) => "descornaste" ;--# notpresent
    VP (Pret Sg P3) => "descornó" ;--# notpresent
    VP (Pret Pl P1) => "descornamos" ;--# notpresent
    VP (Pret Pl P2) => "descornasteis" ;--# notpresent
    VP (Pret Pl P3) => "descornaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descornaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descornarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descornará" ;--# notpresent
    VP (Fut Ind Pl P1) => "descornaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descornaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descornarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descornare" ;--# notpresent
    VP (Fut Subj Sg P2) => "descornares" ;--# notpresent
    VP (Fut Subj Sg P3) => "descornare" ;--# notpresent
    VP (Fut Subj Pl P1) => "descornáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descornareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descornaren" ;--# notpresent
    VP (Cond Sg P1) => "descornaría" ;--# notpresent
    VP (Cond Sg P2) => "descornarías" ;--# notpresent
    VP (Cond Sg P3) => "descornaría" ;--# notpresent
    VP (Cond Pl P1) => "descornaríamos" ;--# notpresent
    VP (Cond Pl P2) => "descornaríais" ;--# notpresent
    VP (Cond Pl P3) => "descornarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descuerna" ;
    VP (Imp Sg P3) => "descuerne" ;
    VP (Imp Pl P1) => "descornemos" ;
    VP (Imp Pl P2) => "descornad" ;
    VP (Imp Pl P3) => "descuernen" ;
    VP (Pass Sg Masc) => "descornado" ;
    VP (Pass Sg Fem) => "descornada" ;
    VP (Pass Pl Masc) => "descornados" ;
    VP (Pass Pl Fem) => "descornadas"
    }
  } ;

lin desdentar_V = verboV 
 {s = table {
    VI Infn => "desdentar" ;
    VI Ger => "desdentando" ;
    VI Part => "desdentado" ;
    VP (Pres Ind Sg P1) => "desdiento" ;
    VP (Pres Ind Sg P2) => "desdientas" ;
    VP (Pres Ind Sg P3) => "desdienta" ;
    VP (Pres Ind Pl P1) => "desdentamos" ;
    VP (Pres Ind Pl P2) => "desdentáis" ;
    VP (Pres Ind Pl P3) => "desdientan" ;
    VP (Pres Subj Sg P1) => "desdiente" ;
    VP (Pres Subj Sg P2) => "desdientes" ;
    VP (Pres Subj Sg P3) => "desdiente" ;
    VP (Pres Subj Pl P1) => "desdentemos" ;
    VP (Pres Subj Pl P2) => "desdentéis" ;
    VP (Pres Subj Pl P3) => "desdienten" ;
    VP (Impf Ind Sg P1) => "desdentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desdentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desdentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desdentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desdentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desdentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desdentara" ; "desdentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desdentaras" ; "desdentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desdentara" ; "desdentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desdentáramos" ; "desdentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desdentarais" ; "desdentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desdentaran" ; "desdentasen"} ;--# notpresent
    VP (Pret Sg P1) => "desdenté" ;--# notpresent
    VP (Pret Sg P2) => "desdentaste" ;--# notpresent
    VP (Pret Sg P3) => "desdentó" ;--# notpresent
    VP (Pret Pl P1) => "desdentamos" ;--# notpresent
    VP (Pret Pl P2) => "desdentasteis" ;--# notpresent
    VP (Pret Pl P3) => "desdentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desdentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desdentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desdentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desdentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desdentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desdentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desdentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desdentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desdentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desdentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desdentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desdentaren" ;--# notpresent
    VP (Cond Sg P1) => "desdentaría" ;--# notpresent
    VP (Cond Sg P2) => "desdentarías" ;--# notpresent
    VP (Cond Sg P3) => "desdentaría" ;--# notpresent
    VP (Cond Pl P1) => "desdentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desdentaríais" ;--# notpresent
    VP (Cond Pl P3) => "desdentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desdienta" ;
    VP (Imp Sg P3) => "desdiente" ;
    VP (Imp Pl P1) => "desdentemos" ;
    VP (Imp Pl P2) => "desdentad" ;
    VP (Imp Pl P3) => "desdienten" ;
    VP (Pass Sg Masc) => "desdentado" ;
    VP (Pass Sg Fem) => "desdentada" ;
    VP (Pass Pl Masc) => "desdentados" ;
    VP (Pass Pl Fem) => "desdentadas"
    }
  } ;

lin desempedrar_V = verboV 
 {s = table {
    VI Infn => "desempedrar" ;
    VI Ger => "desempedrando" ;
    VI Part => "desempedrado" ;
    VP (Pres Ind Sg P1) => "desempiedro" ;
    VP (Pres Ind Sg P2) => "desempiedras" ;
    VP (Pres Ind Sg P3) => "desempiedra" ;
    VP (Pres Ind Pl P1) => "desempedramos" ;
    VP (Pres Ind Pl P2) => "desempedráis" ;
    VP (Pres Ind Pl P3) => "desempiedran" ;
    VP (Pres Subj Sg P1) => "desempiedre" ;
    VP (Pres Subj Sg P2) => "desempiedres" ;
    VP (Pres Subj Sg P3) => "desempiedre" ;
    VP (Pres Subj Pl P1) => "desempedremos" ;
    VP (Pres Subj Pl P2) => "desempedréis" ;
    VP (Pres Subj Pl P3) => "desempiedren" ;
    VP (Impf Ind Sg P1) => "desempedraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desempedrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desempedraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desempedrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desempedrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desempedraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desempedrara" ; "desempedrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desempedraras" ; "desempedrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desempedrara" ; "desempedrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desempedráramos" ; "desempedrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desempedrarais" ; "desempedraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desempedraran" ; "desempedrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desempedré" ;--# notpresent
    VP (Pret Sg P2) => "desempedraste" ;--# notpresent
    VP (Pret Sg P3) => "desempedró" ;--# notpresent
    VP (Pret Pl P1) => "desempedramos" ;--# notpresent
    VP (Pret Pl P2) => "desempedrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desempedraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desempedraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desempedrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desempedrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desempedraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desempedraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desempedrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desempedrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desempedrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desempedrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desempedráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desempedrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desempedraren" ;--# notpresent
    VP (Cond Sg P1) => "desempedraría" ;--# notpresent
    VP (Cond Sg P2) => "desempedrarías" ;--# notpresent
    VP (Cond Sg P3) => "desempedraría" ;--# notpresent
    VP (Cond Pl P1) => "desempedraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desempedraríais" ;--# notpresent
    VP (Cond Pl P3) => "desempedrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desempiedra" ;
    VP (Imp Sg P3) => "desempiedre" ;
    VP (Imp Pl P1) => "desempedremos" ;
    VP (Imp Pl P2) => "desempedrad" ;
    VP (Imp Pl P3) => "desempiedren" ;
    VP (Pass Sg Masc) => "desempedrado" ;
    VP (Pass Sg Fem) => "desempedrada" ;
    VP (Pass Pl Masc) => "desempedrados" ;
    VP (Pass Pl Fem) => "desempedradas"
    }
  } ;

lin desencerrar_V = verboV 
 {s = table {
    VI Infn => "desencerrar" ;
    VI Ger => "desencerrando" ;
    VI Part => "desencerrado" ;
    VP (Pres Ind Sg P1) => "desencierro" ;
    VP (Pres Ind Sg P2) => "desencierras" ;
    VP (Pres Ind Sg P3) => "desencierra" ;
    VP (Pres Ind Pl P1) => "desencerramos" ;
    VP (Pres Ind Pl P2) => "desencerráis" ;
    VP (Pres Ind Pl P3) => "desencierran" ;
    VP (Pres Subj Sg P1) => "desencierre" ;
    VP (Pres Subj Sg P2) => "desencierres" ;
    VP (Pres Subj Sg P3) => "desencierre" ;
    VP (Pres Subj Pl P1) => "desencerremos" ;
    VP (Pres Subj Pl P2) => "desencerréis" ;
    VP (Pres Subj Pl P3) => "desencierren" ;
    VP (Impf Ind Sg P1) => "desencerraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desencerrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desencerraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desencerrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desencerrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desencerraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desencerrara" ; "desencerrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desencerraras" ; "desencerrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desencerrara" ; "desencerrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desencerráramos" ; "desencerrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desencerrarais" ; "desencerraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desencerraran" ; "desencerrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desencerré" ;--# notpresent
    VP (Pret Sg P2) => "desencerraste" ;--# notpresent
    VP (Pret Sg P3) => "desencerró" ;--# notpresent
    VP (Pret Pl P1) => "desencerramos" ;--# notpresent
    VP (Pret Pl P2) => "desencerrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desencerraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desencerraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desencerrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desencerrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desencerraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desencerraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desencerrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desencerrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desencerrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desencerrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desencerráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desencerrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desencerraren" ;--# notpresent
    VP (Cond Sg P1) => "desencerraría" ;--# notpresent
    VP (Cond Sg P2) => "desencerrarías" ;--# notpresent
    VP (Cond Sg P3) => "desencerraría" ;--# notpresent
    VP (Cond Pl P1) => "desencerraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desencerraríais" ;--# notpresent
    VP (Cond Pl P3) => "desencerrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desencierra" ;
    VP (Imp Sg P3) => "desencierre" ;
    VP (Imp Pl P1) => "desencerremos" ;
    VP (Imp Pl P2) => "desencerrad" ;
    VP (Imp Pl P3) => "desencierren" ;
    VP (Pass Sg Masc) => "desencerrado" ;
    VP (Pass Sg Fem) => "desencerrada" ;
    VP (Pass Pl Masc) => "desencerrados" ;
    VP (Pass Pl Fem) => "desencerradas"
    }
  } ;

lin desencordar_V = verboV 
 {s = table {
    VI Infn => "desencordar" ;
    VI Ger => "desencordando" ;
    VI Part => "desencordado" ;
    VP (Pres Ind Sg P1) => "desencuerdo" ;
    VP (Pres Ind Sg P2) => "desencuerdas" ;
    VP (Pres Ind Sg P3) => "desencuerda" ;
    VP (Pres Ind Pl P1) => "desencordamos" ;
    VP (Pres Ind Pl P2) => "desencordáis" ;
    VP (Pres Ind Pl P3) => "desencuerdan" ;
    VP (Pres Subj Sg P1) => "desencuerde" ;
    VP (Pres Subj Sg P2) => "desencuerdes" ;
    VP (Pres Subj Sg P3) => "desencuerde" ;
    VP (Pres Subj Pl P1) => "desencordemos" ;
    VP (Pres Subj Pl P2) => "desencordéis" ;
    VP (Pres Subj Pl P3) => "desencuerden" ;
    VP (Impf Ind Sg P1) => "desencordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desencordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desencordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desencordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desencordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desencordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desencordara" ; "desencordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desencordaras" ; "desencordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desencordara" ; "desencordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desencordáramos" ; "desencordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desencordarais" ; "desencordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desencordaran" ; "desencordasen"} ;--# notpresent
    VP (Pret Sg P1) => "desencordé" ;--# notpresent
    VP (Pret Sg P2) => "desencordaste" ;--# notpresent
    VP (Pret Sg P3) => "desencordó" ;--# notpresent
    VP (Pret Pl P1) => "desencordamos" ;--# notpresent
    VP (Pret Pl P2) => "desencordasteis" ;--# notpresent
    VP (Pret Pl P3) => "desencordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desencordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desencordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desencordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desencordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desencordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desencordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desencordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desencordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desencordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desencordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desencordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desencordaren" ;--# notpresent
    VP (Cond Sg P1) => "desencordaría" ;--# notpresent
    VP (Cond Sg P2) => "desencordarías" ;--# notpresent
    VP (Cond Sg P3) => "desencordaría" ;--# notpresent
    VP (Cond Pl P1) => "desencordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desencordaríais" ;--# notpresent
    VP (Cond Pl P3) => "desencordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desencuerda" ;
    VP (Imp Sg P3) => "desencuerde" ;
    VP (Imp Pl P1) => "desencordemos" ;
    VP (Imp Pl P2) => "desencordad" ;
    VP (Imp Pl P3) => "desencuerden" ;
    VP (Pass Sg Masc) => "desencordado" ;
    VP (Pass Sg Fem) => "desencordada" ;
    VP (Pass Pl Masc) => "desencordados" ;
    VP (Pass Pl Fem) => "desencordadas"
    }
  } ;

lin desencovar_V = verboV 
 {s = table {
    VI Infn => "desencovar" ;
    VI Ger => "desencovando" ;
    VI Part => "desencovado" ;
    VP (Pres Ind Sg P1) => "desencuevo" ;
    VP (Pres Ind Sg P2) => "desencuevas" ;
    VP (Pres Ind Sg P3) => "desencueva" ;
    VP (Pres Ind Pl P1) => "desencovamos" ;
    VP (Pres Ind Pl P2) => "desencováis" ;
    VP (Pres Ind Pl P3) => "desencuevan" ;
    VP (Pres Subj Sg P1) => "desencueve" ;
    VP (Pres Subj Sg P2) => "desencueves" ;
    VP (Pres Subj Sg P3) => "desencueve" ;
    VP (Pres Subj Pl P1) => "desencovemos" ;
    VP (Pres Subj Pl P2) => "desencovéis" ;
    VP (Pres Subj Pl P3) => "desencueven" ;
    VP (Impf Ind Sg P1) => "desencovaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desencovabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desencovaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desencovábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desencovabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desencovaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desencovara" ; "desencovase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desencovaras" ; "desencovases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desencovara" ; "desencovase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desencováramos" ; "desencovásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desencovarais" ; "desencovaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desencovaran" ; "desencovasen"} ;--# notpresent
    VP (Pret Sg P1) => "desencové" ;--# notpresent
    VP (Pret Sg P2) => "desencovaste" ;--# notpresent
    VP (Pret Sg P3) => "desencovó" ;--# notpresent
    VP (Pret Pl P1) => "desencovamos" ;--# notpresent
    VP (Pret Pl P2) => "desencovasteis" ;--# notpresent
    VP (Pret Pl P3) => "desencovaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desencovaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desencovarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desencovará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desencovaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desencovaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desencovarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desencovare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desencovares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desencovare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desencováremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desencovareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desencovaren" ;--# notpresent
    VP (Cond Sg P1) => "desencovaría" ;--# notpresent
    VP (Cond Sg P2) => "desencovarías" ;--# notpresent
    VP (Cond Sg P3) => "desencovaría" ;--# notpresent
    VP (Cond Pl P1) => "desencovaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desencovaríais" ;--# notpresent
    VP (Cond Pl P3) => "desencovarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desencueva" ;
    VP (Imp Sg P3) => "desencueve" ;
    VP (Imp Pl P1) => "desencovemos" ;
    VP (Imp Pl P2) => "desencovad" ;
    VP (Imp Pl P3) => "desencueven" ;
    VP (Pass Sg Masc) => "desencovado" ;
    VP (Pass Sg Fem) => "desencovada" ;
    VP (Pass Pl Masc) => "desencovados" ;
    VP (Pass Pl Fem) => "desencovadas"
    }
  } ;

lin desengrosar_V = verboV 
 {s = table {
    VI Infn => "desengrosar" ;
    VI Ger => "desengrosando" ;
    VI Part => "desengrosado" ;
    VP (Pres Ind Sg P1) => "desengrueso" ;
    VP (Pres Ind Sg P2) => "desengruesas" ;
    VP (Pres Ind Sg P3) => "desengruesa" ;
    VP (Pres Ind Pl P1) => "desengrosamos" ;
    VP (Pres Ind Pl P2) => "desengrosáis" ;
    VP (Pres Ind Pl P3) => "desengruesan" ;
    VP (Pres Subj Sg P1) => "desengruese" ;
    VP (Pres Subj Sg P2) => "desengrueses" ;
    VP (Pres Subj Sg P3) => "desengruese" ;
    VP (Pres Subj Pl P1) => "desengrosemos" ;
    VP (Pres Subj Pl P2) => "desengroséis" ;
    VP (Pres Subj Pl P3) => "desengruesen" ;
    VP (Impf Ind Sg P1) => "desengrosaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desengrosabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desengrosaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desengrosábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desengrosabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desengrosaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desengrosara" ; "desengrosase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desengrosaras" ; "desengrosases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desengrosara" ; "desengrosase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desengrosáramos" ; "desengrosásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desengrosarais" ; "desengrosaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desengrosaran" ; "desengrosasen"} ;--# notpresent
    VP (Pret Sg P1) => "desengrosé" ;--# notpresent
    VP (Pret Sg P2) => "desengrosaste" ;--# notpresent
    VP (Pret Sg P3) => "desengrosó" ;--# notpresent
    VP (Pret Pl P1) => "desengrosamos" ;--# notpresent
    VP (Pret Pl P2) => "desengrosasteis" ;--# notpresent
    VP (Pret Pl P3) => "desengrosaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desengrosaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desengrosarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desengrosará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desengrosaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desengrosaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desengrosarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desengrosare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desengrosares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desengrosare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desengrosáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desengrosareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desengrosaren" ;--# notpresent
    VP (Cond Sg P1) => "desengrosaría" ;--# notpresent
    VP (Cond Sg P2) => "desengrosarías" ;--# notpresent
    VP (Cond Sg P3) => "desengrosaría" ;--# notpresent
    VP (Cond Pl P1) => "desengrosaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desengrosaríais" ;--# notpresent
    VP (Cond Pl P3) => "desengrosarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desengruesa" ;
    VP (Imp Sg P3) => "desengruese" ;
    VP (Imp Pl P1) => "desengrosemos" ;
    VP (Imp Pl P2) => "desengrosad" ;
    VP (Imp Pl P3) => "desengruesen" ;
    VP (Pass Sg Masc) => "desengrosado" ;
    VP (Pass Sg Fem) => "desengrosada" ;
    VP (Pass Pl Masc) => "desengrosados" ;
    VP (Pass Pl Fem) => "desengrosadas"
    }
  } ;

lin desenterrar_V = verboV 
 {s = table {
    VI Infn => "desenterrar" ;
    VI Ger => "desenterrando" ;
    VI Part => "desenterrado" ;
    VP (Pres Ind Sg P1) => "desentierro" ;
    VP (Pres Ind Sg P2) => "desentierras" ;
    VP (Pres Ind Sg P3) => "desentierra" ;
    VP (Pres Ind Pl P1) => "desenterramos" ;
    VP (Pres Ind Pl P2) => "desenterráis" ;
    VP (Pres Ind Pl P3) => "desentierran" ;
    VP (Pres Subj Sg P1) => "desentierre" ;
    VP (Pres Subj Sg P2) => "desentierres" ;
    VP (Pres Subj Sg P3) => "desentierre" ;
    VP (Pres Subj Pl P1) => "desenterremos" ;
    VP (Pres Subj Pl P2) => "desenterréis" ;
    VP (Pres Subj Pl P3) => "desentierren" ;
    VP (Impf Ind Sg P1) => "desenterraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desenterrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desenterraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desenterrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desenterrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desenterraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desenterrara" ; "desenterrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desenterraras" ; "desenterrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desenterrara" ; "desenterrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desenterráramos" ; "desenterrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desenterrarais" ; "desenterraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desenterraran" ; "desenterrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desenterré" ;--# notpresent
    VP (Pret Sg P2) => "desenterraste" ;--# notpresent
    VP (Pret Sg P3) => "desenterró" ;--# notpresent
    VP (Pret Pl P1) => "desenterramos" ;--# notpresent
    VP (Pret Pl P2) => "desenterrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desenterraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desenterraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desenterrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desenterrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desenterraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desenterraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desenterrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desenterrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desenterrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desenterrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desenterráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desenterrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desenterraren" ;--# notpresent
    VP (Cond Sg P1) => "desenterraría" ;--# notpresent
    VP (Cond Sg P2) => "desenterrarías" ;--# notpresent
    VP (Cond Sg P3) => "desenterraría" ;--# notpresent
    VP (Cond Pl P1) => "desenterraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desenterraríais" ;--# notpresent
    VP (Cond Pl P3) => "desenterrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desentierra" ;
    VP (Imp Sg P3) => "desentierre" ;
    VP (Imp Pl P1) => "desenterremos" ;
    VP (Imp Pl P2) => "desenterrad" ;
    VP (Imp Pl P3) => "desentierren" ;
    VP (Pass Sg Masc) => "desenterrado" ;
    VP (Pass Sg Fem) => "desenterrada" ;
    VP (Pass Pl Masc) => "desenterrados" ;
    VP (Pass Pl Fem) => "desenterradas"
    }
  } ;

lin desgobernar_V = verboV 
 {s = table {
    VI Infn => "desgobernar" ;
    VI Ger => "desgobernando" ;
    VI Part => "desgobernado" ;
    VP (Pres Ind Sg P1) => "desgobierno" ;
    VP (Pres Ind Sg P2) => "desgobiernas" ;
    VP (Pres Ind Sg P3) => "desgobierna" ;
    VP (Pres Ind Pl P1) => "desgobernamos" ;
    VP (Pres Ind Pl P2) => "desgobernáis" ;
    VP (Pres Ind Pl P3) => "desgobiernan" ;
    VP (Pres Subj Sg P1) => "desgobierne" ;
    VP (Pres Subj Sg P2) => "desgobiernes" ;
    VP (Pres Subj Sg P3) => "desgobierne" ;
    VP (Pres Subj Pl P1) => "desgobernemos" ;
    VP (Pres Subj Pl P2) => "desgobernéis" ;
    VP (Pres Subj Pl P3) => "desgobiernen" ;
    VP (Impf Ind Sg P1) => "desgobernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desgobernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desgobernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desgobernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desgobernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desgobernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desgobernara" ; "desgobernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desgobernaras" ; "desgobernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desgobernara" ; "desgobernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desgobernáramos" ; "desgobernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desgobernarais" ; "desgobernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desgobernaran" ; "desgobernasen"} ;--# notpresent
    VP (Pret Sg P1) => "desgoberné" ;--# notpresent
    VP (Pret Sg P2) => "desgobernaste" ;--# notpresent
    VP (Pret Sg P3) => "desgobernó" ;--# notpresent
    VP (Pret Pl P1) => "desgobernamos" ;--# notpresent
    VP (Pret Pl P2) => "desgobernasteis" ;--# notpresent
    VP (Pret Pl P3) => "desgobernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desgobernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desgobernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desgobernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desgobernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desgobernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desgobernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desgobernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desgobernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desgobernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desgobernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desgobernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desgobernaren" ;--# notpresent
    VP (Cond Sg P1) => "desgobernaría" ;--# notpresent
    VP (Cond Sg P2) => "desgobernarías" ;--# notpresent
    VP (Cond Sg P3) => "desgobernaría" ;--# notpresent
    VP (Cond Pl P1) => "desgobernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desgobernaríais" ;--# notpresent
    VP (Cond Pl P3) => "desgobernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desgobierna" ;
    VP (Imp Sg P3) => "desgobierne" ;
    VP (Imp Pl P1) => "desgobernemos" ;
    VP (Imp Pl P2) => "desgobernad" ;
    VP (Imp Pl P3) => "desgobiernen" ;
    VP (Pass Sg Masc) => "desgobernado" ;
    VP (Pass Sg Fem) => "desgobernada" ;
    VP (Pass Pl Masc) => "desgobernados" ;
    VP (Pass Pl Fem) => "desgobernadas"
    }
  } ;

lin deshelar_V = verboV 
 {s = table {
    VI Infn => "deshelar" ;
    VI Ger => "deshelando" ;
    VI Part => "deshelado" ;
    VP (Pres Ind Sg P1) => "deshielo" ;
    VP (Pres Ind Sg P2) => "deshielas" ;
    VP (Pres Ind Sg P3) => "deshiela" ;
    VP (Pres Ind Pl P1) => "deshelamos" ;
    VP (Pres Ind Pl P2) => "desheláis" ;
    VP (Pres Ind Pl P3) => "deshielan" ;
    VP (Pres Subj Sg P1) => "deshiele" ;
    VP (Pres Subj Sg P2) => "deshieles" ;
    VP (Pres Subj Sg P3) => "deshiele" ;
    VP (Pres Subj Pl P1) => "deshelemos" ;
    VP (Pres Subj Pl P2) => "desheléis" ;
    VP (Pres Subj Pl P3) => "deshielen" ;
    VP (Impf Ind Sg P1) => "deshelaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "deshelabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "deshelaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "deshelábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deshelabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deshelaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"deshelara" ; "deshelase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"deshelaras" ; "deshelases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"deshelara" ; "deshelase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desheláramos" ; "deshelásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"deshelarais" ; "deshelaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"deshelaran" ; "deshelasen"} ;--# notpresent
    VP (Pret Sg P1) => "deshelé" ;--# notpresent
    VP (Pret Sg P2) => "deshelaste" ;--# notpresent
    VP (Pret Sg P3) => "desheló" ;--# notpresent
    VP (Pret Pl P1) => "deshelamos" ;--# notpresent
    VP (Pret Pl P2) => "deshelasteis" ;--# notpresent
    VP (Pret Pl P3) => "deshelaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "deshelaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deshelarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deshelará" ;--# notpresent
    VP (Fut Ind Pl P1) => "deshelaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "deshelaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deshelarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "deshelare" ;--# notpresent
    VP (Fut Subj Sg P2) => "deshelares" ;--# notpresent
    VP (Fut Subj Sg P3) => "deshelare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desheláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "deshelareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "deshelaren" ;--# notpresent
    VP (Cond Sg P1) => "deshelaría" ;--# notpresent
    VP (Cond Sg P2) => "deshelarías" ;--# notpresent
    VP (Cond Sg P3) => "deshelaría" ;--# notpresent
    VP (Cond Pl P1) => "deshelaríamos" ;--# notpresent
    VP (Cond Pl P2) => "deshelaríais" ;--# notpresent
    VP (Cond Pl P3) => "deshelarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deshiela" ;
    VP (Imp Sg P3) => "deshiele" ;
    VP (Imp Pl P1) => "deshelemos" ;
    VP (Imp Pl P2) => "deshelad" ;
    VP (Imp Pl P3) => "deshielen" ;
    VP (Pass Sg Masc) => "deshelado" ;
    VP (Pass Sg Fem) => "deshelada" ;
    VP (Pass Pl Masc) => "deshelados" ;
    VP (Pass Pl Fem) => "desheladas"
    }
  } ;

lin desherbar_V = verboV 
 {s = table {
    VI Infn => "desherbar" ;
    VI Ger => "desherbando" ;
    VI Part => "desherbado" ;
    VP (Pres Ind Sg P1) => "deshierbo" ;
    VP (Pres Ind Sg P2) => "deshierbas" ;
    VP (Pres Ind Sg P3) => "deshierba" ;
    VP (Pres Ind Pl P1) => "desherbamos" ;
    VP (Pres Ind Pl P2) => "desherbáis" ;
    VP (Pres Ind Pl P3) => "deshierban" ;
    VP (Pres Subj Sg P1) => "deshierbe" ;
    VP (Pres Subj Sg P2) => "deshierbes" ;
    VP (Pres Subj Sg P3) => "deshierbe" ;
    VP (Pres Subj Pl P1) => "desherbemos" ;
    VP (Pres Subj Pl P2) => "desherbéis" ;
    VP (Pres Subj Pl P3) => "deshierben" ;
    VP (Impf Ind Sg P1) => "desherbaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desherbabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desherbaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desherbábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desherbabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desherbaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desherbara" ; "desherbase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desherbaras" ; "desherbases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desherbara" ; "desherbase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desherbáramos" ; "desherbásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desherbarais" ; "desherbaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desherbaran" ; "desherbasen"} ;--# notpresent
    VP (Pret Sg P1) => "desherbé" ;--# notpresent
    VP (Pret Sg P2) => "desherbaste" ;--# notpresent
    VP (Pret Sg P3) => "desherbó" ;--# notpresent
    VP (Pret Pl P1) => "desherbamos" ;--# notpresent
    VP (Pret Pl P2) => "desherbasteis" ;--# notpresent
    VP (Pret Pl P3) => "desherbaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desherbaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desherbarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desherbará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desherbaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desherbaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desherbarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desherbare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desherbares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desherbare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desherbáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desherbareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desherbaren" ;--# notpresent
    VP (Cond Sg P1) => "desherbaría" ;--# notpresent
    VP (Cond Sg P2) => "desherbarías" ;--# notpresent
    VP (Cond Sg P3) => "desherbaría" ;--# notpresent
    VP (Cond Pl P1) => "desherbaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desherbaríais" ;--# notpresent
    VP (Cond Pl P3) => "desherbarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deshierba" ;
    VP (Imp Sg P3) => "deshierbe" ;
    VP (Imp Pl P1) => "desherbemos" ;
    VP (Imp Pl P2) => "desherbad" ;
    VP (Imp Pl P3) => "deshierben" ;
    VP (Pass Sg Masc) => "desherbado" ;
    VP (Pass Sg Fem) => "desherbada" ;
    VP (Pass Pl Masc) => "desherbados" ;
    VP (Pass Pl Fem) => "desherbadas"
    }
  } ;

lin desherrar_V = verboV 
 {s = table {
    VI Infn => "desherrar" ;
    VI Ger => "desherrando" ;
    VI Part => "desherrado" ;
    VP (Pres Ind Sg P1) => "deshierro" ;
    VP (Pres Ind Sg P2) => "deshierras" ;
    VP (Pres Ind Sg P3) => "deshierra" ;
    VP (Pres Ind Pl P1) => "desherramos" ;
    VP (Pres Ind Pl P2) => "desherráis" ;
    VP (Pres Ind Pl P3) => "deshierran" ;
    VP (Pres Subj Sg P1) => "deshierre" ;
    VP (Pres Subj Sg P2) => "deshierres" ;
    VP (Pres Subj Sg P3) => "deshierre" ;
    VP (Pres Subj Pl P1) => "desherremos" ;
    VP (Pres Subj Pl P2) => "desherréis" ;
    VP (Pres Subj Pl P3) => "deshierren" ;
    VP (Impf Ind Sg P1) => "desherraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desherrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desherraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desherrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desherrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desherraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desherrara" ; "desherrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desherraras" ; "desherrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desherrara" ; "desherrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desherráramos" ; "desherrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desherrarais" ; "desherraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desherraran" ; "desherrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desherré" ;--# notpresent
    VP (Pret Sg P2) => "desherraste" ;--# notpresent
    VP (Pret Sg P3) => "desherró" ;--# notpresent
    VP (Pret Pl P1) => "desherramos" ;--# notpresent
    VP (Pret Pl P2) => "desherrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desherraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desherraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desherrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desherrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desherraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desherraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desherrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desherrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desherrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desherrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desherráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desherrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desherraren" ;--# notpresent
    VP (Cond Sg P1) => "desherraría" ;--# notpresent
    VP (Cond Sg P2) => "desherrarías" ;--# notpresent
    VP (Cond Sg P3) => "desherraría" ;--# notpresent
    VP (Cond Pl P1) => "desherraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desherraríais" ;--# notpresent
    VP (Cond Pl P3) => "desherrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deshierra" ;
    VP (Imp Sg P3) => "deshierre" ;
    VP (Imp Pl P1) => "desherremos" ;
    VP (Imp Pl P2) => "desherrad" ;
    VP (Imp Pl P3) => "deshierren" ;
    VP (Pass Sg Masc) => "desherrado" ;
    VP (Pass Sg Fem) => "desherrada" ;
    VP (Pass Pl Masc) => "desherrados" ;
    VP (Pass Pl Fem) => "desherradas"
    }
  } ;

lin desinvernar_V = verboV 
 {s = table {
    VI Infn => "desinvernar" ;
    VI Ger => "desinvernando" ;
    VI Part => "desinvernado" ;
    VP (Pres Ind Sg P1) => "desinvierno" ;
    VP (Pres Ind Sg P2) => "desinviernas" ;
    VP (Pres Ind Sg P3) => "desinvierna" ;
    VP (Pres Ind Pl P1) => "desinvernamos" ;
    VP (Pres Ind Pl P2) => "desinvernáis" ;
    VP (Pres Ind Pl P3) => "desinviernan" ;
    VP (Pres Subj Sg P1) => "desinvierne" ;
    VP (Pres Subj Sg P2) => "desinviernes" ;
    VP (Pres Subj Sg P3) => "desinvierne" ;
    VP (Pres Subj Pl P1) => "desinvernemos" ;
    VP (Pres Subj Pl P2) => "desinvernéis" ;
    VP (Pres Subj Pl P3) => "desinviernen" ;
    VP (Impf Ind Sg P1) => "desinvernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desinvernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desinvernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desinvernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desinvernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desinvernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desinvernara" ; "desinvernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desinvernaras" ; "desinvernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desinvernara" ; "desinvernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desinvernáramos" ; "desinvernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desinvernarais" ; "desinvernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desinvernaran" ; "desinvernasen"} ;--# notpresent
    VP (Pret Sg P1) => "desinverné" ;--# notpresent
    VP (Pret Sg P2) => "desinvernaste" ;--# notpresent
    VP (Pret Sg P3) => "desinvernó" ;--# notpresent
    VP (Pret Pl P1) => "desinvernamos" ;--# notpresent
    VP (Pret Pl P2) => "desinvernasteis" ;--# notpresent
    VP (Pret Pl P3) => "desinvernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desinvernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desinvernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desinvernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desinvernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desinvernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desinvernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desinvernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desinvernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desinvernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desinvernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desinvernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desinvernaren" ;--# notpresent
    VP (Cond Sg P1) => "desinvernaría" ;--# notpresent
    VP (Cond Sg P2) => "desinvernarías" ;--# notpresent
    VP (Cond Sg P3) => "desinvernaría" ;--# notpresent
    VP (Cond Pl P1) => "desinvernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desinvernaríais" ;--# notpresent
    VP (Cond Pl P3) => "desinvernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desinvierna" ;
    VP (Imp Sg P3) => "desinvierne" ;
    VP (Imp Pl P1) => "desinvernemos" ;
    VP (Imp Pl P2) => "desinvernad" ;
    VP (Imp Pl P3) => "desinviernen" ;
    VP (Pass Sg Masc) => "desinvernado" ;
    VP (Pass Sg Fem) => "desinvernada" ;
    VP (Pass Pl Masc) => "desinvernados" ;
    VP (Pass Pl Fem) => "desinvernadas"
    }
  } ;

lin deslendrar_V = verboV 
 {s = table {
    VI Infn => "deslendrar" ;
    VI Ger => "deslendrando" ;
    VI Part => "deslendrado" ;
    VP (Pres Ind Sg P1) => "desliendro" ;
    VP (Pres Ind Sg P2) => "desliendras" ;
    VP (Pres Ind Sg P3) => "desliendra" ;
    VP (Pres Ind Pl P1) => "deslendramos" ;
    VP (Pres Ind Pl P2) => "deslendráis" ;
    VP (Pres Ind Pl P3) => "desliendran" ;
    VP (Pres Subj Sg P1) => "desliendre" ;
    VP (Pres Subj Sg P2) => "desliendres" ;
    VP (Pres Subj Sg P3) => "desliendre" ;
    VP (Pres Subj Pl P1) => "deslendremos" ;
    VP (Pres Subj Pl P2) => "deslendréis" ;
    VP (Pres Subj Pl P3) => "desliendren" ;
    VP (Impf Ind Sg P1) => "deslendraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "deslendrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "deslendraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "deslendrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deslendrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deslendraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"deslendrara" ; "deslendrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"deslendraras" ; "deslendrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"deslendrara" ; "deslendrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"deslendráramos" ; "deslendrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"deslendrarais" ; "deslendraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"deslendraran" ; "deslendrasen"} ;--# notpresent
    VP (Pret Sg P1) => "deslendré" ;--# notpresent
    VP (Pret Sg P2) => "deslendraste" ;--# notpresent
    VP (Pret Sg P3) => "deslendró" ;--# notpresent
    VP (Pret Pl P1) => "deslendramos" ;--# notpresent
    VP (Pret Pl P2) => "deslendrasteis" ;--# notpresent
    VP (Pret Pl P3) => "deslendraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "deslendraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deslendrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deslendrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "deslendraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "deslendraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deslendrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "deslendrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "deslendrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "deslendrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "deslendráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "deslendrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "deslendraren" ;--# notpresent
    VP (Cond Sg P1) => "deslendraría" ;--# notpresent
    VP (Cond Sg P2) => "deslendrarías" ;--# notpresent
    VP (Cond Sg P3) => "deslendraría" ;--# notpresent
    VP (Cond Pl P1) => "deslendraríamos" ;--# notpresent
    VP (Cond Pl P2) => "deslendraríais" ;--# notpresent
    VP (Cond Pl P3) => "deslendrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desliendra" ;
    VP (Imp Sg P3) => "desliendre" ;
    VP (Imp Pl P1) => "deslendremos" ;
    VP (Imp Pl P2) => "deslendrad" ;
    VP (Imp Pl P3) => "desliendren" ;
    VP (Pass Sg Masc) => "deslendrado" ;
    VP (Pass Sg Fem) => "deslendrada" ;
    VP (Pass Pl Masc) => "deslendrados" ;
    VP (Pass Pl Fem) => "deslendradas"
    }
  } ;

lin desmajolar_V = verboV 
 {s = table {
    VI Infn => "desmajolar" ;
    VI Ger => "desmajolando" ;
    VI Part => "desmajolado" ;
    VP (Pres Ind Sg P1) => "desmajuelo" ;
    VP (Pres Ind Sg P2) => "desmajuelas" ;
    VP (Pres Ind Sg P3) => "desmajuela" ;
    VP (Pres Ind Pl P1) => "desmajolamos" ;
    VP (Pres Ind Pl P2) => "desmajoláis" ;
    VP (Pres Ind Pl P3) => "desmajuelan" ;
    VP (Pres Subj Sg P1) => "desmajuele" ;
    VP (Pres Subj Sg P2) => "desmajueles" ;
    VP (Pres Subj Sg P3) => "desmajuele" ;
    VP (Pres Subj Pl P1) => "desmajolemos" ;
    VP (Pres Subj Pl P2) => "desmajoléis" ;
    VP (Pres Subj Pl P3) => "desmajuelen" ;
    VP (Impf Ind Sg P1) => "desmajolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmajolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmajolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmajolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmajolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmajolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmajolara" ; "desmajolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmajolaras" ; "desmajolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmajolara" ; "desmajolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmajoláramos" ; "desmajolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmajolarais" ; "desmajolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmajolaran" ; "desmajolasen"} ;--# notpresent
    VP (Pret Sg P1) => "desmajolé" ;--# notpresent
    VP (Pret Sg P2) => "desmajolaste" ;--# notpresent
    VP (Pret Sg P3) => "desmajoló" ;--# notpresent
    VP (Pret Pl P1) => "desmajolamos" ;--# notpresent
    VP (Pret Pl P2) => "desmajolasteis" ;--# notpresent
    VP (Pret Pl P3) => "desmajolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmajolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmajolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmajolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmajolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmajolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmajolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmajolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmajolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmajolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmajoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmajolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmajolaren" ;--# notpresent
    VP (Cond Sg P1) => "desmajolaría" ;--# notpresent
    VP (Cond Sg P2) => "desmajolarías" ;--# notpresent
    VP (Cond Sg P3) => "desmajolaría" ;--# notpresent
    VP (Cond Pl P1) => "desmajolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmajolaríais" ;--# notpresent
    VP (Cond Pl P3) => "desmajolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmajuela" ;
    VP (Imp Sg P3) => "desmajuele" ;
    VP (Imp Pl P1) => "desmajolemos" ;
    VP (Imp Pl P2) => "desmajolad" ;
    VP (Imp Pl P3) => "desmajuelen" ;
    VP (Pass Sg Masc) => "desmajolado" ;
    VP (Pass Sg Fem) => "desmajolada" ;
    VP (Pass Pl Masc) => "desmajolados" ;
    VP (Pass Pl Fem) => "desmajoladas"
    }
  } ;

lin desmelar_V = verboV 
 {s = table {
    VI Infn => "desmelar" ;
    VI Ger => "desmelando" ;
    VI Part => "desmelado" ;
    VP (Pres Ind Sg P1) => "desmielo" ;
    VP (Pres Ind Sg P2) => "desmielas" ;
    VP (Pres Ind Sg P3) => "desmiela" ;
    VP (Pres Ind Pl P1) => "desmelamos" ;
    VP (Pres Ind Pl P2) => "desmeláis" ;
    VP (Pres Ind Pl P3) => "desmielan" ;
    VP (Pres Subj Sg P1) => "desmiele" ;
    VP (Pres Subj Sg P2) => "desmieles" ;
    VP (Pres Subj Sg P3) => "desmiele" ;
    VP (Pres Subj Pl P1) => "desmelemos" ;
    VP (Pres Subj Pl P2) => "desmeléis" ;
    VP (Pres Subj Pl P3) => "desmielen" ;
    VP (Impf Ind Sg P1) => "desmelaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmelabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmelaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmelábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmelabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmelaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmelara" ; "desmelase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmelaras" ; "desmelases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmelara" ; "desmelase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmeláramos" ; "desmelásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmelarais" ; "desmelaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmelaran" ; "desmelasen"} ;--# notpresent
    VP (Pret Sg P1) => "desmelé" ;--# notpresent
    VP (Pret Sg P2) => "desmelaste" ;--# notpresent
    VP (Pret Sg P3) => "desmeló" ;--# notpresent
    VP (Pret Pl P1) => "desmelamos" ;--# notpresent
    VP (Pret Pl P2) => "desmelasteis" ;--# notpresent
    VP (Pret Pl P3) => "desmelaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmelaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmelarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmelará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmelaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmelaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmelarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmelare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmelares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmelare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmeláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmelareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmelaren" ;--# notpresent
    VP (Cond Sg P1) => "desmelaría" ;--# notpresent
    VP (Cond Sg P2) => "desmelarías" ;--# notpresent
    VP (Cond Sg P3) => "desmelaría" ;--# notpresent
    VP (Cond Pl P1) => "desmelaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmelaríais" ;--# notpresent
    VP (Cond Pl P3) => "desmelarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmiela" ;
    VP (Imp Sg P3) => "desmiele" ;
    VP (Imp Pl P1) => "desmelemos" ;
    VP (Imp Pl P2) => "desmelad" ;
    VP (Imp Pl P3) => "desmielen" ;
    VP (Pass Sg Masc) => "desmelado" ;
    VP (Pass Sg Fem) => "desmelada" ;
    VP (Pass Pl Masc) => "desmelados" ;
    VP (Pass Pl Fem) => "desmeladas"
    }
  } ;

lin desmembrar_V = verboV 
 {s = table {
    VI Infn => "desmembrar" ;
    VI Ger => "desmembrando" ;
    VI Part => "desmembrado" ;
    VP (Pres Ind Sg P1) => "desmiembro" ;
    VP (Pres Ind Sg P2) => "desmiembras" ;
    VP (Pres Ind Sg P3) => "desmiembra" ;
    VP (Pres Ind Pl P1) => "desmembramos" ;
    VP (Pres Ind Pl P2) => "desmembráis" ;
    VP (Pres Ind Pl P3) => "desmiembran" ;
    VP (Pres Subj Sg P1) => "desmiembre" ;
    VP (Pres Subj Sg P2) => "desmiembres" ;
    VP (Pres Subj Sg P3) => "desmiembre" ;
    VP (Pres Subj Pl P1) => "desmembremos" ;
    VP (Pres Subj Pl P2) => "desmembréis" ;
    VP (Pres Subj Pl P3) => "desmiembren" ;
    VP (Impf Ind Sg P1) => "desmembraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmembrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmembraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmembrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmembrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmembraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmembrara" ; "desmembrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmembraras" ; "desmembrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmembrara" ; "desmembrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmembráramos" ; "desmembrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmembrarais" ; "desmembraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmembraran" ; "desmembrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desmembré" ;--# notpresent
    VP (Pret Sg P2) => "desmembraste" ;--# notpresent
    VP (Pret Sg P3) => "desmembró" ;--# notpresent
    VP (Pret Pl P1) => "desmembramos" ;--# notpresent
    VP (Pret Pl P2) => "desmembrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desmembraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmembraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmembrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmembrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmembraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmembraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmembrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmembrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmembrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmembrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmembráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmembrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmembraren" ;--# notpresent
    VP (Cond Sg P1) => "desmembraría" ;--# notpresent
    VP (Cond Sg P2) => "desmembrarías" ;--# notpresent
    VP (Cond Sg P3) => "desmembraría" ;--# notpresent
    VP (Cond Pl P1) => "desmembraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmembraríais" ;--# notpresent
    VP (Cond Pl P3) => "desmembrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmiembra" ;
    VP (Imp Sg P3) => "desmiembre" ;
    VP (Imp Pl P1) => "desmembremos" ;
    VP (Imp Pl P2) => "desmembrad" ;
    VP (Imp Pl P3) => "desmiembren" ;
    VP (Pass Sg Masc) => "desmembrado" ;
    VP (Pass Sg Fem) => "desmembrada" ;
    VP (Pass Pl Masc) => "desmembrados" ;
    VP (Pass Pl Fem) => "desmembradas"
    }
  } ;

lin desolar_V = verboV 
 {s = table {
    VI Infn => "desolar" ;
    VI Ger => "desolando" ;
    VI Part => "desolado" ;
    VP (Pres Ind Sg P1) => "desuelo" ;
    VP (Pres Ind Sg P2) => "desuelas" ;
    VP (Pres Ind Sg P3) => "desuela" ;
    VP (Pres Ind Pl P1) => "desolamos" ;
    VP (Pres Ind Pl P2) => "desoláis" ;
    VP (Pres Ind Pl P3) => "desuelan" ;
    VP (Pres Subj Sg P1) => "desuele" ;
    VP (Pres Subj Sg P2) => "desueles" ;
    VP (Pres Subj Sg P3) => "desuele" ;
    VP (Pres Subj Pl P1) => "desolemos" ;
    VP (Pres Subj Pl P2) => "desoléis" ;
    VP (Pres Subj Pl P3) => "desuelen" ;
    VP (Impf Ind Sg P1) => "desolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desolara" ; "desolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desolaras" ; "desolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desolara" ; "desolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desoláramos" ; "desolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desolarais" ; "desolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desolaran" ; "desolasen"} ;--# notpresent
    VP (Pret Sg P1) => "desolé" ;--# notpresent
    VP (Pret Sg P2) => "desolaste" ;--# notpresent
    VP (Pret Sg P3) => "desoló" ;--# notpresent
    VP (Pret Pl P1) => "desolamos" ;--# notpresent
    VP (Pret Pl P2) => "desolasteis" ;--# notpresent
    VP (Pret Pl P3) => "desolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desolaren" ;--# notpresent
    VP (Cond Sg P1) => "desolaría" ;--# notpresent
    VP (Cond Sg P2) => "desolarías" ;--# notpresent
    VP (Cond Sg P3) => "desolaría" ;--# notpresent
    VP (Cond Pl P1) => "desolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desolaríais" ;--# notpresent
    VP (Cond Pl P3) => "desolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desuela" ;
    VP (Imp Sg P3) => "desuele" ;
    VP (Imp Pl P1) => "desolemos" ;
    VP (Imp Pl P2) => "desolad" ;
    VP (Imp Pl P3) => "desuelen" ;
    VP (Pass Sg Masc) => "desolado" ;
    VP (Pass Sg Fem) => "desolada" ;
    VP (Pass Pl Masc) => "desolados" ;
    VP (Pass Pl Fem) => "desoladas"
    }
  } ;

lin desoldar_V = verboV 
 {s = table {
    VI Infn => "desoldar" ;
    VI Ger => "desoldando" ;
    VI Part => "desoldado" ;
    VP (Pres Ind Sg P1) => "desueldo" ;
    VP (Pres Ind Sg P2) => "desueldas" ;
    VP (Pres Ind Sg P3) => "desuelda" ;
    VP (Pres Ind Pl P1) => "desoldamos" ;
    VP (Pres Ind Pl P2) => "desoldáis" ;
    VP (Pres Ind Pl P3) => "desueldan" ;
    VP (Pres Subj Sg P1) => "desuelde" ;
    VP (Pres Subj Sg P2) => "desueldes" ;
    VP (Pres Subj Sg P3) => "desuelde" ;
    VP (Pres Subj Pl P1) => "desoldemos" ;
    VP (Pres Subj Pl P2) => "desoldéis" ;
    VP (Pres Subj Pl P3) => "desuelden" ;
    VP (Impf Ind Sg P1) => "desoldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desoldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desoldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desoldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desoldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desoldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desoldara" ; "desoldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desoldaras" ; "desoldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desoldara" ; "desoldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desoldáramos" ; "desoldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desoldarais" ; "desoldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desoldaran" ; "desoldasen"} ;--# notpresent
    VP (Pret Sg P1) => "desoldé" ;--# notpresent
    VP (Pret Sg P2) => "desoldaste" ;--# notpresent
    VP (Pret Sg P3) => "desoldó" ;--# notpresent
    VP (Pret Pl P1) => "desoldamos" ;--# notpresent
    VP (Pret Pl P2) => "desoldasteis" ;--# notpresent
    VP (Pret Pl P3) => "desoldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desoldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desoldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desoldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desoldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desoldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desoldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desoldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desoldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desoldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desoldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desoldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desoldaren" ;--# notpresent
    VP (Cond Sg P1) => "desoldaría" ;--# notpresent
    VP (Cond Sg P2) => "desoldarías" ;--# notpresent
    VP (Cond Sg P3) => "desoldaría" ;--# notpresent
    VP (Cond Pl P1) => "desoldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desoldaríais" ;--# notpresent
    VP (Cond Pl P3) => "desoldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desuelda" ;
    VP (Imp Sg P3) => "desuelde" ;
    VP (Imp Pl P1) => "desoldemos" ;
    VP (Imp Pl P2) => "desoldad" ;
    VP (Imp Pl P3) => "desuelden" ;
    VP (Pass Sg Masc) => "desoldado" ;
    VP (Pass Sg Fem) => "desoldada" ;
    VP (Pass Pl Masc) => "desoldados" ;
    VP (Pass Pl Fem) => "desoldadas"
    }
  } ;

lin desollar_V = verboV 
 {s = table {
    VI Infn => "desollar" ;
    VI Ger => "desollando" ;
    VI Part => "desollado" ;
    VP (Pres Ind Sg P1) => "desuello" ;
    VP (Pres Ind Sg P2) => "desuellas" ;
    VP (Pres Ind Sg P3) => "desuella" ;
    VP (Pres Ind Pl P1) => "desollamos" ;
    VP (Pres Ind Pl P2) => "desolláis" ;
    VP (Pres Ind Pl P3) => "desuellan" ;
    VP (Pres Subj Sg P1) => "desuelle" ;
    VP (Pres Subj Sg P2) => "desuelles" ;
    VP (Pres Subj Sg P3) => "desuelle" ;
    VP (Pres Subj Pl P1) => "desollemos" ;
    VP (Pres Subj Pl P2) => "desolléis" ;
    VP (Pres Subj Pl P3) => "desuellen" ;
    VP (Impf Ind Sg P1) => "desollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desollara" ; "desollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desollaras" ; "desollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desollara" ; "desollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desolláramos" ; "desollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desollarais" ; "desollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desollaran" ; "desollasen"} ;--# notpresent
    VP (Pret Sg P1) => "desollé" ;--# notpresent
    VP (Pret Sg P2) => "desollaste" ;--# notpresent
    VP (Pret Sg P3) => "desolló" ;--# notpresent
    VP (Pret Pl P1) => "desollamos" ;--# notpresent
    VP (Pret Pl P2) => "desollasteis" ;--# notpresent
    VP (Pret Pl P3) => "desollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desollaren" ;--# notpresent
    VP (Cond Sg P1) => "desollaría" ;--# notpresent
    VP (Cond Sg P2) => "desollarías" ;--# notpresent
    VP (Cond Sg P3) => "desollaría" ;--# notpresent
    VP (Cond Pl P1) => "desollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desollaríais" ;--# notpresent
    VP (Cond Pl P3) => "desollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desuella" ;
    VP (Imp Sg P3) => "desuelle" ;
    VP (Imp Pl P1) => "desollemos" ;
    VP (Imp Pl P2) => "desollad" ;
    VP (Imp Pl P3) => "desuellen" ;
    VP (Pass Sg Masc) => "desollado" ;
    VP (Pass Sg Fem) => "desollada" ;
    VP (Pass Pl Masc) => "desollados" ;
    VP (Pass Pl Fem) => "desolladas"
    }
  } ;

lin despedrar_V = verboV 
 {s = table {
    VI Infn => "despedrar" ;
    VI Ger => "despedrando" ;
    VI Part => "despedrado" ;
    VP (Pres Ind Sg P1) => "despiedro" ;
    VP (Pres Ind Sg P2) => "despiedras" ;
    VP (Pres Ind Sg P3) => "despiedra" ;
    VP (Pres Ind Pl P1) => "despedramos" ;
    VP (Pres Ind Pl P2) => "despedráis" ;
    VP (Pres Ind Pl P3) => "despiedran" ;
    VP (Pres Subj Sg P1) => "despiedre" ;
    VP (Pres Subj Sg P2) => "despiedres" ;
    VP (Pres Subj Sg P3) => "despiedre" ;
    VP (Pres Subj Pl P1) => "despedremos" ;
    VP (Pres Subj Pl P2) => "despedréis" ;
    VP (Pres Subj Pl P3) => "despiedren" ;
    VP (Impf Ind Sg P1) => "despedraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "despedrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "despedraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "despedrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "despedrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "despedraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despedrara" ; "despedrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"despedraras" ; "despedrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despedrara" ; "despedrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despedráramos" ; "despedrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"despedrarais" ; "despedraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"despedraran" ; "despedrasen"} ;--# notpresent
    VP (Pret Sg P1) => "despedré" ;--# notpresent
    VP (Pret Sg P2) => "despedraste" ;--# notpresent
    VP (Pret Sg P3) => "despedró" ;--# notpresent
    VP (Pret Pl P1) => "despedramos" ;--# notpresent
    VP (Pret Pl P2) => "despedrasteis" ;--# notpresent
    VP (Pret Pl P3) => "despedraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despedraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "despedrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "despedrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "despedraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despedraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "despedrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despedrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "despedrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "despedrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "despedráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despedrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "despedraren" ;--# notpresent
    VP (Cond Sg P1) => "despedraría" ;--# notpresent
    VP (Cond Sg P2) => "despedrarías" ;--# notpresent
    VP (Cond Sg P3) => "despedraría" ;--# notpresent
    VP (Cond Pl P1) => "despedraríamos" ;--# notpresent
    VP (Cond Pl P2) => "despedraríais" ;--# notpresent
    VP (Cond Pl P3) => "despedrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despiedra" ;
    VP (Imp Sg P3) => "despiedre" ;
    VP (Imp Pl P1) => "despedremos" ;
    VP (Imp Pl P2) => "despedrad" ;
    VP (Imp Pl P3) => "despiedren" ;
    VP (Pass Sg Masc) => "despedrado" ;
    VP (Pass Sg Fem) => "despedrada" ;
    VP (Pass Pl Masc) => "despedrados" ;
    VP (Pass Pl Fem) => "despedradas"
    }
  } ;

lin despernar_V = verboV 
 {s = table {
    VI Infn => "despernar" ;
    VI Ger => "despernando" ;
    VI Part => "despernado" ;
    VP (Pres Ind Sg P1) => "despierno" ;
    VP (Pres Ind Sg P2) => "despiernas" ;
    VP (Pres Ind Sg P3) => "despierna" ;
    VP (Pres Ind Pl P1) => "despernamos" ;
    VP (Pres Ind Pl P2) => "despernáis" ;
    VP (Pres Ind Pl P3) => "despiernan" ;
    VP (Pres Subj Sg P1) => "despierne" ;
    VP (Pres Subj Sg P2) => "despiernes" ;
    VP (Pres Subj Sg P3) => "despierne" ;
    VP (Pres Subj Pl P1) => "despernemos" ;
    VP (Pres Subj Pl P2) => "despernéis" ;
    VP (Pres Subj Pl P3) => "despiernen" ;
    VP (Impf Ind Sg P1) => "despernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "despernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "despernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "despernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "despernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "despernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despernara" ; "despernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"despernaras" ; "despernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despernara" ; "despernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despernáramos" ; "despernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"despernarais" ; "despernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"despernaran" ; "despernasen"} ;--# notpresent
    VP (Pret Sg P1) => "desperné" ;--# notpresent
    VP (Pret Sg P2) => "despernaste" ;--# notpresent
    VP (Pret Sg P3) => "despernó" ;--# notpresent
    VP (Pret Pl P1) => "despernamos" ;--# notpresent
    VP (Pret Pl P2) => "despernasteis" ;--# notpresent
    VP (Pret Pl P3) => "despernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "despernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "despernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "despernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "despernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "despernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "despernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "despernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "despernaren" ;--# notpresent
    VP (Cond Sg P1) => "despernaría" ;--# notpresent
    VP (Cond Sg P2) => "despernarías" ;--# notpresent
    VP (Cond Sg P3) => "despernaría" ;--# notpresent
    VP (Cond Pl P1) => "despernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "despernaríais" ;--# notpresent
    VP (Cond Pl P3) => "despernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despierna" ;
    VP (Imp Sg P3) => "despierne" ;
    VP (Imp Pl P1) => "despernemos" ;
    VP (Imp Pl P2) => "despernad" ;
    VP (Imp Pl P3) => "despiernen" ;
    VP (Pass Sg Masc) => "despernado" ;
    VP (Pass Sg Fem) => "despernada" ;
    VP (Pass Pl Masc) => "despernados" ;
    VP (Pass Pl Fem) => "despernadas"
    }
  } ;

lin despertar_V = verboV 
 {s = table {
    VI Infn => "despertar" ;
    VI Ger => "despertando" ;
    VI Part => "despertado" ;
    VP (Pres Ind Sg P1) => "despierto" ;
    VP (Pres Ind Sg P2) => "despiertas" ;
    VP (Pres Ind Sg P3) => "despierta" ;
    VP (Pres Ind Pl P1) => "despertamos" ;
    VP (Pres Ind Pl P2) => "despertáis" ;
    VP (Pres Ind Pl P3) => "despiertan" ;
    VP (Pres Subj Sg P1) => "despierte" ;
    VP (Pres Subj Sg P2) => "despiertes" ;
    VP (Pres Subj Sg P3) => "despierte" ;
    VP (Pres Subj Pl P1) => "despertemos" ;
    VP (Pres Subj Pl P2) => "despertéis" ;
    VP (Pres Subj Pl P3) => "despierten" ;
    VP (Impf Ind Sg P1) => "despertaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "despertabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "despertaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "despertábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "despertabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "despertaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despertara" ; "despertase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"despertaras" ; "despertases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despertara" ; "despertase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despertáramos" ; "despertásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"despertarais" ; "despertaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"despertaran" ; "despertasen"} ;--# notpresent
    VP (Pret Sg P1) => "desperté" ;--# notpresent
    VP (Pret Sg P2) => "despertaste" ;--# notpresent
    VP (Pret Sg P3) => "despertó" ;--# notpresent
    VP (Pret Pl P1) => "despertamos" ;--# notpresent
    VP (Pret Pl P2) => "despertasteis" ;--# notpresent
    VP (Pret Pl P3) => "despertaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despertaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "despertarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "despertará" ;--# notpresent
    VP (Fut Ind Pl P1) => "despertaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despertaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "despertarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despertare" ;--# notpresent
    VP (Fut Subj Sg P2) => "despertares" ;--# notpresent
    VP (Fut Subj Sg P3) => "despertare" ;--# notpresent
    VP (Fut Subj Pl P1) => "despertáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despertareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "despertaren" ;--# notpresent
    VP (Cond Sg P1) => "despertaría" ;--# notpresent
    VP (Cond Sg P2) => "despertarías" ;--# notpresent
    VP (Cond Sg P3) => "despertaría" ;--# notpresent
    VP (Cond Pl P1) => "despertaríamos" ;--# notpresent
    VP (Cond Pl P2) => "despertaríais" ;--# notpresent
    VP (Cond Pl P3) => "despertarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despierta" ;
    VP (Imp Sg P3) => "despierte" ;
    VP (Imp Pl P1) => "despertemos" ;
    VP (Imp Pl P2) => "despertad" ;
    VP (Imp Pl P3) => "despierten" ;
    VP (Pass Sg Masc) => "despertado" ;
    VP (Pass Sg Fem) => "despertada" ;
    VP (Pass Pl Masc) => "despertados" ;
    VP (Pass Pl Fem) => "despertadas"
    }
  } ;

lin despoblar_V = verboV 
 {s = table {
    VI Infn => "despoblar" ;
    VI Ger => "despoblando" ;
    VI Part => "despoblado" ;
    VP (Pres Ind Sg P1) => "despueblo" ;
    VP (Pres Ind Sg P2) => "despueblas" ;
    VP (Pres Ind Sg P3) => "despuebla" ;
    VP (Pres Ind Pl P1) => "despoblamos" ;
    VP (Pres Ind Pl P2) => "despobláis" ;
    VP (Pres Ind Pl P3) => "despueblan" ;
    VP (Pres Subj Sg P1) => "despueble" ;
    VP (Pres Subj Sg P2) => "despuebles" ;
    VP (Pres Subj Sg P3) => "despueble" ;
    VP (Pres Subj Pl P1) => "despoblemos" ;
    VP (Pres Subj Pl P2) => "despobléis" ;
    VP (Pres Subj Pl P3) => "despueblen" ;
    VP (Impf Ind Sg P1) => "despoblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "despoblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "despoblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "despoblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "despoblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "despoblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despoblara" ; "despoblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"despoblaras" ; "despoblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despoblara" ; "despoblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despobláramos" ; "despoblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"despoblarais" ; "despoblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"despoblaran" ; "despoblasen"} ;--# notpresent
    VP (Pret Sg P1) => "despoblé" ;--# notpresent
    VP (Pret Sg P2) => "despoblaste" ;--# notpresent
    VP (Pret Sg P3) => "despobló" ;--# notpresent
    VP (Pret Pl P1) => "despoblamos" ;--# notpresent
    VP (Pret Pl P2) => "despoblasteis" ;--# notpresent
    VP (Pret Pl P3) => "despoblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despoblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "despoblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "despoblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "despoblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despoblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "despoblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despoblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "despoblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "despoblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "despobláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despoblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "despoblaren" ;--# notpresent
    VP (Cond Sg P1) => "despoblaría" ;--# notpresent
    VP (Cond Sg P2) => "despoblarías" ;--# notpresent
    VP (Cond Sg P3) => "despoblaría" ;--# notpresent
    VP (Cond Pl P1) => "despoblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "despoblaríais" ;--# notpresent
    VP (Cond Pl P3) => "despoblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despuebla" ;
    VP (Imp Sg P3) => "despueble" ;
    VP (Imp Pl P1) => "despoblemos" ;
    VP (Imp Pl P2) => "despoblad" ;
    VP (Imp Pl P3) => "despueblen" ;
    VP (Pass Sg Masc) => "despoblado" ;
    VP (Pass Sg Fem) => "despoblada" ;
    VP (Pass Pl Masc) => "despoblados" ;
    VP (Pass Pl Fem) => "despobladas"
    }
  } ;

lin destentar_V = verboV 
 {s = table {
    VI Infn => "destentar" ;
    VI Ger => "destentando" ;
    VI Part => "destentado" ;
    VP (Pres Ind Sg P1) => "destiento" ;
    VP (Pres Ind Sg P2) => "destientas" ;
    VP (Pres Ind Sg P3) => "destienta" ;
    VP (Pres Ind Pl P1) => "destentamos" ;
    VP (Pres Ind Pl P2) => "destentáis" ;
    VP (Pres Ind Pl P3) => "destientan" ;
    VP (Pres Subj Sg P1) => "destiente" ;
    VP (Pres Subj Sg P2) => "destientes" ;
    VP (Pres Subj Sg P3) => "destiente" ;
    VP (Pres Subj Pl P1) => "destentemos" ;
    VP (Pres Subj Pl P2) => "destentéis" ;
    VP (Pres Subj Pl P3) => "destienten" ;
    VP (Impf Ind Sg P1) => "destentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "destentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "destentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "destentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "destentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "destentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"destentara" ; "destentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"destentaras" ; "destentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"destentara" ; "destentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"destentáramos" ; "destentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"destentarais" ; "destentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"destentaran" ; "destentasen"} ;--# notpresent
    VP (Pret Sg P1) => "destenté" ;--# notpresent
    VP (Pret Sg P2) => "destentaste" ;--# notpresent
    VP (Pret Sg P3) => "destentó" ;--# notpresent
    VP (Pret Pl P1) => "destentamos" ;--# notpresent
    VP (Pret Pl P2) => "destentasteis" ;--# notpresent
    VP (Pret Pl P3) => "destentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "destentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "destentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "destentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "destentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "destentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "destentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "destentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "destentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "destentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "destentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "destentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "destentaren" ;--# notpresent
    VP (Cond Sg P1) => "destentaría" ;--# notpresent
    VP (Cond Sg P2) => "destentarías" ;--# notpresent
    VP (Cond Sg P3) => "destentaría" ;--# notpresent
    VP (Cond Pl P1) => "destentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "destentaríais" ;--# notpresent
    VP (Cond Pl P3) => "destentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "destienta" ;
    VP (Imp Sg P3) => "destiente" ;
    VP (Imp Pl P1) => "destentemos" ;
    VP (Imp Pl P2) => "destentad" ;
    VP (Imp Pl P3) => "destienten" ;
    VP (Pass Sg Masc) => "destentado" ;
    VP (Pass Sg Fem) => "destentada" ;
    VP (Pass Pl Masc) => "destentados" ;
    VP (Pass Pl Fem) => "destentadas"
    }
  } ;

lin desterrar_V = verboV 
 {s = table {
    VI Infn => "desterrar" ;
    VI Ger => "desterrando" ;
    VI Part => "desterrado" ;
    VP (Pres Ind Sg P1) => "destierro" ;
    VP (Pres Ind Sg P2) => "destierras" ;
    VP (Pres Ind Sg P3) => "destierra" ;
    VP (Pres Ind Pl P1) => "desterramos" ;
    VP (Pres Ind Pl P2) => "desterráis" ;
    VP (Pres Ind Pl P3) => "destierran" ;
    VP (Pres Subj Sg P1) => "destierre" ;
    VP (Pres Subj Sg P2) => "destierres" ;
    VP (Pres Subj Sg P3) => "destierre" ;
    VP (Pres Subj Pl P1) => "desterremos" ;
    VP (Pres Subj Pl P2) => "desterréis" ;
    VP (Pres Subj Pl P3) => "destierren" ;
    VP (Impf Ind Sg P1) => "desterraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desterrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desterraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desterrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desterrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desterraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desterrara" ; "desterrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desterraras" ; "desterrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desterrara" ; "desterrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desterráramos" ; "desterrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desterrarais" ; "desterraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desterraran" ; "desterrasen"} ;--# notpresent
    VP (Pret Sg P1) => "desterré" ;--# notpresent
    VP (Pret Sg P2) => "desterraste" ;--# notpresent
    VP (Pret Sg P3) => "desterró" ;--# notpresent
    VP (Pret Pl P1) => "desterramos" ;--# notpresent
    VP (Pret Pl P2) => "desterrasteis" ;--# notpresent
    VP (Pret Pl P3) => "desterraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desterraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desterrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desterrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desterraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desterraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desterrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desterrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desterrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desterrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desterráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desterrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desterraren" ;--# notpresent
    VP (Cond Sg P1) => "desterraría" ;--# notpresent
    VP (Cond Sg P2) => "desterrarías" ;--# notpresent
    VP (Cond Sg P3) => "desterraría" ;--# notpresent
    VP (Cond Pl P1) => "desterraríamos" ;--# notpresent
    VP (Cond Pl P2) => "desterraríais" ;--# notpresent
    VP (Cond Pl P3) => "desterrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "destierra" ;
    VP (Imp Sg P3) => "destierre" ;
    VP (Imp Pl P1) => "desterremos" ;
    VP (Imp Pl P2) => "desterrad" ;
    VP (Imp Pl P3) => "destierren" ;
    VP (Pass Sg Masc) => "desterrado" ;
    VP (Pass Sg Fem) => "desterrada" ;
    VP (Pass Pl Masc) => "desterrados" ;
    VP (Pass Pl Fem) => "desterradas"
    }
  } ;

lin desventar_V = verboV 
 {s = table {
    VI Infn => "desventar" ;
    VI Ger => "desventando" ;
    VI Part => "desventado" ;
    VP (Pres Ind Sg P1) => "desviento" ;
    VP (Pres Ind Sg P2) => "desvientas" ;
    VP (Pres Ind Sg P3) => "desvienta" ;
    VP (Pres Ind Pl P1) => "desventamos" ;
    VP (Pres Ind Pl P2) => "desventáis" ;
    VP (Pres Ind Pl P3) => "desvientan" ;
    VP (Pres Subj Sg P1) => "desviente" ;
    VP (Pres Subj Sg P2) => "desvientes" ;
    VP (Pres Subj Sg P3) => "desviente" ;
    VP (Pres Subj Pl P1) => "desventemos" ;
    VP (Pres Subj Pl P2) => "desventéis" ;
    VP (Pres Subj Pl P3) => "desvienten" ;
    VP (Impf Ind Sg P1) => "desventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "desventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "desventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "desventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desventara" ; "desventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desventaras" ; "desventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desventara" ; "desventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desventáramos" ; "desventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desventarais" ; "desventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desventaran" ; "desventasen"} ;--# notpresent
    VP (Pret Sg P1) => "desventé" ;--# notpresent
    VP (Pret Sg P2) => "desventaste" ;--# notpresent
    VP (Pret Sg P3) => "desventó" ;--# notpresent
    VP (Pret Pl P1) => "desventamos" ;--# notpresent
    VP (Pret Pl P2) => "desventasteis" ;--# notpresent
    VP (Pret Pl P3) => "desventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "desventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "desventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "desventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desventaren" ;--# notpresent
    VP (Cond Sg P1) => "desventaría" ;--# notpresent
    VP (Cond Sg P2) => "desventarías" ;--# notpresent
    VP (Cond Sg P3) => "desventaría" ;--# notpresent
    VP (Cond Pl P1) => "desventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "desventaríais" ;--# notpresent
    VP (Cond Pl P3) => "desventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desvienta" ;
    VP (Imp Sg P3) => "desviente" ;
    VP (Imp Pl P1) => "desventemos" ;
    VP (Imp Pl P2) => "desventad" ;
    VP (Imp Pl P3) => "desvienten" ;
    VP (Pass Sg Masc) => "desventado" ;
    VP (Pass Sg Fem) => "desventada" ;
    VP (Pass Pl Masc) => "desventados" ;
    VP (Pass Pl Fem) => "desventadas"
    }
  } ;

lin dezmar_V = verboV 
 {s = table {
    VI Infn => "dezmar" ;
    VI Ger => "dezmando" ;
    VI Part => "dezmado" ;
    VP (Pres Ind Sg P1) => "diezmo" ;
    VP (Pres Ind Sg P2) => "diezmas" ;
    VP (Pres Ind Sg P3) => "diezma" ;
    VP (Pres Ind Pl P1) => "dezmamos" ;
    VP (Pres Ind Pl P2) => "dezmáis" ;
    VP (Pres Ind Pl P3) => "diezman" ;
    VP (Pres Subj Sg P1) => "diezme" ;
    VP (Pres Subj Sg P2) => "diezmes" ;
    VP (Pres Subj Sg P3) => "diezme" ;
    VP (Pres Subj Pl P1) => "dezmemos" ;
    VP (Pres Subj Pl P2) => "dezméis" ;
    VP (Pres Subj Pl P3) => "diezmen" ;
    VP (Impf Ind Sg P1) => "dezmaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "dezmabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "dezmaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "dezmábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dezmabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "dezmaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dezmara" ; "dezmase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dezmaras" ; "dezmases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dezmara" ; "dezmase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"dezmáramos" ; "dezmásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dezmarais" ; "dezmaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dezmaran" ; "dezmasen"} ;--# notpresent
    VP (Pret Sg P1) => "dezmé" ;--# notpresent
    VP (Pret Sg P2) => "dezmaste" ;--# notpresent
    VP (Pret Sg P3) => "dezmó" ;--# notpresent
    VP (Pret Pl P1) => "dezmamos" ;--# notpresent
    VP (Pret Pl P2) => "dezmasteis" ;--# notpresent
    VP (Pret Pl P3) => "dezmaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "dezmaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dezmarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dezmará" ;--# notpresent
    VP (Fut Ind Pl P1) => "dezmaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "dezmaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dezmarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dezmare" ;--# notpresent
    VP (Fut Subj Sg P2) => "dezmares" ;--# notpresent
    VP (Fut Subj Sg P3) => "dezmare" ;--# notpresent
    VP (Fut Subj Pl P1) => "dezmáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dezmareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dezmaren" ;--# notpresent
    VP (Cond Sg P1) => "dezmaría" ;--# notpresent
    VP (Cond Sg P2) => "dezmarías" ;--# notpresent
    VP (Cond Sg P3) => "dezmaría" ;--# notpresent
    VP (Cond Pl P1) => "dezmaríamos" ;--# notpresent
    VP (Cond Pl P2) => "dezmaríais" ;--# notpresent
    VP (Cond Pl P3) => "dezmarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "diezma" ;
    VP (Imp Sg P3) => "diezme" ;
    VP (Imp Pl P1) => "dezmemos" ;
    VP (Imp Pl P2) => "dezmad" ;
    VP (Imp Pl P3) => "diezmen" ;
    VP (Pass Sg Masc) => "dezmado" ;
    VP (Pass Sg Fem) => "dezmada" ;
    VP (Pass Pl Masc) => "dezmados" ;
    VP (Pass Pl Fem) => "dezmadas"
    }
  } ;

lin discontar_V = verboV 
 {s = table {
    VI Infn => "discontar" ;
    VI Ger => "discontando" ;
    VI Part => "discontado" ;
    VP (Pres Ind Sg P1) => "discuento" ;
    VP (Pres Ind Sg P2) => "discuentas" ;
    VP (Pres Ind Sg P3) => "discuenta" ;
    VP (Pres Ind Pl P1) => "discontamos" ;
    VP (Pres Ind Pl P2) => "discontáis" ;
    VP (Pres Ind Pl P3) => "discuentan" ;
    VP (Pres Subj Sg P1) => "discuente" ;
    VP (Pres Subj Sg P2) => "discuentes" ;
    VP (Pres Subj Sg P3) => "discuente" ;
    VP (Pres Subj Pl P1) => "discontemos" ;
    VP (Pres Subj Pl P2) => "discontéis" ;
    VP (Pres Subj Pl P3) => "discuenten" ;
    VP (Impf Ind Sg P1) => "discontaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "discontabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "discontaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "discontábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "discontabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "discontaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"discontara" ; "discontase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"discontaras" ; "discontases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"discontara" ; "discontase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"discontáramos" ; "discontásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"discontarais" ; "discontaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"discontaran" ; "discontasen"} ;--# notpresent
    VP (Pret Sg P1) => "disconté" ;--# notpresent
    VP (Pret Sg P2) => "discontaste" ;--# notpresent
    VP (Pret Sg P3) => "discontó" ;--# notpresent
    VP (Pret Pl P1) => "discontamos" ;--# notpresent
    VP (Pret Pl P2) => "discontasteis" ;--# notpresent
    VP (Pret Pl P3) => "discontaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "discontaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "discontarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "discontará" ;--# notpresent
    VP (Fut Ind Pl P1) => "discontaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "discontaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "discontarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "discontare" ;--# notpresent
    VP (Fut Subj Sg P2) => "discontares" ;--# notpresent
    VP (Fut Subj Sg P3) => "discontare" ;--# notpresent
    VP (Fut Subj Pl P1) => "discontáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "discontareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "discontaren" ;--# notpresent
    VP (Cond Sg P1) => "discontaría" ;--# notpresent
    VP (Cond Sg P2) => "discontarías" ;--# notpresent
    VP (Cond Sg P3) => "discontaría" ;--# notpresent
    VP (Cond Pl P1) => "discontaríamos" ;--# notpresent
    VP (Cond Pl P2) => "discontaríais" ;--# notpresent
    VP (Cond Pl P3) => "discontarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "discuenta" ;
    VP (Imp Sg P3) => "discuente" ;
    VP (Imp Pl P1) => "discontemos" ;
    VP (Imp Pl P2) => "discontad" ;
    VP (Imp Pl P3) => "discuenten" ;
    VP (Pass Sg Masc) => "discontado" ;
    VP (Pass Sg Fem) => "discontada" ;
    VP (Pass Pl Masc) => "discontados" ;
    VP (Pass Pl Fem) => "discontadas"
    }
  } ;

lin discordar_V = verboV 
 {s = table {
    VI Infn => "discordar" ;
    VI Ger => "discordando" ;
    VI Part => "discordado" ;
    VP (Pres Ind Sg P1) => "discuerdo" ;
    VP (Pres Ind Sg P2) => "discuerdas" ;
    VP (Pres Ind Sg P3) => "discuerda" ;
    VP (Pres Ind Pl P1) => "discordamos" ;
    VP (Pres Ind Pl P2) => "discordáis" ;
    VP (Pres Ind Pl P3) => "discuerdan" ;
    VP (Pres Subj Sg P1) => "discuerde" ;
    VP (Pres Subj Sg P2) => "discuerdes" ;
    VP (Pres Subj Sg P3) => "discuerde" ;
    VP (Pres Subj Pl P1) => "discordemos" ;
    VP (Pres Subj Pl P2) => "discordéis" ;
    VP (Pres Subj Pl P3) => "discuerden" ;
    VP (Impf Ind Sg P1) => "discordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "discordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "discordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "discordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "discordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "discordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"discordara" ; "discordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"discordaras" ; "discordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"discordara" ; "discordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"discordáramos" ; "discordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"discordarais" ; "discordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"discordaran" ; "discordasen"} ;--# notpresent
    VP (Pret Sg P1) => "discordé" ;--# notpresent
    VP (Pret Sg P2) => "discordaste" ;--# notpresent
    VP (Pret Sg P3) => "discordó" ;--# notpresent
    VP (Pret Pl P1) => "discordamos" ;--# notpresent
    VP (Pret Pl P2) => "discordasteis" ;--# notpresent
    VP (Pret Pl P3) => "discordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "discordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "discordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "discordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "discordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "discordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "discordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "discordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "discordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "discordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "discordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "discordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "discordaren" ;--# notpresent
    VP (Cond Sg P1) => "discordaría" ;--# notpresent
    VP (Cond Sg P2) => "discordarías" ;--# notpresent
    VP (Cond Sg P3) => "discordaría" ;--# notpresent
    VP (Cond Pl P1) => "discordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "discordaríais" ;--# notpresent
    VP (Cond Pl P3) => "discordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "discuerda" ;
    VP (Imp Sg P3) => "discuerde" ;
    VP (Imp Pl P1) => "discordemos" ;
    VP (Imp Pl P2) => "discordad" ;
    VP (Imp Pl P3) => "discuerden" ;
    VP (Pass Sg Masc) => "discordado" ;
    VP (Pass Sg Fem) => "discordada" ;
    VP (Pass Pl Masc) => "discordados" ;
    VP (Pass Pl Fem) => "discordadas"
    }
  } ;

lin disonar_V = verboV 
 {s = table {
    VI Infn => "disonar" ;
    VI Ger => "disonando" ;
    VI Part => "disonado" ;
    VP (Pres Ind Sg P1) => "disueno" ;
    VP (Pres Ind Sg P2) => "disuenas" ;
    VP (Pres Ind Sg P3) => "disuena" ;
    VP (Pres Ind Pl P1) => "disonamos" ;
    VP (Pres Ind Pl P2) => "disonáis" ;
    VP (Pres Ind Pl P3) => "disuenan" ;
    VP (Pres Subj Sg P1) => "disuene" ;
    VP (Pres Subj Sg P2) => "disuenes" ;
    VP (Pres Subj Sg P3) => "disuene" ;
    VP (Pres Subj Pl P1) => "disonemos" ;
    VP (Pres Subj Pl P2) => "disonéis" ;
    VP (Pres Subj Pl P3) => "disuenen" ;
    VP (Impf Ind Sg P1) => "disonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "disonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "disonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "disonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "disonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "disonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"disonara" ; "disonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"disonaras" ; "disonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"disonara" ; "disonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"disonáramos" ; "disonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"disonarais" ; "disonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"disonaran" ; "disonasen"} ;--# notpresent
    VP (Pret Sg P1) => "disoné" ;--# notpresent
    VP (Pret Sg P2) => "disonaste" ;--# notpresent
    VP (Pret Sg P3) => "disonó" ;--# notpresent
    VP (Pret Pl P1) => "disonamos" ;--# notpresent
    VP (Pret Pl P2) => "disonasteis" ;--# notpresent
    VP (Pret Pl P3) => "disonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "disonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "disonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "disonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "disonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "disonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "disonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "disonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "disonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "disonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "disonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "disonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "disonaren" ;--# notpresent
    VP (Cond Sg P1) => "disonaría" ;--# notpresent
    VP (Cond Sg P2) => "disonarías" ;--# notpresent
    VP (Cond Sg P3) => "disonaría" ;--# notpresent
    VP (Cond Pl P1) => "disonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "disonaríais" ;--# notpresent
    VP (Cond Pl P3) => "disonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "disuena" ;
    VP (Imp Sg P3) => "disuene" ;
    VP (Imp Pl P1) => "disonemos" ;
    VP (Imp Pl P2) => "disonad" ;
    VP (Imp Pl P3) => "disuenen" ;
    VP (Pass Sg Masc) => "disonado" ;
    VP (Pass Sg Fem) => "disonada" ;
    VP (Pass Pl Masc) => "disonados" ;
    VP (Pass Pl Fem) => "disonadas"
    }
  } ;

lin dolar_V = verboV 
 {s = table {
    VI Infn => "dolar" ;
    VI Ger => "dolando" ;
    VI Part => "dolado" ;
    VP (Pres Ind Sg P1) => "duelo" ;
    VP (Pres Ind Sg P2) => "duelas" ;
    VP (Pres Ind Sg P3) => "duela" ;
    VP (Pres Ind Pl P1) => "dolamos" ;
    VP (Pres Ind Pl P2) => "doláis" ;
    VP (Pres Ind Pl P3) => "duelan" ;
    VP (Pres Subj Sg P1) => "duele" ;
    VP (Pres Subj Sg P2) => "dueles" ;
    VP (Pres Subj Sg P3) => "duele" ;
    VP (Pres Subj Pl P1) => "dolemos" ;
    VP (Pres Subj Pl P2) => "doléis" ;
    VP (Pres Subj Pl P3) => "duelen" ;
    VP (Impf Ind Sg P1) => "dolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "dolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "dolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "dolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "dolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "dolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dolara" ; "dolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dolaras" ; "dolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dolara" ; "dolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"doláramos" ; "dolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dolarais" ; "dolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dolaran" ; "dolasen"} ;--# notpresent
    VP (Pret Sg P1) => "dolé" ;--# notpresent
    VP (Pret Sg P2) => "dolaste" ;--# notpresent
    VP (Pret Sg P3) => "doló" ;--# notpresent
    VP (Pret Pl P1) => "dolamos" ;--# notpresent
    VP (Pret Pl P2) => "dolasteis" ;--# notpresent
    VP (Pret Pl P3) => "dolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "dolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "dolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "dolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "dolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "dolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "dolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "dolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "dolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "doláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dolaren" ;--# notpresent
    VP (Cond Sg P1) => "dolaría" ;--# notpresent
    VP (Cond Sg P2) => "dolarías" ;--# notpresent
    VP (Cond Sg P3) => "dolaría" ;--# notpresent
    VP (Cond Pl P1) => "dolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "dolaríais" ;--# notpresent
    VP (Cond Pl P3) => "dolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "duela" ;
    VP (Imp Sg P3) => "duele" ;
    VP (Imp Pl P1) => "dolemos" ;
    VP (Imp Pl P2) => "dolad" ;
    VP (Imp Pl P3) => "duelen" ;
    VP (Pass Sg Masc) => "dolado" ;
    VP (Pass Sg Fem) => "dolada" ;
    VP (Pass Pl Masc) => "dolados" ;
    VP (Pass Pl Fem) => "doladas"
    }
  } ;

lin empajolar_V = verboV 
 {s = table {
    VI Infn => "empajolar" ;
    VI Ger => "empajolando" ;
    VI Part => "empajolado" ;
    VP (Pres Ind Sg P1) => "empajuelo" ;
    VP (Pres Ind Sg P2) => "empajuelas" ;
    VP (Pres Ind Sg P3) => "empajuela" ;
    VP (Pres Ind Pl P1) => "empajolamos" ;
    VP (Pres Ind Pl P2) => "empajoláis" ;
    VP (Pres Ind Pl P3) => "empajuelan" ;
    VP (Pres Subj Sg P1) => "empajuele" ;
    VP (Pres Subj Sg P2) => "empajueles" ;
    VP (Pres Subj Sg P3) => "empajuele" ;
    VP (Pres Subj Pl P1) => "empajolemos" ;
    VP (Pres Subj Pl P2) => "empajoléis" ;
    VP (Pres Subj Pl P3) => "empajuelen" ;
    VP (Impf Ind Sg P1) => "empajolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "empajolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "empajolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "empajolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empajolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empajolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empajolara" ; "empajolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empajolaras" ; "empajolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empajolara" ; "empajolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empajoláramos" ; "empajolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empajolarais" ; "empajolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empajolaran" ; "empajolasen"} ;--# notpresent
    VP (Pret Sg P1) => "empajolé" ;--# notpresent
    VP (Pret Sg P2) => "empajolaste" ;--# notpresent
    VP (Pret Sg P3) => "empajoló" ;--# notpresent
    VP (Pret Pl P1) => "empajolamos" ;--# notpresent
    VP (Pret Pl P2) => "empajolasteis" ;--# notpresent
    VP (Pret Pl P3) => "empajolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empajolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empajolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empajolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "empajolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empajolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empajolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empajolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "empajolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "empajolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "empajoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empajolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empajolaren" ;--# notpresent
    VP (Cond Sg P1) => "empajolaría" ;--# notpresent
    VP (Cond Sg P2) => "empajolarías" ;--# notpresent
    VP (Cond Sg P3) => "empajolaría" ;--# notpresent
    VP (Cond Pl P1) => "empajolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "empajolaríais" ;--# notpresent
    VP (Cond Pl P3) => "empajolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empajuela" ;
    VP (Imp Sg P3) => "empajuele" ;
    VP (Imp Pl P1) => "empajolemos" ;
    VP (Imp Pl P2) => "empajolad" ;
    VP (Imp Pl P3) => "empajuelen" ;
    VP (Pass Sg Masc) => "empajolado" ;
    VP (Pass Sg Fem) => "empajolada" ;
    VP (Pass Pl Masc) => "empajolados" ;
    VP (Pass Pl Fem) => "empajoladas"
    }
  } ;

lin emparentar_V = verboV 
 {s = table {
    VI Infn => "emparentar" ;
    VI Ger => "emparentando" ;
    VI Part => "emparentado" ;
    VP (Pres Ind Sg P1) => "empariento" ;
    VP (Pres Ind Sg P2) => "emparientas" ;
    VP (Pres Ind Sg P3) => "emparienta" ;
    VP (Pres Ind Pl P1) => "emparentamos" ;
    VP (Pres Ind Pl P2) => "emparentáis" ;
    VP (Pres Ind Pl P3) => "emparientan" ;
    VP (Pres Subj Sg P1) => "empariente" ;
    VP (Pres Subj Sg P2) => "emparientes" ;
    VP (Pres Subj Sg P3) => "empariente" ;
    VP (Pres Subj Pl P1) => "emparentemos" ;
    VP (Pres Subj Pl P2) => "emparentéis" ;
    VP (Pres Subj Pl P3) => "emparienten" ;
    VP (Impf Ind Sg P1) => "emparentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "emparentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "emparentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "emparentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "emparentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "emparentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"emparentara" ; "emparentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"emparentaras" ; "emparentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"emparentara" ; "emparentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"emparentáramos" ; "emparentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"emparentarais" ; "emparentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"emparentaran" ; "emparentasen"} ;--# notpresent
    VP (Pret Sg P1) => "emparenté" ;--# notpresent
    VP (Pret Sg P2) => "emparentaste" ;--# notpresent
    VP (Pret Sg P3) => "emparentó" ;--# notpresent
    VP (Pret Pl P1) => "emparentamos" ;--# notpresent
    VP (Pret Pl P2) => "emparentasteis" ;--# notpresent
    VP (Pret Pl P3) => "emparentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "emparentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "emparentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "emparentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "emparentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "emparentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "emparentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "emparentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "emparentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "emparentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "emparentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "emparentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "emparentaren" ;--# notpresent
    VP (Cond Sg P1) => "emparentaría" ;--# notpresent
    VP (Cond Sg P2) => "emparentarías" ;--# notpresent
    VP (Cond Sg P3) => "emparentaría" ;--# notpresent
    VP (Cond Pl P1) => "emparentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "emparentaríais" ;--# notpresent
    VP (Cond Pl P3) => "emparentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "emparienta" ;
    VP (Imp Sg P3) => "empariente" ;
    VP (Imp Pl P1) => "emparentemos" ;
    VP (Imp Pl P2) => "emparentad" ;
    VP (Imp Pl P3) => "emparienten" ;
    VP (Pass Sg Masc) => "emparentado" ;
    VP (Pass Sg Fem) => "emparentada" ;
    VP (Pass Pl Masc) => "emparentados" ;
    VP (Pass Pl Fem) => "emparentadas"
    }
  } ;

lin empedrar_V = verboV 
 {s = table {
    VI Infn => "empedrar" ;
    VI Ger => "empedrando" ;
    VI Part => "empedrado" ;
    VP (Pres Ind Sg P1) => "empiedro" ;
    VP (Pres Ind Sg P2) => "empiedras" ;
    VP (Pres Ind Sg P3) => "empiedra" ;
    VP (Pres Ind Pl P1) => "empedramos" ;
    VP (Pres Ind Pl P2) => "empedráis" ;
    VP (Pres Ind Pl P3) => "empiedran" ;
    VP (Pres Subj Sg P1) => "empiedre" ;
    VP (Pres Subj Sg P2) => "empiedres" ;
    VP (Pres Subj Sg P3) => "empiedre" ;
    VP (Pres Subj Pl P1) => "empedremos" ;
    VP (Pres Subj Pl P2) => "empedréis" ;
    VP (Pres Subj Pl P3) => "empiedren" ;
    VP (Impf Ind Sg P1) => "empedraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "empedrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "empedraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "empedrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "empedrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "empedraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"empedrara" ; "empedrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"empedraras" ; "empedrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"empedrara" ; "empedrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"empedráramos" ; "empedrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"empedrarais" ; "empedraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"empedraran" ; "empedrasen"} ;--# notpresent
    VP (Pret Sg P1) => "empedré" ;--# notpresent
    VP (Pret Sg P2) => "empedraste" ;--# notpresent
    VP (Pret Sg P3) => "empedró" ;--# notpresent
    VP (Pret Pl P1) => "empedramos" ;--# notpresent
    VP (Pret Pl P2) => "empedrasteis" ;--# notpresent
    VP (Pret Pl P3) => "empedraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "empedraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "empedrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "empedrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "empedraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "empedraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "empedrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "empedrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "empedrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "empedrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "empedráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "empedrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "empedraren" ;--# notpresent
    VP (Cond Sg P1) => "empedraría" ;--# notpresent
    VP (Cond Sg P2) => "empedrarías" ;--# notpresent
    VP (Cond Sg P3) => "empedraría" ;--# notpresent
    VP (Cond Pl P1) => "empedraríamos" ;--# notpresent
    VP (Cond Pl P2) => "empedraríais" ;--# notpresent
    VP (Cond Pl P3) => "empedrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "empiedra" ;
    VP (Imp Sg P3) => "empiedre" ;
    VP (Imp Pl P1) => "empedremos" ;
    VP (Imp Pl P2) => "empedrad" ;
    VP (Imp Pl P3) => "empiedren" ;
    VP (Pass Sg Masc) => "empedrado" ;
    VP (Pass Sg Fem) => "empedrada" ;
    VP (Pass Pl Masc) => "empedrados" ;
    VP (Pass Pl Fem) => "empedradas"
    }
  } ;

lin encentar_V = verboV 
 {s = table {
    VI Infn => "encentar" ;
    VI Ger => "encentando" ;
    VI Part => "encentado" ;
    VP (Pres Ind Sg P1) => "enciento" ;
    VP (Pres Ind Sg P2) => "encientas" ;
    VP (Pres Ind Sg P3) => "encienta" ;
    VP (Pres Ind Pl P1) => "encentamos" ;
    VP (Pres Ind Pl P2) => "encentáis" ;
    VP (Pres Ind Pl P3) => "encientan" ;
    VP (Pres Subj Sg P1) => "enciente" ;
    VP (Pres Subj Sg P2) => "encientes" ;
    VP (Pres Subj Sg P3) => "enciente" ;
    VP (Pres Subj Pl P1) => "encentemos" ;
    VP (Pres Subj Pl P2) => "encentéis" ;
    VP (Pres Subj Pl P3) => "encienten" ;
    VP (Impf Ind Sg P1) => "encentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encentara" ; "encentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encentaras" ; "encentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encentara" ; "encentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encentáramos" ; "encentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encentarais" ; "encentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encentaran" ; "encentasen"} ;--# notpresent
    VP (Pret Sg P1) => "encenté" ;--# notpresent
    VP (Pret Sg P2) => "encentaste" ;--# notpresent
    VP (Pret Sg P3) => "encentó" ;--# notpresent
    VP (Pret Pl P1) => "encentamos" ;--# notpresent
    VP (Pret Pl P2) => "encentasteis" ;--# notpresent
    VP (Pret Pl P3) => "encentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encentaren" ;--# notpresent
    VP (Cond Sg P1) => "encentaría" ;--# notpresent
    VP (Cond Sg P2) => "encentarías" ;--# notpresent
    VP (Cond Sg P3) => "encentaría" ;--# notpresent
    VP (Cond Pl P1) => "encentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "encentaríais" ;--# notpresent
    VP (Cond Pl P3) => "encentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encienta" ;
    VP (Imp Sg P3) => "enciente" ;
    VP (Imp Pl P1) => "encentemos" ;
    VP (Imp Pl P2) => "encentad" ;
    VP (Imp Pl P3) => "encienten" ;
    VP (Pass Sg Masc) => "encentado" ;
    VP (Pass Sg Fem) => "encentada" ;
    VP (Pass Pl Masc) => "encentados" ;
    VP (Pass Pl Fem) => "encentadas"
    }
  } ;

lin encerrar_V = verboV 
 {s = table {
    VI Infn => "encerrar" ;
    VI Ger => "encerrando" ;
    VI Part => "encerrado" ;
    VP (Pres Ind Sg P1) => "encierro" ;
    VP (Pres Ind Sg P2) => "encierras" ;
    VP (Pres Ind Sg P3) => "encierra" ;
    VP (Pres Ind Pl P1) => "encerramos" ;
    VP (Pres Ind Pl P2) => "encerráis" ;
    VP (Pres Ind Pl P3) => "encierran" ;
    VP (Pres Subj Sg P1) => "encierre" ;
    VP (Pres Subj Sg P2) => "encierres" ;
    VP (Pres Subj Sg P3) => "encierre" ;
    VP (Pres Subj Pl P1) => "encerremos" ;
    VP (Pres Subj Pl P2) => "encerréis" ;
    VP (Pres Subj Pl P3) => "encierren" ;
    VP (Impf Ind Sg P1) => "encerraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encerrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encerraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encerrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encerrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encerraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encerrara" ; "encerrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encerraras" ; "encerrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encerrara" ; "encerrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encerráramos" ; "encerrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encerrarais" ; "encerraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encerraran" ; "encerrasen"} ;--# notpresent
    VP (Pret Sg P1) => "encerré" ;--# notpresent
    VP (Pret Sg P2) => "encerraste" ;--# notpresent
    VP (Pret Sg P3) => "encerró" ;--# notpresent
    VP (Pret Pl P1) => "encerramos" ;--# notpresent
    VP (Pret Pl P2) => "encerrasteis" ;--# notpresent
    VP (Pret Pl P3) => "encerraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encerraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encerrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encerrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encerraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encerraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encerrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encerrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encerrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encerrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encerráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encerrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encerraren" ;--# notpresent
    VP (Cond Sg P1) => "encerraría" ;--# notpresent
    VP (Cond Sg P2) => "encerrarías" ;--# notpresent
    VP (Cond Sg P3) => "encerraría" ;--# notpresent
    VP (Cond Pl P1) => "encerraríamos" ;--# notpresent
    VP (Cond Pl P2) => "encerraríais" ;--# notpresent
    VP (Cond Pl P3) => "encerrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encierra" ;
    VP (Imp Sg P3) => "encierre" ;
    VP (Imp Pl P1) => "encerremos" ;
    VP (Imp Pl P2) => "encerrad" ;
    VP (Imp Pl P3) => "encierren" ;
    VP (Pass Sg Masc) => "encerrado" ;
    VP (Pass Sg Fem) => "encerrada" ;
    VP (Pass Pl Masc) => "encerrados" ;
    VP (Pass Pl Fem) => "encerradas"
    }
  } ;

lin encomendar_V = verboV 
 {s = table {
    VI Infn => "encomendar" ;
    VI Ger => "encomendando" ;
    VI Part => "encomendado" ;
    VP (Pres Ind Sg P1) => "encomiendo" ;
    VP (Pres Ind Sg P2) => "encomiendas" ;
    VP (Pres Ind Sg P3) => "encomienda" ;
    VP (Pres Ind Pl P1) => "encomendamos" ;
    VP (Pres Ind Pl P2) => "encomendáis" ;
    VP (Pres Ind Pl P3) => "encomiendan" ;
    VP (Pres Subj Sg P1) => "encomiende" ;
    VP (Pres Subj Sg P2) => "encomiendes" ;
    VP (Pres Subj Sg P3) => "encomiende" ;
    VP (Pres Subj Pl P1) => "encomendemos" ;
    VP (Pres Subj Pl P2) => "encomendéis" ;
    VP (Pres Subj Pl P3) => "encomienden" ;
    VP (Impf Ind Sg P1) => "encomendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encomendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encomendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encomendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encomendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encomendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encomendara" ; "encomendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encomendaras" ; "encomendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encomendara" ; "encomendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encomendáramos" ; "encomendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encomendarais" ; "encomendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encomendaran" ; "encomendasen"} ;--# notpresent
    VP (Pret Sg P1) => "encomendé" ;--# notpresent
    VP (Pret Sg P2) => "encomendaste" ;--# notpresent
    VP (Pret Sg P3) => "encomendó" ;--# notpresent
    VP (Pret Pl P1) => "encomendamos" ;--# notpresent
    VP (Pret Pl P2) => "encomendasteis" ;--# notpresent
    VP (Pret Pl P3) => "encomendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encomendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encomendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encomendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encomendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encomendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encomendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encomendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encomendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encomendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encomendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encomendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encomendaren" ;--# notpresent
    VP (Cond Sg P1) => "encomendaría" ;--# notpresent
    VP (Cond Sg P2) => "encomendarías" ;--# notpresent
    VP (Cond Sg P3) => "encomendaría" ;--# notpresent
    VP (Cond Pl P1) => "encomendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "encomendaríais" ;--# notpresent
    VP (Cond Pl P3) => "encomendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encomienda" ;
    VP (Imp Sg P3) => "encomiende" ;
    VP (Imp Pl P1) => "encomendemos" ;
    VP (Imp Pl P2) => "encomendad" ;
    VP (Imp Pl P3) => "encomienden" ;
    VP (Pass Sg Masc) => "encomendado" ;
    VP (Pass Sg Fem) => "encomendada" ;
    VP (Pass Pl Masc) => "encomendados" ;
    VP (Pass Pl Fem) => "encomendadas"
    }
  } ;

lin encontrar_V = verboV 
 {s = table {
    VI Infn => "encontrar" ;
    VI Ger => "encontrando" ;
    VI Part => "encontrado" ;
    VP (Pres Ind Sg P1) => "encuentro" ;
    VP (Pres Ind Sg P2) => "encuentras" ;
    VP (Pres Ind Sg P3) => "encuentra" ;
    VP (Pres Ind Pl P1) => "encontramos" ;
    VP (Pres Ind Pl P2) => "encontráis" ;
    VP (Pres Ind Pl P3) => "encuentran" ;
    VP (Pres Subj Sg P1) => "encuentre" ;
    VP (Pres Subj Sg P2) => "encuentres" ;
    VP (Pres Subj Sg P3) => "encuentre" ;
    VP (Pres Subj Pl P1) => "encontremos" ;
    VP (Pres Subj Pl P2) => "encontréis" ;
    VP (Pres Subj Pl P3) => "encuentren" ;
    VP (Impf Ind Sg P1) => "encontraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encontrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encontraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encontrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encontrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encontraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encontrara" ; "encontrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encontraras" ; "encontrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encontrara" ; "encontrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encontráramos" ; "encontrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encontrarais" ; "encontraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encontraran" ; "encontrasen"} ;--# notpresent
    VP (Pret Sg P1) => "encontré" ;--# notpresent
    VP (Pret Sg P2) => "encontraste" ;--# notpresent
    VP (Pret Sg P3) => "encontró" ;--# notpresent
    VP (Pret Pl P1) => "encontramos" ;--# notpresent
    VP (Pret Pl P2) => "encontrasteis" ;--# notpresent
    VP (Pret Pl P3) => "encontraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encontraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encontrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encontrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encontraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encontraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encontrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encontrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encontrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encontrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encontráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encontrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encontraren" ;--# notpresent
    VP (Cond Sg P1) => "encontraría" ;--# notpresent
    VP (Cond Sg P2) => "encontrarías" ;--# notpresent
    VP (Cond Sg P3) => "encontraría" ;--# notpresent
    VP (Cond Pl P1) => "encontraríamos" ;--# notpresent
    VP (Cond Pl P2) => "encontraríais" ;--# notpresent
    VP (Cond Pl P3) => "encontrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encuentra" ;
    VP (Imp Sg P3) => "encuentre" ;
    VP (Imp Pl P1) => "encontremos" ;
    VP (Imp Pl P2) => "encontrad" ;
    VP (Imp Pl P3) => "encuentren" ;
    VP (Pass Sg Masc) => "encontrado" ;
    VP (Pass Sg Fem) => "encontrada" ;
    VP (Pass Pl Masc) => "encontrados" ;
    VP (Pass Pl Fem) => "encontradas"
    }
  } ;

lin encorar_V = verboV 
 {s = table {
    VI Infn => "encorar" ;
    VI Ger => "encorando" ;
    VI Part => "encorado" ;
    VP (Pres Ind Sg P1) => "encuero" ;
    VP (Pres Ind Sg P2) => "encueras" ;
    VP (Pres Ind Sg P3) => "encuera" ;
    VP (Pres Ind Pl P1) => "encoramos" ;
    VP (Pres Ind Pl P2) => "encoráis" ;
    VP (Pres Ind Pl P3) => "encueran" ;
    VP (Pres Subj Sg P1) => "encuere" ;
    VP (Pres Subj Sg P2) => "encueres" ;
    VP (Pres Subj Sg P3) => "encuere" ;
    VP (Pres Subj Pl P1) => "encoremos" ;
    VP (Pres Subj Pl P2) => "encoréis" ;
    VP (Pres Subj Pl P3) => "encueren" ;
    VP (Impf Ind Sg P1) => "encoraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encorabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encoraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encorábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encorabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encoraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encorara" ; "encorase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encoraras" ; "encorases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encorara" ; "encorase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encoráramos" ; "encorásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encorarais" ; "encoraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encoraran" ; "encorasen"} ;--# notpresent
    VP (Pret Sg P1) => "encoré" ;--# notpresent
    VP (Pret Sg P2) => "encoraste" ;--# notpresent
    VP (Pret Sg P3) => "encoró" ;--# notpresent
    VP (Pret Pl P1) => "encoramos" ;--# notpresent
    VP (Pret Pl P2) => "encorasteis" ;--# notpresent
    VP (Pret Pl P3) => "encoraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encoraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encorarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encorará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encoraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encoraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encorarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encorare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encorares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encorare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encoráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encorareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encoraren" ;--# notpresent
    VP (Cond Sg P1) => "encoraría" ;--# notpresent
    VP (Cond Sg P2) => "encorarías" ;--# notpresent
    VP (Cond Sg P3) => "encoraría" ;--# notpresent
    VP (Cond Pl P1) => "encoraríamos" ;--# notpresent
    VP (Cond Pl P2) => "encoraríais" ;--# notpresent
    VP (Cond Pl P3) => "encorarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encuera" ;
    VP (Imp Sg P3) => "encuere" ;
    VP (Imp Pl P1) => "encoremos" ;
    VP (Imp Pl P2) => "encorad" ;
    VP (Imp Pl P3) => "encueren" ;
    VP (Pass Sg Masc) => "encorado" ;
    VP (Pass Sg Fem) => "encorada" ;
    VP (Pass Pl Masc) => "encorados" ;
    VP (Pass Pl Fem) => "encoradas"
    }
  } ;

lin encordar_V = verboV 
 {s = table {
    VI Infn => "encordar" ;
    VI Ger => "encordando" ;
    VI Part => "encordado" ;
    VP (Pres Ind Sg P1) => "encuerdo" ;
    VP (Pres Ind Sg P2) => "encuerdas" ;
    VP (Pres Ind Sg P3) => "encuerda" ;
    VP (Pres Ind Pl P1) => "encordamos" ;
    VP (Pres Ind Pl P2) => "encordáis" ;
    VP (Pres Ind Pl P3) => "encuerdan" ;
    VP (Pres Subj Sg P1) => "encuerde" ;
    VP (Pres Subj Sg P2) => "encuerdes" ;
    VP (Pres Subj Sg P3) => "encuerde" ;
    VP (Pres Subj Pl P1) => "encordemos" ;
    VP (Pres Subj Pl P2) => "encordéis" ;
    VP (Pres Subj Pl P3) => "encuerden" ;
    VP (Impf Ind Sg P1) => "encordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encordara" ; "encordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encordaras" ; "encordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encordara" ; "encordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encordáramos" ; "encordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encordarais" ; "encordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encordaran" ; "encordasen"} ;--# notpresent
    VP (Pret Sg P1) => "encordé" ;--# notpresent
    VP (Pret Sg P2) => "encordaste" ;--# notpresent
    VP (Pret Sg P3) => "encordó" ;--# notpresent
    VP (Pret Pl P1) => "encordamos" ;--# notpresent
    VP (Pret Pl P2) => "encordasteis" ;--# notpresent
    VP (Pret Pl P3) => "encordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encordaren" ;--# notpresent
    VP (Cond Sg P1) => "encordaría" ;--# notpresent
    VP (Cond Sg P2) => "encordarías" ;--# notpresent
    VP (Cond Sg P3) => "encordaría" ;--# notpresent
    VP (Cond Pl P1) => "encordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "encordaríais" ;--# notpresent
    VP (Cond Pl P3) => "encordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encuerda" ;
    VP (Imp Sg P3) => "encuerde" ;
    VP (Imp Pl P1) => "encordemos" ;
    VP (Imp Pl P2) => "encordad" ;
    VP (Imp Pl P3) => "encuerden" ;
    VP (Pass Sg Masc) => "encordado" ;
    VP (Pass Sg Fem) => "encordada" ;
    VP (Pass Pl Masc) => "encordados" ;
    VP (Pass Pl Fem) => "encordadas"
    }
  } ;

lin encovar_V = verboV 
 {s = table {
    VI Infn => "encovar" ;
    VI Ger => "encovando" ;
    VI Part => "encovado" ;
    VP (Pres Ind Sg P1) => "encuevo" ;
    VP (Pres Ind Sg P2) => "encuevas" ;
    VP (Pres Ind Sg P3) => "encueva" ;
    VP (Pres Ind Pl P1) => "encovamos" ;
    VP (Pres Ind Pl P2) => "encováis" ;
    VP (Pres Ind Pl P3) => "encuevan" ;
    VP (Pres Subj Sg P1) => "encueve" ;
    VP (Pres Subj Sg P2) => "encueves" ;
    VP (Pres Subj Sg P3) => "encueve" ;
    VP (Pres Subj Pl P1) => "encovemos" ;
    VP (Pres Subj Pl P2) => "encovéis" ;
    VP (Pres Subj Pl P3) => "encueven" ;
    VP (Impf Ind Sg P1) => "encovaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encovabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encovaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encovábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encovabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encovaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encovara" ; "encovase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encovaras" ; "encovases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encovara" ; "encovase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encováramos" ; "encovásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encovarais" ; "encovaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encovaran" ; "encovasen"} ;--# notpresent
    VP (Pret Sg P1) => "encové" ;--# notpresent
    VP (Pret Sg P2) => "encovaste" ;--# notpresent
    VP (Pret Sg P3) => "encovó" ;--# notpresent
    VP (Pret Pl P1) => "encovamos" ;--# notpresent
    VP (Pret Pl P2) => "encovasteis" ;--# notpresent
    VP (Pret Pl P3) => "encovaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encovaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encovarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encovará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encovaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encovaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encovarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encovare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encovares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encovare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encováremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encovareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encovaren" ;--# notpresent
    VP (Cond Sg P1) => "encovaría" ;--# notpresent
    VP (Cond Sg P2) => "encovarías" ;--# notpresent
    VP (Cond Sg P3) => "encovaría" ;--# notpresent
    VP (Cond Pl P1) => "encovaríamos" ;--# notpresent
    VP (Cond Pl P2) => "encovaríais" ;--# notpresent
    VP (Cond Pl P3) => "encovarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encueva" ;
    VP (Imp Sg P3) => "encueve" ;
    VP (Imp Pl P1) => "encovemos" ;
    VP (Imp Pl P2) => "encovad" ;
    VP (Imp Pl P3) => "encueven" ;
    VP (Pass Sg Masc) => "encovado" ;
    VP (Pass Sg Fem) => "encovada" ;
    VP (Pass Pl Masc) => "encovados" ;
    VP (Pass Pl Fem) => "encovadas"
    }
  } ;

lin encubertar_V = verboV 
 {s = table {
    VI Infn => "encubertar" ;
    VI Ger => "encubertando" ;
    VI Part => "encubertado" ;
    VP (Pres Ind Sg P1) => "encubierto" ;
    VP (Pres Ind Sg P2) => "encubiertas" ;
    VP (Pres Ind Sg P3) => "encubierta" ;
    VP (Pres Ind Pl P1) => "encubertamos" ;
    VP (Pres Ind Pl P2) => "encubertáis" ;
    VP (Pres Ind Pl P3) => "encubiertan" ;
    VP (Pres Subj Sg P1) => "encubierte" ;
    VP (Pres Subj Sg P2) => "encubiertes" ;
    VP (Pres Subj Sg P3) => "encubierte" ;
    VP (Pres Subj Pl P1) => "encubertemos" ;
    VP (Pres Subj Pl P2) => "encubertéis" ;
    VP (Pres Subj Pl P3) => "encubierten" ;
    VP (Impf Ind Sg P1) => "encubertaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "encubertabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "encubertaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "encubertábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "encubertabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "encubertaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"encubertara" ; "encubertase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"encubertaras" ; "encubertases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"encubertara" ; "encubertase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"encubertáramos" ; "encubertásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"encubertarais" ; "encubertaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"encubertaran" ; "encubertasen"} ;--# notpresent
    VP (Pret Sg P1) => "encuberté" ;--# notpresent
    VP (Pret Sg P2) => "encubertaste" ;--# notpresent
    VP (Pret Sg P3) => "encubertó" ;--# notpresent
    VP (Pret Pl P1) => "encubertamos" ;--# notpresent
    VP (Pret Pl P2) => "encubertasteis" ;--# notpresent
    VP (Pret Pl P3) => "encubertaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "encubertaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "encubertarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "encubertará" ;--# notpresent
    VP (Fut Ind Pl P1) => "encubertaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "encubertaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "encubertarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "encubertare" ;--# notpresent
    VP (Fut Subj Sg P2) => "encubertares" ;--# notpresent
    VP (Fut Subj Sg P3) => "encubertare" ;--# notpresent
    VP (Fut Subj Pl P1) => "encubertáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "encubertareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "encubertaren" ;--# notpresent
    VP (Cond Sg P1) => "encubertaría" ;--# notpresent
    VP (Cond Sg P2) => "encubertarías" ;--# notpresent
    VP (Cond Sg P3) => "encubertaría" ;--# notpresent
    VP (Cond Pl P1) => "encubertaríamos" ;--# notpresent
    VP (Cond Pl P2) => "encubertaríais" ;--# notpresent
    VP (Cond Pl P3) => "encubertarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "encubierta" ;
    VP (Imp Sg P3) => "encubierte" ;
    VP (Imp Pl P1) => "encubertemos" ;
    VP (Imp Pl P2) => "encubertad" ;
    VP (Imp Pl P3) => "encubierten" ;
    VP (Pass Sg Masc) => "encubertado" ;
    VP (Pass Sg Fem) => "encubertada" ;
    VP (Pass Pl Masc) => "encubertados" ;
    VP (Pass Pl Fem) => "encubertadas"
    }
  } ;

lin endentar_V = verboV 
 {s = table {
    VI Infn => "endentar" ;
    VI Ger => "endentando" ;
    VI Part => "endentado" ;
    VP (Pres Ind Sg P1) => "endiento" ;
    VP (Pres Ind Sg P2) => "endientas" ;
    VP (Pres Ind Sg P3) => "endienta" ;
    VP (Pres Ind Pl P1) => "endentamos" ;
    VP (Pres Ind Pl P2) => "endentáis" ;
    VP (Pres Ind Pl P3) => "endientan" ;
    VP (Pres Subj Sg P1) => "endiente" ;
    VP (Pres Subj Sg P2) => "endientes" ;
    VP (Pres Subj Sg P3) => "endiente" ;
    VP (Pres Subj Pl P1) => "endentemos" ;
    VP (Pres Subj Pl P2) => "endentéis" ;
    VP (Pres Subj Pl P3) => "endienten" ;
    VP (Impf Ind Sg P1) => "endentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "endentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "endentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "endentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "endentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "endentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"endentara" ; "endentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"endentaras" ; "endentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"endentara" ; "endentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"endentáramos" ; "endentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"endentarais" ; "endentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"endentaran" ; "endentasen"} ;--# notpresent
    VP (Pret Sg P1) => "endenté" ;--# notpresent
    VP (Pret Sg P2) => "endentaste" ;--# notpresent
    VP (Pret Sg P3) => "endentó" ;--# notpresent
    VP (Pret Pl P1) => "endentamos" ;--# notpresent
    VP (Pret Pl P2) => "endentasteis" ;--# notpresent
    VP (Pret Pl P3) => "endentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "endentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "endentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "endentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "endentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "endentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "endentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "endentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "endentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "endentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "endentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "endentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "endentaren" ;--# notpresent
    VP (Cond Sg P1) => "endentaría" ;--# notpresent
    VP (Cond Sg P2) => "endentarías" ;--# notpresent
    VP (Cond Sg P3) => "endentaría" ;--# notpresent
    VP (Cond Pl P1) => "endentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "endentaríais" ;--# notpresent
    VP (Cond Pl P3) => "endentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "endienta" ;
    VP (Imp Sg P3) => "endiente" ;
    VP (Imp Pl P1) => "endentemos" ;
    VP (Imp Pl P2) => "endentad" ;
    VP (Imp Pl P3) => "endienten" ;
    VP (Pass Sg Masc) => "endentado" ;
    VP (Pass Sg Fem) => "endentada" ;
    VP (Pass Pl Masc) => "endentados" ;
    VP (Pass Pl Fem) => "endentadas"
    }
  } ;

lin engorar_V = verboV 
 {s = table {
    VI Infn => "engorar" ;
    VI Ger => "engorando" ;
    VI Part => "engorado" ;
    VP (Pres Ind Sg P1) => "enguero" ;
    VP (Pres Ind Sg P2) => "engueras" ;
    VP (Pres Ind Sg P3) => "enguera" ;
    VP (Pres Ind Pl P1) => "engoramos" ;
    VP (Pres Ind Pl P2) => "engoráis" ;
    VP (Pres Ind Pl P3) => "engueran" ;
    VP (Pres Subj Sg P1) => "enguere" ;
    VP (Pres Subj Sg P2) => "engueres" ;
    VP (Pres Subj Sg P3) => "enguere" ;
    VP (Pres Subj Pl P1) => "engoremos" ;
    VP (Pres Subj Pl P2) => "engoréis" ;
    VP (Pres Subj Pl P3) => "engueren" ;
    VP (Impf Ind Sg P1) => "engoraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "engorabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "engoraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "engorábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engorabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engoraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engorara" ; "engorase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engoraras" ; "engorases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engorara" ; "engorase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engoráramos" ; "engorásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engorarais" ; "engoraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engoraran" ; "engorasen"} ;--# notpresent
    VP (Pret Sg P1) => "engoré" ;--# notpresent
    VP (Pret Sg P2) => "engoraste" ;--# notpresent
    VP (Pret Sg P3) => "engoró" ;--# notpresent
    VP (Pret Pl P1) => "engoramos" ;--# notpresent
    VP (Pret Pl P2) => "engorasteis" ;--# notpresent
    VP (Pret Pl P3) => "engoraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engoraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engorarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engorará" ;--# notpresent
    VP (Fut Ind Pl P1) => "engoraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engoraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engorarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engorare" ;--# notpresent
    VP (Fut Subj Sg P2) => "engorares" ;--# notpresent
    VP (Fut Subj Sg P3) => "engorare" ;--# notpresent
    VP (Fut Subj Pl P1) => "engoráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engorareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engoraren" ;--# notpresent
    VP (Cond Sg P1) => "engoraría" ;--# notpresent
    VP (Cond Sg P2) => "engorarías" ;--# notpresent
    VP (Cond Sg P3) => "engoraría" ;--# notpresent
    VP (Cond Pl P1) => "engoraríamos" ;--# notpresent
    VP (Cond Pl P2) => "engoraríais" ;--# notpresent
    VP (Cond Pl P3) => "engorarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enguera" ;
    VP (Imp Sg P3) => "enguere" ;
    VP (Imp Pl P1) => "engoremos" ;
    VP (Imp Pl P2) => "engorad" ;
    VP (Imp Pl P3) => "engueren" ;
    VP (Pass Sg Masc) => "engorado" ;
    VP (Pass Sg Fem) => "engorada" ;
    VP (Pass Pl Masc) => "engorados" ;
    VP (Pass Pl Fem) => "engoradas"
    }
  } ;

lin engrosar_V = verboV 
 {s = table {
    VI Infn => "engrosar" ;
    VI Ger => "engrosando" ;
    VI Part => "engrosado" ;
    VP (Pres Ind Sg P1) => "engrueso" ;
    VP (Pres Ind Sg P2) => "engruesas" ;
    VP (Pres Ind Sg P3) => "engruesa" ;
    VP (Pres Ind Pl P1) => "engrosamos" ;
    VP (Pres Ind Pl P2) => "engrosáis" ;
    VP (Pres Ind Pl P3) => "engruesan" ;
    VP (Pres Subj Sg P1) => "engruese" ;
    VP (Pres Subj Sg P2) => "engrueses" ;
    VP (Pres Subj Sg P3) => "engruese" ;
    VP (Pres Subj Pl P1) => "engrosemos" ;
    VP (Pres Subj Pl P2) => "engroséis" ;
    VP (Pres Subj Pl P3) => "engruesen" ;
    VP (Impf Ind Sg P1) => "engrosaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "engrosabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "engrosaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "engrosábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engrosabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engrosaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engrosara" ; "engrosase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engrosaras" ; "engrosases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engrosara" ; "engrosase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engrosáramos" ; "engrosásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engrosarais" ; "engrosaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engrosaran" ; "engrosasen"} ;--# notpresent
    VP (Pret Sg P1) => "engrosé" ;--# notpresent
    VP (Pret Sg P2) => "engrosaste" ;--# notpresent
    VP (Pret Sg P3) => "engrosó" ;--# notpresent
    VP (Pret Pl P1) => "engrosamos" ;--# notpresent
    VP (Pret Pl P2) => "engrosasteis" ;--# notpresent
    VP (Pret Pl P3) => "engrosaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engrosaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engrosarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engrosará" ;--# notpresent
    VP (Fut Ind Pl P1) => "engrosaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engrosaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engrosarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engrosare" ;--# notpresent
    VP (Fut Subj Sg P2) => "engrosares" ;--# notpresent
    VP (Fut Subj Sg P3) => "engrosare" ;--# notpresent
    VP (Fut Subj Pl P1) => "engrosáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engrosareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engrosaren" ;--# notpresent
    VP (Cond Sg P1) => "engrosaría" ;--# notpresent
    VP (Cond Sg P2) => "engrosarías" ;--# notpresent
    VP (Cond Sg P3) => "engrosaría" ;--# notpresent
    VP (Cond Pl P1) => "engrosaríamos" ;--# notpresent
    VP (Cond Pl P2) => "engrosaríais" ;--# notpresent
    VP (Cond Pl P3) => "engrosarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "engruesa" ;
    VP (Imp Sg P3) => "engruese" ;
    VP (Imp Pl P1) => "engrosemos" ;
    VP (Imp Pl P2) => "engrosad" ;
    VP (Imp Pl P3) => "engruesen" ;
    VP (Pass Sg Masc) => "engrosado" ;
    VP (Pass Sg Fem) => "engrosada" ;
    VP (Pass Pl Masc) => "engrosados" ;
    VP (Pass Pl Fem) => "engrosadas"
    }
  } ;

lin enhestar_V = verboV 
 {s = table {
    VI Infn => "enhestar" ;
    VI Ger => "enhestando" ;
    VI Part => "enhestado" ;
    VP (Pres Ind Sg P1) => "enhiesto" ;
    VP (Pres Ind Sg P2) => "enhiestas" ;
    VP (Pres Ind Sg P3) => "enhiesta" ;
    VP (Pres Ind Pl P1) => "enhestamos" ;
    VP (Pres Ind Pl P2) => "enhestáis" ;
    VP (Pres Ind Pl P3) => "enhiestan" ;
    VP (Pres Subj Sg P1) => "enhieste" ;
    VP (Pres Subj Sg P2) => "enhiestes" ;
    VP (Pres Subj Sg P3) => "enhieste" ;
    VP (Pres Subj Pl P1) => "enhestemos" ;
    VP (Pres Subj Pl P2) => "enhestéis" ;
    VP (Pres Subj Pl P3) => "enhiesten" ;
    VP (Impf Ind Sg P1) => "enhestaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enhestabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enhestaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enhestábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enhestabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enhestaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enhestara" ; "enhestase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enhestaras" ; "enhestases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enhestara" ; "enhestase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enhestáramos" ; "enhestásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enhestarais" ; "enhestaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enhestaran" ; "enhestasen"} ;--# notpresent
    VP (Pret Sg P1) => "enhesté" ;--# notpresent
    VP (Pret Sg P2) => "enhestaste" ;--# notpresent
    VP (Pret Sg P3) => "enhestó" ;--# notpresent
    VP (Pret Pl P1) => "enhestamos" ;--# notpresent
    VP (Pret Pl P2) => "enhestasteis" ;--# notpresent
    VP (Pret Pl P3) => "enhestaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enhestaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enhestarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enhestará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enhestaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enhestaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enhestarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enhestare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enhestares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enhestare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enhestáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enhestareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enhestaren" ;--# notpresent
    VP (Cond Sg P1) => "enhestaría" ;--# notpresent
    VP (Cond Sg P2) => "enhestarías" ;--# notpresent
    VP (Cond Sg P3) => "enhestaría" ;--# notpresent
    VP (Cond Pl P1) => "enhestaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enhestaríais" ;--# notpresent
    VP (Cond Pl P3) => "enhestarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enhiesta" ;
    VP (Imp Sg P3) => "enhieste" ;
    VP (Imp Pl P1) => "enhestemos" ;
    VP (Imp Pl P2) => "enhestad" ;
    VP (Imp Pl P3) => "enhiesten" ;
    VP (Pass Sg Masc) => "enhestado" ;
    VP (Pass Sg Fem) => "enhestada" ;
    VP (Pass Pl Masc) => "enhestados" ;
    VP (Pass Pl Fem) => "enhestadas"
    }
  } ;

lin enmelar_V = verboV 
 {s = table {
    VI Infn => "enmelar" ;
    VI Ger => "enmelando" ;
    VI Part => "enmelado" ;
    VP (Pres Ind Sg P1) => "enmielo" ;
    VP (Pres Ind Sg P2) => "enmielas" ;
    VP (Pres Ind Sg P3) => "enmiela" ;
    VP (Pres Ind Pl P1) => "enmelamos" ;
    VP (Pres Ind Pl P2) => "enmeláis" ;
    VP (Pres Ind Pl P3) => "enmielan" ;
    VP (Pres Subj Sg P1) => "enmiele" ;
    VP (Pres Subj Sg P2) => "enmieles" ;
    VP (Pres Subj Sg P3) => "enmiele" ;
    VP (Pres Subj Pl P1) => "enmelemos" ;
    VP (Pres Subj Pl P2) => "enmeléis" ;
    VP (Pres Subj Pl P3) => "enmielen" ;
    VP (Impf Ind Sg P1) => "enmelaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmelabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmelaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmelábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmelabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmelaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmelara" ; "enmelase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmelaras" ; "enmelases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmelara" ; "enmelase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmeláramos" ; "enmelásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmelarais" ; "enmelaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmelaran" ; "enmelasen"} ;--# notpresent
    VP (Pret Sg P1) => "enmelé" ;--# notpresent
    VP (Pret Sg P2) => "enmelaste" ;--# notpresent
    VP (Pret Sg P3) => "enmeló" ;--# notpresent
    VP (Pret Pl P1) => "enmelamos" ;--# notpresent
    VP (Pret Pl P2) => "enmelasteis" ;--# notpresent
    VP (Pret Pl P3) => "enmelaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmelaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmelarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmelará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmelaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmelaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmelarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmelare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmelares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmelare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmeláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmelareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmelaren" ;--# notpresent
    VP (Cond Sg P1) => "enmelaría" ;--# notpresent
    VP (Cond Sg P2) => "enmelarías" ;--# notpresent
    VP (Cond Sg P3) => "enmelaría" ;--# notpresent
    VP (Cond Pl P1) => "enmelaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmelaríais" ;--# notpresent
    VP (Cond Pl P3) => "enmelarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmiela" ;
    VP (Imp Sg P3) => "enmiele" ;
    VP (Imp Pl P1) => "enmelemos" ;
    VP (Imp Pl P2) => "enmelad" ;
    VP (Imp Pl P3) => "enmielen" ;
    VP (Pass Sg Masc) => "enmelado" ;
    VP (Pass Sg Fem) => "enmelada" ;
    VP (Pass Pl Masc) => "enmelados" ;
    VP (Pass Pl Fem) => "enmeladas"
    }
  } ;

lin enmendar_V = verboV 
 {s = table {
    VI Infn => "enmendar" ;
    VI Ger => "enmendando" ;
    VI Part => "enmendado" ;
    VP (Pres Ind Sg P1) => "enmiendo" ;
    VP (Pres Ind Sg P2) => "enmiendas" ;
    VP (Pres Ind Sg P3) => "enmienda" ;
    VP (Pres Ind Pl P1) => "enmendamos" ;
    VP (Pres Ind Pl P2) => "enmendáis" ;
    VP (Pres Ind Pl P3) => "enmiendan" ;
    VP (Pres Subj Sg P1) => "enmiende" ;
    VP (Pres Subj Sg P2) => "enmiendes" ;
    VP (Pres Subj Sg P3) => "enmiende" ;
    VP (Pres Subj Pl P1) => "enmendemos" ;
    VP (Pres Subj Pl P2) => "enmendéis" ;
    VP (Pres Subj Pl P3) => "enmienden" ;
    VP (Impf Ind Sg P1) => "enmendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enmendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enmendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enmendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enmendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enmendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enmendara" ; "enmendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enmendaras" ; "enmendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enmendara" ; "enmendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enmendáramos" ; "enmendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enmendarais" ; "enmendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enmendaran" ; "enmendasen"} ;--# notpresent
    VP (Pret Sg P1) => "enmendé" ;--# notpresent
    VP (Pret Sg P2) => "enmendaste" ;--# notpresent
    VP (Pret Sg P3) => "enmendó" ;--# notpresent
    VP (Pret Pl P1) => "enmendamos" ;--# notpresent
    VP (Pret Pl P2) => "enmendasteis" ;--# notpresent
    VP (Pret Pl P3) => "enmendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enmendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enmendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enmendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enmendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enmendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enmendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enmendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enmendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enmendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enmendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enmendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enmendaren" ;--# notpresent
    VP (Cond Sg P1) => "enmendaría" ;--# notpresent
    VP (Cond Sg P2) => "enmendarías" ;--# notpresent
    VP (Cond Sg P3) => "enmendaría" ;--# notpresent
    VP (Cond Pl P1) => "enmendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enmendaríais" ;--# notpresent
    VP (Cond Pl P3) => "enmendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enmienda" ;
    VP (Imp Sg P3) => "enmiende" ;
    VP (Imp Pl P1) => "enmendemos" ;
    VP (Imp Pl P2) => "enmendad" ;
    VP (Imp Pl P3) => "enmienden" ;
    VP (Pass Sg Masc) => "enmendado" ;
    VP (Pass Sg Fem) => "enmendada" ;
    VP (Pass Pl Masc) => "enmendados" ;
    VP (Pass Pl Fem) => "enmendadas"
    }
  } ;

lin enrodar_V = verboV 
 {s = table {
    VI Infn => "enrodar" ;
    VI Ger => "enrodando" ;
    VI Part => "enrodado" ;
    VP (Pres Ind Sg P1) => "enruedo" ;
    VP (Pres Ind Sg P2) => "enruedas" ;
    VP (Pres Ind Sg P3) => "enrueda" ;
    VP (Pres Ind Pl P1) => "enrodamos" ;
    VP (Pres Ind Pl P2) => "enrodáis" ;
    VP (Pres Ind Pl P3) => "enruedan" ;
    VP (Pres Subj Sg P1) => "enruede" ;
    VP (Pres Subj Sg P2) => "enruedes" ;
    VP (Pres Subj Sg P3) => "enruede" ;
    VP (Pres Subj Pl P1) => "enrodemos" ;
    VP (Pres Subj Pl P2) => "enrodéis" ;
    VP (Pres Subj Pl P3) => "enrueden" ;
    VP (Impf Ind Sg P1) => "enrodaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enrodabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enrodaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enrodábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enrodabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enrodaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enrodara" ; "enrodase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enrodaras" ; "enrodases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enrodara" ; "enrodase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enrodáramos" ; "enrodásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enrodarais" ; "enrodaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enrodaran" ; "enrodasen"} ;--# notpresent
    VP (Pret Sg P1) => "enrodé" ;--# notpresent
    VP (Pret Sg P2) => "enrodaste" ;--# notpresent
    VP (Pret Sg P3) => "enrodó" ;--# notpresent
    VP (Pret Pl P1) => "enrodamos" ;--# notpresent
    VP (Pret Pl P2) => "enrodasteis" ;--# notpresent
    VP (Pret Pl P3) => "enrodaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enrodaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enrodarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enrodará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enrodaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enrodaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enrodarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enrodare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enrodares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enrodare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enrodáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enrodareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enrodaren" ;--# notpresent
    VP (Cond Sg P1) => "enrodaría" ;--# notpresent
    VP (Cond Sg P2) => "enrodarías" ;--# notpresent
    VP (Cond Sg P3) => "enrodaría" ;--# notpresent
    VP (Cond Pl P1) => "enrodaríamos" ;--# notpresent
    VP (Cond Pl P2) => "enrodaríais" ;--# notpresent
    VP (Cond Pl P3) => "enrodarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enrueda" ;
    VP (Imp Sg P3) => "enruede" ;
    VP (Imp Pl P1) => "enrodemos" ;
    VP (Imp Pl P2) => "enrodad" ;
    VP (Imp Pl P3) => "enrueden" ;
    VP (Pass Sg Masc) => "enrodado" ;
    VP (Pass Sg Fem) => "enrodada" ;
    VP (Pass Pl Masc) => "enrodados" ;
    VP (Pass Pl Fem) => "enrodadas"
    }
  } ;

lin ensangrentar_V = verboV 
 {s = table {
    VI Infn => "ensangrentar" ;
    VI Ger => "ensangrentando" ;
    VI Part => "ensangrentado" ;
    VP (Pres Ind Sg P1) => "ensangriento" ;
    VP (Pres Ind Sg P2) => "ensangrientas" ;
    VP (Pres Ind Sg P3) => "ensangrienta" ;
    VP (Pres Ind Pl P1) => "ensangrentamos" ;
    VP (Pres Ind Pl P2) => "ensangrentáis" ;
    VP (Pres Ind Pl P3) => "ensangrientan" ;
    VP (Pres Subj Sg P1) => "ensangriente" ;
    VP (Pres Subj Sg P2) => "ensangrientes" ;
    VP (Pres Subj Sg P3) => "ensangriente" ;
    VP (Pres Subj Pl P1) => "ensangrentemos" ;
    VP (Pres Subj Pl P2) => "ensangrentéis" ;
    VP (Pres Subj Pl P3) => "ensangrienten" ;
    VP (Impf Ind Sg P1) => "ensangrentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensangrentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensangrentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensangrentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensangrentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensangrentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensangrentara" ; "ensangrentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensangrentaras" ; "ensangrentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensangrentara" ; "ensangrentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensangrentáramos" ; "ensangrentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensangrentarais" ; "ensangrentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensangrentaran" ; "ensangrentasen"} ;--# notpresent
    VP (Pret Sg P1) => "ensangrenté" ;--# notpresent
    VP (Pret Sg P2) => "ensangrentaste" ;--# notpresent
    VP (Pret Sg P3) => "ensangrentó" ;--# notpresent
    VP (Pret Pl P1) => "ensangrentamos" ;--# notpresent
    VP (Pret Pl P2) => "ensangrentasteis" ;--# notpresent
    VP (Pret Pl P3) => "ensangrentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensangrentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensangrentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensangrentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensangrentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensangrentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensangrentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensangrentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensangrentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensangrentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensangrentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensangrentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensangrentaren" ;--# notpresent
    VP (Cond Sg P1) => "ensangrentaría" ;--# notpresent
    VP (Cond Sg P2) => "ensangrentarías" ;--# notpresent
    VP (Cond Sg P3) => "ensangrentaría" ;--# notpresent
    VP (Cond Pl P1) => "ensangrentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensangrentaríais" ;--# notpresent
    VP (Cond Pl P3) => "ensangrentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensangrienta" ;
    VP (Imp Sg P3) => "ensangriente" ;
    VP (Imp Pl P1) => "ensangrentemos" ;
    VP (Imp Pl P2) => "ensangrentad" ;
    VP (Imp Pl P3) => "ensangrienten" ;
    VP (Pass Sg Masc) => "ensangrentado" ;
    VP (Pass Sg Fem) => "ensangrentada" ;
    VP (Pass Pl Masc) => "ensangrentados" ;
    VP (Pass Pl Fem) => "ensangrentadas"
    }
  } ;

lin ensarmentar_V = verboV 
 {s = table {
    VI Infn => "ensarmentar" ;
    VI Ger => "ensarmentando" ;
    VI Part => "ensarmentado" ;
    VP (Pres Ind Sg P1) => "ensarmiento" ;
    VP (Pres Ind Sg P2) => "ensarmientas" ;
    VP (Pres Ind Sg P3) => "ensarmienta" ;
    VP (Pres Ind Pl P1) => "ensarmentamos" ;
    VP (Pres Ind Pl P2) => "ensarmentáis" ;
    VP (Pres Ind Pl P3) => "ensarmientan" ;
    VP (Pres Subj Sg P1) => "ensarmiente" ;
    VP (Pres Subj Sg P2) => "ensarmientes" ;
    VP (Pres Subj Sg P3) => "ensarmiente" ;
    VP (Pres Subj Pl P1) => "ensarmentemos" ;
    VP (Pres Subj Pl P2) => "ensarmentéis" ;
    VP (Pres Subj Pl P3) => "ensarmienten" ;
    VP (Impf Ind Sg P1) => "ensarmentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensarmentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensarmentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensarmentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensarmentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensarmentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensarmentara" ; "ensarmentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensarmentaras" ; "ensarmentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensarmentara" ; "ensarmentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensarmentáramos" ; "ensarmentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensarmentarais" ; "ensarmentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensarmentaran" ; "ensarmentasen"} ;--# notpresent
    VP (Pret Sg P1) => "ensarmenté" ;--# notpresent
    VP (Pret Sg P2) => "ensarmentaste" ;--# notpresent
    VP (Pret Sg P3) => "ensarmentó" ;--# notpresent
    VP (Pret Pl P1) => "ensarmentamos" ;--# notpresent
    VP (Pret Pl P2) => "ensarmentasteis" ;--# notpresent
    VP (Pret Pl P3) => "ensarmentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensarmentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensarmentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensarmentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensarmentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensarmentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensarmentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensarmentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensarmentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensarmentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensarmentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensarmentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensarmentaren" ;--# notpresent
    VP (Cond Sg P1) => "ensarmentaría" ;--# notpresent
    VP (Cond Sg P2) => "ensarmentarías" ;--# notpresent
    VP (Cond Sg P3) => "ensarmentaría" ;--# notpresent
    VP (Cond Pl P1) => "ensarmentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensarmentaríais" ;--# notpresent
    VP (Cond Pl P3) => "ensarmentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensarmienta" ;
    VP (Imp Sg P3) => "ensarmiente" ;
    VP (Imp Pl P1) => "ensarmentemos" ;
    VP (Imp Pl P2) => "ensarmentad" ;
    VP (Imp Pl P3) => "ensarmienten" ;
    VP (Pass Sg Masc) => "ensarmentado" ;
    VP (Pass Sg Fem) => "ensarmentada" ;
    VP (Pass Pl Masc) => "ensarmentados" ;
    VP (Pass Pl Fem) => "ensarmentadas"
    }
  } ;

lin ensoñar_V = verboV 
 {s = table {
    VI Infn => "ensoñar" ;
    VI Ger => "ensoñando" ;
    VI Part => "ensoñado" ;
    VP (Pres Ind Sg P1) => "ensueño" ;
    VP (Pres Ind Sg P2) => "ensueñas" ;
    VP (Pres Ind Sg P3) => "ensueña" ;
    VP (Pres Ind Pl P1) => "ensoñamos" ;
    VP (Pres Ind Pl P2) => "ensoñáis" ;
    VP (Pres Ind Pl P3) => "ensueñan" ;
    VP (Pres Subj Sg P1) => "ensueñe" ;
    VP (Pres Subj Sg P2) => "ensueñes" ;
    VP (Pres Subj Sg P3) => "ensueñe" ;
    VP (Pres Subj Pl P1) => "ensoñemos" ;
    VP (Pres Subj Pl P2) => "ensoñéis" ;
    VP (Pres Subj Pl P3) => "ensueñen" ;
    VP (Impf Ind Sg P1) => "ensoñaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ensoñabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "ensoñaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "ensoñábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ensoñabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ensoñaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ensoñara" ; "ensoñase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ensoñaras" ; "ensoñases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ensoñara" ; "ensoñase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ensoñáramos" ; "ensoñásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ensoñarais" ; "ensoñaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ensoñaran" ; "ensoñasen"} ;--# notpresent
    VP (Pret Sg P1) => "ensoñé" ;--# notpresent
    VP (Pret Sg P2) => "ensoñaste" ;--# notpresent
    VP (Pret Sg P3) => "ensoñó" ;--# notpresent
    VP (Pret Pl P1) => "ensoñamos" ;--# notpresent
    VP (Pret Pl P2) => "ensoñasteis" ;--# notpresent
    VP (Pret Pl P3) => "ensoñaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ensoñaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ensoñarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ensoñará" ;--# notpresent
    VP (Fut Ind Pl P1) => "ensoñaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ensoñaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ensoñarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ensoñare" ;--# notpresent
    VP (Fut Subj Sg P2) => "ensoñares" ;--# notpresent
    VP (Fut Subj Sg P3) => "ensoñare" ;--# notpresent
    VP (Fut Subj Pl P1) => "ensoñáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ensoñareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ensoñaren" ;--# notpresent
    VP (Cond Sg P1) => "ensoñaría" ;--# notpresent
    VP (Cond Sg P2) => "ensoñarías" ;--# notpresent
    VP (Cond Sg P3) => "ensoñaría" ;--# notpresent
    VP (Cond Pl P1) => "ensoñaríamos" ;--# notpresent
    VP (Cond Pl P2) => "ensoñaríais" ;--# notpresent
    VP (Cond Pl P3) => "ensoñarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ensueña" ;
    VP (Imp Sg P3) => "ensueñe" ;
    VP (Imp Pl P1) => "ensoñemos" ;
    VP (Imp Pl P2) => "ensoñad" ;
    VP (Imp Pl P3) => "ensueñen" ;
    VP (Pass Sg Masc) => "ensoñado" ;
    VP (Pass Sg Fem) => "ensoñada" ;
    VP (Pass Pl Masc) => "ensoñados" ;
    VP (Pass Pl Fem) => "ensoñadas"
    }
  } ;

lin enterrar_V = verboV 
 {s = table {
    VI Infn => "enterrar" ;
    VI Ger => "enterrando" ;
    VI Part => "enterrado" ;
    VP (Pres Ind Sg P1) => "entierro" ;
    VP (Pres Ind Sg P2) => "entierras" ;
    VP (Pres Ind Sg P3) => "entierra" ;
    VP (Pres Ind Pl P1) => "enterramos" ;
    VP (Pres Ind Pl P2) => "enterráis" ;
    VP (Pres Ind Pl P3) => "entierran" ;
    VP (Pres Subj Sg P1) => "entierre" ;
    VP (Pres Subj Sg P2) => "entierres" ;
    VP (Pres Subj Sg P3) => "entierre" ;
    VP (Pres Subj Pl P1) => "enterremos" ;
    VP (Pres Subj Pl P2) => "enterréis" ;
    VP (Pres Subj Pl P3) => "entierren" ;
    VP (Impf Ind Sg P1) => "enterraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "enterrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "enterraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "enterrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "enterrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "enterraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"enterrara" ; "enterrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"enterraras" ; "enterrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"enterrara" ; "enterrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"enterráramos" ; "enterrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"enterrarais" ; "enterraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"enterraran" ; "enterrasen"} ;--# notpresent
    VP (Pret Sg P1) => "enterré" ;--# notpresent
    VP (Pret Sg P2) => "enterraste" ;--# notpresent
    VP (Pret Sg P3) => "enterró" ;--# notpresent
    VP (Pret Pl P1) => "enterramos" ;--# notpresent
    VP (Pret Pl P2) => "enterrasteis" ;--# notpresent
    VP (Pret Pl P3) => "enterraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "enterraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "enterrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "enterrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "enterraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "enterraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "enterrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "enterrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "enterrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "enterrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "enterráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "enterrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "enterraren" ;--# notpresent
    VP (Cond Sg P1) => "enterraría" ;--# notpresent
    VP (Cond Sg P2) => "enterrarías" ;--# notpresent
    VP (Cond Sg P3) => "enterraría" ;--# notpresent
    VP (Cond Pl P1) => "enterraríamos" ;--# notpresent
    VP (Cond Pl P2) => "enterraríais" ;--# notpresent
    VP (Cond Pl P3) => "enterrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entierra" ;
    VP (Imp Sg P3) => "entierre" ;
    VP (Imp Pl P1) => "enterremos" ;
    VP (Imp Pl P2) => "enterrad" ;
    VP (Imp Pl P3) => "entierren" ;
    VP (Pass Sg Masc) => "enterrado" ;
    VP (Pass Sg Fem) => "enterrada" ;
    VP (Pass Pl Masc) => "enterrados" ;
    VP (Pass Pl Fem) => "enterradas"
    }
  } ;

lin entesar_V = verboV 
 {s = table {
    VI Infn => "entesar" ;
    VI Ger => "entesando" ;
    VI Part => "entesado" ;
    VP (Pres Ind Sg P1) => "entieso" ;
    VP (Pres Ind Sg P2) => "entiesas" ;
    VP (Pres Ind Sg P3) => "entiesa" ;
    VP (Pres Ind Pl P1) => "entesamos" ;
    VP (Pres Ind Pl P2) => "entesáis" ;
    VP (Pres Ind Pl P3) => "entiesan" ;
    VP (Pres Subj Sg P1) => "entiese" ;
    VP (Pres Subj Sg P2) => "entieses" ;
    VP (Pres Subj Sg P3) => "entiese" ;
    VP (Pres Subj Pl P1) => "entesemos" ;
    VP (Pres Subj Pl P2) => "enteséis" ;
    VP (Pres Subj Pl P3) => "entiesen" ;
    VP (Impf Ind Sg P1) => "entesaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "entesabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "entesaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "entesábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entesabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entesaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entesara" ; "entesase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entesaras" ; "entesases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entesara" ; "entesase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entesáramos" ; "entesásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entesarais" ; "entesaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entesaran" ; "entesasen"} ;--# notpresent
    VP (Pret Sg P1) => "entesé" ;--# notpresent
    VP (Pret Sg P2) => "entesaste" ;--# notpresent
    VP (Pret Sg P3) => "entesó" ;--# notpresent
    VP (Pret Pl P1) => "entesamos" ;--# notpresent
    VP (Pret Pl P2) => "entesasteis" ;--# notpresent
    VP (Pret Pl P3) => "entesaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entesaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entesarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entesará" ;--# notpresent
    VP (Fut Ind Pl P1) => "entesaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entesaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entesarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entesare" ;--# notpresent
    VP (Fut Subj Sg P2) => "entesares" ;--# notpresent
    VP (Fut Subj Sg P3) => "entesare" ;--# notpresent
    VP (Fut Subj Pl P1) => "entesáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entesareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entesaren" ;--# notpresent
    VP (Cond Sg P1) => "entesaría" ;--# notpresent
    VP (Cond Sg P2) => "entesarías" ;--# notpresent
    VP (Cond Sg P3) => "entesaría" ;--# notpresent
    VP (Cond Pl P1) => "entesaríamos" ;--# notpresent
    VP (Cond Pl P2) => "entesaríais" ;--# notpresent
    VP (Cond Pl P3) => "entesarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entiesa" ;
    VP (Imp Sg P3) => "entiese" ;
    VP (Imp Pl P1) => "entesemos" ;
    VP (Imp Pl P2) => "entesad" ;
    VP (Imp Pl P3) => "entiesen" ;
    VP (Pass Sg Masc) => "entesado" ;
    VP (Pass Sg Fem) => "entesada" ;
    VP (Pass Pl Masc) => "entesados" ;
    VP (Pass Pl Fem) => "entesadas"
    }
  } ;

lin entortar_V = verboV 
 {s = table {
    VI Infn => "entortar" ;
    VI Ger => "entortando" ;
    VI Part => "entortado" ;
    VP (Pres Ind Sg P1) => "entuerto" ;
    VP (Pres Ind Sg P2) => "entuertas" ;
    VP (Pres Ind Sg P3) => "entuerta" ;
    VP (Pres Ind Pl P1) => "entortamos" ;
    VP (Pres Ind Pl P2) => "entortáis" ;
    VP (Pres Ind Pl P3) => "entuertan" ;
    VP (Pres Subj Sg P1) => "entuerte" ;
    VP (Pres Subj Sg P2) => "entuertes" ;
    VP (Pres Subj Sg P3) => "entuerte" ;
    VP (Pres Subj Pl P1) => "entortemos" ;
    VP (Pres Subj Pl P2) => "entortéis" ;
    VP (Pres Subj Pl P3) => "entuerten" ;
    VP (Impf Ind Sg P1) => "entortaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "entortabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "entortaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "entortábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entortabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entortaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entortara" ; "entortase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entortaras" ; "entortases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entortara" ; "entortase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entortáramos" ; "entortásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entortarais" ; "entortaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entortaran" ; "entortasen"} ;--# notpresent
    VP (Pret Sg P1) => "entorté" ;--# notpresent
    VP (Pret Sg P2) => "entortaste" ;--# notpresent
    VP (Pret Sg P3) => "entortó" ;--# notpresent
    VP (Pret Pl P1) => "entortamos" ;--# notpresent
    VP (Pret Pl P2) => "entortasteis" ;--# notpresent
    VP (Pret Pl P3) => "entortaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entortaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entortarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entortará" ;--# notpresent
    VP (Fut Ind Pl P1) => "entortaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entortaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entortarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entortare" ;--# notpresent
    VP (Fut Subj Sg P2) => "entortares" ;--# notpresent
    VP (Fut Subj Sg P3) => "entortare" ;--# notpresent
    VP (Fut Subj Pl P1) => "entortáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entortareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entortaren" ;--# notpresent
    VP (Cond Sg P1) => "entortaría" ;--# notpresent
    VP (Cond Sg P2) => "entortarías" ;--# notpresent
    VP (Cond Sg P3) => "entortaría" ;--# notpresent
    VP (Cond Pl P1) => "entortaríamos" ;--# notpresent
    VP (Cond Pl P2) => "entortaríais" ;--# notpresent
    VP (Cond Pl P3) => "entortarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entuerta" ;
    VP (Imp Sg P3) => "entuerte" ;
    VP (Imp Pl P1) => "entortemos" ;
    VP (Imp Pl P2) => "entortad" ;
    VP (Imp Pl P3) => "entuerten" ;
    VP (Pass Sg Masc) => "entortado" ;
    VP (Pass Sg Fem) => "entortada" ;
    VP (Pass Pl Masc) => "entortados" ;
    VP (Pass Pl Fem) => "entortadas"
    }
  } ;

lin entrecerrar_V = verboV 
 {s = table {
    VI Infn => "entrecerrar" ;
    VI Ger => "entrecerrando" ;
    VI Part => "entrecerrado" ;
    VP (Pres Ind Sg P1) => "entrecierro" ;
    VP (Pres Ind Sg P2) => "entrecierras" ;
    VP (Pres Ind Sg P3) => "entrecierra" ;
    VP (Pres Ind Pl P1) => "entrecerramos" ;
    VP (Pres Ind Pl P2) => "entrecerráis" ;
    VP (Pres Ind Pl P3) => "entrecierran" ;
    VP (Pres Subj Sg P1) => "entrecierre" ;
    VP (Pres Subj Sg P2) => "entrecierres" ;
    VP (Pres Subj Sg P3) => "entrecierre" ;
    VP (Pres Subj Pl P1) => "entrecerremos" ;
    VP (Pres Subj Pl P2) => "entrecerréis" ;
    VP (Pres Subj Pl P3) => "entrecierren" ;
    VP (Impf Ind Sg P1) => "entrecerraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "entrecerrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "entrecerraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "entrecerrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entrecerrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entrecerraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entrecerrara" ; "entrecerrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entrecerraras" ; "entrecerrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entrecerrara" ; "entrecerrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entrecerráramos" ; "entrecerrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entrecerrarais" ; "entrecerraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entrecerraran" ; "entrecerrasen"} ;--# notpresent
    VP (Pret Sg P1) => "entrecerré" ;--# notpresent
    VP (Pret Sg P2) => "entrecerraste" ;--# notpresent
    VP (Pret Sg P3) => "entrecerró" ;--# notpresent
    VP (Pret Pl P1) => "entrecerramos" ;--# notpresent
    VP (Pret Pl P2) => "entrecerrasteis" ;--# notpresent
    VP (Pret Pl P3) => "entrecerraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entrecerraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entrecerrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entrecerrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "entrecerraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entrecerraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entrecerrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entrecerrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "entrecerrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "entrecerrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "entrecerráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entrecerrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entrecerraren" ;--# notpresent
    VP (Cond Sg P1) => "entrecerraría" ;--# notpresent
    VP (Cond Sg P2) => "entrecerrarías" ;--# notpresent
    VP (Cond Sg P3) => "entrecerraría" ;--# notpresent
    VP (Cond Pl P1) => "entrecerraríamos" ;--# notpresent
    VP (Cond Pl P2) => "entrecerraríais" ;--# notpresent
    VP (Cond Pl P3) => "entrecerrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entrecierra" ;
    VP (Imp Sg P3) => "entrecierre" ;
    VP (Imp Pl P1) => "entrecerremos" ;
    VP (Imp Pl P2) => "entrecerrad" ;
    VP (Imp Pl P3) => "entrecierren" ;
    VP (Pass Sg Masc) => "entrecerrado" ;
    VP (Pass Sg Fem) => "entrecerrada" ;
    VP (Pass Pl Masc) => "entrecerrados" ;
    VP (Pass Pl Fem) => "entrecerradas"
    }
  } ;

lin entrepernar_V = verboV 
 {s = table {
    VI Infn => "entrepernar" ;
    VI Ger => "entrepernando" ;
    VI Part => "entrepernado" ;
    VP (Pres Ind Sg P1) => "entrepierno" ;
    VP (Pres Ind Sg P2) => "entrepiernas" ;
    VP (Pres Ind Sg P3) => "entrepierna" ;
    VP (Pres Ind Pl P1) => "entrepernamos" ;
    VP (Pres Ind Pl P2) => "entrepernáis" ;
    VP (Pres Ind Pl P3) => "entrepiernan" ;
    VP (Pres Subj Sg P1) => "entrepierne" ;
    VP (Pres Subj Sg P2) => "entrepiernes" ;
    VP (Pres Subj Sg P3) => "entrepierne" ;
    VP (Pres Subj Pl P1) => "entrepernemos" ;
    VP (Pres Subj Pl P2) => "entrepernéis" ;
    VP (Pres Subj Pl P3) => "entrepiernen" ;
    VP (Impf Ind Sg P1) => "entrepernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "entrepernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "entrepernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "entrepernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entrepernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entrepernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entrepernara" ; "entrepernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entrepernaras" ; "entrepernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entrepernara" ; "entrepernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entrepernáramos" ; "entrepernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entrepernarais" ; "entrepernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entrepernaran" ; "entrepernasen"} ;--# notpresent
    VP (Pret Sg P1) => "entreperné" ;--# notpresent
    VP (Pret Sg P2) => "entrepernaste" ;--# notpresent
    VP (Pret Sg P3) => "entrepernó" ;--# notpresent
    VP (Pret Pl P1) => "entrepernamos" ;--# notpresent
    VP (Pret Pl P2) => "entrepernasteis" ;--# notpresent
    VP (Pret Pl P3) => "entrepernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entrepernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entrepernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entrepernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "entrepernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entrepernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entrepernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entrepernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "entrepernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "entrepernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "entrepernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entrepernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entrepernaren" ;--# notpresent
    VP (Cond Sg P1) => "entrepernaría" ;--# notpresent
    VP (Cond Sg P2) => "entrepernarías" ;--# notpresent
    VP (Cond Sg P3) => "entrepernaría" ;--# notpresent
    VP (Cond Pl P1) => "entrepernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "entrepernaríais" ;--# notpresent
    VP (Cond Pl P3) => "entrepernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entrepierna" ;
    VP (Imp Sg P3) => "entrepierne" ;
    VP (Imp Pl P1) => "entrepernemos" ;
    VP (Imp Pl P2) => "entrepernad" ;
    VP (Imp Pl P3) => "entrepiernen" ;
    VP (Pass Sg Masc) => "entrepernado" ;
    VP (Pass Sg Fem) => "entrepernada" ;
    VP (Pass Pl Masc) => "entrepernados" ;
    VP (Pass Pl Fem) => "entrepernadas"
    }
  } ;

lin escarmentar_V = verboV 
 {s = table {
    VI Infn => "escarmentar" ;
    VI Ger => "escarmentando" ;
    VI Part => "escarmentado" ;
    VP (Pres Ind Sg P1) => "escarmiento" ;
    VP (Pres Ind Sg P2) => "escarmientas" ;
    VP (Pres Ind Sg P3) => "escarmienta" ;
    VP (Pres Ind Pl P1) => "escarmentamos" ;
    VP (Pres Ind Pl P2) => "escarmentáis" ;
    VP (Pres Ind Pl P3) => "escarmientan" ;
    VP (Pres Subj Sg P1) => "escarmiente" ;
    VP (Pres Subj Sg P2) => "escarmientes" ;
    VP (Pres Subj Sg P3) => "escarmiente" ;
    VP (Pres Subj Pl P1) => "escarmentemos" ;
    VP (Pres Subj Pl P2) => "escarmentéis" ;
    VP (Pres Subj Pl P3) => "escarmienten" ;
    VP (Impf Ind Sg P1) => "escarmentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "escarmentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "escarmentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "escarmentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escarmentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escarmentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escarmentara" ; "escarmentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escarmentaras" ; "escarmentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escarmentara" ; "escarmentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escarmentáramos" ; "escarmentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escarmentarais" ; "escarmentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escarmentaran" ; "escarmentasen"} ;--# notpresent
    VP (Pret Sg P1) => "escarmenté" ;--# notpresent
    VP (Pret Sg P2) => "escarmentaste" ;--# notpresent
    VP (Pret Sg P3) => "escarmentó" ;--# notpresent
    VP (Pret Pl P1) => "escarmentamos" ;--# notpresent
    VP (Pret Pl P2) => "escarmentasteis" ;--# notpresent
    VP (Pret Pl P3) => "escarmentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escarmentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escarmentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escarmentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "escarmentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escarmentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escarmentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escarmentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "escarmentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "escarmentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "escarmentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escarmentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escarmentaren" ;--# notpresent
    VP (Cond Sg P1) => "escarmentaría" ;--# notpresent
    VP (Cond Sg P2) => "escarmentarías" ;--# notpresent
    VP (Cond Sg P3) => "escarmentaría" ;--# notpresent
    VP (Cond Pl P1) => "escarmentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "escarmentaríais" ;--# notpresent
    VP (Cond Pl P3) => "escarmentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escarmienta" ;
    VP (Imp Sg P3) => "escarmiente" ;
    VP (Imp Pl P1) => "escarmentemos" ;
    VP (Imp Pl P2) => "escarmentad" ;
    VP (Imp Pl P3) => "escarmienten" ;
    VP (Pass Sg Masc) => "escarmentado" ;
    VP (Pass Sg Fem) => "escarmentada" ;
    VP (Pass Pl Masc) => "escarmentados" ;
    VP (Pass Pl Fem) => "escarmentadas"
    }
  } ;

lin escolar_V = verboV 
 {s = table {
    VI Infn => "escolar" ;
    VI Ger => "escolando" ;
    VI Part => "escolado" ;
    VP (Pres Ind Sg P1) => "escuelo" ;
    VP (Pres Ind Sg P2) => "escuelas" ;
    VP (Pres Ind Sg P3) => "escuela" ;
    VP (Pres Ind Pl P1) => "escolamos" ;
    VP (Pres Ind Pl P2) => "escoláis" ;
    VP (Pres Ind Pl P3) => "escuelan" ;
    VP (Pres Subj Sg P1) => "escuele" ;
    VP (Pres Subj Sg P2) => "escueles" ;
    VP (Pres Subj Sg P3) => "escuele" ;
    VP (Pres Subj Pl P1) => "escolemos" ;
    VP (Pres Subj Pl P2) => "escoléis" ;
    VP (Pres Subj Pl P3) => "escuelen" ;
    VP (Impf Ind Sg P1) => "escolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "escolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "escolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "escolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "escolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "escolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"escolara" ; "escolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"escolaras" ; "escolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"escolara" ; "escolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"escoláramos" ; "escolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"escolarais" ; "escolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"escolaran" ; "escolasen"} ;--# notpresent
    VP (Pret Sg P1) => "escolé" ;--# notpresent
    VP (Pret Sg P2) => "escolaste" ;--# notpresent
    VP (Pret Sg P3) => "escoló" ;--# notpresent
    VP (Pret Pl P1) => "escolamos" ;--# notpresent
    VP (Pret Pl P2) => "escolasteis" ;--# notpresent
    VP (Pret Pl P3) => "escolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "escolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "escolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "escolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "escolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "escolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "escolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "escolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "escolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "escolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "escoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "escolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "escolaren" ;--# notpresent
    VP (Cond Sg P1) => "escolaría" ;--# notpresent
    VP (Cond Sg P2) => "escolarías" ;--# notpresent
    VP (Cond Sg P3) => "escolaría" ;--# notpresent
    VP (Cond Pl P1) => "escolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "escolaríais" ;--# notpresent
    VP (Cond Pl P3) => "escolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "escuela" ;
    VP (Imp Sg P3) => "escuele" ;
    VP (Imp Pl P1) => "escolemos" ;
    VP (Imp Pl P2) => "escolad" ;
    VP (Imp Pl P3) => "escuelen" ;
    VP (Pass Sg Masc) => "escolado" ;
    VP (Pass Sg Fem) => "escolada" ;
    VP (Pass Pl Masc) => "escolados" ;
    VP (Pass Pl Fem) => "escoladas"
    }
  } ;

lin ferrar_V = verboV 
 {s = table {
    VI Infn => "ferrar" ;
    VI Ger => "ferrando" ;
    VI Part => "ferrado" ;
    VP (Pres Ind Sg P1) => "fierro" ;
    VP (Pres Ind Sg P2) => "fierras" ;
    VP (Pres Ind Sg P3) => "fierra" ;
    VP (Pres Ind Pl P1) => "ferramos" ;
    VP (Pres Ind Pl P2) => "ferráis" ;
    VP (Pres Ind Pl P3) => "fierran" ;
    VP (Pres Subj Sg P1) => "fierre" ;
    VP (Pres Subj Sg P2) => "fierres" ;
    VP (Pres Subj Sg P3) => "fierre" ;
    VP (Pres Subj Pl P1) => "ferremos" ;
    VP (Pres Subj Pl P2) => "ferréis" ;
    VP (Pres Subj Pl P3) => "fierren" ;
    VP (Impf Ind Sg P1) => "ferraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ferrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "ferraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "ferrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ferrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ferraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ferrara" ; "ferrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ferraras" ; "ferrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ferrara" ; "ferrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ferráramos" ; "ferrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ferrarais" ; "ferraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ferraran" ; "ferrasen"} ;--# notpresent
    VP (Pret Sg P1) => "ferré" ;--# notpresent
    VP (Pret Sg P2) => "ferraste" ;--# notpresent
    VP (Pret Sg P3) => "ferró" ;--# notpresent
    VP (Pret Pl P1) => "ferramos" ;--# notpresent
    VP (Pret Pl P2) => "ferrasteis" ;--# notpresent
    VP (Pret Pl P3) => "ferraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ferraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ferrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ferrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "ferraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ferraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ferrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ferrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "ferrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "ferrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "ferráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ferrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ferraren" ;--# notpresent
    VP (Cond Sg P1) => "ferraría" ;--# notpresent
    VP (Cond Sg P2) => "ferrarías" ;--# notpresent
    VP (Cond Sg P3) => "ferraría" ;--# notpresent
    VP (Cond Pl P1) => "ferraríamos" ;--# notpresent
    VP (Cond Pl P2) => "ferraríais" ;--# notpresent
    VP (Cond Pl P3) => "ferrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fierra" ;
    VP (Imp Sg P3) => "fierre" ;
    VP (Imp Pl P1) => "ferremos" ;
    VP (Imp Pl P2) => "ferrad" ;
    VP (Imp Pl P3) => "fierren" ;
    VP (Pass Sg Masc) => "ferrado" ;
    VP (Pass Sg Fem) => "ferrada" ;
    VP (Pass Pl Masc) => "ferrados" ;
    VP (Pass Pl Fem) => "ferradas"
    }
  } ;

lin follar_V = verboV 
 {s = table {
    VI Infn => "follar" ;
    VI Ger => "follando" ;
    VI Part => "follado" ;
    VP (Pres Ind Sg P1) => "fuello" ;
    VP (Pres Ind Sg P2) => "fuellas" ;
    VP (Pres Ind Sg P3) => "fuella" ;
    VP (Pres Ind Pl P1) => "follamos" ;
    VP (Pres Ind Pl P2) => "folláis" ;
    VP (Pres Ind Pl P3) => "fuellan" ;
    VP (Pres Subj Sg P1) => "fuelle" ;
    VP (Pres Subj Sg P2) => "fuelles" ;
    VP (Pres Subj Sg P3) => "fuelle" ;
    VP (Pres Subj Pl P1) => "follemos" ;
    VP (Pres Subj Pl P2) => "folléis" ;
    VP (Pres Subj Pl P3) => "fuellen" ;
    VP (Impf Ind Sg P1) => "follaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "follabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "follaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "follábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "follabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "follaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"follara" ; "follase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"follaras" ; "follases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"follara" ; "follase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"folláramos" ; "follásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"follarais" ; "follaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"follaran" ; "follasen"} ;--# notpresent
    VP (Pret Sg P1) => "follé" ;--# notpresent
    VP (Pret Sg P2) => "follaste" ;--# notpresent
    VP (Pret Sg P3) => "folló" ;--# notpresent
    VP (Pret Pl P1) => "follamos" ;--# notpresent
    VP (Pret Pl P2) => "follasteis" ;--# notpresent
    VP (Pret Pl P3) => "follaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "follaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "follarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "follará" ;--# notpresent
    VP (Fut Ind Pl P1) => "follaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "follaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "follarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "follare" ;--# notpresent
    VP (Fut Subj Sg P2) => "follares" ;--# notpresent
    VP (Fut Subj Sg P3) => "follare" ;--# notpresent
    VP (Fut Subj Pl P1) => "folláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "follareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "follaren" ;--# notpresent
    VP (Cond Sg P1) => "follaría" ;--# notpresent
    VP (Cond Sg P2) => "follarías" ;--# notpresent
    VP (Cond Sg P3) => "follaría" ;--# notpresent
    VP (Cond Pl P1) => "follaríamos" ;--# notpresent
    VP (Cond Pl P2) => "follaríais" ;--# notpresent
    VP (Cond Pl P3) => "follarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fuella" ;
    VP (Imp Sg P3) => "fuelle" ;
    VP (Imp Pl P1) => "follemos" ;
    VP (Imp Pl P2) => "follad" ;
    VP (Imp Pl P3) => "fuellen" ;
    VP (Pass Sg Masc) => "follado" ;
    VP (Pass Sg Fem) => "follada" ;
    VP (Pass Pl Masc) => "follados" ;
    VP (Pass Pl Fem) => "folladas"
    }
  } ;

lin gobernar_V = verboV 
 {s = table {
    VI Infn => "gobernar" ;
    VI Ger => "gobernando" ;
    VI Part => "gobernado" ;
    VP (Pres Ind Sg P1) => "gobierno" ;
    VP (Pres Ind Sg P2) => "gobiernas" ;
    VP (Pres Ind Sg P3) => "gobierna" ;
    VP (Pres Ind Pl P1) => "gobernamos" ;
    VP (Pres Ind Pl P2) => "gobernáis" ;
    VP (Pres Ind Pl P3) => "gobiernan" ;
    VP (Pres Subj Sg P1) => "gobierne" ;
    VP (Pres Subj Sg P2) => "gobiernes" ;
    VP (Pres Subj Sg P3) => "gobierne" ;
    VP (Pres Subj Pl P1) => "gobernemos" ;
    VP (Pres Subj Pl P2) => "gobernéis" ;
    VP (Pres Subj Pl P3) => "gobiernen" ;
    VP (Impf Ind Sg P1) => "gobernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "gobernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "gobernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "gobernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "gobernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "gobernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"gobernara" ; "gobernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"gobernaras" ; "gobernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"gobernara" ; "gobernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"gobernáramos" ; "gobernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"gobernarais" ; "gobernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"gobernaran" ; "gobernasen"} ;--# notpresent
    VP (Pret Sg P1) => "goberné" ;--# notpresent
    VP (Pret Sg P2) => "gobernaste" ;--# notpresent
    VP (Pret Sg P3) => "gobernó" ;--# notpresent
    VP (Pret Pl P1) => "gobernamos" ;--# notpresent
    VP (Pret Pl P2) => "gobernasteis" ;--# notpresent
    VP (Pret Pl P3) => "gobernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "gobernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "gobernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "gobernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "gobernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "gobernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "gobernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "gobernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "gobernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "gobernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "gobernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "gobernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "gobernaren" ;--# notpresent
    VP (Cond Sg P1) => "gobernaría" ;--# notpresent
    VP (Cond Sg P2) => "gobernarías" ;--# notpresent
    VP (Cond Sg P3) => "gobernaría" ;--# notpresent
    VP (Cond Pl P1) => "gobernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "gobernaríais" ;--# notpresent
    VP (Cond Pl P3) => "gobernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "gobierna" ;
    VP (Imp Sg P3) => "gobierne" ;
    VP (Imp Pl P1) => "gobernemos" ;
    VP (Imp Pl P2) => "gobernad" ;
    VP (Imp Pl P3) => "gobiernen" ;
    VP (Pass Sg Masc) => "gobernado" ;
    VP (Pass Sg Fem) => "gobernada" ;
    VP (Pass Pl Masc) => "gobernados" ;
    VP (Pass Pl Fem) => "gobernadas"
    }
  } ;

lin grandisonar_V = verboV 
 {s = table {
    VI Infn => "grandisonar" ;
    VI Ger => "grandisonando" ;
    VI Part => "grandisonado" ;
    VP (Pres Ind Sg P1) => "grandisueno" ;
    VP (Pres Ind Sg P2) => "grandisuenas" ;
    VP (Pres Ind Sg P3) => "grandisuena" ;
    VP (Pres Ind Pl P1) => "grandisonamos" ;
    VP (Pres Ind Pl P2) => "grandisonáis" ;
    VP (Pres Ind Pl P3) => "grandisuenan" ;
    VP (Pres Subj Sg P1) => "grandisuene" ;
    VP (Pres Subj Sg P2) => "grandisuenes" ;
    VP (Pres Subj Sg P3) => "grandisuene" ;
    VP (Pres Subj Pl P1) => "grandisonemos" ;
    VP (Pres Subj Pl P2) => "grandisonéis" ;
    VP (Pres Subj Pl P3) => "grandisuenen" ;
    VP (Impf Ind Sg P1) => "grandisonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "grandisonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "grandisonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "grandisonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "grandisonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "grandisonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"grandisonara" ; "grandisonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"grandisonaras" ; "grandisonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"grandisonara" ; "grandisonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"grandisonáramos" ; "grandisonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"grandisonarais" ; "grandisonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"grandisonaran" ; "grandisonasen"} ;--# notpresent
    VP (Pret Sg P1) => "grandisoné" ;--# notpresent
    VP (Pret Sg P2) => "grandisonaste" ;--# notpresent
    VP (Pret Sg P3) => "grandisonó" ;--# notpresent
    VP (Pret Pl P1) => "grandisonamos" ;--# notpresent
    VP (Pret Pl P2) => "grandisonasteis" ;--# notpresent
    VP (Pret Pl P3) => "grandisonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "grandisonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "grandisonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "grandisonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "grandisonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "grandisonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "grandisonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "grandisonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "grandisonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "grandisonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "grandisonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "grandisonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "grandisonaren" ;--# notpresent
    VP (Cond Sg P1) => "grandisonaría" ;--# notpresent
    VP (Cond Sg P2) => "grandisonarías" ;--# notpresent
    VP (Cond Sg P3) => "grandisonaría" ;--# notpresent
    VP (Cond Pl P1) => "grandisonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "grandisonaríais" ;--# notpresent
    VP (Cond Pl P3) => "grandisonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "grandisuena" ;
    VP (Imp Sg P3) => "grandisuene" ;
    VP (Imp Pl P1) => "grandisonemos" ;
    VP (Imp Pl P2) => "grandisonad" ;
    VP (Imp Pl P3) => "grandisuenen" ;
    VP (Pass Sg Masc) => "grandisonado" ;
    VP (Pass Sg Fem) => "grandisonada" ;
    VP (Pass Pl Masc) => "grandisonados" ;
    VP (Pass Pl Fem) => "grandisonadas"
    }
  } ;

lin hacendar_V = verboV 
 {s = table {
    VI Infn => "hacendar" ;
    VI Ger => "hacendando" ;
    VI Part => "hacendado" ;
    VP (Pres Ind Sg P1) => "haciendo" ;
    VP (Pres Ind Sg P2) => "haciendas" ;
    VP (Pres Ind Sg P3) => "hacienda" ;
    VP (Pres Ind Pl P1) => "hacendamos" ;
    VP (Pres Ind Pl P2) => "hacendáis" ;
    VP (Pres Ind Pl P3) => "haciendan" ;
    VP (Pres Subj Sg P1) => "haciende" ;
    VP (Pres Subj Sg P2) => "haciendes" ;
    VP (Pres Subj Sg P3) => "haciende" ;
    VP (Pres Subj Pl P1) => "hacendemos" ;
    VP (Pres Subj Pl P2) => "hacendéis" ;
    VP (Pres Subj Pl P3) => "hacienden" ;
    VP (Impf Ind Sg P1) => "hacendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "hacendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "hacendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "hacendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hacendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hacendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hacendara" ; "hacendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hacendaras" ; "hacendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hacendara" ; "hacendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hacendáramos" ; "hacendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hacendarais" ; "hacendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hacendaran" ; "hacendasen"} ;--# notpresent
    VP (Pret Sg P1) => "hacendé" ;--# notpresent
    VP (Pret Sg P2) => "hacendaste" ;--# notpresent
    VP (Pret Sg P3) => "hacendó" ;--# notpresent
    VP (Pret Pl P1) => "hacendamos" ;--# notpresent
    VP (Pret Pl P2) => "hacendasteis" ;--# notpresent
    VP (Pret Pl P3) => "hacendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "hacendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "hacendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hacendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "hacendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "hacendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "hacendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hacendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "hacendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "hacendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "hacendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hacendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hacendaren" ;--# notpresent
    VP (Cond Sg P1) => "hacendaría" ;--# notpresent
    VP (Cond Sg P2) => "hacendarías" ;--# notpresent
    VP (Cond Sg P3) => "hacendaría" ;--# notpresent
    VP (Cond Pl P1) => "hacendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "hacendaríais" ;--# notpresent
    VP (Cond Pl P3) => "hacendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hacienda" ;
    VP (Imp Sg P3) => "haciende" ;
    VP (Imp Pl P1) => "hacendemos" ;
    VP (Imp Pl P2) => "hacendad" ;
    VP (Imp Pl P3) => "hacienden" ;
    VP (Pass Sg Masc) => "hacendado" ;
    VP (Pass Sg Fem) => "hacendada" ;
    VP (Pass Pl Masc) => "hacendados" ;
    VP (Pass Pl Fem) => "hacendadas"
    }
  } ;

lin helar_V = verboV 
 {s = table {
    VI Infn => "helar" ;
    VI Ger => "helando" ;
    VI Part => "helado" ;
    VP (Pres Ind Sg P1) => "hielo" ;
    VP (Pres Ind Sg P2) => "hielas" ;
    VP (Pres Ind Sg P3) => "hiela" ;
    VP (Pres Ind Pl P1) => "helamos" ;
    VP (Pres Ind Pl P2) => "heláis" ;
    VP (Pres Ind Pl P3) => "hielan" ;
    VP (Pres Subj Sg P1) => "hiele" ;
    VP (Pres Subj Sg P2) => "hieles" ;
    VP (Pres Subj Sg P3) => "hiele" ;
    VP (Pres Subj Pl P1) => "helemos" ;
    VP (Pres Subj Pl P2) => "heléis" ;
    VP (Pres Subj Pl P3) => "hielen" ;
    VP (Impf Ind Sg P1) => "helaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "helabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "helaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "helábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "helabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "helaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"helara" ; "helase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"helaras" ; "helases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"helara" ; "helase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"heláramos" ; "helásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"helarais" ; "helaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"helaran" ; "helasen"} ;--# notpresent
    VP (Pret Sg P1) => "helé" ;--# notpresent
    VP (Pret Sg P2) => "helaste" ;--# notpresent
    VP (Pret Sg P3) => "heló" ;--# notpresent
    VP (Pret Pl P1) => "helamos" ;--# notpresent
    VP (Pret Pl P2) => "helasteis" ;--# notpresent
    VP (Pret Pl P3) => "helaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "helaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "helarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "helará" ;--# notpresent
    VP (Fut Ind Pl P1) => "helaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "helaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "helarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "helare" ;--# notpresent
    VP (Fut Subj Sg P2) => "helares" ;--# notpresent
    VP (Fut Subj Sg P3) => "helare" ;--# notpresent
    VP (Fut Subj Pl P1) => "heláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "helareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "helaren" ;--# notpresent
    VP (Cond Sg P1) => "helaría" ;--# notpresent
    VP (Cond Sg P2) => "helarías" ;--# notpresent
    VP (Cond Sg P3) => "helaría" ;--# notpresent
    VP (Cond Pl P1) => "helaríamos" ;--# notpresent
    VP (Cond Pl P2) => "helaríais" ;--# notpresent
    VP (Cond Pl P3) => "helarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hiela" ;
    VP (Imp Sg P3) => "hiele" ;
    VP (Imp Pl P1) => "helemos" ;
    VP (Imp Pl P2) => "helad" ;
    VP (Imp Pl P3) => "hielen" ;
    VP (Pass Sg Masc) => "helado" ;
    VP (Pass Sg Fem) => "helada" ;
    VP (Pass Pl Masc) => "helados" ;
    VP (Pass Pl Fem) => "heladas"
    }
  } ;

lin herbar_V = verboV 
 {s = table {
    VI Infn => "herbar" ;
    VI Ger => "herbando" ;
    VI Part => "herbado" ;
    VP (Pres Ind Sg P1) => "hierbo" ;
    VP (Pres Ind Sg P2) => "hierbas" ;
    VP (Pres Ind Sg P3) => "hierba" ;
    VP (Pres Ind Pl P1) => "herbamos" ;
    VP (Pres Ind Pl P2) => "herbáis" ;
    VP (Pres Ind Pl P3) => "hierban" ;
    VP (Pres Subj Sg P1) => "hierbe" ;
    VP (Pres Subj Sg P2) => "hierbes" ;
    VP (Pres Subj Sg P3) => "hierbe" ;
    VP (Pres Subj Pl P1) => "herbemos" ;
    VP (Pres Subj Pl P2) => "herbéis" ;
    VP (Pres Subj Pl P3) => "hierben" ;
    VP (Impf Ind Sg P1) => "herbaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "herbabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "herbaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "herbábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "herbabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "herbaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"herbara" ; "herbase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"herbaras" ; "herbases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"herbara" ; "herbase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"herbáramos" ; "herbásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"herbarais" ; "herbaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"herbaran" ; "herbasen"} ;--# notpresent
    VP (Pret Sg P1) => "herbé" ;--# notpresent
    VP (Pret Sg P2) => "herbaste" ;--# notpresent
    VP (Pret Sg P3) => "herbó" ;--# notpresent
    VP (Pret Pl P1) => "herbamos" ;--# notpresent
    VP (Pret Pl P2) => "herbasteis" ;--# notpresent
    VP (Pret Pl P3) => "herbaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "herbaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "herbarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "herbará" ;--# notpresent
    VP (Fut Ind Pl P1) => "herbaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "herbaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "herbarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "herbare" ;--# notpresent
    VP (Fut Subj Sg P2) => "herbares" ;--# notpresent
    VP (Fut Subj Sg P3) => "herbare" ;--# notpresent
    VP (Fut Subj Pl P1) => "herbáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "herbareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "herbaren" ;--# notpresent
    VP (Cond Sg P1) => "herbaría" ;--# notpresent
    VP (Cond Sg P2) => "herbarías" ;--# notpresent
    VP (Cond Sg P3) => "herbaría" ;--# notpresent
    VP (Cond Pl P1) => "herbaríamos" ;--# notpresent
    VP (Cond Pl P2) => "herbaríais" ;--# notpresent
    VP (Cond Pl P3) => "herbarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hierba" ;
    VP (Imp Sg P3) => "hierbe" ;
    VP (Imp Pl P1) => "herbemos" ;
    VP (Imp Pl P2) => "herbad" ;
    VP (Imp Pl P3) => "hierben" ;
    VP (Pass Sg Masc) => "herbado" ;
    VP (Pass Sg Fem) => "herbada" ;
    VP (Pass Pl Masc) => "herbados" ;
    VP (Pass Pl Fem) => "herbadas"
    }
  } ;

lin herrar_V = verboV 
 {s = table {
    VI Infn => "herrar" ;
    VI Ger => "herrando" ;
    VI Part => "herrado" ;
    VP (Pres Ind Sg P1) => "hierro" ;
    VP (Pres Ind Sg P2) => "hierras" ;
    VP (Pres Ind Sg P3) => "hierra" ;
    VP (Pres Ind Pl P1) => "herramos" ;
    VP (Pres Ind Pl P2) => "herráis" ;
    VP (Pres Ind Pl P3) => "hierran" ;
    VP (Pres Subj Sg P1) => "hierre" ;
    VP (Pres Subj Sg P2) => "hierres" ;
    VP (Pres Subj Sg P3) => "hierre" ;
    VP (Pres Subj Pl P1) => "herremos" ;
    VP (Pres Subj Pl P2) => "herréis" ;
    VP (Pres Subj Pl P3) => "hierren" ;
    VP (Impf Ind Sg P1) => "herraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "herrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "herraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "herrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "herrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "herraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"herrara" ; "herrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"herraras" ; "herrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"herrara" ; "herrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"herráramos" ; "herrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"herrarais" ; "herraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"herraran" ; "herrasen"} ;--# notpresent
    VP (Pret Sg P1) => "herré" ;--# notpresent
    VP (Pret Sg P2) => "herraste" ;--# notpresent
    VP (Pret Sg P3) => "herró" ;--# notpresent
    VP (Pret Pl P1) => "herramos" ;--# notpresent
    VP (Pret Pl P2) => "herrasteis" ;--# notpresent
    VP (Pret Pl P3) => "herraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "herraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "herrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "herrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "herraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "herraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "herrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "herrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "herrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "herrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "herráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "herrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "herraren" ;--# notpresent
    VP (Cond Sg P1) => "herraría" ;--# notpresent
    VP (Cond Sg P2) => "herrarías" ;--# notpresent
    VP (Cond Sg P3) => "herraría" ;--# notpresent
    VP (Cond Pl P1) => "herraríamos" ;--# notpresent
    VP (Cond Pl P2) => "herraríais" ;--# notpresent
    VP (Cond Pl P3) => "herrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hierra" ;
    VP (Imp Sg P3) => "hierre" ;
    VP (Imp Pl P1) => "herremos" ;
    VP (Imp Pl P2) => "herrad" ;
    VP (Imp Pl P3) => "hierren" ;
    VP (Pass Sg Masc) => "herrado" ;
    VP (Pass Sg Fem) => "herrada" ;
    VP (Pass Pl Masc) => "herrados" ;
    VP (Pass Pl Fem) => "herradas"
    }
  } ;

lin herventar_V = verboV 
 {s = table {
    VI Infn => "herventar" ;
    VI Ger => "herventando" ;
    VI Part => "herventado" ;
    VP (Pres Ind Sg P1) => "herviento" ;
    VP (Pres Ind Sg P2) => "hervientas" ;
    VP (Pres Ind Sg P3) => "hervienta" ;
    VP (Pres Ind Pl P1) => "herventamos" ;
    VP (Pres Ind Pl P2) => "herventáis" ;
    VP (Pres Ind Pl P3) => "hervientan" ;
    VP (Pres Subj Sg P1) => "herviente" ;
    VP (Pres Subj Sg P2) => "hervientes" ;
    VP (Pres Subj Sg P3) => "herviente" ;
    VP (Pres Subj Pl P1) => "herventemos" ;
    VP (Pres Subj Pl P2) => "herventéis" ;
    VP (Pres Subj Pl P3) => "hervienten" ;
    VP (Impf Ind Sg P1) => "herventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "herventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "herventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "herventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "herventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "herventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"herventara" ; "herventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"herventaras" ; "herventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"herventara" ; "herventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"herventáramos" ; "herventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"herventarais" ; "herventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"herventaran" ; "herventasen"} ;--# notpresent
    VP (Pret Sg P1) => "herventé" ;--# notpresent
    VP (Pret Sg P2) => "herventaste" ;--# notpresent
    VP (Pret Sg P3) => "herventó" ;--# notpresent
    VP (Pret Pl P1) => "herventamos" ;--# notpresent
    VP (Pret Pl P2) => "herventasteis" ;--# notpresent
    VP (Pret Pl P3) => "herventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "herventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "herventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "herventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "herventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "herventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "herventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "herventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "herventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "herventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "herventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "herventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "herventaren" ;--# notpresent
    VP (Cond Sg P1) => "herventaría" ;--# notpresent
    VP (Cond Sg P2) => "herventarías" ;--# notpresent
    VP (Cond Sg P3) => "herventaría" ;--# notpresent
    VP (Cond Pl P1) => "herventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "herventaríais" ;--# notpresent
    VP (Cond Pl P3) => "herventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hervienta" ;
    VP (Imp Sg P3) => "herviente" ;
    VP (Imp Pl P1) => "herventemos" ;
    VP (Imp Pl P2) => "herventad" ;
    VP (Imp Pl P3) => "hervienten" ;
    VP (Pass Sg Masc) => "herventado" ;
    VP (Pass Sg Fem) => "herventada" ;
    VP (Pass Pl Masc) => "herventados" ;
    VP (Pass Pl Fem) => "herventadas"
    }
  } ;

lin holiar_V = verboV 
 {s = table {
    VI Infn => "holiar" ;
    VI Ger => "holiando" ;
    VI Part => "holiado" ;
    VP (Pres Ind Sg P1) => "holieo" ;
    VP (Pres Ind Sg P2) => "holieas" ;
    VP (Pres Ind Sg P3) => "holiea" ;
    VP (Pres Ind Pl P1) => "holiamos" ;
    VP (Pres Ind Pl P2) => "holiáis" ;
    VP (Pres Ind Pl P3) => "holiean" ;
    VP (Pres Subj Sg P1) => "holiee" ;
    VP (Pres Subj Sg P2) => "holiees" ;
    VP (Pres Subj Sg P3) => "holiee" ;
    VP (Pres Subj Pl P1) => "holiemos" ;
    VP (Pres Subj Pl P2) => "holiéis" ;
    VP (Pres Subj Pl P3) => "holieen" ;
    VP (Impf Ind Sg P1) => "holiaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "holiabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "holiaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "holiábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "holiabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "holiaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"holiara" ; "holiase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"holiaras" ; "holiases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"holiara" ; "holiase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"holiáramos" ; "holiásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"holiarais" ; "holiaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"holiaran" ; "holiasen"} ;--# notpresent
    VP (Pret Sg P1) => "holié" ;--# notpresent
    VP (Pret Sg P2) => "holiaste" ;--# notpresent
    VP (Pret Sg P3) => "holió" ;--# notpresent
    VP (Pret Pl P1) => "holiamos" ;--# notpresent
    VP (Pret Pl P2) => "holiasteis" ;--# notpresent
    VP (Pret Pl P3) => "holiaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "holiaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "holiarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "holiará" ;--# notpresent
    VP (Fut Ind Pl P1) => "holiaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "holiaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "holiarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "holiare" ;--# notpresent
    VP (Fut Subj Sg P2) => "holiares" ;--# notpresent
    VP (Fut Subj Sg P3) => "holiare" ;--# notpresent
    VP (Fut Subj Pl P1) => "holiáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "holiareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "holiaren" ;--# notpresent
    VP (Cond Sg P1) => "holiaría" ;--# notpresent
    VP (Cond Sg P2) => "holiarías" ;--# notpresent
    VP (Cond Sg P3) => "holiaría" ;--# notpresent
    VP (Cond Pl P1) => "holiaríamos" ;--# notpresent
    VP (Cond Pl P2) => "holiaríais" ;--# notpresent
    VP (Cond Pl P3) => "holiarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "holiea" ;
    VP (Imp Sg P3) => "holiee" ;
    VP (Imp Pl P1) => "holiemos" ;
    VP (Imp Pl P2) => "holiad" ;
    VP (Imp Pl P3) => "holieen" ;
    VP (Pass Sg Masc) => "holiado" ;
    VP (Pass Sg Fem) => "holiada" ;
    VP (Pass Pl Masc) => "holiados" ;
    VP (Pass Pl Fem) => "holiadas"
    }
  } ;

lin improbar_V = verboV 
 {s = table {
    VI Infn => "improbar" ;
    VI Ger => "improbando" ;
    VI Part => "improbado" ;
    VP (Pres Ind Sg P1) => "impruebo" ;
    VP (Pres Ind Sg P2) => "impruebas" ;
    VP (Pres Ind Sg P3) => "imprueba" ;
    VP (Pres Ind Pl P1) => "improbamos" ;
    VP (Pres Ind Pl P2) => "improbáis" ;
    VP (Pres Ind Pl P3) => "imprueban" ;
    VP (Pres Subj Sg P1) => "impruebe" ;
    VP (Pres Subj Sg P2) => "impruebes" ;
    VP (Pres Subj Sg P3) => "impruebe" ;
    VP (Pres Subj Pl P1) => "improbemos" ;
    VP (Pres Subj Pl P2) => "improbéis" ;
    VP (Pres Subj Pl P3) => "imprueben" ;
    VP (Impf Ind Sg P1) => "improbaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "improbabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "improbaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "improbábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "improbabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "improbaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"improbara" ; "improbase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"improbaras" ; "improbases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"improbara" ; "improbase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"improbáramos" ; "improbásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"improbarais" ; "improbaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"improbaran" ; "improbasen"} ;--# notpresent
    VP (Pret Sg P1) => "improbé" ;--# notpresent
    VP (Pret Sg P2) => "improbaste" ;--# notpresent
    VP (Pret Sg P3) => "improbó" ;--# notpresent
    VP (Pret Pl P1) => "improbamos" ;--# notpresent
    VP (Pret Pl P2) => "improbasteis" ;--# notpresent
    VP (Pret Pl P3) => "improbaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "improbaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "improbarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "improbará" ;--# notpresent
    VP (Fut Ind Pl P1) => "improbaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "improbaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "improbarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "improbare" ;--# notpresent
    VP (Fut Subj Sg P2) => "improbares" ;--# notpresent
    VP (Fut Subj Sg P3) => "improbare" ;--# notpresent
    VP (Fut Subj Pl P1) => "improbáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "improbareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "improbaren" ;--# notpresent
    VP (Cond Sg P1) => "improbaría" ;--# notpresent
    VP (Cond Sg P2) => "improbarías" ;--# notpresent
    VP (Cond Sg P3) => "improbaría" ;--# notpresent
    VP (Cond Pl P1) => "improbaríamos" ;--# notpresent
    VP (Cond Pl P2) => "improbaríais" ;--# notpresent
    VP (Cond Pl P3) => "improbarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "imprueba" ;
    VP (Imp Sg P3) => "impruebe" ;
    VP (Imp Pl P1) => "improbemos" ;
    VP (Imp Pl P2) => "improbad" ;
    VP (Imp Pl P3) => "imprueben" ;
    VP (Pass Sg Masc) => "improbado" ;
    VP (Pass Sg Fem) => "improbada" ;
    VP (Pass Pl Masc) => "improbados" ;
    VP (Pass Pl Fem) => "improbadas"
    }
  } ;

lin incensar_V = verboV 
 {s = table {
    VI Infn => "incensar" ;
    VI Ger => "incensando" ;
    VI Part => "incensado" ;
    VP (Pres Ind Sg P1) => "incienso" ;
    VP (Pres Ind Sg P2) => "inciensas" ;
    VP (Pres Ind Sg P3) => "inciensa" ;
    VP (Pres Ind Pl P1) => "incensamos" ;
    VP (Pres Ind Pl P2) => "incensáis" ;
    VP (Pres Ind Pl P3) => "inciensan" ;
    VP (Pres Subj Sg P1) => "inciense" ;
    VP (Pres Subj Sg P2) => "incienses" ;
    VP (Pres Subj Sg P3) => "inciense" ;
    VP (Pres Subj Pl P1) => "incensemos" ;
    VP (Pres Subj Pl P2) => "incenséis" ;
    VP (Pres Subj Pl P3) => "inciensen" ;
    VP (Impf Ind Sg P1) => "incensaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "incensabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "incensaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "incensábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "incensabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "incensaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"incensara" ; "incensase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"incensaras" ; "incensases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"incensara" ; "incensase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"incensáramos" ; "incensásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"incensarais" ; "incensaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"incensaran" ; "incensasen"} ;--# notpresent
    VP (Pret Sg P1) => "incensé" ;--# notpresent
    VP (Pret Sg P2) => "incensaste" ;--# notpresent
    VP (Pret Sg P3) => "incensó" ;--# notpresent
    VP (Pret Pl P1) => "incensamos" ;--# notpresent
    VP (Pret Pl P2) => "incensasteis" ;--# notpresent
    VP (Pret Pl P3) => "incensaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "incensaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "incensarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "incensará" ;--# notpresent
    VP (Fut Ind Pl P1) => "incensaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "incensaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "incensarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "incensare" ;--# notpresent
    VP (Fut Subj Sg P2) => "incensares" ;--# notpresent
    VP (Fut Subj Sg P3) => "incensare" ;--# notpresent
    VP (Fut Subj Pl P1) => "incensáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "incensareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "incensaren" ;--# notpresent
    VP (Cond Sg P1) => "incensaría" ;--# notpresent
    VP (Cond Sg P2) => "incensarías" ;--# notpresent
    VP (Cond Sg P3) => "incensaría" ;--# notpresent
    VP (Cond Pl P1) => "incensaríamos" ;--# notpresent
    VP (Cond Pl P2) => "incensaríais" ;--# notpresent
    VP (Cond Pl P3) => "incensarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inciensa" ;
    VP (Imp Sg P3) => "inciense" ;
    VP (Imp Pl P1) => "incensemos" ;
    VP (Imp Pl P2) => "incensad" ;
    VP (Imp Pl P3) => "inciensen" ;
    VP (Pass Sg Masc) => "incensado" ;
    VP (Pass Sg Fem) => "incensada" ;
    VP (Pass Pl Masc) => "incensados" ;
    VP (Pass Pl Fem) => "incensadas"
    }
  } ;

lin infernar_V = verboV 
 {s = table {
    VI Infn => "infernar" ;
    VI Ger => "infernando" ;
    VI Part => "infernado" ;
    VP (Pres Ind Sg P1) => "infierno" ;
    VP (Pres Ind Sg P2) => "infiernas" ;
    VP (Pres Ind Sg P3) => "infierna" ;
    VP (Pres Ind Pl P1) => "infernamos" ;
    VP (Pres Ind Pl P2) => "infernáis" ;
    VP (Pres Ind Pl P3) => "infiernan" ;
    VP (Pres Subj Sg P1) => "infierne" ;
    VP (Pres Subj Sg P2) => "infiernes" ;
    VP (Pres Subj Sg P3) => "infierne" ;
    VP (Pres Subj Pl P1) => "infernemos" ;
    VP (Pres Subj Pl P2) => "infernéis" ;
    VP (Pres Subj Pl P3) => "infiernen" ;
    VP (Impf Ind Sg P1) => "infernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "infernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "infernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "infernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "infernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "infernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"infernara" ; "infernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"infernaras" ; "infernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"infernara" ; "infernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"infernáramos" ; "infernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"infernarais" ; "infernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"infernaran" ; "infernasen"} ;--# notpresent
    VP (Pret Sg P1) => "inferné" ;--# notpresent
    VP (Pret Sg P2) => "infernaste" ;--# notpresent
    VP (Pret Sg P3) => "infernó" ;--# notpresent
    VP (Pret Pl P1) => "infernamos" ;--# notpresent
    VP (Pret Pl P2) => "infernasteis" ;--# notpresent
    VP (Pret Pl P3) => "infernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "infernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "infernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "infernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "infernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "infernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "infernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "infernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "infernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "infernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "infernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "infernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "infernaren" ;--# notpresent
    VP (Cond Sg P1) => "infernaría" ;--# notpresent
    VP (Cond Sg P2) => "infernarías" ;--# notpresent
    VP (Cond Sg P3) => "infernaría" ;--# notpresent
    VP (Cond Pl P1) => "infernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "infernaríais" ;--# notpresent
    VP (Cond Pl P3) => "infernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "infierna" ;
    VP (Imp Sg P3) => "infierne" ;
    VP (Imp Pl P1) => "infernemos" ;
    VP (Imp Pl P2) => "infernad" ;
    VP (Imp Pl P3) => "infiernen" ;
    VP (Pass Sg Masc) => "infernado" ;
    VP (Pass Sg Fem) => "infernada" ;
    VP (Pass Pl Masc) => "infernados" ;
    VP (Pass Pl Fem) => "infernadas"
    }
  } ;

lin invernar_V = verboV 
 {s = table {
    VI Infn => "invernar" ;
    VI Ger => "invernando" ;
    VI Part => "invernado" ;
    VP (Pres Ind Sg P1) => "invierno" ;
    VP (Pres Ind Sg P2) => "inviernas" ;
    VP (Pres Ind Sg P3) => "invierna" ;
    VP (Pres Ind Pl P1) => "invernamos" ;
    VP (Pres Ind Pl P2) => "invernáis" ;
    VP (Pres Ind Pl P3) => "inviernan" ;
    VP (Pres Subj Sg P1) => "invierne" ;
    VP (Pres Subj Sg P2) => "inviernes" ;
    VP (Pres Subj Sg P3) => "invierne" ;
    VP (Pres Subj Pl P1) => "invernemos" ;
    VP (Pres Subj Pl P2) => "invernéis" ;
    VP (Pres Subj Pl P3) => "inviernen" ;
    VP (Impf Ind Sg P1) => "invernaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "invernabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "invernaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "invernábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "invernabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "invernaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"invernara" ; "invernase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"invernaras" ; "invernases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"invernara" ; "invernase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"invernáramos" ; "invernásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"invernarais" ; "invernaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"invernaran" ; "invernasen"} ;--# notpresent
    VP (Pret Sg P1) => "inverné" ;--# notpresent
    VP (Pret Sg P2) => "invernaste" ;--# notpresent
    VP (Pret Sg P3) => "invernó" ;--# notpresent
    VP (Pret Pl P1) => "invernamos" ;--# notpresent
    VP (Pret Pl P2) => "invernasteis" ;--# notpresent
    VP (Pret Pl P3) => "invernaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "invernaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "invernarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "invernará" ;--# notpresent
    VP (Fut Ind Pl P1) => "invernaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "invernaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "invernarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "invernare" ;--# notpresent
    VP (Fut Subj Sg P2) => "invernares" ;--# notpresent
    VP (Fut Subj Sg P3) => "invernare" ;--# notpresent
    VP (Fut Subj Pl P1) => "invernáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "invernareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "invernaren" ;--# notpresent
    VP (Cond Sg P1) => "invernaría" ;--# notpresent
    VP (Cond Sg P2) => "invernarías" ;--# notpresent
    VP (Cond Sg P3) => "invernaría" ;--# notpresent
    VP (Cond Pl P1) => "invernaríamos" ;--# notpresent
    VP (Cond Pl P2) => "invernaríais" ;--# notpresent
    VP (Cond Pl P3) => "invernarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "invierna" ;
    VP (Imp Sg P3) => "invierne" ;
    VP (Imp Pl P1) => "invernemos" ;
    VP (Imp Pl P2) => "invernad" ;
    VP (Imp Pl P3) => "inviernen" ;
    VP (Pass Sg Masc) => "invernado" ;
    VP (Pass Sg Fem) => "invernada" ;
    VP (Pass Pl Masc) => "invernados" ;
    VP (Pass Pl Fem) => "invernadas"
    }
  } ;

lin jamerdar_V = verboV 
 {s = table {
    VI Infn => "jamerdar" ;
    VI Ger => "jamerdando" ;
    VI Part => "jamerdado" ;
    VP (Pres Ind Sg P1) => "jamierdo" ;
    VP (Pres Ind Sg P2) => "jamierdas" ;
    VP (Pres Ind Sg P3) => "jamierda" ;
    VP (Pres Ind Pl P1) => "jamerdamos" ;
    VP (Pres Ind Pl P2) => "jamerdáis" ;
    VP (Pres Ind Pl P3) => "jamierdan" ;
    VP (Pres Subj Sg P1) => "jamierde" ;
    VP (Pres Subj Sg P2) => "jamierdes" ;
    VP (Pres Subj Sg P3) => "jamierde" ;
    VP (Pres Subj Pl P1) => "jamerdemos" ;
    VP (Pres Subj Pl P2) => "jamerdéis" ;
    VP (Pres Subj Pl P3) => "jamierden" ;
    VP (Impf Ind Sg P1) => "jamerdaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "jamerdabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "jamerdaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "jamerdábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "jamerdabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "jamerdaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"jamerdara" ; "jamerdase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"jamerdaras" ; "jamerdases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"jamerdara" ; "jamerdase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"jamerdáramos" ; "jamerdásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"jamerdarais" ; "jamerdaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"jamerdaran" ; "jamerdasen"} ;--# notpresent
    VP (Pret Sg P1) => "jamerdé" ;--# notpresent
    VP (Pret Sg P2) => "jamerdaste" ;--# notpresent
    VP (Pret Sg P3) => "jamerdó" ;--# notpresent
    VP (Pret Pl P1) => "jamerdamos" ;--# notpresent
    VP (Pret Pl P2) => "jamerdasteis" ;--# notpresent
    VP (Pret Pl P3) => "jamerdaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "jamerdaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "jamerdarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "jamerdará" ;--# notpresent
    VP (Fut Ind Pl P1) => "jamerdaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "jamerdaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "jamerdarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "jamerdare" ;--# notpresent
    VP (Fut Subj Sg P2) => "jamerdares" ;--# notpresent
    VP (Fut Subj Sg P3) => "jamerdare" ;--# notpresent
    VP (Fut Subj Pl P1) => "jamerdáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "jamerdareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "jamerdaren" ;--# notpresent
    VP (Cond Sg P1) => "jamerdaría" ;--# notpresent
    VP (Cond Sg P2) => "jamerdarías" ;--# notpresent
    VP (Cond Sg P3) => "jamerdaría" ;--# notpresent
    VP (Cond Pl P1) => "jamerdaríamos" ;--# notpresent
    VP (Cond Pl P2) => "jamerdaríais" ;--# notpresent
    VP (Cond Pl P3) => "jamerdarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "jamierda" ;
    VP (Imp Sg P3) => "jamierde" ;
    VP (Imp Pl P1) => "jamerdemos" ;
    VP (Imp Pl P2) => "jamerdad" ;
    VP (Imp Pl P3) => "jamierden" ;
    VP (Pass Sg Masc) => "jamerdado" ;
    VP (Pass Sg Fem) => "jamerdada" ;
    VP (Pass Pl Masc) => "jamerdados" ;
    VP (Pass Pl Fem) => "jamerdadas"
    }
  } ;

lin mancornar_V = verboV 
 {s = table {
    VI Infn => "mancornar" ;
    VI Ger => "mancornando" ;
    VI Part => "mancornado" ;
    VP (Pres Ind Sg P1) => "mancuerno" ;
    VP (Pres Ind Sg P2) => "mancuernas" ;
    VP (Pres Ind Sg P3) => "mancuerna" ;
    VP (Pres Ind Pl P1) => "mancornamos" ;
    VP (Pres Ind Pl P2) => "mancornáis" ;
    VP (Pres Ind Pl P3) => "mancuernan" ;
    VP (Pres Subj Sg P1) => "mancuerne" ;
    VP (Pres Subj Sg P2) => "mancuernes" ;
    VP (Pres Subj Sg P3) => "mancuerne" ;
    VP (Pres Subj Pl P1) => "mancornemos" ;
    VP (Pres Subj Pl P2) => "mancornéis" ;
    VP (Pres Subj Pl P3) => "mancuernen" ;
    VP (Impf Ind Sg P1) => "mancornaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "mancornabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "mancornaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "mancornábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mancornabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mancornaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mancornara" ; "mancornase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mancornaras" ; "mancornases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mancornara" ; "mancornase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mancornáramos" ; "mancornásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mancornarais" ; "mancornaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mancornaran" ; "mancornasen"} ;--# notpresent
    VP (Pret Sg P1) => "mancorné" ;--# notpresent
    VP (Pret Sg P2) => "mancornaste" ;--# notpresent
    VP (Pret Sg P3) => "mancornó" ;--# notpresent
    VP (Pret Pl P1) => "mancornamos" ;--# notpresent
    VP (Pret Pl P2) => "mancornasteis" ;--# notpresent
    VP (Pret Pl P3) => "mancornaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mancornaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mancornarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mancornará" ;--# notpresent
    VP (Fut Ind Pl P1) => "mancornaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mancornaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mancornarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mancornare" ;--# notpresent
    VP (Fut Subj Sg P2) => "mancornares" ;--# notpresent
    VP (Fut Subj Sg P3) => "mancornare" ;--# notpresent
    VP (Fut Subj Pl P1) => "mancornáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mancornareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mancornaren" ;--# notpresent
    VP (Cond Sg P1) => "mancornaría" ;--# notpresent
    VP (Cond Sg P2) => "mancornarías" ;--# notpresent
    VP (Cond Sg P3) => "mancornaría" ;--# notpresent
    VP (Cond Pl P1) => "mancornaríamos" ;--# notpresent
    VP (Cond Pl P2) => "mancornaríais" ;--# notpresent
    VP (Cond Pl P3) => "mancornarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mancuerna" ;
    VP (Imp Sg P3) => "mancuerne" ;
    VP (Imp Pl P1) => "mancornemos" ;
    VP (Imp Pl P2) => "mancornad" ;
    VP (Imp Pl P3) => "mancuernen" ;
    VP (Pass Sg Masc) => "mancornado" ;
    VP (Pass Sg Fem) => "mancornada" ;
    VP (Pass Pl Masc) => "mancornados" ;
    VP (Pass Pl Fem) => "mancornadas"
    }
  } ;

lin manifestar_V = verboV 
 {s = table {
    VI Infn => "manifestar" ;
    VI Ger => "manifestando" ;
    VI Part => "manifestado" ;
    VP (Pres Ind Sg P1) => "manifiesto" ;
    VP (Pres Ind Sg P2) => "manifiestas" ;
    VP (Pres Ind Sg P3) => "manifiesta" ;
    VP (Pres Ind Pl P1) => "manifestamos" ;
    VP (Pres Ind Pl P2) => "manifestáis" ;
    VP (Pres Ind Pl P3) => "manifiestan" ;
    VP (Pres Subj Sg P1) => "manifieste" ;
    VP (Pres Subj Sg P2) => "manifiestes" ;
    VP (Pres Subj Sg P3) => "manifieste" ;
    VP (Pres Subj Pl P1) => "manifestemos" ;
    VP (Pres Subj Pl P2) => "manifestéis" ;
    VP (Pres Subj Pl P3) => "manifiesten" ;
    VP (Impf Ind Sg P1) => "manifestaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "manifestabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "manifestaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "manifestábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "manifestabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "manifestaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"manifestara" ; "manifestase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"manifestaras" ; "manifestases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"manifestara" ; "manifestase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"manifestáramos" ; "manifestásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"manifestarais" ; "manifestaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"manifestaran" ; "manifestasen"} ;--# notpresent
    VP (Pret Sg P1) => "manifesté" ;--# notpresent
    VP (Pret Sg P2) => "manifestaste" ;--# notpresent
    VP (Pret Sg P3) => "manifestó" ;--# notpresent
    VP (Pret Pl P1) => "manifestamos" ;--# notpresent
    VP (Pret Pl P2) => "manifestasteis" ;--# notpresent
    VP (Pret Pl P3) => "manifestaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "manifestaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "manifestarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "manifestará" ;--# notpresent
    VP (Fut Ind Pl P1) => "manifestaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "manifestaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "manifestarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "manifestare" ;--# notpresent
    VP (Fut Subj Sg P2) => "manifestares" ;--# notpresent
    VP (Fut Subj Sg P3) => "manifestare" ;--# notpresent
    VP (Fut Subj Pl P1) => "manifestáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "manifestareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "manifestaren" ;--# notpresent
    VP (Cond Sg P1) => "manifestaría" ;--# notpresent
    VP (Cond Sg P2) => "manifestarías" ;--# notpresent
    VP (Cond Sg P3) => "manifestaría" ;--# notpresent
    VP (Cond Pl P1) => "manifestaríamos" ;--# notpresent
    VP (Cond Pl P2) => "manifestaríais" ;--# notpresent
    VP (Cond Pl P3) => "manifestarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "manifiesta" ;
    VP (Imp Sg P3) => "manifieste" ;
    VP (Imp Pl P1) => "manifestemos" ;
    VP (Imp Pl P2) => "manifestad" ;
    VP (Imp Pl P3) => "manifiesten" ;
    VP (Pass Sg Masc) => "manifestado" ;
    VP (Pass Sg Fem) => "manifestada" ;
    VP (Pass Pl Masc) => "manifestados" ;
    VP (Pass Pl Fem) => "manifestadas"
    }
  } ;

lin melar_V = verboV 
 {s = table {
    VI Infn => "melar" ;
    VI Ger => "melando" ;
    VI Part => "melado" ;
    VP (Pres Ind Sg P1) => "mielo" ;
    VP (Pres Ind Sg P2) => "mielas" ;
    VP (Pres Ind Sg P3) => "miela" ;
    VP (Pres Ind Pl P1) => "melamos" ;
    VP (Pres Ind Pl P2) => "meláis" ;
    VP (Pres Ind Pl P3) => "mielan" ;
    VP (Pres Subj Sg P1) => "miele" ;
    VP (Pres Subj Sg P2) => "mieles" ;
    VP (Pres Subj Sg P3) => "miele" ;
    VP (Pres Subj Pl P1) => "melemos" ;
    VP (Pres Subj Pl P2) => "meléis" ;
    VP (Pres Subj Pl P3) => "mielen" ;
    VP (Impf Ind Sg P1) => "melaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "melabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "melaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "melábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "melabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "melaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"melara" ; "melase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"melaras" ; "melases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"melara" ; "melase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"meláramos" ; "melásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"melarais" ; "melaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"melaran" ; "melasen"} ;--# notpresent
    VP (Pret Sg P1) => "melé" ;--# notpresent
    VP (Pret Sg P2) => "melaste" ;--# notpresent
    VP (Pret Sg P3) => "meló" ;--# notpresent
    VP (Pret Pl P1) => "melamos" ;--# notpresent
    VP (Pret Pl P2) => "melasteis" ;--# notpresent
    VP (Pret Pl P3) => "melaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "melaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "melarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "melará" ;--# notpresent
    VP (Fut Ind Pl P1) => "melaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "melaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "melarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "melare" ;--# notpresent
    VP (Fut Subj Sg P2) => "melares" ;--# notpresent
    VP (Fut Subj Sg P3) => "melare" ;--# notpresent
    VP (Fut Subj Pl P1) => "meláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "melareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "melaren" ;--# notpresent
    VP (Cond Sg P1) => "melaría" ;--# notpresent
    VP (Cond Sg P2) => "melarías" ;--# notpresent
    VP (Cond Sg P3) => "melaría" ;--# notpresent
    VP (Cond Pl P1) => "melaríamos" ;--# notpresent
    VP (Cond Pl P2) => "melaríais" ;--# notpresent
    VP (Cond Pl P3) => "melarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "miela" ;
    VP (Imp Sg P3) => "miele" ;
    VP (Imp Pl P1) => "melemos" ;
    VP (Imp Pl P2) => "melad" ;
    VP (Imp Pl P3) => "mielen" ;
    VP (Pass Sg Masc) => "melado" ;
    VP (Pass Sg Fem) => "melada" ;
    VP (Pass Pl Masc) => "melados" ;
    VP (Pass Pl Fem) => "meladas"
    }
  } ;

lin mentar_V = verboV 
 {s = table {
    VI Infn => "mentar" ;
    VI Ger => "mentando" ;
    VI Part => "mentado" ;
    VP (Pres Ind Sg P1) => "miento" ;
    VP (Pres Ind Sg P2) => "mientas" ;
    VP (Pres Ind Sg P3) => "mienta" ;
    VP (Pres Ind Pl P1) => "mentamos" ;
    VP (Pres Ind Pl P2) => "mentáis" ;
    VP (Pres Ind Pl P3) => "mientan" ;
    VP (Pres Subj Sg P1) => "miente" ;
    VP (Pres Subj Sg P2) => "mientes" ;
    VP (Pres Subj Sg P3) => "miente" ;
    VP (Pres Subj Pl P1) => "mentemos" ;
    VP (Pres Subj Pl P2) => "mentéis" ;
    VP (Pres Subj Pl P3) => "mienten" ;
    VP (Impf Ind Sg P1) => "mentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "mentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "mentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "mentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mentara" ; "mentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mentaras" ; "mentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mentara" ; "mentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mentáramos" ; "mentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mentarais" ; "mentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mentaran" ; "mentasen"} ;--# notpresent
    VP (Pret Sg P1) => "menté" ;--# notpresent
    VP (Pret Sg P2) => "mentaste" ;--# notpresent
    VP (Pret Sg P3) => "mentó" ;--# notpresent
    VP (Pret Pl P1) => "mentamos" ;--# notpresent
    VP (Pret Pl P2) => "mentasteis" ;--# notpresent
    VP (Pret Pl P3) => "mentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "mentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "mentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "mentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "mentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mentaren" ;--# notpresent
    VP (Cond Sg P1) => "mentaría" ;--# notpresent
    VP (Cond Sg P2) => "mentarías" ;--# notpresent
    VP (Cond Sg P3) => "mentaría" ;--# notpresent
    VP (Cond Pl P1) => "mentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "mentaríais" ;--# notpresent
    VP (Cond Pl P3) => "mentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mienta" ;
    VP (Imp Sg P3) => "miente" ;
    VP (Imp Pl P1) => "mentemos" ;
    VP (Imp Pl P2) => "mentad" ;
    VP (Imp Pl P3) => "mienten" ;
    VP (Pass Sg Masc) => "mentado" ;
    VP (Pass Sg Fem) => "mentada" ;
    VP (Pass Pl Masc) => "mentados" ;
    VP (Pass Pl Fem) => "mentadas"
    }
  } ;

lin merendar_V = verboV 
 {s = table {
    VI Infn => "merendar" ;
    VI Ger => "merendando" ;
    VI Part => "merendado" ;
    VP (Pres Ind Sg P1) => "meriendo" ;
    VP (Pres Ind Sg P2) => "meriendas" ;
    VP (Pres Ind Sg P3) => "merienda" ;
    VP (Pres Ind Pl P1) => "merendamos" ;
    VP (Pres Ind Pl P2) => "merendáis" ;
    VP (Pres Ind Pl P3) => "meriendan" ;
    VP (Pres Subj Sg P1) => "meriende" ;
    VP (Pres Subj Sg P2) => "meriendes" ;
    VP (Pres Subj Sg P3) => "meriende" ;
    VP (Pres Subj Pl P1) => "merendemos" ;
    VP (Pres Subj Pl P2) => "merendéis" ;
    VP (Pres Subj Pl P3) => "merienden" ;
    VP (Impf Ind Sg P1) => "merendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "merendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "merendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "merendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "merendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "merendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"merendara" ; "merendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"merendaras" ; "merendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"merendara" ; "merendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"merendáramos" ; "merendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"merendarais" ; "merendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"merendaran" ; "merendasen"} ;--# notpresent
    VP (Pret Sg P1) => "merendé" ;--# notpresent
    VP (Pret Sg P2) => "merendaste" ;--# notpresent
    VP (Pret Sg P3) => "merendó" ;--# notpresent
    VP (Pret Pl P1) => "merendamos" ;--# notpresent
    VP (Pret Pl P2) => "merendasteis" ;--# notpresent
    VP (Pret Pl P3) => "merendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "merendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "merendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "merendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "merendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "merendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "merendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "merendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "merendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "merendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "merendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "merendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "merendaren" ;--# notpresent
    VP (Cond Sg P1) => "merendaría" ;--# notpresent
    VP (Cond Sg P2) => "merendarías" ;--# notpresent
    VP (Cond Sg P3) => "merendaría" ;--# notpresent
    VP (Cond Pl P1) => "merendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "merendaríais" ;--# notpresent
    VP (Cond Pl P3) => "merendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "merienda" ;
    VP (Imp Sg P3) => "meriende" ;
    VP (Imp Pl P1) => "merendemos" ;
    VP (Imp Pl P2) => "merendad" ;
    VP (Imp Pl P3) => "merienden" ;
    VP (Pass Sg Masc) => "merendado" ;
    VP (Pass Sg Fem) => "merendada" ;
    VP (Pass Pl Masc) => "merendados" ;
    VP (Pass Pl Fem) => "merendadas"
    }
  } ;

lin moblar_V = verboV 
 {s = table {
    VI Infn => "moblar" ;
    VI Ger => "moblando" ;
    VI Part => "moblado" ;
    VP (Pres Ind Sg P1) => "mueblo" ;
    VP (Pres Ind Sg P2) => "mueblas" ;
    VP (Pres Ind Sg P3) => "muebla" ;
    VP (Pres Ind Pl P1) => "moblamos" ;
    VP (Pres Ind Pl P2) => "mobláis" ;
    VP (Pres Ind Pl P3) => "mueblan" ;
    VP (Pres Subj Sg P1) => "mueble" ;
    VP (Pres Subj Sg P2) => "muebles" ;
    VP (Pres Subj Sg P3) => "mueble" ;
    VP (Pres Subj Pl P1) => "moblemos" ;
    VP (Pres Subj Pl P2) => "mobléis" ;
    VP (Pres Subj Pl P3) => "mueblen" ;
    VP (Impf Ind Sg P1) => "moblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "moblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "moblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "moblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "moblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "moblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"moblara" ; "moblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"moblaras" ; "moblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"moblara" ; "moblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mobláramos" ; "moblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"moblarais" ; "moblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"moblaran" ; "moblasen"} ;--# notpresent
    VP (Pret Sg P1) => "moblé" ;--# notpresent
    VP (Pret Sg P2) => "moblaste" ;--# notpresent
    VP (Pret Sg P3) => "mobló" ;--# notpresent
    VP (Pret Pl P1) => "moblamos" ;--# notpresent
    VP (Pret Pl P2) => "moblasteis" ;--# notpresent
    VP (Pret Pl P3) => "moblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "moblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "moblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "moblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "moblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "moblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "moblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "moblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "moblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "moblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "mobláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "moblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "moblaren" ;--# notpresent
    VP (Cond Sg P1) => "moblaría" ;--# notpresent
    VP (Cond Sg P2) => "moblarías" ;--# notpresent
    VP (Cond Sg P3) => "moblaría" ;--# notpresent
    VP (Cond Pl P1) => "moblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "moblaríais" ;--# notpresent
    VP (Cond Pl P3) => "moblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muebla" ;
    VP (Imp Sg P3) => "mueble" ;
    VP (Imp Pl P1) => "moblemos" ;
    VP (Imp Pl P2) => "moblad" ;
    VP (Imp Pl P3) => "mueblen" ;
    VP (Pass Sg Masc) => "moblado" ;
    VP (Pass Sg Fem) => "moblada" ;
    VP (Pass Pl Masc) => "moblados" ;
    VP (Pass Pl Fem) => "mobladas"
    }
  } ;

lin mostrar_V = verboV 
 {s = table {
    VI Infn => "mostrar" ;
    VI Ger => "mostrando" ;
    VI Part => "mostrado" ;
    VP (Pres Ind Sg P1) => "muestro" ;
    VP (Pres Ind Sg P2) => "muestras" ;
    VP (Pres Ind Sg P3) => "muestra" ;
    VP (Pres Ind Pl P1) => "mostramos" ;
    VP (Pres Ind Pl P2) => "mostráis" ;
    VP (Pres Ind Pl P3) => "muestran" ;
    VP (Pres Subj Sg P1) => "muestre" ;
    VP (Pres Subj Sg P2) => "muestres" ;
    VP (Pres Subj Sg P3) => "muestre" ;
    VP (Pres Subj Pl P1) => "mostremos" ;
    VP (Pres Subj Pl P2) => "mostréis" ;
    VP (Pres Subj Pl P3) => "muestren" ;
    VP (Impf Ind Sg P1) => "mostraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "mostrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "mostraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "mostrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mostrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mostraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"mostrara" ; "mostrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mostraras" ; "mostrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"mostrara" ; "mostrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"mostráramos" ; "mostrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mostrarais" ; "mostraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mostraran" ; "mostrasen"} ;--# notpresent
    VP (Pret Sg P1) => "mostré" ;--# notpresent
    VP (Pret Sg P2) => "mostraste" ;--# notpresent
    VP (Pret Sg P3) => "mostró" ;--# notpresent
    VP (Pret Pl P1) => "mostramos" ;--# notpresent
    VP (Pret Pl P2) => "mostrasteis" ;--# notpresent
    VP (Pret Pl P3) => "mostraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mostraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mostrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mostrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "mostraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mostraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mostrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "mostrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "mostrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "mostrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "mostráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "mostrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mostraren" ;--# notpresent
    VP (Cond Sg P1) => "mostraría" ;--# notpresent
    VP (Cond Sg P2) => "mostrarías" ;--# notpresent
    VP (Cond Sg P3) => "mostraría" ;--# notpresent
    VP (Cond Pl P1) => "mostraríamos" ;--# notpresent
    VP (Cond Pl P2) => "mostraríais" ;--# notpresent
    VP (Cond Pl P3) => "mostrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "muestra" ;
    VP (Imp Sg P3) => "muestre" ;
    VP (Imp Pl P1) => "mostremos" ;
    VP (Imp Pl P2) => "mostrad" ;
    VP (Imp Pl P3) => "muestren" ;
    VP (Pass Sg Masc) => "mostrado" ;
    VP (Pass Sg Fem) => "mostrada" ;
    VP (Pass Pl Masc) => "mostrados" ;
    VP (Pass Pl Fem) => "mostradas"
    }
  } ;

lin nevar_V = verboV 
 {s = table {
    VI Infn => "nevar" ;
    VI Ger => "nevando" ;
    VI Part => "nevado" ;
    VP (Pres Ind Sg P1) => "nievo" ;
    VP (Pres Ind Sg P2) => "nievas" ;
    VP (Pres Ind Sg P3) => "nieva" ;
    VP (Pres Ind Pl P1) => "nevamos" ;
    VP (Pres Ind Pl P2) => "neváis" ;
    VP (Pres Ind Pl P3) => "nievan" ;
    VP (Pres Subj Sg P1) => "nieve" ;
    VP (Pres Subj Sg P2) => "nieves" ;
    VP (Pres Subj Sg P3) => "nieve" ;
    VP (Pres Subj Pl P1) => "nevemos" ;
    VP (Pres Subj Pl P2) => "nevéis" ;
    VP (Pres Subj Pl P3) => "nieven" ;
    VP (Impf Ind Sg P1) => "nevaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "nevabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "nevaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "nevábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "nevabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "nevaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"nevara" ; "nevase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"nevaras" ; "nevases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"nevara" ; "nevase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"neváramos" ; "nevásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"nevarais" ; "nevaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"nevaran" ; "nevasen"} ;--# notpresent
    VP (Pret Sg P1) => "nevé" ;--# notpresent
    VP (Pret Sg P2) => "nevaste" ;--# notpresent
    VP (Pret Sg P3) => "nevó" ;--# notpresent
    VP (Pret Pl P1) => "nevamos" ;--# notpresent
    VP (Pret Pl P2) => "nevasteis" ;--# notpresent
    VP (Pret Pl P3) => "nevaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "nevaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "nevarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "nevará" ;--# notpresent
    VP (Fut Ind Pl P1) => "nevaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "nevaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "nevarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "nevare" ;--# notpresent
    VP (Fut Subj Sg P2) => "nevares" ;--# notpresent
    VP (Fut Subj Sg P3) => "nevare" ;--# notpresent
    VP (Fut Subj Pl P1) => "neváremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "nevareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "nevaren" ;--# notpresent
    VP (Cond Sg P1) => "nevaría" ;--# notpresent
    VP (Cond Sg P2) => "nevarías" ;--# notpresent
    VP (Cond Sg P3) => "nevaría" ;--# notpresent
    VP (Cond Pl P1) => "nevaríamos" ;--# notpresent
    VP (Cond Pl P2) => "nevaríais" ;--# notpresent
    VP (Cond Pl P3) => "nevarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "nieva" ;
    VP (Imp Sg P3) => "nieve" ;
    VP (Imp Pl P1) => "nevemos" ;
    VP (Imp Pl P2) => "nevad" ;
    VP (Imp Pl P3) => "nieven" ;
    VP (Pass Sg Masc) => "nevado" ;
    VP (Pass Sg Fem) => "nevada" ;
    VP (Pass Pl Masc) => "nevados" ;
    VP (Pass Pl Fem) => "nevadas"
    }
  } ;

lin patiquebrar_V = verboV 
 {s = table {
    VI Infn => "patiquebrar" ;
    VI Ger => "patiquebrando" ;
    VI Part => "patiquebrado" ;
    VP (Pres Ind Sg P1) => "patiquiebro" ;
    VP (Pres Ind Sg P2) => "patiquiebras" ;
    VP (Pres Ind Sg P3) => "patiquiebra" ;
    VP (Pres Ind Pl P1) => "patiquebramos" ;
    VP (Pres Ind Pl P2) => "patiquebráis" ;
    VP (Pres Ind Pl P3) => "patiquiebran" ;
    VP (Pres Subj Sg P1) => "patiquiebre" ;
    VP (Pres Subj Sg P2) => "patiquiebres" ;
    VP (Pres Subj Sg P3) => "patiquiebre" ;
    VP (Pres Subj Pl P1) => "patiquebremos" ;
    VP (Pres Subj Pl P2) => "patiquebréis" ;
    VP (Pres Subj Pl P3) => "patiquiebren" ;
    VP (Impf Ind Sg P1) => "patiquebraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "patiquebrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "patiquebraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "patiquebrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "patiquebrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "patiquebraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"patiquebrara" ; "patiquebrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"patiquebraras" ; "patiquebrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"patiquebrara" ; "patiquebrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"patiquebráramos" ; "patiquebrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"patiquebrarais" ; "patiquebraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"patiquebraran" ; "patiquebrasen"} ;--# notpresent
    VP (Pret Sg P1) => "patiquebré" ;--# notpresent
    VP (Pret Sg P2) => "patiquebraste" ;--# notpresent
    VP (Pret Sg P3) => "patiquebró" ;--# notpresent
    VP (Pret Pl P1) => "patiquebramos" ;--# notpresent
    VP (Pret Pl P2) => "patiquebrasteis" ;--# notpresent
    VP (Pret Pl P3) => "patiquebraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "patiquebraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "patiquebrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "patiquebrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "patiquebraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "patiquebraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "patiquebrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "patiquebrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "patiquebrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "patiquebrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "patiquebráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "patiquebrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "patiquebraren" ;--# notpresent
    VP (Cond Sg P1) => "patiquebraría" ;--# notpresent
    VP (Cond Sg P2) => "patiquebrarías" ;--# notpresent
    VP (Cond Sg P3) => "patiquebraría" ;--# notpresent
    VP (Cond Pl P1) => "patiquebraríamos" ;--# notpresent
    VP (Cond Pl P2) => "patiquebraríais" ;--# notpresent
    VP (Cond Pl P3) => "patiquebrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "patiquiebra" ;
    VP (Imp Sg P3) => "patiquiebre" ;
    VP (Imp Pl P1) => "patiquebremos" ;
    VP (Imp Pl P2) => "patiquebrad" ;
    VP (Imp Pl P3) => "patiquiebren" ;
    VP (Pass Sg Masc) => "patiquebrado" ;
    VP (Pass Sg Fem) => "patiquebrada" ;
    VP (Pass Pl Masc) => "patiquebrados" ;
    VP (Pass Pl Fem) => "patiquebradas"
    }
  } ;

lin pensar_V = verboV 
 {s = table {
    VI Infn => "pensar" ;
    VI Ger => "pensando" ;
    VI Part => "pensado" ;
    VP (Pres Ind Sg P1) => "pienso" ;
    VP (Pres Ind Sg P2) => "piensas" ;
    VP (Pres Ind Sg P3) => "piensa" ;
    VP (Pres Ind Pl P1) => "pensamos" ;
    VP (Pres Ind Pl P2) => "pensáis" ;
    VP (Pres Ind Pl P3) => "piensan" ;
    VP (Pres Subj Sg P1) => "piense" ;
    VP (Pres Subj Sg P2) => "pienses" ;
    VP (Pres Subj Sg P3) => "piense" ;
    VP (Pres Subj Pl P1) => "pensemos" ;
    VP (Pres Subj Pl P2) => "penséis" ;
    VP (Pres Subj Pl P3) => "piensen" ;
    VP (Impf Ind Sg P1) => "pensaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "pensabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "pensaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "pensábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pensabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pensaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pensara" ; "pensase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pensaras" ; "pensases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pensara" ; "pensase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pensáramos" ; "pensásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pensarais" ; "pensaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pensaran" ; "pensasen"} ;--# notpresent
    VP (Pret Sg P1) => "pensé" ;--# notpresent
    VP (Pret Sg P2) => "pensaste" ;--# notpresent
    VP (Pret Sg P3) => "pensó" ;--# notpresent
    VP (Pret Pl P1) => "pensamos" ;--# notpresent
    VP (Pret Pl P2) => "pensasteis" ;--# notpresent
    VP (Pret Pl P3) => "pensaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pensaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pensarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pensará" ;--# notpresent
    VP (Fut Ind Pl P1) => "pensaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pensaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pensarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pensare" ;--# notpresent
    VP (Fut Subj Sg P2) => "pensares" ;--# notpresent
    VP (Fut Subj Sg P3) => "pensare" ;--# notpresent
    VP (Fut Subj Pl P1) => "pensáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pensareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pensaren" ;--# notpresent
    VP (Cond Sg P1) => "pensaría" ;--# notpresent
    VP (Cond Sg P2) => "pensarías" ;--# notpresent
    VP (Cond Sg P3) => "pensaría" ;--# notpresent
    VP (Cond Pl P1) => "pensaríamos" ;--# notpresent
    VP (Cond Pl P2) => "pensaríais" ;--# notpresent
    VP (Cond Pl P3) => "pensarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "piensa" ;
    VP (Imp Sg P3) => "piense" ;
    VP (Imp Pl P1) => "pensemos" ;
    VP (Imp Pl P2) => "pensad" ;
    VP (Imp Pl P3) => "piensen" ;
    VP (Pass Sg Masc) => "pensado" ;
    VP (Pass Sg Fem) => "pensada" ;
    VP (Pass Pl Masc) => "pensados" ;
    VP (Pass Pl Fem) => "pensadas"
    }
  } ;

lin percollar_V = verboV 
 {s = table {
    VI Infn => "percollar" ;
    VI Ger => "percollando" ;
    VI Part => "percollado" ;
    VP (Pres Ind Sg P1) => "percuello" ;
    VP (Pres Ind Sg P2) => "percuellas" ;
    VP (Pres Ind Sg P3) => "percuella" ;
    VP (Pres Ind Pl P1) => "percollamos" ;
    VP (Pres Ind Pl P2) => "percolláis" ;
    VP (Pres Ind Pl P3) => "percuellan" ;
    VP (Pres Subj Sg P1) => "percuelle" ;
    VP (Pres Subj Sg P2) => "percuelles" ;
    VP (Pres Subj Sg P3) => "percuelle" ;
    VP (Pres Subj Pl P1) => "percollemos" ;
    VP (Pres Subj Pl P2) => "percolléis" ;
    VP (Pres Subj Pl P3) => "percuellen" ;
    VP (Impf Ind Sg P1) => "percollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "percollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "percollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "percollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "percollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "percollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"percollara" ; "percollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"percollaras" ; "percollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"percollara" ; "percollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"percolláramos" ; "percollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"percollarais" ; "percollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"percollaran" ; "percollasen"} ;--# notpresent
    VP (Pret Sg P1) => "percollé" ;--# notpresent
    VP (Pret Sg P2) => "percollaste" ;--# notpresent
    VP (Pret Sg P3) => "percolló" ;--# notpresent
    VP (Pret Pl P1) => "percollamos" ;--# notpresent
    VP (Pret Pl P2) => "percollasteis" ;--# notpresent
    VP (Pret Pl P3) => "percollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "percollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "percollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "percollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "percollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "percollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "percollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "percollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "percollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "percollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "percolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "percollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "percollaren" ;--# notpresent
    VP (Cond Sg P1) => "percollaría" ;--# notpresent
    VP (Cond Sg P2) => "percollarías" ;--# notpresent
    VP (Cond Sg P3) => "percollaría" ;--# notpresent
    VP (Cond Pl P1) => "percollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "percollaríais" ;--# notpresent
    VP (Cond Pl P3) => "percollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "percuella" ;
    VP (Imp Sg P3) => "percuelle" ;
    VP (Imp Pl P1) => "percollemos" ;
    VP (Imp Pl P2) => "percollad" ;
    VP (Imp Pl P3) => "percuellen" ;
    VP (Pass Sg Masc) => "percollado" ;
    VP (Pass Sg Fem) => "percollada" ;
    VP (Pass Pl Masc) => "percollados" ;
    VP (Pass Pl Fem) => "percolladas"
    }
  } ;

lin perniquebrar_V = verboV 
 {s = table {
    VI Infn => "perniquebrar" ;
    VI Ger => "perniquebrando" ;
    VI Part => "perniquebrado" ;
    VP (Pres Ind Sg P1) => "perniquiebro" ;
    VP (Pres Ind Sg P2) => "perniquiebras" ;
    VP (Pres Ind Sg P3) => "perniquiebra" ;
    VP (Pres Ind Pl P1) => "perniquebramos" ;
    VP (Pres Ind Pl P2) => "perniquebráis" ;
    VP (Pres Ind Pl P3) => "perniquiebran" ;
    VP (Pres Subj Sg P1) => "perniquiebre" ;
    VP (Pres Subj Sg P2) => "perniquiebres" ;
    VP (Pres Subj Sg P3) => "perniquiebre" ;
    VP (Pres Subj Pl P1) => "perniquebremos" ;
    VP (Pres Subj Pl P2) => "perniquebréis" ;
    VP (Pres Subj Pl P3) => "perniquiebren" ;
    VP (Impf Ind Sg P1) => "perniquebraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "perniquebrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "perniquebraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "perniquebrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "perniquebrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "perniquebraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"perniquebrara" ; "perniquebrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"perniquebraras" ; "perniquebrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"perniquebrara" ; "perniquebrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"perniquebráramos" ; "perniquebrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"perniquebrarais" ; "perniquebraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"perniquebraran" ; "perniquebrasen"} ;--# notpresent
    VP (Pret Sg P1) => "perniquebré" ;--# notpresent
    VP (Pret Sg P2) => "perniquebraste" ;--# notpresent
    VP (Pret Sg P3) => "perniquebró" ;--# notpresent
    VP (Pret Pl P1) => "perniquebramos" ;--# notpresent
    VP (Pret Pl P2) => "perniquebrasteis" ;--# notpresent
    VP (Pret Pl P3) => "perniquebraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "perniquebraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "perniquebrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "perniquebrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "perniquebraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "perniquebraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "perniquebrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "perniquebrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "perniquebrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "perniquebrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "perniquebráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "perniquebrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "perniquebraren" ;--# notpresent
    VP (Cond Sg P1) => "perniquebraría" ;--# notpresent
    VP (Cond Sg P2) => "perniquebrarías" ;--# notpresent
    VP (Cond Sg P3) => "perniquebraría" ;--# notpresent
    VP (Cond Pl P1) => "perniquebraríamos" ;--# notpresent
    VP (Cond Pl P2) => "perniquebraríais" ;--# notpresent
    VP (Cond Pl P3) => "perniquebrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "perniquiebra" ;
    VP (Imp Sg P3) => "perniquiebre" ;
    VP (Imp Pl P1) => "perniquebremos" ;
    VP (Imp Pl P2) => "perniquebrad" ;
    VP (Imp Pl P3) => "perniquiebren" ;
    VP (Pass Sg Masc) => "perniquebrado" ;
    VP (Pass Sg Fem) => "perniquebrada" ;
    VP (Pass Pl Masc) => "perniquebrados" ;
    VP (Pass Pl Fem) => "perniquebradas"
    }
  } ;

lin poblar_V = verboV 
 {s = table {
    VI Infn => "poblar" ;
    VI Ger => "poblando" ;
    VI Part => "poblado" ;
    VP (Pres Ind Sg P1) => "pueblo" ;
    VP (Pres Ind Sg P2) => "pueblas" ;
    VP (Pres Ind Sg P3) => "puebla" ;
    VP (Pres Ind Pl P1) => "poblamos" ;
    VP (Pres Ind Pl P2) => "pobláis" ;
    VP (Pres Ind Pl P3) => "pueblan" ;
    VP (Pres Subj Sg P1) => "pueble" ;
    VP (Pres Subj Sg P2) => "puebles" ;
    VP (Pres Subj Sg P3) => "pueble" ;
    VP (Pres Subj Pl P1) => "poblemos" ;
    VP (Pres Subj Pl P2) => "pobléis" ;
    VP (Pres Subj Pl P3) => "pueblen" ;
    VP (Impf Ind Sg P1) => "poblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "poblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "poblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "poblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "poblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "poblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"poblara" ; "poblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"poblaras" ; "poblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"poblara" ; "poblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pobláramos" ; "poblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"poblarais" ; "poblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"poblaran" ; "poblasen"} ;--# notpresent
    VP (Pret Sg P1) => "poblé" ;--# notpresent
    VP (Pret Sg P2) => "poblaste" ;--# notpresent
    VP (Pret Sg P3) => "pobló" ;--# notpresent
    VP (Pret Pl P1) => "poblamos" ;--# notpresent
    VP (Pret Pl P2) => "poblasteis" ;--# notpresent
    VP (Pret Pl P3) => "poblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "poblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "poblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "poblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "poblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "poblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "poblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "poblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "poblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "poblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "pobláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "poblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "poblaren" ;--# notpresent
    VP (Cond Sg P1) => "poblaría" ;--# notpresent
    VP (Cond Sg P2) => "poblarías" ;--# notpresent
    VP (Cond Sg P3) => "poblaría" ;--# notpresent
    VP (Cond Pl P1) => "poblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "poblaríais" ;--# notpresent
    VP (Cond Pl P3) => "poblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "puebla" ;
    VP (Imp Sg P3) => "pueble" ;
    VP (Imp Pl P1) => "poblemos" ;
    VP (Imp Pl P2) => "poblad" ;
    VP (Imp Pl P3) => "pueblen" ;
    VP (Pass Sg Masc) => "poblado" ;
    VP (Pass Sg Fem) => "poblada" ;
    VP (Pass Pl Masc) => "poblados" ;
    VP (Pass Pl Fem) => "pobladas"
    }
  } ;

lin premostrar_V = verboV 
 {s = table {
    VI Infn => "premostrar" ;
    VI Ger => "premostrando" ;
    VI Part => "premostrado" ;
    VP (Pres Ind Sg P1) => "premuestro" ;
    VP (Pres Ind Sg P2) => "premuestras" ;
    VP (Pres Ind Sg P3) => "premuestra" ;
    VP (Pres Ind Pl P1) => "premostramos" ;
    VP (Pres Ind Pl P2) => "premostráis" ;
    VP (Pres Ind Pl P3) => "premuestran" ;
    VP (Pres Subj Sg P1) => "premuestre" ;
    VP (Pres Subj Sg P2) => "premuestres" ;
    VP (Pres Subj Sg P3) => "premuestre" ;
    VP (Pres Subj Pl P1) => "premostremos" ;
    VP (Pres Subj Pl P2) => "premostréis" ;
    VP (Pres Subj Pl P3) => "premuestren" ;
    VP (Impf Ind Sg P1) => "premostraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "premostrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "premostraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "premostrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "premostrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "premostraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"premostrara" ; "premostrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"premostraras" ; "premostrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"premostrara" ; "premostrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"premostráramos" ; "premostrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"premostrarais" ; "premostraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"premostraran" ; "premostrasen"} ;--# notpresent
    VP (Pret Sg P1) => "premostré" ;--# notpresent
    VP (Pret Sg P2) => "premostraste" ;--# notpresent
    VP (Pret Sg P3) => "premostró" ;--# notpresent
    VP (Pret Pl P1) => "premostramos" ;--# notpresent
    VP (Pret Pl P2) => "premostrasteis" ;--# notpresent
    VP (Pret Pl P3) => "premostraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "premostraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "premostrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "premostrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "premostraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "premostraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "premostrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "premostrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "premostrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "premostrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "premostráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "premostrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "premostraren" ;--# notpresent
    VP (Cond Sg P1) => "premostraría" ;--# notpresent
    VP (Cond Sg P2) => "premostrarías" ;--# notpresent
    VP (Cond Sg P3) => "premostraría" ;--# notpresent
    VP (Cond Pl P1) => "premostraríamos" ;--# notpresent
    VP (Cond Pl P2) => "premostraríais" ;--# notpresent
    VP (Cond Pl P3) => "premostrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "premuestra" ;
    VP (Imp Sg P3) => "premuestre" ;
    VP (Imp Pl P1) => "premostremos" ;
    VP (Imp Pl P2) => "premostrad" ;
    VP (Imp Pl P3) => "premuestren" ;
    VP (Pass Sg Masc) => "premostrado" ;
    VP (Pass Sg Fem) => "premostrada" ;
    VP (Pass Pl Masc) => "premostrados" ;
    VP (Pass Pl Fem) => "premostradas"
    }
  } ;

lin probar_V = verboV 
 {s = table {
    VI Infn => "probar" ;
    VI Ger => "probando" ;
    VI Part => "probado" ;
    VP (Pres Ind Sg P1) => "pruebo" ;
    VP (Pres Ind Sg P2) => "pruebas" ;
    VP (Pres Ind Sg P3) => "prueba" ;
    VP (Pres Ind Pl P1) => "probamos" ;
    VP (Pres Ind Pl P2) => "probáis" ;
    VP (Pres Ind Pl P3) => "prueban" ;
    VP (Pres Subj Sg P1) => "pruebe" ;
    VP (Pres Subj Sg P2) => "pruebes" ;
    VP (Pres Subj Sg P3) => "pruebe" ;
    VP (Pres Subj Pl P1) => "probemos" ;
    VP (Pres Subj Pl P2) => "probéis" ;
    VP (Pres Subj Pl P3) => "prueben" ;
    VP (Impf Ind Sg P1) => "probaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "probabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "probaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "probábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "probabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "probaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"probara" ; "probase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"probaras" ; "probases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"probara" ; "probase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"probáramos" ; "probásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"probarais" ; "probaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"probaran" ; "probasen"} ;--# notpresent
    VP (Pret Sg P1) => "probé" ;--# notpresent
    VP (Pret Sg P2) => "probaste" ;--# notpresent
    VP (Pret Sg P3) => "probó" ;--# notpresent
    VP (Pret Pl P1) => "probamos" ;--# notpresent
    VP (Pret Pl P2) => "probasteis" ;--# notpresent
    VP (Pret Pl P3) => "probaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "probaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "probarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "probará" ;--# notpresent
    VP (Fut Ind Pl P1) => "probaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "probaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "probarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "probare" ;--# notpresent
    VP (Fut Subj Sg P2) => "probares" ;--# notpresent
    VP (Fut Subj Sg P3) => "probare" ;--# notpresent
    VP (Fut Subj Pl P1) => "probáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "probareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "probaren" ;--# notpresent
    VP (Cond Sg P1) => "probaría" ;--# notpresent
    VP (Cond Sg P2) => "probarías" ;--# notpresent
    VP (Cond Sg P3) => "probaría" ;--# notpresent
    VP (Cond Pl P1) => "probaríamos" ;--# notpresent
    VP (Cond Pl P2) => "probaríais" ;--# notpresent
    VP (Cond Pl P3) => "probarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prueba" ;
    VP (Imp Sg P3) => "pruebe" ;
    VP (Imp Pl P1) => "probemos" ;
    VP (Imp Pl P2) => "probad" ;
    VP (Imp Pl P3) => "prueben" ;
    VP (Pass Sg Masc) => "probado" ;
    VP (Pass Sg Fem) => "probada" ;
    VP (Pass Pl Masc) => "probados" ;
    VP (Pass Pl Fem) => "probadas"
    }
  } ;

lin quebrar_V = verboV 
 {s = table {
    VI Infn => "quebrar" ;
    VI Ger => "quebrando" ;
    VI Part => "quebrado" ;
    VP (Pres Ind Sg P1) => "quiebro" ;
    VP (Pres Ind Sg P2) => "quiebras" ;
    VP (Pres Ind Sg P3) => "quiebra" ;
    VP (Pres Ind Pl P1) => "quebramos" ;
    VP (Pres Ind Pl P2) => "quebráis" ;
    VP (Pres Ind Pl P3) => "quiebran" ;
    VP (Pres Subj Sg P1) => "quiebre" ;
    VP (Pres Subj Sg P2) => "quiebres" ;
    VP (Pres Subj Sg P3) => "quiebre" ;
    VP (Pres Subj Pl P1) => "quebremos" ;
    VP (Pres Subj Pl P2) => "quebréis" ;
    VP (Pres Subj Pl P3) => "quiebren" ;
    VP (Impf Ind Sg P1) => "quebraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "quebrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "quebraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "quebrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "quebrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "quebraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"quebrara" ; "quebrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"quebraras" ; "quebrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"quebrara" ; "quebrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"quebráramos" ; "quebrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"quebrarais" ; "quebraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"quebraran" ; "quebrasen"} ;--# notpresent
    VP (Pret Sg P1) => "quebré" ;--# notpresent
    VP (Pret Sg P2) => "quebraste" ;--# notpresent
    VP (Pret Sg P3) => "quebró" ;--# notpresent
    VP (Pret Pl P1) => "quebramos" ;--# notpresent
    VP (Pret Pl P2) => "quebrasteis" ;--# notpresent
    VP (Pret Pl P3) => "quebraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "quebraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "quebrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "quebrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "quebraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "quebraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "quebrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "quebrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "quebrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "quebrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "quebráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "quebrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "quebraren" ;--# notpresent
    VP (Cond Sg P1) => "quebraría" ;--# notpresent
    VP (Cond Sg P2) => "quebrarías" ;--# notpresent
    VP (Cond Sg P3) => "quebraría" ;--# notpresent
    VP (Cond Pl P1) => "quebraríamos" ;--# notpresent
    VP (Cond Pl P2) => "quebraríais" ;--# notpresent
    VP (Cond Pl P3) => "quebrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "quiebra" ;
    VP (Imp Sg P3) => "quiebre" ;
    VP (Imp Pl P1) => "quebremos" ;
    VP (Imp Pl P2) => "quebrad" ;
    VP (Imp Pl P3) => "quiebren" ;
    VP (Pass Sg Masc) => "quebrado" ;
    VP (Pass Sg Fem) => "quebrada" ;
    VP (Pass Pl Masc) => "quebrados" ;
    VP (Pass Pl Fem) => "quebradas"
    }
  } ;

lin reapretar_V = verboV 
 {s = table {
    VI Infn => "reapretar" ;
    VI Ger => "reapretando" ;
    VI Part => "reapretado" ;
    VP (Pres Ind Sg P1) => "reaprieto" ;
    VP (Pres Ind Sg P2) => "reaprietas" ;
    VP (Pres Ind Sg P3) => "reaprieta" ;
    VP (Pres Ind Pl P1) => "reapretamos" ;
    VP (Pres Ind Pl P2) => "reapretáis" ;
    VP (Pres Ind Pl P3) => "reaprietan" ;
    VP (Pres Subj Sg P1) => "reapriete" ;
    VP (Pres Subj Sg P2) => "reaprietes" ;
    VP (Pres Subj Sg P3) => "reapriete" ;
    VP (Pres Subj Pl P1) => "reapretemos" ;
    VP (Pres Subj Pl P2) => "reapretéis" ;
    VP (Pres Subj Pl P3) => "reaprieten" ;
    VP (Impf Ind Sg P1) => "reapretaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reapretabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reapretaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reapretábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reapretabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reapretaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reapretara" ; "reapretase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reapretaras" ; "reapretases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reapretara" ; "reapretase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reapretáramos" ; "reapretásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reapretarais" ; "reapretaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reapretaran" ; "reapretasen"} ;--# notpresent
    VP (Pret Sg P1) => "reapreté" ;--# notpresent
    VP (Pret Sg P2) => "reapretaste" ;--# notpresent
    VP (Pret Sg P3) => "reapretó" ;--# notpresent
    VP (Pret Pl P1) => "reapretamos" ;--# notpresent
    VP (Pret Pl P2) => "reapretasteis" ;--# notpresent
    VP (Pret Pl P3) => "reapretaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reapretaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reapretarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reapretará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reapretaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reapretaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reapretarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reapretare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reapretares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reapretare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reapretáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reapretareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reapretaren" ;--# notpresent
    VP (Cond Sg P1) => "reapretaría" ;--# notpresent
    VP (Cond Sg P2) => "reapretarías" ;--# notpresent
    VP (Cond Sg P3) => "reapretaría" ;--# notpresent
    VP (Cond Pl P1) => "reapretaríamos" ;--# notpresent
    VP (Cond Pl P2) => "reapretaríais" ;--# notpresent
    VP (Cond Pl P3) => "reapretarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reaprieta" ;
    VP (Imp Sg P3) => "reapriete" ;
    VP (Imp Pl P1) => "reapretemos" ;
    VP (Imp Pl P2) => "reapretad" ;
    VP (Imp Pl P3) => "reaprieten" ;
    VP (Pass Sg Masc) => "reapretado" ;
    VP (Pass Sg Fem) => "reapretada" ;
    VP (Pass Pl Masc) => "reapretados" ;
    VP (Pass Pl Fem) => "reapretadas"
    }
  } ;

lin reaventar_V = verboV 
 {s = table {
    VI Infn => "reaventar" ;
    VI Ger => "reaventando" ;
    VI Part => "reaventado" ;
    VP (Pres Ind Sg P1) => "reaviento" ;
    VP (Pres Ind Sg P2) => "reavientas" ;
    VP (Pres Ind Sg P3) => "reavienta" ;
    VP (Pres Ind Pl P1) => "reaventamos" ;
    VP (Pres Ind Pl P2) => "reaventáis" ;
    VP (Pres Ind Pl P3) => "reavientan" ;
    VP (Pres Subj Sg P1) => "reaviente" ;
    VP (Pres Subj Sg P2) => "reavientes" ;
    VP (Pres Subj Sg P3) => "reaviente" ;
    VP (Pres Subj Pl P1) => "reaventemos" ;
    VP (Pres Subj Pl P2) => "reaventéis" ;
    VP (Pres Subj Pl P3) => "reavienten" ;
    VP (Impf Ind Sg P1) => "reaventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reaventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reaventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reaventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reaventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reaventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reaventara" ; "reaventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reaventaras" ; "reaventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reaventara" ; "reaventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reaventáramos" ; "reaventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reaventarais" ; "reaventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reaventaran" ; "reaventasen"} ;--# notpresent
    VP (Pret Sg P1) => "reaventé" ;--# notpresent
    VP (Pret Sg P2) => "reaventaste" ;--# notpresent
    VP (Pret Sg P3) => "reaventó" ;--# notpresent
    VP (Pret Pl P1) => "reaventamos" ;--# notpresent
    VP (Pret Pl P2) => "reaventasteis" ;--# notpresent
    VP (Pret Pl P3) => "reaventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reaventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reaventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reaventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reaventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reaventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reaventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reaventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reaventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reaventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reaventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reaventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reaventaren" ;--# notpresent
    VP (Cond Sg P1) => "reaventaría" ;--# notpresent
    VP (Cond Sg P2) => "reaventarías" ;--# notpresent
    VP (Cond Sg P3) => "reaventaría" ;--# notpresent
    VP (Cond Pl P1) => "reaventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "reaventaríais" ;--# notpresent
    VP (Cond Pl P3) => "reaventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reavienta" ;
    VP (Imp Sg P3) => "reaviente" ;
    VP (Imp Pl P1) => "reaventemos" ;
    VP (Imp Pl P2) => "reaventad" ;
    VP (Imp Pl P3) => "reavienten" ;
    VP (Pass Sg Masc) => "reaventado" ;
    VP (Pass Sg Fem) => "reaventada" ;
    VP (Pass Pl Masc) => "reaventados" ;
    VP (Pass Pl Fem) => "reaventadas"
    }
  } ;

lin recalentar_V = verboV 
 {s = table {
    VI Infn => "recalentar" ;
    VI Ger => "recalentando" ;
    VI Part => "recalentado" ;
    VP (Pres Ind Sg P1) => "recaliento" ;
    VP (Pres Ind Sg P2) => "recalientas" ;
    VP (Pres Ind Sg P3) => "recalienta" ;
    VP (Pres Ind Pl P1) => "recalentamos" ;
    VP (Pres Ind Pl P2) => "recalentáis" ;
    VP (Pres Ind Pl P3) => "recalientan" ;
    VP (Pres Subj Sg P1) => "recaliente" ;
    VP (Pres Subj Sg P2) => "recalientes" ;
    VP (Pres Subj Sg P3) => "recaliente" ;
    VP (Pres Subj Pl P1) => "recalentemos" ;
    VP (Pres Subj Pl P2) => "recalentéis" ;
    VP (Pres Subj Pl P3) => "recalienten" ;
    VP (Impf Ind Sg P1) => "recalentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recalentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recalentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recalentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recalentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recalentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recalentara" ; "recalentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recalentaras" ; "recalentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recalentara" ; "recalentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recalentáramos" ; "recalentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recalentarais" ; "recalentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recalentaran" ; "recalentasen"} ;--# notpresent
    VP (Pret Sg P1) => "recalenté" ;--# notpresent
    VP (Pret Sg P2) => "recalentaste" ;--# notpresent
    VP (Pret Sg P3) => "recalentó" ;--# notpresent
    VP (Pret Pl P1) => "recalentamos" ;--# notpresent
    VP (Pret Pl P2) => "recalentasteis" ;--# notpresent
    VP (Pret Pl P3) => "recalentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recalentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recalentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recalentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recalentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recalentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recalentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recalentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recalentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recalentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recalentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recalentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recalentaren" ;--# notpresent
    VP (Cond Sg P1) => "recalentaría" ;--# notpresent
    VP (Cond Sg P2) => "recalentarías" ;--# notpresent
    VP (Cond Sg P3) => "recalentaría" ;--# notpresent
    VP (Cond Pl P1) => "recalentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recalentaríais" ;--# notpresent
    VP (Cond Pl P3) => "recalentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recalienta" ;
    VP (Imp Sg P3) => "recaliente" ;
    VP (Imp Pl P1) => "recalentemos" ;
    VP (Imp Pl P2) => "recalentad" ;
    VP (Imp Pl P3) => "recalienten" ;
    VP (Pass Sg Masc) => "recalentado" ;
    VP (Pass Sg Fem) => "recalentada" ;
    VP (Pass Pl Masc) => "recalentados" ;
    VP (Pass Pl Fem) => "recalentadas"
    }
  } ;

lin recentar_V = verboV 
 {s = table {
    VI Infn => "recentar" ;
    VI Ger => "recentando" ;
    VI Part => "recentado" ;
    VP (Pres Ind Sg P1) => "reciento" ;
    VP (Pres Ind Sg P2) => "recientas" ;
    VP (Pres Ind Sg P3) => "recienta" ;
    VP (Pres Ind Pl P1) => "recentamos" ;
    VP (Pres Ind Pl P2) => "recentáis" ;
    VP (Pres Ind Pl P3) => "recientan" ;
    VP (Pres Subj Sg P1) => "reciente" ;
    VP (Pres Subj Sg P2) => "recientes" ;
    VP (Pres Subj Sg P3) => "reciente" ;
    VP (Pres Subj Pl P1) => "recentemos" ;
    VP (Pres Subj Pl P2) => "recentéis" ;
    VP (Pres Subj Pl P3) => "recienten" ;
    VP (Impf Ind Sg P1) => "recentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recentara" ; "recentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recentaras" ; "recentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recentara" ; "recentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recentáramos" ; "recentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recentarais" ; "recentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recentaran" ; "recentasen"} ;--# notpresent
    VP (Pret Sg P1) => "recenté" ;--# notpresent
    VP (Pret Sg P2) => "recentaste" ;--# notpresent
    VP (Pret Sg P3) => "recentó" ;--# notpresent
    VP (Pret Pl P1) => "recentamos" ;--# notpresent
    VP (Pret Pl P2) => "recentasteis" ;--# notpresent
    VP (Pret Pl P3) => "recentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recentaren" ;--# notpresent
    VP (Cond Sg P1) => "recentaría" ;--# notpresent
    VP (Cond Sg P2) => "recentarías" ;--# notpresent
    VP (Cond Sg P3) => "recentaría" ;--# notpresent
    VP (Cond Pl P1) => "recentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recentaríais" ;--# notpresent
    VP (Cond Pl P3) => "recentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recienta" ;
    VP (Imp Sg P3) => "reciente" ;
    VP (Imp Pl P1) => "recentemos" ;
    VP (Imp Pl P2) => "recentad" ;
    VP (Imp Pl P3) => "recienten" ;
    VP (Pass Sg Masc) => "recentado" ;
    VP (Pass Sg Fem) => "recentada" ;
    VP (Pass Pl Masc) => "recentados" ;
    VP (Pass Pl Fem) => "recentadas"
    }
  } ;

lin recolar_V = verboV 
 {s = table {
    VI Infn => "recolar" ;
    VI Ger => "recolando" ;
    VI Part => "recolado" ;
    VP (Pres Ind Sg P1) => "recuelo" ;
    VP (Pres Ind Sg P2) => "recuelas" ;
    VP (Pres Ind Sg P3) => "recuela" ;
    VP (Pres Ind Pl P1) => "recolamos" ;
    VP (Pres Ind Pl P2) => "recoláis" ;
    VP (Pres Ind Pl P3) => "recuelan" ;
    VP (Pres Subj Sg P1) => "recuele" ;
    VP (Pres Subj Sg P2) => "recueles" ;
    VP (Pres Subj Sg P3) => "recuele" ;
    VP (Pres Subj Pl P1) => "recolemos" ;
    VP (Pres Subj Pl P2) => "recoléis" ;
    VP (Pres Subj Pl P3) => "recuelen" ;
    VP (Impf Ind Sg P1) => "recolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recolara" ; "recolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recolaras" ; "recolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recolara" ; "recolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recoláramos" ; "recolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recolarais" ; "recolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recolaran" ; "recolasen"} ;--# notpresent
    VP (Pret Sg P1) => "recolé" ;--# notpresent
    VP (Pret Sg P2) => "recolaste" ;--# notpresent
    VP (Pret Sg P3) => "recoló" ;--# notpresent
    VP (Pret Pl P1) => "recolamos" ;--# notpresent
    VP (Pret Pl P2) => "recolasteis" ;--# notpresent
    VP (Pret Pl P3) => "recolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recolaren" ;--# notpresent
    VP (Cond Sg P1) => "recolaría" ;--# notpresent
    VP (Cond Sg P2) => "recolarías" ;--# notpresent
    VP (Cond Sg P3) => "recolaría" ;--# notpresent
    VP (Cond Pl P1) => "recolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recolaríais" ;--# notpresent
    VP (Cond Pl P3) => "recolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recuela" ;
    VP (Imp Sg P3) => "recuele" ;
    VP (Imp Pl P1) => "recolemos" ;
    VP (Imp Pl P2) => "recolad" ;
    VP (Imp Pl P3) => "recuelen" ;
    VP (Pass Sg Masc) => "recolado" ;
    VP (Pass Sg Fem) => "recolada" ;
    VP (Pass Pl Masc) => "recolados" ;
    VP (Pass Pl Fem) => "recoladas"
    }
  } ;

lin recomendar_V = verboV 
 {s = table {
    VI Infn => "recomendar" ;
    VI Ger => "recomendando" ;
    VI Part => "recomendado" ;
    VP (Pres Ind Sg P1) => "recomiendo" ;
    VP (Pres Ind Sg P2) => "recomiendas" ;
    VP (Pres Ind Sg P3) => "recomienda" ;
    VP (Pres Ind Pl P1) => "recomendamos" ;
    VP (Pres Ind Pl P2) => "recomendáis" ;
    VP (Pres Ind Pl P3) => "recomiendan" ;
    VP (Pres Subj Sg P1) => "recomiende" ;
    VP (Pres Subj Sg P2) => "recomiendes" ;
    VP (Pres Subj Sg P3) => "recomiende" ;
    VP (Pres Subj Pl P1) => "recomendemos" ;
    VP (Pres Subj Pl P2) => "recomendéis" ;
    VP (Pres Subj Pl P3) => "recomienden" ;
    VP (Impf Ind Sg P1) => "recomendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recomendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recomendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recomendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recomendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recomendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recomendara" ; "recomendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recomendaras" ; "recomendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recomendara" ; "recomendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recomendáramos" ; "recomendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recomendarais" ; "recomendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recomendaran" ; "recomendasen"} ;--# notpresent
    VP (Pret Sg P1) => "recomendé" ;--# notpresent
    VP (Pret Sg P2) => "recomendaste" ;--# notpresent
    VP (Pret Sg P3) => "recomendó" ;--# notpresent
    VP (Pret Pl P1) => "recomendamos" ;--# notpresent
    VP (Pret Pl P2) => "recomendasteis" ;--# notpresent
    VP (Pret Pl P3) => "recomendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recomendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recomendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recomendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recomendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recomendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recomendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recomendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recomendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recomendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recomendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recomendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recomendaren" ;--# notpresent
    VP (Cond Sg P1) => "recomendaría" ;--# notpresent
    VP (Cond Sg P2) => "recomendarías" ;--# notpresent
    VP (Cond Sg P3) => "recomendaría" ;--# notpresent
    VP (Cond Pl P1) => "recomendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recomendaríais" ;--# notpresent
    VP (Cond Pl P3) => "recomendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recomienda" ;
    VP (Imp Sg P3) => "recomiende" ;
    VP (Imp Pl P1) => "recomendemos" ;
    VP (Imp Pl P2) => "recomendad" ;
    VP (Imp Pl P3) => "recomienden" ;
    VP (Pass Sg Masc) => "recomendado" ;
    VP (Pass Sg Fem) => "recomendada" ;
    VP (Pass Pl Masc) => "recomendados" ;
    VP (Pass Pl Fem) => "recomendadas"
    }
  } ;

lin recontar_V = verboV 
 {s = table {
    VI Infn => "recontar" ;
    VI Ger => "recontando" ;
    VI Part => "recontado" ;
    VP (Pres Ind Sg P1) => "recuento" ;
    VP (Pres Ind Sg P2) => "recuentas" ;
    VP (Pres Ind Sg P3) => "recuenta" ;
    VP (Pres Ind Pl P1) => "recontamos" ;
    VP (Pres Ind Pl P2) => "recontáis" ;
    VP (Pres Ind Pl P3) => "recuentan" ;
    VP (Pres Subj Sg P1) => "recuente" ;
    VP (Pres Subj Sg P2) => "recuentes" ;
    VP (Pres Subj Sg P3) => "recuente" ;
    VP (Pres Subj Pl P1) => "recontemos" ;
    VP (Pres Subj Pl P2) => "recontéis" ;
    VP (Pres Subj Pl P3) => "recuenten" ;
    VP (Impf Ind Sg P1) => "recontaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recontabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recontaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recontábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recontabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recontaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recontara" ; "recontase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recontaras" ; "recontases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recontara" ; "recontase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recontáramos" ; "recontásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recontarais" ; "recontaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recontaran" ; "recontasen"} ;--# notpresent
    VP (Pret Sg P1) => "reconté" ;--# notpresent
    VP (Pret Sg P2) => "recontaste" ;--# notpresent
    VP (Pret Sg P3) => "recontó" ;--# notpresent
    VP (Pret Pl P1) => "recontamos" ;--# notpresent
    VP (Pret Pl P2) => "recontasteis" ;--# notpresent
    VP (Pret Pl P3) => "recontaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recontaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recontarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recontará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recontaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recontaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recontarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recontare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recontares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recontare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recontáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recontareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recontaren" ;--# notpresent
    VP (Cond Sg P1) => "recontaría" ;--# notpresent
    VP (Cond Sg P2) => "recontarías" ;--# notpresent
    VP (Cond Sg P3) => "recontaría" ;--# notpresent
    VP (Cond Pl P1) => "recontaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recontaríais" ;--# notpresent
    VP (Cond Pl P3) => "recontarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recuenta" ;
    VP (Imp Sg P3) => "recuente" ;
    VP (Imp Pl P1) => "recontemos" ;
    VP (Imp Pl P2) => "recontad" ;
    VP (Imp Pl P3) => "recuenten" ;
    VP (Pass Sg Masc) => "recontado" ;
    VP (Pass Sg Fem) => "recontada" ;
    VP (Pass Pl Masc) => "recontados" ;
    VP (Pass Pl Fem) => "recontadas"
    }
  } ;

lin recordar_V = verboV 
 {s = table {
    VI Infn => "recordar" ;
    VI Ger => "recordando" ;
    VI Part => "recordado" ;
    VP (Pres Ind Sg P1) => "recuerdo" ;
    VP (Pres Ind Sg P2) => "recuerdas" ;
    VP (Pres Ind Sg P3) => "recuerda" ;
    VP (Pres Ind Pl P1) => "recordamos" ;
    VP (Pres Ind Pl P2) => "recordáis" ;
    VP (Pres Ind Pl P3) => "recuerdan" ;
    VP (Pres Subj Sg P1) => "recuerde" ;
    VP (Pres Subj Sg P2) => "recuerdes" ;
    VP (Pres Subj Sg P3) => "recuerde" ;
    VP (Pres Subj Pl P1) => "recordemos" ;
    VP (Pres Subj Pl P2) => "recordéis" ;
    VP (Pres Subj Pl P3) => "recuerden" ;
    VP (Impf Ind Sg P1) => "recordaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recordabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recordaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recordábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recordabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recordaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recordara" ; "recordase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recordaras" ; "recordases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recordara" ; "recordase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recordáramos" ; "recordásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recordarais" ; "recordaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recordaran" ; "recordasen"} ;--# notpresent
    VP (Pret Sg P1) => "recordé" ;--# notpresent
    VP (Pret Sg P2) => "recordaste" ;--# notpresent
    VP (Pret Sg P3) => "recordó" ;--# notpresent
    VP (Pret Pl P1) => "recordamos" ;--# notpresent
    VP (Pret Pl P2) => "recordasteis" ;--# notpresent
    VP (Pret Pl P3) => "recordaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recordaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recordarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recordará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recordaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recordaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recordarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recordare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recordares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recordare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recordáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recordareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recordaren" ;--# notpresent
    VP (Cond Sg P1) => "recordaría" ;--# notpresent
    VP (Cond Sg P2) => "recordarías" ;--# notpresent
    VP (Cond Sg P3) => "recordaría" ;--# notpresent
    VP (Cond Pl P1) => "recordaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recordaríais" ;--# notpresent
    VP (Cond Pl P3) => "recordarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recuerda" ;
    VP (Imp Sg P3) => "recuerde" ;
    VP (Imp Pl P1) => "recordemos" ;
    VP (Imp Pl P2) => "recordad" ;
    VP (Imp Pl P3) => "recuerden" ;
    VP (Pass Sg Masc) => "recordado" ;
    VP (Pass Sg Fem) => "recordada" ;
    VP (Pass Pl Masc) => "recordados" ;
    VP (Pass Pl Fem) => "recordadas"
    }
  } ;

lin recostar_V = verboV 
 {s = table {
    VI Infn => "recostar" ;
    VI Ger => "recostando" ;
    VI Part => "recostado" ;
    VP (Pres Ind Sg P1) => "recuesto" ;
    VP (Pres Ind Sg P2) => "recuestas" ;
    VP (Pres Ind Sg P3) => "recuesta" ;
    VP (Pres Ind Pl P1) => "recostamos" ;
    VP (Pres Ind Pl P2) => "recostáis" ;
    VP (Pres Ind Pl P3) => "recuestan" ;
    VP (Pres Subj Sg P1) => "recueste" ;
    VP (Pres Subj Sg P2) => "recuestes" ;
    VP (Pres Subj Sg P3) => "recueste" ;
    VP (Pres Subj Pl P1) => "recostemos" ;
    VP (Pres Subj Pl P2) => "recostéis" ;
    VP (Pres Subj Pl P3) => "recuesten" ;
    VP (Impf Ind Sg P1) => "recostaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "recostabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "recostaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "recostábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recostabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recostaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recostara" ; "recostase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recostaras" ; "recostases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recostara" ; "recostase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recostáramos" ; "recostásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recostarais" ; "recostaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recostaran" ; "recostasen"} ;--# notpresent
    VP (Pret Sg P1) => "recosté" ;--# notpresent
    VP (Pret Sg P2) => "recostaste" ;--# notpresent
    VP (Pret Sg P3) => "recostó" ;--# notpresent
    VP (Pret Pl P1) => "recostamos" ;--# notpresent
    VP (Pret Pl P2) => "recostasteis" ;--# notpresent
    VP (Pret Pl P3) => "recostaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recostaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recostarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recostará" ;--# notpresent
    VP (Fut Ind Pl P1) => "recostaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recostaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recostarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recostare" ;--# notpresent
    VP (Fut Subj Sg P2) => "recostares" ;--# notpresent
    VP (Fut Subj Sg P3) => "recostare" ;--# notpresent
    VP (Fut Subj Pl P1) => "recostáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recostareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recostaren" ;--# notpresent
    VP (Cond Sg P1) => "recostaría" ;--# notpresent
    VP (Cond Sg P2) => "recostarías" ;--# notpresent
    VP (Cond Sg P3) => "recostaría" ;--# notpresent
    VP (Cond Pl P1) => "recostaríamos" ;--# notpresent
    VP (Cond Pl P2) => "recostaríais" ;--# notpresent
    VP (Cond Pl P3) => "recostarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recuesta" ;
    VP (Imp Sg P3) => "recueste" ;
    VP (Imp Pl P1) => "recostemos" ;
    VP (Imp Pl P2) => "recostad" ;
    VP (Imp Pl P3) => "recuesten" ;
    VP (Pass Sg Masc) => "recostado" ;
    VP (Pass Sg Fem) => "recostada" ;
    VP (Pass Pl Masc) => "recostados" ;
    VP (Pass Pl Fem) => "recostadas"
    }
  } ;

lin redescontar_V = verboV 
 {s = table {
    VI Infn => "redescontar" ;
    VI Ger => "redescontando" ;
    VI Part => "redescontado" ;
    VP (Pres Ind Sg P1) => "redescuento" ;
    VP (Pres Ind Sg P2) => "redescuentas" ;
    VP (Pres Ind Sg P3) => "redescuenta" ;
    VP (Pres Ind Pl P1) => "redescontamos" ;
    VP (Pres Ind Pl P2) => "redescontáis" ;
    VP (Pres Ind Pl P3) => "redescuentan" ;
    VP (Pres Subj Sg P1) => "redescuente" ;
    VP (Pres Subj Sg P2) => "redescuentes" ;
    VP (Pres Subj Sg P3) => "redescuente" ;
    VP (Pres Subj Pl P1) => "redescontemos" ;
    VP (Pres Subj Pl P2) => "redescontéis" ;
    VP (Pres Subj Pl P3) => "redescuenten" ;
    VP (Impf Ind Sg P1) => "redescontaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "redescontabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "redescontaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "redescontábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "redescontabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "redescontaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"redescontara" ; "redescontase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"redescontaras" ; "redescontases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"redescontara" ; "redescontase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"redescontáramos" ; "redescontásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"redescontarais" ; "redescontaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"redescontaran" ; "redescontasen"} ;--# notpresent
    VP (Pret Sg P1) => "redesconté" ;--# notpresent
    VP (Pret Sg P2) => "redescontaste" ;--# notpresent
    VP (Pret Sg P3) => "redescontó" ;--# notpresent
    VP (Pret Pl P1) => "redescontamos" ;--# notpresent
    VP (Pret Pl P2) => "redescontasteis" ;--# notpresent
    VP (Pret Pl P3) => "redescontaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "redescontaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "redescontarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "redescontará" ;--# notpresent
    VP (Fut Ind Pl P1) => "redescontaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "redescontaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "redescontarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "redescontare" ;--# notpresent
    VP (Fut Subj Sg P2) => "redescontares" ;--# notpresent
    VP (Fut Subj Sg P3) => "redescontare" ;--# notpresent
    VP (Fut Subj Pl P1) => "redescontáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "redescontareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "redescontaren" ;--# notpresent
    VP (Cond Sg P1) => "redescontaría" ;--# notpresent
    VP (Cond Sg P2) => "redescontarías" ;--# notpresent
    VP (Cond Sg P3) => "redescontaría" ;--# notpresent
    VP (Cond Pl P1) => "redescontaríamos" ;--# notpresent
    VP (Cond Pl P2) => "redescontaríais" ;--# notpresent
    VP (Cond Pl P3) => "redescontarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "redescuenta" ;
    VP (Imp Sg P3) => "redescuente" ;
    VP (Imp Pl P1) => "redescontemos" ;
    VP (Imp Pl P2) => "redescontad" ;
    VP (Imp Pl P3) => "redescuenten" ;
    VP (Pass Sg Masc) => "redescontado" ;
    VP (Pass Sg Fem) => "redescontada" ;
    VP (Pass Pl Masc) => "redescontados" ;
    VP (Pass Pl Fem) => "redescontadas"
    }
  } ;

lin reencontrar_V = verboV 
 {s = table {
    VI Infn => "reencontrar" ;
    VI Ger => "reencontrando" ;
    VI Part => "reencontrado" ;
    VP (Pres Ind Sg P1) => "reencuentro" ;
    VP (Pres Ind Sg P2) => "reencuentras" ;
    VP (Pres Ind Sg P3) => "reencuentra" ;
    VP (Pres Ind Pl P1) => "reencontramos" ;
    VP (Pres Ind Pl P2) => "reencontráis" ;
    VP (Pres Ind Pl P3) => "reencuentran" ;
    VP (Pres Subj Sg P1) => "reencuentre" ;
    VP (Pres Subj Sg P2) => "reencuentres" ;
    VP (Pres Subj Sg P3) => "reencuentre" ;
    VP (Pres Subj Pl P1) => "reencontremos" ;
    VP (Pres Subj Pl P2) => "reencontréis" ;
    VP (Pres Subj Pl P3) => "reencuentren" ;
    VP (Impf Ind Sg P1) => "reencontraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reencontrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reencontraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reencontrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reencontrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reencontraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reencontrara" ; "reencontrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reencontraras" ; "reencontrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reencontrara" ; "reencontrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reencontráramos" ; "reencontrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reencontrarais" ; "reencontraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reencontraran" ; "reencontrasen"} ;--# notpresent
    VP (Pret Sg P1) => "reencontré" ;--# notpresent
    VP (Pret Sg P2) => "reencontraste" ;--# notpresent
    VP (Pret Sg P3) => "reencontró" ;--# notpresent
    VP (Pret Pl P1) => "reencontramos" ;--# notpresent
    VP (Pret Pl P2) => "reencontrasteis" ;--# notpresent
    VP (Pret Pl P3) => "reencontraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reencontraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reencontrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reencontrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reencontraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reencontraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reencontrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reencontrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reencontrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reencontrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reencontráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reencontrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reencontraren" ;--# notpresent
    VP (Cond Sg P1) => "reencontraría" ;--# notpresent
    VP (Cond Sg P2) => "reencontrarías" ;--# notpresent
    VP (Cond Sg P3) => "reencontraría" ;--# notpresent
    VP (Cond Pl P1) => "reencontraríamos" ;--# notpresent
    VP (Cond Pl P2) => "reencontraríais" ;--# notpresent
    VP (Cond Pl P3) => "reencontrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reencuentra" ;
    VP (Imp Sg P3) => "reencuentre" ;
    VP (Imp Pl P1) => "reencontremos" ;
    VP (Imp Pl P2) => "reencontrad" ;
    VP (Imp Pl P3) => "reencuentren" ;
    VP (Pass Sg Masc) => "reencontrado" ;
    VP (Pass Sg Fem) => "reencontrada" ;
    VP (Pass Pl Masc) => "reencontrados" ;
    VP (Pass Pl Fem) => "reencontradas"
    }
  } ;

lin regimentar_V = verboV 
 {s = table {
    VI Infn => "regimentar" ;
    VI Ger => "regimentando" ;
    VI Part => "regimentado" ;
    VP (Pres Ind Sg P1) => "regimiento" ;
    VP (Pres Ind Sg P2) => "regimientas" ;
    VP (Pres Ind Sg P3) => "regimienta" ;
    VP (Pres Ind Pl P1) => "regimentamos" ;
    VP (Pres Ind Pl P2) => "regimentáis" ;
    VP (Pres Ind Pl P3) => "regimientan" ;
    VP (Pres Subj Sg P1) => "regimiente" ;
    VP (Pres Subj Sg P2) => "regimientes" ;
    VP (Pres Subj Sg P3) => "regimiente" ;
    VP (Pres Subj Pl P1) => "regimentemos" ;
    VP (Pres Subj Pl P2) => "regimentéis" ;
    VP (Pres Subj Pl P3) => "regimienten" ;
    VP (Impf Ind Sg P1) => "regimentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "regimentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "regimentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "regimentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "regimentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "regimentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"regimentara" ; "regimentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"regimentaras" ; "regimentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"regimentara" ; "regimentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"regimentáramos" ; "regimentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"regimentarais" ; "regimentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"regimentaran" ; "regimentasen"} ;--# notpresent
    VP (Pret Sg P1) => "regimenté" ;--# notpresent
    VP (Pret Sg P2) => "regimentaste" ;--# notpresent
    VP (Pret Sg P3) => "regimentó" ;--# notpresent
    VP (Pret Pl P1) => "regimentamos" ;--# notpresent
    VP (Pret Pl P2) => "regimentasteis" ;--# notpresent
    VP (Pret Pl P3) => "regimentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "regimentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "regimentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "regimentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "regimentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "regimentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "regimentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "regimentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "regimentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "regimentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "regimentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "regimentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "regimentaren" ;--# notpresent
    VP (Cond Sg P1) => "regimentaría" ;--# notpresent
    VP (Cond Sg P2) => "regimentarías" ;--# notpresent
    VP (Cond Sg P3) => "regimentaría" ;--# notpresent
    VP (Cond Pl P1) => "regimentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "regimentaríais" ;--# notpresent
    VP (Cond Pl P3) => "regimentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "regimienta" ;
    VP (Imp Sg P3) => "regimiente" ;
    VP (Imp Pl P1) => "regimentemos" ;
    VP (Imp Pl P2) => "regimentad" ;
    VP (Imp Pl P3) => "regimienten" ;
    VP (Pass Sg Masc) => "regimentado" ;
    VP (Pass Sg Fem) => "regimentada" ;
    VP (Pass Pl Masc) => "regimentados" ;
    VP (Pass Pl Fem) => "regimentadas"
    }
  } ;

lin regoldar_V = verboV 
 {s = table {
    VI Infn => "regoldar" ;
    VI Ger => "regoldando" ;
    VI Part => "regoldado" ;
    VP (Pres Ind Sg P1) => "regueldo" ;
    VP (Pres Ind Sg P2) => "regueldas" ;
    VP (Pres Ind Sg P3) => "reguelda" ;
    VP (Pres Ind Pl P1) => "regoldamos" ;
    VP (Pres Ind Pl P2) => "regoldáis" ;
    VP (Pres Ind Pl P3) => "regueldan" ;
    VP (Pres Subj Sg P1) => "reguelde" ;
    VP (Pres Subj Sg P2) => "regueldes" ;
    VP (Pres Subj Sg P3) => "reguelde" ;
    VP (Pres Subj Pl P1) => "regoldemos" ;
    VP (Pres Subj Pl P2) => "regoldéis" ;
    VP (Pres Subj Pl P3) => "reguelden" ;
    VP (Impf Ind Sg P1) => "regoldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "regoldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "regoldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "regoldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "regoldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "regoldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"regoldara" ; "regoldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"regoldaras" ; "regoldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"regoldara" ; "regoldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"regoldáramos" ; "regoldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"regoldarais" ; "regoldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"regoldaran" ; "regoldasen"} ;--# notpresent
    VP (Pret Sg P1) => "regoldé" ;--# notpresent
    VP (Pret Sg P2) => "regoldaste" ;--# notpresent
    VP (Pret Sg P3) => "regoldó" ;--# notpresent
    VP (Pret Pl P1) => "regoldamos" ;--# notpresent
    VP (Pret Pl P2) => "regoldasteis" ;--# notpresent
    VP (Pret Pl P3) => "regoldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "regoldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "regoldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "regoldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "regoldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "regoldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "regoldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "regoldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "regoldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "regoldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "regoldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "regoldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "regoldaren" ;--# notpresent
    VP (Cond Sg P1) => "regoldaría" ;--# notpresent
    VP (Cond Sg P2) => "regoldarías" ;--# notpresent
    VP (Cond Sg P3) => "regoldaría" ;--# notpresent
    VP (Cond Pl P1) => "regoldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "regoldaríais" ;--# notpresent
    VP (Cond Pl P3) => "regoldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reguelda" ;
    VP (Imp Sg P3) => "reguelde" ;
    VP (Imp Pl P1) => "regoldemos" ;
    VP (Imp Pl P2) => "regoldad" ;
    VP (Imp Pl P3) => "reguelden" ;
    VP (Pass Sg Masc) => "regoldado" ;
    VP (Pass Sg Fem) => "regoldada" ;
    VP (Pass Pl Masc) => "regoldados" ;
    VP (Pass Pl Fem) => "regoldadas"
    }
  } ;

lin reherrar_V = verboV 
 {s = table {
    VI Infn => "reherrar" ;
    VI Ger => "reherrando" ;
    VI Part => "reherrado" ;
    VP (Pres Ind Sg P1) => "rehierro" ;
    VP (Pres Ind Sg P2) => "rehierras" ;
    VP (Pres Ind Sg P3) => "rehierra" ;
    VP (Pres Ind Pl P1) => "reherramos" ;
    VP (Pres Ind Pl P2) => "reherráis" ;
    VP (Pres Ind Pl P3) => "rehierran" ;
    VP (Pres Subj Sg P1) => "rehierre" ;
    VP (Pres Subj Sg P2) => "rehierres" ;
    VP (Pres Subj Sg P3) => "rehierre" ;
    VP (Pres Subj Pl P1) => "reherremos" ;
    VP (Pres Subj Pl P2) => "reherréis" ;
    VP (Pres Subj Pl P3) => "rehierren" ;
    VP (Impf Ind Sg P1) => "reherraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reherrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reherraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reherrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reherrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reherraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reherrara" ; "reherrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reherraras" ; "reherrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reherrara" ; "reherrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reherráramos" ; "reherrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reherrarais" ; "reherraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reherraran" ; "reherrasen"} ;--# notpresent
    VP (Pret Sg P1) => "reherré" ;--# notpresent
    VP (Pret Sg P2) => "reherraste" ;--# notpresent
    VP (Pret Sg P3) => "reherró" ;--# notpresent
    VP (Pret Pl P1) => "reherramos" ;--# notpresent
    VP (Pret Pl P2) => "reherrasteis" ;--# notpresent
    VP (Pret Pl P3) => "reherraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reherraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reherrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reherrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reherraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reherraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reherrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reherrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reherrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reherrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reherráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reherrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reherraren" ;--# notpresent
    VP (Cond Sg P1) => "reherraría" ;--# notpresent
    VP (Cond Sg P2) => "reherrarías" ;--# notpresent
    VP (Cond Sg P3) => "reherraría" ;--# notpresent
    VP (Cond Pl P1) => "reherraríamos" ;--# notpresent
    VP (Cond Pl P2) => "reherraríais" ;--# notpresent
    VP (Cond Pl P3) => "reherrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehierra" ;
    VP (Imp Sg P3) => "rehierre" ;
    VP (Imp Pl P1) => "reherremos" ;
    VP (Imp Pl P2) => "reherrad" ;
    VP (Imp Pl P3) => "rehierren" ;
    VP (Pass Sg Masc) => "reherrado" ;
    VP (Pass Sg Fem) => "reherrada" ;
    VP (Pass Pl Masc) => "reherrados" ;
    VP (Pass Pl Fem) => "reherradas"
    }
  } ;

lin rehollar_V = verboV 
 {s = table {
    VI Infn => "rehollar" ;
    VI Ger => "rehollando" ;
    VI Part => "rehollado" ;
    VP (Pres Ind Sg P1) => "rehuello" ;
    VP (Pres Ind Sg P2) => "rehuellas" ;
    VP (Pres Ind Sg P3) => "rehuella" ;
    VP (Pres Ind Pl P1) => "rehollamos" ;
    VP (Pres Ind Pl P2) => "reholláis" ;
    VP (Pres Ind Pl P3) => "rehuellan" ;
    VP (Pres Subj Sg P1) => "rehuelle" ;
    VP (Pres Subj Sg P2) => "rehuelles" ;
    VP (Pres Subj Sg P3) => "rehuelle" ;
    VP (Pres Subj Pl P1) => "rehollemos" ;
    VP (Pres Subj Pl P2) => "reholléis" ;
    VP (Pres Subj Pl P3) => "rehuellen" ;
    VP (Impf Ind Sg P1) => "rehollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "rehollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "rehollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rehollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rehollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehollara" ; "rehollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehollaras" ; "rehollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehollara" ; "rehollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reholláramos" ; "rehollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehollarais" ; "rehollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehollaran" ; "rehollasen"} ;--# notpresent
    VP (Pret Sg P1) => "rehollé" ;--# notpresent
    VP (Pret Sg P2) => "rehollaste" ;--# notpresent
    VP (Pret Sg P3) => "reholló" ;--# notpresent
    VP (Pret Pl P1) => "rehollamos" ;--# notpresent
    VP (Pret Pl P2) => "rehollasteis" ;--# notpresent
    VP (Pret Pl P3) => "rehollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rehollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rehollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rehollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rehollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rehollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rehollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reholláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehollaren" ;--# notpresent
    VP (Cond Sg P1) => "rehollaría" ;--# notpresent
    VP (Cond Sg P2) => "rehollarías" ;--# notpresent
    VP (Cond Sg P3) => "rehollaría" ;--# notpresent
    VP (Cond Pl P1) => "rehollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "rehollaríais" ;--# notpresent
    VP (Cond Pl P3) => "rehollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehuella" ;
    VP (Imp Sg P3) => "rehuelle" ;
    VP (Imp Pl P1) => "rehollemos" ;
    VP (Imp Pl P2) => "rehollad" ;
    VP (Imp Pl P3) => "rehuellen" ;
    VP (Pass Sg Masc) => "rehollado" ;
    VP (Pass Sg Fem) => "rehollada" ;
    VP (Pass Pl Masc) => "rehollados" ;
    VP (Pass Pl Fem) => "reholladas"
    }
  } ;

lin remembrar_V = verboV 
 {s = table {
    VI Infn => "remembrar" ;
    VI Ger => "remembrando" ;
    VI Part => "remembrado" ;
    VP (Pres Ind Sg P1) => "remiembro" ;
    VP (Pres Ind Sg P2) => "remiembras" ;
    VP (Pres Ind Sg P3) => "remiembra" ;
    VP (Pres Ind Pl P1) => "remembramos" ;
    VP (Pres Ind Pl P2) => "remembráis" ;
    VP (Pres Ind Pl P3) => "remiembran" ;
    VP (Pres Subj Sg P1) => "remiembre" ;
    VP (Pres Subj Sg P2) => "remiembres" ;
    VP (Pres Subj Sg P3) => "remiembre" ;
    VP (Pres Subj Pl P1) => "remembremos" ;
    VP (Pres Subj Pl P2) => "remembréis" ;
    VP (Pres Subj Pl P3) => "remiembren" ;
    VP (Impf Ind Sg P1) => "remembraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "remembrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "remembraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "remembrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remembrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remembraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remembrara" ; "remembrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remembraras" ; "remembrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remembrara" ; "remembrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remembráramos" ; "remembrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remembrarais" ; "remembraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remembraran" ; "remembrasen"} ;--# notpresent
    VP (Pret Sg P1) => "remembré" ;--# notpresent
    VP (Pret Sg P2) => "remembraste" ;--# notpresent
    VP (Pret Sg P3) => "remembró" ;--# notpresent
    VP (Pret Pl P1) => "remembramos" ;--# notpresent
    VP (Pret Pl P2) => "remembrasteis" ;--# notpresent
    VP (Pret Pl P3) => "remembraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remembraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remembrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remembrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "remembraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remembraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remembrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remembrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "remembrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "remembrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "remembráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remembrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remembraren" ;--# notpresent
    VP (Cond Sg P1) => "remembraría" ;--# notpresent
    VP (Cond Sg P2) => "remembrarías" ;--# notpresent
    VP (Cond Sg P3) => "remembraría" ;--# notpresent
    VP (Cond Pl P1) => "remembraríamos" ;--# notpresent
    VP (Cond Pl P2) => "remembraríais" ;--# notpresent
    VP (Cond Pl P3) => "remembrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remiembra" ;
    VP (Imp Sg P3) => "remiembre" ;
    VP (Imp Pl P1) => "remembremos" ;
    VP (Imp Pl P2) => "remembrad" ;
    VP (Imp Pl P3) => "remiembren" ;
    VP (Pass Sg Masc) => "remembrado" ;
    VP (Pass Sg Fem) => "remembrada" ;
    VP (Pass Pl Masc) => "remembrados" ;
    VP (Pass Pl Fem) => "remembradas"
    }
  } ;

lin remendar_V = verboV 
 {s = table {
    VI Infn => "remendar" ;
    VI Ger => "remendando" ;
    VI Part => "remendado" ;
    VP (Pres Ind Sg P1) => "remiendo" ;
    VP (Pres Ind Sg P2) => "remiendas" ;
    VP (Pres Ind Sg P3) => "remienda" ;
    VP (Pres Ind Pl P1) => "remendamos" ;
    VP (Pres Ind Pl P2) => "remendáis" ;
    VP (Pres Ind Pl P3) => "remiendan" ;
    VP (Pres Subj Sg P1) => "remiende" ;
    VP (Pres Subj Sg P2) => "remiendes" ;
    VP (Pres Subj Sg P3) => "remiende" ;
    VP (Pres Subj Pl P1) => "remendemos" ;
    VP (Pres Subj Pl P2) => "remendéis" ;
    VP (Pres Subj Pl P3) => "remienden" ;
    VP (Impf Ind Sg P1) => "remendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "remendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "remendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "remendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remendara" ; "remendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remendaras" ; "remendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remendara" ; "remendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remendáramos" ; "remendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remendarais" ; "remendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remendaran" ; "remendasen"} ;--# notpresent
    VP (Pret Sg P1) => "remendé" ;--# notpresent
    VP (Pret Sg P2) => "remendaste" ;--# notpresent
    VP (Pret Sg P3) => "remendó" ;--# notpresent
    VP (Pret Pl P1) => "remendamos" ;--# notpresent
    VP (Pret Pl P2) => "remendasteis" ;--# notpresent
    VP (Pret Pl P3) => "remendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "remendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "remendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "remendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "remendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remendaren" ;--# notpresent
    VP (Cond Sg P1) => "remendaría" ;--# notpresent
    VP (Cond Sg P2) => "remendarías" ;--# notpresent
    VP (Cond Sg P3) => "remendaría" ;--# notpresent
    VP (Cond Pl P1) => "remendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "remendaríais" ;--# notpresent
    VP (Cond Pl P3) => "remendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remienda" ;
    VP (Imp Sg P3) => "remiende" ;
    VP (Imp Pl P1) => "remendemos" ;
    VP (Imp Pl P2) => "remendad" ;
    VP (Imp Pl P3) => "remienden" ;
    VP (Pass Sg Masc) => "remendado" ;
    VP (Pass Sg Fem) => "remendada" ;
    VP (Pass Pl Masc) => "remendados" ;
    VP (Pass Pl Fem) => "remendadas"
    }
  } ;

lin remolar_V = verboV 
 {s = table {
    VI Infn => "remolar" ;
    VI Ger => "remolando" ;
    VI Part => "remolado" ;
    VP (Pres Ind Sg P1) => "remuelo" ;
    VP (Pres Ind Sg P2) => "remuelas" ;
    VP (Pres Ind Sg P3) => "remuela" ;
    VP (Pres Ind Pl P1) => "remolamos" ;
    VP (Pres Ind Pl P2) => "remoláis" ;
    VP (Pres Ind Pl P3) => "remuelan" ;
    VP (Pres Subj Sg P1) => "remuele" ;
    VP (Pres Subj Sg P2) => "remueles" ;
    VP (Pres Subj Sg P3) => "remuele" ;
    VP (Pres Subj Pl P1) => "remolemos" ;
    VP (Pres Subj Pl P2) => "remoléis" ;
    VP (Pres Subj Pl P3) => "remuelen" ;
    VP (Impf Ind Sg P1) => "remolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "remolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "remolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "remolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remolara" ; "remolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remolaras" ; "remolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remolara" ; "remolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remoláramos" ; "remolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remolarais" ; "remolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remolaran" ; "remolasen"} ;--# notpresent
    VP (Pret Sg P1) => "remolé" ;--# notpresent
    VP (Pret Sg P2) => "remolaste" ;--# notpresent
    VP (Pret Sg P3) => "remoló" ;--# notpresent
    VP (Pret Pl P1) => "remolamos" ;--# notpresent
    VP (Pret Pl P2) => "remolasteis" ;--# notpresent
    VP (Pret Pl P3) => "remolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "remolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "remolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "remolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "remoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remolaren" ;--# notpresent
    VP (Cond Sg P1) => "remolaría" ;--# notpresent
    VP (Cond Sg P2) => "remolarías" ;--# notpresent
    VP (Cond Sg P3) => "remolaría" ;--# notpresent
    VP (Cond Pl P1) => "remolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "remolaríais" ;--# notpresent
    VP (Cond Pl P3) => "remolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remuela" ;
    VP (Imp Sg P3) => "remuele" ;
    VP (Imp Pl P1) => "remolemos" ;
    VP (Imp Pl P2) => "remolad" ;
    VP (Imp Pl P3) => "remuelen" ;
    VP (Pass Sg Masc) => "remolado" ;
    VP (Pass Sg Fem) => "remolada" ;
    VP (Pass Pl Masc) => "remolados" ;
    VP (Pass Pl Fem) => "remoladas"
    }
  } ;

lin rencontrar_V = verboV 
 {s = table {
    VI Infn => "rencontrar" ;
    VI Ger => "rencontrando" ;
    VI Part => "rencontrado" ;
    VP (Pres Ind Sg P1) => "rencuentro" ;
    VP (Pres Ind Sg P2) => "rencuentras" ;
    VP (Pres Ind Sg P3) => "rencuentra" ;
    VP (Pres Ind Pl P1) => "rencontramos" ;
    VP (Pres Ind Pl P2) => "rencontráis" ;
    VP (Pres Ind Pl P3) => "rencuentran" ;
    VP (Pres Subj Sg P1) => "rencuentre" ;
    VP (Pres Subj Sg P2) => "rencuentres" ;
    VP (Pres Subj Sg P3) => "rencuentre" ;
    VP (Pres Subj Pl P1) => "rencontremos" ;
    VP (Pres Subj Pl P2) => "rencontréis" ;
    VP (Pres Subj Pl P3) => "rencuentren" ;
    VP (Impf Ind Sg P1) => "rencontraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "rencontrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "rencontraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "rencontrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rencontrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rencontraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rencontrara" ; "rencontrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rencontraras" ; "rencontrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rencontrara" ; "rencontrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rencontráramos" ; "rencontrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rencontrarais" ; "rencontraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rencontraran" ; "rencontrasen"} ;--# notpresent
    VP (Pret Sg P1) => "rencontré" ;--# notpresent
    VP (Pret Sg P2) => "rencontraste" ;--# notpresent
    VP (Pret Sg P3) => "rencontró" ;--# notpresent
    VP (Pret Pl P1) => "rencontramos" ;--# notpresent
    VP (Pret Pl P2) => "rencontrasteis" ;--# notpresent
    VP (Pret Pl P3) => "rencontraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rencontraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rencontrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rencontrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rencontraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rencontraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rencontrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rencontrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "rencontrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "rencontrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "rencontráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rencontrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rencontraren" ;--# notpresent
    VP (Cond Sg P1) => "rencontraría" ;--# notpresent
    VP (Cond Sg P2) => "rencontrarías" ;--# notpresent
    VP (Cond Sg P3) => "rencontraría" ;--# notpresent
    VP (Cond Pl P1) => "rencontraríamos" ;--# notpresent
    VP (Cond Pl P2) => "rencontraríais" ;--# notpresent
    VP (Cond Pl P3) => "rencontrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rencuentra" ;
    VP (Imp Sg P3) => "rencuentre" ;
    VP (Imp Pl P1) => "rencontremos" ;
    VP (Imp Pl P2) => "rencontrad" ;
    VP (Imp Pl P3) => "rencuentren" ;
    VP (Pass Sg Masc) => "rencontrado" ;
    VP (Pass Sg Fem) => "rencontrada" ;
    VP (Pass Pl Masc) => "rencontrados" ;
    VP (Pass Pl Fem) => "rencontradas"
    }
  } ;

lin renovar_V = verboV 
 {s = table {
    VI Infn => "renovar" ;
    VI Ger => "renovando" ;
    VI Part => "renovado" ;
    VP (Pres Ind Sg P1) => "renuevo" ;
    VP (Pres Ind Sg P2) => "renuevas" ;
    VP (Pres Ind Sg P3) => "renueva" ;
    VP (Pres Ind Pl P1) => "renovamos" ;
    VP (Pres Ind Pl P2) => "renováis" ;
    VP (Pres Ind Pl P3) => "renuevan" ;
    VP (Pres Subj Sg P1) => "renueve" ;
    VP (Pres Subj Sg P2) => "renueves" ;
    VP (Pres Subj Sg P3) => "renueve" ;
    VP (Pres Subj Pl P1) => "renovemos" ;
    VP (Pres Subj Pl P2) => "renovéis" ;
    VP (Pres Subj Pl P3) => "renueven" ;
    VP (Impf Ind Sg P1) => "renovaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "renovabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "renovaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "renovábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "renovabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "renovaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"renovara" ; "renovase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"renovaras" ; "renovases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"renovara" ; "renovase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"renováramos" ; "renovásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"renovarais" ; "renovaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"renovaran" ; "renovasen"} ;--# notpresent
    VP (Pret Sg P1) => "renové" ;--# notpresent
    VP (Pret Sg P2) => "renovaste" ;--# notpresent
    VP (Pret Sg P3) => "renovó" ;--# notpresent
    VP (Pret Pl P1) => "renovamos" ;--# notpresent
    VP (Pret Pl P2) => "renovasteis" ;--# notpresent
    VP (Pret Pl P3) => "renovaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "renovaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "renovarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "renovará" ;--# notpresent
    VP (Fut Ind Pl P1) => "renovaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "renovaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "renovarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "renovare" ;--# notpresent
    VP (Fut Subj Sg P2) => "renovares" ;--# notpresent
    VP (Fut Subj Sg P3) => "renovare" ;--# notpresent
    VP (Fut Subj Pl P1) => "renováremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "renovareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "renovaren" ;--# notpresent
    VP (Cond Sg P1) => "renovaría" ;--# notpresent
    VP (Cond Sg P2) => "renovarías" ;--# notpresent
    VP (Cond Sg P3) => "renovaría" ;--# notpresent
    VP (Cond Pl P1) => "renovaríamos" ;--# notpresent
    VP (Cond Pl P2) => "renovaríais" ;--# notpresent
    VP (Cond Pl P3) => "renovarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "renueva" ;
    VP (Imp Sg P3) => "renueve" ;
    VP (Imp Pl P1) => "renovemos" ;
    VP (Imp Pl P2) => "renovad" ;
    VP (Imp Pl P3) => "renueven" ;
    VP (Pass Sg Masc) => "renovado" ;
    VP (Pass Sg Fem) => "renovada" ;
    VP (Pass Pl Masc) => "renovados" ;
    VP (Pass Pl Fem) => "renovadas"
    }
  } ;

lin repensar_V = verboV 
 {s = table {
    VI Infn => "repensar" ;
    VI Ger => "repensando" ;
    VI Part => "repensado" ;
    VP (Pres Ind Sg P1) => "repienso" ;
    VP (Pres Ind Sg P2) => "repiensas" ;
    VP (Pres Ind Sg P3) => "repiensa" ;
    VP (Pres Ind Pl P1) => "repensamos" ;
    VP (Pres Ind Pl P2) => "repensáis" ;
    VP (Pres Ind Pl P3) => "repiensan" ;
    VP (Pres Subj Sg P1) => "repiense" ;
    VP (Pres Subj Sg P2) => "repienses" ;
    VP (Pres Subj Sg P3) => "repiense" ;
    VP (Pres Subj Pl P1) => "repensemos" ;
    VP (Pres Subj Pl P2) => "repenséis" ;
    VP (Pres Subj Pl P3) => "repiensen" ;
    VP (Impf Ind Sg P1) => "repensaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "repensabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "repensaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "repensábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "repensabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "repensaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"repensara" ; "repensase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"repensaras" ; "repensases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"repensara" ; "repensase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"repensáramos" ; "repensásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"repensarais" ; "repensaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"repensaran" ; "repensasen"} ;--# notpresent
    VP (Pret Sg P1) => "repensé" ;--# notpresent
    VP (Pret Sg P2) => "repensaste" ;--# notpresent
    VP (Pret Sg P3) => "repensó" ;--# notpresent
    VP (Pret Pl P1) => "repensamos" ;--# notpresent
    VP (Pret Pl P2) => "repensasteis" ;--# notpresent
    VP (Pret Pl P3) => "repensaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "repensaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "repensarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "repensará" ;--# notpresent
    VP (Fut Ind Pl P1) => "repensaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "repensaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "repensarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "repensare" ;--# notpresent
    VP (Fut Subj Sg P2) => "repensares" ;--# notpresent
    VP (Fut Subj Sg P3) => "repensare" ;--# notpresent
    VP (Fut Subj Pl P1) => "repensáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "repensareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "repensaren" ;--# notpresent
    VP (Cond Sg P1) => "repensaría" ;--# notpresent
    VP (Cond Sg P2) => "repensarías" ;--# notpresent
    VP (Cond Sg P3) => "repensaría" ;--# notpresent
    VP (Cond Pl P1) => "repensaríamos" ;--# notpresent
    VP (Cond Pl P2) => "repensaríais" ;--# notpresent
    VP (Cond Pl P3) => "repensarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "repiensa" ;
    VP (Imp Sg P3) => "repiense" ;
    VP (Imp Pl P1) => "repensemos" ;
    VP (Imp Pl P2) => "repensad" ;
    VP (Imp Pl P3) => "repiensen" ;
    VP (Pass Sg Masc) => "repensado" ;
    VP (Pass Sg Fem) => "repensada" ;
    VP (Pass Pl Masc) => "repensados" ;
    VP (Pass Pl Fem) => "repensadas"
    }
  } ;

lin repoblar_V = verboV 
 {s = table {
    VI Infn => "repoblar" ;
    VI Ger => "repoblando" ;
    VI Part => "repoblado" ;
    VP (Pres Ind Sg P1) => "repueblo" ;
    VP (Pres Ind Sg P2) => "repueblas" ;
    VP (Pres Ind Sg P3) => "repuebla" ;
    VP (Pres Ind Pl P1) => "repoblamos" ;
    VP (Pres Ind Pl P2) => "repobláis" ;
    VP (Pres Ind Pl P3) => "repueblan" ;
    VP (Pres Subj Sg P1) => "repueble" ;
    VP (Pres Subj Sg P2) => "repuebles" ;
    VP (Pres Subj Sg P3) => "repueble" ;
    VP (Pres Subj Pl P1) => "repoblemos" ;
    VP (Pres Subj Pl P2) => "repobléis" ;
    VP (Pres Subj Pl P3) => "repueblen" ;
    VP (Impf Ind Sg P1) => "repoblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "repoblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "repoblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "repoblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "repoblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "repoblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"repoblara" ; "repoblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"repoblaras" ; "repoblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"repoblara" ; "repoblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"repobláramos" ; "repoblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"repoblarais" ; "repoblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"repoblaran" ; "repoblasen"} ;--# notpresent
    VP (Pret Sg P1) => "repoblé" ;--# notpresent
    VP (Pret Sg P2) => "repoblaste" ;--# notpresent
    VP (Pret Sg P3) => "repobló" ;--# notpresent
    VP (Pret Pl P1) => "repoblamos" ;--# notpresent
    VP (Pret Pl P2) => "repoblasteis" ;--# notpresent
    VP (Pret Pl P3) => "repoblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "repoblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "repoblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "repoblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "repoblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "repoblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "repoblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "repoblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "repoblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "repoblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "repobláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "repoblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "repoblaren" ;--# notpresent
    VP (Cond Sg P1) => "repoblaría" ;--# notpresent
    VP (Cond Sg P2) => "repoblarías" ;--# notpresent
    VP (Cond Sg P3) => "repoblaría" ;--# notpresent
    VP (Cond Pl P1) => "repoblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "repoblaríais" ;--# notpresent
    VP (Cond Pl P3) => "repoblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "repuebla" ;
    VP (Imp Sg P3) => "repueble" ;
    VP (Imp Pl P1) => "repoblemos" ;
    VP (Imp Pl P2) => "repoblad" ;
    VP (Imp Pl P3) => "repueblen" ;
    VP (Pass Sg Masc) => "repoblado" ;
    VP (Pass Sg Fem) => "repoblada" ;
    VP (Pass Pl Masc) => "repoblados" ;
    VP (Pass Pl Fem) => "repobladas"
    }
  } ;

lin reprobar_V = verboV 
 {s = table {
    VI Infn => "reprobar" ;
    VI Ger => "reprobando" ;
    VI Part => "reprobado" ;
    VP (Pres Ind Sg P1) => "repruebo" ;
    VP (Pres Ind Sg P2) => "repruebas" ;
    VP (Pres Ind Sg P3) => "reprueba" ;
    VP (Pres Ind Pl P1) => "reprobamos" ;
    VP (Pres Ind Pl P2) => "reprobáis" ;
    VP (Pres Ind Pl P3) => "reprueban" ;
    VP (Pres Subj Sg P1) => "repruebe" ;
    VP (Pres Subj Sg P2) => "repruebes" ;
    VP (Pres Subj Sg P3) => "repruebe" ;
    VP (Pres Subj Pl P1) => "reprobemos" ;
    VP (Pres Subj Pl P2) => "reprobéis" ;
    VP (Pres Subj Pl P3) => "reprueben" ;
    VP (Impf Ind Sg P1) => "reprobaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reprobabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reprobaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reprobábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reprobabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reprobaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reprobara" ; "reprobase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reprobaras" ; "reprobases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reprobara" ; "reprobase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reprobáramos" ; "reprobásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reprobarais" ; "reprobaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reprobaran" ; "reprobasen"} ;--# notpresent
    VP (Pret Sg P1) => "reprobé" ;--# notpresent
    VP (Pret Sg P2) => "reprobaste" ;--# notpresent
    VP (Pret Sg P3) => "reprobó" ;--# notpresent
    VP (Pret Pl P1) => "reprobamos" ;--# notpresent
    VP (Pret Pl P2) => "reprobasteis" ;--# notpresent
    VP (Pret Pl P3) => "reprobaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reprobaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reprobarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reprobará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reprobaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reprobaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reprobarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reprobare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reprobares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reprobare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reprobáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reprobareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reprobaren" ;--# notpresent
    VP (Cond Sg P1) => "reprobaría" ;--# notpresent
    VP (Cond Sg P2) => "reprobarías" ;--# notpresent
    VP (Cond Sg P3) => "reprobaría" ;--# notpresent
    VP (Cond Pl P1) => "reprobaríamos" ;--# notpresent
    VP (Cond Pl P2) => "reprobaríais" ;--# notpresent
    VP (Cond Pl P3) => "reprobarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reprueba" ;
    VP (Imp Sg P3) => "repruebe" ;
    VP (Imp Pl P1) => "reprobemos" ;
    VP (Imp Pl P2) => "reprobad" ;
    VP (Imp Pl P3) => "reprueben" ;
    VP (Pass Sg Masc) => "reprobado" ;
    VP (Pass Sg Fem) => "reprobada" ;
    VP (Pass Pl Masc) => "reprobados" ;
    VP (Pass Pl Fem) => "reprobadas"
    }
  } ;

lin requebrar_V = verboV 
 {s = table {
    VI Infn => "requebrar" ;
    VI Ger => "requebrando" ;
    VI Part => "requebrado" ;
    VP (Pres Ind Sg P1) => "requiebro" ;
    VP (Pres Ind Sg P2) => "requiebras" ;
    VP (Pres Ind Sg P3) => "requiebra" ;
    VP (Pres Ind Pl P1) => "requebramos" ;
    VP (Pres Ind Pl P2) => "requebráis" ;
    VP (Pres Ind Pl P3) => "requiebran" ;
    VP (Pres Subj Sg P1) => "requiebre" ;
    VP (Pres Subj Sg P2) => "requiebres" ;
    VP (Pres Subj Sg P3) => "requiebre" ;
    VP (Pres Subj Pl P1) => "requebremos" ;
    VP (Pres Subj Pl P2) => "requebréis" ;
    VP (Pres Subj Pl P3) => "requiebren" ;
    VP (Impf Ind Sg P1) => "requebraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "requebrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "requebraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "requebrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "requebrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "requebraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"requebrara" ; "requebrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"requebraras" ; "requebrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"requebrara" ; "requebrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"requebráramos" ; "requebrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"requebrarais" ; "requebraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"requebraran" ; "requebrasen"} ;--# notpresent
    VP (Pret Sg P1) => "requebré" ;--# notpresent
    VP (Pret Sg P2) => "requebraste" ;--# notpresent
    VP (Pret Sg P3) => "requebró" ;--# notpresent
    VP (Pret Pl P1) => "requebramos" ;--# notpresent
    VP (Pret Pl P2) => "requebrasteis" ;--# notpresent
    VP (Pret Pl P3) => "requebraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "requebraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "requebrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "requebrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "requebraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "requebraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "requebrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "requebrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "requebrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "requebrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "requebráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "requebrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "requebraren" ;--# notpresent
    VP (Cond Sg P1) => "requebraría" ;--# notpresent
    VP (Cond Sg P2) => "requebrarías" ;--# notpresent
    VP (Cond Sg P3) => "requebraría" ;--# notpresent
    VP (Cond Pl P1) => "requebraríamos" ;--# notpresent
    VP (Cond Pl P2) => "requebraríais" ;--# notpresent
    VP (Cond Pl P3) => "requebrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "requiebra" ;
    VP (Imp Sg P3) => "requiebre" ;
    VP (Imp Pl P1) => "requebremos" ;
    VP (Imp Pl P2) => "requebrad" ;
    VP (Imp Pl P3) => "requiebren" ;
    VP (Pass Sg Masc) => "requebrado" ;
    VP (Pass Sg Fem) => "requebrada" ;
    VP (Pass Pl Masc) => "requebrados" ;
    VP (Pass Pl Fem) => "requebradas"
    }
  } ;

lin rescontrar_V = verboV 
 {s = table {
    VI Infn => "rescontrar" ;
    VI Ger => "rescontrando" ;
    VI Part => "rescontrado" ;
    VP (Pres Ind Sg P1) => "rescuentro" ;
    VP (Pres Ind Sg P2) => "rescuentras" ;
    VP (Pres Ind Sg P3) => "rescuentra" ;
    VP (Pres Ind Pl P1) => "rescontramos" ;
    VP (Pres Ind Pl P2) => "rescontráis" ;
    VP (Pres Ind Pl P3) => "rescuentran" ;
    VP (Pres Subj Sg P1) => "rescuentre" ;
    VP (Pres Subj Sg P2) => "rescuentres" ;
    VP (Pres Subj Sg P3) => "rescuentre" ;
    VP (Pres Subj Pl P1) => "rescontremos" ;
    VP (Pres Subj Pl P2) => "rescontréis" ;
    VP (Pres Subj Pl P3) => "rescuentren" ;
    VP (Impf Ind Sg P1) => "rescontraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "rescontrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "rescontraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "rescontrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rescontrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rescontraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rescontrara" ; "rescontrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rescontraras" ; "rescontrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rescontrara" ; "rescontrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rescontráramos" ; "rescontrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rescontrarais" ; "rescontraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rescontraran" ; "rescontrasen"} ;--# notpresent
    VP (Pret Sg P1) => "rescontré" ;--# notpresent
    VP (Pret Sg P2) => "rescontraste" ;--# notpresent
    VP (Pret Sg P3) => "rescontró" ;--# notpresent
    VP (Pret Pl P1) => "rescontramos" ;--# notpresent
    VP (Pret Pl P2) => "rescontrasteis" ;--# notpresent
    VP (Pret Pl P3) => "rescontraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rescontraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rescontrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rescontrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rescontraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rescontraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rescontrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rescontrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "rescontrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "rescontrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "rescontráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rescontrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rescontraren" ;--# notpresent
    VP (Cond Sg P1) => "rescontraría" ;--# notpresent
    VP (Cond Sg P2) => "rescontrarías" ;--# notpresent
    VP (Cond Sg P3) => "rescontraría" ;--# notpresent
    VP (Cond Pl P1) => "rescontraríamos" ;--# notpresent
    VP (Cond Pl P2) => "rescontraríais" ;--# notpresent
    VP (Cond Pl P3) => "rescontrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rescuentra" ;
    VP (Imp Sg P3) => "rescuentre" ;
    VP (Imp Pl P1) => "rescontremos" ;
    VP (Imp Pl P2) => "rescontrad" ;
    VP (Imp Pl P3) => "rescuentren" ;
    VP (Pass Sg Masc) => "rescontrado" ;
    VP (Pass Sg Fem) => "rescontrada" ;
    VP (Pass Pl Masc) => "rescontrados" ;
    VP (Pass Pl Fem) => "rescontradas"
    }
  } ;

lin resolgar_V = verboV 
 {s = table {
    VI Infn => "resolgar" ;
    VI Ger => "resolgando" ;
    VI Part => "resolgado" ;
    VP (Pres Ind Sg P1) => "resuelgo" ;
    VP (Pres Ind Sg P2) => "resuelgas" ;
    VP (Pres Ind Sg P3) => "resuelga" ;
    VP (Pres Ind Pl P1) => "resolgamos" ;
    VP (Pres Ind Pl P2) => "resolgáis" ;
    VP (Pres Ind Pl P3) => "resuelgan" ;
    VP (Pres Subj Sg P1) => "resuelge" ;
    VP (Pres Subj Sg P2) => "resuelges" ;
    VP (Pres Subj Sg P3) => "resuelge" ;
    VP (Pres Subj Pl P1) => "resolgemos" ;
    VP (Pres Subj Pl P2) => "resolgéis" ;
    VP (Pres Subj Pl P3) => "resuelgen" ;
    VP (Impf Ind Sg P1) => "resolgaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "resolgabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "resolgaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "resolgábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resolgabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resolgaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resolgara" ; "resolgase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resolgaras" ; "resolgases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resolgara" ; "resolgase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resolgáramos" ; "resolgásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resolgarais" ; "resolgaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resolgaran" ; "resolgasen"} ;--# notpresent
    VP (Pret Sg P1) => "resolgé" ;--# notpresent
    VP (Pret Sg P2) => "resolgaste" ;--# notpresent
    VP (Pret Sg P3) => "resolgó" ;--# notpresent
    VP (Pret Pl P1) => "resolgamos" ;--# notpresent
    VP (Pret Pl P2) => "resolgasteis" ;--# notpresent
    VP (Pret Pl P3) => "resolgaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resolgaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resolgarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resolgará" ;--# notpresent
    VP (Fut Ind Pl P1) => "resolgaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resolgaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resolgarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resolgare" ;--# notpresent
    VP (Fut Subj Sg P2) => "resolgares" ;--# notpresent
    VP (Fut Subj Sg P3) => "resolgare" ;--# notpresent
    VP (Fut Subj Pl P1) => "resolgáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resolgareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resolgaren" ;--# notpresent
    VP (Cond Sg P1) => "resolgaría" ;--# notpresent
    VP (Cond Sg P2) => "resolgarías" ;--# notpresent
    VP (Cond Sg P3) => "resolgaría" ;--# notpresent
    VP (Cond Pl P1) => "resolgaríamos" ;--# notpresent
    VP (Cond Pl P2) => "resolgaríais" ;--# notpresent
    VP (Cond Pl P3) => "resolgarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resuelga" ;
    VP (Imp Sg P3) => "resuelge" ;
    VP (Imp Pl P1) => "resolgemos" ;
    VP (Imp Pl P2) => "resolgad" ;
    VP (Imp Pl P3) => "resuelgen" ;
    VP (Pass Sg Masc) => "resolgado" ;
    VP (Pass Sg Fem) => "resolgada" ;
    VP (Pass Pl Masc) => "resolgados" ;
    VP (Pass Pl Fem) => "resolgadas"
    }
  } ;

lin resollar_V = verboV 
 {s = table {
    VI Infn => "resollar" ;
    VI Ger => "resollando" ;
    VI Part => "resollado" ;
    VP (Pres Ind Sg P1) => "resuello" ;
    VP (Pres Ind Sg P2) => "resuellas" ;
    VP (Pres Ind Sg P3) => "resuella" ;
    VP (Pres Ind Pl P1) => "resollamos" ;
    VP (Pres Ind Pl P2) => "resolláis" ;
    VP (Pres Ind Pl P3) => "resuellan" ;
    VP (Pres Subj Sg P1) => "resuelle" ;
    VP (Pres Subj Sg P2) => "resuelles" ;
    VP (Pres Subj Sg P3) => "resuelle" ;
    VP (Pres Subj Pl P1) => "resollemos" ;
    VP (Pres Subj Pl P2) => "resolléis" ;
    VP (Pres Subj Pl P3) => "resuellen" ;
    VP (Impf Ind Sg P1) => "resollaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "resollabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "resollaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "resollábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resollabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resollaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resollara" ; "resollase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resollaras" ; "resollases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resollara" ; "resollase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resolláramos" ; "resollásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resollarais" ; "resollaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resollaran" ; "resollasen"} ;--# notpresent
    VP (Pret Sg P1) => "resollé" ;--# notpresent
    VP (Pret Sg P2) => "resollaste" ;--# notpresent
    VP (Pret Sg P3) => "resolló" ;--# notpresent
    VP (Pret Pl P1) => "resollamos" ;--# notpresent
    VP (Pret Pl P2) => "resollasteis" ;--# notpresent
    VP (Pret Pl P3) => "resollaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resollaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resollarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resollará" ;--# notpresent
    VP (Fut Ind Pl P1) => "resollaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resollaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resollarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resollare" ;--# notpresent
    VP (Fut Subj Sg P2) => "resollares" ;--# notpresent
    VP (Fut Subj Sg P3) => "resollare" ;--# notpresent
    VP (Fut Subj Pl P1) => "resolláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resollareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resollaren" ;--# notpresent
    VP (Cond Sg P1) => "resollaría" ;--# notpresent
    VP (Cond Sg P2) => "resollarías" ;--# notpresent
    VP (Cond Sg P3) => "resollaría" ;--# notpresent
    VP (Cond Pl P1) => "resollaríamos" ;--# notpresent
    VP (Cond Pl P2) => "resollaríais" ;--# notpresent
    VP (Cond Pl P3) => "resollarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resuella" ;
    VP (Imp Sg P3) => "resuelle" ;
    VP (Imp Pl P1) => "resollemos" ;
    VP (Imp Pl P2) => "resollad" ;
    VP (Imp Pl P3) => "resuellen" ;
    VP (Pass Sg Masc) => "resollado" ;
    VP (Pass Sg Fem) => "resollada" ;
    VP (Pass Pl Masc) => "resollados" ;
    VP (Pass Pl Fem) => "resolladas"
    }
  } ;

lin resonar_V = verboV 
 {s = table {
    VI Infn => "resonar" ;
    VI Ger => "resonando" ;
    VI Part => "resonado" ;
    VP (Pres Ind Sg P1) => "resueno" ;
    VP (Pres Ind Sg P2) => "resuenas" ;
    VP (Pres Ind Sg P3) => "resuena" ;
    VP (Pres Ind Pl P1) => "resonamos" ;
    VP (Pres Ind Pl P2) => "resonáis" ;
    VP (Pres Ind Pl P3) => "resuenan" ;
    VP (Pres Subj Sg P1) => "resuene" ;
    VP (Pres Subj Sg P2) => "resuenes" ;
    VP (Pres Subj Sg P3) => "resuene" ;
    VP (Pres Subj Pl P1) => "resonemos" ;
    VP (Pres Subj Pl P2) => "resonéis" ;
    VP (Pres Subj Pl P3) => "resuenen" ;
    VP (Impf Ind Sg P1) => "resonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "resonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "resonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "resonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resonara" ; "resonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resonaras" ; "resonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resonara" ; "resonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resonáramos" ; "resonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resonarais" ; "resonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resonaran" ; "resonasen"} ;--# notpresent
    VP (Pret Sg P1) => "resoné" ;--# notpresent
    VP (Pret Sg P2) => "resonaste" ;--# notpresent
    VP (Pret Sg P3) => "resonó" ;--# notpresent
    VP (Pret Pl P1) => "resonamos" ;--# notpresent
    VP (Pret Pl P2) => "resonasteis" ;--# notpresent
    VP (Pret Pl P3) => "resonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "resonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "resonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "resonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "resonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resonaren" ;--# notpresent
    VP (Cond Sg P1) => "resonaría" ;--# notpresent
    VP (Cond Sg P2) => "resonarías" ;--# notpresent
    VP (Cond Sg P3) => "resonaría" ;--# notpresent
    VP (Cond Pl P1) => "resonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "resonaríais" ;--# notpresent
    VP (Cond Pl P3) => "resonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resuena" ;
    VP (Imp Sg P3) => "resuene" ;
    VP (Imp Pl P1) => "resonemos" ;
    VP (Imp Pl P2) => "resonad" ;
    VP (Imp Pl P3) => "resuenen" ;
    VP (Pass Sg Masc) => "resonado" ;
    VP (Pass Sg Fem) => "resonada" ;
    VP (Pass Pl Masc) => "resonados" ;
    VP (Pass Pl Fem) => "resonadas"
    }
  } ;

lin resquebrar_V = verboV 
 {s = table {
    VI Infn => "resquebrar" ;
    VI Ger => "resquebrando" ;
    VI Part => "resquebrado" ;
    VP (Pres Ind Sg P1) => "resquiebro" ;
    VP (Pres Ind Sg P2) => "resquiebras" ;
    VP (Pres Ind Sg P3) => "resquiebra" ;
    VP (Pres Ind Pl P1) => "resquebramos" ;
    VP (Pres Ind Pl P2) => "resquebráis" ;
    VP (Pres Ind Pl P3) => "resquiebran" ;
    VP (Pres Subj Sg P1) => "resquiebre" ;
    VP (Pres Subj Sg P2) => "resquiebres" ;
    VP (Pres Subj Sg P3) => "resquiebre" ;
    VP (Pres Subj Pl P1) => "resquebremos" ;
    VP (Pres Subj Pl P2) => "resquebréis" ;
    VP (Pres Subj Pl P3) => "resquiebren" ;
    VP (Impf Ind Sg P1) => "resquebraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "resquebrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "resquebraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "resquebrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resquebrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resquebraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resquebrara" ; "resquebrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resquebraras" ; "resquebrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resquebrara" ; "resquebrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resquebráramos" ; "resquebrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resquebrarais" ; "resquebraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resquebraran" ; "resquebrasen"} ;--# notpresent
    VP (Pret Sg P1) => "resquebré" ;--# notpresent
    VP (Pret Sg P2) => "resquebraste" ;--# notpresent
    VP (Pret Sg P3) => "resquebró" ;--# notpresent
    VP (Pret Pl P1) => "resquebramos" ;--# notpresent
    VP (Pret Pl P2) => "resquebrasteis" ;--# notpresent
    VP (Pret Pl P3) => "resquebraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resquebraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resquebrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resquebrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "resquebraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resquebraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resquebrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resquebrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "resquebrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "resquebrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "resquebráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resquebrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resquebraren" ;--# notpresent
    VP (Cond Sg P1) => "resquebraría" ;--# notpresent
    VP (Cond Sg P2) => "resquebrarías" ;--# notpresent
    VP (Cond Sg P3) => "resquebraría" ;--# notpresent
    VP (Cond Pl P1) => "resquebraríamos" ;--# notpresent
    VP (Cond Pl P2) => "resquebraríais" ;--# notpresent
    VP (Cond Pl P3) => "resquebrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resquiebra" ;
    VP (Imp Sg P3) => "resquiebre" ;
    VP (Imp Pl P1) => "resquebremos" ;
    VP (Imp Pl P2) => "resquebrad" ;
    VP (Imp Pl P3) => "resquiebren" ;
    VP (Pass Sg Masc) => "resquebrado" ;
    VP (Pass Sg Fem) => "resquebrada" ;
    VP (Pass Pl Masc) => "resquebrados" ;
    VP (Pass Pl Fem) => "resquebradas"
    }
  } ;

lin retemblar_V = verboV 
 {s = table {
    VI Infn => "retemblar" ;
    VI Ger => "retemblando" ;
    VI Part => "retemblado" ;
    VP (Pres Ind Sg P1) => "retiemblo" ;
    VP (Pres Ind Sg P2) => "retiemblas" ;
    VP (Pres Ind Sg P3) => "retiembla" ;
    VP (Pres Ind Pl P1) => "retemblamos" ;
    VP (Pres Ind Pl P2) => "retembláis" ;
    VP (Pres Ind Pl P3) => "retiemblan" ;
    VP (Pres Subj Sg P1) => "retiemble" ;
    VP (Pres Subj Sg P2) => "retiembles" ;
    VP (Pres Subj Sg P3) => "retiemble" ;
    VP (Pres Subj Pl P1) => "retemblemos" ;
    VP (Pres Subj Pl P2) => "retembléis" ;
    VP (Pres Subj Pl P3) => "retiemblen" ;
    VP (Impf Ind Sg P1) => "retemblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "retemblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "retemblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "retemblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retemblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retemblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retemblara" ; "retemblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retemblaras" ; "retemblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retemblara" ; "retemblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retembláramos" ; "retemblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retemblarais" ; "retemblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retemblaran" ; "retemblasen"} ;--# notpresent
    VP (Pret Sg P1) => "retemblé" ;--# notpresent
    VP (Pret Sg P2) => "retemblaste" ;--# notpresent
    VP (Pret Sg P3) => "retembló" ;--# notpresent
    VP (Pret Pl P1) => "retemblamos" ;--# notpresent
    VP (Pret Pl P2) => "retemblasteis" ;--# notpresent
    VP (Pret Pl P3) => "retemblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retemblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retemblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retemblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "retemblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retemblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retemblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retemblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "retemblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "retemblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "retembláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retemblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retemblaren" ;--# notpresent
    VP (Cond Sg P1) => "retemblaría" ;--# notpresent
    VP (Cond Sg P2) => "retemblarías" ;--# notpresent
    VP (Cond Sg P3) => "retemblaría" ;--# notpresent
    VP (Cond Pl P1) => "retemblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "retemblaríais" ;--# notpresent
    VP (Cond Pl P3) => "retemblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retiembla" ;
    VP (Imp Sg P3) => "retiemble" ;
    VP (Imp Pl P1) => "retemblemos" ;
    VP (Imp Pl P2) => "retemblad" ;
    VP (Imp Pl P3) => "retiemblen" ;
    VP (Pass Sg Masc) => "retemblado" ;
    VP (Pass Sg Fem) => "retemblada" ;
    VP (Pass Pl Masc) => "retemblados" ;
    VP (Pass Pl Fem) => "retembladas"
    }
  } ;

lin retentar_V = verboV 
 {s = table {
    VI Infn => "retentar" ;
    VI Ger => "retentando" ;
    VI Part => "retentado" ;
    VP (Pres Ind Sg P1) => "retiento" ;
    VP (Pres Ind Sg P2) => "retientas" ;
    VP (Pres Ind Sg P3) => "retienta" ;
    VP (Pres Ind Pl P1) => "retentamos" ;
    VP (Pres Ind Pl P2) => "retentáis" ;
    VP (Pres Ind Pl P3) => "retientan" ;
    VP (Pres Subj Sg P1) => "retiente" ;
    VP (Pres Subj Sg P2) => "retientes" ;
    VP (Pres Subj Sg P3) => "retiente" ;
    VP (Pres Subj Pl P1) => "retentemos" ;
    VP (Pres Subj Pl P2) => "retentéis" ;
    VP (Pres Subj Pl P3) => "retienten" ;
    VP (Impf Ind Sg P1) => "retentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "retentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "retentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "retentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retentara" ; "retentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retentaras" ; "retentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retentara" ; "retentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retentáramos" ; "retentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retentarais" ; "retentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retentaran" ; "retentasen"} ;--# notpresent
    VP (Pret Sg P1) => "retenté" ;--# notpresent
    VP (Pret Sg P2) => "retentaste" ;--# notpresent
    VP (Pret Sg P3) => "retentó" ;--# notpresent
    VP (Pret Pl P1) => "retentamos" ;--# notpresent
    VP (Pret Pl P2) => "retentasteis" ;--# notpresent
    VP (Pret Pl P3) => "retentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "retentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "retentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "retentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "retentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retentaren" ;--# notpresent
    VP (Cond Sg P1) => "retentaría" ;--# notpresent
    VP (Cond Sg P2) => "retentarías" ;--# notpresent
    VP (Cond Sg P3) => "retentaría" ;--# notpresent
    VP (Cond Pl P1) => "retentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "retentaríais" ;--# notpresent
    VP (Cond Pl P3) => "retentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retienta" ;
    VP (Imp Sg P3) => "retiente" ;
    VP (Imp Pl P1) => "retentemos" ;
    VP (Imp Pl P2) => "retentad" ;
    VP (Imp Pl P3) => "retienten" ;
    VP (Pass Sg Masc) => "retentado" ;
    VP (Pass Sg Fem) => "retentada" ;
    VP (Pass Pl Masc) => "retentados" ;
    VP (Pass Pl Fem) => "retentadas"
    }
  } ;

lin retostar_V = verboV 
 {s = table {
    VI Infn => "retostar" ;
    VI Ger => "retostando" ;
    VI Part => "retostado" ;
    VP (Pres Ind Sg P1) => "retuesto" ;
    VP (Pres Ind Sg P2) => "retuestas" ;
    VP (Pres Ind Sg P3) => "retuesta" ;
    VP (Pres Ind Pl P1) => "retostamos" ;
    VP (Pres Ind Pl P2) => "retostáis" ;
    VP (Pres Ind Pl P3) => "retuestan" ;
    VP (Pres Subj Sg P1) => "retueste" ;
    VP (Pres Subj Sg P2) => "retuestes" ;
    VP (Pres Subj Sg P3) => "retueste" ;
    VP (Pres Subj Pl P1) => "retostemos" ;
    VP (Pres Subj Pl P2) => "retostéis" ;
    VP (Pres Subj Pl P3) => "retuesten" ;
    VP (Impf Ind Sg P1) => "retostaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "retostabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "retostaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "retostábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retostabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retostaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retostara" ; "retostase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retostaras" ; "retostases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retostara" ; "retostase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retostáramos" ; "retostásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retostarais" ; "retostaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retostaran" ; "retostasen"} ;--# notpresent
    VP (Pret Sg P1) => "retosté" ;--# notpresent
    VP (Pret Sg P2) => "retostaste" ;--# notpresent
    VP (Pret Sg P3) => "retostó" ;--# notpresent
    VP (Pret Pl P1) => "retostamos" ;--# notpresent
    VP (Pret Pl P2) => "retostasteis" ;--# notpresent
    VP (Pret Pl P3) => "retostaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retostaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retostarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retostará" ;--# notpresent
    VP (Fut Ind Pl P1) => "retostaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retostaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retostarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retostare" ;--# notpresent
    VP (Fut Subj Sg P2) => "retostares" ;--# notpresent
    VP (Fut Subj Sg P3) => "retostare" ;--# notpresent
    VP (Fut Subj Pl P1) => "retostáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retostareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retostaren" ;--# notpresent
    VP (Cond Sg P1) => "retostaría" ;--# notpresent
    VP (Cond Sg P2) => "retostarías" ;--# notpresent
    VP (Cond Sg P3) => "retostaría" ;--# notpresent
    VP (Cond Pl P1) => "retostaríamos" ;--# notpresent
    VP (Cond Pl P2) => "retostaríais" ;--# notpresent
    VP (Cond Pl P3) => "retostarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retuesta" ;
    VP (Imp Sg P3) => "retueste" ;
    VP (Imp Pl P1) => "retostemos" ;
    VP (Imp Pl P2) => "retostad" ;
    VP (Imp Pl P3) => "retuesten" ;
    VP (Pass Sg Masc) => "retostado" ;
    VP (Pass Sg Fem) => "retostada" ;
    VP (Pass Pl Masc) => "retostados" ;
    VP (Pass Pl Fem) => "retostadas"
    }
  } ;

lin retronar_V = verboV 
 {s = table {
    VI Infn => "retronar" ;
    VI Ger => "retronando" ;
    VI Part => "retronado" ;
    VP (Pres Ind Sg P1) => "retrueno" ;
    VP (Pres Ind Sg P2) => "retruenas" ;
    VP (Pres Ind Sg P3) => "retruena" ;
    VP (Pres Ind Pl P1) => "retronamos" ;
    VP (Pres Ind Pl P2) => "retronáis" ;
    VP (Pres Ind Pl P3) => "retruenan" ;
    VP (Pres Subj Sg P1) => "retruene" ;
    VP (Pres Subj Sg P2) => "retruenes" ;
    VP (Pres Subj Sg P3) => "retruene" ;
    VP (Pres Subj Pl P1) => "retronemos" ;
    VP (Pres Subj Pl P2) => "retronéis" ;
    VP (Pres Subj Pl P3) => "retruenen" ;
    VP (Impf Ind Sg P1) => "retronaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "retronabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "retronaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "retronábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retronabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retronaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retronara" ; "retronase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retronaras" ; "retronases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retronara" ; "retronase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retronáramos" ; "retronásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retronarais" ; "retronaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retronaran" ; "retronasen"} ;--# notpresent
    VP (Pret Sg P1) => "retroné" ;--# notpresent
    VP (Pret Sg P2) => "retronaste" ;--# notpresent
    VP (Pret Sg P3) => "retronó" ;--# notpresent
    VP (Pret Pl P1) => "retronamos" ;--# notpresent
    VP (Pret Pl P2) => "retronasteis" ;--# notpresent
    VP (Pret Pl P3) => "retronaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retronaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retronarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retronará" ;--# notpresent
    VP (Fut Ind Pl P1) => "retronaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retronaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retronarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retronare" ;--# notpresent
    VP (Fut Subj Sg P2) => "retronares" ;--# notpresent
    VP (Fut Subj Sg P3) => "retronare" ;--# notpresent
    VP (Fut Subj Pl P1) => "retronáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retronareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retronaren" ;--# notpresent
    VP (Cond Sg P1) => "retronaría" ;--# notpresent
    VP (Cond Sg P2) => "retronarías" ;--# notpresent
    VP (Cond Sg P3) => "retronaría" ;--# notpresent
    VP (Cond Pl P1) => "retronaríamos" ;--# notpresent
    VP (Cond Pl P2) => "retronaríais" ;--# notpresent
    VP (Cond Pl P3) => "retronarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retruena" ;
    VP (Imp Sg P3) => "retruene" ;
    VP (Imp Pl P1) => "retronemos" ;
    VP (Imp Pl P2) => "retronad" ;
    VP (Imp Pl P3) => "retruenen" ;
    VP (Pass Sg Masc) => "retronado" ;
    VP (Pass Sg Fem) => "retronada" ;
    VP (Pass Pl Masc) => "retronados" ;
    VP (Pass Pl Fem) => "retronadas"
    }
  } ;

lin reventar_V = verboV 
 {s = table {
    VI Infn => "reventar" ;
    VI Ger => "reventando" ;
    VI Part => "reventado" ;
    VP (Pres Ind Sg P1) => "reviento" ;
    VP (Pres Ind Sg P2) => "revientas" ;
    VP (Pres Ind Sg P3) => "revienta" ;
    VP (Pres Ind Pl P1) => "reventamos" ;
    VP (Pres Ind Pl P2) => "reventáis" ;
    VP (Pres Ind Pl P3) => "revientan" ;
    VP (Pres Subj Sg P1) => "reviente" ;
    VP (Pres Subj Sg P2) => "revientes" ;
    VP (Pres Subj Sg P3) => "reviente" ;
    VP (Pres Subj Pl P1) => "reventemos" ;
    VP (Pres Subj Pl P2) => "reventéis" ;
    VP (Pres Subj Pl P3) => "revienten" ;
    VP (Impf Ind Sg P1) => "reventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "reventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "reventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "reventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reventara" ; "reventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reventaras" ; "reventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reventara" ; "reventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reventáramos" ; "reventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reventarais" ; "reventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reventaran" ; "reventasen"} ;--# notpresent
    VP (Pret Sg P1) => "reventé" ;--# notpresent
    VP (Pret Sg P2) => "reventaste" ;--# notpresent
    VP (Pret Sg P3) => "reventó" ;--# notpresent
    VP (Pret Pl P1) => "reventamos" ;--# notpresent
    VP (Pret Pl P2) => "reventasteis" ;--# notpresent
    VP (Pret Pl P3) => "reventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "reventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "reventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "reventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reventaren" ;--# notpresent
    VP (Cond Sg P1) => "reventaría" ;--# notpresent
    VP (Cond Sg P2) => "reventarías" ;--# notpresent
    VP (Cond Sg P3) => "reventaría" ;--# notpresent
    VP (Cond Pl P1) => "reventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "reventaríais" ;--# notpresent
    VP (Cond Pl P3) => "reventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revienta" ;
    VP (Imp Sg P3) => "reviente" ;
    VP (Imp Pl P1) => "reventemos" ;
    VP (Imp Pl P2) => "reventad" ;
    VP (Imp Pl P3) => "revienten" ;
    VP (Pass Sg Masc) => "reventado" ;
    VP (Pass Sg Fem) => "reventada" ;
    VP (Pass Pl Masc) => "reventados" ;
    VP (Pass Pl Fem) => "reventadas"
    }
  } ;

lin revolar_V = verboV 
 {s = table {
    VI Infn => "revolar" ;
    VI Ger => "revolando" ;
    VI Part => "revolado" ;
    VP (Pres Ind Sg P1) => "revuelo" ;
    VP (Pres Ind Sg P2) => "revuelas" ;
    VP (Pres Ind Sg P3) => "revuela" ;
    VP (Pres Ind Pl P1) => "revolamos" ;
    VP (Pres Ind Pl P2) => "revoláis" ;
    VP (Pres Ind Pl P3) => "revuelan" ;
    VP (Pres Subj Sg P1) => "revuele" ;
    VP (Pres Subj Sg P2) => "revueles" ;
    VP (Pres Subj Sg P3) => "revuele" ;
    VP (Pres Subj Pl P1) => "revolemos" ;
    VP (Pres Subj Pl P2) => "revoléis" ;
    VP (Pres Subj Pl P3) => "revuelen" ;
    VP (Impf Ind Sg P1) => "revolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "revolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "revolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "revolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revolara" ; "revolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revolaras" ; "revolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revolara" ; "revolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revoláramos" ; "revolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revolarais" ; "revolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revolaran" ; "revolasen"} ;--# notpresent
    VP (Pret Sg P1) => "revolé" ;--# notpresent
    VP (Pret Sg P2) => "revolaste" ;--# notpresent
    VP (Pret Sg P3) => "revoló" ;--# notpresent
    VP (Pret Pl P1) => "revolamos" ;--# notpresent
    VP (Pret Pl P2) => "revolasteis" ;--# notpresent
    VP (Pret Pl P3) => "revolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "revolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "revolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "revolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "revoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revolaren" ;--# notpresent
    VP (Cond Sg P1) => "revolaría" ;--# notpresent
    VP (Cond Sg P2) => "revolarías" ;--# notpresent
    VP (Cond Sg P3) => "revolaría" ;--# notpresent
    VP (Cond Pl P1) => "revolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "revolaríais" ;--# notpresent
    VP (Cond Pl P3) => "revolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "revuela" ;
    VP (Imp Sg P3) => "revuele" ;
    VP (Imp Pl P1) => "revolemos" ;
    VP (Imp Pl P2) => "revolad" ;
    VP (Imp Pl P3) => "revuelen" ;
    VP (Pass Sg Masc) => "revolado" ;
    VP (Pass Sg Fem) => "revolada" ;
    VP (Pass Pl Masc) => "revolados" ;
    VP (Pass Pl Fem) => "revoladas"
    }
  } ;

lin rodar_V = verboV 
 {s = table {
    VI Infn => "rodar" ;
    VI Ger => "rodando" ;
    VI Part => "rodado" ;
    VP (Pres Ind Sg P1) => "ruedo" ;
    VP (Pres Ind Sg P2) => "ruedas" ;
    VP (Pres Ind Sg P3) => "rueda" ;
    VP (Pres Ind Pl P1) => "rodamos" ;
    VP (Pres Ind Pl P2) => "rodáis" ;
    VP (Pres Ind Pl P3) => "ruedan" ;
    VP (Pres Subj Sg P1) => "ruede" ;
    VP (Pres Subj Sg P2) => "ruedes" ;
    VP (Pres Subj Sg P3) => "ruede" ;
    VP (Pres Subj Pl P1) => "rodemos" ;
    VP (Pres Subj Pl P2) => "rodéis" ;
    VP (Pres Subj Pl P3) => "rueden" ;
    VP (Impf Ind Sg P1) => "rodaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "rodabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "rodaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "rodábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rodabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rodaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rodara" ; "rodase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rodaras" ; "rodases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rodara" ; "rodase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rodáramos" ; "rodásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rodarais" ; "rodaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rodaran" ; "rodasen"} ;--# notpresent
    VP (Pret Sg P1) => "rodé" ;--# notpresent
    VP (Pret Sg P2) => "rodaste" ;--# notpresent
    VP (Pret Sg P3) => "rodó" ;--# notpresent
    VP (Pret Pl P1) => "rodamos" ;--# notpresent
    VP (Pret Pl P2) => "rodasteis" ;--# notpresent
    VP (Pret Pl P3) => "rodaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rodaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rodarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rodará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rodaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rodaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rodarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rodare" ;--# notpresent
    VP (Fut Subj Sg P2) => "rodares" ;--# notpresent
    VP (Fut Subj Sg P3) => "rodare" ;--# notpresent
    VP (Fut Subj Pl P1) => "rodáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rodareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rodaren" ;--# notpresent
    VP (Cond Sg P1) => "rodaría" ;--# notpresent
    VP (Cond Sg P2) => "rodarías" ;--# notpresent
    VP (Cond Sg P3) => "rodaría" ;--# notpresent
    VP (Cond Pl P1) => "rodaríamos" ;--# notpresent
    VP (Cond Pl P2) => "rodaríais" ;--# notpresent
    VP (Cond Pl P3) => "rodarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rueda" ;
    VP (Imp Sg P3) => "ruede" ;
    VP (Imp Pl P1) => "rodemos" ;
    VP (Imp Pl P2) => "rodad" ;
    VP (Imp Pl P3) => "rueden" ;
    VP (Pass Sg Masc) => "rodado" ;
    VP (Pass Sg Fem) => "rodada" ;
    VP (Pass Pl Masc) => "rodados" ;
    VP (Pass Pl Fem) => "rodadas"
    }
  } ;

lin rusentar_V = verboV 
 {s = table {
    VI Infn => "rusentar" ;
    VI Ger => "rusentando" ;
    VI Part => "rusentado" ;
    VP (Pres Ind Sg P1) => "rusiento" ;
    VP (Pres Ind Sg P2) => "rusientas" ;
    VP (Pres Ind Sg P3) => "rusienta" ;
    VP (Pres Ind Pl P1) => "rusentamos" ;
    VP (Pres Ind Pl P2) => "rusentáis" ;
    VP (Pres Ind Pl P3) => "rusientan" ;
    VP (Pres Subj Sg P1) => "rusiente" ;
    VP (Pres Subj Sg P2) => "rusientes" ;
    VP (Pres Subj Sg P3) => "rusiente" ;
    VP (Pres Subj Pl P1) => "rusentemos" ;
    VP (Pres Subj Pl P2) => "rusentéis" ;
    VP (Pres Subj Pl P3) => "rusienten" ;
    VP (Impf Ind Sg P1) => "rusentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "rusentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "rusentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "rusentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rusentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rusentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rusentara" ; "rusentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rusentaras" ; "rusentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rusentara" ; "rusentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rusentáramos" ; "rusentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rusentarais" ; "rusentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rusentaran" ; "rusentasen"} ;--# notpresent
    VP (Pret Sg P1) => "rusenté" ;--# notpresent
    VP (Pret Sg P2) => "rusentaste" ;--# notpresent
    VP (Pret Sg P3) => "rusentó" ;--# notpresent
    VP (Pret Pl P1) => "rusentamos" ;--# notpresent
    VP (Pret Pl P2) => "rusentasteis" ;--# notpresent
    VP (Pret Pl P3) => "rusentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rusentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rusentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rusentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rusentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rusentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rusentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rusentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "rusentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "rusentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "rusentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rusentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rusentaren" ;--# notpresent
    VP (Cond Sg P1) => "rusentaría" ;--# notpresent
    VP (Cond Sg P2) => "rusentarías" ;--# notpresent
    VP (Cond Sg P3) => "rusentaría" ;--# notpresent
    VP (Cond Pl P1) => "rusentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "rusentaríais" ;--# notpresent
    VP (Cond Pl P3) => "rusentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rusienta" ;
    VP (Imp Sg P3) => "rusiente" ;
    VP (Imp Pl P1) => "rusentemos" ;
    VP (Imp Pl P2) => "rusentad" ;
    VP (Imp Pl P3) => "rusienten" ;
    VP (Pass Sg Masc) => "rusentado" ;
    VP (Pass Sg Fem) => "rusentada" ;
    VP (Pass Pl Masc) => "rusentados" ;
    VP (Pass Pl Fem) => "rusentadas"
    }
  } ;

lin salpimentar_V = verboV 
 {s = table {
    VI Infn => "salpimentar" ;
    VI Ger => "salpimentando" ;
    VI Part => "salpimentado" ;
    VP (Pres Ind Sg P1) => "salpimiento" ;
    VP (Pres Ind Sg P2) => "salpimientas" ;
    VP (Pres Ind Sg P3) => "salpimienta" ;
    VP (Pres Ind Pl P1) => "salpimentamos" ;
    VP (Pres Ind Pl P2) => "salpimentáis" ;
    VP (Pres Ind Pl P3) => "salpimientan" ;
    VP (Pres Subj Sg P1) => "salpimiente" ;
    VP (Pres Subj Sg P2) => "salpimientes" ;
    VP (Pres Subj Sg P3) => "salpimiente" ;
    VP (Pres Subj Pl P1) => "salpimentemos" ;
    VP (Pres Subj Pl P2) => "salpimentéis" ;
    VP (Pres Subj Pl P3) => "salpimienten" ;
    VP (Impf Ind Sg P1) => "salpimentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "salpimentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "salpimentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "salpimentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "salpimentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "salpimentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"salpimentara" ; "salpimentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"salpimentaras" ; "salpimentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"salpimentara" ; "salpimentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"salpimentáramos" ; "salpimentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"salpimentarais" ; "salpimentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"salpimentaran" ; "salpimentasen"} ;--# notpresent
    VP (Pret Sg P1) => "salpimenté" ;--# notpresent
    VP (Pret Sg P2) => "salpimentaste" ;--# notpresent
    VP (Pret Sg P3) => "salpimentó" ;--# notpresent
    VP (Pret Pl P1) => "salpimentamos" ;--# notpresent
    VP (Pret Pl P2) => "salpimentasteis" ;--# notpresent
    VP (Pret Pl P3) => "salpimentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "salpimentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "salpimentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "salpimentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "salpimentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "salpimentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "salpimentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "salpimentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "salpimentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "salpimentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "salpimentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "salpimentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "salpimentaren" ;--# notpresent
    VP (Cond Sg P1) => "salpimentaría" ;--# notpresent
    VP (Cond Sg P2) => "salpimentarías" ;--# notpresent
    VP (Cond Sg P3) => "salpimentaría" ;--# notpresent
    VP (Cond Pl P1) => "salpimentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "salpimentaríais" ;--# notpresent
    VP (Cond Pl P3) => "salpimentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "salpimienta" ;
    VP (Imp Sg P3) => "salpimiente" ;
    VP (Imp Pl P1) => "salpimentemos" ;
    VP (Imp Pl P2) => "salpimentad" ;
    VP (Imp Pl P3) => "salpimienten" ;
    VP (Pass Sg Masc) => "salpimentado" ;
    VP (Pass Sg Fem) => "salpimentada" ;
    VP (Pass Pl Masc) => "salpimentados" ;
    VP (Pass Pl Fem) => "salpimentadas"
    }
  } ;

lin sarmentar_V = verboV 
 {s = table {
    VI Infn => "sarmentar" ;
    VI Ger => "sarmentando" ;
    VI Part => "sarmentado" ;
    VP (Pres Ind Sg P1) => "sarmiento" ;
    VP (Pres Ind Sg P2) => "sarmientas" ;
    VP (Pres Ind Sg P3) => "sarmienta" ;
    VP (Pres Ind Pl P1) => "sarmentamos" ;
    VP (Pres Ind Pl P2) => "sarmentáis" ;
    VP (Pres Ind Pl P3) => "sarmientan" ;
    VP (Pres Subj Sg P1) => "sarmiente" ;
    VP (Pres Subj Sg P2) => "sarmientes" ;
    VP (Pres Subj Sg P3) => "sarmiente" ;
    VP (Pres Subj Pl P1) => "sarmentemos" ;
    VP (Pres Subj Pl P2) => "sarmentéis" ;
    VP (Pres Subj Pl P3) => "sarmienten" ;
    VP (Impf Ind Sg P1) => "sarmentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sarmentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sarmentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sarmentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sarmentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sarmentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sarmentara" ; "sarmentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sarmentaras" ; "sarmentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sarmentara" ; "sarmentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sarmentáramos" ; "sarmentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sarmentarais" ; "sarmentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sarmentaran" ; "sarmentasen"} ;--# notpresent
    VP (Pret Sg P1) => "sarmenté" ;--# notpresent
    VP (Pret Sg P2) => "sarmentaste" ;--# notpresent
    VP (Pret Sg P3) => "sarmentó" ;--# notpresent
    VP (Pret Pl P1) => "sarmentamos" ;--# notpresent
    VP (Pret Pl P2) => "sarmentasteis" ;--# notpresent
    VP (Pret Pl P3) => "sarmentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sarmentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sarmentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sarmentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sarmentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sarmentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sarmentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sarmentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sarmentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sarmentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sarmentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sarmentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sarmentaren" ;--# notpresent
    VP (Cond Sg P1) => "sarmentaría" ;--# notpresent
    VP (Cond Sg P2) => "sarmentarías" ;--# notpresent
    VP (Cond Sg P3) => "sarmentaría" ;--# notpresent
    VP (Cond Pl P1) => "sarmentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sarmentaríais" ;--# notpresent
    VP (Cond Pl P3) => "sarmentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sarmienta" ;
    VP (Imp Sg P3) => "sarmiente" ;
    VP (Imp Pl P1) => "sarmentemos" ;
    VP (Imp Pl P2) => "sarmentad" ;
    VP (Imp Pl P3) => "sarmienten" ;
    VP (Pass Sg Masc) => "sarmentado" ;
    VP (Pass Sg Fem) => "sarmentada" ;
    VP (Pass Pl Masc) => "sarmentados" ;
    VP (Pass Pl Fem) => "sarmentadas"
    }
  } ;

lin sembrar_V = verboV 
 {s = table {
    VI Infn => "sembrar" ;
    VI Ger => "sembrando" ;
    VI Part => "sembrado" ;
    VP (Pres Ind Sg P1) => "siembro" ;
    VP (Pres Ind Sg P2) => "siembras" ;
    VP (Pres Ind Sg P3) => "siembra" ;
    VP (Pres Ind Pl P1) => "sembramos" ;
    VP (Pres Ind Pl P2) => "sembráis" ;
    VP (Pres Ind Pl P3) => "siembran" ;
    VP (Pres Subj Sg P1) => "siembre" ;
    VP (Pres Subj Sg P2) => "siembres" ;
    VP (Pres Subj Sg P3) => "siembre" ;
    VP (Pres Subj Pl P1) => "sembremos" ;
    VP (Pres Subj Pl P2) => "sembréis" ;
    VP (Pres Subj Pl P3) => "siembren" ;
    VP (Impf Ind Sg P1) => "sembraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sembrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sembraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sembrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sembrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sembraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sembrara" ; "sembrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sembraras" ; "sembrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sembrara" ; "sembrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sembráramos" ; "sembrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sembrarais" ; "sembraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sembraran" ; "sembrasen"} ;--# notpresent
    VP (Pret Sg P1) => "sembré" ;--# notpresent
    VP (Pret Sg P2) => "sembraste" ;--# notpresent
    VP (Pret Sg P3) => "sembró" ;--# notpresent
    VP (Pret Pl P1) => "sembramos" ;--# notpresent
    VP (Pret Pl P2) => "sembrasteis" ;--# notpresent
    VP (Pret Pl P3) => "sembraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sembraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sembrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sembrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sembraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sembraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sembrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sembrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sembrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sembrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sembráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sembrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sembraren" ;--# notpresent
    VP (Cond Sg P1) => "sembraría" ;--# notpresent
    VP (Cond Sg P2) => "sembrarías" ;--# notpresent
    VP (Cond Sg P3) => "sembraría" ;--# notpresent
    VP (Cond Pl P1) => "sembraríamos" ;--# notpresent
    VP (Cond Pl P2) => "sembraríais" ;--# notpresent
    VP (Cond Pl P3) => "sembrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "siembra" ;
    VP (Imp Sg P3) => "siembre" ;
    VP (Imp Pl P1) => "sembremos" ;
    VP (Imp Pl P2) => "sembrad" ;
    VP (Imp Pl P3) => "siembren" ;
    VP (Pass Sg Masc) => "sembrado" ;
    VP (Pass Sg Fem) => "sembrada" ;
    VP (Pass Pl Masc) => "sembrados" ;
    VP (Pass Pl Fem) => "sembradas"
    }
  } ;

lin sementar_V = verboV 
 {s = table {
    VI Infn => "sementar" ;
    VI Ger => "sementando" ;
    VI Part => "sementado" ;
    VP (Pres Ind Sg P1) => "semiento" ;
    VP (Pres Ind Sg P2) => "semientas" ;
    VP (Pres Ind Sg P3) => "semienta" ;
    VP (Pres Ind Pl P1) => "sementamos" ;
    VP (Pres Ind Pl P2) => "sementáis" ;
    VP (Pres Ind Pl P3) => "semientan" ;
    VP (Pres Subj Sg P1) => "semiente" ;
    VP (Pres Subj Sg P2) => "semientes" ;
    VP (Pres Subj Sg P3) => "semiente" ;
    VP (Pres Subj Pl P1) => "sementemos" ;
    VP (Pres Subj Pl P2) => "sementéis" ;
    VP (Pres Subj Pl P3) => "semienten" ;
    VP (Impf Ind Sg P1) => "sementaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sementabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sementaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sementábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sementabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sementaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sementara" ; "sementase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sementaras" ; "sementases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sementara" ; "sementase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sementáramos" ; "sementásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sementarais" ; "sementaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sementaran" ; "sementasen"} ;--# notpresent
    VP (Pret Sg P1) => "sementé" ;--# notpresent
    VP (Pret Sg P2) => "sementaste" ;--# notpresent
    VP (Pret Sg P3) => "sementó" ;--# notpresent
    VP (Pret Pl P1) => "sementamos" ;--# notpresent
    VP (Pret Pl P2) => "sementasteis" ;--# notpresent
    VP (Pret Pl P3) => "sementaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sementaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sementarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sementará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sementaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sementaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sementarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sementare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sementares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sementare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sementáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sementareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sementaren" ;--# notpresent
    VP (Cond Sg P1) => "sementaría" ;--# notpresent
    VP (Cond Sg P2) => "sementarías" ;--# notpresent
    VP (Cond Sg P3) => "sementaría" ;--# notpresent
    VP (Cond Pl P1) => "sementaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sementaríais" ;--# notpresent
    VP (Cond Pl P3) => "sementarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "semienta" ;
    VP (Imp Sg P3) => "semiente" ;
    VP (Imp Pl P1) => "sementemos" ;
    VP (Imp Pl P2) => "sementad" ;
    VP (Imp Pl P3) => "semienten" ;
    VP (Pass Sg Masc) => "sementado" ;
    VP (Pass Sg Fem) => "sementada" ;
    VP (Pass Pl Masc) => "sementados" ;
    VP (Pass Pl Fem) => "sementadas"
    }
  } ;

lin sentar_V = verboV 
 {s = table {
    VI Infn => "sentar" ;
    VI Ger => "sentando" ;
    VI Part => "sentado" ;
    VP (Pres Ind Sg P1) => "siento" ;
    VP (Pres Ind Sg P2) => "sientas" ;
    VP (Pres Ind Sg P3) => "sienta" ;
    VP (Pres Ind Pl P1) => "sentamos" ;
    VP (Pres Ind Pl P2) => "sentáis" ;
    VP (Pres Ind Pl P3) => "sientan" ;
    VP (Pres Subj Sg P1) => "siente" ;
    VP (Pres Subj Sg P2) => "sientes" ;
    VP (Pres Subj Sg P3) => "siente" ;
    VP (Pres Subj Pl P1) => "sentemos" ;
    VP (Pres Subj Pl P2) => "sentéis" ;
    VP (Pres Subj Pl P3) => "sienten" ;
    VP (Impf Ind Sg P1) => "sentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sentara" ; "sentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sentaras" ; "sentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sentara" ; "sentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sentáramos" ; "sentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sentarais" ; "sentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sentaran" ; "sentasen"} ;--# notpresent
    VP (Pret Sg P1) => "senté" ;--# notpresent
    VP (Pret Sg P2) => "sentaste" ;--# notpresent
    VP (Pret Sg P3) => "sentó" ;--# notpresent
    VP (Pret Pl P1) => "sentamos" ;--# notpresent
    VP (Pret Pl P2) => "sentasteis" ;--# notpresent
    VP (Pret Pl P3) => "sentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sentaren" ;--# notpresent
    VP (Cond Sg P1) => "sentaría" ;--# notpresent
    VP (Cond Sg P2) => "sentarías" ;--# notpresent
    VP (Cond Sg P3) => "sentaría" ;--# notpresent
    VP (Cond Pl P1) => "sentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sentaríais" ;--# notpresent
    VP (Cond Pl P3) => "sentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sienta" ;
    VP (Imp Sg P3) => "siente" ;
    VP (Imp Pl P1) => "sentemos" ;
    VP (Imp Pl P2) => "sentad" ;
    VP (Imp Pl P3) => "sienten" ;
    VP (Pass Sg Masc) => "sentado" ;
    VP (Pass Sg Fem) => "sentada" ;
    VP (Pass Pl Masc) => "sentados" ;
    VP (Pass Pl Fem) => "sentadas"
    }
  } ;

lin serrar_V = verboV 
 {s = table {
    VI Infn => "serrar" ;
    VI Ger => "serrando" ;
    VI Part => "serrado" ;
    VP (Pres Ind Sg P1) => "sierro" ;
    VP (Pres Ind Sg P2) => "sierras" ;
    VP (Pres Ind Sg P3) => "sierra" ;
    VP (Pres Ind Pl P1) => "serramos" ;
    VP (Pres Ind Pl P2) => "serráis" ;
    VP (Pres Ind Pl P3) => "sierran" ;
    VP (Pres Subj Sg P1) => "sierre" ;
    VP (Pres Subj Sg P2) => "sierres" ;
    VP (Pres Subj Sg P3) => "sierre" ;
    VP (Pres Subj Pl P1) => "serremos" ;
    VP (Pres Subj Pl P2) => "serréis" ;
    VP (Pres Subj Pl P3) => "sierren" ;
    VP (Impf Ind Sg P1) => "serraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "serrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "serraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "serrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "serrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "serraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"serrara" ; "serrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"serraras" ; "serrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"serrara" ; "serrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"serráramos" ; "serrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"serrarais" ; "serraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"serraran" ; "serrasen"} ;--# notpresent
    VP (Pret Sg P1) => "serré" ;--# notpresent
    VP (Pret Sg P2) => "serraste" ;--# notpresent
    VP (Pret Sg P3) => "serró" ;--# notpresent
    VP (Pret Pl P1) => "serramos" ;--# notpresent
    VP (Pret Pl P2) => "serrasteis" ;--# notpresent
    VP (Pret Pl P3) => "serraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "serraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "serrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "serrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "serraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "serraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "serrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "serrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "serrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "serrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "serráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "serrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "serraren" ;--# notpresent
    VP (Cond Sg P1) => "serraría" ;--# notpresent
    VP (Cond Sg P2) => "serrarías" ;--# notpresent
    VP (Cond Sg P3) => "serraría" ;--# notpresent
    VP (Cond Pl P1) => "serraríamos" ;--# notpresent
    VP (Cond Pl P2) => "serraríais" ;--# notpresent
    VP (Cond Pl P3) => "serrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sierra" ;
    VP (Imp Sg P3) => "sierre" ;
    VP (Imp Pl P1) => "serremos" ;
    VP (Imp Pl P2) => "serrad" ;
    VP (Imp Pl P3) => "sierren" ;
    VP (Pass Sg Masc) => "serrado" ;
    VP (Pass Sg Fem) => "serrada" ;
    VP (Pass Pl Masc) => "serrados" ;
    VP (Pass Pl Fem) => "serradas"
    }
  } ;

lin sobrecalentar_V = verboV 
 {s = table {
    VI Infn => "sobrecalentar" ;
    VI Ger => "sobrecalentando" ;
    VI Part => "sobrecalentado" ;
    VP (Pres Ind Sg P1) => "sobrecaliento" ;
    VP (Pres Ind Sg P2) => "sobrecalientas" ;
    VP (Pres Ind Sg P3) => "sobrecalienta" ;
    VP (Pres Ind Pl P1) => "sobrecalentamos" ;
    VP (Pres Ind Pl P2) => "sobrecalentáis" ;
    VP (Pres Ind Pl P3) => "sobrecalientan" ;
    VP (Pres Subj Sg P1) => "sobrecaliente" ;
    VP (Pres Subj Sg P2) => "sobrecalientes" ;
    VP (Pres Subj Sg P3) => "sobrecaliente" ;
    VP (Pres Subj Pl P1) => "sobrecalentemos" ;
    VP (Pres Subj Pl P2) => "sobrecalentéis" ;
    VP (Pres Subj Pl P3) => "sobrecalienten" ;
    VP (Impf Ind Sg P1) => "sobrecalentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrecalentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrecalentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrecalentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrecalentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrecalentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrecalentara" ; "sobrecalentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrecalentaras" ; "sobrecalentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrecalentara" ; "sobrecalentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrecalentáramos" ; "sobrecalentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrecalentarais" ; "sobrecalentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrecalentaran" ; "sobrecalentasen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrecalenté" ;--# notpresent
    VP (Pret Sg P2) => "sobrecalentaste" ;--# notpresent
    VP (Pret Sg P3) => "sobrecalentó" ;--# notpresent
    VP (Pret Pl P1) => "sobrecalentamos" ;--# notpresent
    VP (Pret Pl P2) => "sobrecalentasteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrecalentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrecalentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrecalentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrecalentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrecalentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrecalentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrecalentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrecalentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrecalentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrecalentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrecalentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrecalentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrecalentaren" ;--# notpresent
    VP (Cond Sg P1) => "sobrecalentaría" ;--# notpresent
    VP (Cond Sg P2) => "sobrecalentarías" ;--# notpresent
    VP (Cond Sg P3) => "sobrecalentaría" ;--# notpresent
    VP (Cond Pl P1) => "sobrecalentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrecalentaríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrecalentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrecalienta" ;
    VP (Imp Sg P3) => "sobrecaliente" ;
    VP (Imp Pl P1) => "sobrecalentemos" ;
    VP (Imp Pl P2) => "sobrecalentad" ;
    VP (Imp Pl P3) => "sobrecalienten" ;
    VP (Pass Sg Masc) => "sobrecalentado" ;
    VP (Pass Sg Fem) => "sobrecalentada" ;
    VP (Pass Pl Masc) => "sobrecalentados" ;
    VP (Pass Pl Fem) => "sobrecalentadas"
    }
  } ;

lin sobresembrar_V = verboV 
 {s = table {
    VI Infn => "sobresembrar" ;
    VI Ger => "sobresembrando" ;
    VI Part => "sobresembrado" ;
    VP (Pres Ind Sg P1) => "sobresiembro" ;
    VP (Pres Ind Sg P2) => "sobresiembras" ;
    VP (Pres Ind Sg P3) => "sobresiembra" ;
    VP (Pres Ind Pl P1) => "sobresembramos" ;
    VP (Pres Ind Pl P2) => "sobresembráis" ;
    VP (Pres Ind Pl P3) => "sobresiembran" ;
    VP (Pres Subj Sg P1) => "sobresiembre" ;
    VP (Pres Subj Sg P2) => "sobresiembres" ;
    VP (Pres Subj Sg P3) => "sobresiembre" ;
    VP (Pres Subj Pl P1) => "sobresembremos" ;
    VP (Pres Subj Pl P2) => "sobresembréis" ;
    VP (Pres Subj Pl P3) => "sobresiembren" ;
    VP (Impf Ind Sg P1) => "sobresembraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobresembrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobresembraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobresembrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobresembrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobresembraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobresembrara" ; "sobresembrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobresembraras" ; "sobresembrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobresembrara" ; "sobresembrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobresembráramos" ; "sobresembrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobresembrarais" ; "sobresembraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobresembraran" ; "sobresembrasen"} ;--# notpresent
    VP (Pret Sg P1) => "sobresembré" ;--# notpresent
    VP (Pret Sg P2) => "sobresembraste" ;--# notpresent
    VP (Pret Sg P3) => "sobresembró" ;--# notpresent
    VP (Pret Pl P1) => "sobresembramos" ;--# notpresent
    VP (Pret Pl P2) => "sobresembrasteis" ;--# notpresent
    VP (Pret Pl P3) => "sobresembraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobresembraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobresembrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobresembrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobresembraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobresembraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobresembrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobresembrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobresembrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobresembrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobresembráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobresembrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobresembraren" ;--# notpresent
    VP (Cond Sg P1) => "sobresembraría" ;--# notpresent
    VP (Cond Sg P2) => "sobresembrarías" ;--# notpresent
    VP (Cond Sg P3) => "sobresembraría" ;--# notpresent
    VP (Cond Pl P1) => "sobresembraríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobresembraríais" ;--# notpresent
    VP (Cond Pl P3) => "sobresembrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobresiembra" ;
    VP (Imp Sg P3) => "sobresiembre" ;
    VP (Imp Pl P1) => "sobresembremos" ;
    VP (Imp Pl P2) => "sobresembrad" ;
    VP (Imp Pl P3) => "sobresiembren" ;
    VP (Pass Sg Masc) => "sobresembrado" ;
    VP (Pass Sg Fem) => "sobresembrada" ;
    VP (Pass Pl Masc) => "sobresembrados" ;
    VP (Pass Pl Fem) => "sobresembradas"
    }
  } ;

lin sobresolar_V = verboV 
 {s = table {
    VI Infn => "sobresolar" ;
    VI Ger => "sobresolando" ;
    VI Part => "sobresolado" ;
    VP (Pres Ind Sg P1) => "sobresuelo" ;
    VP (Pres Ind Sg P2) => "sobresuelas" ;
    VP (Pres Ind Sg P3) => "sobresuela" ;
    VP (Pres Ind Pl P1) => "sobresolamos" ;
    VP (Pres Ind Pl P2) => "sobresoláis" ;
    VP (Pres Ind Pl P3) => "sobresuelan" ;
    VP (Pres Subj Sg P1) => "sobresuele" ;
    VP (Pres Subj Sg P2) => "sobresueles" ;
    VP (Pres Subj Sg P3) => "sobresuele" ;
    VP (Pres Subj Pl P1) => "sobresolemos" ;
    VP (Pres Subj Pl P2) => "sobresoléis" ;
    VP (Pres Subj Pl P3) => "sobresuelen" ;
    VP (Impf Ind Sg P1) => "sobresolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobresolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobresolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobresolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobresolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobresolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobresolara" ; "sobresolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobresolaras" ; "sobresolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobresolara" ; "sobresolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobresoláramos" ; "sobresolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobresolarais" ; "sobresolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobresolaran" ; "sobresolasen"} ;--# notpresent
    VP (Pret Sg P1) => "sobresolé" ;--# notpresent
    VP (Pret Sg P2) => "sobresolaste" ;--# notpresent
    VP (Pret Sg P3) => "sobresoló" ;--# notpresent
    VP (Pret Pl P1) => "sobresolamos" ;--# notpresent
    VP (Pret Pl P2) => "sobresolasteis" ;--# notpresent
    VP (Pret Pl P3) => "sobresolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobresolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobresolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobresolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobresolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobresolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobresolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobresolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobresolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobresolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobresoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobresolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobresolaren" ;--# notpresent
    VP (Cond Sg P1) => "sobresolaría" ;--# notpresent
    VP (Cond Sg P2) => "sobresolarías" ;--# notpresent
    VP (Cond Sg P3) => "sobresolaría" ;--# notpresent
    VP (Cond Pl P1) => "sobresolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobresolaríais" ;--# notpresent
    VP (Cond Pl P3) => "sobresolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobresuela" ;
    VP (Imp Sg P3) => "sobresuele" ;
    VP (Imp Pl P1) => "sobresolemos" ;
    VP (Imp Pl P2) => "sobresolad" ;
    VP (Imp Pl P3) => "sobresuelen" ;
    VP (Pass Sg Masc) => "sobresolado" ;
    VP (Pass Sg Fem) => "sobresolada" ;
    VP (Pass Pl Masc) => "sobresolados" ;
    VP (Pass Pl Fem) => "sobresoladas"
    }
  } ;

lin sobrevolar_V = verboV 
 {s = table {
    VI Infn => "sobrevolar" ;
    VI Ger => "sobrevolando" ;
    VI Part => "sobrevolado" ;
    VP (Pres Ind Sg P1) => "sobrevuelo" ;
    VP (Pres Ind Sg P2) => "sobrevuelas" ;
    VP (Pres Ind Sg P3) => "sobrevuela" ;
    VP (Pres Ind Pl P1) => "sobrevolamos" ;
    VP (Pres Ind Pl P2) => "sobrevoláis" ;
    VP (Pres Ind Pl P3) => "sobrevuelan" ;
    VP (Pres Subj Sg P1) => "sobrevuele" ;
    VP (Pres Subj Sg P2) => "sobrevueles" ;
    VP (Pres Subj Sg P3) => "sobrevuele" ;
    VP (Pres Subj Pl P1) => "sobrevolemos" ;
    VP (Pres Subj Pl P2) => "sobrevoléis" ;
    VP (Pres Subj Pl P3) => "sobrevuelen" ;
    VP (Impf Ind Sg P1) => "sobrevolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrevolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrevolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrevolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrevolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrevolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrevolara" ; "sobrevolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrevolaras" ; "sobrevolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrevolara" ; "sobrevolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrevoláramos" ; "sobrevolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrevolarais" ; "sobrevolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrevolaran" ; "sobrevolasen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrevolé" ;--# notpresent
    VP (Pret Sg P2) => "sobrevolaste" ;--# notpresent
    VP (Pret Sg P3) => "sobrevoló" ;--# notpresent
    VP (Pret Pl P1) => "sobrevolamos" ;--# notpresent
    VP (Pret Pl P2) => "sobrevolasteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrevolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrevolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrevolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrevolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrevolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrevolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrevolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrevolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrevolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrevolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrevoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrevolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrevolaren" ;--# notpresent
    VP (Cond Sg P1) => "sobrevolaría" ;--# notpresent
    VP (Cond Sg P2) => "sobrevolarías" ;--# notpresent
    VP (Cond Sg P3) => "sobrevolaría" ;--# notpresent
    VP (Cond Pl P1) => "sobrevolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrevolaríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrevolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobrevuela" ;
    VP (Imp Sg P3) => "sobrevuele" ;
    VP (Imp Pl P1) => "sobrevolemos" ;
    VP (Imp Pl P2) => "sobrevolad" ;
    VP (Imp Pl P3) => "sobrevuelen" ;
    VP (Pass Sg Masc) => "sobrevolado" ;
    VP (Pass Sg Fem) => "sobrevolada" ;
    VP (Pass Pl Masc) => "sobrevolados" ;
    VP (Pass Pl Fem) => "sobrevoladas"
    }
  } ;

lin socolar_V = verboV 
 {s = table {
    VI Infn => "socolar" ;
    VI Ger => "socolando" ;
    VI Part => "socolado" ;
    VP (Pres Ind Sg P1) => "socuelo" ;
    VP (Pres Ind Sg P2) => "socuelas" ;
    VP (Pres Ind Sg P3) => "socuela" ;
    VP (Pres Ind Pl P1) => "socolamos" ;
    VP (Pres Ind Pl P2) => "socoláis" ;
    VP (Pres Ind Pl P3) => "socuelan" ;
    VP (Pres Subj Sg P1) => "socuele" ;
    VP (Pres Subj Sg P2) => "socueles" ;
    VP (Pres Subj Sg P3) => "socuele" ;
    VP (Pres Subj Pl P1) => "socolemos" ;
    VP (Pres Subj Pl P2) => "socoléis" ;
    VP (Pres Subj Pl P3) => "socuelen" ;
    VP (Impf Ind Sg P1) => "socolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "socolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "socolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "socolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "socolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "socolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"socolara" ; "socolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"socolaras" ; "socolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"socolara" ; "socolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"socoláramos" ; "socolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"socolarais" ; "socolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"socolaran" ; "socolasen"} ;--# notpresent
    VP (Pret Sg P1) => "socolé" ;--# notpresent
    VP (Pret Sg P2) => "socolaste" ;--# notpresent
    VP (Pret Sg P3) => "socoló" ;--# notpresent
    VP (Pret Pl P1) => "socolamos" ;--# notpresent
    VP (Pret Pl P2) => "socolasteis" ;--# notpresent
    VP (Pret Pl P3) => "socolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "socolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "socolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "socolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "socolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "socolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "socolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "socolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "socolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "socolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "socoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "socolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "socolaren" ;--# notpresent
    VP (Cond Sg P1) => "socolaría" ;--# notpresent
    VP (Cond Sg P2) => "socolarías" ;--# notpresent
    VP (Cond Sg P3) => "socolaría" ;--# notpresent
    VP (Cond Pl P1) => "socolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "socolaríais" ;--# notpresent
    VP (Cond Pl P3) => "socolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "socuela" ;
    VP (Imp Sg P3) => "socuele" ;
    VP (Imp Pl P1) => "socolemos" ;
    VP (Imp Pl P2) => "socolad" ;
    VP (Imp Pl P3) => "socuelen" ;
    VP (Pass Sg Masc) => "socolado" ;
    VP (Pass Sg Fem) => "socolada" ;
    VP (Pass Pl Masc) => "socolados" ;
    VP (Pass Pl Fem) => "socoladas"
    }
  } ;

lin solar_V = verboV 
 {s = table {
    VI Infn => "solar" ;
    VI Ger => "solando" ;
    VI Part => "solado" ;
    VP (Pres Ind Sg P1) => "suelo" ;
    VP (Pres Ind Sg P2) => "suelas" ;
    VP (Pres Ind Sg P3) => "suela" ;
    VP (Pres Ind Pl P1) => "solamos" ;
    VP (Pres Ind Pl P2) => "soláis" ;
    VP (Pres Ind Pl P3) => "suelan" ;
    VP (Pres Subj Sg P1) => "suele" ;
    VP (Pres Subj Sg P2) => "sueles" ;
    VP (Pres Subj Sg P3) => "suele" ;
    VP (Pres Subj Pl P1) => "solemos" ;
    VP (Pres Subj Pl P2) => "soléis" ;
    VP (Pres Subj Pl P3) => "suelen" ;
    VP (Impf Ind Sg P1) => "solaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "solabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "solaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "solábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "solabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "solaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"solara" ; "solase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"solaras" ; "solases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"solara" ; "solase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"soláramos" ; "solásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"solarais" ; "solaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"solaran" ; "solasen"} ;--# notpresent
    VP (Pret Sg P1) => "solé" ;--# notpresent
    VP (Pret Sg P2) => "solaste" ;--# notpresent
    VP (Pret Sg P3) => "soló" ;--# notpresent
    VP (Pret Pl P1) => "solamos" ;--# notpresent
    VP (Pret Pl P2) => "solasteis" ;--# notpresent
    VP (Pret Pl P3) => "solaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "solaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "solarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "solará" ;--# notpresent
    VP (Fut Ind Pl P1) => "solaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "solaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "solarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "solare" ;--# notpresent
    VP (Fut Subj Sg P2) => "solares" ;--# notpresent
    VP (Fut Subj Sg P3) => "solare" ;--# notpresent
    VP (Fut Subj Pl P1) => "soláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "solareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "solaren" ;--# notpresent
    VP (Cond Sg P1) => "solaría" ;--# notpresent
    VP (Cond Sg P2) => "solarías" ;--# notpresent
    VP (Cond Sg P3) => "solaría" ;--# notpresent
    VP (Cond Pl P1) => "solaríamos" ;--# notpresent
    VP (Cond Pl P2) => "solaríais" ;--# notpresent
    VP (Cond Pl P3) => "solarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "suela" ;
    VP (Imp Sg P3) => "suele" ;
    VP (Imp Pl P1) => "solemos" ;
    VP (Imp Pl P2) => "solad" ;
    VP (Imp Pl P3) => "suelen" ;
    VP (Pass Sg Masc) => "solado" ;
    VP (Pass Sg Fem) => "solada" ;
    VP (Pass Pl Masc) => "solados" ;
    VP (Pass Pl Fem) => "soladas"
    }
  } ;

lin soldar_V = verboV 
 {s = table {
    VI Infn => "soldar" ;
    VI Ger => "soldando" ;
    VI Part => "soldado" ;
    VP (Pres Ind Sg P1) => "sueldo" ;
    VP (Pres Ind Sg P2) => "sueldas" ;
    VP (Pres Ind Sg P3) => "suelda" ;
    VP (Pres Ind Pl P1) => "soldamos" ;
    VP (Pres Ind Pl P2) => "soldáis" ;
    VP (Pres Ind Pl P3) => "sueldan" ;
    VP (Pres Subj Sg P1) => "suelde" ;
    VP (Pres Subj Sg P2) => "sueldes" ;
    VP (Pres Subj Sg P3) => "suelde" ;
    VP (Pres Subj Pl P1) => "soldemos" ;
    VP (Pres Subj Pl P2) => "soldéis" ;
    VP (Pres Subj Pl P3) => "suelden" ;
    VP (Impf Ind Sg P1) => "soldaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "soldabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "soldaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "soldábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "soldabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "soldaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"soldara" ; "soldase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"soldaras" ; "soldases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"soldara" ; "soldase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"soldáramos" ; "soldásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"soldarais" ; "soldaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"soldaran" ; "soldasen"} ;--# notpresent
    VP (Pret Sg P1) => "soldé" ;--# notpresent
    VP (Pret Sg P2) => "soldaste" ;--# notpresent
    VP (Pret Sg P3) => "soldó" ;--# notpresent
    VP (Pret Pl P1) => "soldamos" ;--# notpresent
    VP (Pret Pl P2) => "soldasteis" ;--# notpresent
    VP (Pret Pl P3) => "soldaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "soldaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "soldarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "soldará" ;--# notpresent
    VP (Fut Ind Pl P1) => "soldaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "soldaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "soldarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "soldare" ;--# notpresent
    VP (Fut Subj Sg P2) => "soldares" ;--# notpresent
    VP (Fut Subj Sg P3) => "soldare" ;--# notpresent
    VP (Fut Subj Pl P1) => "soldáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "soldareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "soldaren" ;--# notpresent
    VP (Cond Sg P1) => "soldaría" ;--# notpresent
    VP (Cond Sg P2) => "soldarías" ;--# notpresent
    VP (Cond Sg P3) => "soldaría" ;--# notpresent
    VP (Cond Pl P1) => "soldaríamos" ;--# notpresent
    VP (Cond Pl P2) => "soldaríais" ;--# notpresent
    VP (Cond Pl P3) => "soldarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "suelda" ;
    VP (Imp Sg P3) => "suelde" ;
    VP (Imp Pl P1) => "soldemos" ;
    VP (Imp Pl P2) => "soldad" ;
    VP (Imp Pl P3) => "suelden" ;
    VP (Pass Sg Masc) => "soldado" ;
    VP (Pass Sg Fem) => "soldada" ;
    VP (Pass Pl Masc) => "soldados" ;
    VP (Pass Pl Fem) => "soldadas"
    }
  } ;

lin soltar_V = verboV 
 {s = table {
    VI Infn => "soltar" ;
    VI Ger => "soltando" ;
    VI Part => "soltado" ;
    VP (Pres Ind Sg P1) => "suelto" ;
    VP (Pres Ind Sg P2) => "sueltas" ;
    VP (Pres Ind Sg P3) => "suelta" ;
    VP (Pres Ind Pl P1) => "soltamos" ;
    VP (Pres Ind Pl P2) => "soltáis" ;
    VP (Pres Ind Pl P3) => "sueltan" ;
    VP (Pres Subj Sg P1) => "suelte" ;
    VP (Pres Subj Sg P2) => "sueltes" ;
    VP (Pres Subj Sg P3) => "suelte" ;
    VP (Pres Subj Pl P1) => "soltemos" ;
    VP (Pres Subj Pl P2) => "soltéis" ;
    VP (Pres Subj Pl P3) => "suelten" ;
    VP (Impf Ind Sg P1) => "soltaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "soltabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "soltaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "soltábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "soltabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "soltaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"soltara" ; "soltase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"soltaras" ; "soltases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"soltara" ; "soltase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"soltáramos" ; "soltásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"soltarais" ; "soltaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"soltaran" ; "soltasen"} ;--# notpresent
    VP (Pret Sg P1) => "solté" ;--# notpresent
    VP (Pret Sg P2) => "soltaste" ;--# notpresent
    VP (Pret Sg P3) => "soltó" ;--# notpresent
    VP (Pret Pl P1) => "soltamos" ;--# notpresent
    VP (Pret Pl P2) => "soltasteis" ;--# notpresent
    VP (Pret Pl P3) => "soltaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "soltaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "soltarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "soltará" ;--# notpresent
    VP (Fut Ind Pl P1) => "soltaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "soltaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "soltarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "soltare" ;--# notpresent
    VP (Fut Subj Sg P2) => "soltares" ;--# notpresent
    VP (Fut Subj Sg P3) => "soltare" ;--# notpresent
    VP (Fut Subj Pl P1) => "soltáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "soltareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "soltaren" ;--# notpresent
    VP (Cond Sg P1) => "soltaría" ;--# notpresent
    VP (Cond Sg P2) => "soltarías" ;--# notpresent
    VP (Cond Sg P3) => "soltaría" ;--# notpresent
    VP (Cond Pl P1) => "soltaríamos" ;--# notpresent
    VP (Cond Pl P2) => "soltaríais" ;--# notpresent
    VP (Cond Pl P3) => "soltarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "suelta" ;
    VP (Imp Sg P3) => "suelte" ;
    VP (Imp Pl P1) => "soltemos" ;
    VP (Imp Pl P2) => "soltad" ;
    VP (Imp Pl P3) => "suelten" ;
    VP (Pass Sg Masc) => "soltado" ;
    VP (Pass Sg Fem) => "soltada" ;
    VP (Pass Pl Masc) => "soltados" ;
    VP (Pass Pl Fem) => "soltadas"
    }
  } ;

lin sonar_V = verboV 
 {s = table {
    VI Infn => "sonar" ;
    VI Ger => "sonando" ;
    VI Part => "sonado" ;
    VP (Pres Ind Sg P1) => "sueno" ;
    VP (Pres Ind Sg P2) => "suenas" ;
    VP (Pres Ind Sg P3) => "suena" ;
    VP (Pres Ind Pl P1) => "sonamos" ;
    VP (Pres Ind Pl P2) => "sonáis" ;
    VP (Pres Ind Pl P3) => "suenan" ;
    VP (Pres Subj Sg P1) => "suene" ;
    VP (Pres Subj Sg P2) => "suenes" ;
    VP (Pres Subj Sg P3) => "suene" ;
    VP (Pres Subj Pl P1) => "sonemos" ;
    VP (Pres Subj Pl P2) => "sonéis" ;
    VP (Pres Subj Pl P3) => "suenen" ;
    VP (Impf Ind Sg P1) => "sonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "sonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "sonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "sonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sonara" ; "sonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sonaras" ; "sonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sonara" ; "sonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sonáramos" ; "sonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sonarais" ; "sonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sonaran" ; "sonasen"} ;--# notpresent
    VP (Pret Sg P1) => "soné" ;--# notpresent
    VP (Pret Sg P2) => "sonaste" ;--# notpresent
    VP (Pret Sg P3) => "sonó" ;--# notpresent
    VP (Pret Pl P1) => "sonamos" ;--# notpresent
    VP (Pret Pl P2) => "sonasteis" ;--# notpresent
    VP (Pret Pl P3) => "sonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "sonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "sonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "sonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "sonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sonaren" ;--# notpresent
    VP (Cond Sg P1) => "sonaría" ;--# notpresent
    VP (Cond Sg P2) => "sonarías" ;--# notpresent
    VP (Cond Sg P3) => "sonaría" ;--# notpresent
    VP (Cond Pl P1) => "sonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "sonaríais" ;--# notpresent
    VP (Cond Pl P3) => "sonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "suena" ;
    VP (Imp Sg P3) => "suene" ;
    VP (Imp Pl P1) => "sonemos" ;
    VP (Imp Pl P2) => "sonad" ;
    VP (Imp Pl P3) => "suenen" ;
    VP (Pass Sg Masc) => "sonado" ;
    VP (Pass Sg Fem) => "sonada" ;
    VP (Pass Pl Masc) => "sonados" ;
    VP (Pass Pl Fem) => "sonadas"
    }
  } ;

lin soñar_V = verboV 
 {s = table {
    VI Infn => "soñar" ;
    VI Ger => "soñando" ;
    VI Part => "soñado" ;
    VP (Pres Ind Sg P1) => "sueño" ;
    VP (Pres Ind Sg P2) => "sueñas" ;
    VP (Pres Ind Sg P3) => "sueña" ;
    VP (Pres Ind Pl P1) => "soñamos" ;
    VP (Pres Ind Pl P2) => "soñáis" ;
    VP (Pres Ind Pl P3) => "sueñan" ;
    VP (Pres Subj Sg P1) => "sueñe" ;
    VP (Pres Subj Sg P2) => "sueñes" ;
    VP (Pres Subj Sg P3) => "sueñe" ;
    VP (Pres Subj Pl P1) => "soñemos" ;
    VP (Pres Subj Pl P2) => "soñéis" ;
    VP (Pres Subj Pl P3) => "sueñen" ;
    VP (Impf Ind Sg P1) => "soñaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "soñabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "soñaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "soñábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "soñabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "soñaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"soñara" ; "soñase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"soñaras" ; "soñases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"soñara" ; "soñase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"soñáramos" ; "soñásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"soñarais" ; "soñaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"soñaran" ; "soñasen"} ;--# notpresent
    VP (Pret Sg P1) => "soñé" ;--# notpresent
    VP (Pret Sg P2) => "soñaste" ;--# notpresent
    VP (Pret Sg P3) => "soñó" ;--# notpresent
    VP (Pret Pl P1) => "soñamos" ;--# notpresent
    VP (Pret Pl P2) => "soñasteis" ;--# notpresent
    VP (Pret Pl P3) => "soñaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "soñaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "soñarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "soñará" ;--# notpresent
    VP (Fut Ind Pl P1) => "soñaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "soñaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "soñarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "soñare" ;--# notpresent
    VP (Fut Subj Sg P2) => "soñares" ;--# notpresent
    VP (Fut Subj Sg P3) => "soñare" ;--# notpresent
    VP (Fut Subj Pl P1) => "soñáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "soñareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "soñaren" ;--# notpresent
    VP (Cond Sg P1) => "soñaría" ;--# notpresent
    VP (Cond Sg P2) => "soñarías" ;--# notpresent
    VP (Cond Sg P3) => "soñaría" ;--# notpresent
    VP (Cond Pl P1) => "soñaríamos" ;--# notpresent
    VP (Cond Pl P2) => "soñaríais" ;--# notpresent
    VP (Cond Pl P3) => "soñarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sueña" ;
    VP (Imp Sg P3) => "sueñe" ;
    VP (Imp Pl P1) => "soñemos" ;
    VP (Imp Pl P2) => "soñad" ;
    VP (Imp Pl P3) => "sueñen" ;
    VP (Pass Sg Masc) => "soñado" ;
    VP (Pass Sg Fem) => "soñada" ;
    VP (Pass Pl Masc) => "soñados" ;
    VP (Pass Pl Fem) => "soñadas"
    }
  } ;

lin soterrar_V = verboV 
 {s = table {
    VI Infn => "soterrar" ;
    VI Ger => "soterrando" ;
    VI Part => "soterrado" ;
    VP (Pres Ind Sg P1) => "sotierro" ;
    VP (Pres Ind Sg P2) => "sotierras" ;
    VP (Pres Ind Sg P3) => "sotierra" ;
    VP (Pres Ind Pl P1) => "soterramos" ;
    VP (Pres Ind Pl P2) => "soterráis" ;
    VP (Pres Ind Pl P3) => "sotierran" ;
    VP (Pres Subj Sg P1) => "sotierre" ;
    VP (Pres Subj Sg P2) => "sotierres" ;
    VP (Pres Subj Sg P3) => "sotierre" ;
    VP (Pres Subj Pl P1) => "soterremos" ;
    VP (Pres Subj Pl P2) => "soterréis" ;
    VP (Pres Subj Pl P3) => "sotierren" ;
    VP (Impf Ind Sg P1) => "soterraba" ;--# notpresent
    VP (Impf Ind Sg P2) => "soterrabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "soterraba" ;--# notpresent
    VP (Impf Ind Pl P1) => "soterrábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "soterrabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "soterraban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"soterrara" ; "soterrase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"soterraras" ; "soterrases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"soterrara" ; "soterrase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"soterráramos" ; "soterrásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"soterrarais" ; "soterraseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"soterraran" ; "soterrasen"} ;--# notpresent
    VP (Pret Sg P1) => "soterré" ;--# notpresent
    VP (Pret Sg P2) => "soterraste" ;--# notpresent
    VP (Pret Sg P3) => "soterró" ;--# notpresent
    VP (Pret Pl P1) => "soterramos" ;--# notpresent
    VP (Pret Pl P2) => "soterrasteis" ;--# notpresent
    VP (Pret Pl P3) => "soterraron" ;--# notpresent
    VP (Fut Ind Sg P1) => "soterraré" ;--# notpresent
    VP (Fut Ind Sg P2) => "soterrarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "soterrará" ;--# notpresent
    VP (Fut Ind Pl P1) => "soterraremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "soterraréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "soterrarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "soterrare" ;--# notpresent
    VP (Fut Subj Sg P2) => "soterrares" ;--# notpresent
    VP (Fut Subj Sg P3) => "soterrare" ;--# notpresent
    VP (Fut Subj Pl P1) => "soterráremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "soterrareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "soterraren" ;--# notpresent
    VP (Cond Sg P1) => "soterraría" ;--# notpresent
    VP (Cond Sg P2) => "soterrarías" ;--# notpresent
    VP (Cond Sg P3) => "soterraría" ;--# notpresent
    VP (Cond Pl P1) => "soterraríamos" ;--# notpresent
    VP (Cond Pl P2) => "soterraríais" ;--# notpresent
    VP (Cond Pl P3) => "soterrarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sotierra" ;
    VP (Imp Sg P3) => "sotierre" ;
    VP (Imp Pl P1) => "soterremos" ;
    VP (Imp Pl P2) => "soterrad" ;
    VP (Imp Pl P3) => "sotierren" ;
    VP (Pass Sg Masc) => "soterrado" ;
    VP (Pass Sg Fem) => "soterrada" ;
    VP (Pass Pl Masc) => "soterrados" ;
    VP (Pass Pl Fem) => "soterradas"
    }
  } ;

lin subarrendar_V = verboV 
 {s = table {
    VI Infn => "subarrendar" ;
    VI Ger => "subarrendando" ;
    VI Part => "subarrendado" ;
    VP (Pres Ind Sg P1) => "subarriendo" ;
    VP (Pres Ind Sg P2) => "subarriendas" ;
    VP (Pres Ind Sg P3) => "subarrienda" ;
    VP (Pres Ind Pl P1) => "subarrendamos" ;
    VP (Pres Ind Pl P2) => "subarrendáis" ;
    VP (Pres Ind Pl P3) => "subarriendan" ;
    VP (Pres Subj Sg P1) => "subarriende" ;
    VP (Pres Subj Sg P2) => "subarriendes" ;
    VP (Pres Subj Sg P3) => "subarriende" ;
    VP (Pres Subj Pl P1) => "subarrendemos" ;
    VP (Pres Subj Pl P2) => "subarrendéis" ;
    VP (Pres Subj Pl P3) => "subarrienden" ;
    VP (Impf Ind Sg P1) => "subarrendaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "subarrendabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "subarrendaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "subarrendábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subarrendabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subarrendaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subarrendara" ; "subarrendase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subarrendaras" ; "subarrendases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subarrendara" ; "subarrendase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subarrendáramos" ; "subarrendásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subarrendarais" ; "subarrendaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subarrendaran" ; "subarrendasen"} ;--# notpresent
    VP (Pret Sg P1) => "subarrendé" ;--# notpresent
    VP (Pret Sg P2) => "subarrendaste" ;--# notpresent
    VP (Pret Sg P3) => "subarrendó" ;--# notpresent
    VP (Pret Pl P1) => "subarrendamos" ;--# notpresent
    VP (Pret Pl P2) => "subarrendasteis" ;--# notpresent
    VP (Pret Pl P3) => "subarrendaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subarrendaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subarrendarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subarrendará" ;--# notpresent
    VP (Fut Ind Pl P1) => "subarrendaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subarrendaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subarrendarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subarrendare" ;--# notpresent
    VP (Fut Subj Sg P2) => "subarrendares" ;--# notpresent
    VP (Fut Subj Sg P3) => "subarrendare" ;--# notpresent
    VP (Fut Subj Pl P1) => "subarrendáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subarrendareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subarrendaren" ;--# notpresent
    VP (Cond Sg P1) => "subarrendaría" ;--# notpresent
    VP (Cond Sg P2) => "subarrendarías" ;--# notpresent
    VP (Cond Sg P3) => "subarrendaría" ;--# notpresent
    VP (Cond Pl P1) => "subarrendaríamos" ;--# notpresent
    VP (Cond Pl P2) => "subarrendaríais" ;--# notpresent
    VP (Cond Pl P3) => "subarrendarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subarrienda" ;
    VP (Imp Sg P3) => "subarriende" ;
    VP (Imp Pl P1) => "subarrendemos" ;
    VP (Imp Pl P2) => "subarrendad" ;
    VP (Imp Pl P3) => "subarrienden" ;
    VP (Pass Sg Masc) => "subarrendado" ;
    VP (Pass Sg Fem) => "subarrendada" ;
    VP (Pass Pl Masc) => "subarrendados" ;
    VP (Pass Pl Fem) => "subarrendadas"
    }
  } ;

lin subsolar_V = verboV 
 {s = table {
    VI Infn => "subsolar" ;
    VI Ger => "subsolando" ;
    VI Part => "subsolado" ;
    VP (Pres Ind Sg P1) => "subsuelo" ;
    VP (Pres Ind Sg P2) => "subsuelas" ;
    VP (Pres Ind Sg P3) => "subsuela" ;
    VP (Pres Ind Pl P1) => "subsolamos" ;
    VP (Pres Ind Pl P2) => "subsoláis" ;
    VP (Pres Ind Pl P3) => "subsuelan" ;
    VP (Pres Subj Sg P1) => "subsuele" ;
    VP (Pres Subj Sg P2) => "subsueles" ;
    VP (Pres Subj Sg P3) => "subsuele" ;
    VP (Pres Subj Pl P1) => "subsolemos" ;
    VP (Pres Subj Pl P2) => "subsoléis" ;
    VP (Pres Subj Pl P3) => "subsuelen" ;
    VP (Impf Ind Sg P1) => "subsolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "subsolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "subsolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "subsolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subsolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subsolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subsolara" ; "subsolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subsolaras" ; "subsolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subsolara" ; "subsolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subsoláramos" ; "subsolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subsolarais" ; "subsolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subsolaran" ; "subsolasen"} ;--# notpresent
    VP (Pret Sg P1) => "subsolé" ;--# notpresent
    VP (Pret Sg P2) => "subsolaste" ;--# notpresent
    VP (Pret Sg P3) => "subsoló" ;--# notpresent
    VP (Pret Pl P1) => "subsolamos" ;--# notpresent
    VP (Pret Pl P2) => "subsolasteis" ;--# notpresent
    VP (Pret Pl P3) => "subsolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subsolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subsolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subsolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "subsolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subsolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subsolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subsolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "subsolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "subsolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "subsoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subsolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subsolaren" ;--# notpresent
    VP (Cond Sg P1) => "subsolaría" ;--# notpresent
    VP (Cond Sg P2) => "subsolarías" ;--# notpresent
    VP (Cond Sg P3) => "subsolaría" ;--# notpresent
    VP (Cond Pl P1) => "subsolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "subsolaríais" ;--# notpresent
    VP (Cond Pl P3) => "subsolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subsuela" ;
    VP (Imp Sg P3) => "subsuele" ;
    VP (Imp Pl P1) => "subsolemos" ;
    VP (Imp Pl P2) => "subsolad" ;
    VP (Imp Pl P3) => "subsuelen" ;
    VP (Pass Sg Masc) => "subsolado" ;
    VP (Pass Sg Fem) => "subsolada" ;
    VP (Pass Pl Masc) => "subsolados" ;
    VP (Pass Pl Fem) => "subsoladas"
    }
  } ;

lin temblar_V = verboV 
 {s = table {
    VI Infn => "temblar" ;
    VI Ger => "temblando" ;
    VI Part => "temblado" ;
    VP (Pres Ind Sg P1) => "tiemblo" ;
    VP (Pres Ind Sg P2) => "tiemblas" ;
    VP (Pres Ind Sg P3) => "tiembla" ;
    VP (Pres Ind Pl P1) => "temblamos" ;
    VP (Pres Ind Pl P2) => "tembláis" ;
    VP (Pres Ind Pl P3) => "tiemblan" ;
    VP (Pres Subj Sg P1) => "tiemble" ;
    VP (Pres Subj Sg P2) => "tiembles" ;
    VP (Pres Subj Sg P3) => "tiemble" ;
    VP (Pres Subj Pl P1) => "temblemos" ;
    VP (Pres Subj Pl P2) => "tembléis" ;
    VP (Pres Subj Pl P3) => "tiemblen" ;
    VP (Impf Ind Sg P1) => "temblaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "temblabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "temblaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "temblábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "temblabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "temblaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"temblara" ; "temblase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"temblaras" ; "temblases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"temblara" ; "temblase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tembláramos" ; "temblásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"temblarais" ; "temblaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"temblaran" ; "temblasen"} ;--# notpresent
    VP (Pret Sg P1) => "temblé" ;--# notpresent
    VP (Pret Sg P2) => "temblaste" ;--# notpresent
    VP (Pret Sg P3) => "tembló" ;--# notpresent
    VP (Pret Pl P1) => "temblamos" ;--# notpresent
    VP (Pret Pl P2) => "temblasteis" ;--# notpresent
    VP (Pret Pl P3) => "temblaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "temblaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "temblarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "temblará" ;--# notpresent
    VP (Fut Ind Pl P1) => "temblaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "temblaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "temblarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "temblare" ;--# notpresent
    VP (Fut Subj Sg P2) => "temblares" ;--# notpresent
    VP (Fut Subj Sg P3) => "temblare" ;--# notpresent
    VP (Fut Subj Pl P1) => "tembláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "temblareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "temblaren" ;--# notpresent
    VP (Cond Sg P1) => "temblaría" ;--# notpresent
    VP (Cond Sg P2) => "temblarías" ;--# notpresent
    VP (Cond Sg P3) => "temblaría" ;--# notpresent
    VP (Cond Pl P1) => "temblaríamos" ;--# notpresent
    VP (Cond Pl P2) => "temblaríais" ;--# notpresent
    VP (Cond Pl P3) => "temblarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tiembla" ;
    VP (Imp Sg P3) => "tiemble" ;
    VP (Imp Pl P1) => "temblemos" ;
    VP (Imp Pl P2) => "temblad" ;
    VP (Imp Pl P3) => "tiemblen" ;
    VP (Pass Sg Masc) => "temblado" ;
    VP (Pass Sg Fem) => "temblada" ;
    VP (Pass Pl Masc) => "temblados" ;
    VP (Pass Pl Fem) => "tembladas"
    }
  } ;

lin tentar_V = verboV 
 {s = table {
    VI Infn => "tentar" ;
    VI Ger => "tentando" ;
    VI Part => "tentado" ;
    VP (Pres Ind Sg P1) => "tiento" ;
    VP (Pres Ind Sg P2) => "tientas" ;
    VP (Pres Ind Sg P3) => "tienta" ;
    VP (Pres Ind Pl P1) => "tentamos" ;
    VP (Pres Ind Pl P2) => "tentáis" ;
    VP (Pres Ind Pl P3) => "tientan" ;
    VP (Pres Subj Sg P1) => "tiente" ;
    VP (Pres Subj Sg P2) => "tientes" ;
    VP (Pres Subj Sg P3) => "tiente" ;
    VP (Pres Subj Pl P1) => "tentemos" ;
    VP (Pres Subj Pl P2) => "tentéis" ;
    VP (Pres Subj Pl P3) => "tienten" ;
    VP (Impf Ind Sg P1) => "tentaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "tentabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "tentaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "tentábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tentabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tentaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tentara" ; "tentase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tentaras" ; "tentases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tentara" ; "tentase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tentáramos" ; "tentásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tentarais" ; "tentaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tentaran" ; "tentasen"} ;--# notpresent
    VP (Pret Sg P1) => "tenté" ;--# notpresent
    VP (Pret Sg P2) => "tentaste" ;--# notpresent
    VP (Pret Sg P3) => "tentó" ;--# notpresent
    VP (Pret Pl P1) => "tentamos" ;--# notpresent
    VP (Pret Pl P2) => "tentasteis" ;--# notpresent
    VP (Pret Pl P3) => "tentaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tentaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tentarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tentará" ;--# notpresent
    VP (Fut Ind Pl P1) => "tentaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tentaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tentarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tentare" ;--# notpresent
    VP (Fut Subj Sg P2) => "tentares" ;--# notpresent
    VP (Fut Subj Sg P3) => "tentare" ;--# notpresent
    VP (Fut Subj Pl P1) => "tentáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tentareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tentaren" ;--# notpresent
    VP (Cond Sg P1) => "tentaría" ;--# notpresent
    VP (Cond Sg P2) => "tentarías" ;--# notpresent
    VP (Cond Sg P3) => "tentaría" ;--# notpresent
    VP (Cond Pl P1) => "tentaríamos" ;--# notpresent
    VP (Cond Pl P2) => "tentaríais" ;--# notpresent
    VP (Cond Pl P3) => "tentarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tienta" ;
    VP (Imp Sg P3) => "tiente" ;
    VP (Imp Pl P1) => "tentemos" ;
    VP (Imp Pl P2) => "tentad" ;
    VP (Imp Pl P3) => "tienten" ;
    VP (Pass Sg Masc) => "tentado" ;
    VP (Pass Sg Fem) => "tentada" ;
    VP (Pass Pl Masc) => "tentados" ;
    VP (Pass Pl Fem) => "tentadas"
    }
  } ;

lin tonar_V = verboV 
 {s = table {
    VI Infn => "tonar" ;
    VI Ger => "tonando" ;
    VI Part => "tonado" ;
    VP (Pres Ind Sg P1) => "tueno" ;
    VP (Pres Ind Sg P2) => "tuenas" ;
    VP (Pres Ind Sg P3) => "tuena" ;
    VP (Pres Ind Pl P1) => "tonamos" ;
    VP (Pres Ind Pl P2) => "tonáis" ;
    VP (Pres Ind Pl P3) => "tuenan" ;
    VP (Pres Subj Sg P1) => "tuene" ;
    VP (Pres Subj Sg P2) => "tuenes" ;
    VP (Pres Subj Sg P3) => "tuene" ;
    VP (Pres Subj Pl P1) => "tonemos" ;
    VP (Pres Subj Pl P2) => "tonéis" ;
    VP (Pres Subj Pl P3) => "tuenen" ;
    VP (Impf Ind Sg P1) => "tonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "tonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "tonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "tonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tonara" ; "tonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tonaras" ; "tonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tonara" ; "tonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tonáramos" ; "tonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tonarais" ; "tonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tonaran" ; "tonasen"} ;--# notpresent
    VP (Pret Sg P1) => "toné" ;--# notpresent
    VP (Pret Sg P2) => "tonaste" ;--# notpresent
    VP (Pret Sg P3) => "tonó" ;--# notpresent
    VP (Pret Pl P1) => "tonamos" ;--# notpresent
    VP (Pret Pl P2) => "tonasteis" ;--# notpresent
    VP (Pret Pl P3) => "tonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "tonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "tonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "tonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "tonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tonaren" ;--# notpresent
    VP (Cond Sg P1) => "tonaría" ;--# notpresent
    VP (Cond Sg P2) => "tonarías" ;--# notpresent
    VP (Cond Sg P3) => "tonaría" ;--# notpresent
    VP (Cond Pl P1) => "tonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "tonaríais" ;--# notpresent
    VP (Cond Pl P3) => "tonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tuena" ;
    VP (Imp Sg P3) => "tuene" ;
    VP (Imp Pl P1) => "tonemos" ;
    VP (Imp Pl P2) => "tonad" ;
    VP (Imp Pl P3) => "tuenen" ;
    VP (Pass Sg Masc) => "tonado" ;
    VP (Pass Sg Fem) => "tonada" ;
    VP (Pass Pl Masc) => "tonados" ;
    VP (Pass Pl Fem) => "tonadas"
    }
  } ;

lin tostar_V = verboV 
 {s = table {
    VI Infn => "tostar" ;
    VI Ger => "tostando" ;
    VI Part => "tostado" ;
    VP (Pres Ind Sg P1) => "tuesto" ;
    VP (Pres Ind Sg P2) => "tuestas" ;
    VP (Pres Ind Sg P3) => "tuesta" ;
    VP (Pres Ind Pl P1) => "tostamos" ;
    VP (Pres Ind Pl P2) => "tostáis" ;
    VP (Pres Ind Pl P3) => "tuestan" ;
    VP (Pres Subj Sg P1) => "tueste" ;
    VP (Pres Subj Sg P2) => "tuestes" ;
    VP (Pres Subj Sg P3) => "tueste" ;
    VP (Pres Subj Pl P1) => "tostemos" ;
    VP (Pres Subj Pl P2) => "tostéis" ;
    VP (Pres Subj Pl P3) => "tuesten" ;
    VP (Impf Ind Sg P1) => "tostaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "tostabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "tostaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "tostábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tostabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tostaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tostara" ; "tostase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tostaras" ; "tostases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tostara" ; "tostase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tostáramos" ; "tostásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tostarais" ; "tostaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tostaran" ; "tostasen"} ;--# notpresent
    VP (Pret Sg P1) => "tosté" ;--# notpresent
    VP (Pret Sg P2) => "tostaste" ;--# notpresent
    VP (Pret Sg P3) => "tostó" ;--# notpresent
    VP (Pret Pl P1) => "tostamos" ;--# notpresent
    VP (Pret Pl P2) => "tostasteis" ;--# notpresent
    VP (Pret Pl P3) => "tostaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tostaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tostarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tostará" ;--# notpresent
    VP (Fut Ind Pl P1) => "tostaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tostaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tostarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tostare" ;--# notpresent
    VP (Fut Subj Sg P2) => "tostares" ;--# notpresent
    VP (Fut Subj Sg P3) => "tostare" ;--# notpresent
    VP (Fut Subj Pl P1) => "tostáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tostareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tostaren" ;--# notpresent
    VP (Cond Sg P1) => "tostaría" ;--# notpresent
    VP (Cond Sg P2) => "tostarías" ;--# notpresent
    VP (Cond Sg P3) => "tostaría" ;--# notpresent
    VP (Cond Pl P1) => "tostaríamos" ;--# notpresent
    VP (Cond Pl P2) => "tostaríais" ;--# notpresent
    VP (Cond Pl P3) => "tostarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tuesta" ;
    VP (Imp Sg P3) => "tueste" ;
    VP (Imp Pl P1) => "tostemos" ;
    VP (Imp Pl P2) => "tostad" ;
    VP (Imp Pl P3) => "tuesten" ;
    VP (Pass Sg Masc) => "tostado" ;
    VP (Pass Sg Fem) => "tostada" ;
    VP (Pass Pl Masc) => "tostados" ;
    VP (Pass Pl Fem) => "tostadas"
    }
  } ;

lin trascolar_V = verboV 
 {s = table {
    VI Infn => "trascolar" ;
    VI Ger => "trascolando" ;
    VI Part => "trascolado" ;
    VP (Pres Ind Sg P1) => "trascuelo" ;
    VP (Pres Ind Sg P2) => "trascuelas" ;
    VP (Pres Ind Sg P3) => "trascuela" ;
    VP (Pres Ind Pl P1) => "trascolamos" ;
    VP (Pres Ind Pl P2) => "trascoláis" ;
    VP (Pres Ind Pl P3) => "trascuelan" ;
    VP (Pres Subj Sg P1) => "trascuele" ;
    VP (Pres Subj Sg P2) => "trascueles" ;
    VP (Pres Subj Sg P3) => "trascuele" ;
    VP (Pres Subj Pl P1) => "trascolemos" ;
    VP (Pres Subj Pl P2) => "trascoléis" ;
    VP (Pres Subj Pl P3) => "trascuelen" ;
    VP (Impf Ind Sg P1) => "trascolaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "trascolabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "trascolaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "trascolábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trascolabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trascolaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trascolara" ; "trascolase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trascolaras" ; "trascolases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trascolara" ; "trascolase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trascoláramos" ; "trascolásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trascolarais" ; "trascolaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trascolaran" ; "trascolasen"} ;--# notpresent
    VP (Pret Sg P1) => "trascolé" ;--# notpresent
    VP (Pret Sg P2) => "trascolaste" ;--# notpresent
    VP (Pret Sg P3) => "trascoló" ;--# notpresent
    VP (Pret Pl P1) => "trascolamos" ;--# notpresent
    VP (Pret Pl P2) => "trascolasteis" ;--# notpresent
    VP (Pret Pl P3) => "trascolaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trascolaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trascolarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trascolará" ;--# notpresent
    VP (Fut Ind Pl P1) => "trascolaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trascolaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trascolarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trascolare" ;--# notpresent
    VP (Fut Subj Sg P2) => "trascolares" ;--# notpresent
    VP (Fut Subj Sg P3) => "trascolare" ;--# notpresent
    VP (Fut Subj Pl P1) => "trascoláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trascolareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trascolaren" ;--# notpresent
    VP (Cond Sg P1) => "trascolaría" ;--# notpresent
    VP (Cond Sg P2) => "trascolarías" ;--# notpresent
    VP (Cond Sg P3) => "trascolaría" ;--# notpresent
    VP (Cond Pl P1) => "trascolaríamos" ;--# notpresent
    VP (Cond Pl P2) => "trascolaríais" ;--# notpresent
    VP (Cond Pl P3) => "trascolarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trascuela" ;
    VP (Imp Sg P3) => "trascuele" ;
    VP (Imp Pl P1) => "trascolemos" ;
    VP (Imp Pl P2) => "trascolad" ;
    VP (Imp Pl P3) => "trascuelen" ;
    VP (Pass Sg Masc) => "trascolado" ;
    VP (Pass Sg Fem) => "trascolada" ;
    VP (Pass Pl Masc) => "trascolados" ;
    VP (Pass Pl Fem) => "trascoladas"
    }
  } ;

lin trasoñar_V = verboV 
 {s = table {
    VI Infn => "trasoñar" ;
    VI Ger => "trasoñando" ;
    VI Part => "trasoñado" ;
    VP (Pres Ind Sg P1) => "trasueño" ;
    VP (Pres Ind Sg P2) => "trasueñas" ;
    VP (Pres Ind Sg P3) => "trasueña" ;
    VP (Pres Ind Pl P1) => "trasoñamos" ;
    VP (Pres Ind Pl P2) => "trasoñáis" ;
    VP (Pres Ind Pl P3) => "trasueñan" ;
    VP (Pres Subj Sg P1) => "trasueñe" ;
    VP (Pres Subj Sg P2) => "trasueñes" ;
    VP (Pres Subj Sg P3) => "trasueñe" ;
    VP (Pres Subj Pl P1) => "trasoñemos" ;
    VP (Pres Subj Pl P2) => "trasoñéis" ;
    VP (Pres Subj Pl P3) => "trasueñen" ;
    VP (Impf Ind Sg P1) => "trasoñaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasoñabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasoñaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasoñábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasoñabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasoñaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasoñara" ; "trasoñase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasoñaras" ; "trasoñases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasoñara" ; "trasoñase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasoñáramos" ; "trasoñásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasoñarais" ; "trasoñaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasoñaran" ; "trasoñasen"} ;--# notpresent
    VP (Pret Sg P1) => "trasoñé" ;--# notpresent
    VP (Pret Sg P2) => "trasoñaste" ;--# notpresent
    VP (Pret Sg P3) => "trasoñó" ;--# notpresent
    VP (Pret Pl P1) => "trasoñamos" ;--# notpresent
    VP (Pret Pl P2) => "trasoñasteis" ;--# notpresent
    VP (Pret Pl P3) => "trasoñaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasoñaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasoñarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasoñará" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasoñaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasoñaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasoñarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasoñare" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasoñares" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasoñare" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasoñáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasoñareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasoñaren" ;--# notpresent
    VP (Cond Sg P1) => "trasoñaría" ;--# notpresent
    VP (Cond Sg P2) => "trasoñarías" ;--# notpresent
    VP (Cond Sg P3) => "trasoñaría" ;--# notpresent
    VP (Cond Pl P1) => "trasoñaríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasoñaríais" ;--# notpresent
    VP (Cond Pl P3) => "trasoñarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasueña" ;
    VP (Imp Sg P3) => "trasueñe" ;
    VP (Imp Pl P1) => "trasoñemos" ;
    VP (Imp Pl P2) => "trasoñad" ;
    VP (Imp Pl P3) => "trasueñen" ;
    VP (Pass Sg Masc) => "trasoñado" ;
    VP (Pass Sg Fem) => "trasoñada" ;
    VP (Pass Pl Masc) => "trasoñados" ;
    VP (Pass Pl Fem) => "trasoñadas"
    }
  } ;

lin tronar_V = verboV 
 {s = table {
    VI Infn => "tronar" ;
    VI Ger => "tronando" ;
    VI Part => "tronado" ;
    VP (Pres Ind Sg P1) => "trueno" ;
    VP (Pres Ind Sg P2) => "truenas" ;
    VP (Pres Ind Sg P3) => "truena" ;
    VP (Pres Ind Pl P1) => "tronamos" ;
    VP (Pres Ind Pl P2) => "tronáis" ;
    VP (Pres Ind Pl P3) => "truenan" ;
    VP (Pres Subj Sg P1) => "truene" ;
    VP (Pres Subj Sg P2) => "truenes" ;
    VP (Pres Subj Sg P3) => "truene" ;
    VP (Pres Subj Pl P1) => "tronemos" ;
    VP (Pres Subj Pl P2) => "tronéis" ;
    VP (Pres Subj Pl P3) => "truenen" ;
    VP (Impf Ind Sg P1) => "tronaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "tronabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "tronaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "tronábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tronabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tronaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tronara" ; "tronase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tronaras" ; "tronases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tronara" ; "tronase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tronáramos" ; "tronásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tronarais" ; "tronaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tronaran" ; "tronasen"} ;--# notpresent
    VP (Pret Sg P1) => "troné" ;--# notpresent
    VP (Pret Sg P2) => "tronaste" ;--# notpresent
    VP (Pret Sg P3) => "tronó" ;--# notpresent
    VP (Pret Pl P1) => "tronamos" ;--# notpresent
    VP (Pret Pl P2) => "tronasteis" ;--# notpresent
    VP (Pret Pl P3) => "tronaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tronaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tronarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tronará" ;--# notpresent
    VP (Fut Ind Pl P1) => "tronaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tronaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tronarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tronare" ;--# notpresent
    VP (Fut Subj Sg P2) => "tronares" ;--# notpresent
    VP (Fut Subj Sg P3) => "tronare" ;--# notpresent
    VP (Fut Subj Pl P1) => "tronáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tronareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tronaren" ;--# notpresent
    VP (Cond Sg P1) => "tronaría" ;--# notpresent
    VP (Cond Sg P2) => "tronarías" ;--# notpresent
    VP (Cond Sg P3) => "tronaría" ;--# notpresent
    VP (Cond Pl P1) => "tronaríamos" ;--# notpresent
    VP (Cond Pl P2) => "tronaríais" ;--# notpresent
    VP (Cond Pl P3) => "tronarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "truena" ;
    VP (Imp Sg P3) => "truene" ;
    VP (Imp Pl P1) => "tronemos" ;
    VP (Imp Pl P2) => "tronad" ;
    VP (Imp Pl P3) => "truenen" ;
    VP (Pass Sg Masc) => "tronado" ;
    VP (Pass Sg Fem) => "tronada" ;
    VP (Pass Pl Masc) => "tronados" ;
    VP (Pass Pl Fem) => "tronadas"
    }
  } ;

lin unisonar_V = verboV 
 {s = table {
    VI Infn => "unisonar" ;
    VI Ger => "unisonando" ;
    VI Part => "unisonado" ;
    VP (Pres Ind Sg P1) => "unisueno" ;
    VP (Pres Ind Sg P2) => "unisuenas" ;
    VP (Pres Ind Sg P3) => "unisuena" ;
    VP (Pres Ind Pl P1) => "unisonamos" ;
    VP (Pres Ind Pl P2) => "unisonáis" ;
    VP (Pres Ind Pl P3) => "unisuenan" ;
    VP (Pres Subj Sg P1) => "unisuene" ;
    VP (Pres Subj Sg P2) => "unisuenes" ;
    VP (Pres Subj Sg P3) => "unisuene" ;
    VP (Pres Subj Pl P1) => "unisonemos" ;
    VP (Pres Subj Pl P2) => "unisonéis" ;
    VP (Pres Subj Pl P3) => "unisuenen" ;
    VP (Impf Ind Sg P1) => "unisonaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "unisonabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "unisonaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "unisonábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "unisonabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "unisonaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"unisonara" ; "unisonase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"unisonaras" ; "unisonases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"unisonara" ; "unisonase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"unisonáramos" ; "unisonásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"unisonarais" ; "unisonaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"unisonaran" ; "unisonasen"} ;--# notpresent
    VP (Pret Sg P1) => "unisoné" ;--# notpresent
    VP (Pret Sg P2) => "unisonaste" ;--# notpresent
    VP (Pret Sg P3) => "unisonó" ;--# notpresent
    VP (Pret Pl P1) => "unisonamos" ;--# notpresent
    VP (Pret Pl P2) => "unisonasteis" ;--# notpresent
    VP (Pret Pl P3) => "unisonaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "unisonaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "unisonarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "unisonará" ;--# notpresent
    VP (Fut Ind Pl P1) => "unisonaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "unisonaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "unisonarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "unisonare" ;--# notpresent
    VP (Fut Subj Sg P2) => "unisonares" ;--# notpresent
    VP (Fut Subj Sg P3) => "unisonare" ;--# notpresent
    VP (Fut Subj Pl P1) => "unisonáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "unisonareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "unisonaren" ;--# notpresent
    VP (Cond Sg P1) => "unisonaría" ;--# notpresent
    VP (Cond Sg P2) => "unisonarías" ;--# notpresent
    VP (Cond Sg P3) => "unisonaría" ;--# notpresent
    VP (Cond Pl P1) => "unisonaríamos" ;--# notpresent
    VP (Cond Pl P2) => "unisonaríais" ;--# notpresent
    VP (Cond Pl P3) => "unisonarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "unisuena" ;
    VP (Imp Sg P3) => "unisuene" ;
    VP (Imp Pl P1) => "unisonemos" ;
    VP (Imp Pl P2) => "unisonad" ;
    VP (Imp Pl P3) => "unisuenen" ;
    VP (Pass Sg Masc) => "unisonado" ;
    VP (Pass Sg Fem) => "unisonada" ;
    VP (Pass Pl Masc) => "unisonados" ;
    VP (Pass Pl Fem) => "unisonadas"
    }
  } ;

lin ventar_V = verboV 
 {s = table {
    VI Infn => "ventar" ;
    VI Ger => "ventando" ;
    VI Part => "ventado" ;
    VP (Pres Ind Sg P1) => "viento" ;
    VP (Pres Ind Sg P2) => "vientas" ;
    VP (Pres Ind Sg P3) => "vienta" ;
    VP (Pres Ind Pl P1) => "ventamos" ;
    VP (Pres Ind Pl P2) => "ventáis" ;
    VP (Pres Ind Pl P3) => "vientan" ;
    VP (Pres Subj Sg P1) => "viente" ;
    VP (Pres Subj Sg P2) => "vientes" ;
    VP (Pres Subj Sg P3) => "viente" ;
    VP (Pres Subj Pl P1) => "ventemos" ;
    VP (Pres Subj Pl P2) => "ventéis" ;
    VP (Pres Subj Pl P3) => "vienten" ;
    VP (Impf Ind Sg P1) => "ventaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "ventabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "ventaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "ventábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ventabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ventaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ventara" ; "ventase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ventaras" ; "ventases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ventara" ; "ventase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ventáramos" ; "ventásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ventarais" ; "ventaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ventaran" ; "ventasen"} ;--# notpresent
    VP (Pret Sg P1) => "venté" ;--# notpresent
    VP (Pret Sg P2) => "ventaste" ;--# notpresent
    VP (Pret Sg P3) => "ventó" ;--# notpresent
    VP (Pret Pl P1) => "ventamos" ;--# notpresent
    VP (Pret Pl P2) => "ventasteis" ;--# notpresent
    VP (Pret Pl P3) => "ventaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ventaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ventarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ventará" ;--# notpresent
    VP (Fut Ind Pl P1) => "ventaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ventaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ventarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ventare" ;--# notpresent
    VP (Fut Subj Sg P2) => "ventares" ;--# notpresent
    VP (Fut Subj Sg P3) => "ventare" ;--# notpresent
    VP (Fut Subj Pl P1) => "ventáremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ventareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ventaren" ;--# notpresent
    VP (Cond Sg P1) => "ventaría" ;--# notpresent
    VP (Cond Sg P2) => "ventarías" ;--# notpresent
    VP (Cond Sg P3) => "ventaría" ;--# notpresent
    VP (Cond Pl P1) => "ventaríamos" ;--# notpresent
    VP (Cond Pl P2) => "ventaríais" ;--# notpresent
    VP (Cond Pl P3) => "ventarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vienta" ;
    VP (Imp Sg P3) => "viente" ;
    VP (Imp Pl P1) => "ventemos" ;
    VP (Imp Pl P2) => "ventad" ;
    VP (Imp Pl P3) => "vienten" ;
    VP (Pass Sg Masc) => "ventado" ;
    VP (Pass Sg Fem) => "ventada" ;
    VP (Pass Pl Masc) => "ventados" ;
    VP (Pass Pl Fem) => "ventadas"
    }
  } ;

lin volar_V = verboV 
 {s = table {
    VI Infn => "volar" ;
    VI Ger => "volando" ;
    VI Part => "volado" ;
    VP (Pres Ind Sg P1) => "vuelo" ;
    VP (Pres Ind Sg P2) => "vuelas" ;
    VP (Pres Ind Sg P3) => "vuela" ;
    VP (Pres Ind Pl P1) => "volamos" ;
    VP (Pres Ind Pl P2) => "voláis" ;
    VP (Pres Ind Pl P3) => "vuelan" ;
    VP (Pres Subj Sg P1) => "vuele" ;
    VP (Pres Subj Sg P2) => "vueles" ;
    VP (Pres Subj Sg P3) => "vuele" ;
    VP (Pres Subj Pl P1) => "volemos" ;
    VP (Pres Subj Pl P2) => "voléis" ;
    VP (Pres Subj Pl P3) => "vuelen" ;
    VP (Impf Ind Sg P1) => "volaba" ;--# notpresent
    VP (Impf Ind Sg P2) => "volabas" ;--# notpresent
    VP (Impf Ind Sg P3) => "volaba" ;--# notpresent
    VP (Impf Ind Pl P1) => "volábamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "volabais" ;--# notpresent
    VP (Impf Ind Pl P3) => "volaban" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"volara" ; "volase"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"volaras" ; "volases"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"volara" ; "volase"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"voláramos" ; "volásemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"volarais" ; "volaseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"volaran" ; "volasen"} ;--# notpresent
    VP (Pret Sg P1) => "volé" ;--# notpresent
    VP (Pret Sg P2) => "volaste" ;--# notpresent
    VP (Pret Sg P3) => "voló" ;--# notpresent
    VP (Pret Pl P1) => "volamos" ;--# notpresent
    VP (Pret Pl P2) => "volasteis" ;--# notpresent
    VP (Pret Pl P3) => "volaron" ;--# notpresent
    VP (Fut Ind Sg P1) => "volaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "volarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "volará" ;--# notpresent
    VP (Fut Ind Pl P1) => "volaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "volaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "volarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "volare" ;--# notpresent
    VP (Fut Subj Sg P2) => "volares" ;--# notpresent
    VP (Fut Subj Sg P3) => "volare" ;--# notpresent
    VP (Fut Subj Pl P1) => "voláremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "volareis" ;--# notpresent
    VP (Fut Subj Pl P3) => "volaren" ;--# notpresent
    VP (Cond Sg P1) => "volaría" ;--# notpresent
    VP (Cond Sg P2) => "volarías" ;--# notpresent
    VP (Cond Sg P3) => "volaría" ;--# notpresent
    VP (Cond Pl P1) => "volaríamos" ;--# notpresent
    VP (Cond Pl P2) => "volaríais" ;--# notpresent
    VP (Cond Pl P3) => "volarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vuela" ;
    VP (Imp Sg P3) => "vuele" ;
    VP (Imp Pl P1) => "volemos" ;
    VP (Imp Pl P2) => "volad" ;
    VP (Imp Pl P3) => "vuelen" ;
    VP (Pass Sg Masc) => "volado" ;
    VP (Pass Sg Fem) => "volada" ;
    VP (Pass Pl Masc) => "volados" ;
    VP (Pass Pl Fem) => "voladas"
    }
  } ;

lin conseguir_V = verboV 
 {s = table {
    VI Infn => "conseguir" ;
    VI Ger => "consiguiendo" ;
    VI Part => "conseguido" ;
    VP (Pres Ind Sg P1) => "consigo" ;
    VP (Pres Ind Sg P2) => "consigues" ;
    VP (Pres Ind Sg P3) => "consigue" ;
    VP (Pres Ind Pl P1) => "conseguimos" ;
    VP (Pres Ind Pl P2) => "conseguís" ;
    VP (Pres Ind Pl P3) => "consiguen" ;
    VP (Pres Subj Sg P1) => "consiga" ;
    VP (Pres Subj Sg P2) => "consigas" ;
    VP (Pres Subj Sg P3) => "consiga" ;
    VP (Pres Subj Pl P1) => "consigamos" ;
    VP (Pres Subj Pl P2) => "consigáis" ;
    VP (Pres Subj Pl P3) => "consigan" ;
    VP (Impf Ind Sg P1) => "conseguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "conseguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "conseguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "conseguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conseguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "conseguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"consiguiera" ; "consiguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"consiguieras" ; "consiguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"consiguiera" ; "consiguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"consiguiéramos" ; "consiguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"consiguierais" ; "consiguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"consiguieran" ; "consiguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "conseguí" ;--# notpresent
    VP (Pret Sg P2) => "conseguiste" ;--# notpresent
    VP (Pret Sg P3) => "consiguió" ;--# notpresent
    VP (Pret Pl P1) => "conseguimos" ;--# notpresent
    VP (Pret Pl P2) => "conseguisteis" ;--# notpresent
    VP (Pret Pl P3) => "consiguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "conseguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "conseguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "conseguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "conseguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "conseguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "conseguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "consiguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "consiguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "consiguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "consiguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "consiguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "consiguieren" ;--# notpresent
    VP (Cond Sg P1) => "conseguiría" ;--# notpresent
    VP (Cond Sg P2) => "conseguirías" ;--# notpresent
    VP (Cond Sg P3) => "conseguiría" ;--# notpresent
    VP (Cond Pl P1) => "conseguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "conseguiríais" ;--# notpresent
    VP (Cond Pl P3) => "conseguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "consigue" ;
    VP (Imp Sg P3) => "consiga" ;
    VP (Imp Pl P1) => "consigamos" ;
    VP (Imp Pl P2) => "conseguid" ;
    VP (Imp Pl P3) => "consigan" ;
    VP (Pass Sg Masc) => "conseguido" ;
    VP (Pass Sg Fem) => "conseguida" ;
    VP (Pass Pl Masc) => "conseguidos" ;
    VP (Pass Pl Fem) => "conseguidas"
    }
  } ;

lin erguir_V = verboV 
 {s = table {
    VI Infn => "erguir" ;
    VI Ger => "irguiendo" ;
    VI Part => "erguido" ;
    VP (Pres Ind Sg P1) => "yergo" ;
    VP (Pres Ind Sg P2) => "yergues" ;
    VP (Pres Ind Sg P3) => "yergue" ;
    VP (Pres Ind Pl P1) => "erguimos" ;
    VP (Pres Ind Pl P2) => "erguís" ;
    VP (Pres Ind Pl P3) => "yerguen" ;
    VP (Pres Subj Sg P1) => "yerga" ;
    VP (Pres Subj Sg P2) => "yergas" ;
    VP (Pres Subj Sg P3) => "yerga" ;
    VP (Pres Subj Pl P1) => "irgamos" ;
    VP (Pres Subj Pl P2) => "irgáis" ;
    VP (Pres Subj Pl P3) => "yergan" ;
    VP (Impf Ind Sg P1) => "erguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "erguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "erguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "erguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "erguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "erguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"irguiera" ; "irguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"irguieras" ; "irguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"irguiera" ; "irguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"irguiéramos" ; "irguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"irguierais" ; "irguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"irguieran" ; "irguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "erguí" ;--# notpresent
    VP (Pret Sg P2) => "erguiste" ;--# notpresent
    VP (Pret Sg P3) => "irguió" ;--# notpresent
    VP (Pret Pl P1) => "erguimos" ;--# notpresent
    VP (Pret Pl P2) => "erguisteis" ;--# notpresent
    VP (Pret Pl P3) => "irguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "erguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "erguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "erguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "erguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "erguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "erguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "irguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "irguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "irguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "irguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "irguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "irguieren" ;--# notpresent
    VP (Cond Sg P1) => "erguiría" ;--# notpresent
    VP (Cond Sg P2) => "erguirías" ;--# notpresent
    VP (Cond Sg P3) => "erguiría" ;--# notpresent
    VP (Cond Pl P1) => "erguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "erguiríais" ;--# notpresent
    VP (Cond Pl P3) => "erguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "yergue" ;
    VP (Imp Sg P3) => "yerga" ;
    VP (Imp Pl P1) => "yergamos" ;
    VP (Imp Pl P2) => "erguid" ;
    VP (Imp Pl P3) => "yergan" ;
    VP (Pass Sg Masc) => "erguido" ;
    VP (Pass Sg Fem) => "erguida" ;
    VP (Pass Pl Masc) => "erguidos" ;
    VP (Pass Pl Fem) => "erguidas"
    }
  } ;

lin perseguir_V = verboV 
 {s = table {
    VI Infn => "perseguir" ;
    VI Ger => "persiguiendo" ;
    VI Part => "perseguido" ;
    VP (Pres Ind Sg P1) => "persigo" ;
    VP (Pres Ind Sg P2) => "persigues" ;
    VP (Pres Ind Sg P3) => "persigue" ;
    VP (Pres Ind Pl P1) => "perseguimos" ;
    VP (Pres Ind Pl P2) => "perseguís" ;
    VP (Pres Ind Pl P3) => "persiguen" ;
    VP (Pres Subj Sg P1) => "persiga" ;
    VP (Pres Subj Sg P2) => "persigas" ;
    VP (Pres Subj Sg P3) => "persiga" ;
    VP (Pres Subj Pl P1) => "persigamos" ;
    VP (Pres Subj Pl P2) => "persigáis" ;
    VP (Pres Subj Pl P3) => "persigan" ;
    VP (Impf Ind Sg P1) => "perseguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "perseguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "perseguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "perseguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "perseguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "perseguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"persiguiera" ; "persiguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"persiguieras" ; "persiguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"persiguiera" ; "persiguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"persiguiéramos" ; "persiguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"persiguierais" ; "persiguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"persiguieran" ; "persiguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "perseguí" ;--# notpresent
    VP (Pret Sg P2) => "perseguiste" ;--# notpresent
    VP (Pret Sg P3) => "persiguió" ;--# notpresent
    VP (Pret Pl P1) => "perseguimos" ;--# notpresent
    VP (Pret Pl P2) => "perseguisteis" ;--# notpresent
    VP (Pret Pl P3) => "persiguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "perseguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "perseguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "perseguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "perseguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "perseguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "perseguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "persiguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "persiguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "persiguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "persiguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "persiguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "persiguieren" ;--# notpresent
    VP (Cond Sg P1) => "perseguiría" ;--# notpresent
    VP (Cond Sg P2) => "perseguirías" ;--# notpresent
    VP (Cond Sg P3) => "perseguiría" ;--# notpresent
    VP (Cond Pl P1) => "perseguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "perseguiríais" ;--# notpresent
    VP (Cond Pl P3) => "perseguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "persigue" ;
    VP (Imp Sg P3) => "persiga" ;
    VP (Imp Pl P1) => "persigamos" ;
    VP (Imp Pl P2) => "perseguid" ;
    VP (Imp Pl P3) => "persigan" ;
    VP (Pass Sg Masc) => "perseguido" ;
    VP (Pass Sg Fem) => "perseguida" ;
    VP (Pass Pl Masc) => "perseguidos" ;
    VP (Pass Pl Fem) => "perseguidas"
    }
  } ;

lin proseguir_V = verboV 
 {s = table {
    VI Infn => "proseguir" ;
    VI Ger => "prosiguiendo" ;
    VI Part => "proseguido" ;
    VP (Pres Ind Sg P1) => "prosigo" ;
    VP (Pres Ind Sg P2) => "prosigues" ;
    VP (Pres Ind Sg P3) => "prosigue" ;
    VP (Pres Ind Pl P1) => "proseguimos" ;
    VP (Pres Ind Pl P2) => "proseguís" ;
    VP (Pres Ind Pl P3) => "prosiguen" ;
    VP (Pres Subj Sg P1) => "prosiga" ;
    VP (Pres Subj Sg P2) => "prosigas" ;
    VP (Pres Subj Sg P3) => "prosiga" ;
    VP (Pres Subj Pl P1) => "prosigamos" ;
    VP (Pres Subj Pl P2) => "prosigáis" ;
    VP (Pres Subj Pl P3) => "prosigan" ;
    VP (Impf Ind Sg P1) => "proseguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "proseguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "proseguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "proseguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "proseguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "proseguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prosiguiera" ; "prosiguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prosiguieras" ; "prosiguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prosiguiera" ; "prosiguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prosiguiéramos" ; "prosiguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prosiguierais" ; "prosiguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prosiguieran" ; "prosiguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "proseguí" ;--# notpresent
    VP (Pret Sg P2) => "proseguiste" ;--# notpresent
    VP (Pret Sg P3) => "prosiguió" ;--# notpresent
    VP (Pret Pl P1) => "proseguimos" ;--# notpresent
    VP (Pret Pl P2) => "proseguisteis" ;--# notpresent
    VP (Pret Pl P3) => "prosiguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "proseguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "proseguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "proseguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "proseguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "proseguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "proseguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prosiguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prosiguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prosiguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prosiguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prosiguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prosiguieren" ;--# notpresent
    VP (Cond Sg P1) => "proseguiría" ;--# notpresent
    VP (Cond Sg P2) => "proseguirías" ;--# notpresent
    VP (Cond Sg P3) => "proseguiría" ;--# notpresent
    VP (Cond Pl P1) => "proseguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "proseguiríais" ;--# notpresent
    VP (Cond Pl P3) => "proseguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prosigue" ;
    VP (Imp Sg P3) => "prosiga" ;
    VP (Imp Pl P1) => "prosigamos" ;
    VP (Imp Pl P2) => "proseguid" ;
    VP (Imp Pl P3) => "prosigan" ;
    VP (Pass Sg Masc) => "proseguido" ;
    VP (Pass Sg Fem) => "proseguida" ;
    VP (Pass Pl Masc) => "proseguidos" ;
    VP (Pass Pl Fem) => "proseguidas"
    }
  } ;

lin reseguir_V = verboV 
 {s = table {
    VI Infn => "reseguir" ;
    VI Ger => "resiguiendo" ;
    VI Part => "reseguido" ;
    VP (Pres Ind Sg P1) => "resigo" ;
    VP (Pres Ind Sg P2) => "resigues" ;
    VP (Pres Ind Sg P3) => "resigue" ;
    VP (Pres Ind Pl P1) => "reseguimos" ;
    VP (Pres Ind Pl P2) => "reseguís" ;
    VP (Pres Ind Pl P3) => "resiguen" ;
    VP (Pres Subj Sg P1) => "resiga" ;
    VP (Pres Subj Sg P2) => "resigas" ;
    VP (Pres Subj Sg P3) => "resiga" ;
    VP (Pres Subj Pl P1) => "resigamos" ;
    VP (Pres Subj Pl P2) => "resigáis" ;
    VP (Pres Subj Pl P3) => "resigan" ;
    VP (Impf Ind Sg P1) => "reseguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reseguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reseguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reseguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reseguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reseguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resiguiera" ; "resiguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resiguieras" ; "resiguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resiguiera" ; "resiguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resiguiéramos" ; "resiguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resiguierais" ; "resiguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resiguieran" ; "resiguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "reseguí" ;--# notpresent
    VP (Pret Sg P2) => "reseguiste" ;--# notpresent
    VP (Pret Sg P3) => "resiguió" ;--# notpresent
    VP (Pret Pl P1) => "reseguimos" ;--# notpresent
    VP (Pret Pl P2) => "reseguisteis" ;--# notpresent
    VP (Pret Pl P3) => "resiguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reseguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reseguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reseguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reseguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reseguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reseguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resiguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resiguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resiguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resiguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resiguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resiguieren" ;--# notpresent
    VP (Cond Sg P1) => "reseguiría" ;--# notpresent
    VP (Cond Sg P2) => "reseguirías" ;--# notpresent
    VP (Cond Sg P3) => "reseguiría" ;--# notpresent
    VP (Cond Pl P1) => "reseguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reseguiríais" ;--# notpresent
    VP (Cond Pl P3) => "reseguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resigue" ;
    VP (Imp Sg P3) => "resiga" ;
    VP (Imp Pl P1) => "resigamos" ;
    VP (Imp Pl P2) => "reseguid" ;
    VP (Imp Pl P3) => "resigan" ;
    VP (Pass Sg Masc) => "reseguido" ;
    VP (Pass Sg Fem) => "reseguida" ;
    VP (Pass Pl Masc) => "reseguidos" ;
    VP (Pass Pl Fem) => "reseguidas"
    }
  } ;

lin seguir_V = verboV 
 {s = table {
    VI Infn => "seguir" ;
    VI Ger => "siguiendo" ;
    VI Part => "seguido" ;
    VP (Pres Ind Sg P1) => "sigo" ;
    VP (Pres Ind Sg P2) => "sigues" ;
    VP (Pres Ind Sg P3) => "sigue" ;
    VP (Pres Ind Pl P1) => "seguimos" ;
    VP (Pres Ind Pl P2) => "seguís" ;
    VP (Pres Ind Pl P3) => "siguen" ;
    VP (Pres Subj Sg P1) => "siga" ;
    VP (Pres Subj Sg P2) => "sigas" ;
    VP (Pres Subj Sg P3) => "siga" ;
    VP (Pres Subj Pl P1) => "sigamos" ;
    VP (Pres Subj Pl P2) => "sigáis" ;
    VP (Pres Subj Pl P3) => "sigan" ;
    VP (Impf Ind Sg P1) => "seguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "seguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "seguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "seguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "seguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "seguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"siguiera" ; "siguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"siguieras" ; "siguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"siguiera" ; "siguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"siguiéramos" ; "siguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"siguierais" ; "siguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"siguieran" ; "siguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "seguí" ;--# notpresent
    VP (Pret Sg P2) => "seguiste" ;--# notpresent
    VP (Pret Sg P3) => "siguió" ;--# notpresent
    VP (Pret Pl P1) => "seguimos" ;--# notpresent
    VP (Pret Pl P2) => "seguisteis" ;--# notpresent
    VP (Pret Pl P3) => "siguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "seguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "seguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "seguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "seguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "seguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "seguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "siguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "siguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "siguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "siguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "siguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "siguieren" ;--# notpresent
    VP (Cond Sg P1) => "seguiría" ;--# notpresent
    VP (Cond Sg P2) => "seguirías" ;--# notpresent
    VP (Cond Sg P3) => "seguiría" ;--# notpresent
    VP (Cond Pl P1) => "seguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "seguiríais" ;--# notpresent
    VP (Cond Pl P3) => "seguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sigue" ;
    VP (Imp Sg P3) => "siga" ;
    VP (Imp Pl P1) => "sigamos" ;
    VP (Imp Pl P2) => "seguid" ;
    VP (Imp Pl P3) => "sigan" ;
    VP (Pass Sg Masc) => "seguido" ;
    VP (Pass Sg Fem) => "seguida" ;
    VP (Pass Pl Masc) => "seguidos" ;
    VP (Pass Pl Fem) => "seguidas"
    }
  } ;

lin subseguir_V = verboV 
 {s = table {
    VI Infn => "subseguir" ;
    VI Ger => "subsiguiendo" ;
    VI Part => "subseguido" ;
    VP (Pres Ind Sg P1) => "subsigo" ;
    VP (Pres Ind Sg P2) => "subsigues" ;
    VP (Pres Ind Sg P3) => "subsigue" ;
    VP (Pres Ind Pl P1) => "subseguimos" ;
    VP (Pres Ind Pl P2) => "subseguís" ;
    VP (Pres Ind Pl P3) => "subsiguen" ;
    VP (Pres Subj Sg P1) => "subsiga" ;
    VP (Pres Subj Sg P2) => "subsigas" ;
    VP (Pres Subj Sg P3) => "subsiga" ;
    VP (Pres Subj Pl P1) => "subsigamos" ;
    VP (Pres Subj Pl P2) => "subsigáis" ;
    VP (Pres Subj Pl P3) => "subsigan" ;
    VP (Impf Ind Sg P1) => "subseguía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subseguías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subseguía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subseguíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subseguíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subseguían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subsiguiera" ; "subsiguiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subsiguieras" ; "subsiguieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subsiguiera" ; "subsiguiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subsiguiéramos" ; "subsiguiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subsiguierais" ; "subsiguieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subsiguieran" ; "subsiguiesen"} ;--# notpresent
    VP (Pret Sg P1) => "subseguí" ;--# notpresent
    VP (Pret Sg P2) => "subseguiste" ;--# notpresent
    VP (Pret Sg P3) => "subsiguió" ;--# notpresent
    VP (Pret Pl P1) => "subseguimos" ;--# notpresent
    VP (Pret Pl P2) => "subseguisteis" ;--# notpresent
    VP (Pret Pl P3) => "subsiguieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subseguiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subseguirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subseguirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subseguiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subseguiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subseguirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subsiguiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subsiguieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subsiguiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subsiguiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subsiguiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subsiguieren" ;--# notpresent
    VP (Cond Sg P1) => "subseguiría" ;--# notpresent
    VP (Cond Sg P2) => "subseguirías" ;--# notpresent
    VP (Cond Sg P3) => "subseguiría" ;--# notpresent
    VP (Cond Pl P1) => "subseguiríamos" ;--# notpresent
    VP (Cond Pl P2) => "subseguiríais" ;--# notpresent
    VP (Cond Pl P3) => "subseguirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subsigue" ;
    VP (Imp Sg P3) => "subsiga" ;
    VP (Imp Pl P1) => "subsigamos" ;
    VP (Imp Pl P2) => "subseguid" ;
    VP (Imp Pl P3) => "subsigan" ;
    VP (Pass Sg Masc) => "subseguido" ;
    VP (Pass Sg Fem) => "subseguida" ;
    VP (Pass Pl Masc) => "subseguidos" ;
    VP (Pass Pl Fem) => "subseguidas"
    }
  } ;

lin contrahacer_V = verboV 
 {s = table {
    VI Infn => "contrahacer" ;
    VI Ger => "contrahaciendo" ;
    VI Part => "contrahecho" ;
    VP (Pres Ind Sg P1) => "contrahago" ;
    VP (Pres Ind Sg P2) => "contrahaces" ;
    VP (Pres Ind Sg P3) => "contrahace" ;
    VP (Pres Ind Pl P1) => "contrahacemos" ;
    VP (Pres Ind Pl P2) => "contrahacéis" ;
    VP (Pres Ind Pl P3) => "contrahacen" ;
    VP (Pres Subj Sg P1) => "contrahaga" ;
    VP (Pres Subj Sg P2) => "contrahagas" ;
    VP (Pres Subj Sg P3) => "contrahaga" ;
    VP (Pres Subj Pl P1) => "contrahagamos" ;
    VP (Pres Subj Pl P2) => "contrahagáis" ;
    VP (Pres Subj Pl P3) => "contrahagan" ;
    VP (Impf Ind Sg P1) => "contrahacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contrahacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contrahacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contrahacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contrahacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contrahacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contrahiciera" ; "contrahiciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contrahicieras" ; "contrahicieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contrahiciera" ; "contrahiciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contrahiciéramos" ; "contrahiciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contrahicierais" ; "contrahicieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contrahicieran" ; "contrahiciesen"} ;--# notpresent
    VP (Pret Sg P1) => "contrahice" ;--# notpresent
    VP (Pret Sg P2) => "contrahiciste" ;--# notpresent
    VP (Pret Sg P3) => "contrahizo" ;--# notpresent
    VP (Pret Pl P1) => "contrahicimos" ;--# notpresent
    VP (Pret Pl P2) => "contrahicisteis" ;--# notpresent
    VP (Pret Pl P3) => "contrahicieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contraharé" ;--# notpresent
    VP (Fut Ind Sg P2) => "contraharás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contrahará" ;--# notpresent
    VP (Fut Ind Pl P1) => "contraharemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contraharéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contraharán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contrahiciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contrahicieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contrahiciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contrahiciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contrahiciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contrahicieren" ;--# notpresent
    VP (Cond Sg P1) => "contraharía" ;--# notpresent
    VP (Cond Sg P2) => "contraharías" ;--# notpresent
    VP (Cond Sg P3) => "contraharía" ;--# notpresent
    VP (Cond Pl P1) => "contraharíamos" ;--# notpresent
    VP (Cond Pl P2) => "contraharíais" ;--# notpresent
    VP (Cond Pl P3) => "contraharían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contrahaz" ;
    VP (Imp Sg P3) => "contrahaga" ;
    VP (Imp Pl P1) => "contrahagamos" ;
    VP (Imp Pl P2) => "contrahaced" ;
    VP (Imp Pl P3) => "contrahagan" ;
    VP (Pass Sg Masc) => "contrahecho" ;
    VP (Pass Sg Fem) => "contrahecha" ;
    VP (Pass Pl Masc) => "contrahechos" ;
    VP (Pass Pl Fem) => "contrahechas"
    }
  } ;

lin deshacer_V = verboV 
 {s = table {
    VI Infn => "deshacer" ;
    VI Ger => "deshaciendo" ;
    VI Part => "deshecho" ;
    VP (Pres Ind Sg P1) => "deshago" ;
    VP (Pres Ind Sg P2) => "deshaces" ;
    VP (Pres Ind Sg P3) => "deshace" ;
    VP (Pres Ind Pl P1) => "deshacemos" ;
    VP (Pres Ind Pl P2) => "deshacéis" ;
    VP (Pres Ind Pl P3) => "deshacen" ;
    VP (Pres Subj Sg P1) => "deshaga" ;
    VP (Pres Subj Sg P2) => "deshagas" ;
    VP (Pres Subj Sg P3) => "deshaga" ;
    VP (Pres Subj Pl P1) => "deshagamos" ;
    VP (Pres Subj Pl P2) => "deshagáis" ;
    VP (Pres Subj Pl P3) => "deshagan" ;
    VP (Impf Ind Sg P1) => "deshacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "deshacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "deshacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deshacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deshacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deshacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"deshiciera" ; "deshiciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"deshicieras" ; "deshicieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"deshiciera" ; "deshiciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"deshiciéramos" ; "deshiciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"deshicierais" ; "deshicieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"deshicieran" ; "deshiciesen"} ;--# notpresent
    VP (Pret Sg P1) => "deshice" ;--# notpresent
    VP (Pret Sg P2) => "deshiciste" ;--# notpresent
    VP (Pret Sg P3) => "deshizo" ;--# notpresent
    VP (Pret Pl P1) => "deshicimos" ;--# notpresent
    VP (Pret Pl P2) => "deshicisteis" ;--# notpresent
    VP (Pret Pl P3) => "deshicieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desharé" ;--# notpresent
    VP (Fut Ind Sg P2) => "desharás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deshará" ;--# notpresent
    VP (Fut Ind Pl P1) => "desharemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desharéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desharán" ;--# notpresent
    VP (Fut Subj Sg P1) => "deshiciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "deshicieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "deshiciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "deshiciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "deshiciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "deshicieren" ;--# notpresent
    VP (Cond Sg P1) => "desharía" ;--# notpresent
    VP (Cond Sg P2) => "desharías" ;--# notpresent
    VP (Cond Sg P3) => "desharía" ;--# notpresent
    VP (Cond Pl P1) => "desharíamos" ;--# notpresent
    VP (Cond Pl P2) => "desharíais" ;--# notpresent
    VP (Cond Pl P3) => "desharían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deshaz" ;
    VP (Imp Sg P3) => "deshaga" ;
    VP (Imp Pl P1) => "deshagamos" ;
    VP (Imp Pl P2) => "deshaced" ;
    VP (Imp Pl P3) => "deshagan" ;
    VP (Pass Sg Masc) => "deshecho" ;
    VP (Pass Sg Fem) => "deshecha" ;
    VP (Pass Pl Masc) => "deshechos" ;
    VP (Pass Pl Fem) => "deshechas"
    }
  } ;

lin hacer_V = verboV 
 {s = table {
    VI Infn => "hacer" ;
    VI Ger => "haciendo" ;
    VI Part => "hecho" ;
    VP (Pres Ind Sg P1) => "hago" ;
    VP (Pres Ind Sg P2) => "haces" ;
    VP (Pres Ind Sg P3) => "hace" ;
    VP (Pres Ind Pl P1) => "hacemos" ;
    VP (Pres Ind Pl P2) => "hacéis" ;
    VP (Pres Ind Pl P3) => "hacen" ;
    VP (Pres Subj Sg P1) => "haga" ;
    VP (Pres Subj Sg P2) => "hagas" ;
    VP (Pres Subj Sg P3) => "haga" ;
    VP (Pres Subj Pl P1) => "hagamos" ;
    VP (Pres Subj Pl P2) => "hagáis" ;
    VP (Pres Subj Pl P3) => "hagan" ;
    VP (Impf Ind Sg P1) => "hacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "hacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "hacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "hacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "hacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "hacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hiciera" ; "hiciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hicieras" ; "hicieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hiciera" ; "hiciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hiciéramos" ; "hiciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hicierais" ; "hicieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hicieran" ; "hiciesen"} ;--# notpresent
    VP (Pret Sg P1) => "hice" ;--# notpresent
    VP (Pret Sg P2) => "hiciste" ;--# notpresent
    VP (Pret Sg P3) => "hizo" ;--# notpresent
    VP (Pret Pl P1) => "hicimos" ;--# notpresent
    VP (Pret Pl P2) => "hicisteis" ;--# notpresent
    VP (Pret Pl P3) => "hicieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "haré" ;--# notpresent
    VP (Fut Ind Sg P2) => "harás" ;--# notpresent
    VP (Fut Ind Sg P3) => "hará" ;--# notpresent
    VP (Fut Ind Pl P1) => "haremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "haréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "harán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hiciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hicieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hiciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hiciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hiciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hicieren" ;--# notpresent
    VP (Cond Sg P1) => "haría" ;--# notpresent
    VP (Cond Sg P2) => "harías" ;--# notpresent
    VP (Cond Sg P3) => "haría" ;--# notpresent
    VP (Cond Pl P1) => "haríamos" ;--# notpresent
    VP (Cond Pl P2) => "haríais" ;--# notpresent
    VP (Cond Pl P3) => "harían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "haz" ;
    VP (Imp Sg P3) => "haga" ;
    VP (Imp Pl P1) => "hagamos" ;
    VP (Imp Pl P2) => "haced" ;
    VP (Imp Pl P3) => "hagan" ;
    VP (Pass Sg Masc) => "hecho" ;
    VP (Pass Sg Fem) => "hecha" ;
    VP (Pass Pl Masc) => "hechos" ;
    VP (Pass Pl Fem) => "hechas"
    }
  } ;

lin licuefacer_V = verboV 
 {s = table {
    VI Infn => "licuefacer" ;
    VI Ger => "licuefaciendo" ;
    VI Part => "licuefecho" ;
    VP (Pres Ind Sg P1) => "licuefago" ;
    VP (Pres Ind Sg P2) => "licuefaces" ;
    VP (Pres Ind Sg P3) => "licueface" ;
    VP (Pres Ind Pl P1) => "licuefacemos" ;
    VP (Pres Ind Pl P2) => "licuefacéis" ;
    VP (Pres Ind Pl P3) => "licuefacen" ;
    VP (Pres Subj Sg P1) => "licuefaga" ;
    VP (Pres Subj Sg P2) => "licuefagas" ;
    VP (Pres Subj Sg P3) => "licuefaga" ;
    VP (Pres Subj Pl P1) => "licuefagamos" ;
    VP (Pres Subj Pl P2) => "licuefagáis" ;
    VP (Pres Subj Pl P3) => "licuefagan" ;
    VP (Impf Ind Sg P1) => "licuefacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "licuefacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "licuefacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "licuefacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "licuefacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "licuefacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"licueficiera" ; "licueficiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"licueficieras" ; "licueficieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"licueficiera" ; "licueficiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"licueficiéramos" ; "licueficiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"licueficierais" ; "licueficieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"licueficieran" ; "licueficiesen"} ;--# notpresent
    VP (Pret Sg P1) => "licuefice" ;--# notpresent
    VP (Pret Sg P2) => "licueficiste" ;--# notpresent
    VP (Pret Sg P3) => "licuefizo" ;--# notpresent
    VP (Pret Pl P1) => "licueficimos" ;--# notpresent
    VP (Pret Pl P2) => "licueficisteis" ;--# notpresent
    VP (Pret Pl P3) => "licueficieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "licuefaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "licuefarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "licuefará" ;--# notpresent
    VP (Fut Ind Pl P1) => "licuefaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "licuefaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "licuefarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "licueficiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "licueficieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "licueficiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "licueficiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "licueficiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "licueficieren" ;--# notpresent
    VP (Cond Sg P1) => "licuefaría" ;--# notpresent
    VP (Cond Sg P2) => "licuefarías" ;--# notpresent
    VP (Cond Sg P3) => "licuefaría" ;--# notpresent
    VP (Cond Pl P1) => "licuefaríamos" ;--# notpresent
    VP (Cond Pl P2) => "licuefaríais" ;--# notpresent
    VP (Cond Pl P3) => "licuefarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "licuefaz" ;
    VP (Imp Sg P3) => "licuefaga" ;
    VP (Imp Pl P1) => "licuefagamos" ;
    VP (Imp Pl P2) => "licuefaced" ;
    VP (Imp Pl P3) => "licuefagan" ;
    VP (Pass Sg Masc) => "licuefecho" ;
    VP (Pass Sg Fem) => "licuefecha" ;
    VP (Pass Pl Masc) => "licuefechos" ;
    VP (Pass Pl Fem) => "licuefechas"
    }
  } ;

lin rarefacer_V = verboV 
 {s = table {
    VI Infn => "rarefacer" ;
    VI Ger => "rarefaciendo" ;
    VI Part => "rarefecho" ;
    VP (Pres Ind Sg P1) => "rarefago" ;
    VP (Pres Ind Sg P2) => "rarefaces" ;
    VP (Pres Ind Sg P3) => "rareface" ;
    VP (Pres Ind Pl P1) => "rarefacemos" ;
    VP (Pres Ind Pl P2) => "rarefacéis" ;
    VP (Pres Ind Pl P3) => "rarefacen" ;
    VP (Pres Subj Sg P1) => "rarefaga" ;
    VP (Pres Subj Sg P2) => "rarefagas" ;
    VP (Pres Subj Sg P3) => "rarefaga" ;
    VP (Pres Subj Pl P1) => "rarefagamos" ;
    VP (Pres Subj Pl P2) => "rarefagáis" ;
    VP (Pres Subj Pl P3) => "rarefagan" ;
    VP (Impf Ind Sg P1) => "rarefacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rarefacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rarefacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rarefacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rarefacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rarefacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rareficiera" ; "rareficiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rareficieras" ; "rareficieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rareficiera" ; "rareficiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rareficiéramos" ; "rareficiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rareficierais" ; "rareficieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rareficieran" ; "rareficiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rarefice" ;--# notpresent
    VP (Pret Sg P2) => "rareficiste" ;--# notpresent
    VP (Pret Sg P3) => "rarefizo" ;--# notpresent
    VP (Pret Pl P1) => "rareficimos" ;--# notpresent
    VP (Pret Pl P2) => "rareficisteis" ;--# notpresent
    VP (Pret Pl P3) => "rareficieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rarefaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rarefarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rarefará" ;--# notpresent
    VP (Fut Ind Pl P1) => "rarefaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rarefaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rarefarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rareficiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rareficieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rareficiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rareficiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rareficiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rareficieren" ;--# notpresent
    VP (Cond Sg P1) => "rarefaría" ;--# notpresent
    VP (Cond Sg P2) => "rarefarías" ;--# notpresent
    VP (Cond Sg P3) => "rarefaría" ;--# notpresent
    VP (Cond Pl P1) => "rarefaríamos" ;--# notpresent
    VP (Cond Pl P2) => "rarefaríais" ;--# notpresent
    VP (Cond Pl P3) => "rarefarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rarefaz" ;
    VP (Imp Sg P3) => "rarefaga" ;
    VP (Imp Pl P1) => "rarefagamos" ;
    VP (Imp Pl P2) => "rarefaced" ;
    VP (Imp Pl P3) => "rarefagan" ;
    VP (Pass Sg Masc) => "rarefecho" ;
    VP (Pass Sg Fem) => "rarefecha" ;
    VP (Pass Pl Masc) => "rarefechos" ;
    VP (Pass Pl Fem) => "rarefechas"
    }
  } ;

lin rehacer_V = verboV 
 {s = table {
    VI Infn => "rehacer" ;
    VI Ger => "rehaciendo" ;
    VI Part => "rehecho" ;
    VP (Pres Ind Sg P1) => "rehago" ;
    VP (Pres Ind Sg P2) => "rehaces" ;
    VP (Pres Ind Sg P3) => "rehace" ;
    VP (Pres Ind Pl P1) => "rehacemos" ;
    VP (Pres Ind Pl P2) => "rehacéis" ;
    VP (Pres Ind Pl P3) => "rehacen" ;
    VP (Pres Subj Sg P1) => "rehaga" ;
    VP (Pres Subj Sg P2) => "rehagas" ;
    VP (Pres Subj Sg P3) => "rehaga" ;
    VP (Pres Subj Pl P1) => "rehagamos" ;
    VP (Pres Subj Pl P2) => "rehagáis" ;
    VP (Pres Subj Pl P3) => "rehagan" ;
    VP (Impf Ind Sg P1) => "rehacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rehacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rehacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rehacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rehacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehiciera" ; "rehiciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehicieras" ; "rehicieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehiciera" ; "rehiciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rehiciéramos" ; "rehiciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehicierais" ; "rehicieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehicieran" ; "rehiciesen"} ;--# notpresent
    VP (Pret Sg P1) => "rehice" ;--# notpresent
    VP (Pret Sg P2) => "rehiciste" ;--# notpresent
    VP (Pret Sg P3) => "rehizo" ;--# notpresent
    VP (Pret Pl P1) => "rehicimos" ;--# notpresent
    VP (Pret Pl P2) => "rehicisteis" ;--# notpresent
    VP (Pret Pl P3) => "rehicieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reharé" ;--# notpresent
    VP (Fut Ind Sg P2) => "reharás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rehará" ;--# notpresent
    VP (Fut Ind Pl P1) => "reharemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reharéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reharán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehiciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehicieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehiciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rehiciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehiciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehicieren" ;--# notpresent
    VP (Cond Sg P1) => "reharía" ;--# notpresent
    VP (Cond Sg P2) => "reharías" ;--# notpresent
    VP (Cond Sg P3) => "reharía" ;--# notpresent
    VP (Cond Pl P1) => "reharíamos" ;--# notpresent
    VP (Cond Pl P2) => "reharíais" ;--# notpresent
    VP (Cond Pl P3) => "reharían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehaz" ;
    VP (Imp Sg P3) => "rehaga" ;
    VP (Imp Pl P1) => "rehagamos" ;
    VP (Imp Pl P2) => "rehaced" ;
    VP (Imp Pl P3) => "rehagan" ;
    VP (Pass Sg Masc) => "rehecho" ;
    VP (Pass Sg Fem) => "rehecha" ;
    VP (Pass Pl Masc) => "rehechos" ;
    VP (Pass Pl Fem) => "rehechas"
    }
  } ;

lin satisfacer_V = verboV 
 {s = table {
    VI Infn => "satisfacer" ;
    VI Ger => "satisfaciendo" ;
    VI Part => "satisfecho" ;
    VP (Pres Ind Sg P1) => "satisfago" ;
    VP (Pres Ind Sg P2) => "satisfaces" ;
    VP (Pres Ind Sg P3) => "satisface" ;
    VP (Pres Ind Pl P1) => "satisfacemos" ;
    VP (Pres Ind Pl P2) => "satisfacéis" ;
    VP (Pres Ind Pl P3) => "satisfacen" ;
    VP (Pres Subj Sg P1) => "satisfaga" ;
    VP (Pres Subj Sg P2) => "satisfagas" ;
    VP (Pres Subj Sg P3) => "satisfaga" ;
    VP (Pres Subj Pl P1) => "satisfagamos" ;
    VP (Pres Subj Pl P2) => "satisfagáis" ;
    VP (Pres Subj Pl P3) => "satisfagan" ;
    VP (Impf Ind Sg P1) => "satisfacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "satisfacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "satisfacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "satisfacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "satisfacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "satisfacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"satisficiera" ; "satisficiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"satisficieras" ; "satisficieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"satisficiera" ; "satisficiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"satisficiéramos" ; "satisficiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"satisficierais" ; "satisficieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"satisficieran" ; "satisficiesen"} ;--# notpresent
    VP (Pret Sg P1) => "satisfice" ;--# notpresent
    VP (Pret Sg P2) => "satisficiste" ;--# notpresent
    VP (Pret Sg P3) => "satisfizo" ;--# notpresent
    VP (Pret Pl P1) => "satisficimos" ;--# notpresent
    VP (Pret Pl P2) => "satisficisteis" ;--# notpresent
    VP (Pret Pl P3) => "satisficieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "satisfaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "satisfarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "satisfará" ;--# notpresent
    VP (Fut Ind Pl P1) => "satisfaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "satisfaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "satisfarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "satisficiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "satisficieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "satisficiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "satisficiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "satisficiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "satisficieren" ;--# notpresent
    VP (Cond Sg P1) => "satisfaría" ;--# notpresent
    VP (Cond Sg P2) => "satisfarías" ;--# notpresent
    VP (Cond Sg P3) => "satisfaría" ;--# notpresent
    VP (Cond Pl P1) => "satisfaríamos" ;--# notpresent
    VP (Cond Pl P2) => "satisfaríais" ;--# notpresent
    VP (Cond Pl P3) => "satisfarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {"satisfaz" ; "satisface"} ;
    VP (Imp Sg P3) => "satisfaga" ;
    VP (Imp Pl P1) => "satisfagamos" ;
    VP (Imp Pl P2) => "satisfaced" ;
    VP (Imp Pl P3) => "satisfagan" ;
    VP (Pass Sg Masc) => "satisfecho" ;
    VP (Pass Sg Fem) => "satisfecha" ;
    VP (Pass Pl Masc) => "satisfechos" ;
    VP (Pass Pl Fem) => "satisfechas"
    }
  } ;

lin tumefacer_V = verboV 
 {s = table {
    VI Infn => "tumefacer" ;
    VI Ger => "tumefaciendo" ;
    VI Part => "tumefecho" ;
    VP (Pres Ind Sg P1) => "tumefago" ;
    VP (Pres Ind Sg P2) => "tumefaces" ;
    VP (Pres Ind Sg P3) => "tumeface" ;
    VP (Pres Ind Pl P1) => "tumefacemos" ;
    VP (Pres Ind Pl P2) => "tumefacéis" ;
    VP (Pres Ind Pl P3) => "tumefacen" ;
    VP (Pres Subj Sg P1) => "tumefaga" ;
    VP (Pres Subj Sg P2) => "tumefagas" ;
    VP (Pres Subj Sg P3) => "tumefaga" ;
    VP (Pres Subj Pl P1) => "tumefagamos" ;
    VP (Pres Subj Pl P2) => "tumefagáis" ;
    VP (Pres Subj Pl P3) => "tumefagan" ;
    VP (Impf Ind Sg P1) => "tumefacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "tumefacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "tumefacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "tumefacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "tumefacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "tumefacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tumeficiera" ; "tumeficiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tumeficieras" ; "tumeficieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tumeficiera" ; "tumeficiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tumeficiéramos" ; "tumeficiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tumeficierais" ; "tumeficieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tumeficieran" ; "tumeficiesen"} ;--# notpresent
    VP (Pret Sg P1) => "tumefice" ;--# notpresent
    VP (Pret Sg P2) => "tumeficiste" ;--# notpresent
    VP (Pret Sg P3) => "tumefizo" ;--# notpresent
    VP (Pret Pl P1) => "tumeficimos" ;--# notpresent
    VP (Pret Pl P2) => "tumeficisteis" ;--# notpresent
    VP (Pret Pl P3) => "tumeficieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "tumefaré" ;--# notpresent
    VP (Fut Ind Sg P2) => "tumefarás" ;--# notpresent
    VP (Fut Ind Sg P3) => "tumefará" ;--# notpresent
    VP (Fut Ind Pl P1) => "tumefaremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "tumefaréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "tumefarán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tumeficiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tumeficieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tumeficiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tumeficiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tumeficiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tumeficieren" ;--# notpresent
    VP (Cond Sg P1) => "tumefaría" ;--# notpresent
    VP (Cond Sg P2) => "tumefarías" ;--# notpresent
    VP (Cond Sg P3) => "tumefaría" ;--# notpresent
    VP (Cond Pl P1) => "tumefaríamos" ;--# notpresent
    VP (Cond Pl P2) => "tumefaríais" ;--# notpresent
    VP (Cond Pl P3) => "tumefarían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tumefaz" ;
    VP (Imp Sg P3) => "tumefaga" ;
    VP (Imp Pl P1) => "tumefagamos" ;
    VP (Imp Pl P2) => "tumefaced" ;
    VP (Imp Pl P3) => "tumefagan" ;
    VP (Pass Sg Masc) => "tumefecho" ;
    VP (Pass Sg Fem) => "tumefecha" ;
    VP (Pass Pl Masc) => "tumefechos" ;
    VP (Pass Pl Fem) => "tumefechas"
    }
  } ;

lin afluir_V = verboV 
 {s = table {
    VI Infn => "afluir" ;
    VI Ger => "afluyendo" ;
    VI Part => "afluido" ;
    VP (Pres Ind Sg P1) => "afluyo" ;
    VP (Pres Ind Sg P2) => "afluyes" ;
    VP (Pres Ind Sg P3) => "afluye" ;
    VP (Pres Ind Pl P1) => "afluimos" ;
    VP (Pres Ind Pl P2) => "afluís" ;
    VP (Pres Ind Pl P3) => "afluyen" ;
    VP (Pres Subj Sg P1) => "afluya" ;
    VP (Pres Subj Sg P2) => "afluyas" ;
    VP (Pres Subj Sg P3) => "afluya" ;
    VP (Pres Subj Pl P1) => "afluyamos" ;
    VP (Pres Subj Pl P2) => "afluyáis" ;
    VP (Pres Subj Pl P3) => "afluyan" ;
    VP (Impf Ind Sg P1) => "afluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "afluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "afluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "afluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "afluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "afluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"afluyera" ; "afluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"afluyeras" ; "afluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"afluyera" ; "afluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"afluyéramos" ; "afluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"afluyerais" ; "afluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"afluyeran" ; "afluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "afluí" ;--# notpresent
    VP (Pret Sg P2) => "afluiste" ;--# notpresent
    VP (Pret Sg P3) => "afluyó" ;--# notpresent
    VP (Pret Pl P1) => "afluimos" ;--# notpresent
    VP (Pret Pl P2) => "afluisteis" ;--# notpresent
    VP (Pret Pl P3) => "afluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "afluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "afluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "afluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "afluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "afluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "afluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "afluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "afluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "afluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "afluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "afluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "afluyeren" ;--# notpresent
    VP (Cond Sg P1) => "afluiría" ;--# notpresent
    VP (Cond Sg P2) => "afluirías" ;--# notpresent
    VP (Cond Sg P3) => "afluiría" ;--# notpresent
    VP (Cond Pl P1) => "afluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "afluiríais" ;--# notpresent
    VP (Cond Pl P3) => "afluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "afluye" ;
    VP (Imp Sg P3) => "afluya" ;
    VP (Imp Pl P1) => "afluyamos" ;
    VP (Imp Pl P2) => "afluid" ;
    VP (Imp Pl P3) => "afluyan" ;
    VP (Pass Sg Masc) => "afluido" ;
    VP (Pass Sg Fem) => "afluida" ;
    VP (Pass Pl Masc) => "afluidos" ;
    VP (Pass Pl Fem) => "afluidas"
    }
  } ;

lin argüir_V = verboV 
 {s = table {
    VI Infn => "argüir" ;
    VI Ger => "argüyendo" ;
    VI Part => "argüido" ;
    VP (Pres Ind Sg P1) => "argüyo" ;
    VP (Pres Ind Sg P2) => "argüyes" ;
    VP (Pres Ind Sg P3) => "argüye" ;
    VP (Pres Ind Pl P1) => "argüimos" ;
    VP (Pres Ind Pl P2) => "argüís" ;
    VP (Pres Ind Pl P3) => "argüyen" ;
    VP (Pres Subj Sg P1) => "argüya" ;
    VP (Pres Subj Sg P2) => "argüyas" ;
    VP (Pres Subj Sg P3) => "argüya" ;
    VP (Pres Subj Pl P1) => "argüyamos" ;
    VP (Pres Subj Pl P2) => "argüyáis" ;
    VP (Pres Subj Pl P3) => "argüyan" ;
    VP (Impf Ind Sg P1) => "argüía" ;--# notpresent
    VP (Impf Ind Sg P2) => "argüías" ;--# notpresent
    VP (Impf Ind Sg P3) => "argüía" ;--# notpresent
    VP (Impf Ind Pl P1) => "argüíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "argüíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "argüían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"argüyera" ; "argüyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"argüyeras" ; "argüyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"argüyera" ; "argüyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"argüyéramos" ; "argüyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"argüyerais" ; "argüyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"argüyeran" ; "argüyesen"} ;--# notpresent
    VP (Pret Sg P1) => "argüí" ;--# notpresent
    VP (Pret Sg P2) => "argüiste" ;--# notpresent
    VP (Pret Sg P3) => "argüyó" ;--# notpresent
    VP (Pret Pl P1) => "argüimos" ;--# notpresent
    VP (Pret Pl P2) => "argüisteis" ;--# notpresent
    VP (Pret Pl P3) => "argüyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "argüiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "argüirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "argüirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "argüiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "argüiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "argüirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "argüyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "argüyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "argüyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "argüyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "argüyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "argüyeren" ;--# notpresent
    VP (Cond Sg P1) => "argüiría" ;--# notpresent
    VP (Cond Sg P2) => "argüirías" ;--# notpresent
    VP (Cond Sg P3) => "argüiría" ;--# notpresent
    VP (Cond Pl P1) => "argüiríamos" ;--# notpresent
    VP (Cond Pl P2) => "argüiríais" ;--# notpresent
    VP (Cond Pl P3) => "argüirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "argüye" ;
    VP (Imp Sg P3) => "argüya" ;
    VP (Imp Pl P1) => "argüyamos" ;
    VP (Imp Pl P2) => "argüid" ;
    VP (Imp Pl P3) => "argüyan" ;
    VP (Pass Sg Masc) => "argüido" ;
    VP (Pass Sg Fem) => "argüida" ;
    VP (Pass Pl Masc) => "argüidos" ;
    VP (Pass Pl Fem) => "argüidas"
    }
  } ;

lin atribuir_V = verboV 
 {s = table {
    VI Infn => "atribuir" ;
    VI Ger => "atribuyendo" ;
    VI Part => "atribuido" ;
    VP (Pres Ind Sg P1) => "atribuyo" ;
    VP (Pres Ind Sg P2) => "atribuyes" ;
    VP (Pres Ind Sg P3) => "atribuye" ;
    VP (Pres Ind Pl P1) => "atribuimos" ;
    VP (Pres Ind Pl P2) => "atribuís" ;
    VP (Pres Ind Pl P3) => "atribuyen" ;
    VP (Pres Subj Sg P1) => "atribuya" ;
    VP (Pres Subj Sg P2) => "atribuyas" ;
    VP (Pres Subj Sg P3) => "atribuya" ;
    VP (Pres Subj Pl P1) => "atribuyamos" ;
    VP (Pres Subj Pl P2) => "atribuyáis" ;
    VP (Pres Subj Pl P3) => "atribuyan" ;
    VP (Impf Ind Sg P1) => "atribuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "atribuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "atribuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "atribuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "atribuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "atribuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"atribuyera" ; "atribuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"atribuyeras" ; "atribuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"atribuyera" ; "atribuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"atribuyéramos" ; "atribuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"atribuyerais" ; "atribuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"atribuyeran" ; "atribuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "atribuí" ;--# notpresent
    VP (Pret Sg P2) => "atribuiste" ;--# notpresent
    VP (Pret Sg P3) => "atribuyó" ;--# notpresent
    VP (Pret Pl P1) => "atribuimos" ;--# notpresent
    VP (Pret Pl P2) => "atribuisteis" ;--# notpresent
    VP (Pret Pl P3) => "atribuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "atribuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "atribuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "atribuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "atribuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "atribuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "atribuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "atribuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "atribuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "atribuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "atribuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "atribuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "atribuyeren" ;--# notpresent
    VP (Cond Sg P1) => "atribuiría" ;--# notpresent
    VP (Cond Sg P2) => "atribuirías" ;--# notpresent
    VP (Cond Sg P3) => "atribuiría" ;--# notpresent
    VP (Cond Pl P1) => "atribuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "atribuiríais" ;--# notpresent
    VP (Cond Pl P3) => "atribuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "atribuye" ;
    VP (Imp Sg P3) => "atribuya" ;
    VP (Imp Pl P1) => "atribuyamos" ;
    VP (Imp Pl P2) => "atribuid" ;
    VP (Imp Pl P3) => "atribuyan" ;
    VP (Pass Sg Masc) => "atribuido" ;
    VP (Pass Sg Fem) => "atribuida" ;
    VP (Pass Pl Masc) => "atribuidos" ;
    VP (Pass Pl Fem) => "atribuidas"
    }
  } ;

lin circuir_V = verboV 
 {s = table {
    VI Infn => "circuir" ;
    VI Ger => "circuyendo" ;
    VI Part => "circuido" ;
    VP (Pres Ind Sg P1) => "circuyo" ;
    VP (Pres Ind Sg P2) => "circuyes" ;
    VP (Pres Ind Sg P3) => "circuye" ;
    VP (Pres Ind Pl P1) => "circuimos" ;
    VP (Pres Ind Pl P2) => "circuís" ;
    VP (Pres Ind Pl P3) => "circuyen" ;
    VP (Pres Subj Sg P1) => "circuya" ;
    VP (Pres Subj Sg P2) => "circuyas" ;
    VP (Pres Subj Sg P3) => "circuya" ;
    VP (Pres Subj Pl P1) => "circuyamos" ;
    VP (Pres Subj Pl P2) => "circuyáis" ;
    VP (Pres Subj Pl P3) => "circuyan" ;
    VP (Impf Ind Sg P1) => "circuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "circuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "circuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "circuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "circuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "circuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"circuyera" ; "circuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"circuyeras" ; "circuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"circuyera" ; "circuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"circuyéramos" ; "circuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"circuyerais" ; "circuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"circuyeran" ; "circuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "circuí" ;--# notpresent
    VP (Pret Sg P2) => "circuiste" ;--# notpresent
    VP (Pret Sg P3) => "circuyó" ;--# notpresent
    VP (Pret Pl P1) => "circuimos" ;--# notpresent
    VP (Pret Pl P2) => "circuisteis" ;--# notpresent
    VP (Pret Pl P3) => "circuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "circuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "circuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "circuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "circuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "circuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "circuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "circuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "circuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "circuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "circuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "circuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "circuyeren" ;--# notpresent
    VP (Cond Sg P1) => "circuiría" ;--# notpresent
    VP (Cond Sg P2) => "circuirías" ;--# notpresent
    VP (Cond Sg P3) => "circuiría" ;--# notpresent
    VP (Cond Pl P1) => "circuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "circuiríais" ;--# notpresent
    VP (Cond Pl P3) => "circuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "circuye" ;
    VP (Imp Sg P3) => "circuya" ;
    VP (Imp Pl P1) => "circuyamos" ;
    VP (Imp Pl P2) => "circuid" ;
    VP (Imp Pl P3) => "circuyan" ;
    VP (Pass Sg Masc) => "circuido" ;
    VP (Pass Sg Fem) => "circuida" ;
    VP (Pass Pl Masc) => "circuidos" ;
    VP (Pass Pl Fem) => "circuidas"
    }
  } ;

lin concluir_V = verboV 
 {s = table {
    VI Infn => "concluir" ;
    VI Ger => "concluyendo" ;
    VI Part => "concluido" ;
    VP (Pres Ind Sg P1) => "concluyo" ;
    VP (Pres Ind Sg P2) => "concluyes" ;
    VP (Pres Ind Sg P3) => "concluye" ;
    VP (Pres Ind Pl P1) => "concluimos" ;
    VP (Pres Ind Pl P2) => "concluís" ;
    VP (Pres Ind Pl P3) => "concluyen" ;
    VP (Pres Subj Sg P1) => "concluya" ;
    VP (Pres Subj Sg P2) => "concluyas" ;
    VP (Pres Subj Sg P3) => "concluya" ;
    VP (Pres Subj Pl P1) => "concluyamos" ;
    VP (Pres Subj Pl P2) => "concluyáis" ;
    VP (Pres Subj Pl P3) => "concluyan" ;
    VP (Impf Ind Sg P1) => "concluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "concluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "concluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "concluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "concluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "concluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"concluyera" ; "concluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"concluyeras" ; "concluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"concluyera" ; "concluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"concluyéramos" ; "concluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"concluyerais" ; "concluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"concluyeran" ; "concluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "concluí" ;--# notpresent
    VP (Pret Sg P2) => "concluiste" ;--# notpresent
    VP (Pret Sg P3) => "concluyó" ;--# notpresent
    VP (Pret Pl P1) => "concluimos" ;--# notpresent
    VP (Pret Pl P2) => "concluisteis" ;--# notpresent
    VP (Pret Pl P3) => "concluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "concluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "concluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "concluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "concluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "concluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "concluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "concluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "concluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "concluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "concluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "concluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "concluyeren" ;--# notpresent
    VP (Cond Sg P1) => "concluiría" ;--# notpresent
    VP (Cond Sg P2) => "concluirías" ;--# notpresent
    VP (Cond Sg P3) => "concluiría" ;--# notpresent
    VP (Cond Pl P1) => "concluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "concluiríais" ;--# notpresent
    VP (Cond Pl P3) => "concluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "concluye" ;
    VP (Imp Sg P3) => "concluya" ;
    VP (Imp Pl P1) => "concluyamos" ;
    VP (Imp Pl P2) => "concluid" ;
    VP (Imp Pl P3) => "concluyan" ;
    VP (Pass Sg Masc) => "concluido" ;
    VP (Pass Sg Fem) => "concluida" ;
    VP (Pass Pl Masc) => "concluidos" ;
    VP (Pass Pl Fem) => "concluidas"
    }
  } ;

lin confluir_V = verboV 
 {s = table {
    VI Infn => "confluir" ;
    VI Ger => "confluyendo" ;
    VI Part => "confluido" ;
    VP (Pres Ind Sg P1) => "confluyo" ;
    VP (Pres Ind Sg P2) => "confluyes" ;
    VP (Pres Ind Sg P3) => "confluye" ;
    VP (Pres Ind Pl P1) => "confluimos" ;
    VP (Pres Ind Pl P2) => "confluís" ;
    VP (Pres Ind Pl P3) => "confluyen" ;
    VP (Pres Subj Sg P1) => "confluya" ;
    VP (Pres Subj Sg P2) => "confluyas" ;
    VP (Pres Subj Sg P3) => "confluya" ;
    VP (Pres Subj Pl P1) => "confluyamos" ;
    VP (Pres Subj Pl P2) => "confluyáis" ;
    VP (Pres Subj Pl P3) => "confluyan" ;
    VP (Impf Ind Sg P1) => "confluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "confluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "confluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "confluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "confluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "confluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"confluyera" ; "confluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"confluyeras" ; "confluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"confluyera" ; "confluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"confluyéramos" ; "confluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"confluyerais" ; "confluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"confluyeran" ; "confluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "confluí" ;--# notpresent
    VP (Pret Sg P2) => "confluiste" ;--# notpresent
    VP (Pret Sg P3) => "confluyó" ;--# notpresent
    VP (Pret Pl P1) => "confluimos" ;--# notpresent
    VP (Pret Pl P2) => "confluisteis" ;--# notpresent
    VP (Pret Pl P3) => "confluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "confluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "confluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "confluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "confluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "confluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "confluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "confluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "confluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "confluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "confluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "confluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "confluyeren" ;--# notpresent
    VP (Cond Sg P1) => "confluiría" ;--# notpresent
    VP (Cond Sg P2) => "confluirías" ;--# notpresent
    VP (Cond Sg P3) => "confluiría" ;--# notpresent
    VP (Cond Pl P1) => "confluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "confluiríais" ;--# notpresent
    VP (Cond Pl P3) => "confluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "confluye" ;
    VP (Imp Sg P3) => "confluya" ;
    VP (Imp Pl P1) => "confluyamos" ;
    VP (Imp Pl P2) => "confluid" ;
    VP (Imp Pl P3) => "confluyan" ;
    VP (Pass Sg Masc) => "confluido" ;
    VP (Pass Sg Fem) => "confluida" ;
    VP (Pass Pl Masc) => "confluidos" ;
    VP (Pass Pl Fem) => "confluidas"
    }
  } ;

lin constituir_V = verboV 
 {s = table {
    VI Infn => "constituir" ;
    VI Ger => "constituyendo" ;
    VI Part => "constituido" ;
    VP (Pres Ind Sg P1) => "constituyo" ;
    VP (Pres Ind Sg P2) => "constituyes" ;
    VP (Pres Ind Sg P3) => "constituye" ;
    VP (Pres Ind Pl P1) => "constituimos" ;
    VP (Pres Ind Pl P2) => "constituís" ;
    VP (Pres Ind Pl P3) => "constituyen" ;
    VP (Pres Subj Sg P1) => "constituya" ;
    VP (Pres Subj Sg P2) => "constituyas" ;
    VP (Pres Subj Sg P3) => "constituya" ;
    VP (Pres Subj Pl P1) => "constituyamos" ;
    VP (Pres Subj Pl P2) => "constituyáis" ;
    VP (Pres Subj Pl P3) => "constituyan" ;
    VP (Impf Ind Sg P1) => "constituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "constituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "constituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "constituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "constituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "constituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"constituyera" ; "constituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"constituyeras" ; "constituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"constituyera" ; "constituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"constituyéramos" ; "constituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"constituyerais" ; "constituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"constituyeran" ; "constituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "constituí" ;--# notpresent
    VP (Pret Sg P2) => "constituiste" ;--# notpresent
    VP (Pret Sg P3) => "constituyó" ;--# notpresent
    VP (Pret Pl P1) => "constituimos" ;--# notpresent
    VP (Pret Pl P2) => "constituisteis" ;--# notpresent
    VP (Pret Pl P3) => "constituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "constituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "constituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "constituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "constituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "constituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "constituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "constituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "constituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "constituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "constituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "constituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "constituyeren" ;--# notpresent
    VP (Cond Sg P1) => "constituiría" ;--# notpresent
    VP (Cond Sg P2) => "constituirías" ;--# notpresent
    VP (Cond Sg P3) => "constituiría" ;--# notpresent
    VP (Cond Pl P1) => "constituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "constituiríais" ;--# notpresent
    VP (Cond Pl P3) => "constituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "constituye" ;
    VP (Imp Sg P3) => "constituya" ;
    VP (Imp Pl P1) => "constituyamos" ;
    VP (Imp Pl P2) => "constituid" ;
    VP (Imp Pl P3) => "constituyan" ;
    VP (Pass Sg Masc) => "constituido" ;
    VP (Pass Sg Fem) => "constituida" ;
    VP (Pass Pl Masc) => "constituidos" ;
    VP (Pass Pl Fem) => "constituidas"
    }
  } ;

lin construir_V = verboV 
 {s = table {
    VI Infn => "construir" ;
    VI Ger => "construyendo" ;
    VI Part => "construido" ;
    VP (Pres Ind Sg P1) => "construyo" ;
    VP (Pres Ind Sg P2) => "construyes" ;
    VP (Pres Ind Sg P3) => "construye" ;
    VP (Pres Ind Pl P1) => "construimos" ;
    VP (Pres Ind Pl P2) => "construís" ;
    VP (Pres Ind Pl P3) => "construyen" ;
    VP (Pres Subj Sg P1) => "construya" ;
    VP (Pres Subj Sg P2) => "construyas" ;
    VP (Pres Subj Sg P3) => "construya" ;
    VP (Pres Subj Pl P1) => "construyamos" ;
    VP (Pres Subj Pl P2) => "construyáis" ;
    VP (Pres Subj Pl P3) => "construyan" ;
    VP (Impf Ind Sg P1) => "construía" ;--# notpresent
    VP (Impf Ind Sg P2) => "construías" ;--# notpresent
    VP (Impf Ind Sg P3) => "construía" ;--# notpresent
    VP (Impf Ind Pl P1) => "construíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "construíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "construían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"construyera" ; "construyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"construyeras" ; "construyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"construyera" ; "construyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"construyéramos" ; "construyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"construyerais" ; "construyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"construyeran" ; "construyesen"} ;--# notpresent
    VP (Pret Sg P1) => "construí" ;--# notpresent
    VP (Pret Sg P2) => "construiste" ;--# notpresent
    VP (Pret Sg P3) => "construyó" ;--# notpresent
    VP (Pret Pl P1) => "construimos" ;--# notpresent
    VP (Pret Pl P2) => "construisteis" ;--# notpresent
    VP (Pret Pl P3) => "construyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "construiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "construirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "construirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "construiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "construiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "construirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "construyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "construyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "construyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "construyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "construyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "construyeren" ;--# notpresent
    VP (Cond Sg P1) => "construiría" ;--# notpresent
    VP (Cond Sg P2) => "construirías" ;--# notpresent
    VP (Cond Sg P3) => "construiría" ;--# notpresent
    VP (Cond Pl P1) => "construiríamos" ;--# notpresent
    VP (Cond Pl P2) => "construiríais" ;--# notpresent
    VP (Cond Pl P3) => "construirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "construye" ;
    VP (Imp Sg P3) => "construya" ;
    VP (Imp Pl P1) => "construyamos" ;
    VP (Imp Pl P2) => "construid" ;
    VP (Imp Pl P3) => "construyan" ;
    VP (Pass Sg Masc) => "construido" ;
    VP (Pass Sg Fem) => "construida" ;
    VP (Pass Pl Masc) => "construidos" ;
    VP (Pass Pl Fem) => "construidas"
    }
  } ;

lin contribuir_V = verboV 
 {s = table {
    VI Infn => "contribuir" ;
    VI Ger => "contribuyendo" ;
    VI Part => "contribuido" ;
    VP (Pres Ind Sg P1) => "contribuyo" ;
    VP (Pres Ind Sg P2) => "contribuyes" ;
    VP (Pres Ind Sg P3) => "contribuye" ;
    VP (Pres Ind Pl P1) => "contribuimos" ;
    VP (Pres Ind Pl P2) => "contribuís" ;
    VP (Pres Ind Pl P3) => "contribuyen" ;
    VP (Pres Subj Sg P1) => "contribuya" ;
    VP (Pres Subj Sg P2) => "contribuyas" ;
    VP (Pres Subj Sg P3) => "contribuya" ;
    VP (Pres Subj Pl P1) => "contribuyamos" ;
    VP (Pres Subj Pl P2) => "contribuyáis" ;
    VP (Pres Subj Pl P3) => "contribuyan" ;
    VP (Impf Ind Sg P1) => "contribuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contribuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contribuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contribuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contribuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contribuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contribuyera" ; "contribuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contribuyeras" ; "contribuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contribuyera" ; "contribuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contribuyéramos" ; "contribuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contribuyerais" ; "contribuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contribuyeran" ; "contribuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "contribuí" ;--# notpresent
    VP (Pret Sg P2) => "contribuiste" ;--# notpresent
    VP (Pret Sg P3) => "contribuyó" ;--# notpresent
    VP (Pret Pl P1) => "contribuimos" ;--# notpresent
    VP (Pret Pl P2) => "contribuisteis" ;--# notpresent
    VP (Pret Pl P3) => "contribuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contribuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contribuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contribuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contribuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contribuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contribuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contribuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contribuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contribuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contribuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contribuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contribuyeren" ;--# notpresent
    VP (Cond Sg P1) => "contribuiría" ;--# notpresent
    VP (Cond Sg P2) => "contribuirías" ;--# notpresent
    VP (Cond Sg P3) => "contribuiría" ;--# notpresent
    VP (Cond Pl P1) => "contribuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "contribuiríais" ;--# notpresent
    VP (Cond Pl P3) => "contribuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contribuye" ;
    VP (Imp Sg P3) => "contribuya" ;
    VP (Imp Pl P1) => "contribuyamos" ;
    VP (Imp Pl P2) => "contribuid" ;
    VP (Imp Pl P3) => "contribuyan" ;
    VP (Pass Sg Masc) => "contribuido" ;
    VP (Pass Sg Fem) => "contribuida" ;
    VP (Pass Pl Masc) => "contribuidos" ;
    VP (Pass Pl Fem) => "contribuidas"
    }
  } ;

lin derruir_V = verboV 
 {s = table {
    VI Infn => "derruir" ;
    VI Ger => "derruyendo" ;
    VI Part => "derruido" ;
    VP (Pres Ind Sg P1) => "derruyo" ;
    VP (Pres Ind Sg P2) => "derruyes" ;
    VP (Pres Ind Sg P3) => "derruye" ;
    VP (Pres Ind Pl P1) => "derruimos" ;
    VP (Pres Ind Pl P2) => "derruís" ;
    VP (Pres Ind Pl P3) => "derruyen" ;
    VP (Pres Subj Sg P1) => "derruya" ;
    VP (Pres Subj Sg P2) => "derruyas" ;
    VP (Pres Subj Sg P3) => "derruya" ;
    VP (Pres Subj Pl P1) => "derruyamos" ;
    VP (Pres Subj Pl P2) => "derruyáis" ;
    VP (Pres Subj Pl P3) => "derruyan" ;
    VP (Impf Ind Sg P1) => "derruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "derruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "derruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "derruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "derruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "derruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"derruyera" ; "derruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"derruyeras" ; "derruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"derruyera" ; "derruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"derruyéramos" ; "derruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"derruyerais" ; "derruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"derruyeran" ; "derruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "derruí" ;--# notpresent
    VP (Pret Sg P2) => "derruiste" ;--# notpresent
    VP (Pret Sg P3) => "derruyó" ;--# notpresent
    VP (Pret Pl P1) => "derruimos" ;--# notpresent
    VP (Pret Pl P2) => "derruisteis" ;--# notpresent
    VP (Pret Pl P3) => "derruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "derruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "derruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "derruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "derruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "derruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "derruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "derruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "derruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "derruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "derruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "derruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "derruyeren" ;--# notpresent
    VP (Cond Sg P1) => "derruiría" ;--# notpresent
    VP (Cond Sg P2) => "derruirías" ;--# notpresent
    VP (Cond Sg P3) => "derruiría" ;--# notpresent
    VP (Cond Pl P1) => "derruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "derruiríais" ;--# notpresent
    VP (Cond Pl P3) => "derruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "derruye" ;
    VP (Imp Sg P3) => "derruya" ;
    VP (Imp Pl P1) => "derruyamos" ;
    VP (Imp Pl P2) => "derruid" ;
    VP (Imp Pl P3) => "derruyan" ;
    VP (Pass Sg Masc) => "derruido" ;
    VP (Pass Sg Fem) => "derruida" ;
    VP (Pass Pl Masc) => "derruidos" ;
    VP (Pass Pl Fem) => "derruidas"
    }
  } ;

lin desobstruir_V = verboV 
 {s = table {
    VI Infn => "desobstruir" ;
    VI Ger => "desobstruyendo" ;
    VI Part => "desobstruido" ;
    VP (Pres Ind Sg P1) => "desobstruyo" ;
    VP (Pres Ind Sg P2) => "desobstruyes" ;
    VP (Pres Ind Sg P3) => "desobstruye" ;
    VP (Pres Ind Pl P1) => "desobstruimos" ;
    VP (Pres Ind Pl P2) => "desobstruís" ;
    VP (Pres Ind Pl P3) => "desobstruyen" ;
    VP (Pres Subj Sg P1) => "desobstruya" ;
    VP (Pres Subj Sg P2) => "desobstruyas" ;
    VP (Pres Subj Sg P3) => "desobstruya" ;
    VP (Pres Subj Pl P1) => "desobstruyamos" ;
    VP (Pres Subj Pl P2) => "desobstruyáis" ;
    VP (Pres Subj Pl P3) => "desobstruyan" ;
    VP (Impf Ind Sg P1) => "desobstruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desobstruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desobstruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desobstruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desobstruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desobstruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desobstruyera" ; "desobstruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desobstruyeras" ; "desobstruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desobstruyera" ; "desobstruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desobstruyéramos" ; "desobstruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desobstruyerais" ; "desobstruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desobstruyeran" ; "desobstruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "desobstruí" ;--# notpresent
    VP (Pret Sg P2) => "desobstruiste" ;--# notpresent
    VP (Pret Sg P3) => "desobstruyó" ;--# notpresent
    VP (Pret Pl P1) => "desobstruimos" ;--# notpresent
    VP (Pret Pl P2) => "desobstruisteis" ;--# notpresent
    VP (Pret Pl P3) => "desobstruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desobstruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desobstruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desobstruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desobstruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desobstruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desobstruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desobstruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desobstruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desobstruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desobstruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desobstruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desobstruyeren" ;--# notpresent
    VP (Cond Sg P1) => "desobstruiría" ;--# notpresent
    VP (Cond Sg P2) => "desobstruirías" ;--# notpresent
    VP (Cond Sg P3) => "desobstruiría" ;--# notpresent
    VP (Cond Pl P1) => "desobstruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desobstruiríais" ;--# notpresent
    VP (Cond Pl P3) => "desobstruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desobstruye" ;
    VP (Imp Sg P3) => "desobstruya" ;
    VP (Imp Pl P1) => "desobstruyamos" ;
    VP (Imp Pl P2) => "desobstruid" ;
    VP (Imp Pl P3) => "desobstruyan" ;
    VP (Pass Sg Masc) => "desobstruido" ;
    VP (Pass Sg Fem) => "desobstruida" ;
    VP (Pass Pl Masc) => "desobstruidos" ;
    VP (Pass Pl Fem) => "desobstruidas"
    }
  } ;

lin destituir_V = verboV 
 {s = table {
    VI Infn => "destituir" ;
    VI Ger => "destituyendo" ;
    VI Part => "destituido" ;
    VP (Pres Ind Sg P1) => "destituyo" ;
    VP (Pres Ind Sg P2) => "destituyes" ;
    VP (Pres Ind Sg P3) => "destituye" ;
    VP (Pres Ind Pl P1) => "destituimos" ;
    VP (Pres Ind Pl P2) => "destituís" ;
    VP (Pres Ind Pl P3) => "destituyen" ;
    VP (Pres Subj Sg P1) => "destituya" ;
    VP (Pres Subj Sg P2) => "destituyas" ;
    VP (Pres Subj Sg P3) => "destituya" ;
    VP (Pres Subj Pl P1) => "destituyamos" ;
    VP (Pres Subj Pl P2) => "destituyáis" ;
    VP (Pres Subj Pl P3) => "destituyan" ;
    VP (Impf Ind Sg P1) => "destituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "destituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "destituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "destituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "destituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "destituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"destituyera" ; "destituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"destituyeras" ; "destituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"destituyera" ; "destituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"destituyéramos" ; "destituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"destituyerais" ; "destituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"destituyeran" ; "destituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "destituí" ;--# notpresent
    VP (Pret Sg P2) => "destituiste" ;--# notpresent
    VP (Pret Sg P3) => "destituyó" ;--# notpresent
    VP (Pret Pl P1) => "destituimos" ;--# notpresent
    VP (Pret Pl P2) => "destituisteis" ;--# notpresent
    VP (Pret Pl P3) => "destituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "destituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "destituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "destituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "destituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "destituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "destituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "destituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "destituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "destituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "destituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "destituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "destituyeren" ;--# notpresent
    VP (Cond Sg P1) => "destituiría" ;--# notpresent
    VP (Cond Sg P2) => "destituirías" ;--# notpresent
    VP (Cond Sg P3) => "destituiría" ;--# notpresent
    VP (Cond Pl P1) => "destituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "destituiríais" ;--# notpresent
    VP (Cond Pl P3) => "destituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "destituye" ;
    VP (Imp Sg P3) => "destituya" ;
    VP (Imp Pl P1) => "destituyamos" ;
    VP (Imp Pl P2) => "destituid" ;
    VP (Imp Pl P3) => "destituyan" ;
    VP (Pass Sg Masc) => "destituido" ;
    VP (Pass Sg Fem) => "destituida" ;
    VP (Pass Pl Masc) => "destituidos" ;
    VP (Pass Pl Fem) => "destituidas"
    }
  } ;

lin destruir_V = verboV 
 {s = table {
    VI Infn => "destruir" ;
    VI Ger => "destruyendo" ;
    VI Part => "destruido" ;
    VP (Pres Ind Sg P1) => "destruyo" ;
    VP (Pres Ind Sg P2) => "destruyes" ;
    VP (Pres Ind Sg P3) => "destruye" ;
    VP (Pres Ind Pl P1) => "destruimos" ;
    VP (Pres Ind Pl P2) => "destruís" ;
    VP (Pres Ind Pl P3) => "destruyen" ;
    VP (Pres Subj Sg P1) => "destruya" ;
    VP (Pres Subj Sg P2) => "destruyas" ;
    VP (Pres Subj Sg P3) => "destruya" ;
    VP (Pres Subj Pl P1) => "destruyamos" ;
    VP (Pres Subj Pl P2) => "destruyáis" ;
    VP (Pres Subj Pl P3) => "destruyan" ;
    VP (Impf Ind Sg P1) => "destruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "destruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "destruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "destruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "destruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "destruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"destruyera" ; "destruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"destruyeras" ; "destruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"destruyera" ; "destruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"destruyéramos" ; "destruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"destruyerais" ; "destruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"destruyeran" ; "destruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "destruí" ;--# notpresent
    VP (Pret Sg P2) => "destruiste" ;--# notpresent
    VP (Pret Sg P3) => "destruyó" ;--# notpresent
    VP (Pret Pl P1) => "destruimos" ;--# notpresent
    VP (Pret Pl P2) => "destruisteis" ;--# notpresent
    VP (Pret Pl P3) => "destruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "destruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "destruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "destruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "destruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "destruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "destruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "destruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "destruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "destruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "destruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "destruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "destruyeren" ;--# notpresent
    VP (Cond Sg P1) => "destruiría" ;--# notpresent
    VP (Cond Sg P2) => "destruirías" ;--# notpresent
    VP (Cond Sg P3) => "destruiría" ;--# notpresent
    VP (Cond Pl P1) => "destruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "destruiríais" ;--# notpresent
    VP (Cond Pl P3) => "destruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "destruye" ;
    VP (Imp Sg P3) => "destruya" ;
    VP (Imp Pl P1) => "destruyamos" ;
    VP (Imp Pl P2) => "destruid" ;
    VP (Imp Pl P3) => "destruyan" ;
    VP (Pass Sg Masc) => "destruido" ;
    VP (Pass Sg Fem) => "destruida" ;
    VP (Pass Pl Masc) => "destruidos" ;
    VP (Pass Pl Fem) => "destruidas"
    }
  } ;

lin difluir_V = verboV 
 {s = table {
    VI Infn => "difluir" ;
    VI Ger => "difluyendo" ;
    VI Part => "difluido" ;
    VP (Pres Ind Sg P1) => "difluyo" ;
    VP (Pres Ind Sg P2) => "difluyes" ;
    VP (Pres Ind Sg P3) => "difluye" ;
    VP (Pres Ind Pl P1) => "difluimos" ;
    VP (Pres Ind Pl P2) => "difluís" ;
    VP (Pres Ind Pl P3) => "difluyen" ;
    VP (Pres Subj Sg P1) => "difluya" ;
    VP (Pres Subj Sg P2) => "difluyas" ;
    VP (Pres Subj Sg P3) => "difluya" ;
    VP (Pres Subj Pl P1) => "difluyamos" ;
    VP (Pres Subj Pl P2) => "difluyáis" ;
    VP (Pres Subj Pl P3) => "difluyan" ;
    VP (Impf Ind Sg P1) => "difluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "difluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "difluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "difluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "difluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "difluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"difluyera" ; "difluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"difluyeras" ; "difluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"difluyera" ; "difluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"difluyéramos" ; "difluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"difluyerais" ; "difluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"difluyeran" ; "difluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "difluí" ;--# notpresent
    VP (Pret Sg P2) => "difluiste" ;--# notpresent
    VP (Pret Sg P3) => "difluyó" ;--# notpresent
    VP (Pret Pl P1) => "difluimos" ;--# notpresent
    VP (Pret Pl P2) => "difluisteis" ;--# notpresent
    VP (Pret Pl P3) => "difluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "difluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "difluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "difluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "difluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "difluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "difluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "difluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "difluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "difluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "difluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "difluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "difluyeren" ;--# notpresent
    VP (Cond Sg P1) => "difluiría" ;--# notpresent
    VP (Cond Sg P2) => "difluirías" ;--# notpresent
    VP (Cond Sg P3) => "difluiría" ;--# notpresent
    VP (Cond Pl P1) => "difluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "difluiríais" ;--# notpresent
    VP (Cond Pl P3) => "difluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "difluye" ;
    VP (Imp Sg P3) => "difluya" ;
    VP (Imp Pl P1) => "difluyamos" ;
    VP (Imp Pl P2) => "difluid" ;
    VP (Imp Pl P3) => "difluyan" ;
    VP (Pass Sg Masc) => "difluido" ;
    VP (Pass Sg Fem) => "difluida" ;
    VP (Pass Pl Masc) => "difluidos" ;
    VP (Pass Pl Fem) => "difluidas"
    }
  } ;

lin diluir_V = verboV 
 {s = table {
    VI Infn => "diluir" ;
    VI Ger => "diluyendo" ;
    VI Part => "diluido" ;
    VP (Pres Ind Sg P1) => "diluyo" ;
    VP (Pres Ind Sg P2) => "diluyes" ;
    VP (Pres Ind Sg P3) => "diluye" ;
    VP (Pres Ind Pl P1) => "diluimos" ;
    VP (Pres Ind Pl P2) => "diluís" ;
    VP (Pres Ind Pl P3) => "diluyen" ;
    VP (Pres Subj Sg P1) => "diluya" ;
    VP (Pres Subj Sg P2) => "diluyas" ;
    VP (Pres Subj Sg P3) => "diluya" ;
    VP (Pres Subj Pl P1) => "diluyamos" ;
    VP (Pres Subj Pl P2) => "diluyáis" ;
    VP (Pres Subj Pl P3) => "diluyan" ;
    VP (Impf Ind Sg P1) => "diluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "diluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "diluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "diluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "diluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "diluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"diluyera" ; "diluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"diluyeras" ; "diluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"diluyera" ; "diluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"diluyéramos" ; "diluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"diluyerais" ; "diluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"diluyeran" ; "diluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "diluí" ;--# notpresent
    VP (Pret Sg P2) => "diluiste" ;--# notpresent
    VP (Pret Sg P3) => "diluyó" ;--# notpresent
    VP (Pret Pl P1) => "diluimos" ;--# notpresent
    VP (Pret Pl P2) => "diluisteis" ;--# notpresent
    VP (Pret Pl P3) => "diluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "diluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "diluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "diluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "diluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "diluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "diluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "diluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "diluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "diluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "diluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "diluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "diluyeren" ;--# notpresent
    VP (Cond Sg P1) => "diluiría" ;--# notpresent
    VP (Cond Sg P2) => "diluirías" ;--# notpresent
    VP (Cond Sg P3) => "diluiría" ;--# notpresent
    VP (Cond Pl P1) => "diluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "diluiríais" ;--# notpresent
    VP (Cond Pl P3) => "diluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "diluye" ;
    VP (Imp Sg P3) => "diluya" ;
    VP (Imp Pl P1) => "diluyamos" ;
    VP (Imp Pl P2) => "diluid" ;
    VP (Imp Pl P3) => "diluyan" ;
    VP (Pass Sg Masc) => "diluido" ;
    VP (Pass Sg Fem) => "diluida" ;
    VP (Pass Pl Masc) => "diluidos" ;
    VP (Pass Pl Fem) => "diluidas"
    }
  } ;

lin diminuir_V = verboV 
 {s = table {
    VI Infn => "diminuir" ;
    VI Ger => "diminuyendo" ;
    VI Part => "diminuido" ;
    VP (Pres Ind Sg P1) => "diminuyo" ;
    VP (Pres Ind Sg P2) => "diminuyes" ;
    VP (Pres Ind Sg P3) => "diminuye" ;
    VP (Pres Ind Pl P1) => "diminuimos" ;
    VP (Pres Ind Pl P2) => "diminuís" ;
    VP (Pres Ind Pl P3) => "diminuyen" ;
    VP (Pres Subj Sg P1) => "diminuya" ;
    VP (Pres Subj Sg P2) => "diminuyas" ;
    VP (Pres Subj Sg P3) => "diminuya" ;
    VP (Pres Subj Pl P1) => "diminuyamos" ;
    VP (Pres Subj Pl P2) => "diminuyáis" ;
    VP (Pres Subj Pl P3) => "diminuyan" ;
    VP (Impf Ind Sg P1) => "diminuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "diminuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "diminuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "diminuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "diminuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "diminuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"diminuyera" ; "diminuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"diminuyeras" ; "diminuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"diminuyera" ; "diminuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"diminuyéramos" ; "diminuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"diminuyerais" ; "diminuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"diminuyeran" ; "diminuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "diminuí" ;--# notpresent
    VP (Pret Sg P2) => "diminuiste" ;--# notpresent
    VP (Pret Sg P3) => "diminuyó" ;--# notpresent
    VP (Pret Pl P1) => "diminuimos" ;--# notpresent
    VP (Pret Pl P2) => "diminuisteis" ;--# notpresent
    VP (Pret Pl P3) => "diminuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "diminuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "diminuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "diminuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "diminuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "diminuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "diminuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "diminuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "diminuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "diminuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "diminuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "diminuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "diminuyeren" ;--# notpresent
    VP (Cond Sg P1) => "diminuiría" ;--# notpresent
    VP (Cond Sg P2) => "diminuirías" ;--# notpresent
    VP (Cond Sg P3) => "diminuiría" ;--# notpresent
    VP (Cond Pl P1) => "diminuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "diminuiríais" ;--# notpresent
    VP (Cond Pl P3) => "diminuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "diminuye" ;
    VP (Imp Sg P3) => "diminuya" ;
    VP (Imp Pl P1) => "diminuyamos" ;
    VP (Imp Pl P2) => "diminuid" ;
    VP (Imp Pl P3) => "diminuyan" ;
    VP (Pass Sg Masc) => "diminuido" ;
    VP (Pass Sg Fem) => "diminuida" ;
    VP (Pass Pl Masc) => "diminuidos" ;
    VP (Pass Pl Fem) => "diminuidas"
    }
  } ;

lin disminuir_V = verboV 
 {s = table {
    VI Infn => "disminuir" ;
    VI Ger => "disminuyendo" ;
    VI Part => "disminuido" ;
    VP (Pres Ind Sg P1) => "disminuyo" ;
    VP (Pres Ind Sg P2) => "disminuyes" ;
    VP (Pres Ind Sg P3) => "disminuye" ;
    VP (Pres Ind Pl P1) => "disminuimos" ;
    VP (Pres Ind Pl P2) => "disminuís" ;
    VP (Pres Ind Pl P3) => "disminuyen" ;
    VP (Pres Subj Sg P1) => "disminuya" ;
    VP (Pres Subj Sg P2) => "disminuyas" ;
    VP (Pres Subj Sg P3) => "disminuya" ;
    VP (Pres Subj Pl P1) => "disminuyamos" ;
    VP (Pres Subj Pl P2) => "disminuyáis" ;
    VP (Pres Subj Pl P3) => "disminuyan" ;
    VP (Impf Ind Sg P1) => "disminuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "disminuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "disminuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "disminuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "disminuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "disminuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"disminuyera" ; "disminuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"disminuyeras" ; "disminuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"disminuyera" ; "disminuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"disminuyéramos" ; "disminuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"disminuyerais" ; "disminuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"disminuyeran" ; "disminuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "disminuí" ;--# notpresent
    VP (Pret Sg P2) => "disminuiste" ;--# notpresent
    VP (Pret Sg P3) => "disminuyó" ;--# notpresent
    VP (Pret Pl P1) => "disminuimos" ;--# notpresent
    VP (Pret Pl P2) => "disminuisteis" ;--# notpresent
    VP (Pret Pl P3) => "disminuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "disminuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "disminuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "disminuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "disminuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "disminuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "disminuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "disminuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "disminuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "disminuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "disminuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "disminuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "disminuyeren" ;--# notpresent
    VP (Cond Sg P1) => "disminuiría" ;--# notpresent
    VP (Cond Sg P2) => "disminuirías" ;--# notpresent
    VP (Cond Sg P3) => "disminuiría" ;--# notpresent
    VP (Cond Pl P1) => "disminuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "disminuiríais" ;--# notpresent
    VP (Cond Pl P3) => "disminuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "disminuye" ;
    VP (Imp Sg P3) => "disminuya" ;
    VP (Imp Pl P1) => "disminuyamos" ;
    VP (Imp Pl P2) => "disminuid" ;
    VP (Imp Pl P3) => "disminuyan" ;
    VP (Pass Sg Masc) => "disminuido" ;
    VP (Pass Sg Fem) => "disminuida" ;
    VP (Pass Pl Masc) => "disminuidos" ;
    VP (Pass Pl Fem) => "disminuidas"
    }
  } ;

lin distribuir_V = verboV 
 {s = table {
    VI Infn => "distribuir" ;
    VI Ger => "distribuyendo" ;
    VI Part => "distribuido" ;
    VP (Pres Ind Sg P1) => "distribuyo" ;
    VP (Pres Ind Sg P2) => "distribuyes" ;
    VP (Pres Ind Sg P3) => "distribuye" ;
    VP (Pres Ind Pl P1) => "distribuimos" ;
    VP (Pres Ind Pl P2) => "distribuís" ;
    VP (Pres Ind Pl P3) => "distribuyen" ;
    VP (Pres Subj Sg P1) => "distribuya" ;
    VP (Pres Subj Sg P2) => "distribuyas" ;
    VP (Pres Subj Sg P3) => "distribuya" ;
    VP (Pres Subj Pl P1) => "distribuyamos" ;
    VP (Pres Subj Pl P2) => "distribuyáis" ;
    VP (Pres Subj Pl P3) => "distribuyan" ;
    VP (Impf Ind Sg P1) => "distribuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "distribuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "distribuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "distribuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "distribuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "distribuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"distribuyera" ; "distribuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"distribuyeras" ; "distribuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"distribuyera" ; "distribuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"distribuyéramos" ; "distribuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"distribuyerais" ; "distribuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"distribuyeran" ; "distribuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "distribuí" ;--# notpresent
    VP (Pret Sg P2) => "distribuiste" ;--# notpresent
    VP (Pret Sg P3) => "distribuyó" ;--# notpresent
    VP (Pret Pl P1) => "distribuimos" ;--# notpresent
    VP (Pret Pl P2) => "distribuisteis" ;--# notpresent
    VP (Pret Pl P3) => "distribuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "distribuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "distribuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "distribuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "distribuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "distribuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "distribuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "distribuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "distribuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "distribuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "distribuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "distribuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "distribuyeren" ;--# notpresent
    VP (Cond Sg P1) => "distribuiría" ;--# notpresent
    VP (Cond Sg P2) => "distribuirías" ;--# notpresent
    VP (Cond Sg P3) => "distribuiría" ;--# notpresent
    VP (Cond Pl P1) => "distribuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "distribuiríais" ;--# notpresent
    VP (Cond Pl P3) => "distribuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "distribuye" ;
    VP (Imp Sg P3) => "distribuya" ;
    VP (Imp Pl P1) => "distribuyamos" ;
    VP (Imp Pl P2) => "distribuid" ;
    VP (Imp Pl P3) => "distribuyan" ;
    VP (Pass Sg Masc) => "distribuido" ;
    VP (Pass Sg Fem) => "distribuida" ;
    VP (Pass Pl Masc) => "distribuidos" ;
    VP (Pass Pl Fem) => "distribuidas"
    }
  } ;

lin efluir_V = verboV 
 {s = table {
    VI Infn => "efluir" ;
    VI Ger => "efluyendo" ;
    VI Part => "efluido" ;
    VP (Pres Ind Sg P1) => "efluyo" ;
    VP (Pres Ind Sg P2) => "efluyes" ;
    VP (Pres Ind Sg P3) => "efluye" ;
    VP (Pres Ind Pl P1) => "efluimos" ;
    VP (Pres Ind Pl P2) => "efluís" ;
    VP (Pres Ind Pl P3) => "efluyen" ;
    VP (Pres Subj Sg P1) => "efluya" ;
    VP (Pres Subj Sg P2) => "efluyas" ;
    VP (Pres Subj Sg P3) => "efluya" ;
    VP (Pres Subj Pl P1) => "efluyamos" ;
    VP (Pres Subj Pl P2) => "efluyáis" ;
    VP (Pres Subj Pl P3) => "efluyan" ;
    VP (Impf Ind Sg P1) => "efluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "efluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "efluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "efluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "efluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "efluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"efluyera" ; "efluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"efluyeras" ; "efluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"efluyera" ; "efluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"efluyéramos" ; "efluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"efluyerais" ; "efluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"efluyeran" ; "efluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "efluí" ;--# notpresent
    VP (Pret Sg P2) => "efluiste" ;--# notpresent
    VP (Pret Sg P3) => "efluyó" ;--# notpresent
    VP (Pret Pl P1) => "efluimos" ;--# notpresent
    VP (Pret Pl P2) => "efluisteis" ;--# notpresent
    VP (Pret Pl P3) => "efluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "efluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "efluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "efluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "efluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "efluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "efluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "efluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "efluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "efluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "efluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "efluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "efluyeren" ;--# notpresent
    VP (Cond Sg P1) => "efluiría" ;--# notpresent
    VP (Cond Sg P2) => "efluirías" ;--# notpresent
    VP (Cond Sg P3) => "efluiría" ;--# notpresent
    VP (Cond Pl P1) => "efluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "efluiríais" ;--# notpresent
    VP (Cond Pl P3) => "efluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "efluye" ;
    VP (Imp Sg P3) => "efluya" ;
    VP (Imp Pl P1) => "efluyamos" ;
    VP (Imp Pl P2) => "efluid" ;
    VP (Imp Pl P3) => "efluyan" ;
    VP (Pass Sg Masc) => "efluido" ;
    VP (Pass Sg Fem) => "efluida" ;
    VP (Pass Pl Masc) => "efluidos" ;
    VP (Pass Pl Fem) => "efluidas"
    }
  } ;

lin esmuir_V = verboV 
 {s = table {
    VI Infn => "esmuir" ;
    VI Ger => "esmuyendo" ;
    VI Part => "esmuido" ;
    VP (Pres Ind Sg P1) => "esmuyo" ;
    VP (Pres Ind Sg P2) => "esmuyes" ;
    VP (Pres Ind Sg P3) => "esmuye" ;
    VP (Pres Ind Pl P1) => "esmuimos" ;
    VP (Pres Ind Pl P2) => "esmuís" ;
    VP (Pres Ind Pl P3) => "esmuyen" ;
    VP (Pres Subj Sg P1) => "esmuya" ;
    VP (Pres Subj Sg P2) => "esmuyas" ;
    VP (Pres Subj Sg P3) => "esmuya" ;
    VP (Pres Subj Pl P1) => "esmuyamos" ;
    VP (Pres Subj Pl P2) => "esmuyáis" ;
    VP (Pres Subj Pl P3) => "esmuyan" ;
    VP (Impf Ind Sg P1) => "esmuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "esmuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "esmuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "esmuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "esmuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "esmuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"esmuyera" ; "esmuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"esmuyeras" ; "esmuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"esmuyera" ; "esmuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"esmuyéramos" ; "esmuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"esmuyerais" ; "esmuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"esmuyeran" ; "esmuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "esmuí" ;--# notpresent
    VP (Pret Sg P2) => "esmuiste" ;--# notpresent
    VP (Pret Sg P3) => "esmuyó" ;--# notpresent
    VP (Pret Pl P1) => "esmuimos" ;--# notpresent
    VP (Pret Pl P2) => "esmuisteis" ;--# notpresent
    VP (Pret Pl P3) => "esmuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "esmuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "esmuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "esmuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "esmuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "esmuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "esmuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "esmuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "esmuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "esmuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "esmuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "esmuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "esmuyeren" ;--# notpresent
    VP (Cond Sg P1) => "esmuiría" ;--# notpresent
    VP (Cond Sg P2) => "esmuirías" ;--# notpresent
    VP (Cond Sg P3) => "esmuiría" ;--# notpresent
    VP (Cond Pl P1) => "esmuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "esmuiríais" ;--# notpresent
    VP (Cond Pl P3) => "esmuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "esmuye" ;
    VP (Imp Sg P3) => "esmuya" ;
    VP (Imp Pl P1) => "esmuyamos" ;
    VP (Imp Pl P2) => "esmuid" ;
    VP (Imp Pl P3) => "esmuyan" ;
    VP (Pass Sg Masc) => "esmuido" ;
    VP (Pass Sg Fem) => "esmuida" ;
    VP (Pass Pl Masc) => "esmuidos" ;
    VP (Pass Pl Fem) => "esmuidas"
    }
  } ;

lin estatuir_V = verboV 
 {s = table {
    VI Infn => "estatuir" ;
    VI Ger => "estatuyendo" ;
    VI Part => "estatuido" ;
    VP (Pres Ind Sg P1) => "estatuyo" ;
    VP (Pres Ind Sg P2) => "estatuyes" ;
    VP (Pres Ind Sg P3) => "estatuye" ;
    VP (Pres Ind Pl P1) => "estatuimos" ;
    VP (Pres Ind Pl P2) => "estatuís" ;
    VP (Pres Ind Pl P3) => "estatuyen" ;
    VP (Pres Subj Sg P1) => "estatuya" ;
    VP (Pres Subj Sg P2) => "estatuyas" ;
    VP (Pres Subj Sg P3) => "estatuya" ;
    VP (Pres Subj Pl P1) => "estatuyamos" ;
    VP (Pres Subj Pl P2) => "estatuyáis" ;
    VP (Pres Subj Pl P3) => "estatuyan" ;
    VP (Impf Ind Sg P1) => "estatuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "estatuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "estatuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "estatuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "estatuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "estatuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estatuyera" ; "estatuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"estatuyeras" ; "estatuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estatuyera" ; "estatuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estatuyéramos" ; "estatuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"estatuyerais" ; "estatuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"estatuyeran" ; "estatuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "estatuí" ;--# notpresent
    VP (Pret Sg P2) => "estatuiste" ;--# notpresent
    VP (Pret Sg P3) => "estatuyó" ;--# notpresent
    VP (Pret Pl P1) => "estatuimos" ;--# notpresent
    VP (Pret Pl P2) => "estatuisteis" ;--# notpresent
    VP (Pret Pl P3) => "estatuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estatuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "estatuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "estatuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "estatuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estatuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "estatuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estatuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "estatuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "estatuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "estatuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estatuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "estatuyeren" ;--# notpresent
    VP (Cond Sg P1) => "estatuiría" ;--# notpresent
    VP (Cond Sg P2) => "estatuirías" ;--# notpresent
    VP (Cond Sg P3) => "estatuiría" ;--# notpresent
    VP (Cond Pl P1) => "estatuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "estatuiríais" ;--# notpresent
    VP (Cond Pl P3) => "estatuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "estatuye" ;
    VP (Imp Sg P3) => "estatuya" ;
    VP (Imp Pl P1) => "estatuyamos" ;
    VP (Imp Pl P2) => "estatuid" ;
    VP (Imp Pl P3) => "estatuyan" ;
    VP (Pass Sg Masc) => "estatuido" ;
    VP (Pass Sg Fem) => "estatuida" ;
    VP (Pass Pl Masc) => "estatuidos" ;
    VP (Pass Pl Fem) => "estatuidas"
    }
  } ;

lin excluir_V = verboV 
 {s = table {
    VI Infn => "excluir" ;
    VI Ger => "excluyendo" ;
    VI Part => "excluido" ;
    VP (Pres Ind Sg P1) => "excluyo" ;
    VP (Pres Ind Sg P2) => "excluyes" ;
    VP (Pres Ind Sg P3) => "excluye" ;
    VP (Pres Ind Pl P1) => "excluimos" ;
    VP (Pres Ind Pl P2) => "excluís" ;
    VP (Pres Ind Pl P3) => "excluyen" ;
    VP (Pres Subj Sg P1) => "excluya" ;
    VP (Pres Subj Sg P2) => "excluyas" ;
    VP (Pres Subj Sg P3) => "excluya" ;
    VP (Pres Subj Pl P1) => "excluyamos" ;
    VP (Pres Subj Pl P2) => "excluyáis" ;
    VP (Pres Subj Pl P3) => "excluyan" ;
    VP (Impf Ind Sg P1) => "excluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "excluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "excluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "excluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "excluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "excluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"excluyera" ; "excluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"excluyeras" ; "excluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"excluyera" ; "excluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"excluyéramos" ; "excluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"excluyerais" ; "excluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"excluyeran" ; "excluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "excluí" ;--# notpresent
    VP (Pret Sg P2) => "excluiste" ;--# notpresent
    VP (Pret Sg P3) => "excluyó" ;--# notpresent
    VP (Pret Pl P1) => "excluimos" ;--# notpresent
    VP (Pret Pl P2) => "excluisteis" ;--# notpresent
    VP (Pret Pl P3) => "excluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "excluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "excluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "excluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "excluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "excluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "excluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "excluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "excluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "excluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "excluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "excluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "excluyeren" ;--# notpresent
    VP (Cond Sg P1) => "excluiría" ;--# notpresent
    VP (Cond Sg P2) => "excluirías" ;--# notpresent
    VP (Cond Sg P3) => "excluiría" ;--# notpresent
    VP (Cond Pl P1) => "excluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "excluiríais" ;--# notpresent
    VP (Cond Pl P3) => "excluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "excluye" ;
    VP (Imp Sg P3) => "excluya" ;
    VP (Imp Pl P1) => "excluyamos" ;
    VP (Imp Pl P2) => "excluid" ;
    VP (Imp Pl P3) => "excluyan" ;
    VP (Pass Sg Masc) => "excluido" ;
    VP (Pass Sg Fem) => "excluida" ;
    VP (Pass Pl Masc) => "excluidos" ;
    VP (Pass Pl Fem) => "excluidas"
    }
  } ;

lin fluir_V = verboV 
 {s = table {
    VI Infn => "fluir" ;
    VI Ger => "fluyendo" ;
    VI Part => "fluido" ;
    VP (Pres Ind Sg P1) => "fluyo" ;
    VP (Pres Ind Sg P2) => "fluyes" ;
    VP (Pres Ind Sg P3) => "fluye" ;
    VP (Pres Ind Pl P1) => "fluimos" ;
    VP (Pres Ind Pl P2) => "fluís" ;
    VP (Pres Ind Pl P3) => "fluyen" ;
    VP (Pres Subj Sg P1) => "fluya" ;
    VP (Pres Subj Sg P2) => "fluyas" ;
    VP (Pres Subj Sg P3) => "fluya" ;
    VP (Pres Subj Pl P1) => "fluyamos" ;
    VP (Pres Subj Pl P2) => "fluyáis" ;
    VP (Pres Subj Pl P3) => "fluyan" ;
    VP (Impf Ind Sg P1) => "fluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fluyera" ; "fluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fluyeras" ; "fluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fluyera" ; "fluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fluyéramos" ; "fluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fluyerais" ; "fluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fluyeran" ; "fluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "fluí" ;--# notpresent
    VP (Pret Sg P2) => "fluiste" ;--# notpresent
    VP (Pret Sg P3) => "fluyó" ;--# notpresent
    VP (Pret Pl P1) => "fluimos" ;--# notpresent
    VP (Pret Pl P2) => "fluisteis" ;--# notpresent
    VP (Pret Pl P3) => "fluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fluyeren" ;--# notpresent
    VP (Cond Sg P1) => "fluiría" ;--# notpresent
    VP (Cond Sg P2) => "fluirías" ;--# notpresent
    VP (Cond Sg P3) => "fluiría" ;--# notpresent
    VP (Cond Pl P1) => "fluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "fluiríais" ;--# notpresent
    VP (Cond Pl P3) => "fluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fluye" ;
    VP (Imp Sg P3) => "fluya" ;
    VP (Imp Pl P1) => "fluyamos" ;
    VP (Imp Pl P2) => "fluid" ;
    VP (Imp Pl P3) => "fluyan" ;
    VP (Pass Sg Masc) => "fluido" ;
    VP (Pass Sg Fem) => "fluida" ;
    VP (Pass Pl Masc) => "fluidos" ;
    VP (Pass Pl Fem) => "fluidas"
    }
  } ;

lin fruir_V = verboV 
 {s = table {
    VI Infn => "fruir" ;
    VI Ger => "fruyendo" ;
    VI Part => "fruido" ;
    VP (Pres Ind Sg P1) => "fruyo" ;
    VP (Pres Ind Sg P2) => "fruyes" ;
    VP (Pres Ind Sg P3) => "fruye" ;
    VP (Pres Ind Pl P1) => "fruimos" ;
    VP (Pres Ind Pl P2) => "fruís" ;
    VP (Pres Ind Pl P3) => "fruyen" ;
    VP (Pres Subj Sg P1) => "fruya" ;
    VP (Pres Subj Sg P2) => "fruyas" ;
    VP (Pres Subj Sg P3) => "fruya" ;
    VP (Pres Subj Pl P1) => "fruyamos" ;
    VP (Pres Subj Pl P2) => "fruyáis" ;
    VP (Pres Subj Pl P3) => "fruyan" ;
    VP (Impf Ind Sg P1) => "fruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"fruyera" ; "fruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fruyeras" ; "fruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"fruyera" ; "fruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"fruyéramos" ; "fruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fruyerais" ; "fruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fruyeran" ; "fruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "fruí" ;--# notpresent
    VP (Pret Sg P2) => "fruiste" ;--# notpresent
    VP (Pret Sg P3) => "fruyó" ;--# notpresent
    VP (Pret Pl P1) => "fruimos" ;--# notpresent
    VP (Pret Pl P2) => "fruisteis" ;--# notpresent
    VP (Pret Pl P3) => "fruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "fruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "fruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "fruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "fruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "fruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "fruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "fruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fruyeren" ;--# notpresent
    VP (Cond Sg P1) => "fruiría" ;--# notpresent
    VP (Cond Sg P2) => "fruirías" ;--# notpresent
    VP (Cond Sg P3) => "fruiría" ;--# notpresent
    VP (Cond Pl P1) => "fruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "fruiríais" ;--# notpresent
    VP (Cond Pl P3) => "fruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fruye" ;
    VP (Imp Sg P3) => "fruya" ;
    VP (Imp Pl P1) => "fruyamos" ;
    VP (Imp Pl P2) => "fruid" ;
    VP (Imp Pl P3) => "fruyan" ;
    VP (Pass Sg Masc) => "fruido" ;
    VP (Pass Sg Fem) => "fruida" ;
    VP (Pass Pl Masc) => "fruidos" ;
    VP (Pass Pl Fem) => "fruidas"
    }
  } ;

lin gruir_V = verboV 
 {s = table {
    VI Infn => "gruir" ;
    VI Ger => "gruyendo" ;
    VI Part => "gruido" ;
    VP (Pres Ind Sg P1) => "gruyo" ;
    VP (Pres Ind Sg P2) => "gruyes" ;
    VP (Pres Ind Sg P3) => "gruye" ;
    VP (Pres Ind Pl P1) => "gruimos" ;
    VP (Pres Ind Pl P2) => "gruís" ;
    VP (Pres Ind Pl P3) => "gruyen" ;
    VP (Pres Subj Sg P1) => "gruya" ;
    VP (Pres Subj Sg P2) => "gruyas" ;
    VP (Pres Subj Sg P3) => "gruya" ;
    VP (Pres Subj Pl P1) => "gruyamos" ;
    VP (Pres Subj Pl P2) => "gruyáis" ;
    VP (Pres Subj Pl P3) => "gruyan" ;
    VP (Impf Ind Sg P1) => "gruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "gruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "gruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "gruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "gruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "gruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"gruyera" ; "gruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"gruyeras" ; "gruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"gruyera" ; "gruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"gruyéramos" ; "gruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"gruyerais" ; "gruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"gruyeran" ; "gruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "gruí" ;--# notpresent
    VP (Pret Sg P2) => "gruiste" ;--# notpresent
    VP (Pret Sg P3) => "gruyó" ;--# notpresent
    VP (Pret Pl P1) => "gruimos" ;--# notpresent
    VP (Pret Pl P2) => "gruisteis" ;--# notpresent
    VP (Pret Pl P3) => "gruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "gruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "gruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "gruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "gruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "gruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "gruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "gruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "gruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "gruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "gruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "gruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "gruyeren" ;--# notpresent
    VP (Cond Sg P1) => "gruiría" ;--# notpresent
    VP (Cond Sg P2) => "gruirías" ;--# notpresent
    VP (Cond Sg P3) => "gruiría" ;--# notpresent
    VP (Cond Pl P1) => "gruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "gruiríais" ;--# notpresent
    VP (Cond Pl P3) => "gruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "gruye" ;
    VP (Imp Sg P3) => "gruya" ;
    VP (Imp Pl P1) => "gruyamos" ;
    VP (Imp Pl P2) => "gruid" ;
    VP (Imp Pl P3) => "gruyan" ;
    VP (Pass Sg Masc) => "gruido" ;
    VP (Pass Sg Fem) => "gruida" ;
    VP (Pass Pl Masc) => "gruidos" ;
    VP (Pass Pl Fem) => "gruidas"
    }
  } ;

lin huir_V = verboV 
 {s = table {
    VI Infn => "huir" ;
    VI Ger => "huyendo" ;
    VI Part => "huido" ;
    VP (Pres Ind Sg P1) => "huyo" ;
    VP (Pres Ind Sg P2) => "huyes" ;
    VP (Pres Ind Sg P3) => "huye" ;
    VP (Pres Ind Pl P1) => "huimos" ;
    VP (Pres Ind Pl P2) => "huís" ;
    VP (Pres Ind Pl P3) => "huyen" ;
    VP (Pres Subj Sg P1) => "huya" ;
    VP (Pres Subj Sg P2) => "huyas" ;
    VP (Pres Subj Sg P3) => "huya" ;
    VP (Pres Subj Pl P1) => "huyamos" ;
    VP (Pres Subj Pl P2) => "huyáis" ;
    VP (Pres Subj Pl P3) => "huyan" ;
    VP (Impf Ind Sg P1) => "huía" ;--# notpresent
    VP (Impf Ind Sg P2) => "huías" ;--# notpresent
    VP (Impf Ind Sg P3) => "huía" ;--# notpresent
    VP (Impf Ind Pl P1) => "huíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "huíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "huían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"huyera" ; "huyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"huyeras" ; "huyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"huyera" ; "huyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"huyéramos" ; "huyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"huyerais" ; "huyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"huyeran" ; "huyesen"} ;--# notpresent
    VP (Pret Sg P1) => "huí" ;--# notpresent
    VP (Pret Sg P2) => "huiste" ;--# notpresent
    VP (Pret Sg P3) => "huyó" ;--# notpresent
    VP (Pret Pl P1) => "huimos" ;--# notpresent
    VP (Pret Pl P2) => "huisteis" ;--# notpresent
    VP (Pret Pl P3) => "huyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "huiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "huirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "huirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "huiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "huiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "huirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "huyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "huyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "huyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "huyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "huyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "huyeren" ;--# notpresent
    VP (Cond Sg P1) => "huiría" ;--# notpresent
    VP (Cond Sg P2) => "huirías" ;--# notpresent
    VP (Cond Sg P3) => "huiría" ;--# notpresent
    VP (Cond Pl P1) => "huiríamos" ;--# notpresent
    VP (Cond Pl P2) => "huiríais" ;--# notpresent
    VP (Cond Pl P3) => "huirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "huye" ;
    VP (Imp Sg P3) => "huya" ;
    VP (Imp Pl P1) => "huyamos" ;
    VP (Imp Pl P2) => "huid" ;
    VP (Imp Pl P3) => "huyan" ;
    VP (Pass Sg Masc) => "huido" ;
    VP (Pass Sg Fem) => "huida" ;
    VP (Pass Pl Masc) => "huidos" ;
    VP (Pass Pl Fem) => "huidas"
    }
  } ;

lin imbuir_V = verboV 
 {s = table {
    VI Infn => "imbuir" ;
    VI Ger => "imbuyendo" ;
    VI Part => "imbuido" ;
    VP (Pres Ind Sg P1) => "imbuyo" ;
    VP (Pres Ind Sg P2) => "imbuyes" ;
    VP (Pres Ind Sg P3) => "imbuye" ;
    VP (Pres Ind Pl P1) => "imbuimos" ;
    VP (Pres Ind Pl P2) => "imbuís" ;
    VP (Pres Ind Pl P3) => "imbuyen" ;
    VP (Pres Subj Sg P1) => "imbuya" ;
    VP (Pres Subj Sg P2) => "imbuyas" ;
    VP (Pres Subj Sg P3) => "imbuya" ;
    VP (Pres Subj Pl P1) => "imbuyamos" ;
    VP (Pres Subj Pl P2) => "imbuyáis" ;
    VP (Pres Subj Pl P3) => "imbuyan" ;
    VP (Impf Ind Sg P1) => "imbuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "imbuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "imbuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "imbuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "imbuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "imbuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"imbuyera" ; "imbuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"imbuyeras" ; "imbuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"imbuyera" ; "imbuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"imbuyéramos" ; "imbuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"imbuyerais" ; "imbuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"imbuyeran" ; "imbuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "imbuí" ;--# notpresent
    VP (Pret Sg P2) => "imbuiste" ;--# notpresent
    VP (Pret Sg P3) => "imbuyó" ;--# notpresent
    VP (Pret Pl P1) => "imbuimos" ;--# notpresent
    VP (Pret Pl P2) => "imbuisteis" ;--# notpresent
    VP (Pret Pl P3) => "imbuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "imbuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "imbuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "imbuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "imbuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "imbuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "imbuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "imbuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "imbuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "imbuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "imbuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "imbuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "imbuyeren" ;--# notpresent
    VP (Cond Sg P1) => "imbuiría" ;--# notpresent
    VP (Cond Sg P2) => "imbuirías" ;--# notpresent
    VP (Cond Sg P3) => "imbuiría" ;--# notpresent
    VP (Cond Pl P1) => "imbuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "imbuiríais" ;--# notpresent
    VP (Cond Pl P3) => "imbuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "imbuye" ;
    VP (Imp Sg P3) => "imbuya" ;
    VP (Imp Pl P1) => "imbuyamos" ;
    VP (Imp Pl P2) => "imbuid" ;
    VP (Imp Pl P3) => "imbuyan" ;
    VP (Pass Sg Masc) => "imbuido" ;
    VP (Pass Sg Fem) => "imbuida" ;
    VP (Pass Pl Masc) => "imbuidos" ;
    VP (Pass Pl Fem) => "imbuidas"
    }
  } ;

lin incluir_V = verboV 
 {s = table {
    VI Infn => "incluir" ;
    VI Ger => "incluyendo" ;
    VI Part => "incluido" ;
    VP (Pres Ind Sg P1) => "incluyo" ;
    VP (Pres Ind Sg P2) => "incluyes" ;
    VP (Pres Ind Sg P3) => "incluye" ;
    VP (Pres Ind Pl P1) => "incluimos" ;
    VP (Pres Ind Pl P2) => "incluís" ;
    VP (Pres Ind Pl P3) => "incluyen" ;
    VP (Pres Subj Sg P1) => "incluya" ;
    VP (Pres Subj Sg P2) => "incluyas" ;
    VP (Pres Subj Sg P3) => "incluya" ;
    VP (Pres Subj Pl P1) => "incluyamos" ;
    VP (Pres Subj Pl P2) => "incluyáis" ;
    VP (Pres Subj Pl P3) => "incluyan" ;
    VP (Impf Ind Sg P1) => "incluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "incluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "incluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "incluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "incluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "incluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"incluyera" ; "incluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"incluyeras" ; "incluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"incluyera" ; "incluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"incluyéramos" ; "incluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"incluyerais" ; "incluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"incluyeran" ; "incluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "incluí" ;--# notpresent
    VP (Pret Sg P2) => "incluiste" ;--# notpresent
    VP (Pret Sg P3) => "incluyó" ;--# notpresent
    VP (Pret Pl P1) => "incluimos" ;--# notpresent
    VP (Pret Pl P2) => "incluisteis" ;--# notpresent
    VP (Pret Pl P3) => "incluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "incluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "incluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "incluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "incluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "incluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "incluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "incluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "incluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "incluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "incluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "incluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "incluyeren" ;--# notpresent
    VP (Cond Sg P1) => "incluiría" ;--# notpresent
    VP (Cond Sg P2) => "incluirías" ;--# notpresent
    VP (Cond Sg P3) => "incluiría" ;--# notpresent
    VP (Cond Pl P1) => "incluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "incluiríais" ;--# notpresent
    VP (Cond Pl P3) => "incluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "incluye" ;
    VP (Imp Sg P3) => "incluya" ;
    VP (Imp Pl P1) => "incluyamos" ;
    VP (Imp Pl P2) => "incluid" ;
    VP (Imp Pl P3) => "incluyan" ;
    VP (Pass Sg Masc) => "incluido" ;
    VP (Pass Sg Fem) => "incluida" ;
    VP (Pass Pl Masc) => "incluidos" ;
    VP (Pass Pl Fem) => "incluidas"
    }
  } ;

lin influir_V = verboV 
 {s = table {
    VI Infn => "influir" ;
    VI Ger => "influyendo" ;
    VI Part => "influido" ;
    VP (Pres Ind Sg P1) => "influyo" ;
    VP (Pres Ind Sg P2) => "influyes" ;
    VP (Pres Ind Sg P3) => "influye" ;
    VP (Pres Ind Pl P1) => "influimos" ;
    VP (Pres Ind Pl P2) => "influís" ;
    VP (Pres Ind Pl P3) => "influyen" ;
    VP (Pres Subj Sg P1) => "influya" ;
    VP (Pres Subj Sg P2) => "influyas" ;
    VP (Pres Subj Sg P3) => "influya" ;
    VP (Pres Subj Pl P1) => "influyamos" ;
    VP (Pres Subj Pl P2) => "influyáis" ;
    VP (Pres Subj Pl P3) => "influyan" ;
    VP (Impf Ind Sg P1) => "influía" ;--# notpresent
    VP (Impf Ind Sg P2) => "influías" ;--# notpresent
    VP (Impf Ind Sg P3) => "influía" ;--# notpresent
    VP (Impf Ind Pl P1) => "influíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "influíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "influían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"influyera" ; "influyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"influyeras" ; "influyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"influyera" ; "influyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"influyéramos" ; "influyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"influyerais" ; "influyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"influyeran" ; "influyesen"} ;--# notpresent
    VP (Pret Sg P1) => "influí" ;--# notpresent
    VP (Pret Sg P2) => "influiste" ;--# notpresent
    VP (Pret Sg P3) => "influyó" ;--# notpresent
    VP (Pret Pl P1) => "influimos" ;--# notpresent
    VP (Pret Pl P2) => "influisteis" ;--# notpresent
    VP (Pret Pl P3) => "influyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "influiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "influirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "influirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "influiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "influiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "influirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "influyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "influyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "influyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "influyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "influyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "influyeren" ;--# notpresent
    VP (Cond Sg P1) => "influiría" ;--# notpresent
    VP (Cond Sg P2) => "influirías" ;--# notpresent
    VP (Cond Sg P3) => "influiría" ;--# notpresent
    VP (Cond Pl P1) => "influiríamos" ;--# notpresent
    VP (Cond Pl P2) => "influiríais" ;--# notpresent
    VP (Cond Pl P3) => "influirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "influye" ;
    VP (Imp Sg P3) => "influya" ;
    VP (Imp Pl P1) => "influyamos" ;
    VP (Imp Pl P2) => "influid" ;
    VP (Imp Pl P3) => "influyan" ;
    VP (Pass Sg Masc) => "influido" ;
    VP (Pass Sg Fem) => "influida" ;
    VP (Pass Pl Masc) => "influidos" ;
    VP (Pass Pl Fem) => "influidas"
    }
  } ;

lin inmiscuir_V = verboV 
 {s = table {
    VI Infn => "inmiscuir" ;
    VI Ger => "inmiscuyendo" ;
    VI Part => "inmiscuido" ;
    VP (Pres Ind Sg P1) => "inmiscuyo" ;
    VP (Pres Ind Sg P2) => "inmiscuyes" ;
    VP (Pres Ind Sg P3) => "inmiscuye" ;
    VP (Pres Ind Pl P1) => "inmiscuimos" ;
    VP (Pres Ind Pl P2) => "inmiscuís" ;
    VP (Pres Ind Pl P3) => "inmiscuyen" ;
    VP (Pres Subj Sg P1) => "inmiscuya" ;
    VP (Pres Subj Sg P2) => "inmiscuyas" ;
    VP (Pres Subj Sg P3) => "inmiscuya" ;
    VP (Pres Subj Pl P1) => "inmiscuyamos" ;
    VP (Pres Subj Pl P2) => "inmiscuyáis" ;
    VP (Pres Subj Pl P3) => "inmiscuyan" ;
    VP (Impf Ind Sg P1) => "inmiscuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "inmiscuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "inmiscuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "inmiscuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inmiscuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inmiscuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"inmiscuyera" ; "inmiscuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"inmiscuyeras" ; "inmiscuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"inmiscuyera" ; "inmiscuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"inmiscuyéramos" ; "inmiscuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"inmiscuyerais" ; "inmiscuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"inmiscuyeran" ; "inmiscuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "inmiscuí" ;--# notpresent
    VP (Pret Sg P2) => "inmiscuiste" ;--# notpresent
    VP (Pret Sg P3) => "inmiscuyó" ;--# notpresent
    VP (Pret Pl P1) => "inmiscuimos" ;--# notpresent
    VP (Pret Pl P2) => "inmiscuisteis" ;--# notpresent
    VP (Pret Pl P3) => "inmiscuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "inmiscuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inmiscuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inmiscuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "inmiscuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "inmiscuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inmiscuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "inmiscuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "inmiscuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "inmiscuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "inmiscuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "inmiscuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "inmiscuyeren" ;--# notpresent
    VP (Cond Sg P1) => "inmiscuiría" ;--# notpresent
    VP (Cond Sg P2) => "inmiscuirías" ;--# notpresent
    VP (Cond Sg P3) => "inmiscuiría" ;--# notpresent
    VP (Cond Pl P1) => "inmiscuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "inmiscuiríais" ;--# notpresent
    VP (Cond Pl P3) => "inmiscuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inmiscuye" ;
    VP (Imp Sg P3) => "inmiscuya" ;
    VP (Imp Pl P1) => "inmiscuyamos" ;
    VP (Imp Pl P2) => "inmiscuid" ;
    VP (Imp Pl P3) => "inmiscuyan" ;
    VP (Pass Sg Masc) => "inmiscuido" ;
    VP (Pass Sg Fem) => "inmiscuida" ;
    VP (Pass Pl Masc) => "inmiscuidos" ;
    VP (Pass Pl Fem) => "inmiscuidas"
    }
  } ;

lin instituir_V = verboV 
 {s = table {
    VI Infn => "instituir" ;
    VI Ger => "instituyendo" ;
    VI Part => "instituido" ;
    VP (Pres Ind Sg P1) => "instituyo" ;
    VP (Pres Ind Sg P2) => "instituyes" ;
    VP (Pres Ind Sg P3) => "instituye" ;
    VP (Pres Ind Pl P1) => "instituimos" ;
    VP (Pres Ind Pl P2) => "instituís" ;
    VP (Pres Ind Pl P3) => "instituyen" ;
    VP (Pres Subj Sg P1) => "instituya" ;
    VP (Pres Subj Sg P2) => "instituyas" ;
    VP (Pres Subj Sg P3) => "instituya" ;
    VP (Pres Subj Pl P1) => "instituyamos" ;
    VP (Pres Subj Pl P2) => "instituyáis" ;
    VP (Pres Subj Pl P3) => "instituyan" ;
    VP (Impf Ind Sg P1) => "instituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "instituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "instituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "instituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "instituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "instituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"instituyera" ; "instituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"instituyeras" ; "instituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"instituyera" ; "instituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"instituyéramos" ; "instituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"instituyerais" ; "instituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"instituyeran" ; "instituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "instituí" ;--# notpresent
    VP (Pret Sg P2) => "instituiste" ;--# notpresent
    VP (Pret Sg P3) => "instituyó" ;--# notpresent
    VP (Pret Pl P1) => "instituimos" ;--# notpresent
    VP (Pret Pl P2) => "instituisteis" ;--# notpresent
    VP (Pret Pl P3) => "instituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "instituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "instituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "instituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "instituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "instituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "instituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "instituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "instituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "instituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "instituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "instituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "instituyeren" ;--# notpresent
    VP (Cond Sg P1) => "instituiría" ;--# notpresent
    VP (Cond Sg P2) => "instituirías" ;--# notpresent
    VP (Cond Sg P3) => "instituiría" ;--# notpresent
    VP (Cond Pl P1) => "instituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "instituiríais" ;--# notpresent
    VP (Cond Pl P3) => "instituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "instituye" ;
    VP (Imp Sg P3) => "instituya" ;
    VP (Imp Pl P1) => "instituyamos" ;
    VP (Imp Pl P2) => "instituid" ;
    VP (Imp Pl P3) => "instituyan" ;
    VP (Pass Sg Masc) => "instituido" ;
    VP (Pass Sg Fem) => "instituida" ;
    VP (Pass Pl Masc) => "instituidos" ;
    VP (Pass Pl Fem) => "instituidas"
    }
  } ;

lin instruir_V = verboV 
 {s = table {
    VI Infn => "instruir" ;
    VI Ger => "instruyendo" ;
    VI Part => "instruido" ;
    VP (Pres Ind Sg P1) => "instruyo" ;
    VP (Pres Ind Sg P2) => "instruyes" ;
    VP (Pres Ind Sg P3) => "instruye" ;
    VP (Pres Ind Pl P1) => "instruimos" ;
    VP (Pres Ind Pl P2) => "instruís" ;
    VP (Pres Ind Pl P3) => "instruyen" ;
    VP (Pres Subj Sg P1) => "instruya" ;
    VP (Pres Subj Sg P2) => "instruyas" ;
    VP (Pres Subj Sg P3) => "instruya" ;
    VP (Pres Subj Pl P1) => "instruyamos" ;
    VP (Pres Subj Pl P2) => "instruyáis" ;
    VP (Pres Subj Pl P3) => "instruyan" ;
    VP (Impf Ind Sg P1) => "instruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "instruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "instruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "instruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "instruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "instruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"instruyera" ; "instruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"instruyeras" ; "instruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"instruyera" ; "instruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"instruyéramos" ; "instruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"instruyerais" ; "instruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"instruyeran" ; "instruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "instruí" ;--# notpresent
    VP (Pret Sg P2) => "instruiste" ;--# notpresent
    VP (Pret Sg P3) => "instruyó" ;--# notpresent
    VP (Pret Pl P1) => "instruimos" ;--# notpresent
    VP (Pret Pl P2) => "instruisteis" ;--# notpresent
    VP (Pret Pl P3) => "instruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "instruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "instruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "instruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "instruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "instruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "instruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "instruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "instruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "instruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "instruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "instruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "instruyeren" ;--# notpresent
    VP (Cond Sg P1) => "instruiría" ;--# notpresent
    VP (Cond Sg P2) => "instruirías" ;--# notpresent
    VP (Cond Sg P3) => "instruiría" ;--# notpresent
    VP (Cond Pl P1) => "instruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "instruiríais" ;--# notpresent
    VP (Cond Pl P3) => "instruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "instruye" ;
    VP (Imp Sg P3) => "instruya" ;
    VP (Imp Pl P1) => "instruyamos" ;
    VP (Imp Pl P2) => "instruid" ;
    VP (Imp Pl P3) => "instruyan" ;
    VP (Pass Sg Masc) => "instruido" ;
    VP (Pass Sg Fem) => "instruida" ;
    VP (Pass Pl Masc) => "instruidos" ;
    VP (Pass Pl Fem) => "instruidas"
    }
  } ;

lin intuir_V = verboV 
 {s = table {
    VI Infn => "intuir" ;
    VI Ger => "intuyendo" ;
    VI Part => "intuido" ;
    VP (Pres Ind Sg P1) => "intuyo" ;
    VP (Pres Ind Sg P2) => "intuyes" ;
    VP (Pres Ind Sg P3) => "intuye" ;
    VP (Pres Ind Pl P1) => "intuimos" ;
    VP (Pres Ind Pl P2) => "intuís" ;
    VP (Pres Ind Pl P3) => "intuyen" ;
    VP (Pres Subj Sg P1) => "intuya" ;
    VP (Pres Subj Sg P2) => "intuyas" ;
    VP (Pres Subj Sg P3) => "intuya" ;
    VP (Pres Subj Pl P1) => "intuyamos" ;
    VP (Pres Subj Pl P2) => "intuyáis" ;
    VP (Pres Subj Pl P3) => "intuyan" ;
    VP (Impf Ind Sg P1) => "intuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "intuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "intuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "intuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "intuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "intuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"intuyera" ; "intuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"intuyeras" ; "intuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"intuyera" ; "intuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"intuyéramos" ; "intuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"intuyerais" ; "intuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"intuyeran" ; "intuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "intuí" ;--# notpresent
    VP (Pret Sg P2) => "intuiste" ;--# notpresent
    VP (Pret Sg P3) => "intuyó" ;--# notpresent
    VP (Pret Pl P1) => "intuimos" ;--# notpresent
    VP (Pret Pl P2) => "intuisteis" ;--# notpresent
    VP (Pret Pl P3) => "intuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "intuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "intuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "intuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "intuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "intuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "intuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "intuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "intuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "intuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "intuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "intuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "intuyeren" ;--# notpresent
    VP (Cond Sg P1) => "intuiría" ;--# notpresent
    VP (Cond Sg P2) => "intuirías" ;--# notpresent
    VP (Cond Sg P3) => "intuiría" ;--# notpresent
    VP (Cond Pl P1) => "intuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "intuiríais" ;--# notpresent
    VP (Cond Pl P3) => "intuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "intuye" ;
    VP (Imp Sg P3) => "intuya" ;
    VP (Imp Pl P1) => "intuyamos" ;
    VP (Imp Pl P2) => "intuid" ;
    VP (Imp Pl P3) => "intuyan" ;
    VP (Pass Sg Masc) => "intuido" ;
    VP (Pass Sg Fem) => "intuida" ;
    VP (Pass Pl Masc) => "intuidos" ;
    VP (Pass Pl Fem) => "intuidas"
    }
  } ;

lin irruir_V = verboV 
 {s = table {
    VI Infn => "irruir" ;
    VI Ger => "irruyendo" ;
    VI Part => "irruido" ;
    VP (Pres Ind Sg P1) => "irruyo" ;
    VP (Pres Ind Sg P2) => "irruyes" ;
    VP (Pres Ind Sg P3) => "irruye" ;
    VP (Pres Ind Pl P1) => "irruimos" ;
    VP (Pres Ind Pl P2) => "irruís" ;
    VP (Pres Ind Pl P3) => "irruyen" ;
    VP (Pres Subj Sg P1) => "irruya" ;
    VP (Pres Subj Sg P2) => "irruyas" ;
    VP (Pres Subj Sg P3) => "irruya" ;
    VP (Pres Subj Pl P1) => "irruyamos" ;
    VP (Pres Subj Pl P2) => "irruyáis" ;
    VP (Pres Subj Pl P3) => "irruyan" ;
    VP (Impf Ind Sg P1) => "irruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "irruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "irruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "irruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "irruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "irruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"irruyera" ; "irruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"irruyeras" ; "irruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"irruyera" ; "irruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"irruyéramos" ; "irruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"irruyerais" ; "irruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"irruyeran" ; "irruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "irruí" ;--# notpresent
    VP (Pret Sg P2) => "irruiste" ;--# notpresent
    VP (Pret Sg P3) => "irruyó" ;--# notpresent
    VP (Pret Pl P1) => "irruimos" ;--# notpresent
    VP (Pret Pl P2) => "irruisteis" ;--# notpresent
    VP (Pret Pl P3) => "irruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "irruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "irruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "irruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "irruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "irruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "irruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "irruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "irruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "irruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "irruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "irruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "irruyeren" ;--# notpresent
    VP (Cond Sg P1) => "irruiría" ;--# notpresent
    VP (Cond Sg P2) => "irruirías" ;--# notpresent
    VP (Cond Sg P3) => "irruiría" ;--# notpresent
    VP (Cond Pl P1) => "irruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "irruiríais" ;--# notpresent
    VP (Cond Pl P3) => "irruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "irruye" ;
    VP (Imp Sg P3) => "irruya" ;
    VP (Imp Pl P1) => "irruyamos" ;
    VP (Imp Pl P2) => "irruid" ;
    VP (Imp Pl P3) => "irruyan" ;
    VP (Pass Sg Masc) => "irruido" ;
    VP (Pass Sg Fem) => "irruida" ;
    VP (Pass Pl Masc) => "irruidos" ;
    VP (Pass Pl Fem) => "irruidas"
    }
  } ;

lin luir_V = verboV 
 {s = table {
    VI Infn => "luir" ;
    VI Ger => "luyendo" ;
    VI Part => "luido" ;
    VP (Pres Ind Sg P1) => "luyo" ;
    VP (Pres Ind Sg P2) => "luyes" ;
    VP (Pres Ind Sg P3) => "luye" ;
    VP (Pres Ind Pl P1) => "luimos" ;
    VP (Pres Ind Pl P2) => "luís" ;
    VP (Pres Ind Pl P3) => "luyen" ;
    VP (Pres Subj Sg P1) => "luya" ;
    VP (Pres Subj Sg P2) => "luyas" ;
    VP (Pres Subj Sg P3) => "luya" ;
    VP (Pres Subj Pl P1) => "luyamos" ;
    VP (Pres Subj Pl P2) => "luyáis" ;
    VP (Pres Subj Pl P3) => "luyan" ;
    VP (Impf Ind Sg P1) => "luía" ;--# notpresent
    VP (Impf Ind Sg P2) => "luías" ;--# notpresent
    VP (Impf Ind Sg P3) => "luía" ;--# notpresent
    VP (Impf Ind Pl P1) => "luíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "luíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "luían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"luyera" ; "luyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"luyeras" ; "luyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"luyera" ; "luyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"luyéramos" ; "luyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"luyerais" ; "luyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"luyeran" ; "luyesen"} ;--# notpresent
    VP (Pret Sg P1) => "luí" ;--# notpresent
    VP (Pret Sg P2) => "luiste" ;--# notpresent
    VP (Pret Sg P3) => "luyó" ;--# notpresent
    VP (Pret Pl P1) => "luimos" ;--# notpresent
    VP (Pret Pl P2) => "luisteis" ;--# notpresent
    VP (Pret Pl P3) => "luyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "luiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "luirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "luirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "luiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "luiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "luirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "luyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "luyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "luyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "luyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "luyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "luyeren" ;--# notpresent
    VP (Cond Sg P1) => "luiría" ;--# notpresent
    VP (Cond Sg P2) => "luirías" ;--# notpresent
    VP (Cond Sg P3) => "luiría" ;--# notpresent
    VP (Cond Pl P1) => "luiríamos" ;--# notpresent
    VP (Cond Pl P2) => "luiríais" ;--# notpresent
    VP (Cond Pl P3) => "luirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "luye" ;
    VP (Imp Sg P3) => "luya" ;
    VP (Imp Pl P1) => "luyamos" ;
    VP (Imp Pl P2) => "luid" ;
    VP (Imp Pl P3) => "luyan" ;
    VP (Pass Sg Masc) => "luido" ;
    VP (Pass Sg Fem) => "luida" ;
    VP (Pass Pl Masc) => "luidos" ;
    VP (Pass Pl Fem) => "luidas"
    }
  } ;

lin obstruir_V = verboV 
 {s = table {
    VI Infn => "obstruir" ;
    VI Ger => "obstruyendo" ;
    VI Part => "obstruido" ;
    VP (Pres Ind Sg P1) => "obstruyo" ;
    VP (Pres Ind Sg P2) => "obstruyes" ;
    VP (Pres Ind Sg P3) => "obstruye" ;
    VP (Pres Ind Pl P1) => "obstruimos" ;
    VP (Pres Ind Pl P2) => "obstruís" ;
    VP (Pres Ind Pl P3) => "obstruyen" ;
    VP (Pres Subj Sg P1) => "obstruya" ;
    VP (Pres Subj Sg P2) => "obstruyas" ;
    VP (Pres Subj Sg P3) => "obstruya" ;
    VP (Pres Subj Pl P1) => "obstruyamos" ;
    VP (Pres Subj Pl P2) => "obstruyáis" ;
    VP (Pres Subj Pl P3) => "obstruyan" ;
    VP (Impf Ind Sg P1) => "obstruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "obstruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "obstruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "obstruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "obstruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "obstruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"obstruyera" ; "obstruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"obstruyeras" ; "obstruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"obstruyera" ; "obstruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"obstruyéramos" ; "obstruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"obstruyerais" ; "obstruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"obstruyeran" ; "obstruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "obstruí" ;--# notpresent
    VP (Pret Sg P2) => "obstruiste" ;--# notpresent
    VP (Pret Sg P3) => "obstruyó" ;--# notpresent
    VP (Pret Pl P1) => "obstruimos" ;--# notpresent
    VP (Pret Pl P2) => "obstruisteis" ;--# notpresent
    VP (Pret Pl P3) => "obstruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "obstruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "obstruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "obstruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "obstruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "obstruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "obstruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "obstruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "obstruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "obstruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "obstruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "obstruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "obstruyeren" ;--# notpresent
    VP (Cond Sg P1) => "obstruiría" ;--# notpresent
    VP (Cond Sg P2) => "obstruirías" ;--# notpresent
    VP (Cond Sg P3) => "obstruiría" ;--# notpresent
    VP (Cond Pl P1) => "obstruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "obstruiríais" ;--# notpresent
    VP (Cond Pl P3) => "obstruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "obstruye" ;
    VP (Imp Sg P3) => "obstruya" ;
    VP (Imp Pl P1) => "obstruyamos" ;
    VP (Imp Pl P2) => "obstruid" ;
    VP (Imp Pl P3) => "obstruyan" ;
    VP (Pass Sg Masc) => "obstruido" ;
    VP (Pass Sg Fem) => "obstruida" ;
    VP (Pass Pl Masc) => "obstruidos" ;
    VP (Pass Pl Fem) => "obstruidas"
    }
  } ;

lin ocluir_V = verboV 
 {s = table {
    VI Infn => "ocluir" ;
    VI Ger => "ocluyendo" ;
    VI Part => "ocluido" ;
    VP (Pres Ind Sg P1) => "ocluyo" ;
    VP (Pres Ind Sg P2) => "ocluyes" ;
    VP (Pres Ind Sg P3) => "ocluye" ;
    VP (Pres Ind Pl P1) => "ocluimos" ;
    VP (Pres Ind Pl P2) => "ocluís" ;
    VP (Pres Ind Pl P3) => "ocluyen" ;
    VP (Pres Subj Sg P1) => "ocluya" ;
    VP (Pres Subj Sg P2) => "ocluyas" ;
    VP (Pres Subj Sg P3) => "ocluya" ;
    VP (Pres Subj Pl P1) => "ocluyamos" ;
    VP (Pres Subj Pl P2) => "ocluyáis" ;
    VP (Pres Subj Pl P3) => "ocluyan" ;
    VP (Impf Ind Sg P1) => "ocluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ocluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ocluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ocluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ocluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ocluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ocluyera" ; "ocluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ocluyeras" ; "ocluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ocluyera" ; "ocluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ocluyéramos" ; "ocluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ocluyerais" ; "ocluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ocluyeran" ; "ocluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "ocluí" ;--# notpresent
    VP (Pret Sg P2) => "ocluiste" ;--# notpresent
    VP (Pret Sg P3) => "ocluyó" ;--# notpresent
    VP (Pret Pl P1) => "ocluimos" ;--# notpresent
    VP (Pret Pl P2) => "ocluisteis" ;--# notpresent
    VP (Pret Pl P3) => "ocluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ocluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ocluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ocluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ocluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ocluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ocluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ocluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ocluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ocluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ocluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ocluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ocluyeren" ;--# notpresent
    VP (Cond Sg P1) => "ocluiría" ;--# notpresent
    VP (Cond Sg P2) => "ocluirías" ;--# notpresent
    VP (Cond Sg P3) => "ocluiría" ;--# notpresent
    VP (Cond Pl P1) => "ocluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "ocluiríais" ;--# notpresent
    VP (Cond Pl P3) => "ocluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ocluye" ;
    VP (Imp Sg P3) => "ocluya" ;
    VP (Imp Pl P1) => "ocluyamos" ;
    VP (Imp Pl P2) => "ocluid" ;
    VP (Imp Pl P3) => "ocluyan" ;
    VP (Pass Sg Masc) => "ocluido" ;
    VP (Pass Sg Fem) => "ocluida" ;
    VP (Pass Pl Masc) => "ocluidos" ;
    VP (Pass Pl Fem) => "ocluidas"
    }
  } ;

lin prostituir_V = verboV 
 {s = table {
    VI Infn => "prostituir" ;
    VI Ger => "prostituyendo" ;
    VI Part => "prostituido" ;
    VP (Pres Ind Sg P1) => "prostituyo" ;
    VP (Pres Ind Sg P2) => "prostituyes" ;
    VP (Pres Ind Sg P3) => "prostituye" ;
    VP (Pres Ind Pl P1) => "prostituimos" ;
    VP (Pres Ind Pl P2) => "prostituís" ;
    VP (Pres Ind Pl P3) => "prostituyen" ;
    VP (Pres Subj Sg P1) => "prostituya" ;
    VP (Pres Subj Sg P2) => "prostituyas" ;
    VP (Pres Subj Sg P3) => "prostituya" ;
    VP (Pres Subj Pl P1) => "prostituyamos" ;
    VP (Pres Subj Pl P2) => "prostituyáis" ;
    VP (Pres Subj Pl P3) => "prostituyan" ;
    VP (Impf Ind Sg P1) => "prostituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prostituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prostituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prostituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prostituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prostituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prostituyera" ; "prostituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prostituyeras" ; "prostituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prostituyera" ; "prostituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prostituyéramos" ; "prostituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prostituyerais" ; "prostituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prostituyeran" ; "prostituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "prostituí" ;--# notpresent
    VP (Pret Sg P2) => "prostituiste" ;--# notpresent
    VP (Pret Sg P3) => "prostituyó" ;--# notpresent
    VP (Pret Pl P1) => "prostituimos" ;--# notpresent
    VP (Pret Pl P2) => "prostituisteis" ;--# notpresent
    VP (Pret Pl P3) => "prostituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prostituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prostituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prostituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prostituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prostituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prostituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prostituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prostituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prostituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prostituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prostituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prostituyeren" ;--# notpresent
    VP (Cond Sg P1) => "prostituiría" ;--# notpresent
    VP (Cond Sg P2) => "prostituirías" ;--# notpresent
    VP (Cond Sg P3) => "prostituiría" ;--# notpresent
    VP (Cond Pl P1) => "prostituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "prostituiríais" ;--# notpresent
    VP (Cond Pl P3) => "prostituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prostituye" ;
    VP (Imp Sg P3) => "prostituya" ;
    VP (Imp Pl P1) => "prostituyamos" ;
    VP (Imp Pl P2) => "prostituid" ;
    VP (Imp Pl P3) => "prostituyan" ;
    VP (Pass Sg Masc) => "prostituido" ;
    VP (Pass Sg Fem) => "prostituida" ;
    VP (Pass Pl Masc) => "prostituidos" ;
    VP (Pass Pl Fem) => "prostituidas"
    }
  } ;

lin reargüir_V = verboV 
 {s = table {
    VI Infn => "reargüir" ;
    VI Ger => "reargüyendo" ;
    VI Part => "reargüido" ;
    VP (Pres Ind Sg P1) => "reargüyo" ;
    VP (Pres Ind Sg P2) => "reargüyes" ;
    VP (Pres Ind Sg P3) => "reargüye" ;
    VP (Pres Ind Pl P1) => "reargüimos" ;
    VP (Pres Ind Pl P2) => "reargüís" ;
    VP (Pres Ind Pl P3) => "reargüyen" ;
    VP (Pres Subj Sg P1) => "reargüya" ;
    VP (Pres Subj Sg P2) => "reargüyas" ;
    VP (Pres Subj Sg P3) => "reargüya" ;
    VP (Pres Subj Pl P1) => "reargüyamos" ;
    VP (Pres Subj Pl P2) => "reargüyáis" ;
    VP (Pres Subj Pl P3) => "reargüyan" ;
    VP (Impf Ind Sg P1) => "reargüía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reargüías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reargüía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reargüíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reargüíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reargüían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reargüyera" ; "reargüyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reargüyeras" ; "reargüyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reargüyera" ; "reargüyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reargüyéramos" ; "reargüyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reargüyerais" ; "reargüyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reargüyeran" ; "reargüyesen"} ;--# notpresent
    VP (Pret Sg P1) => "reargüí" ;--# notpresent
    VP (Pret Sg P2) => "reargüiste" ;--# notpresent
    VP (Pret Sg P3) => "reargüyó" ;--# notpresent
    VP (Pret Pl P1) => "reargüimos" ;--# notpresent
    VP (Pret Pl P2) => "reargüisteis" ;--# notpresent
    VP (Pret Pl P3) => "reargüyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reargüiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reargüirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reargüirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reargüiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reargüiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reargüirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reargüyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reargüyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reargüyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reargüyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reargüyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reargüyeren" ;--# notpresent
    VP (Cond Sg P1) => "reargüiría" ;--# notpresent
    VP (Cond Sg P2) => "reargüirías" ;--# notpresent
    VP (Cond Sg P3) => "reargüiría" ;--# notpresent
    VP (Cond Pl P1) => "reargüiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reargüiríais" ;--# notpresent
    VP (Cond Pl P3) => "reargüirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reargüye" ;
    VP (Imp Sg P3) => "reargüya" ;
    VP (Imp Pl P1) => "reargüyamos" ;
    VP (Imp Pl P2) => "reargüid" ;
    VP (Imp Pl P3) => "reargüyan" ;
    VP (Pass Sg Masc) => "reargüido" ;
    VP (Pass Sg Fem) => "reargüida" ;
    VP (Pass Pl Masc) => "reargüidos" ;
    VP (Pass Pl Fem) => "reargüidas"
    }
  } ;

lin recluir_V = verboV 
 {s = table {
    VI Infn => "recluir" ;
    VI Ger => "recluyendo" ;
    VI Part => "recluido" ;
    VP (Pres Ind Sg P1) => "recluyo" ;
    VP (Pres Ind Sg P2) => "recluyes" ;
    VP (Pres Ind Sg P3) => "recluye" ;
    VP (Pres Ind Pl P1) => "recluimos" ;
    VP (Pres Ind Pl P2) => "recluís" ;
    VP (Pres Ind Pl P3) => "recluyen" ;
    VP (Pres Subj Sg P1) => "recluya" ;
    VP (Pres Subj Sg P2) => "recluyas" ;
    VP (Pres Subj Sg P3) => "recluya" ;
    VP (Pres Subj Pl P1) => "recluyamos" ;
    VP (Pres Subj Pl P2) => "recluyáis" ;
    VP (Pres Subj Pl P3) => "recluyan" ;
    VP (Impf Ind Sg P1) => "recluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "recluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "recluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "recluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "recluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "recluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recluyera" ; "recluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recluyeras" ; "recluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recluyera" ; "recluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recluyéramos" ; "recluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recluyerais" ; "recluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recluyeran" ; "recluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "recluí" ;--# notpresent
    VP (Pret Sg P2) => "recluiste" ;--# notpresent
    VP (Pret Sg P3) => "recluyó" ;--# notpresent
    VP (Pret Pl P1) => "recluimos" ;--# notpresent
    VP (Pret Pl P2) => "recluisteis" ;--# notpresent
    VP (Pret Pl P3) => "recluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "recluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "recluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "recluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "recluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "recluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "recluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recluyeren" ;--# notpresent
    VP (Cond Sg P1) => "recluiría" ;--# notpresent
    VP (Cond Sg P2) => "recluirías" ;--# notpresent
    VP (Cond Sg P3) => "recluiría" ;--# notpresent
    VP (Cond Pl P1) => "recluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "recluiríais" ;--# notpresent
    VP (Cond Pl P3) => "recluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "recluye" ;
    VP (Imp Sg P3) => "recluya" ;
    VP (Imp Pl P1) => "recluyamos" ;
    VP (Imp Pl P2) => "recluid" ;
    VP (Imp Pl P3) => "recluyan" ;
    VP (Pass Sg Masc) => "recluido" ;
    VP (Pass Sg Fem) => "recluida" ;
    VP (Pass Pl Masc) => "recluidos" ;
    VP (Pass Pl Fem) => "recluidas"
    }
  } ;

lin reconstituir_V = verboV 
 {s = table {
    VI Infn => "reconstituir" ;
    VI Ger => "reconstituyendo" ;
    VI Part => "reconstituido" ;
    VP (Pres Ind Sg P1) => "reconstituyo" ;
    VP (Pres Ind Sg P2) => "reconstituyes" ;
    VP (Pres Ind Sg P3) => "reconstituye" ;
    VP (Pres Ind Pl P1) => "reconstituimos" ;
    VP (Pres Ind Pl P2) => "reconstituís" ;
    VP (Pres Ind Pl P3) => "reconstituyen" ;
    VP (Pres Subj Sg P1) => "reconstituya" ;
    VP (Pres Subj Sg P2) => "reconstituyas" ;
    VP (Pres Subj Sg P3) => "reconstituya" ;
    VP (Pres Subj Pl P1) => "reconstituyamos" ;
    VP (Pres Subj Pl P2) => "reconstituyáis" ;
    VP (Pres Subj Pl P3) => "reconstituyan" ;
    VP (Impf Ind Sg P1) => "reconstituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconstituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconstituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconstituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconstituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconstituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reconstituyera" ; "reconstituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reconstituyeras" ; "reconstituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reconstituyera" ; "reconstituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reconstituyéramos" ; "reconstituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reconstituyerais" ; "reconstituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reconstituyeran" ; "reconstituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconstituí" ;--# notpresent
    VP (Pret Sg P2) => "reconstituiste" ;--# notpresent
    VP (Pret Sg P3) => "reconstituyó" ;--# notpresent
    VP (Pret Pl P1) => "reconstituimos" ;--# notpresent
    VP (Pret Pl P2) => "reconstituisteis" ;--# notpresent
    VP (Pret Pl P3) => "reconstituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconstituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconstituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconstituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconstituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconstituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconstituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reconstituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reconstituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reconstituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reconstituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reconstituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reconstituyeren" ;--# notpresent
    VP (Cond Sg P1) => "reconstituiría" ;--# notpresent
    VP (Cond Sg P2) => "reconstituirías" ;--# notpresent
    VP (Cond Sg P3) => "reconstituiría" ;--# notpresent
    VP (Cond Pl P1) => "reconstituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconstituiríais" ;--# notpresent
    VP (Cond Pl P3) => "reconstituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconstituye" ;
    VP (Imp Sg P3) => "reconstituya" ;
    VP (Imp Pl P1) => "reconstituyamos" ;
    VP (Imp Pl P2) => "reconstituid" ;
    VP (Imp Pl P3) => "reconstituyan" ;
    VP (Pass Sg Masc) => "reconstituido" ;
    VP (Pass Sg Fem) => "reconstituida" ;
    VP (Pass Pl Masc) => "reconstituidos" ;
    VP (Pass Pl Fem) => "reconstituidas"
    }
  } ;

lin reconstruir_V = verboV 
 {s = table {
    VI Infn => "reconstruir" ;
    VI Ger => "reconstruyendo" ;
    VI Part => "reconstruido" ;
    VP (Pres Ind Sg P1) => "reconstruyo" ;
    VP (Pres Ind Sg P2) => "reconstruyes" ;
    VP (Pres Ind Sg P3) => "reconstruye" ;
    VP (Pres Ind Pl P1) => "reconstruimos" ;
    VP (Pres Ind Pl P2) => "reconstruís" ;
    VP (Pres Ind Pl P3) => "reconstruyen" ;
    VP (Pres Subj Sg P1) => "reconstruya" ;
    VP (Pres Subj Sg P2) => "reconstruyas" ;
    VP (Pres Subj Sg P3) => "reconstruya" ;
    VP (Pres Subj Pl P1) => "reconstruyamos" ;
    VP (Pres Subj Pl P2) => "reconstruyáis" ;
    VP (Pres Subj Pl P3) => "reconstruyan" ;
    VP (Impf Ind Sg P1) => "reconstruía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconstruías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconstruía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconstruíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconstruíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconstruían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reconstruyera" ; "reconstruyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reconstruyeras" ; "reconstruyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reconstruyera" ; "reconstruyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reconstruyéramos" ; "reconstruyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reconstruyerais" ; "reconstruyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reconstruyeran" ; "reconstruyesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconstruí" ;--# notpresent
    VP (Pret Sg P2) => "reconstruiste" ;--# notpresent
    VP (Pret Sg P3) => "reconstruyó" ;--# notpresent
    VP (Pret Pl P1) => "reconstruimos" ;--# notpresent
    VP (Pret Pl P2) => "reconstruisteis" ;--# notpresent
    VP (Pret Pl P3) => "reconstruyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconstruiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconstruirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconstruirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconstruiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconstruiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconstruirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reconstruyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reconstruyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reconstruyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reconstruyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reconstruyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reconstruyeren" ;--# notpresent
    VP (Cond Sg P1) => "reconstruiría" ;--# notpresent
    VP (Cond Sg P2) => "reconstruirías" ;--# notpresent
    VP (Cond Sg P3) => "reconstruiría" ;--# notpresent
    VP (Cond Pl P1) => "reconstruiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconstruiríais" ;--# notpresent
    VP (Cond Pl P3) => "reconstruirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconstruye" ;
    VP (Imp Sg P3) => "reconstruya" ;
    VP (Imp Pl P1) => "reconstruyamos" ;
    VP (Imp Pl P2) => "reconstruid" ;
    VP (Imp Pl P3) => "reconstruyan" ;
    VP (Pass Sg Masc) => "reconstruido" ;
    VP (Pass Sg Fem) => "reconstruida" ;
    VP (Pass Pl Masc) => "reconstruidos" ;
    VP (Pass Pl Fem) => "reconstruidas"
    }
  } ;

lin redargüir_V = verboV 
 {s = table {
    VI Infn => "redargüir" ;
    VI Ger => "redargüyendo" ;
    VI Part => "redargüido" ;
    VP (Pres Ind Sg P1) => "redargüyo" ;
    VP (Pres Ind Sg P2) => "redargüyes" ;
    VP (Pres Ind Sg P3) => "redargüye" ;
    VP (Pres Ind Pl P1) => "redargüimos" ;
    VP (Pres Ind Pl P2) => "redargüís" ;
    VP (Pres Ind Pl P3) => "redargüyen" ;
    VP (Pres Subj Sg P1) => "redargüya" ;
    VP (Pres Subj Sg P2) => "redargüyas" ;
    VP (Pres Subj Sg P3) => "redargüya" ;
    VP (Pres Subj Pl P1) => "redargüyamos" ;
    VP (Pres Subj Pl P2) => "redargüyáis" ;
    VP (Pres Subj Pl P3) => "redargüyan" ;
    VP (Impf Ind Sg P1) => "redargüía" ;--# notpresent
    VP (Impf Ind Sg P2) => "redargüías" ;--# notpresent
    VP (Impf Ind Sg P3) => "redargüía" ;--# notpresent
    VP (Impf Ind Pl P1) => "redargüíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "redargüíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "redargüían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"redargüyera" ; "redargüyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"redargüyeras" ; "redargüyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"redargüyera" ; "redargüyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"redargüyéramos" ; "redargüyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"redargüyerais" ; "redargüyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"redargüyeran" ; "redargüyesen"} ;--# notpresent
    VP (Pret Sg P1) => "redargüí" ;--# notpresent
    VP (Pret Sg P2) => "redargüiste" ;--# notpresent
    VP (Pret Sg P3) => "redargüyó" ;--# notpresent
    VP (Pret Pl P1) => "redargüimos" ;--# notpresent
    VP (Pret Pl P2) => "redargüisteis" ;--# notpresent
    VP (Pret Pl P3) => "redargüyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "redargüiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "redargüirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "redargüirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "redargüiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "redargüiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "redargüirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "redargüyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "redargüyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "redargüyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "redargüyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "redargüyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "redargüyeren" ;--# notpresent
    VP (Cond Sg P1) => "redargüiría" ;--# notpresent
    VP (Cond Sg P2) => "redargüirías" ;--# notpresent
    VP (Cond Sg P3) => "redargüiría" ;--# notpresent
    VP (Cond Pl P1) => "redargüiríamos" ;--# notpresent
    VP (Cond Pl P2) => "redargüiríais" ;--# notpresent
    VP (Cond Pl P3) => "redargüirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "redargüye" ;
    VP (Imp Sg P3) => "redargüya" ;
    VP (Imp Pl P1) => "redargüyamos" ;
    VP (Imp Pl P2) => "redargüid" ;
    VP (Imp Pl P3) => "redargüyan" ;
    VP (Pass Sg Masc) => "redargüido" ;
    VP (Pass Sg Fem) => "redargüida" ;
    VP (Pass Pl Masc) => "redargüidos" ;
    VP (Pass Pl Fem) => "redargüidas"
    }
  } ;

lin redistribuir_V = verboV 
 {s = table {
    VI Infn => "redistribuir" ;
    VI Ger => "redistribuyendo" ;
    VI Part => "redistribuido" ;
    VP (Pres Ind Sg P1) => "redistribuyo" ;
    VP (Pres Ind Sg P2) => "redistribuyes" ;
    VP (Pres Ind Sg P3) => "redistribuye" ;
    VP (Pres Ind Pl P1) => "redistribuimos" ;
    VP (Pres Ind Pl P2) => "redistribuís" ;
    VP (Pres Ind Pl P3) => "redistribuyen" ;
    VP (Pres Subj Sg P1) => "redistribuya" ;
    VP (Pres Subj Sg P2) => "redistribuyas" ;
    VP (Pres Subj Sg P3) => "redistribuya" ;
    VP (Pres Subj Pl P1) => "redistribuyamos" ;
    VP (Pres Subj Pl P2) => "redistribuyáis" ;
    VP (Pres Subj Pl P3) => "redistribuyan" ;
    VP (Impf Ind Sg P1) => "redistribuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "redistribuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "redistribuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "redistribuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "redistribuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "redistribuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"redistribuyera" ; "redistribuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"redistribuyeras" ; "redistribuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"redistribuyera" ; "redistribuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"redistribuyéramos" ; "redistribuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"redistribuyerais" ; "redistribuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"redistribuyeran" ; "redistribuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "redistribuí" ;--# notpresent
    VP (Pret Sg P2) => "redistribuiste" ;--# notpresent
    VP (Pret Sg P3) => "redistribuyó" ;--# notpresent
    VP (Pret Pl P1) => "redistribuimos" ;--# notpresent
    VP (Pret Pl P2) => "redistribuisteis" ;--# notpresent
    VP (Pret Pl P3) => "redistribuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "redistribuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "redistribuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "redistribuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "redistribuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "redistribuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "redistribuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "redistribuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "redistribuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "redistribuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "redistribuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "redistribuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "redistribuyeren" ;--# notpresent
    VP (Cond Sg P1) => "redistribuiría" ;--# notpresent
    VP (Cond Sg P2) => "redistribuirías" ;--# notpresent
    VP (Cond Sg P3) => "redistribuiría" ;--# notpresent
    VP (Cond Pl P1) => "redistribuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "redistribuiríais" ;--# notpresent
    VP (Cond Pl P3) => "redistribuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "redistribuye" ;
    VP (Imp Sg P3) => "redistribuya" ;
    VP (Imp Pl P1) => "redistribuyamos" ;
    VP (Imp Pl P2) => "redistribuid" ;
    VP (Imp Pl P3) => "redistribuyan" ;
    VP (Pass Sg Masc) => "redistribuido" ;
    VP (Pass Sg Fem) => "redistribuida" ;
    VP (Pass Pl Masc) => "redistribuidos" ;
    VP (Pass Pl Fem) => "redistribuidas"
    }
  } ;

lin refluir_V = verboV 
 {s = table {
    VI Infn => "refluir" ;
    VI Ger => "refluyendo" ;
    VI Part => "refluido" ;
    VP (Pres Ind Sg P1) => "refluyo" ;
    VP (Pres Ind Sg P2) => "refluyes" ;
    VP (Pres Ind Sg P3) => "refluye" ;
    VP (Pres Ind Pl P1) => "refluimos" ;
    VP (Pres Ind Pl P2) => "refluís" ;
    VP (Pres Ind Pl P3) => "refluyen" ;
    VP (Pres Subj Sg P1) => "refluya" ;
    VP (Pres Subj Sg P2) => "refluyas" ;
    VP (Pres Subj Sg P3) => "refluya" ;
    VP (Pres Subj Pl P1) => "refluyamos" ;
    VP (Pres Subj Pl P2) => "refluyáis" ;
    VP (Pres Subj Pl P3) => "refluyan" ;
    VP (Impf Ind Sg P1) => "refluía" ;--# notpresent
    VP (Impf Ind Sg P2) => "refluías" ;--# notpresent
    VP (Impf Ind Sg P3) => "refluía" ;--# notpresent
    VP (Impf Ind Pl P1) => "refluíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "refluíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "refluían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refluyera" ; "refluyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"refluyeras" ; "refluyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refluyera" ; "refluyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refluyéramos" ; "refluyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"refluyerais" ; "refluyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"refluyeran" ; "refluyesen"} ;--# notpresent
    VP (Pret Sg P1) => "refluí" ;--# notpresent
    VP (Pret Sg P2) => "refluiste" ;--# notpresent
    VP (Pret Sg P3) => "refluyó" ;--# notpresent
    VP (Pret Pl P1) => "refluimos" ;--# notpresent
    VP (Pret Pl P2) => "refluisteis" ;--# notpresent
    VP (Pret Pl P3) => "refluyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "refluiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "refluirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "refluirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "refluiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "refluiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "refluirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refluyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "refluyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "refluyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "refluyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refluyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "refluyeren" ;--# notpresent
    VP (Cond Sg P1) => "refluiría" ;--# notpresent
    VP (Cond Sg P2) => "refluirías" ;--# notpresent
    VP (Cond Sg P3) => "refluiría" ;--# notpresent
    VP (Cond Pl P1) => "refluiríamos" ;--# notpresent
    VP (Cond Pl P2) => "refluiríais" ;--# notpresent
    VP (Cond Pl P3) => "refluirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refluye" ;
    VP (Imp Sg P3) => "refluya" ;
    VP (Imp Pl P1) => "refluyamos" ;
    VP (Imp Pl P2) => "refluid" ;
    VP (Imp Pl P3) => "refluyan" ;
    VP (Pass Sg Masc) => "refluido" ;
    VP (Pass Sg Fem) => "refluida" ;
    VP (Pass Pl Masc) => "refluidos" ;
    VP (Pass Pl Fem) => "refluidas"
    }
  } ;

lin rehuir_V = verboV 
 {s = table {
    VI Infn => "rehuir" ;
    VI Ger => "rehuyendo" ;
    VI Part => "rehuido" ;
    VP (Pres Ind Sg P1) => "rehuyo" ;
    VP (Pres Ind Sg P2) => "rehuyes" ;
    VP (Pres Ind Sg P3) => "rehuye" ;
    VP (Pres Ind Pl P1) => "rehuimos" ;
    VP (Pres Ind Pl P2) => "rehuís" ;
    VP (Pres Ind Pl P3) => "rehuyen" ;
    VP (Pres Subj Sg P1) => "rehuya" ;
    VP (Pres Subj Sg P2) => "rehuyas" ;
    VP (Pres Subj Sg P3) => "rehuya" ;
    VP (Pres Subj Pl P1) => "rehuyamos" ;
    VP (Pres Subj Pl P2) => "rehuyáis" ;
    VP (Pres Subj Pl P3) => "rehuyan" ;
    VP (Impf Ind Sg P1) => "rehuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rehuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rehuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rehuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rehuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehuyera" ; "rehuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehuyeras" ; "rehuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehuyera" ; "rehuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rehuyéramos" ; "rehuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehuyerais" ; "rehuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehuyeran" ; "rehuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "rehuí" ;--# notpresent
    VP (Pret Sg P2) => "rehuiste" ;--# notpresent
    VP (Pret Sg P3) => "rehuyó" ;--# notpresent
    VP (Pret Pl P1) => "rehuimos" ;--# notpresent
    VP (Pret Pl P2) => "rehuisteis" ;--# notpresent
    VP (Pret Pl P3) => "rehuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rehuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rehuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rehuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rehuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rehuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rehuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rehuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehuyeren" ;--# notpresent
    VP (Cond Sg P1) => "rehuiría" ;--# notpresent
    VP (Cond Sg P2) => "rehuirías" ;--# notpresent
    VP (Cond Sg P3) => "rehuiría" ;--# notpresent
    VP (Cond Pl P1) => "rehuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "rehuiríais" ;--# notpresent
    VP (Cond Pl P3) => "rehuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehuye" ;
    VP (Imp Sg P3) => "rehuya" ;
    VP (Imp Pl P1) => "rehuyamos" ;
    VP (Imp Pl P2) => "rehuid" ;
    VP (Imp Pl P3) => "rehuyan" ;
    VP (Pass Sg Masc) => "rehuido" ;
    VP (Pass Sg Fem) => "rehuida" ;
    VP (Pass Pl Masc) => "rehuidos" ;
    VP (Pass Pl Fem) => "rehuidas"
    }
  } ;

lin restituir_V = verboV 
 {s = table {
    VI Infn => "restituir" ;
    VI Ger => "restituyendo" ;
    VI Part => "restituido" ;
    VP (Pres Ind Sg P1) => "restituyo" ;
    VP (Pres Ind Sg P2) => "restituyes" ;
    VP (Pres Ind Sg P3) => "restituye" ;
    VP (Pres Ind Pl P1) => "restituimos" ;
    VP (Pres Ind Pl P2) => "restituís" ;
    VP (Pres Ind Pl P3) => "restituyen" ;
    VP (Pres Subj Sg P1) => "restituya" ;
    VP (Pres Subj Sg P2) => "restituyas" ;
    VP (Pres Subj Sg P3) => "restituya" ;
    VP (Pres Subj Pl P1) => "restituyamos" ;
    VP (Pres Subj Pl P2) => "restituyáis" ;
    VP (Pres Subj Pl P3) => "restituyan" ;
    VP (Impf Ind Sg P1) => "restituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "restituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "restituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "restituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "restituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "restituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"restituyera" ; "restituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"restituyeras" ; "restituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"restituyera" ; "restituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"restituyéramos" ; "restituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"restituyerais" ; "restituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"restituyeran" ; "restituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "restituí" ;--# notpresent
    VP (Pret Sg P2) => "restituiste" ;--# notpresent
    VP (Pret Sg P3) => "restituyó" ;--# notpresent
    VP (Pret Pl P1) => "restituimos" ;--# notpresent
    VP (Pret Pl P2) => "restituisteis" ;--# notpresent
    VP (Pret Pl P3) => "restituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "restituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "restituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "restituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "restituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "restituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "restituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "restituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "restituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "restituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "restituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "restituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "restituyeren" ;--# notpresent
    VP (Cond Sg P1) => "restituiría" ;--# notpresent
    VP (Cond Sg P2) => "restituirías" ;--# notpresent
    VP (Cond Sg P3) => "restituiría" ;--# notpresent
    VP (Cond Pl P1) => "restituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "restituiríais" ;--# notpresent
    VP (Cond Pl P3) => "restituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "restituye" ;
    VP (Imp Sg P3) => "restituya" ;
    VP (Imp Pl P1) => "restituyamos" ;
    VP (Imp Pl P2) => "restituid" ;
    VP (Imp Pl P3) => "restituyan" ;
    VP (Pass Sg Masc) => "restituido" ;
    VP (Pass Sg Fem) => "restituida" ;
    VP (Pass Pl Masc) => "restituidos" ;
    VP (Pass Pl Fem) => "restituidas"
    }
  } ;

lin retribuir_V = verboV 
 {s = table {
    VI Infn => "retribuir" ;
    VI Ger => "retribuyendo" ;
    VI Part => "retribuido" ;
    VP (Pres Ind Sg P1) => "retribuyo" ;
    VP (Pres Ind Sg P2) => "retribuyes" ;
    VP (Pres Ind Sg P3) => "retribuye" ;
    VP (Pres Ind Pl P1) => "retribuimos" ;
    VP (Pres Ind Pl P2) => "retribuís" ;
    VP (Pres Ind Pl P3) => "retribuyen" ;
    VP (Pres Subj Sg P1) => "retribuya" ;
    VP (Pres Subj Sg P2) => "retribuyas" ;
    VP (Pres Subj Sg P3) => "retribuya" ;
    VP (Pres Subj Pl P1) => "retribuyamos" ;
    VP (Pres Subj Pl P2) => "retribuyáis" ;
    VP (Pres Subj Pl P3) => "retribuyan" ;
    VP (Impf Ind Sg P1) => "retribuía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retribuías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retribuía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retribuíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retribuíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retribuían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retribuyera" ; "retribuyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retribuyeras" ; "retribuyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retribuyera" ; "retribuyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retribuyéramos" ; "retribuyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retribuyerais" ; "retribuyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retribuyeran" ; "retribuyesen"} ;--# notpresent
    VP (Pret Sg P1) => "retribuí" ;--# notpresent
    VP (Pret Sg P2) => "retribuiste" ;--# notpresent
    VP (Pret Sg P3) => "retribuyó" ;--# notpresent
    VP (Pret Pl P1) => "retribuimos" ;--# notpresent
    VP (Pret Pl P2) => "retribuisteis" ;--# notpresent
    VP (Pret Pl P3) => "retribuyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retribuiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retribuirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retribuirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retribuiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retribuiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retribuirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retribuyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retribuyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retribuyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retribuyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retribuyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retribuyeren" ;--# notpresent
    VP (Cond Sg P1) => "retribuiría" ;--# notpresent
    VP (Cond Sg P2) => "retribuirías" ;--# notpresent
    VP (Cond Sg P3) => "retribuiría" ;--# notpresent
    VP (Cond Pl P1) => "retribuiríamos" ;--# notpresent
    VP (Cond Pl P2) => "retribuiríais" ;--# notpresent
    VP (Cond Pl P3) => "retribuirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retribuye" ;
    VP (Imp Sg P3) => "retribuya" ;
    VP (Imp Pl P1) => "retribuyamos" ;
    VP (Imp Pl P2) => "retribuid" ;
    VP (Imp Pl P3) => "retribuyan" ;
    VP (Pass Sg Masc) => "retribuido" ;
    VP (Pass Sg Fem) => "retribuida" ;
    VP (Pass Pl Masc) => "retribuidos" ;
    VP (Pass Pl Fem) => "retribuidas"
    }
  } ;

lin substituir_V = verboV 
 {s = table {
    VI Infn => "substituir" ;
    VI Ger => "substituyendo" ;
    VI Part => "substituido" ;
    VP (Pres Ind Sg P1) => "substituyo" ;
    VP (Pres Ind Sg P2) => "substituyes" ;
    VP (Pres Ind Sg P3) => "substituye" ;
    VP (Pres Ind Pl P1) => "substituimos" ;
    VP (Pres Ind Pl P2) => "substituís" ;
    VP (Pres Ind Pl P3) => "substituyen" ;
    VP (Pres Subj Sg P1) => "substituya" ;
    VP (Pres Subj Sg P2) => "substituyas" ;
    VP (Pres Subj Sg P3) => "substituya" ;
    VP (Pres Subj Pl P1) => "substituyamos" ;
    VP (Pres Subj Pl P2) => "substituyáis" ;
    VP (Pres Subj Pl P3) => "substituyan" ;
    VP (Impf Ind Sg P1) => "substituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "substituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "substituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "substituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "substituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "substituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"substituyera" ; "substituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"substituyeras" ; "substituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"substituyera" ; "substituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"substituyéramos" ; "substituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"substituyerais" ; "substituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"substituyeran" ; "substituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "substituí" ;--# notpresent
    VP (Pret Sg P2) => "substituiste" ;--# notpresent
    VP (Pret Sg P3) => "substituyó" ;--# notpresent
    VP (Pret Pl P1) => "substituimos" ;--# notpresent
    VP (Pret Pl P2) => "substituisteis" ;--# notpresent
    VP (Pret Pl P3) => "substituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "substituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "substituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "substituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "substituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "substituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "substituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "substituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "substituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "substituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "substituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "substituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "substituyeren" ;--# notpresent
    VP (Cond Sg P1) => "substituiría" ;--# notpresent
    VP (Cond Sg P2) => "substituirías" ;--# notpresent
    VP (Cond Sg P3) => "substituiría" ;--# notpresent
    VP (Cond Pl P1) => "substituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "substituiríais" ;--# notpresent
    VP (Cond Pl P3) => "substituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "substituye" ;
    VP (Imp Sg P3) => "substituya" ;
    VP (Imp Pl P1) => "substituyamos" ;
    VP (Imp Pl P2) => "substituid" ;
    VP (Imp Pl P3) => "substituyan" ;
    VP (Pass Sg Masc) => "substituido" ;
    VP (Pass Sg Fem) => "substituida" ;
    VP (Pass Pl Masc) => "substituidos" ;
    VP (Pass Pl Fem) => "substituidas"
    }
  } ;

lin sustituir_V = verboV 
 {s = table {
    VI Infn => "sustituir" ;
    VI Ger => "sustituyendo" ;
    VI Part => "sustituido" ;
    VP (Pres Ind Sg P1) => "sustituyo" ;
    VP (Pres Ind Sg P2) => "sustituyes" ;
    VP (Pres Ind Sg P3) => "sustituye" ;
    VP (Pres Ind Pl P1) => "sustituimos" ;
    VP (Pres Ind Pl P2) => "sustituís" ;
    VP (Pres Ind Pl P3) => "sustituyen" ;
    VP (Pres Subj Sg P1) => "sustituya" ;
    VP (Pres Subj Sg P2) => "sustituyas" ;
    VP (Pres Subj Sg P3) => "sustituya" ;
    VP (Pres Subj Pl P1) => "sustituyamos" ;
    VP (Pres Subj Pl P2) => "sustituyáis" ;
    VP (Pres Subj Pl P3) => "sustituyan" ;
    VP (Impf Ind Sg P1) => "sustituía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sustituías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sustituía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sustituíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sustituíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sustituían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sustituyera" ; "sustituyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sustituyeras" ; "sustituyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sustituyera" ; "sustituyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sustituyéramos" ; "sustituyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sustituyerais" ; "sustituyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sustituyeran" ; "sustituyesen"} ;--# notpresent
    VP (Pret Sg P1) => "sustituí" ;--# notpresent
    VP (Pret Sg P2) => "sustituiste" ;--# notpresent
    VP (Pret Sg P3) => "sustituyó" ;--# notpresent
    VP (Pret Pl P1) => "sustituimos" ;--# notpresent
    VP (Pret Pl P2) => "sustituisteis" ;--# notpresent
    VP (Pret Pl P3) => "sustituyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sustituiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sustituirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sustituirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sustituiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sustituiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sustituirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sustituyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sustituyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sustituyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sustituyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sustituyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sustituyeren" ;--# notpresent
    VP (Cond Sg P1) => "sustituiría" ;--# notpresent
    VP (Cond Sg P2) => "sustituirías" ;--# notpresent
    VP (Cond Sg P3) => "sustituiría" ;--# notpresent
    VP (Cond Pl P1) => "sustituiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sustituiríais" ;--# notpresent
    VP (Cond Pl P3) => "sustituirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sustituye" ;
    VP (Imp Sg P3) => "sustituya" ;
    VP (Imp Pl P1) => "sustituyamos" ;
    VP (Imp Pl P2) => "sustituid" ;
    VP (Imp Pl P3) => "sustituyan" ;
    VP (Pass Sg Masc) => "sustituido" ;
    VP (Pass Sg Fem) => "sustituida" ;
    VP (Pass Pl Masc) => "sustituidos" ;
    VP (Pass Pl Fem) => "sustituidas"
    }
  } ;

lin coercer_V = verboV 
 {s = table {
    VI Infn => "coercer" ;
    VI Ger => "coerciendo" ;
    VI Part => "coercido" ;
    VP (Pres Ind Sg P1) => "coerzo" ;
    VP (Pres Ind Sg P2) => "coerces" ;
    VP (Pres Ind Sg P3) => "coerce" ;
    VP (Pres Ind Pl P1) => "coercemos" ;
    VP (Pres Ind Pl P2) => "coercéis" ;
    VP (Pres Ind Pl P3) => "coercen" ;
    VP (Pres Subj Sg P1) => "coerza" ;
    VP (Pres Subj Sg P2) => "coerzas" ;
    VP (Pres Subj Sg P3) => "coerza" ;
    VP (Pres Subj Pl P1) => "coerzamos" ;
    VP (Pres Subj Pl P2) => "coerzáis" ;
    VP (Pres Subj Pl P3) => "coerzan" ;
    VP (Impf Ind Sg P1) => "coercía" ;--# notpresent
    VP (Impf Ind Sg P2) => "coercías" ;--# notpresent
    VP (Impf Ind Sg P3) => "coercía" ;--# notpresent
    VP (Impf Ind Pl P1) => "coercíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "coercíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "coercían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"coerciera" ; "coerciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"coercieras" ; "coercieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"coerciera" ; "coerciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coerciéramos" ; "coerciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"coercierais" ; "coercieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"coercieran" ; "coerciesen"} ;--# notpresent
    VP (Pret Sg P1) => "coercí" ;--# notpresent
    VP (Pret Sg P2) => "coerciste" ;--# notpresent
    VP (Pret Sg P3) => "coerció" ;--# notpresent
    VP (Pret Pl P1) => "coercimos" ;--# notpresent
    VP (Pret Pl P2) => "coercisteis" ;--# notpresent
    VP (Pret Pl P3) => "coercieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "coerceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "coercerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "coercerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "coerceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "coerceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "coercerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "coerciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "coercieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "coerciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "coerciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "coerciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "coercieren" ;--# notpresent
    VP (Cond Sg P1) => "coercería" ;--# notpresent
    VP (Cond Sg P2) => "coercerías" ;--# notpresent
    VP (Cond Sg P3) => "coercería" ;--# notpresent
    VP (Cond Pl P1) => "coerceríamos" ;--# notpresent
    VP (Cond Pl P2) => "coerceríais" ;--# notpresent
    VP (Cond Pl P3) => "coercerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "coerce" ;
    VP (Imp Sg P3) => "coerza" ;
    VP (Imp Pl P1) => "coerzamos" ;
    VP (Imp Pl P2) => "coerced" ;
    VP (Imp Pl P3) => "coerzan" ;
    VP (Pass Sg Masc) => "coercido" ;
    VP (Pass Sg Fem) => "coercida" ;
    VP (Pass Pl Masc) => "coercidos" ;
    VP (Pass Pl Fem) => "coercidas"
    }
  } ;

lin convencer_V = verboV 
 {s = table {
    VI Infn => "convencer" ;
    VI Ger => "convenciendo" ;
    VI Part => "convencido" ;
    VP (Pres Ind Sg P1) => "convenzo" ;
    VP (Pres Ind Sg P2) => "convences" ;
    VP (Pres Ind Sg P3) => "convence" ;
    VP (Pres Ind Pl P1) => "convencemos" ;
    VP (Pres Ind Pl P2) => "convencéis" ;
    VP (Pres Ind Pl P3) => "convencen" ;
    VP (Pres Subj Sg P1) => "convenza" ;
    VP (Pres Subj Sg P2) => "convenzas" ;
    VP (Pres Subj Sg P3) => "convenza" ;
    VP (Pres Subj Pl P1) => "convenzamos" ;
    VP (Pres Subj Pl P2) => "convenzáis" ;
    VP (Pres Subj Pl P3) => "convenzan" ;
    VP (Impf Ind Sg P1) => "convencía" ;--# notpresent
    VP (Impf Ind Sg P2) => "convencías" ;--# notpresent
    VP (Impf Ind Sg P3) => "convencía" ;--# notpresent
    VP (Impf Ind Pl P1) => "convencíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "convencíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "convencían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"convenciera" ; "convenciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"convencieras" ; "convencieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"convenciera" ; "convenciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"convenciéramos" ; "convenciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"convencierais" ; "convencieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"convencieran" ; "convenciesen"} ;--# notpresent
    VP (Pret Sg P1) => "convencí" ;--# notpresent
    VP (Pret Sg P2) => "convenciste" ;--# notpresent
    VP (Pret Sg P3) => "convenció" ;--# notpresent
    VP (Pret Pl P1) => "convencimos" ;--# notpresent
    VP (Pret Pl P2) => "convencisteis" ;--# notpresent
    VP (Pret Pl P3) => "convencieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "convenceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "convencerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "convencerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "convenceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "convenceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "convencerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "convenciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "convencieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "convenciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "convenciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "convenciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "convencieren" ;--# notpresent
    VP (Cond Sg P1) => "convencería" ;--# notpresent
    VP (Cond Sg P2) => "convencerías" ;--# notpresent
    VP (Cond Sg P3) => "convencería" ;--# notpresent
    VP (Cond Pl P1) => "convenceríamos" ;--# notpresent
    VP (Cond Pl P2) => "convenceríais" ;--# notpresent
    VP (Cond Pl P3) => "convencerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "convence" ;
    VP (Imp Sg P3) => "convenza" ;
    VP (Imp Pl P1) => "convenzamos" ;
    VP (Imp Pl P2) => "convenced" ;
    VP (Imp Pl P3) => "convenzan" ;
    VP (Pass Sg Masc) => "convencido" ;
    VP (Pass Sg Fem) => "convencida" ;
    VP (Pass Pl Masc) => "convencidos" ;
    VP (Pass Pl Fem) => "convencidas"
    }
  } ;

lin desfruncir_V = verboV 
 {s = table {
    VI Infn => "desfruncir" ;
    VI Ger => "desfrunciendo" ;
    VI Part => "desfruncido" ;
    VP (Pres Ind Sg P1) => "desfrunzo" ;
    VP (Pres Ind Sg P2) => "desfrunces" ;
    VP (Pres Ind Sg P3) => "desfrunce" ;
    VP (Pres Ind Pl P1) => "desfruncimos" ;
    VP (Pres Ind Pl P2) => "desfruncís" ;
    VP (Pres Ind Pl P3) => "desfruncen" ;
    VP (Pres Subj Sg P1) => "desfrunza" ;
    VP (Pres Subj Sg P2) => "desfrunzas" ;
    VP (Pres Subj Sg P3) => "desfrunza" ;
    VP (Pres Subj Pl P1) => "desfrunzamos" ;
    VP (Pres Subj Pl P2) => "desfrunzáis" ;
    VP (Pres Subj Pl P3) => "desfrunzan" ;
    VP (Impf Ind Sg P1) => "desfruncía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desfruncías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desfruncía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desfruncíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desfruncíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desfruncían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desfrunciera" ; "desfrunciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desfruncieras" ; "desfruncieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desfrunciera" ; "desfrunciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desfrunciéramos" ; "desfrunciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desfruncierais" ; "desfruncieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desfruncieran" ; "desfrunciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desfruncí" ;--# notpresent
    VP (Pret Sg P2) => "desfrunciste" ;--# notpresent
    VP (Pret Sg P3) => "desfrunció" ;--# notpresent
    VP (Pret Pl P1) => "desfruncimos" ;--# notpresent
    VP (Pret Pl P2) => "desfruncisteis" ;--# notpresent
    VP (Pret Pl P3) => "desfruncieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desfrunciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desfruncirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desfruncirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desfrunciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desfrunciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desfruncirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desfrunciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desfruncieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desfrunciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desfrunciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desfrunciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desfruncieren" ;--# notpresent
    VP (Cond Sg P1) => "desfrunciría" ;--# notpresent
    VP (Cond Sg P2) => "desfruncirías" ;--# notpresent
    VP (Cond Sg P3) => "desfrunciría" ;--# notpresent
    VP (Cond Pl P1) => "desfrunciríamos" ;--# notpresent
    VP (Cond Pl P2) => "desfrunciríais" ;--# notpresent
    VP (Cond Pl P3) => "desfruncirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desfrunce" ;
    VP (Imp Sg P3) => "desfrunza" ;
    VP (Imp Pl P1) => "desfrunzamos" ;
    VP (Imp Pl P2) => "desfruncid" ;
    VP (Imp Pl P3) => "desfrunzan" ;
    VP (Pass Sg Masc) => "desfruncido" ;
    VP (Pass Sg Fem) => "desfruncida" ;
    VP (Pass Pl Masc) => "desfruncidos" ;
    VP (Pass Pl Fem) => "desfruncidas"
    }
  } ;

lin desuncir_V = verboV 
 {s = table {
    VI Infn => "desuncir" ;
    VI Ger => "desunciendo" ;
    VI Part => "desuncido" ;
    VP (Pres Ind Sg P1) => "desunzo" ;
    VP (Pres Ind Sg P2) => "desunces" ;
    VP (Pres Ind Sg P3) => "desunce" ;
    VP (Pres Ind Pl P1) => "desuncimos" ;
    VP (Pres Ind Pl P2) => "desuncís" ;
    VP (Pres Ind Pl P3) => "desuncen" ;
    VP (Pres Subj Sg P1) => "desunza" ;
    VP (Pres Subj Sg P2) => "desunzas" ;
    VP (Pres Subj Sg P3) => "desunza" ;
    VP (Pres Subj Pl P1) => "desunzamos" ;
    VP (Pres Subj Pl P2) => "desunzáis" ;
    VP (Pres Subj Pl P3) => "desunzan" ;
    VP (Impf Ind Sg P1) => "desuncía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desuncías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desuncía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desuncíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desuncíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desuncían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desunciera" ; "desunciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desuncieras" ; "desuncieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desunciera" ; "desunciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desunciéramos" ; "desunciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desuncierais" ; "desuncieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desuncieran" ; "desunciesen"} ;--# notpresent
    VP (Pret Sg P1) => "desuncí" ;--# notpresent
    VP (Pret Sg P2) => "desunciste" ;--# notpresent
    VP (Pret Sg P3) => "desunció" ;--# notpresent
    VP (Pret Pl P1) => "desuncimos" ;--# notpresent
    VP (Pret Pl P2) => "desuncisteis" ;--# notpresent
    VP (Pret Pl P3) => "desuncieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desunciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desuncirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desuncirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desunciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desunciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desuncirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desunciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desuncieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desunciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desunciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desunciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desuncieren" ;--# notpresent
    VP (Cond Sg P1) => "desunciría" ;--# notpresent
    VP (Cond Sg P2) => "desuncirías" ;--# notpresent
    VP (Cond Sg P3) => "desunciría" ;--# notpresent
    VP (Cond Pl P1) => "desunciríamos" ;--# notpresent
    VP (Cond Pl P2) => "desunciríais" ;--# notpresent
    VP (Cond Pl P3) => "desuncirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desunce" ;
    VP (Imp Sg P3) => "desunza" ;
    VP (Imp Pl P1) => "desunzamos" ;
    VP (Imp Pl P2) => "desuncid" ;
    VP (Imp Pl P3) => "desunzan" ;
    VP (Pass Sg Masc) => "desuncido" ;
    VP (Pass Sg Fem) => "desuncida" ;
    VP (Pass Pl Masc) => "desuncidos" ;
    VP (Pass Pl Fem) => "desuncidas"
    }
  } ;

lin ejercer_V = verboV 
 {s = table {
    VI Infn => "ejercer" ;
    VI Ger => "ejerciendo" ;
    VI Part => "ejercido" ;
    VP (Pres Ind Sg P1) => "ejerzo" ;
    VP (Pres Ind Sg P2) => "ejerces" ;
    VP (Pres Ind Sg P3) => "ejerce" ;
    VP (Pres Ind Pl P1) => "ejercemos" ;
    VP (Pres Ind Pl P2) => "ejercéis" ;
    VP (Pres Ind Pl P3) => "ejercen" ;
    VP (Pres Subj Sg P1) => "ejerza" ;
    VP (Pres Subj Sg P2) => "ejerzas" ;
    VP (Pres Subj Sg P3) => "ejerza" ;
    VP (Pres Subj Pl P1) => "ejerzamos" ;
    VP (Pres Subj Pl P2) => "ejerzáis" ;
    VP (Pres Subj Pl P3) => "ejerzan" ;
    VP (Impf Ind Sg P1) => "ejercía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ejercías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ejercía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ejercíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ejercíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ejercían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ejerciera" ; "ejerciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ejercieras" ; "ejercieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ejerciera" ; "ejerciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ejerciéramos" ; "ejerciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ejercierais" ; "ejercieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ejercieran" ; "ejerciesen"} ;--# notpresent
    VP (Pret Sg P1) => "ejercí" ;--# notpresent
    VP (Pret Sg P2) => "ejerciste" ;--# notpresent
    VP (Pret Sg P3) => "ejerció" ;--# notpresent
    VP (Pret Pl P1) => "ejercimos" ;--# notpresent
    VP (Pret Pl P2) => "ejercisteis" ;--# notpresent
    VP (Pret Pl P3) => "ejercieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ejerceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ejercerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ejercerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ejerceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ejerceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ejercerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ejerciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ejercieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ejerciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ejerciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ejerciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ejercieren" ;--# notpresent
    VP (Cond Sg P1) => "ejercería" ;--# notpresent
    VP (Cond Sg P2) => "ejercerías" ;--# notpresent
    VP (Cond Sg P3) => "ejercería" ;--# notpresent
    VP (Cond Pl P1) => "ejerceríamos" ;--# notpresent
    VP (Cond Pl P2) => "ejerceríais" ;--# notpresent
    VP (Cond Pl P3) => "ejercerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ejerce" ;
    VP (Imp Sg P3) => "ejerza" ;
    VP (Imp Pl P1) => "ejerzamos" ;
    VP (Imp Pl P2) => "ejerced" ;
    VP (Imp Pl P3) => "ejerzan" ;
    VP (Pass Sg Masc) => "ejercido" ;
    VP (Pass Sg Fem) => "ejercida" ;
    VP (Pass Pl Masc) => "ejercidos" ;
    VP (Pass Pl Fem) => "ejercidas"
    }
  } ;

lin estarcir_V = verboV 
 {s = table {
    VI Infn => "estarcir" ;
    VI Ger => "estarciendo" ;
    VI Part => "estarcido" ;
    VP (Pres Ind Sg P1) => "estarzo" ;
    VP (Pres Ind Sg P2) => "estarces" ;
    VP (Pres Ind Sg P3) => "estarce" ;
    VP (Pres Ind Pl P1) => "estarcimos" ;
    VP (Pres Ind Pl P2) => "estarcís" ;
    VP (Pres Ind Pl P3) => "estarcen" ;
    VP (Pres Subj Sg P1) => "estarza" ;
    VP (Pres Subj Sg P2) => "estarzas" ;
    VP (Pres Subj Sg P3) => "estarza" ;
    VP (Pres Subj Pl P1) => "estarzamos" ;
    VP (Pres Subj Pl P2) => "estarzáis" ;
    VP (Pres Subj Pl P3) => "estarzan" ;
    VP (Impf Ind Sg P1) => "estarcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "estarcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "estarcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "estarcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "estarcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "estarcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estarciera" ; "estarciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"estarcieras" ; "estarcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estarciera" ; "estarciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estarciéramos" ; "estarciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"estarcierais" ; "estarcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"estarcieran" ; "estarciesen"} ;--# notpresent
    VP (Pret Sg P1) => "estarcí" ;--# notpresent
    VP (Pret Sg P2) => "estarciste" ;--# notpresent
    VP (Pret Sg P3) => "estarció" ;--# notpresent
    VP (Pret Pl P1) => "estarcimos" ;--# notpresent
    VP (Pret Pl P2) => "estarcisteis" ;--# notpresent
    VP (Pret Pl P3) => "estarcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estarciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "estarcirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "estarcirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "estarciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estarciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "estarcirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estarciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "estarcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "estarciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "estarciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estarciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "estarcieren" ;--# notpresent
    VP (Cond Sg P1) => "estarciría" ;--# notpresent
    VP (Cond Sg P2) => "estarcirías" ;--# notpresent
    VP (Cond Sg P3) => "estarciría" ;--# notpresent
    VP (Cond Pl P1) => "estarciríamos" ;--# notpresent
    VP (Cond Pl P2) => "estarciríais" ;--# notpresent
    VP (Cond Pl P3) => "estarcirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "estarce" ;
    VP (Imp Sg P3) => "estarza" ;
    VP (Imp Pl P1) => "estarzamos" ;
    VP (Imp Pl P2) => "estarcid" ;
    VP (Imp Pl P3) => "estarzan" ;
    VP (Pass Sg Masc) => "estarcido" ;
    VP (Pass Sg Fem) => "estarcida" ;
    VP (Pass Pl Masc) => "estarcidos" ;
    VP (Pass Pl Fem) => "estarcidas"
    }
  } ;

lin fruncir_V = verboV 
 {s = table {
    VI Infn => "fruncir" ;
    VI Ger => "frunciendo" ;
    VI Part => "fruncido" ;
    VP (Pres Ind Sg P1) => "frunzo" ;
    VP (Pres Ind Sg P2) => "frunces" ;
    VP (Pres Ind Sg P3) => "frunce" ;
    VP (Pres Ind Pl P1) => "fruncimos" ;
    VP (Pres Ind Pl P2) => "fruncís" ;
    VP (Pres Ind Pl P3) => "fruncen" ;
    VP (Pres Subj Sg P1) => "frunza" ;
    VP (Pres Subj Sg P2) => "frunzas" ;
    VP (Pres Subj Sg P3) => "frunza" ;
    VP (Pres Subj Pl P1) => "frunzamos" ;
    VP (Pres Subj Pl P2) => "frunzáis" ;
    VP (Pres Subj Pl P3) => "frunzan" ;
    VP (Impf Ind Sg P1) => "fruncía" ;--# notpresent
    VP (Impf Ind Sg P2) => "fruncías" ;--# notpresent
    VP (Impf Ind Sg P3) => "fruncía" ;--# notpresent
    VP (Impf Ind Pl P1) => "fruncíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "fruncíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "fruncían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"frunciera" ; "frunciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"fruncieras" ; "fruncieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"frunciera" ; "frunciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"frunciéramos" ; "frunciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"fruncierais" ; "fruncieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"fruncieran" ; "frunciesen"} ;--# notpresent
    VP (Pret Sg P1) => "fruncí" ;--# notpresent
    VP (Pret Sg P2) => "frunciste" ;--# notpresent
    VP (Pret Sg P3) => "frunció" ;--# notpresent
    VP (Pret Pl P1) => "fruncimos" ;--# notpresent
    VP (Pret Pl P2) => "fruncisteis" ;--# notpresent
    VP (Pret Pl P3) => "fruncieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "frunciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "fruncirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "fruncirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "frunciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "frunciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "fruncirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "frunciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "fruncieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "frunciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "frunciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "frunciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "fruncieren" ;--# notpresent
    VP (Cond Sg P1) => "frunciría" ;--# notpresent
    VP (Cond Sg P2) => "fruncirías" ;--# notpresent
    VP (Cond Sg P3) => "frunciría" ;--# notpresent
    VP (Cond Pl P1) => "frunciríamos" ;--# notpresent
    VP (Cond Pl P2) => "frunciríais" ;--# notpresent
    VP (Cond Pl P3) => "fruncirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "frunce" ;
    VP (Imp Sg P3) => "frunza" ;
    VP (Imp Pl P1) => "frunzamos" ;
    VP (Imp Pl P2) => "fruncid" ;
    VP (Imp Pl P3) => "frunzan" ;
    VP (Pass Sg Masc) => "fruncido" ;
    VP (Pass Sg Fem) => "fruncida" ;
    VP (Pass Pl Masc) => "fruncidos" ;
    VP (Pass Pl Fem) => "fruncidas"
    }
  } ;

lin mecer_V = verboV 
 {s = table {
    VI Infn => "mecer" ;
    VI Ger => "meciendo" ;
    VI Part => "mecido" ;
    VP (Pres Ind Sg P1) => "mezo" ;
    VP (Pres Ind Sg P2) => "meces" ;
    VP (Pres Ind Sg P3) => "mece" ;
    VP (Pres Ind Pl P1) => "mecemos" ;
    VP (Pres Ind Pl P2) => "mecéis" ;
    VP (Pres Ind Pl P3) => "mecen" ;
    VP (Pres Subj Sg P1) => "meza" ;
    VP (Pres Subj Sg P2) => "mezas" ;
    VP (Pres Subj Sg P3) => "meza" ;
    VP (Pres Subj Pl P1) => "mezamos" ;
    VP (Pres Subj Pl P2) => "mezáis" ;
    VP (Pres Subj Pl P3) => "mezan" ;
    VP (Impf Ind Sg P1) => "mecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "mecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "mecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "mecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "mecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "mecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"meciera" ; "meciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"mecieras" ; "mecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"meciera" ; "meciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"meciéramos" ; "meciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"mecierais" ; "mecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"mecieran" ; "meciesen"} ;--# notpresent
    VP (Pret Sg P1) => "mecí" ;--# notpresent
    VP (Pret Sg P2) => "meciste" ;--# notpresent
    VP (Pret Sg P3) => "meció" ;--# notpresent
    VP (Pret Pl P1) => "mecimos" ;--# notpresent
    VP (Pret Pl P2) => "mecisteis" ;--# notpresent
    VP (Pret Pl P3) => "mecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "meceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "mecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "mecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "meceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "meceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "mecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "meciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "mecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "meciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "meciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "meciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "mecieren" ;--# notpresent
    VP (Cond Sg P1) => "mecería" ;--# notpresent
    VP (Cond Sg P2) => "mecerías" ;--# notpresent
    VP (Cond Sg P3) => "mecería" ;--# notpresent
    VP (Cond Pl P1) => "meceríamos" ;--# notpresent
    VP (Cond Pl P2) => "meceríais" ;--# notpresent
    VP (Cond Pl P3) => "mecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mece" ;
    VP (Imp Sg P3) => "meza" ;
    VP (Imp Pl P1) => "mezamos" ;
    VP (Imp Pl P2) => "meced" ;
    VP (Imp Pl P3) => "mezan" ;
    VP (Pass Sg Masc) => "mecido" ;
    VP (Pass Sg Fem) => "mecida" ;
    VP (Pass Pl Masc) => "mecidos" ;
    VP (Pass Pl Fem) => "mecidas"
    }
  } ;

lin remecer_V = verboV 
 {s = table {
    VI Infn => "remecer" ;
    VI Ger => "remeciendo" ;
    VI Part => "remecido" ;
    VP (Pres Ind Sg P1) => "remezo" ;
    VP (Pres Ind Sg P2) => "remeces" ;
    VP (Pres Ind Sg P3) => "remece" ;
    VP (Pres Ind Pl P1) => "remecemos" ;
    VP (Pres Ind Pl P2) => "remecéis" ;
    VP (Pres Ind Pl P3) => "remecen" ;
    VP (Pres Subj Sg P1) => "remeza" ;
    VP (Pres Subj Sg P2) => "remezas" ;
    VP (Pres Subj Sg P3) => "remeza" ;
    VP (Pres Subj Pl P1) => "remezamos" ;
    VP (Pres Subj Pl P2) => "remezáis" ;
    VP (Pres Subj Pl P3) => "remezan" ;
    VP (Impf Ind Sg P1) => "remecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "remecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "remecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "remecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remeciera" ; "remeciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remecieras" ; "remecieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remeciera" ; "remeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remeciéramos" ; "remeciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remecierais" ; "remecieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remecieran" ; "remeciesen"} ;--# notpresent
    VP (Pret Sg P1) => "remecí" ;--# notpresent
    VP (Pret Sg P2) => "remeciste" ;--# notpresent
    VP (Pret Sg P3) => "remeció" ;--# notpresent
    VP (Pret Pl P1) => "remecimos" ;--# notpresent
    VP (Pret Pl P2) => "remecisteis" ;--# notpresent
    VP (Pret Pl P3) => "remecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remeceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remecerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "remeceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remeceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remeciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "remecieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "remeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "remeciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remeciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remecieren" ;--# notpresent
    VP (Cond Sg P1) => "remecería" ;--# notpresent
    VP (Cond Sg P2) => "remecerías" ;--# notpresent
    VP (Cond Sg P3) => "remecería" ;--# notpresent
    VP (Cond Pl P1) => "remeceríamos" ;--# notpresent
    VP (Cond Pl P2) => "remeceríais" ;--# notpresent
    VP (Cond Pl P3) => "remecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remece" ;
    VP (Imp Sg P3) => "remeza" ;
    VP (Imp Pl P1) => "remezamos" ;
    VP (Imp Pl P2) => "remeced" ;
    VP (Imp Pl P3) => "remezan" ;
    VP (Pass Sg Masc) => "remecido" ;
    VP (Pass Sg Fem) => "remecida" ;
    VP (Pass Pl Masc) => "remecidos" ;
    VP (Pass Pl Fem) => "remecidas"
    }
  } ;

lin resarcir_V = verboV 
 {s = table {
    VI Infn => "resarcir" ;
    VI Ger => "resarciendo" ;
    VI Part => "resarcido" ;
    VP (Pres Ind Sg P1) => "resarzo" ;
    VP (Pres Ind Sg P2) => "resarces" ;
    VP (Pres Ind Sg P3) => "resarce" ;
    VP (Pres Ind Pl P1) => "resarcimos" ;
    VP (Pres Ind Pl P2) => "resarcís" ;
    VP (Pres Ind Pl P3) => "resarcen" ;
    VP (Pres Subj Sg P1) => "resarza" ;
    VP (Pres Subj Sg P2) => "resarzas" ;
    VP (Pres Subj Sg P3) => "resarza" ;
    VP (Pres Subj Pl P1) => "resarzamos" ;
    VP (Pres Subj Pl P2) => "resarzáis" ;
    VP (Pres Subj Pl P3) => "resarzan" ;
    VP (Impf Ind Sg P1) => "resarcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "resarcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "resarcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "resarcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resarcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resarcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resarciera" ; "resarciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resarcieras" ; "resarcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resarciera" ; "resarciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resarciéramos" ; "resarciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resarcierais" ; "resarcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resarcieran" ; "resarciesen"} ;--# notpresent
    VP (Pret Sg P1) => "resarcí" ;--# notpresent
    VP (Pret Sg P2) => "resarciste" ;--# notpresent
    VP (Pret Sg P3) => "resarció" ;--# notpresent
    VP (Pret Pl P1) => "resarcimos" ;--# notpresent
    VP (Pret Pl P2) => "resarcisteis" ;--# notpresent
    VP (Pret Pl P3) => "resarcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resarciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resarcirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resarcirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "resarciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resarciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resarcirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resarciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resarcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resarciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resarciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resarciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resarcieren" ;--# notpresent
    VP (Cond Sg P1) => "resarciría" ;--# notpresent
    VP (Cond Sg P2) => "resarcirías" ;--# notpresent
    VP (Cond Sg P3) => "resarciría" ;--# notpresent
    VP (Cond Pl P1) => "resarciríamos" ;--# notpresent
    VP (Cond Pl P2) => "resarciríais" ;--# notpresent
    VP (Cond Pl P3) => "resarcirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resarce" ;
    VP (Imp Sg P3) => "resarza" ;
    VP (Imp Pl P1) => "resarzamos" ;
    VP (Imp Pl P2) => "resarcid" ;
    VP (Imp Pl P3) => "resarzan" ;
    VP (Pass Sg Masc) => "resarcido" ;
    VP (Pass Sg Fem) => "resarcida" ;
    VP (Pass Pl Masc) => "resarcidos" ;
    VP (Pass Pl Fem) => "resarcidas"
    }
  } ;

lin rezurcir_V = verboV 
 {s = table {
    VI Infn => "rezurcir" ;
    VI Ger => "rezurciendo" ;
    VI Part => "rezurcido" ;
    VP (Pres Ind Sg P1) => "rezurzo" ;
    VP (Pres Ind Sg P2) => "rezurces" ;
    VP (Pres Ind Sg P3) => "rezurce" ;
    VP (Pres Ind Pl P1) => "rezurcimos" ;
    VP (Pres Ind Pl P2) => "rezurcís" ;
    VP (Pres Ind Pl P3) => "rezurcen" ;
    VP (Pres Subj Sg P1) => "rezurza" ;
    VP (Pres Subj Sg P2) => "rezurzas" ;
    VP (Pres Subj Sg P3) => "rezurza" ;
    VP (Pres Subj Pl P1) => "rezurzamos" ;
    VP (Pres Subj Pl P2) => "rezurzáis" ;
    VP (Pres Subj Pl P3) => "rezurzan" ;
    VP (Impf Ind Sg P1) => "rezurcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rezurcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rezurcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rezurcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rezurcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rezurcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rezurciera" ; "rezurciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rezurcieras" ; "rezurcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rezurciera" ; "rezurciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rezurciéramos" ; "rezurciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rezurcierais" ; "rezurcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rezurcieran" ; "rezurciesen"} ;--# notpresent
    VP (Pret Sg P1) => "rezurcí" ;--# notpresent
    VP (Pret Sg P2) => "rezurciste" ;--# notpresent
    VP (Pret Sg P3) => "rezurció" ;--# notpresent
    VP (Pret Pl P1) => "rezurcimos" ;--# notpresent
    VP (Pret Pl P2) => "rezurcisteis" ;--# notpresent
    VP (Pret Pl P3) => "rezurcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rezurciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rezurcirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rezurcirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rezurciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rezurciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rezurcirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rezurciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rezurcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rezurciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rezurciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rezurciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rezurcieren" ;--# notpresent
    VP (Cond Sg P1) => "rezurciría" ;--# notpresent
    VP (Cond Sg P2) => "rezurcirías" ;--# notpresent
    VP (Cond Sg P3) => "rezurciría" ;--# notpresent
    VP (Cond Pl P1) => "rezurciríamos" ;--# notpresent
    VP (Cond Pl P2) => "rezurciríais" ;--# notpresent
    VP (Cond Pl P3) => "rezurcirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rezurce" ;
    VP (Imp Sg P3) => "rezurza" ;
    VP (Imp Pl P1) => "rezurzamos" ;
    VP (Imp Pl P2) => "rezurcid" ;
    VP (Imp Pl P3) => "rezurzan" ;
    VP (Pass Sg Masc) => "rezurcido" ;
    VP (Pass Sg Fem) => "rezurcida" ;
    VP (Pass Pl Masc) => "rezurcidos" ;
    VP (Pass Pl Fem) => "rezurcidas"
    }
  } ;

lin subyacer_V = verboV 
 {s = table {
    VI Infn => "subyacer" ;
    VI Ger => "subyaciendo" ;
    VI Part => "subyacido" ;
    VP (Pres Ind Sg P1) => "subyazgo" ;
    VP (Pres Ind Sg P2) => "subyaces" ;
    VP (Pres Ind Sg P3) => "subyace" ;
    VP (Pres Ind Pl P1) => "subyacemos" ;
    VP (Pres Ind Pl P2) => "subyacéis" ;
    VP (Pres Ind Pl P3) => "subyacen" ;
    VP (Pres Subj Sg P1) => "subyazga" ;
    VP (Pres Subj Sg P2) => "subyazgas" ;
    VP (Pres Subj Sg P3) => "subyazga" ;
    VP (Pres Subj Pl P1) => "subyazgamos" ;
    VP (Pres Subj Pl P2) => "subyazgáis" ;
    VP (Pres Subj Pl P3) => "subyazgan" ;
    VP (Impf Ind Sg P1) => "subyacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "subyacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "subyacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "subyacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "subyacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "subyacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"subyaciera" ; "subyaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"subyacieras" ; "subyacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"subyaciera" ; "subyaciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"subyaciéramos" ; "subyaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"subyacierais" ; "subyacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"subyacieran" ; "subyaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "subyací" ;--# notpresent
    VP (Pret Sg P2) => "subyaciste" ;--# notpresent
    VP (Pret Sg P3) => "subyació" ;--# notpresent
    VP (Pret Pl P1) => "subyacimos" ;--# notpresent
    VP (Pret Pl P2) => "subyacisteis" ;--# notpresent
    VP (Pret Pl P3) => "subyacieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "subyaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "subyacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "subyacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "subyaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "subyaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "subyacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "subyaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "subyacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "subyaciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "subyaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "subyaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "subyacieren" ;--# notpresent
    VP (Cond Sg P1) => "subyacería" ;--# notpresent
    VP (Cond Sg P2) => "subyacerías" ;--# notpresent
    VP (Cond Sg P3) => "subyacería" ;--# notpresent
    VP (Cond Pl P1) => "subyaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "subyaceríais" ;--# notpresent
    VP (Cond Pl P3) => "subyacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "subyace" ;
    VP (Imp Sg P3) => "subyazga" ;
    VP (Imp Pl P1) => "subyazgamos" ;
    VP (Imp Pl P2) => "subyaced" ;
    VP (Imp Pl P3) => "subyazgan" ;
    VP (Pass Sg Masc) => "subyacido" ;
    VP (Pass Sg Fem) => "subyacida" ;
    VP (Pass Pl Masc) => "subyacidos" ;
    VP (Pass Pl Fem) => "subyacidas"
    }
  } ;

lin uncir_V = verboV 
 {s = table {
    VI Infn => "uncir" ;
    VI Ger => "unciendo" ;
    VI Part => "uncido" ;
    VP (Pres Ind Sg P1) => "unzo" ;
    VP (Pres Ind Sg P2) => "unces" ;
    VP (Pres Ind Sg P3) => "unce" ;
    VP (Pres Ind Pl P1) => "uncimos" ;
    VP (Pres Ind Pl P2) => "uncís" ;
    VP (Pres Ind Pl P3) => "uncen" ;
    VP (Pres Subj Sg P1) => "unza" ;
    VP (Pres Subj Sg P2) => "unzas" ;
    VP (Pres Subj Sg P3) => "unza" ;
    VP (Pres Subj Pl P1) => "unzamos" ;
    VP (Pres Subj Pl P2) => "unzáis" ;
    VP (Pres Subj Pl P3) => "unzan" ;
    VP (Impf Ind Sg P1) => "uncía" ;--# notpresent
    VP (Impf Ind Sg P2) => "uncías" ;--# notpresent
    VP (Impf Ind Sg P3) => "uncía" ;--# notpresent
    VP (Impf Ind Pl P1) => "uncíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "uncíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "uncían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"unciera" ; "unciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"uncieras" ; "uncieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"unciera" ; "unciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"unciéramos" ; "unciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"uncierais" ; "uncieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"uncieran" ; "unciesen"} ;--# notpresent
    VP (Pret Sg P1) => "uncí" ;--# notpresent
    VP (Pret Sg P2) => "unciste" ;--# notpresent
    VP (Pret Sg P3) => "unció" ;--# notpresent
    VP (Pret Pl P1) => "uncimos" ;--# notpresent
    VP (Pret Pl P2) => "uncisteis" ;--# notpresent
    VP (Pret Pl P3) => "uncieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "unciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "uncirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "uncirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "unciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "unciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "uncirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "unciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "uncieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "unciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "unciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "unciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "uncieren" ;--# notpresent
    VP (Cond Sg P1) => "unciría" ;--# notpresent
    VP (Cond Sg P2) => "uncirías" ;--# notpresent
    VP (Cond Sg P3) => "unciría" ;--# notpresent
    VP (Cond Pl P1) => "unciríamos" ;--# notpresent
    VP (Cond Pl P2) => "unciríais" ;--# notpresent
    VP (Cond Pl P3) => "uncirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "unce" ;
    VP (Imp Sg P3) => "unza" ;
    VP (Imp Pl P1) => "unzamos" ;
    VP (Imp Pl P2) => "uncid" ;
    VP (Imp Pl P3) => "unzan" ;
    VP (Pass Sg Masc) => "uncido" ;
    VP (Pass Sg Fem) => "uncida" ;
    VP (Pass Pl Masc) => "uncidos" ;
    VP (Pass Pl Fem) => "uncidas"
    }
  } ;

lin vencer_V = verboV 
 {s = table {
    VI Infn => "vencer" ;
    VI Ger => "venciendo" ;
    VI Part => "vencido" ;
    VP (Pres Ind Sg P1) => "venzo" ;
    VP (Pres Ind Sg P2) => "vences" ;
    VP (Pres Ind Sg P3) => "vence" ;
    VP (Pres Ind Pl P1) => "vencemos" ;
    VP (Pres Ind Pl P2) => "vencéis" ;
    VP (Pres Ind Pl P3) => "vencen" ;
    VP (Pres Subj Sg P1) => "venza" ;
    VP (Pres Subj Sg P2) => "venzas" ;
    VP (Pres Subj Sg P3) => "venza" ;
    VP (Pres Subj Pl P1) => "venzamos" ;
    VP (Pres Subj Pl P2) => "venzáis" ;
    VP (Pres Subj Pl P3) => "venzan" ;
    VP (Impf Ind Sg P1) => "vencía" ;--# notpresent
    VP (Impf Ind Sg P2) => "vencías" ;--# notpresent
    VP (Impf Ind Sg P3) => "vencía" ;--# notpresent
    VP (Impf Ind Pl P1) => "vencíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "vencíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "vencían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"venciera" ; "venciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"vencieras" ; "vencieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"venciera" ; "venciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"venciéramos" ; "venciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"vencierais" ; "vencieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"vencieran" ; "venciesen"} ;--# notpresent
    VP (Pret Sg P1) => "vencí" ;--# notpresent
    VP (Pret Sg P2) => "venciste" ;--# notpresent
    VP (Pret Sg P3) => "venció" ;--# notpresent
    VP (Pret Pl P1) => "vencimos" ;--# notpresent
    VP (Pret Pl P2) => "vencisteis" ;--# notpresent
    VP (Pret Pl P3) => "vencieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "venceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "vencerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "vencerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "venceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "venceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "vencerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "venciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "vencieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "venciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "venciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "venciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "vencieren" ;--# notpresent
    VP (Cond Sg P1) => "vencería" ;--# notpresent
    VP (Cond Sg P2) => "vencerías" ;--# notpresent
    VP (Cond Sg P3) => "vencería" ;--# notpresent
    VP (Cond Pl P1) => "venceríamos" ;--# notpresent
    VP (Cond Pl P2) => "venceríais" ;--# notpresent
    VP (Cond Pl P3) => "vencerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vence" ;
    VP (Imp Sg P3) => "venza" ;
    VP (Imp Pl P1) => "venzamos" ;
    VP (Imp Pl P2) => "venced" ;
    VP (Imp Pl P3) => "venzan" ;
    VP (Pass Sg Masc) => "vencido" ;
    VP (Pass Sg Fem) => "vencida" ;
    VP (Pass Pl Masc) => "vencidos" ;
    VP (Pass Pl Fem) => "vencidas"
    }
  } ;

lin yacer_V = verboV 
 {s = table {
    VI Infn => "yacer" ;
    VI Ger => "yaciendo" ;
    VI Part => "yacido" ;
    VP (Pres Ind Sg P1) => "yazgo" ;
    VP (Pres Ind Sg P2) => "yaces" ;
    VP (Pres Ind Sg P3) => "yace" ;
    VP (Pres Ind Pl P1) => "yacemos" ;
    VP (Pres Ind Pl P2) => "yacéis" ;
    VP (Pres Ind Pl P3) => "yacen" ;
    VP (Pres Subj Sg P1) => "yazga" ;
    VP (Pres Subj Sg P2) => "yazgas" ;
    VP (Pres Subj Sg P3) => "yazga" ;
    VP (Pres Subj Pl P1) => "yazgamos" ;
    VP (Pres Subj Pl P2) => "yazgáis" ;
    VP (Pres Subj Pl P3) => "yazgan" ;
    VP (Impf Ind Sg P1) => "yacía" ;--# notpresent
    VP (Impf Ind Sg P2) => "yacías" ;--# notpresent
    VP (Impf Ind Sg P3) => "yacía" ;--# notpresent
    VP (Impf Ind Pl P1) => "yacíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "yacíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "yacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"yaciera" ; "yaciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"yacieras" ; "yacieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"yaciera" ; "yaciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"yaciéramos" ; "yaciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"yacierais" ; "yacieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"yacieran" ; "yaciesen"} ;--# notpresent
    VP (Pret Sg P1) => "yací" ;--# notpresent
    VP (Pret Sg P2) => "yaciste" ;--# notpresent
    VP (Pret Sg P3) => "yació" ;--# notpresent
    VP (Pret Pl P1) => "yacimos" ;--# notpresent
    VP (Pret Pl P2) => "yacisteis" ;--# notpresent
    VP (Pret Pl P3) => "yacieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "yaceré" ;--# notpresent
    VP (Fut Ind Sg P2) => "yacerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "yacerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "yaceremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "yaceréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "yacerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "yaciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "yacieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "yaciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "yaciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "yaciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "yacieren" ;--# notpresent
    VP (Cond Sg P1) => "yacería" ;--# notpresent
    VP (Cond Sg P2) => "yacerías" ;--# notpresent
    VP (Cond Sg P3) => "yacería" ;--# notpresent
    VP (Cond Pl P1) => "yaceríamos" ;--# notpresent
    VP (Cond Pl P2) => "yaceríais" ;--# notpresent
    VP (Cond Pl P3) => "yacerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "yace" ;
    VP (Imp Sg P3) => "yazga" ;
    VP (Imp Pl P1) => "yazgamos" ;
    VP (Imp Pl P2) => "yaced" ;
    VP (Imp Pl P3) => "yazgan" ;
    VP (Pass Sg Masc) => "yacido" ;
    VP (Pass Sg Fem) => "yacida" ;
    VP (Pass Pl Masc) => "yacidos" ;
    VP (Pass Pl Fem) => "yacidas"
    }
  } ;

lin zurcir_V = verboV 
 {s = table {
    VI Infn => "zurcir" ;
    VI Ger => "zurciendo" ;
    VI Part => "zurcido" ;
    VP (Pres Ind Sg P1) => "zurzo" ;
    VP (Pres Ind Sg P2) => "zurces" ;
    VP (Pres Ind Sg P3) => "zurce" ;
    VP (Pres Ind Pl P1) => "zurcimos" ;
    VP (Pres Ind Pl P2) => "zurcís" ;
    VP (Pres Ind Pl P3) => "zurcen" ;
    VP (Pres Subj Sg P1) => "zurza" ;
    VP (Pres Subj Sg P2) => "zurzas" ;
    VP (Pres Subj Sg P3) => "zurza" ;
    VP (Pres Subj Pl P1) => "zurzamos" ;
    VP (Pres Subj Pl P2) => "zurzáis" ;
    VP (Pres Subj Pl P3) => "zurzan" ;
    VP (Impf Ind Sg P1) => "zurcía" ;--# notpresent
    VP (Impf Ind Sg P2) => "zurcías" ;--# notpresent
    VP (Impf Ind Sg P3) => "zurcía" ;--# notpresent
    VP (Impf Ind Pl P1) => "zurcíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "zurcíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "zurcían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"zurciera" ; "zurciese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"zurcieras" ; "zurcieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"zurciera" ; "zurciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"zurciéramos" ; "zurciésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"zurcierais" ; "zurcieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"zurcieran" ; "zurciesen"} ;--# notpresent
    VP (Pret Sg P1) => "zurcí" ;--# notpresent
    VP (Pret Sg P2) => "zurciste" ;--# notpresent
    VP (Pret Sg P3) => "zurció" ;--# notpresent
    VP (Pret Pl P1) => "zurcimos" ;--# notpresent
    VP (Pret Pl P2) => "zurcisteis" ;--# notpresent
    VP (Pret Pl P3) => "zurcieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "zurciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "zurcirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "zurcirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "zurciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "zurciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "zurcirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "zurciere" ;--# notpresent
    VP (Fut Subj Sg P2) => "zurcieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "zurciere" ;--# notpresent
    VP (Fut Subj Pl P1) => "zurciéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "zurciereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "zurcieren" ;--# notpresent
    VP (Cond Sg P1) => "zurciría" ;--# notpresent
    VP (Cond Sg P2) => "zurcirías" ;--# notpresent
    VP (Cond Sg P3) => "zurciría" ;--# notpresent
    VP (Cond Pl P1) => "zurciríamos" ;--# notpresent
    VP (Cond Pl P2) => "zurciríais" ;--# notpresent
    VP (Cond Pl P3) => "zurcirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "zurce" ;
    VP (Imp Sg P3) => "zurza" ;
    VP (Imp Pl P1) => "zurzamos" ;
    VP (Imp Pl P2) => "zurcid" ;
    VP (Imp Pl P3) => "zurzan" ;
    VP (Pass Sg Masc) => "zurcido" ;
    VP (Pass Sg Fem) => "zurcida" ;
    VP (Pass Pl Masc) => "zurcidos" ;
    VP (Pass Pl Fem) => "zurcidas"
    }
  } ;

lin desoír_V = verboV 
 {s = table {
    VI Infn => "desoír" ;
    VI Ger => "desoyendo" ;
    VI Part => "desoído" ;
    VP (Pres Ind Sg P1) => "desoigo" ;
    VP (Pres Ind Sg P2) => "desoyes" ;
    VP (Pres Ind Sg P3) => "desoye" ;
    VP (Pres Ind Pl P1) => "desoímos" ;
    VP (Pres Ind Pl P2) => "desoís" ;
    VP (Pres Ind Pl P3) => "desoyen" ;
    VP (Pres Subj Sg P1) => "desoiga" ;
    VP (Pres Subj Sg P2) => "desoigas" ;
    VP (Pres Subj Sg P3) => "desoiga" ;
    VP (Pres Subj Pl P1) => "desoigamos" ;
    VP (Pres Subj Pl P2) => "desoigáis" ;
    VP (Pres Subj Pl P3) => "desoigan" ;
    VP (Impf Ind Sg P1) => "desoía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desoías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desoía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desoíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desoíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desoían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desoyera" ; "desoyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desoyeras" ; "desoyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desoyera" ; "desoyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desoyéramos" ; "desoyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desoyerais" ; "desoyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desoyeran" ; "desoyesen"} ;--# notpresent
    VP (Pret Sg P1) => "desoí" ;--# notpresent
    VP (Pret Sg P2) => "desoíste" ;--# notpresent
    VP (Pret Sg P3) => "desoyó" ;--# notpresent
    VP (Pret Pl P1) => "desoímos" ;--# notpresent
    VP (Pret Pl P2) => "desoísteis" ;--# notpresent
    VP (Pret Pl P3) => "desoyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desoiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desoirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desoirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desoiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desoiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desoirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desoyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desoyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desoyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desoyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desoyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desoyeren" ;--# notpresent
    VP (Cond Sg P1) => "desoiría" ;--# notpresent
    VP (Cond Sg P2) => "desoirías" ;--# notpresent
    VP (Cond Sg P3) => "desoiría" ;--# notpresent
    VP (Cond Pl P1) => "desoiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desoiríais" ;--# notpresent
    VP (Cond Pl P3) => "desoirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desoye" ;
    VP (Imp Sg P3) => "desoiga" ;
    VP (Imp Pl P1) => "desoigamos" ;
    VP (Imp Pl P2) => "desoíd" ;
    VP (Imp Pl P3) => "desoigan" ;
    VP (Pass Sg Masc) => "desoído" ;
    VP (Pass Sg Fem) => "desoída" ;
    VP (Pass Pl Masc) => "desoídos" ;
    VP (Pass Pl Fem) => "desoídas"
    }
  } ;

lin entreoír_V = verboV 
 {s = table {
    VI Infn => "entreoír" ;
    VI Ger => "entreoyendo" ;
    VI Part => "entreoído" ;
    VP (Pres Ind Sg P1) => "entreoigo" ;
    VP (Pres Ind Sg P2) => "entreoyes" ;
    VP (Pres Ind Sg P3) => "entreoye" ;
    VP (Pres Ind Pl P1) => "entreoímos" ;
    VP (Pres Ind Pl P2) => "entreoís" ;
    VP (Pres Ind Pl P3) => "entreoyen" ;
    VP (Pres Subj Sg P1) => "entreoiga" ;
    VP (Pres Subj Sg P2) => "entreoigas" ;
    VP (Pres Subj Sg P3) => "entreoiga" ;
    VP (Pres Subj Pl P1) => "entreoigamos" ;
    VP (Pres Subj Pl P2) => "entreoigáis" ;
    VP (Pres Subj Pl P3) => "entreoigan" ;
    VP (Impf Ind Sg P1) => "entreoía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entreoías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entreoía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entreoíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entreoíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entreoían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entreoyera" ; "entreoyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entreoyeras" ; "entreoyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entreoyera" ; "entreoyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entreoyéramos" ; "entreoyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entreoyerais" ; "entreoyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entreoyeran" ; "entreoyesen"} ;--# notpresent
    VP (Pret Sg P1) => "entreoí" ;--# notpresent
    VP (Pret Sg P2) => "entreoíste" ;--# notpresent
    VP (Pret Sg P3) => "entreoyó" ;--# notpresent
    VP (Pret Pl P1) => "entreoímos" ;--# notpresent
    VP (Pret Pl P2) => "entreoísteis" ;--# notpresent
    VP (Pret Pl P3) => "entreoyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entreoiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entreoirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entreoirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entreoiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entreoiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entreoirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entreoyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entreoyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entreoyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entreoyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entreoyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entreoyeren" ;--# notpresent
    VP (Cond Sg P1) => "entreoiría" ;--# notpresent
    VP (Cond Sg P2) => "entreoirías" ;--# notpresent
    VP (Cond Sg P3) => "entreoiría" ;--# notpresent
    VP (Cond Pl P1) => "entreoiríamos" ;--# notpresent
    VP (Cond Pl P2) => "entreoiríais" ;--# notpresent
    VP (Cond Pl P3) => "entreoirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entreoye" ;
    VP (Imp Sg P3) => "entreoiga" ;
    VP (Imp Pl P1) => "entreoigamos" ;
    VP (Imp Pl P2) => "entreoíd" ;
    VP (Imp Pl P3) => "entreoigan" ;
    VP (Pass Sg Masc) => "entreoído" ;
    VP (Pass Sg Fem) => "entreoída" ;
    VP (Pass Pl Masc) => "entreoídos" ;
    VP (Pass Pl Fem) => "entreoídas"
    }
  } ;

lin oír_V = verboV 
 {s = table {
    VI Infn => "oír" ;
    VI Ger => "oyendo" ;
    VI Part => "oído" ;
    VP (Pres Ind Sg P1) => "oigo" ;
    VP (Pres Ind Sg P2) => "oyes" ;
    VP (Pres Ind Sg P3) => "oye" ;
    VP (Pres Ind Pl P1) => "oímos" ;
    VP (Pres Ind Pl P2) => "oís" ;
    VP (Pres Ind Pl P3) => "oyen" ;
    VP (Pres Subj Sg P1) => "oiga" ;
    VP (Pres Subj Sg P2) => "oigas" ;
    VP (Pres Subj Sg P3) => "oiga" ;
    VP (Pres Subj Pl P1) => "oigamos" ;
    VP (Pres Subj Pl P2) => "oigáis" ;
    VP (Pres Subj Pl P3) => "oigan" ;
    VP (Impf Ind Sg P1) => "oía" ;--# notpresent
    VP (Impf Ind Sg P2) => "oías" ;--# notpresent
    VP (Impf Ind Sg P3) => "oía" ;--# notpresent
    VP (Impf Ind Pl P1) => "oíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "oíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "oían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"oyera" ; "oyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"oyeras" ; "oyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"oyera" ; "oyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"oyéramos" ; "oyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"oyerais" ; "oyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"oyeran" ; "oyesen"} ;--# notpresent
    VP (Pret Sg P1) => "oí" ;--# notpresent
    VP (Pret Sg P2) => "oíste" ;--# notpresent
    VP (Pret Sg P3) => "oyó" ;--# notpresent
    VP (Pret Pl P1) => "oímos" ;--# notpresent
    VP (Pret Pl P2) => "oísteis" ;--# notpresent
    VP (Pret Pl P3) => "oyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "oiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "oirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "oirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "oiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "oiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "oirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "oyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "oyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "oyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "oyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "oyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "oyeren" ;--# notpresent
    VP (Cond Sg P1) => "oiría" ;--# notpresent
    VP (Cond Sg P2) => "oirías" ;--# notpresent
    VP (Cond Sg P3) => "oiría" ;--# notpresent
    VP (Cond Pl P1) => "oiríamos" ;--# notpresent
    VP (Cond Pl P2) => "oiríais" ;--# notpresent
    VP (Cond Pl P3) => "oirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "oye" ;
    VP (Imp Sg P3) => "oiga" ;
    VP (Imp Pl P1) => "oigamos" ;
    VP (Imp Pl P2) => "oíd" ;
    VP (Imp Pl P3) => "oigan" ;
    VP (Pass Sg Masc) => "oído" ;
    VP (Pass Sg Fem) => "oída" ;
    VP (Pass Pl Masc) => "oídos" ;
    VP (Pass Pl Fem) => "oídas"
    }
  } ;

lin trasoír_V = verboV 
 {s = table {
    VI Infn => "trasoír" ;
    VI Ger => "trasoyendo" ;
    VI Part => "trasoído" ;
    VP (Pres Ind Sg P1) => "trasoigo" ;
    VP (Pres Ind Sg P2) => "trasoyes" ;
    VP (Pres Ind Sg P3) => "trasoye" ;
    VP (Pres Ind Pl P1) => "trasoímos" ;
    VP (Pres Ind Pl P2) => "trasoís" ;
    VP (Pres Ind Pl P3) => "trasoyen" ;
    VP (Pres Subj Sg P1) => "trasoiga" ;
    VP (Pres Subj Sg P2) => "trasoigas" ;
    VP (Pres Subj Sg P3) => "trasoiga" ;
    VP (Pres Subj Pl P1) => "trasoigamos" ;
    VP (Pres Subj Pl P2) => "trasoigáis" ;
    VP (Pres Subj Pl P3) => "trasoigan" ;
    VP (Impf Ind Sg P1) => "trasoía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasoías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasoía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasoíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasoíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasoían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasoyera" ; "trasoyese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasoyeras" ; "trasoyeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasoyera" ; "trasoyese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasoyéramos" ; "trasoyésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasoyerais" ; "trasoyeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasoyeran" ; "trasoyesen"} ;--# notpresent
    VP (Pret Sg P1) => "trasoí" ;--# notpresent
    VP (Pret Sg P2) => "trasoíste" ;--# notpresent
    VP (Pret Sg P3) => "trasoyó" ;--# notpresent
    VP (Pret Pl P1) => "trasoímos" ;--# notpresent
    VP (Pret Pl P2) => "trasoísteis" ;--# notpresent
    VP (Pret Pl P3) => "trasoyeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasoiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasoirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasoirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasoiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasoiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasoirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasoyere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasoyeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasoyere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasoyéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasoyereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasoyeren" ;--# notpresent
    VP (Cond Sg P1) => "trasoiría" ;--# notpresent
    VP (Cond Sg P2) => "trasoirías" ;--# notpresent
    VP (Cond Sg P3) => "trasoiría" ;--# notpresent
    VP (Cond Pl P1) => "trasoiríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasoiríais" ;--# notpresent
    VP (Cond Pl P3) => "trasoirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasoye" ;
    VP (Imp Sg P3) => "trasoiga" ;
    VP (Imp Pl P1) => "trasoigamos" ;
    VP (Imp Pl P2) => "trasoíd" ;
    VP (Imp Pl P3) => "trasoigan" ;
    VP (Pass Sg Masc) => "trasoído" ;
    VP (Pass Sg Fem) => "trasoída" ;
    VP (Pass Pl Masc) => "trasoídos" ;
    VP (Pass Pl Fem) => "trasoídas"
    }
  } ;

lin oler_V = verboV 
 {s = table {
    VI Infn => "oler" ;
    VI Ger => "oliendo" ;
    VI Part => "olido" ;
    VP (Pres Ind Sg P1) => "huelo" ;
    VP (Pres Ind Sg P2) => "hueles" ;
    VP (Pres Ind Sg P3) => "huele" ;
    VP (Pres Ind Pl P1) => "olemos" ;
    VP (Pres Ind Pl P2) => "oléis" ;
    VP (Pres Ind Pl P3) => "huelen" ;
    VP (Pres Subj Sg P1) => "huela" ;
    VP (Pres Subj Sg P2) => "huelas" ;
    VP (Pres Subj Sg P3) => "huela" ;
    VP (Pres Subj Pl P1) => "olamos" ;
    VP (Pres Subj Pl P2) => "oláis" ;
    VP (Pres Subj Pl P3) => "huelan" ;
    VP (Impf Ind Sg P1) => "olía" ;--# notpresent
    VP (Impf Ind Sg P2) => "olías" ;--# notpresent
    VP (Impf Ind Sg P3) => "olía" ;--# notpresent
    VP (Impf Ind Pl P1) => "olíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "olíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "olían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"oliera" ; "oliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"olieras" ; "olieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"oliera" ; "oliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"oliéramos" ; "oliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"olierais" ; "olieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"olieran" ; "oliesen"} ;--# notpresent
    VP (Pret Sg P1) => "olí" ;--# notpresent
    VP (Pret Sg P2) => "oliste" ;--# notpresent
    VP (Pret Sg P3) => "olió" ;--# notpresent
    VP (Pret Pl P1) => "olimos" ;--# notpresent
    VP (Pret Pl P2) => "olisteis" ;--# notpresent
    VP (Pret Pl P3) => "olieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "oleré" ;--# notpresent
    VP (Fut Ind Sg P2) => "olerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "olerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "oleremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "oleréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "olerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "oliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "olieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "oliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "oliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "oliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "olieren" ;--# notpresent
    VP (Cond Sg P1) => "olería" ;--# notpresent
    VP (Cond Sg P2) => "olerías" ;--# notpresent
    VP (Cond Sg P3) => "olería" ;--# notpresent
    VP (Cond Pl P1) => "oleríamos" ;--# notpresent
    VP (Cond Pl P2) => "oleríais" ;--# notpresent
    VP (Cond Pl P3) => "olerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "huele" ;
    VP (Imp Sg P3) => "huela" ;
    VP (Imp Pl P1) => "olamos" ;
    VP (Imp Pl P2) => "oled" ;
    VP (Imp Pl P3) => "huelan" ;
    VP (Pass Sg Masc) => "olido" ;
    VP (Pass Sg Fem) => "olida" ;
    VP (Pass Pl Masc) => "olidos" ;
    VP (Pass Pl Fem) => "olidas"
    }
  } ;

lin acaecer2_V = verboV 
 {s = table {
    VI Infn => "acaecer" ;
    VI Ger => "acaeciendo" ;
    VI Part => "acaecido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => "acaece" ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => "acaecen" ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => "acaezca" ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => "acaezcan" ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => "acaecía" ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => "acaecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acaeciera" ; "acaeciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acaecieran" ; "acaeciesen"} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => "acaeció" ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => "acaecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => "acaecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => "acaecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => "acaeciere" ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => "acaecieren" ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => "acaecería" ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => "acaecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => "acaezca" ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => "acaezcan" ;
    VP (Pass Sg Masc) => "acaecido" ;
    VP (Pass Sg Fem) => "acaecida" ;
    VP (Pass Pl Masc) => "acaecidos" ;
    VP (Pass Pl Fem) => "acaecidas"
    }
  } ;

lin acontecer2_V = verboV 
 {s = table {
    VI Infn => "acontecer" ;
    VI Ger => "aconteciendo" ;
    VI Part => "acontecido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => "acontece" ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => "acontecen" ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => "acontezca" ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => "acontezcan" ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => "acontecía" ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => "acontecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"aconteciera" ; "aconteciese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acontecieran" ; "aconteciesen"} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => "aconteció" ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => "acontecieron" ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => "acontecerá" ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => "acontecerán" ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => "aconteciere" ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => "acontecieren" ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => "acontecería" ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => "acontecerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => "acontezca" ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => "acontezcan" ;
    VP (Pass Sg Masc) => "acontecido" ;
    VP (Pass Sg Fem) => "acontecida" ;
    VP (Pass Pl Masc) => "acontecidos" ;
    VP (Pass Pl Fem) => "acontecidas"
    }
  } ;

lin aplacer2_V = verboV 
 {s = table {
    VI Infn => "aplacer" ;
    VI Ger => "aplaciendo" ;
    VI Part => "aplacido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => "aplace" ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => "aplacen" ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => "aplacía" ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => "aplacían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin astreñir_V = verboV 
 {s = table {
    VI Infn => "astreñir" ;
    VI Ger => "astriñiendo" ;
    VI Part => "astreñido" ;
    VP (Pres Ind Sg P1) => "astriño" ;
    VP (Pres Ind Sg P2) => "astriñes" ;
    VP (Pres Ind Sg P3) => "astriñe" ;
    VP (Pres Ind Pl P1) => "astreñimos" ;
    VP (Pres Ind Pl P2) => "astreñís" ;
    VP (Pres Ind Pl P3) => "astriñen" ;
    VP (Pres Subj Sg P1) => "astriña" ;
    VP (Pres Subj Sg P2) => "astriñas" ;
    VP (Pres Subj Sg P3) => "astriña" ;
    VP (Pres Subj Pl P1) => "astriñamos" ;
    VP (Pres Subj Pl P2) => "astriñáis" ;
    VP (Pres Subj Pl P3) => "astriñan" ;
    VP (Impf Ind Sg P1) => "astreñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "astreñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "astreñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "astreñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "astreñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "astreñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"astriñera" ; "astriñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"astriñeras" ; "astriñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"astriñera" ; "astriñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"astriñéramos" ; "astriñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"astriñerais" ; "astriñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"astriñeran" ; "astriñesen"} ;--# notpresent
    VP (Pret Sg P1) => "astreñí" ;--# notpresent
    VP (Pret Sg P2) => "astreñiste" ;--# notpresent
    VP (Pret Sg P3) => "astriñó" ;--# notpresent
    VP (Pret Pl P1) => "astreñimos" ;--# notpresent
    VP (Pret Pl P2) => "astreñisteis" ;--# notpresent
    VP (Pret Pl P3) => "astriñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "astreñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "astreñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "astreñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "astreñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "astreñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "astreñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "astriñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "astriñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "astriñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "astriñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "astriñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "astriñeren" ;--# notpresent
    VP (Cond Sg P1) => "astreñiría" ;--# notpresent
    VP (Cond Sg P2) => "astreñirías" ;--# notpresent
    VP (Cond Sg P3) => "astreñiría" ;--# notpresent
    VP (Cond Pl P1) => "astreñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "astreñiríais" ;--# notpresent
    VP (Cond Pl P3) => "astreñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "astriñe" ;
    VP (Imp Sg P3) => "astriña" ;
    VP (Imp Pl P1) => "astriñamos" ;
    VP (Imp Pl P2) => "astreñid" ;
    VP (Imp Pl P3) => "astriñan" ;
    VP (Pass Sg Masc) => "astreñido" ;
    VP (Pass Sg Fem) => "astreñida" ;
    VP (Pass Pl Masc) => "astreñidos" ;
    VP (Pass Pl Fem) => "astreñidas"
    }
  } ;

lin ceñir_V = verboV 
 {s = table {
    VI Infn => "ceñir" ;
    VI Ger => "ciñiendo" ;
    VI Part => "ceñido" ;
    VP (Pres Ind Sg P1) => "ciño" ;
    VP (Pres Ind Sg P2) => "ciñes" ;
    VP (Pres Ind Sg P3) => "ciñe" ;
    VP (Pres Ind Pl P1) => "ceñimos" ;
    VP (Pres Ind Pl P2) => "ceñís" ;
    VP (Pres Ind Pl P3) => "ciñen" ;
    VP (Pres Subj Sg P1) => "ciña" ;
    VP (Pres Subj Sg P2) => "ciñas" ;
    VP (Pres Subj Sg P3) => "ciña" ;
    VP (Pres Subj Pl P1) => "ciñamos" ;
    VP (Pres Subj Pl P2) => "ciñáis" ;
    VP (Pres Subj Pl P3) => "ciñan" ;
    VP (Impf Ind Sg P1) => "ceñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "ceñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "ceñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "ceñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "ceñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "ceñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"ciñera" ; "ciñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"ciñeras" ; "ciñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"ciñera" ; "ciñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"ciñéramos" ; "ciñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"ciñerais" ; "ciñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"ciñeran" ; "ciñesen"} ;--# notpresent
    VP (Pret Sg P1) => "ceñí" ;--# notpresent
    VP (Pret Sg P2) => "ceñiste" ;--# notpresent
    VP (Pret Sg P3) => "ciñó" ;--# notpresent
    VP (Pret Pl P1) => "ceñimos" ;--# notpresent
    VP (Pret Pl P2) => "ceñisteis" ;--# notpresent
    VP (Pret Pl P3) => "ciñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "ceñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "ceñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "ceñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "ceñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "ceñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "ceñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "ciñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "ciñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "ciñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "ciñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "ciñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "ciñeren" ;--# notpresent
    VP (Cond Sg P1) => "ceñiría" ;--# notpresent
    VP (Cond Sg P2) => "ceñirías" ;--# notpresent
    VP (Cond Sg P3) => "ceñiría" ;--# notpresent
    VP (Cond Pl P1) => "ceñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "ceñiríais" ;--# notpresent
    VP (Cond Pl P3) => "ceñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ciñe" ;
    VP (Imp Sg P3) => "ciña" ;
    VP (Imp Pl P1) => "ciñamos" ;
    VP (Imp Pl P2) => "ceñid" ;
    VP (Imp Pl P3) => "ciñan" ;
    VP (Pass Sg Masc) => "ceñido" ;
    VP (Pass Sg Fem) => "ceñida" ;
    VP (Pass Pl Masc) => "ceñidos" ;
    VP (Pass Pl Fem) => "ceñidas"
    }
  } ;

lin competir_V = verboV 
 {s = table {
    VI Infn => "competir" ;
    VI Ger => "compitiendo" ;
    VI Part => "competido" ;
    VP (Pres Ind Sg P1) => "compito" ;
    VP (Pres Ind Sg P2) => "compites" ;
    VP (Pres Ind Sg P3) => "compite" ;
    VP (Pres Ind Pl P1) => "competimos" ;
    VP (Pres Ind Pl P2) => "competís" ;
    VP (Pres Ind Pl P3) => "compiten" ;
    VP (Pres Subj Sg P1) => "compita" ;
    VP (Pres Subj Sg P2) => "compitas" ;
    VP (Pres Subj Sg P3) => "compita" ;
    VP (Pres Subj Pl P1) => "compitamos" ;
    VP (Pres Subj Pl P2) => "compitáis" ;
    VP (Pres Subj Pl P3) => "compitan" ;
    VP (Impf Ind Sg P1) => "competía" ;--# notpresent
    VP (Impf Ind Sg P2) => "competías" ;--# notpresent
    VP (Impf Ind Sg P3) => "competía" ;--# notpresent
    VP (Impf Ind Pl P1) => "competíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "competíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "competían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"compitiera" ; "compitiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"compitieras" ; "compitieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"compitiera" ; "compitiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"compitiéramos" ; "compitiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"compitierais" ; "compitieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"compitieran" ; "compitiesen"} ;--# notpresent
    VP (Pret Sg P1) => "competí" ;--# notpresent
    VP (Pret Sg P2) => "competiste" ;--# notpresent
    VP (Pret Sg P3) => "compitió" ;--# notpresent
    VP (Pret Pl P1) => "competimos" ;--# notpresent
    VP (Pret Pl P2) => "competisteis" ;--# notpresent
    VP (Pret Pl P3) => "compitieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "competiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "competirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "competirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "competiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "competiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "competirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "compitiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "compitieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "compitiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "compitiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "compitiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "compitieren" ;--# notpresent
    VP (Cond Sg P1) => "competiría" ;--# notpresent
    VP (Cond Sg P2) => "competirías" ;--# notpresent
    VP (Cond Sg P3) => "competiría" ;--# notpresent
    VP (Cond Pl P1) => "competiríamos" ;--# notpresent
    VP (Cond Pl P2) => "competiríais" ;--# notpresent
    VP (Cond Pl P3) => "competirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "compite" ;
    VP (Imp Sg P3) => "compita" ;
    VP (Imp Pl P1) => "compitamos" ;
    VP (Imp Pl P2) => "competid" ;
    VP (Imp Pl P3) => "compitan" ;
    VP (Pass Sg Masc) => "competido" ;
    VP (Pass Sg Fem) => "competida" ;
    VP (Pass Pl Masc) => "competidos" ;
    VP (Pass Pl Fem) => "competidas"
    }
  } ;

lin concebir_V = verboV 
 {s = table {
    VI Infn => "concebir" ;
    VI Ger => "concibiendo" ;
    VI Part => "concebido" ;
    VP (Pres Ind Sg P1) => "concibo" ;
    VP (Pres Ind Sg P2) => "concibes" ;
    VP (Pres Ind Sg P3) => "concibe" ;
    VP (Pres Ind Pl P1) => "concebimos" ;
    VP (Pres Ind Pl P2) => "concebís" ;
    VP (Pres Ind Pl P3) => "conciben" ;
    VP (Pres Subj Sg P1) => "conciba" ;
    VP (Pres Subj Sg P2) => "concibas" ;
    VP (Pres Subj Sg P3) => "conciba" ;
    VP (Pres Subj Pl P1) => "concibamos" ;
    VP (Pres Subj Pl P2) => "concibáis" ;
    VP (Pres Subj Pl P3) => "conciban" ;
    VP (Impf Ind Sg P1) => "concebía" ;--# notpresent
    VP (Impf Ind Sg P2) => "concebías" ;--# notpresent
    VP (Impf Ind Sg P3) => "concebía" ;--# notpresent
    VP (Impf Ind Pl P1) => "concebíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "concebíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "concebían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"concibiera" ; "concibiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"concibieras" ; "concibieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"concibiera" ; "concibiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"concibiéramos" ; "concibiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"concibierais" ; "concibieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"concibieran" ; "concibiesen"} ;--# notpresent
    VP (Pret Sg P1) => "concebí" ;--# notpresent
    VP (Pret Sg P2) => "concebiste" ;--# notpresent
    VP (Pret Sg P3) => "concibió" ;--# notpresent
    VP (Pret Pl P1) => "concebimos" ;--# notpresent
    VP (Pret Pl P2) => "concebisteis" ;--# notpresent
    VP (Pret Pl P3) => "concibieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "concebiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "concebirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "concebirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "concebiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "concebiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "concebirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "concibiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "concibieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "concibiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "concibiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "concibiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "concibieren" ;--# notpresent
    VP (Cond Sg P1) => "concebiría" ;--# notpresent
    VP (Cond Sg P2) => "concebirías" ;--# notpresent
    VP (Cond Sg P3) => "concebiría" ;--# notpresent
    VP (Cond Pl P1) => "concebiríamos" ;--# notpresent
    VP (Cond Pl P2) => "concebiríais" ;--# notpresent
    VP (Cond Pl P3) => "concebirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "concibe" ;
    VP (Imp Sg P3) => "conciba" ;
    VP (Imp Pl P1) => "concibamos" ;
    VP (Imp Pl P2) => "concebid" ;
    VP (Imp Pl P3) => "conciban" ;
    VP (Pass Sg Masc) => "concebido" ;
    VP (Pass Sg Fem) => "concebida" ;
    VP (Pass Pl Masc) => "concebidos" ;
    VP (Pass Pl Fem) => "concebidas"
    }
  } ;

lin constreñir_V = verboV 
 {s = table {
    VI Infn => "constreñir" ;
    VI Ger => "constriñiendo" ;
    VI Part => "constreñido" ;
    VP (Pres Ind Sg P1) => "constriño" ;
    VP (Pres Ind Sg P2) => "constriñes" ;
    VP (Pres Ind Sg P3) => "constriñe" ;
    VP (Pres Ind Pl P1) => "constreñimos" ;
    VP (Pres Ind Pl P2) => "constreñís" ;
    VP (Pres Ind Pl P3) => "constriñen" ;
    VP (Pres Subj Sg P1) => "constriña" ;
    VP (Pres Subj Sg P2) => "constriñas" ;
    VP (Pres Subj Sg P3) => "constriña" ;
    VP (Pres Subj Pl P1) => "constriñamos" ;
    VP (Pres Subj Pl P2) => "constriñáis" ;
    VP (Pres Subj Pl P3) => "constriñan" ;
    VP (Impf Ind Sg P1) => "constreñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "constreñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "constreñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "constreñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "constreñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "constreñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"constriñera" ; "constriñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"constriñeras" ; "constriñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"constriñera" ; "constriñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"constriñéramos" ; "constriñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"constriñerais" ; "constriñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"constriñeran" ; "constriñesen"} ;--# notpresent
    VP (Pret Sg P1) => "constreñí" ;--# notpresent
    VP (Pret Sg P2) => "constreñiste" ;--# notpresent
    VP (Pret Sg P3) => "constriñó" ;--# notpresent
    VP (Pret Pl P1) => "constreñimos" ;--# notpresent
    VP (Pret Pl P2) => "constreñisteis" ;--# notpresent
    VP (Pret Pl P3) => "constriñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "constreñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "constreñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "constreñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "constreñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "constreñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "constreñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "constriñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "constriñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "constriñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "constriñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "constriñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "constriñeren" ;--# notpresent
    VP (Cond Sg P1) => "constreñiría" ;--# notpresent
    VP (Cond Sg P2) => "constreñirías" ;--# notpresent
    VP (Cond Sg P3) => "constreñiría" ;--# notpresent
    VP (Cond Pl P1) => "constreñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "constreñiríais" ;--# notpresent
    VP (Cond Pl P3) => "constreñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "constriñe" ;
    VP (Imp Sg P3) => "constriña" ;
    VP (Imp Pl P1) => "constriñamos" ;
    VP (Imp Pl P2) => "constreñid" ;
    VP (Imp Pl P3) => "constriñan" ;
    VP (Pass Sg Masc) => "constreñido" ;
    VP (Pass Sg Fem) => "constreñida" ;
    VP (Pass Pl Masc) => "constreñidos" ;
    VP (Pass Pl Fem) => "constreñidas"
    }
  } ;

lin derretir_V = verboV 
 {s = table {
    VI Infn => "derretir" ;
    VI Ger => "derritiendo" ;
    VI Part => "derretido" ;
    VP (Pres Ind Sg P1) => "derrito" ;
    VP (Pres Ind Sg P2) => "derrites" ;
    VP (Pres Ind Sg P3) => "derrite" ;
    VP (Pres Ind Pl P1) => "derretimos" ;
    VP (Pres Ind Pl P2) => "derretís" ;
    VP (Pres Ind Pl P3) => "derriten" ;
    VP (Pres Subj Sg P1) => "derrita" ;
    VP (Pres Subj Sg P2) => "derritas" ;
    VP (Pres Subj Sg P3) => "derrita" ;
    VP (Pres Subj Pl P1) => "derritamos" ;
    VP (Pres Subj Pl P2) => "derritáis" ;
    VP (Pres Subj Pl P3) => "derritan" ;
    VP (Impf Ind Sg P1) => "derretía" ;--# notpresent
    VP (Impf Ind Sg P2) => "derretías" ;--# notpresent
    VP (Impf Ind Sg P3) => "derretía" ;--# notpresent
    VP (Impf Ind Pl P1) => "derretíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "derretíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "derretían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"derritiera" ; "derritiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"derritieras" ; "derritieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"derritiera" ; "derritiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"derritiéramos" ; "derritiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"derritierais" ; "derritieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"derritieran" ; "derritiesen"} ;--# notpresent
    VP (Pret Sg P1) => "derretí" ;--# notpresent
    VP (Pret Sg P2) => "derretiste" ;--# notpresent
    VP (Pret Sg P3) => "derritió" ;--# notpresent
    VP (Pret Pl P1) => "derretimos" ;--# notpresent
    VP (Pret Pl P2) => "derretisteis" ;--# notpresent
    VP (Pret Pl P3) => "derritieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "derretiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "derretirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "derretirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "derretiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "derretiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "derretirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "derritiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "derritieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "derritiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "derritiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "derritiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "derritieren" ;--# notpresent
    VP (Cond Sg P1) => "derretiría" ;--# notpresent
    VP (Cond Sg P2) => "derretirías" ;--# notpresent
    VP (Cond Sg P3) => "derretiría" ;--# notpresent
    VP (Cond Pl P1) => "derretiríamos" ;--# notpresent
    VP (Cond Pl P2) => "derretiríais" ;--# notpresent
    VP (Cond Pl P3) => "derretirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "derrite" ;
    VP (Imp Sg P3) => "derrita" ;
    VP (Imp Pl P1) => "derritamos" ;
    VP (Imp Pl P2) => "derretid" ;
    VP (Imp Pl P3) => "derritan" ;
    VP (Pass Sg Masc) => "derretido" ;
    VP (Pass Sg Fem) => "derretida" ;
    VP (Pass Pl Masc) => "derretidos" ;
    VP (Pass Pl Fem) => "derretidas"
    }
  } ;

lin desceñir_V = verboV 
 {s = table {
    VI Infn => "desceñir" ;
    VI Ger => "desciñiendo" ;
    VI Part => "desceñido" ;
    VP (Pres Ind Sg P1) => "desciño" ;
    VP (Pres Ind Sg P2) => "desciñes" ;
    VP (Pres Ind Sg P3) => "desciñe" ;
    VP (Pres Ind Pl P1) => "desceñimos" ;
    VP (Pres Ind Pl P2) => "desceñís" ;
    VP (Pres Ind Pl P3) => "desciñen" ;
    VP (Pres Subj Sg P1) => "desciña" ;
    VP (Pres Subj Sg P2) => "desciñas" ;
    VP (Pres Subj Sg P3) => "desciña" ;
    VP (Pres Subj Pl P1) => "desciñamos" ;
    VP (Pres Subj Pl P2) => "desciñáis" ;
    VP (Pres Subj Pl P3) => "desciñan" ;
    VP (Impf Ind Sg P1) => "desceñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desceñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desceñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desceñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desceñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desceñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desciñera" ; "desciñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desciñeras" ; "desciñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desciñera" ; "desciñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desciñéramos" ; "desciñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desciñerais" ; "desciñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desciñeran" ; "desciñesen"} ;--# notpresent
    VP (Pret Sg P1) => "desceñí" ;--# notpresent
    VP (Pret Sg P2) => "desceñiste" ;--# notpresent
    VP (Pret Sg P3) => "desciñó" ;--# notpresent
    VP (Pret Pl P1) => "desceñimos" ;--# notpresent
    VP (Pret Pl P2) => "desceñisteis" ;--# notpresent
    VP (Pret Pl P3) => "desciñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desceñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desceñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desceñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desceñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desceñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desceñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desciñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desciñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desciñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desciñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desciñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desciñeren" ;--# notpresent
    VP (Cond Sg P1) => "desceñiría" ;--# notpresent
    VP (Cond Sg P2) => "desceñirías" ;--# notpresent
    VP (Cond Sg P3) => "desceñiría" ;--# notpresent
    VP (Cond Pl P1) => "desceñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desceñiríais" ;--# notpresent
    VP (Cond Pl P3) => "desceñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desciñe" ;
    VP (Imp Sg P3) => "desciña" ;
    VP (Imp Pl P1) => "desciñamos" ;
    VP (Imp Pl P2) => "desceñid" ;
    VP (Imp Pl P3) => "desciñan" ;
    VP (Pass Sg Masc) => "desceñido" ;
    VP (Pass Sg Fem) => "desceñida" ;
    VP (Pass Pl Masc) => "desceñidos" ;
    VP (Pass Pl Fem) => "desceñidas"
    }
  } ;

lin deservir_V = verboV 
 {s = table {
    VI Infn => "deservir" ;
    VI Ger => "desirviendo" ;
    VI Part => "deservido" ;
    VP (Pres Ind Sg P1) => "desirvo" ;
    VP (Pres Ind Sg P2) => "desirves" ;
    VP (Pres Ind Sg P3) => "desirve" ;
    VP (Pres Ind Pl P1) => "deservimos" ;
    VP (Pres Ind Pl P2) => "deservís" ;
    VP (Pres Ind Pl P3) => "desirven" ;
    VP (Pres Subj Sg P1) => "desirva" ;
    VP (Pres Subj Sg P2) => "desirvas" ;
    VP (Pres Subj Sg P3) => "desirva" ;
    VP (Pres Subj Pl P1) => "desirvamos" ;
    VP (Pres Subj Pl P2) => "desirváis" ;
    VP (Pres Subj Pl P3) => "desirvan" ;
    VP (Impf Ind Sg P1) => "deservía" ;--# notpresent
    VP (Impf Ind Sg P2) => "deservías" ;--# notpresent
    VP (Impf Ind Sg P3) => "deservía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deservíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deservíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deservían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desirviera" ; "desirviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desirvieras" ; "desirvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desirviera" ; "desirviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desirviéramos" ; "desirviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desirvierais" ; "desirvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desirvieran" ; "desirviesen"} ;--# notpresent
    VP (Pret Sg P1) => "deserví" ;--# notpresent
    VP (Pret Sg P2) => "deserviste" ;--# notpresent
    VP (Pret Sg P3) => "desirvió" ;--# notpresent
    VP (Pret Pl P1) => "deservimos" ;--# notpresent
    VP (Pret Pl P2) => "deservisteis" ;--# notpresent
    VP (Pret Pl P3) => "desirvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "deserviré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deservirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deservirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "deserviremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "deserviréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deservirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desirviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desirvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desirviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desirviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desirviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desirvieren" ;--# notpresent
    VP (Cond Sg P1) => "deserviría" ;--# notpresent
    VP (Cond Sg P2) => "deservirías" ;--# notpresent
    VP (Cond Sg P3) => "deserviría" ;--# notpresent
    VP (Cond Pl P1) => "deserviríamos" ;--# notpresent
    VP (Cond Pl P2) => "deserviríais" ;--# notpresent
    VP (Cond Pl P3) => "deservirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desirve" ;
    VP (Imp Sg P3) => "desirva" ;
    VP (Imp Pl P1) => "desirvamos" ;
    VP (Imp Pl P2) => "deservid" ;
    VP (Imp Pl P3) => "desirvan" ;
    VP (Pass Sg Masc) => "deservido" ;
    VP (Pass Sg Fem) => "deservida" ;
    VP (Pass Pl Masc) => "deservidos" ;
    VP (Pass Pl Fem) => "deservidas"
    }
  } ;

lin despedir_V = verboV 
 {s = table {
    VI Infn => "despedir" ;
    VI Ger => "despidiendo" ;
    VI Part => "despedido" ;
    VP (Pres Ind Sg P1) => "despido" ;
    VP (Pres Ind Sg P2) => "despides" ;
    VP (Pres Ind Sg P3) => "despide" ;
    VP (Pres Ind Pl P1) => "despedimos" ;
    VP (Pres Ind Pl P2) => "despedís" ;
    VP (Pres Ind Pl P3) => "despiden" ;
    VP (Pres Subj Sg P1) => "despida" ;
    VP (Pres Subj Sg P2) => "despidas" ;
    VP (Pres Subj Sg P3) => "despida" ;
    VP (Pres Subj Pl P1) => "despidamos" ;
    VP (Pres Subj Pl P2) => "despidáis" ;
    VP (Pres Subj Pl P3) => "despidan" ;
    VP (Impf Ind Sg P1) => "despedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "despedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "despedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "despedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "despedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "despedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"despidiera" ; "despidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"despidieras" ; "despidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"despidiera" ; "despidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"despidiéramos" ; "despidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"despidierais" ; "despidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"despidieran" ; "despidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "despedí" ;--# notpresent
    VP (Pret Sg P2) => "despediste" ;--# notpresent
    VP (Pret Sg P3) => "despidió" ;--# notpresent
    VP (Pret Pl P1) => "despedimos" ;--# notpresent
    VP (Pret Pl P2) => "despedisteis" ;--# notpresent
    VP (Pret Pl P3) => "despidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "despediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "despedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "despedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "despediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "despediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "despedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "despidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "despidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "despidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "despidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "despidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "despidieren" ;--# notpresent
    VP (Cond Sg P1) => "despediría" ;--# notpresent
    VP (Cond Sg P2) => "despedirías" ;--# notpresent
    VP (Cond Sg P3) => "despediría" ;--# notpresent
    VP (Cond Pl P1) => "despediríamos" ;--# notpresent
    VP (Cond Pl P2) => "despediríais" ;--# notpresent
    VP (Cond Pl P3) => "despedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "despide" ;
    VP (Imp Sg P3) => "despida" ;
    VP (Imp Pl P1) => "despidamos" ;
    VP (Imp Pl P2) => "despedid" ;
    VP (Imp Pl P3) => "despidan" ;
    VP (Pass Sg Masc) => "despedido" ;
    VP (Pass Sg Fem) => "despedida" ;
    VP (Pass Pl Masc) => "despedidos" ;
    VP (Pass Pl Fem) => "despedidas"
    }
  } ;

lin desteñir_V = verboV 
 {s = table {
    VI Infn => "desteñir" ;
    VI Ger => "destiñiendo" ;
    VI Part => "desteñido" ;
    VP (Pres Ind Sg P1) => "destiño" ;
    VP (Pres Ind Sg P2) => "destiñes" ;
    VP (Pres Ind Sg P3) => "destiñe" ;
    VP (Pres Ind Pl P1) => "desteñimos" ;
    VP (Pres Ind Pl P2) => "desteñís" ;
    VP (Pres Ind Pl P3) => "destiñen" ;
    VP (Pres Subj Sg P1) => "destiña" ;
    VP (Pres Subj Sg P2) => "destiñas" ;
    VP (Pres Subj Sg P3) => "destiña" ;
    VP (Pres Subj Pl P1) => "destiñamos" ;
    VP (Pres Subj Pl P2) => "destiñáis" ;
    VP (Pres Subj Pl P3) => "destiñan" ;
    VP (Impf Ind Sg P1) => "desteñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desteñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desteñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desteñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desteñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desteñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"destiñera" ; "destiñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"destiñeras" ; "destiñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"destiñera" ; "destiñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"destiñéramos" ; "destiñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"destiñerais" ; "destiñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"destiñeran" ; "destiñesen"} ;--# notpresent
    VP (Pret Sg P1) => "desteñí" ;--# notpresent
    VP (Pret Sg P2) => "desteñiste" ;--# notpresent
    VP (Pret Sg P3) => "destiñó" ;--# notpresent
    VP (Pret Pl P1) => "desteñimos" ;--# notpresent
    VP (Pret Pl P2) => "desteñisteis" ;--# notpresent
    VP (Pret Pl P3) => "destiñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desteñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desteñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desteñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desteñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desteñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desteñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "destiñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "destiñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "destiñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "destiñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "destiñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "destiñeren" ;--# notpresent
    VP (Cond Sg P1) => "desteñiría" ;--# notpresent
    VP (Cond Sg P2) => "desteñirías" ;--# notpresent
    VP (Cond Sg P3) => "desteñiría" ;--# notpresent
    VP (Cond Pl P1) => "desteñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desteñiríais" ;--# notpresent
    VP (Cond Pl P3) => "desteñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "destiñe" ;
    VP (Imp Sg P3) => "destiña" ;
    VP (Imp Pl P1) => "destiñamos" ;
    VP (Imp Pl P2) => "desteñid" ;
    VP (Imp Pl P3) => "destiñan" ;
    VP (Pass Sg Masc) => "desteñido" ;
    VP (Pass Sg Fem) => "desteñida" ;
    VP (Pass Pl Masc) => "desteñidos" ;
    VP (Pass Pl Fem) => "desteñidas"
    }
  } ;

lin desvestir_V = verboV 
 {s = table {
    VI Infn => "desvestir" ;
    VI Ger => "desvistiendo" ;
    VI Part => "desvestido" ;
    VP (Pres Ind Sg P1) => "desvisto" ;
    VP (Pres Ind Sg P2) => "desvistes" ;
    VP (Pres Ind Sg P3) => "desviste" ;
    VP (Pres Ind Pl P1) => "desvestimos" ;
    VP (Pres Ind Pl P2) => "desvestís" ;
    VP (Pres Ind Pl P3) => "desvisten" ;
    VP (Pres Subj Sg P1) => "desvista" ;
    VP (Pres Subj Sg P2) => "desvistas" ;
    VP (Pres Subj Sg P3) => "desvista" ;
    VP (Pres Subj Pl P1) => "desvistamos" ;
    VP (Pres Subj Pl P2) => "desvistáis" ;
    VP (Pres Subj Pl P3) => "desvistan" ;
    VP (Impf Ind Sg P1) => "desvestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desvestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desvestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desvestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desvestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desvestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desvistiera" ; "desvistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desvistieras" ; "desvistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desvistiera" ; "desvistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desvistiéramos" ; "desvistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desvistierais" ; "desvistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desvistieran" ; "desvistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desvestí" ;--# notpresent
    VP (Pret Sg P2) => "desvestiste" ;--# notpresent
    VP (Pret Sg P3) => "desvistió" ;--# notpresent
    VP (Pret Pl P1) => "desvestimos" ;--# notpresent
    VP (Pret Pl P2) => "desvestisteis" ;--# notpresent
    VP (Pret Pl P3) => "desvistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desvestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desvestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desvestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desvestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desvestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desvestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desvistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desvistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desvistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desvistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desvistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desvistieren" ;--# notpresent
    VP (Cond Sg P1) => "desvestiría" ;--# notpresent
    VP (Cond Sg P2) => "desvestirías" ;--# notpresent
    VP (Cond Sg P3) => "desvestiría" ;--# notpresent
    VP (Cond Pl P1) => "desvestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desvestiríais" ;--# notpresent
    VP (Cond Pl P3) => "desvestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desviste" ;
    VP (Imp Sg P3) => "desvista" ;
    VP (Imp Pl P1) => "desvistamos" ;
    VP (Imp Pl P2) => "desvestid" ;
    VP (Imp Pl P3) => "desvistan" ;
    VP (Pass Sg Masc) => "desvestido" ;
    VP (Pass Sg Fem) => "desvestida" ;
    VP (Pass Pl Masc) => "desvestidos" ;
    VP (Pass Pl Fem) => "desvestidas"
    }
  } ;

lin embestir_V = verboV 
 {s = table {
    VI Infn => "embestir" ;
    VI Ger => "embistiendo" ;
    VI Part => "embestido" ;
    VP (Pres Ind Sg P1) => "embisto" ;
    VP (Pres Ind Sg P2) => "embistes" ;
    VP (Pres Ind Sg P3) => "embiste" ;
    VP (Pres Ind Pl P1) => "embestimos" ;
    VP (Pres Ind Pl P2) => "embestís" ;
    VP (Pres Ind Pl P3) => "embisten" ;
    VP (Pres Subj Sg P1) => "embista" ;
    VP (Pres Subj Sg P2) => "embistas" ;
    VP (Pres Subj Sg P3) => "embista" ;
    VP (Pres Subj Pl P1) => "embistamos" ;
    VP (Pres Subj Pl P2) => "embistáis" ;
    VP (Pres Subj Pl P3) => "embistan" ;
    VP (Impf Ind Sg P1) => "embestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "embestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "embestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "embestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "embestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "embestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"embistiera" ; "embistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"embistieras" ; "embistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"embistiera" ; "embistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"embistiéramos" ; "embistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"embistierais" ; "embistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"embistieran" ; "embistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "embestí" ;--# notpresent
    VP (Pret Sg P2) => "embestiste" ;--# notpresent
    VP (Pret Sg P3) => "embistió" ;--# notpresent
    VP (Pret Pl P1) => "embestimos" ;--# notpresent
    VP (Pret Pl P2) => "embestisteis" ;--# notpresent
    VP (Pret Pl P3) => "embistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "embestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "embestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "embestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "embestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "embestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "embestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "embistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "embistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "embistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "embistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "embistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "embistieren" ;--# notpresent
    VP (Cond Sg P1) => "embestiría" ;--# notpresent
    VP (Cond Sg P2) => "embestirías" ;--# notpresent
    VP (Cond Sg P3) => "embestiría" ;--# notpresent
    VP (Cond Pl P1) => "embestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "embestiríais" ;--# notpresent
    VP (Cond Pl P3) => "embestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "embiste" ;
    VP (Imp Sg P3) => "embista" ;
    VP (Imp Pl P1) => "embistamos" ;
    VP (Imp Pl P2) => "embestid" ;
    VP (Imp Pl P3) => "embistan" ;
    VP (Pass Sg Masc) => "embestido" ;
    VP (Pass Sg Fem) => "embestida" ;
    VP (Pass Pl Masc) => "embestidos" ;
    VP (Pass Pl Fem) => "embestidas"
    }
  } ;

lin envestir_V = verboV 
 {s = table {
    VI Infn => "envestir" ;
    VI Ger => "envistiendo" ;
    VI Part => "envestido" ;
    VP (Pres Ind Sg P1) => "envisto" ;
    VP (Pres Ind Sg P2) => "envistes" ;
    VP (Pres Ind Sg P3) => "enviste" ;
    VP (Pres Ind Pl P1) => "envestimos" ;
    VP (Pres Ind Pl P2) => "envestís" ;
    VP (Pres Ind Pl P3) => "envisten" ;
    VP (Pres Subj Sg P1) => "envista" ;
    VP (Pres Subj Sg P2) => "envistas" ;
    VP (Pres Subj Sg P3) => "envista" ;
    VP (Pres Subj Pl P1) => "envistamos" ;
    VP (Pres Subj Pl P2) => "envistáis" ;
    VP (Pres Subj Pl P3) => "envistan" ;
    VP (Impf Ind Sg P1) => "envestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "envestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "envestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "envestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "envestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "envestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"envistiera" ; "envistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"envistieras" ; "envistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"envistiera" ; "envistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"envistiéramos" ; "envistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"envistierais" ; "envistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"envistieran" ; "envistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "envestí" ;--# notpresent
    VP (Pret Sg P2) => "envestiste" ;--# notpresent
    VP (Pret Sg P3) => "envistió" ;--# notpresent
    VP (Pret Pl P1) => "envestimos" ;--# notpresent
    VP (Pret Pl P2) => "envestisteis" ;--# notpresent
    VP (Pret Pl P3) => "envistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "envestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "envestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "envestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "envestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "envestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "envestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "envistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "envistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "envistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "envistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "envistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "envistieren" ;--# notpresent
    VP (Cond Sg P1) => "envestiría" ;--# notpresent
    VP (Cond Sg P2) => "envestirías" ;--# notpresent
    VP (Cond Sg P3) => "envestiría" ;--# notpresent
    VP (Cond Pl P1) => "envestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "envestiríais" ;--# notpresent
    VP (Cond Pl P3) => "envestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "enviste" ;
    VP (Imp Sg P3) => "envista" ;
    VP (Imp Pl P1) => "envistamos" ;
    VP (Imp Pl P2) => "envestid" ;
    VP (Imp Pl P3) => "envistan" ;
    VP (Pass Sg Masc) => "envestido" ;
    VP (Pass Sg Fem) => "envestida" ;
    VP (Pass Pl Masc) => "envestidos" ;
    VP (Pass Pl Fem) => "envestidas"
    }
  } ;

lin estreñir_V = verboV 
 {s = table {
    VI Infn => "estreñir" ;
    VI Ger => "estriñiendo" ;
    VI Part => "estreñido" ;
    VP (Pres Ind Sg P1) => "estriño" ;
    VP (Pres Ind Sg P2) => "estriñes" ;
    VP (Pres Ind Sg P3) => "estriñe" ;
    VP (Pres Ind Pl P1) => "estreñimos" ;
    VP (Pres Ind Pl P2) => "estreñís" ;
    VP (Pres Ind Pl P3) => "estriñen" ;
    VP (Pres Subj Sg P1) => "estriña" ;
    VP (Pres Subj Sg P2) => "estriñas" ;
    VP (Pres Subj Sg P3) => "estriña" ;
    VP (Pres Subj Pl P1) => "estriñamos" ;
    VP (Pres Subj Pl P2) => "estriñáis" ;
    VP (Pres Subj Pl P3) => "estriñan" ;
    VP (Impf Ind Sg P1) => "estreñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "estreñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "estreñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "estreñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "estreñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "estreñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"estriñera" ; "estriñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"estriñeras" ; "estriñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"estriñera" ; "estriñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"estriñéramos" ; "estriñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"estriñerais" ; "estriñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"estriñeran" ; "estriñesen"} ;--# notpresent
    VP (Pret Sg P1) => "estreñí" ;--# notpresent
    VP (Pret Sg P2) => "estreñiste" ;--# notpresent
    VP (Pret Sg P3) => "estriñó" ;--# notpresent
    VP (Pret Pl P1) => "estreñimos" ;--# notpresent
    VP (Pret Pl P2) => "estreñisteis" ;--# notpresent
    VP (Pret Pl P3) => "estriñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "estreñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "estreñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "estreñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "estreñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "estreñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "estreñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "estriñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "estriñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "estriñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "estriñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "estriñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "estriñeren" ;--# notpresent
    VP (Cond Sg P1) => "estreñiría" ;--# notpresent
    VP (Cond Sg P2) => "estreñirías" ;--# notpresent
    VP (Cond Sg P3) => "estreñiría" ;--# notpresent
    VP (Cond Pl P1) => "estreñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "estreñiríais" ;--# notpresent
    VP (Cond Pl P3) => "estreñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "estriñe" ;
    VP (Imp Sg P3) => "estriña" ;
    VP (Imp Pl P1) => "estriñamos" ;
    VP (Imp Pl P2) => "estreñid" ;
    VP (Imp Pl P3) => "estriñan" ;
    VP (Pass Sg Masc) => "estreñido" ;
    VP (Pass Sg Fem) => "estreñida" ;
    VP (Pass Pl Masc) => "estreñidos" ;
    VP (Pass Pl Fem) => "estreñidas"
    }
  } ;

lin expedir_V = verboV 
 {s = table {
    VI Infn => "expedir" ;
    VI Ger => "expidiendo" ;
    VI Part => "expedido" ;
    VP (Pres Ind Sg P1) => "expido" ;
    VP (Pres Ind Sg P2) => "expides" ;
    VP (Pres Ind Sg P3) => "expide" ;
    VP (Pres Ind Pl P1) => "expedimos" ;
    VP (Pres Ind Pl P2) => "expedís" ;
    VP (Pres Ind Pl P3) => "expiden" ;
    VP (Pres Subj Sg P1) => "expida" ;
    VP (Pres Subj Sg P2) => "expidas" ;
    VP (Pres Subj Sg P3) => "expida" ;
    VP (Pres Subj Pl P1) => "expidamos" ;
    VP (Pres Subj Pl P2) => "expidáis" ;
    VP (Pres Subj Pl P3) => "expidan" ;
    VP (Impf Ind Sg P1) => "expedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "expedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "expedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "expedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "expedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "expedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"expidiera" ; "expidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"expidieras" ; "expidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"expidiera" ; "expidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"expidiéramos" ; "expidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"expidierais" ; "expidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"expidieran" ; "expidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "expedí" ;--# notpresent
    VP (Pret Sg P2) => "expediste" ;--# notpresent
    VP (Pret Sg P3) => "expidió" ;--# notpresent
    VP (Pret Pl P1) => "expedimos" ;--# notpresent
    VP (Pret Pl P2) => "expedisteis" ;--# notpresent
    VP (Pret Pl P3) => "expidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "expediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "expedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "expedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "expediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "expediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "expedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "expidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "expidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "expidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "expidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "expidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "expidieren" ;--# notpresent
    VP (Cond Sg P1) => "expediría" ;--# notpresent
    VP (Cond Sg P2) => "expedirías" ;--# notpresent
    VP (Cond Sg P3) => "expediría" ;--# notpresent
    VP (Cond Pl P1) => "expediríamos" ;--# notpresent
    VP (Cond Pl P2) => "expediríais" ;--# notpresent
    VP (Cond Pl P3) => "expedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "expide" ;
    VP (Imp Sg P3) => "expida" ;
    VP (Imp Pl P1) => "expidamos" ;
    VP (Imp Pl P2) => "expedid" ;
    VP (Imp Pl P3) => "expidan" ;
    VP (Pass Sg Masc) => "expedido" ;
    VP (Pass Sg Fem) => "expedida" ;
    VP (Pass Pl Masc) => "expedidos" ;
    VP (Pass Pl Fem) => "expedidas"
    }
  } ;

lin gemir_V = verboV 
 {s = table {
    VI Infn => "gemir" ;
    VI Ger => "gimiendo" ;
    VI Part => "gemido" ;
    VP (Pres Ind Sg P1) => "gimo" ;
    VP (Pres Ind Sg P2) => "gimes" ;
    VP (Pres Ind Sg P3) => "gime" ;
    VP (Pres Ind Pl P1) => "gemimos" ;
    VP (Pres Ind Pl P2) => "gemís" ;
    VP (Pres Ind Pl P3) => "gimen" ;
    VP (Pres Subj Sg P1) => "gima" ;
    VP (Pres Subj Sg P2) => "gimas" ;
    VP (Pres Subj Sg P3) => "gima" ;
    VP (Pres Subj Pl P1) => "gimamos" ;
    VP (Pres Subj Pl P2) => "gimáis" ;
    VP (Pres Subj Pl P3) => "giman" ;
    VP (Impf Ind Sg P1) => "gemía" ;--# notpresent
    VP (Impf Ind Sg P2) => "gemías" ;--# notpresent
    VP (Impf Ind Sg P3) => "gemía" ;--# notpresent
    VP (Impf Ind Pl P1) => "gemíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "gemíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "gemían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"gimiera" ; "gimiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"gimieras" ; "gimieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"gimiera" ; "gimiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"gimiéramos" ; "gimiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"gimierais" ; "gimieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"gimieran" ; "gimiesen"} ;--# notpresent
    VP (Pret Sg P1) => "gemí" ;--# notpresent
    VP (Pret Sg P2) => "gemiste" ;--# notpresent
    VP (Pret Sg P3) => "gimió" ;--# notpresent
    VP (Pret Pl P1) => "gemimos" ;--# notpresent
    VP (Pret Pl P2) => "gemisteis" ;--# notpresent
    VP (Pret Pl P3) => "gimieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "gemiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "gemirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "gemirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "gemiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "gemiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "gemirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "gimiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "gimieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "gimiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "gimiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "gimiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "gimieren" ;--# notpresent
    VP (Cond Sg P1) => "gemiría" ;--# notpresent
    VP (Cond Sg P2) => "gemirías" ;--# notpresent
    VP (Cond Sg P3) => "gemiría" ;--# notpresent
    VP (Cond Pl P1) => "gemiríamos" ;--# notpresent
    VP (Cond Pl P2) => "gemiríais" ;--# notpresent
    VP (Cond Pl P3) => "gemirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "gime" ;
    VP (Imp Sg P3) => "gima" ;
    VP (Imp Pl P1) => "gimamos" ;
    VP (Imp Pl P2) => "gemid" ;
    VP (Imp Pl P3) => "giman" ;
    VP (Pass Sg Masc) => "gemido" ;
    VP (Pass Sg Fem) => "gemida" ;
    VP (Pass Pl Masc) => "gemidos" ;
    VP (Pass Pl Fem) => "gemidas"
    }
  } ;

lin gernir_V = verboV 
 {s = table {
    VI Infn => "gernir" ;
    VI Ger => "girniendo" ;
    VI Part => "gernido" ;
    VP (Pres Ind Sg P1) => "girno" ;
    VP (Pres Ind Sg P2) => "girnes" ;
    VP (Pres Ind Sg P3) => "girne" ;
    VP (Pres Ind Pl P1) => "gernimos" ;
    VP (Pres Ind Pl P2) => "gernís" ;
    VP (Pres Ind Pl P3) => "girnen" ;
    VP (Pres Subj Sg P1) => "girna" ;
    VP (Pres Subj Sg P2) => "girnas" ;
    VP (Pres Subj Sg P3) => "girna" ;
    VP (Pres Subj Pl P1) => "girnamos" ;
    VP (Pres Subj Pl P2) => "girnáis" ;
    VP (Pres Subj Pl P3) => "girnan" ;
    VP (Impf Ind Sg P1) => "gernía" ;--# notpresent
    VP (Impf Ind Sg P2) => "gernías" ;--# notpresent
    VP (Impf Ind Sg P3) => "gernía" ;--# notpresent
    VP (Impf Ind Pl P1) => "gerníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "gerníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "gernían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"girniera" ; "girniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"girnieras" ; "girnieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"girniera" ; "girniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"girniéramos" ; "girniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"girnierais" ; "girnieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"girnieran" ; "girniesen"} ;--# notpresent
    VP (Pret Sg P1) => "gerní" ;--# notpresent
    VP (Pret Sg P2) => "gerniste" ;--# notpresent
    VP (Pret Sg P3) => "girnió" ;--# notpresent
    VP (Pret Pl P1) => "gernimos" ;--# notpresent
    VP (Pret Pl P2) => "gernisteis" ;--# notpresent
    VP (Pret Pl P3) => "girnieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "gerniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "gernirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "gernirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "gerniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "gerniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "gernirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "girniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "girnieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "girniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "girniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "girniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "girnieren" ;--# notpresent
    VP (Cond Sg P1) => "gerniría" ;--# notpresent
    VP (Cond Sg P2) => "gernirías" ;--# notpresent
    VP (Cond Sg P3) => "gerniría" ;--# notpresent
    VP (Cond Pl P1) => "gerniríamos" ;--# notpresent
    VP (Cond Pl P2) => "gerniríais" ;--# notpresent
    VP (Cond Pl P3) => "gernirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "girne" ;
    VP (Imp Sg P3) => "girna" ;
    VP (Imp Pl P1) => "girnamos" ;
    VP (Imp Pl P2) => "gernid" ;
    VP (Imp Pl P3) => "girnan" ;
    VP (Pass Sg Masc) => "gernido" ;
    VP (Pass Sg Fem) => "gernida" ;
    VP (Pass Pl Masc) => "gernidos" ;
    VP (Pass Pl Fem) => "gernidas"
    }
  } ;

lin henchir_V = verboV 
 {s = table {
    VI Infn => "henchir" ;
    VI Ger => "hinchiendo" ;
    VI Part => "henchido" ;
    VP (Pres Ind Sg P1) => "hincho" ;
    VP (Pres Ind Sg P2) => "hinches" ;
    VP (Pres Ind Sg P3) => "hinche" ;
    VP (Pres Ind Pl P1) => "henchimos" ;
    VP (Pres Ind Pl P2) => "henchís" ;
    VP (Pres Ind Pl P3) => "hinchen" ;
    VP (Pres Subj Sg P1) => "hincha" ;
    VP (Pres Subj Sg P2) => "hinchas" ;
    VP (Pres Subj Sg P3) => "hincha" ;
    VP (Pres Subj Pl P1) => "hinchamos" ;
    VP (Pres Subj Pl P2) => "hincháis" ;
    VP (Pres Subj Pl P3) => "hinchan" ;
    VP (Impf Ind Sg P1) => "henchía" ;--# notpresent
    VP (Impf Ind Sg P2) => "henchías" ;--# notpresent
    VP (Impf Ind Sg P3) => "henchía" ;--# notpresent
    VP (Impf Ind Pl P1) => "henchíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "henchíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "henchían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hinchiera" ; "hinchiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hinchieras" ; "hinchieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hinchiera" ; "hinchiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hinchiéramos" ; "hinchiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hinchierais" ; "hinchieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hinchieran" ; "hinchiesen"} ;--# notpresent
    VP (Pret Sg P1) => "henchí" ;--# notpresent
    VP (Pret Sg P2) => "henchiste" ;--# notpresent
    VP (Pret Sg P3) => "hinchió" ;--# notpresent
    VP (Pret Pl P1) => "henchimos" ;--# notpresent
    VP (Pret Pl P2) => "henchisteis" ;--# notpresent
    VP (Pret Pl P3) => "hinchieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "henchiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "henchirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "henchirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "henchiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "henchiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "henchirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hinchiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hinchieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hinchiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hinchiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hinchiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hinchieren" ;--# notpresent
    VP (Cond Sg P1) => "henchiría" ;--# notpresent
    VP (Cond Sg P2) => "henchirías" ;--# notpresent
    VP (Cond Sg P3) => "henchiría" ;--# notpresent
    VP (Cond Pl P1) => "henchiríamos" ;--# notpresent
    VP (Cond Pl P2) => "henchiríais" ;--# notpresent
    VP (Cond Pl P3) => "henchirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hinche" ;
    VP (Imp Sg P3) => "hincha" ;
    VP (Imp Pl P1) => "hinchamos" ;
    VP (Imp Pl P2) => "henchid" ;
    VP (Imp Pl P3) => "hinchan" ;
    VP (Pass Sg Masc) => "henchido" ;
    VP (Pass Sg Fem) => "henchida" ;
    VP (Pass Pl Masc) => "henchidos" ;
    VP (Pass Pl Fem) => "henchidas"
    }
  } ;

lin heñir_V = verboV 
 {s = table {
    VI Infn => "heñir" ;
    VI Ger => "hiñiendo" ;
    VI Part => "heñido" ;
    VP (Pres Ind Sg P1) => "hiño" ;
    VP (Pres Ind Sg P2) => "hiñes" ;
    VP (Pres Ind Sg P3) => "hiñe" ;
    VP (Pres Ind Pl P1) => "heñimos" ;
    VP (Pres Ind Pl P2) => "heñís" ;
    VP (Pres Ind Pl P3) => "hiñen" ;
    VP (Pres Subj Sg P1) => "hiña" ;
    VP (Pres Subj Sg P2) => "hiñas" ;
    VP (Pres Subj Sg P3) => "hiña" ;
    VP (Pres Subj Pl P1) => "hiñamos" ;
    VP (Pres Subj Pl P2) => "hiñáis" ;
    VP (Pres Subj Pl P3) => "hiñan" ;
    VP (Impf Ind Sg P1) => "heñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "heñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "heñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "heñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "heñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "heñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"hiñera" ; "hiñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"hiñeras" ; "hiñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"hiñera" ; "hiñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"hiñéramos" ; "hiñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"hiñerais" ; "hiñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"hiñeran" ; "hiñesen"} ;--# notpresent
    VP (Pret Sg P1) => "heñí" ;--# notpresent
    VP (Pret Sg P2) => "heñiste" ;--# notpresent
    VP (Pret Sg P3) => "hiñó" ;--# notpresent
    VP (Pret Pl P1) => "heñimos" ;--# notpresent
    VP (Pret Pl P2) => "heñisteis" ;--# notpresent
    VP (Pret Pl P3) => "hiñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "heñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "heñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "heñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "heñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "heñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "heñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "hiñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "hiñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "hiñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "hiñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "hiñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "hiñeren" ;--# notpresent
    VP (Cond Sg P1) => "heñiría" ;--# notpresent
    VP (Cond Sg P2) => "heñirías" ;--# notpresent
    VP (Cond Sg P3) => "heñiría" ;--# notpresent
    VP (Cond Pl P1) => "heñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "heñiríais" ;--# notpresent
    VP (Cond Pl P3) => "heñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "hiñe" ;
    VP (Imp Sg P3) => "hiña" ;
    VP (Imp Pl P1) => "hiñamos" ;
    VP (Imp Pl P2) => "heñid" ;
    VP (Imp Pl P3) => "hiñan" ;
    VP (Pass Sg Masc) => "heñido" ;
    VP (Pass Sg Fem) => "heñida" ;
    VP (Pass Pl Masc) => "heñidos" ;
    VP (Pass Pl Fem) => "heñidas"
    }
  } ;

lin impedir_V = verboV 
 {s = table {
    VI Infn => "impedir" ;
    VI Ger => "impidiendo" ;
    VI Part => "impedido" ;
    VP (Pres Ind Sg P1) => "impido" ;
    VP (Pres Ind Sg P2) => "impides" ;
    VP (Pres Ind Sg P3) => "impide" ;
    VP (Pres Ind Pl P1) => "impedimos" ;
    VP (Pres Ind Pl P2) => "impedís" ;
    VP (Pres Ind Pl P3) => "impiden" ;
    VP (Pres Subj Sg P1) => "impida" ;
    VP (Pres Subj Sg P2) => "impidas" ;
    VP (Pres Subj Sg P3) => "impida" ;
    VP (Pres Subj Pl P1) => "impidamos" ;
    VP (Pres Subj Pl P2) => "impidáis" ;
    VP (Pres Subj Pl P3) => "impidan" ;
    VP (Impf Ind Sg P1) => "impedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "impedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "impedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "impedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "impedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "impedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"impidiera" ; "impidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"impidieras" ; "impidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"impidiera" ; "impidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"impidiéramos" ; "impidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"impidierais" ; "impidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"impidieran" ; "impidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "impedí" ;--# notpresent
    VP (Pret Sg P2) => "impediste" ;--# notpresent
    VP (Pret Sg P3) => "impidió" ;--# notpresent
    VP (Pret Pl P1) => "impedimos" ;--# notpresent
    VP (Pret Pl P2) => "impedisteis" ;--# notpresent
    VP (Pret Pl P3) => "impidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "impediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "impedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "impedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "impediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "impediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "impedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "impidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "impidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "impidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "impidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "impidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "impidieren" ;--# notpresent
    VP (Cond Sg P1) => "impediría" ;--# notpresent
    VP (Cond Sg P2) => "impedirías" ;--# notpresent
    VP (Cond Sg P3) => "impediría" ;--# notpresent
    VP (Cond Pl P1) => "impediríamos" ;--# notpresent
    VP (Cond Pl P2) => "impediríais" ;--# notpresent
    VP (Cond Pl P3) => "impedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "impide" ;
    VP (Imp Sg P3) => "impida" ;
    VP (Imp Pl P1) => "impidamos" ;
    VP (Imp Pl P2) => "impedid" ;
    VP (Imp Pl P3) => "impidan" ;
    VP (Pass Sg Masc) => "impedido" ;
    VP (Pass Sg Fem) => "impedida" ;
    VP (Pass Pl Masc) => "impedidos" ;
    VP (Pass Pl Fem) => "impedidas"
    }
  } ;

lin investir_V = verboV 
 {s = table {
    VI Infn => "investir" ;
    VI Ger => "invistiendo" ;
    VI Part => "investido" ;
    VP (Pres Ind Sg P1) => "invisto" ;
    VP (Pres Ind Sg P2) => "invistes" ;
    VP (Pres Ind Sg P3) => "inviste" ;
    VP (Pres Ind Pl P1) => "investimos" ;
    VP (Pres Ind Pl P2) => "investís" ;
    VP (Pres Ind Pl P3) => "invisten" ;
    VP (Pres Subj Sg P1) => "invista" ;
    VP (Pres Subj Sg P2) => "invistas" ;
    VP (Pres Subj Sg P3) => "invista" ;
    VP (Pres Subj Pl P1) => "invistamos" ;
    VP (Pres Subj Pl P2) => "invistáis" ;
    VP (Pres Subj Pl P3) => "invistan" ;
    VP (Impf Ind Sg P1) => "investía" ;--# notpresent
    VP (Impf Ind Sg P2) => "investías" ;--# notpresent
    VP (Impf Ind Sg P3) => "investía" ;--# notpresent
    VP (Impf Ind Pl P1) => "investíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "investíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "investían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"invistiera" ; "invistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"invistieras" ; "invistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"invistiera" ; "invistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"invistiéramos" ; "invistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"invistierais" ; "invistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"invistieran" ; "invistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "investí" ;--# notpresent
    VP (Pret Sg P2) => "investiste" ;--# notpresent
    VP (Pret Sg P3) => "invistió" ;--# notpresent
    VP (Pret Pl P1) => "investimos" ;--# notpresent
    VP (Pret Pl P2) => "investisteis" ;--# notpresent
    VP (Pret Pl P3) => "invistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "investiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "investirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "investirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "investiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "investiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "investirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "invistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "invistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "invistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "invistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "invistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "invistieren" ;--# notpresent
    VP (Cond Sg P1) => "investiría" ;--# notpresent
    VP (Cond Sg P2) => "investirías" ;--# notpresent
    VP (Cond Sg P3) => "investiría" ;--# notpresent
    VP (Cond Pl P1) => "investiríamos" ;--# notpresent
    VP (Cond Pl P2) => "investiríais" ;--# notpresent
    VP (Cond Pl P3) => "investirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "inviste" ;
    VP (Imp Sg P3) => "invista" ;
    VP (Imp Pl P1) => "invistamos" ;
    VP (Imp Pl P2) => "investid" ;
    VP (Imp Pl P3) => "invistan" ;
    VP (Pass Sg Masc) => "investido" ;
    VP (Pass Sg Fem) => "investida" ;
    VP (Pass Pl Masc) => "investidos" ;
    VP (Pass Pl Fem) => "investidas"
    }
  } ;

lin medir_V = verboV 
 {s = table {
    VI Infn => "medir" ;
    VI Ger => "midiendo" ;
    VI Part => "medido" ;
    VP (Pres Ind Sg P1) => "mido" ;
    VP (Pres Ind Sg P2) => "mides" ;
    VP (Pres Ind Sg P3) => "mide" ;
    VP (Pres Ind Pl P1) => "medimos" ;
    VP (Pres Ind Pl P2) => "medís" ;
    VP (Pres Ind Pl P3) => "miden" ;
    VP (Pres Subj Sg P1) => "mida" ;
    VP (Pres Subj Sg P2) => "midas" ;
    VP (Pres Subj Sg P3) => "mida" ;
    VP (Pres Subj Pl P1) => "midamos" ;
    VP (Pres Subj Pl P2) => "midáis" ;
    VP (Pres Subj Pl P3) => "midan" ;
    VP (Impf Ind Sg P1) => "medía" ;--# notpresent
    VP (Impf Ind Sg P2) => "medías" ;--# notpresent
    VP (Impf Ind Sg P3) => "medía" ;--# notpresent
    VP (Impf Ind Pl P1) => "medíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "medíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "medían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"midiera" ; "midiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"midieras" ; "midieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"midiera" ; "midiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"midiéramos" ; "midiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"midierais" ; "midieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"midieran" ; "midiesen"} ;--# notpresent
    VP (Pret Sg P1) => "medí" ;--# notpresent
    VP (Pret Sg P2) => "mediste" ;--# notpresent
    VP (Pret Sg P3) => "midió" ;--# notpresent
    VP (Pret Pl P1) => "medimos" ;--# notpresent
    VP (Pret Pl P2) => "medisteis" ;--# notpresent
    VP (Pret Pl P3) => "midieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "mediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "medirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "medirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "mediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "mediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "medirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "midiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "midieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "midiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "midiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "midiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "midieren" ;--# notpresent
    VP (Cond Sg P1) => "mediría" ;--# notpresent
    VP (Cond Sg P2) => "medirías" ;--# notpresent
    VP (Cond Sg P3) => "mediría" ;--# notpresent
    VP (Cond Pl P1) => "mediríamos" ;--# notpresent
    VP (Cond Pl P2) => "mediríais" ;--# notpresent
    VP (Cond Pl P3) => "medirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "mide" ;
    VP (Imp Sg P3) => "mida" ;
    VP (Imp Pl P1) => "midamos" ;
    VP (Imp Pl P2) => "medid" ;
    VP (Imp Pl P3) => "midan" ;
    VP (Pass Sg Masc) => "medido" ;
    VP (Pass Sg Fem) => "medida" ;
    VP (Pass Pl Masc) => "medidos" ;
    VP (Pass Pl Fem) => "medidas"
    }
  } ;

lin pedir_V = verboV 
 {s = table {
    VI Infn => "pedir" ;
    VI Ger => "pidiendo" ;
    VI Part => "pedido" ;
    VP (Pres Ind Sg P1) => "pido" ;
    VP (Pres Ind Sg P2) => "pides" ;
    VP (Pres Ind Sg P3) => "pide" ;
    VP (Pres Ind Pl P1) => "pedimos" ;
    VP (Pres Ind Pl P2) => "pedís" ;
    VP (Pres Ind Pl P3) => "piden" ;
    VP (Pres Subj Sg P1) => "pida" ;
    VP (Pres Subj Sg P2) => "pidas" ;
    VP (Pres Subj Sg P3) => "pida" ;
    VP (Pres Subj Pl P1) => "pidamos" ;
    VP (Pres Subj Pl P2) => "pidáis" ;
    VP (Pres Subj Pl P3) => "pidan" ;
    VP (Impf Ind Sg P1) => "pedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "pedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "pedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "pedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "pedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "pedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pidiera" ; "pidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pidieras" ; "pidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pidiera" ; "pidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pidiéramos" ; "pidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pidierais" ; "pidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pidieran" ; "pidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "pedí" ;--# notpresent
    VP (Pret Sg P2) => "pediste" ;--# notpresent
    VP (Pret Sg P3) => "pidió" ;--# notpresent
    VP (Pret Pl P1) => "pedimos" ;--# notpresent
    VP (Pret Pl P2) => "pedisteis" ;--# notpresent
    VP (Pret Pl P3) => "pidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "pediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "pedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "pedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "pediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "pediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "pedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pidieren" ;--# notpresent
    VP (Cond Sg P1) => "pediría" ;--# notpresent
    VP (Cond Sg P2) => "pedirías" ;--# notpresent
    VP (Cond Sg P3) => "pediría" ;--# notpresent
    VP (Cond Pl P1) => "pediríamos" ;--# notpresent
    VP (Cond Pl P2) => "pediríais" ;--# notpresent
    VP (Cond Pl P3) => "pedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "pide" ;
    VP (Imp Sg P3) => "pida" ;
    VP (Imp Pl P1) => "pidamos" ;
    VP (Imp Pl P2) => "pedid" ;
    VP (Imp Pl P3) => "pidan" ;
    VP (Pass Sg Masc) => "pedido" ;
    VP (Pass Sg Fem) => "pedida" ;
    VP (Pass Pl Masc) => "pedidos" ;
    VP (Pass Pl Fem) => "pedidas"
    }
  } ;

lin preconcebir_V = verboV 
 {s = table {
    VI Infn => "preconcebir" ;
    VI Ger => "preconcibiendo" ;
    VI Part => "preconcebido" ;
    VP (Pres Ind Sg P1) => "preconcibo" ;
    VP (Pres Ind Sg P2) => "preconcibes" ;
    VP (Pres Ind Sg P3) => "preconcibe" ;
    VP (Pres Ind Pl P1) => "preconcebimos" ;
    VP (Pres Ind Pl P2) => "preconcebís" ;
    VP (Pres Ind Pl P3) => "preconciben" ;
    VP (Pres Subj Sg P1) => "preconciba" ;
    VP (Pres Subj Sg P2) => "preconcibas" ;
    VP (Pres Subj Sg P3) => "preconciba" ;
    VP (Pres Subj Pl P1) => "preconcibamos" ;
    VP (Pres Subj Pl P2) => "preconcibáis" ;
    VP (Pres Subj Pl P3) => "preconciban" ;
    VP (Impf Ind Sg P1) => "preconcebía" ;--# notpresent
    VP (Impf Ind Sg P2) => "preconcebías" ;--# notpresent
    VP (Impf Ind Sg P3) => "preconcebía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preconcebíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preconcebíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preconcebían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"preconcibiera" ; "preconcibiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"preconcibieras" ; "preconcibieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"preconcibiera" ; "preconcibiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"preconcibiéramos" ; "preconcibiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"preconcibierais" ; "preconcibieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"preconcibieran" ; "preconcibiesen"} ;--# notpresent
    VP (Pret Sg P1) => "preconcebí" ;--# notpresent
    VP (Pret Sg P2) => "preconcebiste" ;--# notpresent
    VP (Pret Sg P3) => "preconcibió" ;--# notpresent
    VP (Pret Pl P1) => "preconcebimos" ;--# notpresent
    VP (Pret Pl P2) => "preconcebisteis" ;--# notpresent
    VP (Pret Pl P3) => "preconcibieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preconcebiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "preconcebirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "preconcebirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preconcebiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preconcebiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "preconcebirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "preconcibiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "preconcibieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "preconcibiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "preconcibiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "preconcibiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "preconcibieren" ;--# notpresent
    VP (Cond Sg P1) => "preconcebiría" ;--# notpresent
    VP (Cond Sg P2) => "preconcebirías" ;--# notpresent
    VP (Cond Sg P3) => "preconcebiría" ;--# notpresent
    VP (Cond Pl P1) => "preconcebiríamos" ;--# notpresent
    VP (Cond Pl P2) => "preconcebiríais" ;--# notpresent
    VP (Cond Pl P3) => "preconcebirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preconcibe" ;
    VP (Imp Sg P3) => "preconciba" ;
    VP (Imp Pl P1) => "preconcibamos" ;
    VP (Imp Pl P2) => "preconcebid" ;
    VP (Imp Pl P3) => "preconciban" ;
    VP (Pass Sg Masc) => "preconcebido" ;
    VP (Pass Sg Fem) => "preconcebida" ;
    VP (Pass Pl Masc) => "preconcebidos" ;
    VP (Pass Pl Fem) => "preconcebidas"
    }
  } ;

lin receñir_V = verboV 
 {s = table {
    VI Infn => "receñir" ;
    VI Ger => "reciñiendo" ;
    VI Part => "receñido" ;
    VP (Pres Ind Sg P1) => "reciño" ;
    VP (Pres Ind Sg P2) => "reciñes" ;
    VP (Pres Ind Sg P3) => "reciñe" ;
    VP (Pres Ind Pl P1) => "receñimos" ;
    VP (Pres Ind Pl P2) => "receñís" ;
    VP (Pres Ind Pl P3) => "reciñen" ;
    VP (Pres Subj Sg P1) => "reciña" ;
    VP (Pres Subj Sg P2) => "reciñas" ;
    VP (Pres Subj Sg P3) => "reciña" ;
    VP (Pres Subj Pl P1) => "reciñamos" ;
    VP (Pres Subj Pl P2) => "reciñáis" ;
    VP (Pres Subj Pl P3) => "reciñan" ;
    VP (Impf Ind Sg P1) => "receñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "receñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "receñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "receñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "receñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "receñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reciñera" ; "reciñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reciñeras" ; "reciñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reciñera" ; "reciñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reciñéramos" ; "reciñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reciñerais" ; "reciñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reciñeran" ; "reciñesen"} ;--# notpresent
    VP (Pret Sg P1) => "receñí" ;--# notpresent
    VP (Pret Sg P2) => "receñiste" ;--# notpresent
    VP (Pret Sg P3) => "reciñó" ;--# notpresent
    VP (Pret Pl P1) => "receñimos" ;--# notpresent
    VP (Pret Pl P2) => "receñisteis" ;--# notpresent
    VP (Pret Pl P3) => "reciñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "receñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "receñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "receñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "receñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "receñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "receñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reciñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reciñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reciñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reciñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reciñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reciñeren" ;--# notpresent
    VP (Cond Sg P1) => "receñiría" ;--# notpresent
    VP (Cond Sg P2) => "receñirías" ;--# notpresent
    VP (Cond Sg P3) => "receñiría" ;--# notpresent
    VP (Cond Pl P1) => "receñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "receñiríais" ;--# notpresent
    VP (Cond Pl P3) => "receñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reciñe" ;
    VP (Imp Sg P3) => "reciña" ;
    VP (Imp Pl P1) => "reciñamos" ;
    VP (Imp Pl P2) => "receñid" ;
    VP (Imp Pl P3) => "reciñan" ;
    VP (Pass Sg Masc) => "receñido" ;
    VP (Pass Sg Fem) => "receñida" ;
    VP (Pass Pl Masc) => "receñidos" ;
    VP (Pass Pl Fem) => "receñidas"
    }
  } ;

lin reexpedir_V = verboV 
 {s = table {
    VI Infn => "reexpedir" ;
    VI Ger => "reexpidiendo" ;
    VI Part => "reexpedido" ;
    VP (Pres Ind Sg P1) => "reexpido" ;
    VP (Pres Ind Sg P2) => "reexpides" ;
    VP (Pres Ind Sg P3) => "reexpide" ;
    VP (Pres Ind Pl P1) => "reexpedimos" ;
    VP (Pres Ind Pl P2) => "reexpedís" ;
    VP (Pres Ind Pl P3) => "reexpiden" ;
    VP (Pres Subj Sg P1) => "reexpida" ;
    VP (Pres Subj Sg P2) => "reexpidas" ;
    VP (Pres Subj Sg P3) => "reexpida" ;
    VP (Pres Subj Pl P1) => "reexpidamos" ;
    VP (Pres Subj Pl P2) => "reexpidáis" ;
    VP (Pres Subj Pl P3) => "reexpidan" ;
    VP (Impf Ind Sg P1) => "reexpedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reexpedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reexpedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reexpedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reexpedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reexpedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reexpidiera" ; "reexpidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reexpidieras" ; "reexpidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reexpidiera" ; "reexpidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reexpidiéramos" ; "reexpidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reexpidierais" ; "reexpidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reexpidieran" ; "reexpidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "reexpedí" ;--# notpresent
    VP (Pret Sg P2) => "reexpediste" ;--# notpresent
    VP (Pret Sg P3) => "reexpidió" ;--# notpresent
    VP (Pret Pl P1) => "reexpedimos" ;--# notpresent
    VP (Pret Pl P2) => "reexpedisteis" ;--# notpresent
    VP (Pret Pl P3) => "reexpidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reexpediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reexpedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reexpedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reexpediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reexpediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reexpedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reexpidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reexpidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reexpidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reexpidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reexpidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reexpidieren" ;--# notpresent
    VP (Cond Sg P1) => "reexpediría" ;--# notpresent
    VP (Cond Sg P2) => "reexpedirías" ;--# notpresent
    VP (Cond Sg P3) => "reexpediría" ;--# notpresent
    VP (Cond Pl P1) => "reexpediríamos" ;--# notpresent
    VP (Cond Pl P2) => "reexpediríais" ;--# notpresent
    VP (Cond Pl P3) => "reexpedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reexpide" ;
    VP (Imp Sg P3) => "reexpida" ;
    VP (Imp Pl P1) => "reexpidamos" ;
    VP (Imp Pl P2) => "reexpedid" ;
    VP (Imp Pl P3) => "reexpidan" ;
    VP (Pass Sg Masc) => "reexpedido" ;
    VP (Pass Sg Fem) => "reexpedida" ;
    VP (Pass Pl Masc) => "reexpedidos" ;
    VP (Pass Pl Fem) => "reexpedidas"
    }
  } ;

lin rehenchir_V = verboV 
 {s = table {
    VI Infn => "rehenchir" ;
    VI Ger => "rehinchiendo" ;
    VI Part => "rehenchido" ;
    VP (Pres Ind Sg P1) => "rehincho" ;
    VP (Pres Ind Sg P2) => "rehinches" ;
    VP (Pres Ind Sg P3) => "rehinche" ;
    VP (Pres Ind Pl P1) => "rehenchimos" ;
    VP (Pres Ind Pl P2) => "rehenchís" ;
    VP (Pres Ind Pl P3) => "rehinchen" ;
    VP (Pres Subj Sg P1) => "rehincha" ;
    VP (Pres Subj Sg P2) => "rehinchas" ;
    VP (Pres Subj Sg P3) => "rehincha" ;
    VP (Pres Subj Pl P1) => "rehinchamos" ;
    VP (Pres Subj Pl P2) => "rehincháis" ;
    VP (Pres Subj Pl P3) => "rehinchan" ;
    VP (Impf Ind Sg P1) => "rehenchía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rehenchías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rehenchía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rehenchíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rehenchíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rehenchían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rehinchiera" ; "rehinchiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rehinchieras" ; "rehinchieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rehinchiera" ; "rehinchiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rehinchiéramos" ; "rehinchiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rehinchierais" ; "rehinchieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rehinchieran" ; "rehinchiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rehenchí" ;--# notpresent
    VP (Pret Sg P2) => "rehenchiste" ;--# notpresent
    VP (Pret Sg P3) => "rehinchió" ;--# notpresent
    VP (Pret Pl P1) => "rehenchimos" ;--# notpresent
    VP (Pret Pl P2) => "rehenchisteis" ;--# notpresent
    VP (Pret Pl P3) => "rehinchieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rehenchiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rehenchirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rehenchirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rehenchiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rehenchiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rehenchirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rehinchiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rehinchieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rehinchiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rehinchiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rehinchiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rehinchieren" ;--# notpresent
    VP (Cond Sg P1) => "rehenchiría" ;--# notpresent
    VP (Cond Sg P2) => "rehenchirías" ;--# notpresent
    VP (Cond Sg P3) => "rehenchiría" ;--# notpresent
    VP (Cond Pl P1) => "rehenchiríamos" ;--# notpresent
    VP (Cond Pl P2) => "rehenchiríais" ;--# notpresent
    VP (Cond Pl P3) => "rehenchirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rehinche" ;
    VP (Imp Sg P3) => "rehincha" ;
    VP (Imp Pl P1) => "rehinchamos" ;
    VP (Imp Pl P2) => "rehenchid" ;
    VP (Imp Pl P3) => "rehinchan" ;
    VP (Pass Sg Masc) => "rehenchido" ;
    VP (Pass Sg Fem) => "rehenchida" ;
    VP (Pass Pl Masc) => "rehenchidos" ;
    VP (Pass Pl Fem) => "rehenchidas"
    }
  } ;

lin remedir_V = verboV 
 {s = table {
    VI Infn => "remedir" ;
    VI Ger => "remidiendo" ;
    VI Part => "remedido" ;
    VP (Pres Ind Sg P1) => "remido" ;
    VP (Pres Ind Sg P2) => "remides" ;
    VP (Pres Ind Sg P3) => "remide" ;
    VP (Pres Ind Pl P1) => "remedimos" ;
    VP (Pres Ind Pl P2) => "remedís" ;
    VP (Pres Ind Pl P3) => "remiden" ;
    VP (Pres Subj Sg P1) => "remida" ;
    VP (Pres Subj Sg P2) => "remidas" ;
    VP (Pres Subj Sg P3) => "remida" ;
    VP (Pres Subj Pl P1) => "remidamos" ;
    VP (Pres Subj Pl P2) => "remidáis" ;
    VP (Pres Subj Pl P3) => "remidan" ;
    VP (Impf Ind Sg P1) => "remedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "remedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "remedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "remedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "remedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "remedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"remidiera" ; "remidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"remidieras" ; "remidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"remidiera" ; "remidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"remidiéramos" ; "remidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"remidierais" ; "remidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"remidieran" ; "remidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "remedí" ;--# notpresent
    VP (Pret Sg P2) => "remediste" ;--# notpresent
    VP (Pret Sg P3) => "remidió" ;--# notpresent
    VP (Pret Pl P1) => "remedimos" ;--# notpresent
    VP (Pret Pl P2) => "remedisteis" ;--# notpresent
    VP (Pret Pl P3) => "remidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "remediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "remedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "remedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "remediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "remediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "remedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "remidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "remidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "remidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "remidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "remidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "remidieren" ;--# notpresent
    VP (Cond Sg P1) => "remediría" ;--# notpresent
    VP (Cond Sg P2) => "remedirías" ;--# notpresent
    VP (Cond Sg P3) => "remediría" ;--# notpresent
    VP (Cond Pl P1) => "remediríamos" ;--# notpresent
    VP (Cond Pl P2) => "remediríais" ;--# notpresent
    VP (Cond Pl P3) => "remedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "remide" ;
    VP (Imp Sg P3) => "remida" ;
    VP (Imp Pl P1) => "remidamos" ;
    VP (Imp Pl P2) => "remedid" ;
    VP (Imp Pl P3) => "remidan" ;
    VP (Pass Sg Masc) => "remedido" ;
    VP (Pass Sg Fem) => "remedida" ;
    VP (Pass Pl Masc) => "remedidos" ;
    VP (Pass Pl Fem) => "remedidas"
    }
  } ;

lin rendir_V = verboV 
 {s = table {
    VI Infn => "rendir" ;
    VI Ger => "rindiendo" ;
    VI Part => "rendido" ;
    VP (Pres Ind Sg P1) => "rindo" ;
    VP (Pres Ind Sg P2) => "rindes" ;
    VP (Pres Ind Sg P3) => "rinde" ;
    VP (Pres Ind Pl P1) => "rendimos" ;
    VP (Pres Ind Pl P2) => "rendís" ;
    VP (Pres Ind Pl P3) => "rinden" ;
    VP (Pres Subj Sg P1) => "rinda" ;
    VP (Pres Subj Sg P2) => "rindas" ;
    VP (Pres Subj Sg P3) => "rinda" ;
    VP (Pres Subj Pl P1) => "rindamos" ;
    VP (Pres Subj Pl P2) => "rindáis" ;
    VP (Pres Subj Pl P3) => "rindan" ;
    VP (Impf Ind Sg P1) => "rendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "rendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "rendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "rendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "rendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "rendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rindiera" ; "rindiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rindieras" ; "rindieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rindiera" ; "rindiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rindiéramos" ; "rindiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rindierais" ; "rindieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rindieran" ; "rindiesen"} ;--# notpresent
    VP (Pret Sg P1) => "rendí" ;--# notpresent
    VP (Pret Sg P2) => "rendiste" ;--# notpresent
    VP (Pret Sg P3) => "rindió" ;--# notpresent
    VP (Pret Pl P1) => "rendimos" ;--# notpresent
    VP (Pret Pl P2) => "rendisteis" ;--# notpresent
    VP (Pret Pl P3) => "rindieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "rendiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "rendirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "rendirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "rendiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "rendiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "rendirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rindiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rindieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rindiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rindiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rindiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rindieren" ;--# notpresent
    VP (Cond Sg P1) => "rendiría" ;--# notpresent
    VP (Cond Sg P2) => "rendirías" ;--# notpresent
    VP (Cond Sg P3) => "rendiría" ;--# notpresent
    VP (Cond Pl P1) => "rendiríamos" ;--# notpresent
    VP (Cond Pl P2) => "rendiríais" ;--# notpresent
    VP (Cond Pl P3) => "rendirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rinde" ;
    VP (Imp Sg P3) => "rinda" ;
    VP (Imp Pl P1) => "rindamos" ;
    VP (Imp Pl P2) => "rendid" ;
    VP (Imp Pl P3) => "rindan" ;
    VP (Pass Sg Masc) => "rendido" ;
    VP (Pass Sg Fem) => "rendida" ;
    VP (Pass Pl Masc) => "rendidos" ;
    VP (Pass Pl Fem) => "rendidas"
    }
  } ;

lin reñir_V = verboV 
 {s = table {
    VI Infn => "reñir" ;
    VI Ger => "riñiendo" ;
    VI Part => "reñido" ;
    VP (Pres Ind Sg P1) => "riño" ;
    VP (Pres Ind Sg P2) => "riñes" ;
    VP (Pres Ind Sg P3) => "riñe" ;
    VP (Pres Ind Pl P1) => "reñimos" ;
    VP (Pres Ind Pl P2) => "reñís" ;
    VP (Pres Ind Pl P3) => "riñen" ;
    VP (Pres Subj Sg P1) => "riña" ;
    VP (Pres Subj Sg P2) => "riñas" ;
    VP (Pres Subj Sg P3) => "riña" ;
    VP (Pres Subj Pl P1) => "riñamos" ;
    VP (Pres Subj Pl P2) => "riñáis" ;
    VP (Pres Subj Pl P3) => "riñan" ;
    VP (Impf Ind Sg P1) => "reñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"riñera" ; "riñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"riñeras" ; "riñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"riñera" ; "riñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"riñéramos" ; "riñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"riñerais" ; "riñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"riñeran" ; "riñesen"} ;--# notpresent
    VP (Pret Sg P1) => "reñí" ;--# notpresent
    VP (Pret Sg P2) => "reñiste" ;--# notpresent
    VP (Pret Sg P3) => "riñó" ;--# notpresent
    VP (Pret Pl P1) => "reñimos" ;--# notpresent
    VP (Pret Pl P2) => "reñisteis" ;--# notpresent
    VP (Pret Pl P3) => "riñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "riñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "riñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "riñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "riñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "riñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "riñeren" ;--# notpresent
    VP (Cond Sg P1) => "reñiría" ;--# notpresent
    VP (Cond Sg P2) => "reñirías" ;--# notpresent
    VP (Cond Sg P3) => "reñiría" ;--# notpresent
    VP (Cond Pl P1) => "reñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reñiríais" ;--# notpresent
    VP (Cond Pl P3) => "reñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "riñe" ;
    VP (Imp Sg P3) => "riña" ;
    VP (Imp Pl P1) => "riñamos" ;
    VP (Imp Pl P2) => "reñid" ;
    VP (Imp Pl P3) => "riñan" ;
    VP (Pass Sg Masc) => "reñido" ;
    VP (Pass Sg Fem) => "reñida" ;
    VP (Pass Pl Masc) => "reñidos" ;
    VP (Pass Pl Fem) => "reñidas"
    }
  } ;

lin repetir_V = verboV 
 {s = table {
    VI Infn => "repetir" ;
    VI Ger => "repitiendo" ;
    VI Part => "repetido" ;
    VP (Pres Ind Sg P1) => "repito" ;
    VP (Pres Ind Sg P2) => "repites" ;
    VP (Pres Ind Sg P3) => "repite" ;
    VP (Pres Ind Pl P1) => "repetimos" ;
    VP (Pres Ind Pl P2) => "repetís" ;
    VP (Pres Ind Pl P3) => "repiten" ;
    VP (Pres Subj Sg P1) => "repita" ;
    VP (Pres Subj Sg P2) => "repitas" ;
    VP (Pres Subj Sg P3) => "repita" ;
    VP (Pres Subj Pl P1) => "repitamos" ;
    VP (Pres Subj Pl P2) => "repitáis" ;
    VP (Pres Subj Pl P3) => "repitan" ;
    VP (Impf Ind Sg P1) => "repetía" ;--# notpresent
    VP (Impf Ind Sg P2) => "repetías" ;--# notpresent
    VP (Impf Ind Sg P3) => "repetía" ;--# notpresent
    VP (Impf Ind Pl P1) => "repetíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "repetíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "repetían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"repitiera" ; "repitiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"repitieras" ; "repitieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"repitiera" ; "repitiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"repitiéramos" ; "repitiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"repitierais" ; "repitieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"repitieran" ; "repitiesen"} ;--# notpresent
    VP (Pret Sg P1) => "repetí" ;--# notpresent
    VP (Pret Sg P2) => "repetiste" ;--# notpresent
    VP (Pret Sg P3) => "repitió" ;--# notpresent
    VP (Pret Pl P1) => "repetimos" ;--# notpresent
    VP (Pret Pl P2) => "repetisteis" ;--# notpresent
    VP (Pret Pl P3) => "repitieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "repetiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "repetirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "repetirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "repetiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "repetiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "repetirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "repitiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "repitieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "repitiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "repitiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "repitiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "repitieren" ;--# notpresent
    VP (Cond Sg P1) => "repetiría" ;--# notpresent
    VP (Cond Sg P2) => "repetirías" ;--# notpresent
    VP (Cond Sg P3) => "repetiría" ;--# notpresent
    VP (Cond Pl P1) => "repetiríamos" ;--# notpresent
    VP (Cond Pl P2) => "repetiríais" ;--# notpresent
    VP (Cond Pl P3) => "repetirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "repite" ;
    VP (Imp Sg P3) => "repita" ;
    VP (Imp Pl P1) => "repitamos" ;
    VP (Imp Pl P2) => "repetid" ;
    VP (Imp Pl P3) => "repitan" ;
    VP (Pass Sg Masc) => "repetido" ;
    VP (Pass Sg Fem) => "repetida" ;
    VP (Pass Pl Masc) => "repetidos" ;
    VP (Pass Pl Fem) => "repetidas"
    }
  } ;

lin reteñir_V = verboV 
 {s = table {
    VI Infn => "reteñir" ;
    VI Ger => "retiñiendo" ;
    VI Part => "reteñido" ;
    VP (Pres Ind Sg P1) => "retiño" ;
    VP (Pres Ind Sg P2) => "retiñes" ;
    VP (Pres Ind Sg P3) => "retiñe" ;
    VP (Pres Ind Pl P1) => "reteñimos" ;
    VP (Pres Ind Pl P2) => "reteñís" ;
    VP (Pres Ind Pl P3) => "retiñen" ;
    VP (Pres Subj Sg P1) => "retiña" ;
    VP (Pres Subj Sg P2) => "retiñas" ;
    VP (Pres Subj Sg P3) => "retiña" ;
    VP (Pres Subj Pl P1) => "retiñamos" ;
    VP (Pres Subj Pl P2) => "retiñáis" ;
    VP (Pres Subj Pl P3) => "retiñan" ;
    VP (Impf Ind Sg P1) => "reteñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reteñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reteñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reteñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reteñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reteñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retiñera" ; "retiñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retiñeras" ; "retiñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retiñera" ; "retiñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retiñéramos" ; "retiñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retiñerais" ; "retiñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retiñeran" ; "retiñesen"} ;--# notpresent
    VP (Pret Sg P1) => "reteñí" ;--# notpresent
    VP (Pret Sg P2) => "reteñiste" ;--# notpresent
    VP (Pret Sg P3) => "retiñó" ;--# notpresent
    VP (Pret Pl P1) => "reteñimos" ;--# notpresent
    VP (Pret Pl P2) => "reteñisteis" ;--# notpresent
    VP (Pret Pl P3) => "retiñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reteñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reteñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reteñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reteñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reteñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reteñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retiñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retiñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retiñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retiñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retiñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retiñeren" ;--# notpresent
    VP (Cond Sg P1) => "reteñiría" ;--# notpresent
    VP (Cond Sg P2) => "reteñirías" ;--# notpresent
    VP (Cond Sg P3) => "reteñiría" ;--# notpresent
    VP (Cond Pl P1) => "reteñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reteñiríais" ;--# notpresent
    VP (Cond Pl P3) => "reteñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retiñe" ;
    VP (Imp Sg P3) => "retiña" ;
    VP (Imp Pl P1) => "retiñamos" ;
    VP (Imp Pl P2) => "reteñid" ;
    VP (Imp Pl P3) => "retiñan" ;
    VP (Pass Sg Masc) => "reteñido" ;
    VP (Pass Sg Fem) => "reteñida" ;
    VP (Pass Pl Masc) => "reteñidos" ;
    VP (Pass Pl Fem) => "reteñidas"
    }
  } ;

lin revestir_V = verboV 
 {s = table {
    VI Infn => "revestir" ;
    VI Ger => "revistiendo" ;
    VI Part => "revestido" ;
    VP (Pres Ind Sg P1) => "revisto" ;
    VP (Pres Ind Sg P2) => "revistes" ;
    VP (Pres Ind Sg P3) => "reviste" ;
    VP (Pres Ind Pl P1) => "revestimos" ;
    VP (Pres Ind Pl P2) => "revestís" ;
    VP (Pres Ind Pl P3) => "revisten" ;
    VP (Pres Subj Sg P1) => "revista" ;
    VP (Pres Subj Sg P2) => "revistas" ;
    VP (Pres Subj Sg P3) => "revista" ;
    VP (Pres Subj Pl P1) => "revistamos" ;
    VP (Pres Subj Pl P2) => "revistáis" ;
    VP (Pres Subj Pl P3) => "revistan" ;
    VP (Impf Ind Sg P1) => "revestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "revestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "revestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "revestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "revestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "revestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"revistiera" ; "revistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revistieras" ; "revistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"revistiera" ; "revistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"revistiéramos" ; "revistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revistierais" ; "revistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revistieran" ; "revistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "revestí" ;--# notpresent
    VP (Pret Sg P2) => "revestiste" ;--# notpresent
    VP (Pret Sg P3) => "revistió" ;--# notpresent
    VP (Pret Pl P1) => "revestimos" ;--# notpresent
    VP (Pret Pl P2) => "revestisteis" ;--# notpresent
    VP (Pret Pl P3) => "revistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "revestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "revestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "revestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "revestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "revestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "revestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "revistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "revistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "revistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "revistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revistieren" ;--# notpresent
    VP (Cond Sg P1) => "revestiría" ;--# notpresent
    VP (Cond Sg P2) => "revestirías" ;--# notpresent
    VP (Cond Sg P3) => "revestiría" ;--# notpresent
    VP (Cond Pl P1) => "revestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "revestiríais" ;--# notpresent
    VP (Cond Pl P3) => "revestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reviste" ;
    VP (Imp Sg P3) => "revista" ;
    VP (Imp Pl P1) => "revistamos" ;
    VP (Imp Pl P2) => "revestid" ;
    VP (Imp Pl P3) => "revistan" ;
    VP (Pass Sg Masc) => "revestido" ;
    VP (Pass Sg Fem) => "revestida" ;
    VP (Pass Pl Masc) => "revestidos" ;
    VP (Pass Pl Fem) => "revestidas"
    }
  } ;

lin servir_V = verboV 
 {s = table {
    VI Infn => "servir" ;
    VI Ger => "sirviendo" ;
    VI Part => "servido" ;
    VP (Pres Ind Sg P1) => "sirvo" ;
    VP (Pres Ind Sg P2) => "sirves" ;
    VP (Pres Ind Sg P3) => "sirve" ;
    VP (Pres Ind Pl P1) => "servimos" ;
    VP (Pres Ind Pl P2) => "servís" ;
    VP (Pres Ind Pl P3) => "sirven" ;
    VP (Pres Subj Sg P1) => "sirva" ;
    VP (Pres Subj Sg P2) => "sirvas" ;
    VP (Pres Subj Sg P3) => "sirva" ;
    VP (Pres Subj Pl P1) => "sirvamos" ;
    VP (Pres Subj Pl P2) => "sirváis" ;
    VP (Pres Subj Pl P3) => "sirvan" ;
    VP (Impf Ind Sg P1) => "servía" ;--# notpresent
    VP (Impf Ind Sg P2) => "servías" ;--# notpresent
    VP (Impf Ind Sg P3) => "servía" ;--# notpresent
    VP (Impf Ind Pl P1) => "servíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "servíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "servían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sirviera" ; "sirviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sirvieras" ; "sirvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sirviera" ; "sirviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sirviéramos" ; "sirviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sirvierais" ; "sirvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sirvieran" ; "sirviesen"} ;--# notpresent
    VP (Pret Sg P1) => "serví" ;--# notpresent
    VP (Pret Sg P2) => "serviste" ;--# notpresent
    VP (Pret Sg P3) => "sirvió" ;--# notpresent
    VP (Pret Pl P1) => "servimos" ;--# notpresent
    VP (Pret Pl P2) => "servisteis" ;--# notpresent
    VP (Pret Pl P3) => "sirvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "serviré" ;--# notpresent
    VP (Fut Ind Sg P2) => "servirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "servirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "serviremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "serviréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "servirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sirviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sirvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sirviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sirviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sirviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sirvieren" ;--# notpresent
    VP (Cond Sg P1) => "serviría" ;--# notpresent
    VP (Cond Sg P2) => "servirías" ;--# notpresent
    VP (Cond Sg P3) => "serviría" ;--# notpresent
    VP (Cond Pl P1) => "serviríamos" ;--# notpresent
    VP (Cond Pl P2) => "serviríais" ;--# notpresent
    VP (Cond Pl P3) => "servirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sirve" ;
    VP (Imp Sg P3) => "sirva" ;
    VP (Imp Pl P1) => "sirvamos" ;
    VP (Imp Pl P2) => "servid" ;
    VP (Imp Pl P3) => "sirvan" ;
    VP (Pass Sg Masc) => "servido" ;
    VP (Pass Sg Fem) => "servida" ;
    VP (Pass Pl Masc) => "servidos" ;
    VP (Pass Pl Fem) => "servidas"
    }
  } ;

lin sobrevestir_V = verboV 
 {s = table {
    VI Infn => "sobrevestir" ;
    VI Ger => "sobrevistiendo" ;
    VI Part => "sobrevestido" ;
    VP (Pres Ind Sg P1) => "sobrevisto" ;
    VP (Pres Ind Sg P2) => "sobrevistes" ;
    VP (Pres Ind Sg P3) => "sobreviste" ;
    VP (Pres Ind Pl P1) => "sobrevestimos" ;
    VP (Pres Ind Pl P2) => "sobrevestís" ;
    VP (Pres Ind Pl P3) => "sobrevisten" ;
    VP (Pres Subj Sg P1) => "sobrevista" ;
    VP (Pres Subj Sg P2) => "sobrevistas" ;
    VP (Pres Subj Sg P3) => "sobrevista" ;
    VP (Pres Subj Pl P1) => "sobrevistamos" ;
    VP (Pres Subj Pl P2) => "sobrevistáis" ;
    VP (Pres Subj Pl P3) => "sobrevistan" ;
    VP (Impf Ind Sg P1) => "sobrevestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobrevestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobrevestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobrevestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobrevestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobrevestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobrevistiera" ; "sobrevistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobrevistieras" ; "sobrevistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobrevistiera" ; "sobrevistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobrevistiéramos" ; "sobrevistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobrevistierais" ; "sobrevistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobrevistieran" ; "sobrevistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobrevestí" ;--# notpresent
    VP (Pret Sg P2) => "sobrevestiste" ;--# notpresent
    VP (Pret Sg P3) => "sobrevistió" ;--# notpresent
    VP (Pret Pl P1) => "sobrevestimos" ;--# notpresent
    VP (Pret Pl P2) => "sobrevestisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobrevistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobrevestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobrevestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobrevestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobrevestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobrevestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobrevestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobrevistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobrevistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobrevistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobrevistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobrevistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobrevistieren" ;--# notpresent
    VP (Cond Sg P1) => "sobrevestiría" ;--# notpresent
    VP (Cond Sg P2) => "sobrevestirías" ;--# notpresent
    VP (Cond Sg P3) => "sobrevestiría" ;--# notpresent
    VP (Cond Pl P1) => "sobrevestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobrevestiríais" ;--# notpresent
    VP (Cond Pl P3) => "sobrevestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobreviste" ;
    VP (Imp Sg P3) => "sobrevista" ;
    VP (Imp Pl P1) => "sobrevistamos" ;
    VP (Imp Pl P2) => "sobrevestid" ;
    VP (Imp Pl P3) => "sobrevistan" ;
    VP (Pass Sg Masc) => "sobrevestido" ;
    VP (Pass Sg Fem) => "sobrevestida" ;
    VP (Pass Pl Masc) => "sobrevestidos" ;
    VP (Pass Pl Fem) => "sobrevestidas"
    }
  } ;

lin teñir_V = verboV 
 {s = table {
    VI Infn => "teñir" ;
    VI Ger => "tiñiendo" ;
    VI Part => "teñido" ;
    VP (Pres Ind Sg P1) => "tiño" ;
    VP (Pres Ind Sg P2) => "tiñes" ;
    VP (Pres Ind Sg P3) => "tiñe" ;
    VP (Pres Ind Pl P1) => "teñimos" ;
    VP (Pres Ind Pl P2) => "teñís" ;
    VP (Pres Ind Pl P3) => "tiñen" ;
    VP (Pres Subj Sg P1) => "tiña" ;
    VP (Pres Subj Sg P2) => "tiñas" ;
    VP (Pres Subj Sg P3) => "tiña" ;
    VP (Pres Subj Pl P1) => "tiñamos" ;
    VP (Pres Subj Pl P2) => "tiñáis" ;
    VP (Pres Subj Pl P3) => "tiñan" ;
    VP (Impf Ind Sg P1) => "teñía" ;--# notpresent
    VP (Impf Ind Sg P2) => "teñías" ;--# notpresent
    VP (Impf Ind Sg P3) => "teñía" ;--# notpresent
    VP (Impf Ind Pl P1) => "teñíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "teñíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "teñían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tiñera" ; "tiñese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tiñeras" ; "tiñeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tiñera" ; "tiñese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tiñéramos" ; "tiñésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tiñerais" ; "tiñeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tiñeran" ; "tiñesen"} ;--# notpresent
    VP (Pret Sg P1) => "teñí" ;--# notpresent
    VP (Pret Sg P2) => "teñiste" ;--# notpresent
    VP (Pret Sg P3) => "tiñó" ;--# notpresent
    VP (Pret Pl P1) => "teñimos" ;--# notpresent
    VP (Pret Pl P2) => "teñisteis" ;--# notpresent
    VP (Pret Pl P3) => "tiñeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "teñiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "teñirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "teñirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "teñiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "teñiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "teñirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tiñere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tiñeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tiñere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tiñéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tiñereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tiñeren" ;--# notpresent
    VP (Cond Sg P1) => "teñiría" ;--# notpresent
    VP (Cond Sg P2) => "teñirías" ;--# notpresent
    VP (Cond Sg P3) => "teñiría" ;--# notpresent
    VP (Cond Pl P1) => "teñiríamos" ;--# notpresent
    VP (Cond Pl P2) => "teñiríais" ;--# notpresent
    VP (Cond Pl P3) => "teñirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "tiñe" ;
    VP (Imp Sg P3) => "tiña" ;
    VP (Imp Pl P1) => "tiñamos" ;
    VP (Imp Pl P2) => "teñid" ;
    VP (Imp Pl P3) => "tiñan" ;
    VP (Pass Sg Masc) => "teñido" ;
    VP (Pass Sg Fem) => "teñida" ;
    VP (Pass Pl Masc) => "teñidos" ;
    VP (Pass Pl Fem) => "teñidas"
    }
  } ;

lin travestir_V = verboV 
 {s = table {
    VI Infn => "travestir" ;
    VI Ger => "travistiendo" ;
    VI Part => "travestido" ;
    VP (Pres Ind Sg P1) => "travisto" ;
    VP (Pres Ind Sg P2) => "travistes" ;
    VP (Pres Ind Sg P3) => "traviste" ;
    VP (Pres Ind Pl P1) => "travestimos" ;
    VP (Pres Ind Pl P2) => "travestís" ;
    VP (Pres Ind Pl P3) => "travisten" ;
    VP (Pres Subj Sg P1) => "travista" ;
    VP (Pres Subj Sg P2) => "travistas" ;
    VP (Pres Subj Sg P3) => "travista" ;
    VP (Pres Subj Pl P1) => "travistamos" ;
    VP (Pres Subj Pl P2) => "travistáis" ;
    VP (Pres Subj Pl P3) => "travistan" ;
    VP (Impf Ind Sg P1) => "travestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "travestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "travestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "travestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "travestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "travestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"travistiera" ; "travistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"travistieras" ; "travistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"travistiera" ; "travistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"travistiéramos" ; "travistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"travistierais" ; "travistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"travistieran" ; "travistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "travestí" ;--# notpresent
    VP (Pret Sg P2) => "travestiste" ;--# notpresent
    VP (Pret Sg P3) => "travistió" ;--# notpresent
    VP (Pret Pl P1) => "travestimos" ;--# notpresent
    VP (Pret Pl P2) => "travestisteis" ;--# notpresent
    VP (Pret Pl P3) => "travistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "travestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "travestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "travestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "travestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "travestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "travestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "travistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "travistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "travistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "travistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "travistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "travistieren" ;--# notpresent
    VP (Cond Sg P1) => "travestiría" ;--# notpresent
    VP (Cond Sg P2) => "travestirías" ;--# notpresent
    VP (Cond Sg P3) => "travestiría" ;--# notpresent
    VP (Cond Pl P1) => "travestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "travestiríais" ;--# notpresent
    VP (Cond Pl P3) => "travestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "traviste" ;
    VP (Imp Sg P3) => "travista" ;
    VP (Imp Pl P1) => "travistamos" ;
    VP (Imp Pl P2) => "travestid" ;
    VP (Imp Pl P3) => "travistan" ;
    VP (Pass Sg Masc) => "travestido" ;
    VP (Pass Sg Fem) => "travestida" ;
    VP (Pass Pl Masc) => "travestidos" ;
    VP (Pass Pl Fem) => "travestidas"
    }
  } ;

lin vestir_V = verboV 
 {s = table {
    VI Infn => "vestir" ;
    VI Ger => "vistiendo" ;
    VI Part => "vestido" ;
    VP (Pres Ind Sg P1) => "visto" ;
    VP (Pres Ind Sg P2) => "vistes" ;
    VP (Pres Ind Sg P3) => "viste" ;
    VP (Pres Ind Pl P1) => "vestimos" ;
    VP (Pres Ind Pl P2) => "vestís" ;
    VP (Pres Ind Pl P3) => "visten" ;
    VP (Pres Subj Sg P1) => "vista" ;
    VP (Pres Subj Sg P2) => "vistas" ;
    VP (Pres Subj Sg P3) => "vista" ;
    VP (Pres Subj Pl P1) => "vistamos" ;
    VP (Pres Subj Pl P2) => "vistáis" ;
    VP (Pres Subj Pl P3) => "vistan" ;
    VP (Impf Ind Sg P1) => "vestía" ;--# notpresent
    VP (Impf Ind Sg P2) => "vestías" ;--# notpresent
    VP (Impf Ind Sg P3) => "vestía" ;--# notpresent
    VP (Impf Ind Pl P1) => "vestíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "vestíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "vestían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"vistiera" ; "vistiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"vistieras" ; "vistieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"vistiera" ; "vistiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"vistiéramos" ; "vistiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"vistierais" ; "vistieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"vistieran" ; "vistiesen"} ;--# notpresent
    VP (Pret Sg P1) => "vestí" ;--# notpresent
    VP (Pret Sg P2) => "vestiste" ;--# notpresent
    VP (Pret Sg P3) => "vistió" ;--# notpresent
    VP (Pret Pl P1) => "vestimos" ;--# notpresent
    VP (Pret Pl P2) => "vestisteis" ;--# notpresent
    VP (Pret Pl P3) => "vistieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "vestiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "vestirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "vestirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "vestiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "vestiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "vestirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "vistiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "vistieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "vistiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "vistiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "vistiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "vistieren" ;--# notpresent
    VP (Cond Sg P1) => "vestiría" ;--# notpresent
    VP (Cond Sg P2) => "vestirías" ;--# notpresent
    VP (Cond Sg P3) => "vestiría" ;--# notpresent
    VP (Cond Pl P1) => "vestiríamos" ;--# notpresent
    VP (Cond Pl P2) => "vestiríais" ;--# notpresent
    VP (Cond Pl P3) => "vestirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "viste" ;
    VP (Imp Sg P3) => "vista" ;
    VP (Imp Pl P1) => "vistamos" ;
    VP (Imp Pl P2) => "vestid" ;
    VP (Imp Pl P3) => "vistan" ;
    VP (Pass Sg Masc) => "vestido" ;
    VP (Pass Sg Fem) => "vestida" ;
    VP (Pass Pl Masc) => "vestidos" ;
    VP (Pass Pl Fem) => "vestidas"
    }
  } ;

lin acomedirse_V = reflVerboV 
 {s = table {
    VI Infn => "acomedir" ;
    VI Ger => "acomidiendo" ;
    VI Part => "acomedido" ;
    VP (Pres Ind Sg P1) => "acomido" ;
    VP (Pres Ind Sg P2) => "acomides" ;
    VP (Pres Ind Sg P3) => "acomide" ;
    VP (Pres Ind Pl P1) => "acomedimos" ;
    VP (Pres Ind Pl P2) => "acomedís" ;
    VP (Pres Ind Pl P3) => "acomiden" ;
    VP (Pres Subj Sg P1) => "acomida" ;
    VP (Pres Subj Sg P2) => "acomidas" ;
    VP (Pres Subj Sg P3) => "acomida" ;
    VP (Pres Subj Pl P1) => "acomidamos" ;
    VP (Pres Subj Pl P2) => "acomidáis" ;
    VP (Pres Subj Pl P3) => "acomidan" ;
    VP (Impf Ind Sg P1) => "acomedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "acomedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "acomedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "acomedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "acomedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "acomedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"acomidiera" ; "acomidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"acomidieras" ; "acomidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"acomidiera" ; "acomidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"acomidiéramos" ; "acomidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"acomidierais" ; "acomidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"acomidieran" ; "acomidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "acomedí" ;--# notpresent
    VP (Pret Sg P2) => "acomediste" ;--# notpresent
    VP (Pret Sg P3) => "acomidió" ;--# notpresent
    VP (Pret Pl P1) => "acomedimos" ;--# notpresent
    VP (Pret Pl P2) => "acomedisteis" ;--# notpresent
    VP (Pret Pl P3) => "acomidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "acomediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "acomedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "acomedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "acomediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "acomediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "acomedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "acomidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "acomidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "acomidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "acomidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "acomidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "acomidieren" ;--# notpresent
    VP (Cond Sg P1) => "acomediría" ;--# notpresent
    VP (Cond Sg P2) => "acomedirías" ;--# notpresent
    VP (Cond Sg P3) => "acomediría" ;--# notpresent
    VP (Cond Pl P1) => "acomediríamos" ;--# notpresent
    VP (Cond Pl P2) => "acomediríais" ;--# notpresent
    VP (Cond Pl P3) => "acomedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "acomide" ;
    VP (Imp Sg P3) => "acomida" ;
    VP (Imp Pl P1) => "acomidamos" ;
    VP (Imp Pl P2) => "acomedid" ;
    VP (Imp Pl P3) => "acomidan" ;
    VP (Pass Sg Masc) => "acomedido" ;
    VP (Pass Sg Fem) => "acomedida" ;
    VP (Pass Pl Masc) => "acomedidos" ;
    VP (Pass Pl Fem) => "acomedidas"
    }
  } ;

lin comedirse_V = reflVerboV 
 {s = table {
    VI Infn => "comedir" ;
    VI Ger => "comidiendo" ;
    VI Part => "comedido" ;
    VP (Pres Ind Sg P1) => "comido" ;
    VP (Pres Ind Sg P2) => "comides" ;
    VP (Pres Ind Sg P3) => "comide" ;
    VP (Pres Ind Pl P1) => "comedimos" ;
    VP (Pres Ind Pl P2) => "comedís" ;
    VP (Pres Ind Pl P3) => "comiden" ;
    VP (Pres Subj Sg P1) => "comida" ;
    VP (Pres Subj Sg P2) => "comidas" ;
    VP (Pres Subj Sg P3) => "comida" ;
    VP (Pres Subj Pl P1) => "comidamos" ;
    VP (Pres Subj Pl P2) => "comidáis" ;
    VP (Pres Subj Pl P3) => "comidan" ;
    VP (Impf Ind Sg P1) => "comedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "comedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "comedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "comedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "comedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "comedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"comidiera" ; "comidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"comidieras" ; "comidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"comidiera" ; "comidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"comidiéramos" ; "comidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"comidierais" ; "comidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"comidieran" ; "comidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "comedí" ;--# notpresent
    VP (Pret Sg P2) => "comediste" ;--# notpresent
    VP (Pret Sg P3) => "comidió" ;--# notpresent
    VP (Pret Pl P1) => "comedimos" ;--# notpresent
    VP (Pret Pl P2) => "comedisteis" ;--# notpresent
    VP (Pret Pl P3) => "comidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "comediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "comedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "comedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "comediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "comediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "comedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "comidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "comidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "comidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "comidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "comidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "comidieren" ;--# notpresent
    VP (Cond Sg P1) => "comediría" ;--# notpresent
    VP (Cond Sg P2) => "comedirías" ;--# notpresent
    VP (Cond Sg P3) => "comediría" ;--# notpresent
    VP (Cond Pl P1) => "comediríamos" ;--# notpresent
    VP (Cond Pl P2) => "comediríais" ;--# notpresent
    VP (Cond Pl P3) => "comedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "comide" ;
    VP (Imp Sg P3) => "comida" ;
    VP (Imp Pl P1) => "comidamos" ;
    VP (Imp Pl P2) => "comedid" ;
    VP (Imp Pl P3) => "comidan" ;
    VP (Pass Sg Masc) => "comedido" ;
    VP (Pass Sg Fem) => "comedida" ;
    VP (Pass Pl Masc) => "comedidos" ;
    VP (Pass Pl Fem) => "comedidas"
    }
  } ;

lin descomedirse_V = reflVerboV 
 {s = table {
    VI Infn => "descomedir" ;
    VI Ger => "descomidiendo" ;
    VI Part => "descomedido" ;
    VP (Pres Ind Sg P1) => "descomido" ;
    VP (Pres Ind Sg P2) => "descomides" ;
    VP (Pres Ind Sg P3) => "descomide" ;
    VP (Pres Ind Pl P1) => "descomedimos" ;
    VP (Pres Ind Pl P2) => "descomedís" ;
    VP (Pres Ind Pl P3) => "descomiden" ;
    VP (Pres Subj Sg P1) => "descomida" ;
    VP (Pres Subj Sg P2) => "descomidas" ;
    VP (Pres Subj Sg P3) => "descomida" ;
    VP (Pres Subj Pl P1) => "descomidamos" ;
    VP (Pres Subj Pl P2) => "descomidáis" ;
    VP (Pres Subj Pl P3) => "descomidan" ;
    VP (Impf Ind Sg P1) => "descomedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "descomedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "descomedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "descomedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "descomedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "descomedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"descomidiera" ; "descomidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"descomidieras" ; "descomidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"descomidiera" ; "descomidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"descomidiéramos" ; "descomidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"descomidierais" ; "descomidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"descomidieran" ; "descomidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "descomedí" ;--# notpresent
    VP (Pret Sg P2) => "descomediste" ;--# notpresent
    VP (Pret Sg P3) => "descomidió" ;--# notpresent
    VP (Pret Pl P1) => "descomedimos" ;--# notpresent
    VP (Pret Pl P2) => "descomedisteis" ;--# notpresent
    VP (Pret Pl P3) => "descomidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "descomediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "descomedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "descomedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "descomediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "descomediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "descomedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "descomidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "descomidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "descomidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "descomidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "descomidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "descomidieren" ;--# notpresent
    VP (Cond Sg P1) => "descomediría" ;--# notpresent
    VP (Cond Sg P2) => "descomedirías" ;--# notpresent
    VP (Cond Sg P3) => "descomediría" ;--# notpresent
    VP (Cond Pl P1) => "descomediríamos" ;--# notpresent
    VP (Cond Pl P2) => "descomediríais" ;--# notpresent
    VP (Cond Pl P3) => "descomedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "descomide" ;
    VP (Imp Sg P3) => "descomida" ;
    VP (Imp Pl P1) => "descomidamos" ;
    VP (Imp Pl P2) => "descomedid" ;
    VP (Imp Pl P3) => "descomidan" ;
    VP (Pass Sg Masc) => "descomedido" ;
    VP (Pass Sg Fem) => "descomedida" ;
    VP (Pass Pl Masc) => "descomedidos" ;
    VP (Pass Pl Fem) => "descomedidas"
    }
  } ;

lin desmedirse_V = reflVerboV 
 {s = table {
    VI Infn => "desmedir" ;
    VI Ger => "desmidiendo" ;
    VI Part => "desmedido" ;
    VP (Pres Ind Sg P1) => "desmido" ;
    VP (Pres Ind Sg P2) => "desmides" ;
    VP (Pres Ind Sg P3) => "desmide" ;
    VP (Pres Ind Pl P1) => "desmedimos" ;
    VP (Pres Ind Pl P2) => "desmedís" ;
    VP (Pres Ind Pl P3) => "desmiden" ;
    VP (Pres Subj Sg P1) => "desmida" ;
    VP (Pres Subj Sg P2) => "desmidas" ;
    VP (Pres Subj Sg P3) => "desmida" ;
    VP (Pres Subj Pl P1) => "desmidamos" ;
    VP (Pres Subj Pl P2) => "desmidáis" ;
    VP (Pres Subj Pl P3) => "desmidan" ;
    VP (Impf Ind Sg P1) => "desmedía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desmedías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desmedía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desmedíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desmedíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desmedían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desmidiera" ; "desmidiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desmidieras" ; "desmidieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desmidiera" ; "desmidiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desmidiéramos" ; "desmidiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desmidierais" ; "desmidieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desmidieran" ; "desmidiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desmedí" ;--# notpresent
    VP (Pret Sg P2) => "desmediste" ;--# notpresent
    VP (Pret Sg P3) => "desmidió" ;--# notpresent
    VP (Pret Pl P1) => "desmedimos" ;--# notpresent
    VP (Pret Pl P2) => "desmedisteis" ;--# notpresent
    VP (Pret Pl P3) => "desmidieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desmediré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desmedirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desmedirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desmediremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desmediréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desmedirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desmidiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desmidieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desmidiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desmidiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desmidiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desmidieren" ;--# notpresent
    VP (Cond Sg P1) => "desmediría" ;--# notpresent
    VP (Cond Sg P2) => "desmedirías" ;--# notpresent
    VP (Cond Sg P3) => "desmediría" ;--# notpresent
    VP (Cond Pl P1) => "desmediríamos" ;--# notpresent
    VP (Cond Pl P2) => "desmediríais" ;--# notpresent
    VP (Cond Pl P3) => "desmedirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desmide" ;
    VP (Imp Sg P3) => "desmida" ;
    VP (Imp Pl P1) => "desmidamos" ;
    VP (Imp Pl P2) => "desmedid" ;
    VP (Imp Pl P3) => "desmidan" ;
    VP (Pass Sg Masc) => "desmedido" ;
    VP (Pass Sg Fem) => "desmedida" ;
    VP (Pass Pl Masc) => "desmedidos" ;
    VP (Pass Pl Fem) => "desmedidas"
    }
  } ;

lin abarse_V = reflVerboV 
 {s = table {
    VI Infn => "abar" ;
    VI Ger => "abando" ;
    VI Part => "abado" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => variants {} ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => variants {} ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => variants {} ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => variants {} ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aba" ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => "abad" ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin poder_V = verboV 
 {s = table {
    VI Infn => "poder" ;
    VI Ger => "pudiendo" ;
    VI Part => "podido" ;
    VP (Pres Ind Sg P1) => "puedo" ;
    VP (Pres Ind Sg P2) => "puedes" ;
    VP (Pres Ind Sg P3) => "puede" ;
    VP (Pres Ind Pl P1) => "podemos" ;
    VP (Pres Ind Pl P2) => "podéis" ;
    VP (Pres Ind Pl P3) => "pueden" ;
    VP (Pres Subj Sg P1) => "pueda" ;
    VP (Pres Subj Sg P2) => "puedas" ;
    VP (Pres Subj Sg P3) => "pueda" ;
    VP (Pres Subj Pl P1) => "podamos" ;
    VP (Pres Subj Pl P2) => "podáis" ;
    VP (Pres Subj Pl P3) => "puedan" ;
    VP (Impf Ind Sg P1) => "podía" ;--# notpresent
    VP (Impf Ind Sg P2) => "podías" ;--# notpresent
    VP (Impf Ind Sg P3) => "podía" ;--# notpresent
    VP (Impf Ind Pl P1) => "podíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "podíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "podían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"pudiera" ; "pudiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"pudieras" ; "pudieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"pudiera" ; "pudiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"pudiéramos" ; "pudiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"pudierais" ; "pudieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"pudieran" ; "pudiesen"} ;--# notpresent
    VP (Pret Sg P1) => "pude" ;--# notpresent
    VP (Pret Sg P2) => "pudiste" ;--# notpresent
    VP (Pret Sg P3) => "pudo" ;--# notpresent
    VP (Pret Pl P1) => "pudimos" ;--# notpresent
    VP (Pret Pl P2) => "pudisteis" ;--# notpresent
    VP (Pret Pl P3) => "pudieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "podré" ;--# notpresent
    VP (Fut Ind Sg P2) => "podrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "podrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "podremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "podréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "podrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "pudiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "pudieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "pudiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "pudiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "pudiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "pudieren" ;--# notpresent
    VP (Cond Sg P1) => "podría" ;--# notpresent
    VP (Cond Sg P2) => "podrías" ;--# notpresent
    VP (Cond Sg P3) => "podría" ;--# notpresent
    VP (Cond Pl P1) => "podríamos" ;--# notpresent
    VP (Cond Pl P2) => "podríais" ;--# notpresent
    VP (Cond Pl P3) => "podrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "puede" ;
    VP (Imp Sg P3) => "pueda" ;
    VP (Imp Pl P1) => "podamos" ;
    VP (Imp Pl P2) => "poded" ;
    VP (Imp Pl P3) => "puedan" ;
    VP (Pass Sg Masc) => "podido" ;
    VP (Pass Sg Fem) => "podida" ;
    VP (Pass Pl Masc) => "podidos" ;
    VP (Pass Pl Fem) => "podidas"
    }
  } ;

lin bienquerer_V = verboV 
 {s = table {
    VI Infn => "bienquerer" ;
    VI Ger => "bienqueriendo" ;
    VI Part => "bienquerido" ;
    VP (Pres Ind Sg P1) => "bienquiero" ;
    VP (Pres Ind Sg P2) => "bienquieres" ;
    VP (Pres Ind Sg P3) => "bienquiere" ;
    VP (Pres Ind Pl P1) => "bienqueremos" ;
    VP (Pres Ind Pl P2) => "bienqueréis" ;
    VP (Pres Ind Pl P3) => "bienquieren" ;
    VP (Pres Subj Sg P1) => "bienquiera" ;
    VP (Pres Subj Sg P2) => "bienquieras" ;
    VP (Pres Subj Sg P3) => "bienquiera" ;
    VP (Pres Subj Pl P1) => "bienqueramos" ;
    VP (Pres Subj Pl P2) => "bienqueráis" ;
    VP (Pres Subj Pl P3) => "bienquieran" ;
    VP (Impf Ind Sg P1) => "bienquería" ;--# notpresent
    VP (Impf Ind Sg P2) => "bienquerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "bienquería" ;--# notpresent
    VP (Impf Ind Pl P1) => "bienqueríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "bienqueríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "bienquerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"bienquisiera" ; "bienquisiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"bienquisieras" ; "bienquisieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"bienquisiera" ; "bienquisiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"bienquisiéramos" ; "bienquisiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"bienquisierais" ; "bienquisieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"bienquisieran" ; "bienquisiesen"} ;--# notpresent
    VP (Pret Sg P1) => "bienquise" ;--# notpresent
    VP (Pret Sg P2) => "bienquisiste" ;--# notpresent
    VP (Pret Sg P3) => "bienquiso" ;--# notpresent
    VP (Pret Pl P1) => "bienquisimos" ;--# notpresent
    VP (Pret Pl P2) => "bienquisisteis" ;--# notpresent
    VP (Pret Pl P3) => "bienquisieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "bienquerré" ;--# notpresent
    VP (Fut Ind Sg P2) => "bienquerrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "bienquerrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "bienquerremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "bienquerréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "bienquerrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "bienquisiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "bienquisieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "bienquisiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "bienquisiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "bienquisiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "bienquisieren" ;--# notpresent
    VP (Cond Sg P1) => "bienquerría" ;--# notpresent
    VP (Cond Sg P2) => "bienquerrías" ;--# notpresent
    VP (Cond Sg P3) => "bienquerría" ;--# notpresent
    VP (Cond Pl P1) => "bienquerríamos" ;--# notpresent
    VP (Cond Pl P2) => "bienquerríais" ;--# notpresent
    VP (Cond Pl P3) => "bienquerrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "bienquiere" ;
    VP (Imp Sg P3) => "bienquiera" ;
    VP (Imp Pl P1) => "bienqueramos" ;
    VP (Imp Pl P2) => "bienquered" ;
    VP (Imp Pl P3) => "bienquieran" ;
    VP (Pass Sg Masc) => "bienquerido" ;
    VP (Pass Sg Fem) => "bienquerida" ;
    VP (Pass Pl Masc) => "bienqueridos" ;
    VP (Pass Pl Fem) => "bienqueridas"
    }
  } ;

lin desquerer_V = verboV 
 {s = table {
    VI Infn => "desquerer" ;
    VI Ger => "desqueriendo" ;
    VI Part => "desquerido" ;
    VP (Pres Ind Sg P1) => "desquiero" ;
    VP (Pres Ind Sg P2) => "desquieres" ;
    VP (Pres Ind Sg P3) => "desquiere" ;
    VP (Pres Ind Pl P1) => "desqueremos" ;
    VP (Pres Ind Pl P2) => "desqueréis" ;
    VP (Pres Ind Pl P3) => "desquieren" ;
    VP (Pres Subj Sg P1) => "desquiera" ;
    VP (Pres Subj Sg P2) => "desquieras" ;
    VP (Pres Subj Sg P3) => "desquiera" ;
    VP (Pres Subj Pl P1) => "desqueramos" ;
    VP (Pres Subj Pl P2) => "desqueráis" ;
    VP (Pres Subj Pl P3) => "desquieran" ;
    VP (Impf Ind Sg P1) => "desquería" ;--# notpresent
    VP (Impf Ind Sg P2) => "desquerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desquería" ;--# notpresent
    VP (Impf Ind Pl P1) => "desqueríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desqueríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desquerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desquisiera" ; "desquisiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desquisieras" ; "desquisieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desquisiera" ; "desquisiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desquisiéramos" ; "desquisiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desquisierais" ; "desquisieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desquisieran" ; "desquisiesen"} ;--# notpresent
    VP (Pret Sg P1) => "desquise" ;--# notpresent
    VP (Pret Sg P2) => "desquisiste" ;--# notpresent
    VP (Pret Sg P3) => "desquiso" ;--# notpresent
    VP (Pret Pl P1) => "desquisimos" ;--# notpresent
    VP (Pret Pl P2) => "desquisisteis" ;--# notpresent
    VP (Pret Pl P3) => "desquisieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desquerré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desquerrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desquerrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desquerremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desquerréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desquerrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desquisiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desquisieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desquisiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desquisiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desquisiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desquisieren" ;--# notpresent
    VP (Cond Sg P1) => "desquerría" ;--# notpresent
    VP (Cond Sg P2) => "desquerrías" ;--# notpresent
    VP (Cond Sg P3) => "desquerría" ;--# notpresent
    VP (Cond Pl P1) => "desquerríamos" ;--# notpresent
    VP (Cond Pl P2) => "desquerríais" ;--# notpresent
    VP (Cond Pl P3) => "desquerrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desquiere" ;
    VP (Imp Sg P3) => "desquiera" ;
    VP (Imp Pl P1) => "desqueramos" ;
    VP (Imp Pl P2) => "desquered" ;
    VP (Imp Pl P3) => "desquieran" ;
    VP (Pass Sg Masc) => "desquerido" ;
    VP (Pass Sg Fem) => "desquerida" ;
    VP (Pass Pl Masc) => "desqueridos" ;
    VP (Pass Pl Fem) => "desqueridas"
    }
  } ;

lin malquerer_V = verboV 
 {s = table {
    VI Infn => "malquerer" ;
    VI Ger => "malqueriendo" ;
    VI Part => "malquerido" ;
    VP (Pres Ind Sg P1) => "malquiero" ;
    VP (Pres Ind Sg P2) => "malquieres" ;
    VP (Pres Ind Sg P3) => "malquiere" ;
    VP (Pres Ind Pl P1) => "malqueremos" ;
    VP (Pres Ind Pl P2) => "malqueréis" ;
    VP (Pres Ind Pl P3) => "malquieren" ;
    VP (Pres Subj Sg P1) => "malquiera" ;
    VP (Pres Subj Sg P2) => "malquieras" ;
    VP (Pres Subj Sg P3) => "malquiera" ;
    VP (Pres Subj Pl P1) => "malqueramos" ;
    VP (Pres Subj Pl P2) => "malqueráis" ;
    VP (Pres Subj Pl P3) => "malquieran" ;
    VP (Impf Ind Sg P1) => "malquería" ;--# notpresent
    VP (Impf Ind Sg P2) => "malquerías" ;--# notpresent
    VP (Impf Ind Sg P3) => "malquería" ;--# notpresent
    VP (Impf Ind Pl P1) => "malqueríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "malqueríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "malquerían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"malquisiera" ; "malquisiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"malquisieras" ; "malquisieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"malquisiera" ; "malquisiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"malquisiéramos" ; "malquisiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"malquisierais" ; "malquisieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"malquisieran" ; "malquisiesen"} ;--# notpresent
    VP (Pret Sg P1) => "malquise" ;--# notpresent
    VP (Pret Sg P2) => "malquisiste" ;--# notpresent
    VP (Pret Sg P3) => "malquiso" ;--# notpresent
    VP (Pret Pl P1) => "malquisimos" ;--# notpresent
    VP (Pret Pl P2) => "malquisisteis" ;--# notpresent
    VP (Pret Pl P3) => "malquisieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "malquerré" ;--# notpresent
    VP (Fut Ind Sg P2) => "malquerrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "malquerrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "malquerremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "malquerréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "malquerrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "malquisiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "malquisieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "malquisiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "malquisiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "malquisiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "malquisieren" ;--# notpresent
    VP (Cond Sg P1) => "malquerría" ;--# notpresent
    VP (Cond Sg P2) => "malquerrías" ;--# notpresent
    VP (Cond Sg P3) => "malquerría" ;--# notpresent
    VP (Cond Pl P1) => "malquerríamos" ;--# notpresent
    VP (Cond Pl P2) => "malquerríais" ;--# notpresent
    VP (Cond Pl P3) => "malquerrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "malquiere" ;
    VP (Imp Sg P3) => "malquiera" ;
    VP (Imp Pl P1) => "malqueramos" ;
    VP (Imp Pl P2) => "malquered" ;
    VP (Imp Pl P3) => "malquieran" ;
    VP (Pass Sg Masc) => "malquerido" ;
    VP (Pass Sg Fem) => "malquerida" ;
    VP (Pass Pl Masc) => "malqueridos" ;
    VP (Pass Pl Fem) => "malqueridas"
    }
  } ;

lin querer_V = verboV 
 {s = table {
    VI Infn => "querer" ;
    VI Ger => "queriendo" ;
    VI Part => "querido" ;
    VP (Pres Ind Sg P1) => "quiero" ;
    VP (Pres Ind Sg P2) => "quieres" ;
    VP (Pres Ind Sg P3) => "quiere" ;
    VP (Pres Ind Pl P1) => "queremos" ;
    VP (Pres Ind Pl P2) => "queréis" ;
    VP (Pres Ind Pl P3) => "quieren" ;
    VP (Pres Subj Sg P1) => "quiera" ;
    VP (Pres Subj Sg P2) => "quieras" ;
    VP (Pres Subj Sg P3) => "quiera" ;
    VP (Pres Subj Pl P1) => "queramos" ;
    VP (Pres Subj Pl P2) => "queráis" ;
    VP (Pres Subj Pl P3) => "quieran" ;
    VP (Impf Ind Sg P1) => "quería" ;--# notpresent
    VP (Impf Ind Sg P2) => "querías" ;--# notpresent
    VP (Impf Ind Sg P3) => "quería" ;--# notpresent
    VP (Impf Ind Pl P1) => "queríamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "queríais" ;--# notpresent
    VP (Impf Ind Pl P3) => "querían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"quisiera" ; "quisiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"quisieras" ; "quisieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"quisiera" ; "quisiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"quisiéramos" ; "quisiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"quisierais" ; "quisieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"quisieran" ; "quisiesen"} ;--# notpresent
    VP (Pret Sg P1) => "quise" ;--# notpresent
    VP (Pret Sg P2) => "quisiste" ;--# notpresent
    VP (Pret Sg P3) => "quiso" ;--# notpresent
    VP (Pret Pl P1) => "quisimos" ;--# notpresent
    VP (Pret Pl P2) => "quisisteis" ;--# notpresent
    VP (Pret Pl P3) => "quisieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "querré" ;--# notpresent
    VP (Fut Ind Sg P2) => "querrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "querrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "querremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "querréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "querrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "quisiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "quisieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "quisiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "quisiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "quisiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "quisieren" ;--# notpresent
    VP (Cond Sg P1) => "querría" ;--# notpresent
    VP (Cond Sg P2) => "querrías" ;--# notpresent
    VP (Cond Sg P3) => "querría" ;--# notpresent
    VP (Cond Pl P1) => "querríamos" ;--# notpresent
    VP (Cond Pl P2) => "querríais" ;--# notpresent
    VP (Cond Pl P3) => "querrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "quiere" ;
    VP (Imp Sg P3) => "quiera" ;
    VP (Imp Pl P1) => "queramos" ;
    VP (Imp Pl P2) => "quered" ;
    VP (Imp Pl P3) => "quieran" ;
    VP (Pass Sg Masc) => "querido" ;
    VP (Pass Sg Fem) => "querida" ;
    VP (Pass Pl Masc) => "queridos" ;
    VP (Pass Pl Fem) => "queridas"
    }
  } ;

lin antedecir_V = verboV 
 {s = table {
    VI Infn => "antedecir" ;
    VI Ger => "antediciendo" ;
    VI Part => "antedicho" ;
    VP (Pres Ind Sg P1) => "antedigo" ;
    VP (Pres Ind Sg P2) => "antedices" ;
    VP (Pres Ind Sg P3) => "antedice" ;
    VP (Pres Ind Pl P1) => "antedecimos" ;
    VP (Pres Ind Pl P2) => "antedecís" ;
    VP (Pres Ind Pl P3) => "antedicen" ;
    VP (Pres Subj Sg P1) => "antediga" ;
    VP (Pres Subj Sg P2) => "antedigas" ;
    VP (Pres Subj Sg P3) => "antediga" ;
    VP (Pres Subj Pl P1) => "antedigamos" ;
    VP (Pres Subj Pl P2) => "antedigáis" ;
    VP (Pres Subj Pl P3) => "antedigan" ;
    VP (Impf Ind Sg P1) => "antedecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "antedecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "antedecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "antedecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "antedecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "antedecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"antedijera" ; "antedijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"antedijeras" ; "antedijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"antedijera" ; "antedijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"antedijéramos" ; "antedijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"antedijerais" ; "antedijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"antedijeran" ; "antedijesen"} ;--# notpresent
    VP (Pret Sg P1) => "antedije" ;--# notpresent
    VP (Pret Sg P2) => "antedijiste" ;--# notpresent
    VP (Pret Sg P3) => "antedijo" ;--# notpresent
    VP (Pret Pl P1) => "antedijimos" ;--# notpresent
    VP (Pret Pl P2) => "antedijisteis" ;--# notpresent
    VP (Pret Pl P3) => "antedijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "antedeciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "antedecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "antedecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "antedeciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "antedeciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "antedecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "antedijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "antedijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "antedijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "antedijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "antedijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "antedijeren" ;--# notpresent
    VP (Cond Sg P1) => "antedeciría" ;--# notpresent
    VP (Cond Sg P2) => "antedecirías" ;--# notpresent
    VP (Cond Sg P3) => "antedeciría" ;--# notpresent
    VP (Cond Pl P1) => "antedeciríamos" ;--# notpresent
    VP (Cond Pl P2) => "antedeciríais" ;--# notpresent
    VP (Cond Pl P3) => "antedecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "antedice" ;
    VP (Imp Sg P3) => "antediga" ;
    VP (Imp Pl P1) => "antedigamos" ;
    VP (Imp Pl P2) => "antedecid" ;
    VP (Imp Pl P3) => "antedigan" ;
    VP (Pass Sg Masc) => "antedicho" ;
    VP (Pass Sg Fem) => "antedicha" ;
    VP (Pass Pl Masc) => "antedichos" ;
    VP (Pass Pl Fem) => "antedichas"
    }
  } ;

lin bendecir_V = verboV 
 {s = table {
    VI Infn => "bendecir" ;
    VI Ger => "bendiciendo" ;
    VI Part => "bendicho" ;
    VP (Pres Ind Sg P1) => "bendigo" ;
    VP (Pres Ind Sg P2) => "bendices" ;
    VP (Pres Ind Sg P3) => "bendice" ;
    VP (Pres Ind Pl P1) => "bendecimos" ;
    VP (Pres Ind Pl P2) => "bendecís" ;
    VP (Pres Ind Pl P3) => "bendicen" ;
    VP (Pres Subj Sg P1) => "bendiga" ;
    VP (Pres Subj Sg P2) => "bendigas" ;
    VP (Pres Subj Sg P3) => "bendiga" ;
    VP (Pres Subj Pl P1) => "bendigamos" ;
    VP (Pres Subj Pl P2) => "bendigáis" ;
    VP (Pres Subj Pl P3) => "bendigan" ;
    VP (Impf Ind Sg P1) => "bendecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "bendecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "bendecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "bendecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "bendecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "bendecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"bendijera" ; "bendijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"bendijeras" ; "bendijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"bendijera" ; "bendijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"bendijéramos" ; "bendijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"bendijerais" ; "bendijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"bendijeran" ; "bendijesen"} ;--# notpresent
    VP (Pret Sg P1) => "bendije" ;--# notpresent
    VP (Pret Sg P2) => "bendijiste" ;--# notpresent
    VP (Pret Sg P3) => "bendijo" ;--# notpresent
    VP (Pret Pl P1) => "bendijimos" ;--# notpresent
    VP (Pret Pl P2) => "bendijisteis" ;--# notpresent
    VP (Pret Pl P3) => "bendijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "bendeciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "bendecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "bendecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "bendeciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "bendeciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "bendecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "bendijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "bendijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "bendijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "bendijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "bendijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "bendijeren" ;--# notpresent
    VP (Cond Sg P1) => "bendeciría" ;--# notpresent
    VP (Cond Sg P2) => "bendecirías" ;--# notpresent
    VP (Cond Sg P3) => "bendeciría" ;--# notpresent
    VP (Cond Pl P1) => "bendeciríamos" ;--# notpresent
    VP (Cond Pl P2) => "bendeciríais" ;--# notpresent
    VP (Cond Pl P3) => "bendecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "bendice" ;
    VP (Imp Sg P3) => "bendiga" ;
    VP (Imp Pl P1) => "bendigamos" ;
    VP (Imp Pl P2) => "bendecid" ;
    VP (Imp Pl P3) => "bendigan" ;
    VP (Pass Sg Masc) => "bendicho" ;
    VP (Pass Sg Fem) => "bendicha" ;
    VP (Pass Pl Masc) => "bendichos" ;
    VP (Pass Pl Fem) => "bendichas"
    }
  } ;

lin contradecir_V = verboV 
 {s = table {
    VI Infn => "contradecir" ;
    VI Ger => "contradiciendo" ;
    VI Part => "contradecido" ;
    VP (Pres Ind Sg P1) => "contradigo" ;
    VP (Pres Ind Sg P2) => "contradices" ;
    VP (Pres Ind Sg P3) => "contradice" ;
    VP (Pres Ind Pl P1) => "contradecimos" ;
    VP (Pres Ind Pl P2) => "contradecís" ;
    VP (Pres Ind Pl P3) => "contradicen" ;
    VP (Pres Subj Sg P1) => "contradiga" ;
    VP (Pres Subj Sg P2) => "contradigas" ;
    VP (Pres Subj Sg P3) => "contradiga" ;
    VP (Pres Subj Pl P1) => "contradigamos" ;
    VP (Pres Subj Pl P2) => "contradigáis" ;
    VP (Pres Subj Pl P3) => "contradigan" ;
    VP (Impf Ind Sg P1) => "contradecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "contradecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "contradecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "contradecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "contradecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "contradecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"contradijera" ; "contradijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"contradijeras" ; "contradijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"contradijera" ; "contradijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"contradijéramos" ; "contradijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"contradijerais" ; "contradijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"contradijeran" ; "contradijesen"} ;--# notpresent
    VP (Pret Sg P1) => "contradije" ;--# notpresent
    VP (Pret Sg P2) => "contradijiste" ;--# notpresent
    VP (Pret Sg P3) => "contradijo" ;--# notpresent
    VP (Pret Pl P1) => "contradijimos" ;--# notpresent
    VP (Pret Pl P2) => "contradijisteis" ;--# notpresent
    VP (Pret Pl P3) => "contradijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "contradeciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "contradecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "contradecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "contradeciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "contradeciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "contradecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "contradijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "contradijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "contradijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "contradijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "contradijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "contradijeren" ;--# notpresent
    VP (Cond Sg P1) => "contradeciría" ;--# notpresent
    VP (Cond Sg P2) => "contradecirías" ;--# notpresent
    VP (Cond Sg P3) => "contradeciría" ;--# notpresent
    VP (Cond Pl P1) => "contradeciríamos" ;--# notpresent
    VP (Cond Pl P2) => "contradeciríais" ;--# notpresent
    VP (Cond Pl P3) => "contradecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "contradice" ;
    VP (Imp Sg P3) => "contradiga" ;
    VP (Imp Pl P1) => "contradigamos" ;
    VP (Imp Pl P2) => "contradecid" ;
    VP (Imp Pl P3) => "contradigan" ;
    VP (Pass Sg Masc) => "contradecido" ;
    VP (Pass Sg Fem) => "contradecida" ;
    VP (Pass Pl Masc) => "contradecidos" ;
    VP (Pass Pl Fem) => "contradecidas"
    }
  } ;

lin desdecir_V = verboV 
 {s = table {
    VI Infn => "desdecir" ;
    VI Ger => "desdiciendo" ;
    VI Part => "desdicho" ;
    VP (Pres Ind Sg P1) => "desdigo" ;
    VP (Pres Ind Sg P2) => "desdices" ;
    VP (Pres Ind Sg P3) => "desdice" ;
    VP (Pres Ind Pl P1) => "desdecimos" ;
    VP (Pres Ind Pl P2) => "desdecís" ;
    VP (Pres Ind Pl P3) => "desdicen" ;
    VP (Pres Subj Sg P1) => "desdiga" ;
    VP (Pres Subj Sg P2) => "desdigas" ;
    VP (Pres Subj Sg P3) => "desdiga" ;
    VP (Pres Subj Pl P1) => "desdigamos" ;
    VP (Pres Subj Pl P2) => "desdigáis" ;
    VP (Pres Subj Pl P3) => "desdigan" ;
    VP (Impf Ind Sg P1) => "desdecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desdecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desdecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desdecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desdecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desdecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desdijera" ; "desdijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"desdijeras" ; "desdijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desdijera" ; "desdijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desdijéramos" ; "desdijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"desdijerais" ; "desdijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"desdijeran" ; "desdijesen"} ;--# notpresent
    VP (Pret Sg P1) => "desdije" ;--# notpresent
    VP (Pret Sg P2) => "desdijiste" ;--# notpresent
    VP (Pret Sg P3) => "desdijo" ;--# notpresent
    VP (Pret Pl P1) => "desdijimos" ;--# notpresent
    VP (Pret Pl P2) => "desdijisteis" ;--# notpresent
    VP (Pret Pl P3) => "desdijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desdeciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desdecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desdecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desdeciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desdeciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desdecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desdijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "desdijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desdijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desdijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desdijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "desdijeren" ;--# notpresent
    VP (Cond Sg P1) => "desdeciría" ;--# notpresent
    VP (Cond Sg P2) => "desdecirías" ;--# notpresent
    VP (Cond Sg P3) => "desdeciría" ;--# notpresent
    VP (Cond Pl P1) => "desdeciríamos" ;--# notpresent
    VP (Cond Pl P2) => "desdeciríais" ;--# notpresent
    VP (Cond Pl P3) => "desdecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "desdice" ;
    VP (Imp Sg P3) => "desdiga" ;
    VP (Imp Pl P1) => "desdigamos" ;
    VP (Imp Pl P2) => "desdecid" ;
    VP (Imp Pl P3) => "desdigan" ;
    VP (Pass Sg Masc) => "desdicho" ;
    VP (Pass Sg Fem) => "desdicha" ;
    VP (Pass Pl Masc) => "desdichos" ;
    VP (Pass Pl Fem) => "desdichas"
    }
  } ;

lin entredecir_V = verboV 
 {s = table {
    VI Infn => "entredecir" ;
    VI Ger => "entrediciendo" ;
    VI Part => "entredicho" ;
    VP (Pres Ind Sg P1) => "entredigo" ;
    VP (Pres Ind Sg P2) => "entredices" ;
    VP (Pres Ind Sg P3) => "entredice" ;
    VP (Pres Ind Pl P1) => "entredecimos" ;
    VP (Pres Ind Pl P2) => "entredecís" ;
    VP (Pres Ind Pl P3) => "entredicen" ;
    VP (Pres Subj Sg P1) => "entrediga" ;
    VP (Pres Subj Sg P2) => "entredigas" ;
    VP (Pres Subj Sg P3) => "entrediga" ;
    VP (Pres Subj Pl P1) => "entredigamos" ;
    VP (Pres Subj Pl P2) => "entredigáis" ;
    VP (Pres Subj Pl P3) => "entredigan" ;
    VP (Impf Ind Sg P1) => "entredecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entredecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entredecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entredecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entredecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entredecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entredijera" ; "entredijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entredijeras" ; "entredijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entredijera" ; "entredijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entredijéramos" ; "entredijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entredijerais" ; "entredijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entredijeran" ; "entredijesen"} ;--# notpresent
    VP (Pret Sg P1) => "entredije" ;--# notpresent
    VP (Pret Sg P2) => "entredijiste" ;--# notpresent
    VP (Pret Sg P3) => "entredijo" ;--# notpresent
    VP (Pret Pl P1) => "entredijimos" ;--# notpresent
    VP (Pret Pl P2) => "entredijisteis" ;--# notpresent
    VP (Pret Pl P3) => "entredijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entredeciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entredecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entredecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entredeciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entredeciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entredecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entredijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entredijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entredijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entredijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entredijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entredijeren" ;--# notpresent
    VP (Cond Sg P1) => "entredeciría" ;--# notpresent
    VP (Cond Sg P2) => "entredecirías" ;--# notpresent
    VP (Cond Sg P3) => "entredeciría" ;--# notpresent
    VP (Cond Pl P1) => "entredeciríamos" ;--# notpresent
    VP (Cond Pl P2) => "entredeciríais" ;--# notpresent
    VP (Cond Pl P3) => "entredecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entredice" ;
    VP (Imp Sg P3) => "entrediga" ;
    VP (Imp Pl P1) => "entredigamos" ;
    VP (Imp Pl P2) => "entredecid" ;
    VP (Imp Pl P3) => "entredigan" ;
    VP (Pass Sg Masc) => "entredicho" ;
    VP (Pass Sg Fem) => "entredicha" ;
    VP (Pass Pl Masc) => "entredichos" ;
    VP (Pass Pl Fem) => "entredichas"
    }
  } ;

lin predecir_V = verboV 
 {s = table {
    VI Infn => "predecir" ;
    VI Ger => "prediciendo" ;
    VI Part => "predicho" ;
    VP (Pres Ind Sg P1) => "predigo" ;
    VP (Pres Ind Sg P2) => "predices" ;
    VP (Pres Ind Sg P3) => "predice" ;
    VP (Pres Ind Pl P1) => "predecimos" ;
    VP (Pres Ind Pl P2) => "predecís" ;
    VP (Pres Ind Pl P3) => "predicen" ;
    VP (Pres Subj Sg P1) => "prediga" ;
    VP (Pres Subj Sg P2) => "predigas" ;
    VP (Pres Subj Sg P3) => "prediga" ;
    VP (Pres Subj Pl P1) => "predigamos" ;
    VP (Pres Subj Pl P2) => "predigáis" ;
    VP (Pres Subj Pl P3) => "predigan" ;
    VP (Impf Ind Sg P1) => "predecía" ;--# notpresent
    VP (Impf Ind Sg P2) => "predecías" ;--# notpresent
    VP (Impf Ind Sg P3) => "predecía" ;--# notpresent
    VP (Impf Ind Pl P1) => "predecíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "predecíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "predecían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"predijera" ; "predijese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"predijeras" ; "predijeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"predijera" ; "predijese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"predijéramos" ; "predijésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"predijerais" ; "predijeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"predijeran" ; "predijesen"} ;--# notpresent
    VP (Pret Sg P1) => "predije" ;--# notpresent
    VP (Pret Sg P2) => "predijiste" ;--# notpresent
    VP (Pret Sg P3) => "predijo" ;--# notpresent
    VP (Pret Pl P1) => "predijimos" ;--# notpresent
    VP (Pret Pl P2) => "predijisteis" ;--# notpresent
    VP (Pret Pl P3) => "predijeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "predeciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "predecirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "predecirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "predeciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "predeciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "predecirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "predijere" ;--# notpresent
    VP (Fut Subj Sg P2) => "predijeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "predijere" ;--# notpresent
    VP (Fut Subj Pl P1) => "predijéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "predijereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "predijeren" ;--# notpresent
    VP (Cond Sg P1) => "predeciría" ;--# notpresent
    VP (Cond Sg P2) => "predecirías" ;--# notpresent
    VP (Cond Sg P3) => "predeciría" ;--# notpresent
    VP (Cond Pl P1) => "predeciríamos" ;--# notpresent
    VP (Cond Pl P2) => "predeciríais" ;--# notpresent
    VP (Cond Pl P3) => "predecirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "predice" ;
    VP (Imp Sg P3) => "prediga" ;
    VP (Imp Pl P1) => "predigamos" ;
    VP (Imp Pl P2) => "predecid" ;
    VP (Imp Pl P3) => "predigan" ;
    VP (Pass Sg Masc) => "predicho" ;
    VP (Pass Sg Fem) => "predicha" ;
    VP (Pass Pl Masc) => "predichos" ;
    VP (Pass Pl Fem) => "predichas"
    }
  } ;

lin aducir_V = verboV 
 {s = table {
    VI Infn => "aducir" ;
    VI Ger => "aduciendo" ;
    VI Part => "aducido" ;
    VP (Pres Ind Sg P1) => "aduzco" ;
    VP (Pres Ind Sg P2) => "aduces" ;
    VP (Pres Ind Sg P3) => "aduce" ;
    VP (Pres Ind Pl P1) => "aducimos" ;
    VP (Pres Ind Pl P2) => "aducís" ;
    VP (Pres Ind Pl P3) => "aducen" ;
    VP (Pres Subj Sg P1) => "aduzca" ;
    VP (Pres Subj Sg P2) => "aduzcas" ;
    VP (Pres Subj Sg P3) => "aduzca" ;
    VP (Pres Subj Pl P1) => "aduzcamos" ;
    VP (Pres Subj Pl P2) => "aduzcáis" ;
    VP (Pres Subj Pl P3) => "aduzcan" ;
    VP (Impf Ind Sg P1) => "aducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "aducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "aducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "aducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "aducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "aducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"adujera" ; "adujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"adujeras" ; "adujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"adujera" ; "adujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"adujéramos" ; "adujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"adujerais" ; "adujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"adujeran" ; "adujesen"} ;--# notpresent
    VP (Pret Sg P1) => "aduje" ;--# notpresent
    VP (Pret Sg P2) => "adujiste" ;--# notpresent
    VP (Pret Sg P3) => "adujo" ;--# notpresent
    VP (Pret Pl P1) => "adujimos" ;--# notpresent
    VP (Pret Pl P2) => "adujisteis" ;--# notpresent
    VP (Pret Pl P3) => "adujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "aduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "aducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "aducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "aduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "aduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "aducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "adujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "adujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "adujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "adujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "adujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "adujeren" ;--# notpresent
    VP (Cond Sg P1) => "aduciría" ;--# notpresent
    VP (Cond Sg P2) => "aducirías" ;--# notpresent
    VP (Cond Sg P3) => "aduciría" ;--# notpresent
    VP (Cond Pl P1) => "aduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "aduciríais" ;--# notpresent
    VP (Cond Pl P3) => "aducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "aduce" ;
    VP (Imp Sg P3) => "aduzca" ;
    VP (Imp Pl P1) => "aduzcamos" ;
    VP (Imp Pl P2) => "aducid" ;
    VP (Imp Pl P3) => "aduzcan" ;
    VP (Pass Sg Masc) => "aducido" ;
    VP (Pass Sg Fem) => "aducida" ;
    VP (Pass Pl Masc) => "aducidos" ;
    VP (Pass Pl Fem) => "aducidas"
    }
  } ;

lin conducir_V = verboV 
 {s = table {
    VI Infn => "conducir" ;
    VI Ger => "conduciendo" ;
    VI Part => "conducido" ;
    VP (Pres Ind Sg P1) => "conduzco" ;
    VP (Pres Ind Sg P2) => "conduces" ;
    VP (Pres Ind Sg P3) => "conduce" ;
    VP (Pres Ind Pl P1) => "conducimos" ;
    VP (Pres Ind Pl P2) => "conducís" ;
    VP (Pres Ind Pl P3) => "conducen" ;
    VP (Pres Subj Sg P1) => "conduzca" ;
    VP (Pres Subj Sg P2) => "conduzcas" ;
    VP (Pres Subj Sg P3) => "conduzca" ;
    VP (Pres Subj Pl P1) => "conduzcamos" ;
    VP (Pres Subj Pl P2) => "conduzcáis" ;
    VP (Pres Subj Pl P3) => "conduzcan" ;
    VP (Impf Ind Sg P1) => "conducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "conducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "conducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "conducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "conducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "conducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"condujera" ; "condujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"condujeras" ; "condujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"condujera" ; "condujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"condujéramos" ; "condujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"condujerais" ; "condujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"condujeran" ; "condujesen"} ;--# notpresent
    VP (Pret Sg P1) => "conduje" ;--# notpresent
    VP (Pret Sg P2) => "condujiste" ;--# notpresent
    VP (Pret Sg P3) => "condujo" ;--# notpresent
    VP (Pret Pl P1) => "condujimos" ;--# notpresent
    VP (Pret Pl P2) => "condujisteis" ;--# notpresent
    VP (Pret Pl P3) => "condujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "conduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "conducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "conducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "conduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "conduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "conducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "condujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "condujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "condujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "condujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "condujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "condujeren" ;--# notpresent
    VP (Cond Sg P1) => "conduciría" ;--# notpresent
    VP (Cond Sg P2) => "conducirías" ;--# notpresent
    VP (Cond Sg P3) => "conduciría" ;--# notpresent
    VP (Cond Pl P1) => "conduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "conduciríais" ;--# notpresent
    VP (Cond Pl P3) => "conducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "conduce" ;
    VP (Imp Sg P3) => "conduzca" ;
    VP (Imp Pl P1) => "conduzcamos" ;
    VP (Imp Pl P2) => "conducid" ;
    VP (Imp Pl P3) => "conduzcan" ;
    VP (Pass Sg Masc) => "conducido" ;
    VP (Pass Sg Fem) => "conducida" ;
    VP (Pass Pl Masc) => "conducidos" ;
    VP (Pass Pl Fem) => "conducidas"
    }
  } ;

lin coproducir_V = verboV 
 {s = table {
    VI Infn => "coproducir" ;
    VI Ger => "coproduciendo" ;
    VI Part => "coproducido" ;
    VP (Pres Ind Sg P1) => "coproduzco" ;
    VP (Pres Ind Sg P2) => "coproduces" ;
    VP (Pres Ind Sg P3) => "coproduce" ;
    VP (Pres Ind Pl P1) => "coproducimos" ;
    VP (Pres Ind Pl P2) => "coproducís" ;
    VP (Pres Ind Pl P3) => "coproducen" ;
    VP (Pres Subj Sg P1) => "coproduzca" ;
    VP (Pres Subj Sg P2) => "coproduzcas" ;
    VP (Pres Subj Sg P3) => "coproduzca" ;
    VP (Pres Subj Pl P1) => "coproduzcamos" ;
    VP (Pres Subj Pl P2) => "coproduzcáis" ;
    VP (Pres Subj Pl P3) => "coproduzcan" ;
    VP (Impf Ind Sg P1) => "coproducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "coproducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "coproducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "coproducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "coproducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "coproducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"coprodujera" ; "coprodujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"coprodujeras" ; "coprodujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"coprodujera" ; "coprodujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"coprodujéramos" ; "coprodujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"coprodujerais" ; "coprodujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"coprodujeran" ; "coprodujesen"} ;--# notpresent
    VP (Pret Sg P1) => "coproduje" ;--# notpresent
    VP (Pret Sg P2) => "coprodujiste" ;--# notpresent
    VP (Pret Sg P3) => "coprodujo" ;--# notpresent
    VP (Pret Pl P1) => "coprodujimos" ;--# notpresent
    VP (Pret Pl P2) => "coprodujisteis" ;--# notpresent
    VP (Pret Pl P3) => "coprodujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "coproduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "coproducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "coproducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "coproduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "coproduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "coproducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "coprodujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "coprodujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "coprodujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "coprodujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "coprodujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "coprodujeren" ;--# notpresent
    VP (Cond Sg P1) => "coproduciría" ;--# notpresent
    VP (Cond Sg P2) => "coproducirías" ;--# notpresent
    VP (Cond Sg P3) => "coproduciría" ;--# notpresent
    VP (Cond Pl P1) => "coproduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "coproduciríais" ;--# notpresent
    VP (Cond Pl P3) => "coproducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "coproduce" ;
    VP (Imp Sg P3) => "coproduzca" ;
    VP (Imp Pl P1) => "coproduzcamos" ;
    VP (Imp Pl P2) => "coproducid" ;
    VP (Imp Pl P3) => "coproduzcan" ;
    VP (Pass Sg Masc) => "coproducido" ;
    VP (Pass Sg Fem) => "coproducida" ;
    VP (Pass Pl Masc) => "coproducidos" ;
    VP (Pass Pl Fem) => "coproducidas"
    }
  } ;

lin deducir_V = verboV 
 {s = table {
    VI Infn => "deducir" ;
    VI Ger => "deduciendo" ;
    VI Part => "deducido" ;
    VP (Pres Ind Sg P1) => "deduzco" ;
    VP (Pres Ind Sg P2) => "deduces" ;
    VP (Pres Ind Sg P3) => "deduce" ;
    VP (Pres Ind Pl P1) => "deducimos" ;
    VP (Pres Ind Pl P2) => "deducís" ;
    VP (Pres Ind Pl P3) => "deducen" ;
    VP (Pres Subj Sg P1) => "deduzca" ;
    VP (Pres Subj Sg P2) => "deduzcas" ;
    VP (Pres Subj Sg P3) => "deduzca" ;
    VP (Pres Subj Pl P1) => "deduzcamos" ;
    VP (Pres Subj Pl P2) => "deduzcáis" ;
    VP (Pres Subj Pl P3) => "deduzcan" ;
    VP (Impf Ind Sg P1) => "deducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "deducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "deducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "deducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "deducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "deducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"dedujera" ; "dedujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"dedujeras" ; "dedujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"dedujera" ; "dedujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"dedujéramos" ; "dedujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"dedujerais" ; "dedujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"dedujeran" ; "dedujesen"} ;--# notpresent
    VP (Pret Sg P1) => "deduje" ;--# notpresent
    VP (Pret Sg P2) => "dedujiste" ;--# notpresent
    VP (Pret Sg P3) => "dedujo" ;--# notpresent
    VP (Pret Pl P1) => "dedujimos" ;--# notpresent
    VP (Pret Pl P2) => "dedujisteis" ;--# notpresent
    VP (Pret Pl P3) => "dedujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "deduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "deducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "deducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "deduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "deduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "deducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "dedujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "dedujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "dedujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "dedujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "dedujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "dedujeren" ;--# notpresent
    VP (Cond Sg P1) => "deduciría" ;--# notpresent
    VP (Cond Sg P2) => "deducirías" ;--# notpresent
    VP (Cond Sg P3) => "deduciría" ;--# notpresent
    VP (Cond Pl P1) => "deduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "deduciríais" ;--# notpresent
    VP (Cond Pl P3) => "deducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deduce" ;
    VP (Imp Sg P3) => "deduzca" ;
    VP (Imp Pl P1) => "deduzcamos" ;
    VP (Imp Pl P2) => "deducid" ;
    VP (Imp Pl P3) => "deduzcan" ;
    VP (Pass Sg Masc) => "deducido" ;
    VP (Pass Sg Fem) => "deducida" ;
    VP (Pass Pl Masc) => "deducidos" ;
    VP (Pass Pl Fem) => "deducidas"
    }
  } ;

lin inducir_V = verboV 
 {s = table {
    VI Infn => "inducir" ;
    VI Ger => "induciendo" ;
    VI Part => "inducido" ;
    VP (Pres Ind Sg P1) => "induzco" ;
    VP (Pres Ind Sg P2) => "induces" ;
    VP (Pres Ind Sg P3) => "induce" ;
    VP (Pres Ind Pl P1) => "inducimos" ;
    VP (Pres Ind Pl P2) => "inducís" ;
    VP (Pres Ind Pl P3) => "inducen" ;
    VP (Pres Subj Sg P1) => "induzca" ;
    VP (Pres Subj Sg P2) => "induzcas" ;
    VP (Pres Subj Sg P3) => "induzca" ;
    VP (Pres Subj Pl P1) => "induzcamos" ;
    VP (Pres Subj Pl P2) => "induzcáis" ;
    VP (Pres Subj Pl P3) => "induzcan" ;
    VP (Impf Ind Sg P1) => "inducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "inducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "inducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "inducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "inducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "inducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"indujera" ; "indujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"indujeras" ; "indujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"indujera" ; "indujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"indujéramos" ; "indujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"indujerais" ; "indujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"indujeran" ; "indujesen"} ;--# notpresent
    VP (Pret Sg P1) => "induje" ;--# notpresent
    VP (Pret Sg P2) => "indujiste" ;--# notpresent
    VP (Pret Sg P3) => "indujo" ;--# notpresent
    VP (Pret Pl P1) => "indujimos" ;--# notpresent
    VP (Pret Pl P2) => "indujisteis" ;--# notpresent
    VP (Pret Pl P3) => "indujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "induciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "inducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "inducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "induciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "induciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "inducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "indujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "indujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "indujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "indujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "indujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "indujeren" ;--# notpresent
    VP (Cond Sg P1) => "induciría" ;--# notpresent
    VP (Cond Sg P2) => "inducirías" ;--# notpresent
    VP (Cond Sg P3) => "induciría" ;--# notpresent
    VP (Cond Pl P1) => "induciríamos" ;--# notpresent
    VP (Cond Pl P2) => "induciríais" ;--# notpresent
    VP (Cond Pl P3) => "inducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "induce" ;
    VP (Imp Sg P3) => "induzca" ;
    VP (Imp Pl P1) => "induzcamos" ;
    VP (Imp Pl P2) => "inducid" ;
    VP (Imp Pl P3) => "induzcan" ;
    VP (Pass Sg Masc) => "inducido" ;
    VP (Pass Sg Fem) => "inducida" ;
    VP (Pass Pl Masc) => "inducidos" ;
    VP (Pass Pl Fem) => "inducidas"
    }
  } ;

lin introducir_V = verboV 
 {s = table {
    VI Infn => "introducir" ;
    VI Ger => "introduciendo" ;
    VI Part => "introducido" ;
    VP (Pres Ind Sg P1) => "introduzco" ;
    VP (Pres Ind Sg P2) => "introduces" ;
    VP (Pres Ind Sg P3) => "introduce" ;
    VP (Pres Ind Pl P1) => "introducimos" ;
    VP (Pres Ind Pl P2) => "introducís" ;
    VP (Pres Ind Pl P3) => "introducen" ;
    VP (Pres Subj Sg P1) => "introduzca" ;
    VP (Pres Subj Sg P2) => "introduzcas" ;
    VP (Pres Subj Sg P3) => "introduzca" ;
    VP (Pres Subj Pl P1) => "introduzcamos" ;
    VP (Pres Subj Pl P2) => "introduzcáis" ;
    VP (Pres Subj Pl P3) => "introduzcan" ;
    VP (Impf Ind Sg P1) => "introducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "introducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "introducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "introducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "introducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "introducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"introdujera" ; "introdujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"introdujeras" ; "introdujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"introdujera" ; "introdujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"introdujéramos" ; "introdujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"introdujerais" ; "introdujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"introdujeran" ; "introdujesen"} ;--# notpresent
    VP (Pret Sg P1) => "introduje" ;--# notpresent
    VP (Pret Sg P2) => "introdujiste" ;--# notpresent
    VP (Pret Sg P3) => "introdujo" ;--# notpresent
    VP (Pret Pl P1) => "introdujimos" ;--# notpresent
    VP (Pret Pl P2) => "introdujisteis" ;--# notpresent
    VP (Pret Pl P3) => "introdujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "introduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "introducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "introducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "introduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "introduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "introducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "introdujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "introdujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "introdujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "introdujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "introdujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "introdujeren" ;--# notpresent
    VP (Cond Sg P1) => "introduciría" ;--# notpresent
    VP (Cond Sg P2) => "introducirías" ;--# notpresent
    VP (Cond Sg P3) => "introduciría" ;--# notpresent
    VP (Cond Pl P1) => "introduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "introduciríais" ;--# notpresent
    VP (Cond Pl P3) => "introducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "introduce" ;
    VP (Imp Sg P3) => "introduzca" ;
    VP (Imp Pl P1) => "introduzcamos" ;
    VP (Imp Pl P2) => "introducid" ;
    VP (Imp Pl P3) => "introduzcan" ;
    VP (Pass Sg Masc) => "introducido" ;
    VP (Pass Sg Fem) => "introducida" ;
    VP (Pass Pl Masc) => "introducidos" ;
    VP (Pass Pl Fem) => "introducidas"
    }
  } ;

lin producir_V = verboV 
 {s = table {
    VI Infn => "producir" ;
    VI Ger => "produciendo" ;
    VI Part => "producido" ;
    VP (Pres Ind Sg P1) => "produzco" ;
    VP (Pres Ind Sg P2) => "produces" ;
    VP (Pres Ind Sg P3) => "produce" ;
    VP (Pres Ind Pl P1) => "producimos" ;
    VP (Pres Ind Pl P2) => "producís" ;
    VP (Pres Ind Pl P3) => "producen" ;
    VP (Pres Subj Sg P1) => "produzca" ;
    VP (Pres Subj Sg P2) => "produzcas" ;
    VP (Pres Subj Sg P3) => "produzca" ;
    VP (Pres Subj Pl P1) => "produzcamos" ;
    VP (Pres Subj Pl P2) => "produzcáis" ;
    VP (Pres Subj Pl P3) => "produzcan" ;
    VP (Impf Ind Sg P1) => "producía" ;--# notpresent
    VP (Impf Ind Sg P2) => "producías" ;--# notpresent
    VP (Impf Ind Sg P3) => "producía" ;--# notpresent
    VP (Impf Ind Pl P1) => "producíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "producíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "producían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"produjera" ; "produjese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"produjeras" ; "produjeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"produjera" ; "produjese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"produjéramos" ; "produjésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"produjerais" ; "produjeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"produjeran" ; "produjesen"} ;--# notpresent
    VP (Pret Sg P1) => "produje" ;--# notpresent
    VP (Pret Sg P2) => "produjiste" ;--# notpresent
    VP (Pret Sg P3) => "produjo" ;--# notpresent
    VP (Pret Pl P1) => "produjimos" ;--# notpresent
    VP (Pret Pl P2) => "produjisteis" ;--# notpresent
    VP (Pret Pl P3) => "produjeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "produciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "producirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "producirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "produciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "produciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "producirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "produjere" ;--# notpresent
    VP (Fut Subj Sg P2) => "produjeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "produjere" ;--# notpresent
    VP (Fut Subj Pl P1) => "produjéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "produjereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "produjeren" ;--# notpresent
    VP (Cond Sg P1) => "produciría" ;--# notpresent
    VP (Cond Sg P2) => "producirías" ;--# notpresent
    VP (Cond Sg P3) => "produciría" ;--# notpresent
    VP (Cond Pl P1) => "produciríamos" ;--# notpresent
    VP (Cond Pl P2) => "produciríais" ;--# notpresent
    VP (Cond Pl P3) => "producirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "produce" ;
    VP (Imp Sg P3) => "produzca" ;
    VP (Imp Pl P1) => "produzcamos" ;
    VP (Imp Pl P2) => "producid" ;
    VP (Imp Pl P3) => "produzcan" ;
    VP (Pass Sg Masc) => "producido" ;
    VP (Pass Sg Fem) => "producida" ;
    VP (Pass Pl Masc) => "producidos" ;
    VP (Pass Pl Fem) => "producidas"
    }
  } ;

lin reconducir_V = verboV 
 {s = table {
    VI Infn => "reconducir" ;
    VI Ger => "reconduciendo" ;
    VI Part => "reconducido" ;
    VP (Pres Ind Sg P1) => "reconduzco" ;
    VP (Pres Ind Sg P2) => "reconduces" ;
    VP (Pres Ind Sg P3) => "reconduce" ;
    VP (Pres Ind Pl P1) => "reconducimos" ;
    VP (Pres Ind Pl P2) => "reconducís" ;
    VP (Pres Ind Pl P3) => "reconducen" ;
    VP (Pres Subj Sg P1) => "reconduzca" ;
    VP (Pres Subj Sg P2) => "reconduzcas" ;
    VP (Pres Subj Sg P3) => "reconduzca" ;
    VP (Pres Subj Pl P1) => "reconduzcamos" ;
    VP (Pres Subj Pl P2) => "reconduzcáis" ;
    VP (Pres Subj Pl P3) => "reconduzcan" ;
    VP (Impf Ind Sg P1) => "reconducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reconducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reconducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reconducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reconducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reconducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"recondujera" ; "recondujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"recondujeras" ; "recondujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"recondujera" ; "recondujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"recondujéramos" ; "recondujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"recondujerais" ; "recondujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"recondujeran" ; "recondujesen"} ;--# notpresent
    VP (Pret Sg P1) => "reconduje" ;--# notpresent
    VP (Pret Sg P2) => "recondujiste" ;--# notpresent
    VP (Pret Sg P3) => "recondujo" ;--# notpresent
    VP (Pret Pl P1) => "recondujimos" ;--# notpresent
    VP (Pret Pl P2) => "recondujisteis" ;--# notpresent
    VP (Pret Pl P3) => "recondujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reconduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reconducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reconducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reconduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reconduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reconducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "recondujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "recondujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "recondujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "recondujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "recondujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "recondujeren" ;--# notpresent
    VP (Cond Sg P1) => "reconduciría" ;--# notpresent
    VP (Cond Sg P2) => "reconducirías" ;--# notpresent
    VP (Cond Sg P3) => "reconduciría" ;--# notpresent
    VP (Cond Pl P1) => "reconduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "reconduciríais" ;--# notpresent
    VP (Cond Pl P3) => "reconducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reconduce" ;
    VP (Imp Sg P3) => "reconduzca" ;
    VP (Imp Pl P1) => "reconduzcamos" ;
    VP (Imp Pl P2) => "reconducid" ;
    VP (Imp Pl P3) => "reconduzcan" ;
    VP (Pass Sg Masc) => "reconducido" ;
    VP (Pass Sg Fem) => "reconducida" ;
    VP (Pass Pl Masc) => "reconducidos" ;
    VP (Pass Pl Fem) => "reconducidas"
    }
  } ;

lin reducir_V = verboV 
 {s = table {
    VI Infn => "reducir" ;
    VI Ger => "reduciendo" ;
    VI Part => "reducido" ;
    VP (Pres Ind Sg P1) => "reduzco" ;
    VP (Pres Ind Sg P2) => "reduces" ;
    VP (Pres Ind Sg P3) => "reduce" ;
    VP (Pres Ind Pl P1) => "reducimos" ;
    VP (Pres Ind Pl P2) => "reducís" ;
    VP (Pres Ind Pl P3) => "reducen" ;
    VP (Pres Subj Sg P1) => "reduzca" ;
    VP (Pres Subj Sg P2) => "reduzcas" ;
    VP (Pres Subj Sg P3) => "reduzca" ;
    VP (Pres Subj Pl P1) => "reduzcamos" ;
    VP (Pres Subj Pl P2) => "reduzcáis" ;
    VP (Pres Subj Pl P3) => "reduzcan" ;
    VP (Impf Ind Sg P1) => "reducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"redujera" ; "redujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"redujeras" ; "redujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"redujera" ; "redujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"redujéramos" ; "redujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"redujerais" ; "redujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"redujeran" ; "redujesen"} ;--# notpresent
    VP (Pret Sg P1) => "reduje" ;--# notpresent
    VP (Pret Sg P2) => "redujiste" ;--# notpresent
    VP (Pret Sg P3) => "redujo" ;--# notpresent
    VP (Pret Pl P1) => "redujimos" ;--# notpresent
    VP (Pret Pl P2) => "redujisteis" ;--# notpresent
    VP (Pret Pl P3) => "redujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "redujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "redujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "redujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "redujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "redujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "redujeren" ;--# notpresent
    VP (Cond Sg P1) => "reduciría" ;--# notpresent
    VP (Cond Sg P2) => "reducirías" ;--# notpresent
    VP (Cond Sg P3) => "reduciría" ;--# notpresent
    VP (Cond Pl P1) => "reduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "reduciríais" ;--# notpresent
    VP (Cond Pl P3) => "reducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reduce" ;
    VP (Imp Sg P3) => "reduzca" ;
    VP (Imp Pl P1) => "reduzcamos" ;
    VP (Imp Pl P2) => "reducid" ;
    VP (Imp Pl P3) => "reduzcan" ;
    VP (Pass Sg Masc) => "reducido" ;
    VP (Pass Sg Fem) => "reducida" ;
    VP (Pass Pl Masc) => "reducidos" ;
    VP (Pass Pl Fem) => "reducidas"
    }
  } ;

lin reproducir_V = verboV 
 {s = table {
    VI Infn => "reproducir" ;
    VI Ger => "reproduciendo" ;
    VI Part => "reproducido" ;
    VP (Pres Ind Sg P1) => "reproduzco" ;
    VP (Pres Ind Sg P2) => "reproduces" ;
    VP (Pres Ind Sg P3) => "reproduce" ;
    VP (Pres Ind Pl P1) => "reproducimos" ;
    VP (Pres Ind Pl P2) => "reproducís" ;
    VP (Pres Ind Pl P3) => "reproducen" ;
    VP (Pres Subj Sg P1) => "reproduzca" ;
    VP (Pres Subj Sg P2) => "reproduzcas" ;
    VP (Pres Subj Sg P3) => "reproduzca" ;
    VP (Pres Subj Pl P1) => "reproduzcamos" ;
    VP (Pres Subj Pl P2) => "reproduzcáis" ;
    VP (Pres Subj Pl P3) => "reproduzcan" ;
    VP (Impf Ind Sg P1) => "reproducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reproducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reproducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reproducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reproducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reproducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reprodujera" ; "reprodujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reprodujeras" ; "reprodujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reprodujera" ; "reprodujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reprodujéramos" ; "reprodujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reprodujerais" ; "reprodujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reprodujeran" ; "reprodujesen"} ;--# notpresent
    VP (Pret Sg P1) => "reproduje" ;--# notpresent
    VP (Pret Sg P2) => "reprodujiste" ;--# notpresent
    VP (Pret Sg P3) => "reprodujo" ;--# notpresent
    VP (Pret Pl P1) => "reprodujimos" ;--# notpresent
    VP (Pret Pl P2) => "reprodujisteis" ;--# notpresent
    VP (Pret Pl P3) => "reprodujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reproduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reproducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reproducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reproduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reproduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reproducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reprodujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reprodujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reprodujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reprodujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reprodujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reprodujeren" ;--# notpresent
    VP (Cond Sg P1) => "reproduciría" ;--# notpresent
    VP (Cond Sg P2) => "reproducirías" ;--# notpresent
    VP (Cond Sg P3) => "reproduciría" ;--# notpresent
    VP (Cond Pl P1) => "reproduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "reproduciríais" ;--# notpresent
    VP (Cond Pl P3) => "reproducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reproduce" ;
    VP (Imp Sg P3) => "reproduzca" ;
    VP (Imp Pl P1) => "reproduzcamos" ;
    VP (Imp Pl P2) => "reproducid" ;
    VP (Imp Pl P3) => "reproduzcan" ;
    VP (Pass Sg Masc) => "reproducido" ;
    VP (Pass Sg Fem) => "reproducida" ;
    VP (Pass Pl Masc) => "reproducidos" ;
    VP (Pass Pl Fem) => "reproducidas"
    }
  } ;

lin retraducir_V = verboV 
 {s = table {
    VI Infn => "retraducir" ;
    VI Ger => "retraduciendo" ;
    VI Part => "retraducido" ;
    VP (Pres Ind Sg P1) => "retraduzco" ;
    VP (Pres Ind Sg P2) => "retraduces" ;
    VP (Pres Ind Sg P3) => "retraduce" ;
    VP (Pres Ind Pl P1) => "retraducimos" ;
    VP (Pres Ind Pl P2) => "retraducís" ;
    VP (Pres Ind Pl P3) => "retraducen" ;
    VP (Pres Subj Sg P1) => "retraduzca" ;
    VP (Pres Subj Sg P2) => "retraduzcas" ;
    VP (Pres Subj Sg P3) => "retraduzca" ;
    VP (Pres Subj Pl P1) => "retraduzcamos" ;
    VP (Pres Subj Pl P2) => "retraduzcáis" ;
    VP (Pres Subj Pl P3) => "retraduzcan" ;
    VP (Impf Ind Sg P1) => "retraducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "retraducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "retraducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "retraducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "retraducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "retraducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"retradujera" ; "retradujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"retradujeras" ; "retradujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"retradujera" ; "retradujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"retradujéramos" ; "retradujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"retradujerais" ; "retradujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"retradujeran" ; "retradujesen"} ;--# notpresent
    VP (Pret Sg P1) => "retraduje" ;--# notpresent
    VP (Pret Sg P2) => "retradujiste" ;--# notpresent
    VP (Pret Sg P3) => "retradujo" ;--# notpresent
    VP (Pret Pl P1) => "retradujimos" ;--# notpresent
    VP (Pret Pl P2) => "retradujisteis" ;--# notpresent
    VP (Pret Pl P3) => "retradujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "retraduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "retraducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "retraducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "retraduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "retraduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "retraducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "retradujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "retradujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "retradujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "retradujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "retradujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "retradujeren" ;--# notpresent
    VP (Cond Sg P1) => "retraduciría" ;--# notpresent
    VP (Cond Sg P2) => "retraducirías" ;--# notpresent
    VP (Cond Sg P3) => "retraduciría" ;--# notpresent
    VP (Cond Pl P1) => "retraduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "retraduciríais" ;--# notpresent
    VP (Cond Pl P3) => "retraducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "retraduce" ;
    VP (Imp Sg P3) => "retraduzca" ;
    VP (Imp Pl P1) => "retraduzcamos" ;
    VP (Imp Pl P2) => "retraducid" ;
    VP (Imp Pl P3) => "retraduzcan" ;
    VP (Pass Sg Masc) => "retraducido" ;
    VP (Pass Sg Fem) => "retraducida" ;
    VP (Pass Pl Masc) => "retraducidos" ;
    VP (Pass Pl Fem) => "retraducidas"
    }
  } ;

lin seducir_V = verboV 
 {s = table {
    VI Infn => "seducir" ;
    VI Ger => "seduciendo" ;
    VI Part => "seducido" ;
    VP (Pres Ind Sg P1) => "seduzco" ;
    VP (Pres Ind Sg P2) => "seduces" ;
    VP (Pres Ind Sg P3) => "seduce" ;
    VP (Pres Ind Pl P1) => "seducimos" ;
    VP (Pres Ind Pl P2) => "seducís" ;
    VP (Pres Ind Pl P3) => "seducen" ;
    VP (Pres Subj Sg P1) => "seduzca" ;
    VP (Pres Subj Sg P2) => "seduzcas" ;
    VP (Pres Subj Sg P3) => "seduzca" ;
    VP (Pres Subj Pl P1) => "seduzcamos" ;
    VP (Pres Subj Pl P2) => "seduzcáis" ;
    VP (Pres Subj Pl P3) => "seduzcan" ;
    VP (Impf Ind Sg P1) => "seducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "seducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "seducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "seducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "seducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "seducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sedujera" ; "sedujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sedujeras" ; "sedujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sedujera" ; "sedujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sedujéramos" ; "sedujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sedujerais" ; "sedujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sedujeran" ; "sedujesen"} ;--# notpresent
    VP (Pret Sg P1) => "seduje" ;--# notpresent
    VP (Pret Sg P2) => "sedujiste" ;--# notpresent
    VP (Pret Sg P3) => "sedujo" ;--# notpresent
    VP (Pret Pl P1) => "sedujimos" ;--# notpresent
    VP (Pret Pl P2) => "sedujisteis" ;--# notpresent
    VP (Pret Pl P3) => "sedujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "seduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "seducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "seducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "seduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "seduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "seducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sedujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sedujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sedujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sedujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sedujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sedujeren" ;--# notpresent
    VP (Cond Sg P1) => "seduciría" ;--# notpresent
    VP (Cond Sg P2) => "seducirías" ;--# notpresent
    VP (Cond Sg P3) => "seduciría" ;--# notpresent
    VP (Cond Pl P1) => "seduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "seduciríais" ;--# notpresent
    VP (Cond Pl P3) => "seducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "seduce" ;
    VP (Imp Sg P3) => "seduzca" ;
    VP (Imp Pl P1) => "seduzcamos" ;
    VP (Imp Pl P2) => "seducid" ;
    VP (Imp Pl P3) => "seduzcan" ;
    VP (Pass Sg Masc) => "seducido" ;
    VP (Pass Sg Fem) => "seducida" ;
    VP (Pass Pl Masc) => "seducidos" ;
    VP (Pass Pl Fem) => "seducidas"
    }
  } ;

lin traducir_V = verboV 
 {s = table {
    VI Infn => "traducir" ;
    VI Ger => "traduciendo" ;
    VI Part => "traducido" ;
    VP (Pres Ind Sg P1) => "traduzco" ;
    VP (Pres Ind Sg P2) => "traduces" ;
    VP (Pres Ind Sg P3) => "traduce" ;
    VP (Pres Ind Pl P1) => "traducimos" ;
    VP (Pres Ind Pl P2) => "traducís" ;
    VP (Pres Ind Pl P3) => "traducen" ;
    VP (Pres Subj Sg P1) => "traduzca" ;
    VP (Pres Subj Sg P2) => "traduzcas" ;
    VP (Pres Subj Sg P3) => "traduzca" ;
    VP (Pres Subj Pl P1) => "traduzcamos" ;
    VP (Pres Subj Pl P2) => "traduzcáis" ;
    VP (Pres Subj Pl P3) => "traduzcan" ;
    VP (Impf Ind Sg P1) => "traducía" ;--# notpresent
    VP (Impf Ind Sg P2) => "traducías" ;--# notpresent
    VP (Impf Ind Sg P3) => "traducía" ;--# notpresent
    VP (Impf Ind Pl P1) => "traducíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "traducíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "traducían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"tradujera" ; "tradujese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"tradujeras" ; "tradujeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"tradujera" ; "tradujese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"tradujéramos" ; "tradujésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"tradujerais" ; "tradujeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"tradujeran" ; "tradujesen"} ;--# notpresent
    VP (Pret Sg P1) => "traduje" ;--# notpresent
    VP (Pret Sg P2) => "tradujiste" ;--# notpresent
    VP (Pret Sg P3) => "tradujo" ;--# notpresent
    VP (Pret Pl P1) => "tradujimos" ;--# notpresent
    VP (Pret Pl P2) => "tradujisteis" ;--# notpresent
    VP (Pret Pl P3) => "tradujeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "traduciré" ;--# notpresent
    VP (Fut Ind Sg P2) => "traducirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "traducirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "traduciremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "traduciréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "traducirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "tradujere" ;--# notpresent
    VP (Fut Subj Sg P2) => "tradujeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "tradujere" ;--# notpresent
    VP (Fut Subj Pl P1) => "tradujéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "tradujereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "tradujeren" ;--# notpresent
    VP (Cond Sg P1) => "traduciría" ;--# notpresent
    VP (Cond Sg P2) => "traducirías" ;--# notpresent
    VP (Cond Sg P3) => "traduciría" ;--# notpresent
    VP (Cond Pl P1) => "traduciríamos" ;--# notpresent
    VP (Cond Pl P2) => "traduciríais" ;--# notpresent
    VP (Cond Pl P3) => "traducirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "traduce" ;
    VP (Imp Sg P3) => "traduzca" ;
    VP (Imp Pl P1) => "traduzcamos" ;
    VP (Imp Pl P2) => "traducid" ;
    VP (Imp Pl P3) => "traduzcan" ;
    VP (Pass Sg Masc) => "traducido" ;
    VP (Pass Sg Fem) => "traducida" ;
    VP (Pass Pl Masc) => "traducidos" ;
    VP (Pass Pl Fem) => "traducidas"
    }
  } ;

lin cohibir_V = verboV 
 {s = table {
    VI Infn => "cohibir" ;
    VI Ger => "cohibiendo" ;
    VI Part => "cohibido" ;
    VP (Pres Ind Sg P1) => "cohíbo" ;
    VP (Pres Ind Sg P2) => "cohíbes" ;
    VP (Pres Ind Sg P3) => "cohíbe" ;
    VP (Pres Ind Pl P1) => "cohibimos" ;
    VP (Pres Ind Pl P2) => "cohibís" ;
    VP (Pres Ind Pl P3) => "cohíben" ;
    VP (Pres Subj Sg P1) => "cohíba" ;
    VP (Pres Subj Sg P2) => "cohíbas" ;
    VP (Pres Subj Sg P3) => "cohíba" ;
    VP (Pres Subj Pl P1) => "cohibamos" ;
    VP (Pres Subj Pl P2) => "cohibáis" ;
    VP (Pres Subj Pl P3) => "cohíban" ;
    VP (Impf Ind Sg P1) => "cohibía" ;--# notpresent
    VP (Impf Ind Sg P2) => "cohibías" ;--# notpresent
    VP (Impf Ind Sg P3) => "cohibía" ;--# notpresent
    VP (Impf Ind Pl P1) => "cohibíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "cohibíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "cohibían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"cohibiera" ; "cohibiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"cohibieras" ; "cohibieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"cohibiera" ; "cohibiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"cohibiéramos" ; "cohibiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"cohibierais" ; "cohibieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"cohibieran" ; "cohibiesen"} ;--# notpresent
    VP (Pret Sg P1) => "cohibí" ;--# notpresent
    VP (Pret Sg P2) => "cohibiste" ;--# notpresent
    VP (Pret Sg P3) => "cohibió" ;--# notpresent
    VP (Pret Pl P1) => "cohibimos" ;--# notpresent
    VP (Pret Pl P2) => "cohibisteis" ;--# notpresent
    VP (Pret Pl P3) => "cohibieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "cohibiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "cohibirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "cohibirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "cohibiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "cohibiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "cohibirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "cohibiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "cohibieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "cohibiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "cohibiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "cohibiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "cohibieren" ;--# notpresent
    VP (Cond Sg P1) => "cohibiría" ;--# notpresent
    VP (Cond Sg P2) => "cohibirías" ;--# notpresent
    VP (Cond Sg P3) => "cohibiría" ;--# notpresent
    VP (Cond Pl P1) => "cohibiríamos" ;--# notpresent
    VP (Cond Pl P2) => "cohibiríais" ;--# notpresent
    VP (Cond Pl P3) => "cohibirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "cohíbe" ;
    VP (Imp Sg P3) => "cohíba" ;
    VP (Imp Pl P1) => "cohibamos" ;
    VP (Imp Pl P2) => "cohibid" ;
    VP (Imp Pl P3) => "cohíban" ;
    VP (Pass Sg Masc) => "cohibido" ;
    VP (Pass Sg Fem) => "cohibida" ;
    VP (Pass Pl Masc) => "cohibidos" ;
    VP (Pass Pl Fem) => "cohibidas"
    }
  } ;

lin prohibir_V = verboV 
 {s = table {
    VI Infn => "prohibir" ;
    VI Ger => "prohibiendo" ;
    VI Part => "prohibido" ;
    VP (Pres Ind Sg P1) => "prohíbo" ;
    VP (Pres Ind Sg P2) => "prohíbes" ;
    VP (Pres Ind Sg P3) => "prohíbe" ;
    VP (Pres Ind Pl P1) => "prohibimos" ;
    VP (Pres Ind Pl P2) => "prohibís" ;
    VP (Pres Ind Pl P3) => "prohíben" ;
    VP (Pres Subj Sg P1) => "prohíba" ;
    VP (Pres Subj Sg P2) => "prohíbas" ;
    VP (Pres Subj Sg P3) => "prohíba" ;
    VP (Pres Subj Pl P1) => "prohibamos" ;
    VP (Pres Subj Pl P2) => "prohibáis" ;
    VP (Pres Subj Pl P3) => "prohíban" ;
    VP (Impf Ind Sg P1) => "prohibía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prohibías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prohibía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prohibíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prohibíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prohibían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prohibiera" ; "prohibiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prohibieras" ; "prohibieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prohibiera" ; "prohibiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prohibiéramos" ; "prohibiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prohibierais" ; "prohibieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prohibieran" ; "prohibiesen"} ;--# notpresent
    VP (Pret Sg P1) => "prohibí" ;--# notpresent
    VP (Pret Sg P2) => "prohibiste" ;--# notpresent
    VP (Pret Sg P3) => "prohibió" ;--# notpresent
    VP (Pret Pl P1) => "prohibimos" ;--# notpresent
    VP (Pret Pl P2) => "prohibisteis" ;--# notpresent
    VP (Pret Pl P3) => "prohibieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prohibiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prohibirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prohibirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prohibiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prohibiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prohibirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prohibiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prohibieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prohibiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prohibiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prohibiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prohibieren" ;--# notpresent
    VP (Cond Sg P1) => "prohibiría" ;--# notpresent
    VP (Cond Sg P2) => "prohibirías" ;--# notpresent
    VP (Cond Sg P3) => "prohibiría" ;--# notpresent
    VP (Cond Pl P1) => "prohibiríamos" ;--# notpresent
    VP (Cond Pl P2) => "prohibiríais" ;--# notpresent
    VP (Cond Pl P3) => "prohibirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prohíbe" ;
    VP (Imp Sg P3) => "prohíba" ;
    VP (Imp Pl P1) => "prohibamos" ;
    VP (Imp Pl P2) => "prohibid" ;
    VP (Imp Pl P3) => "prohíban" ;
    VP (Pass Sg Masc) => "prohibido" ;
    VP (Pass Sg Fem) => "prohibida" ;
    VP (Pass Pl Masc) => "prohibidos" ;
    VP (Pass Pl Fem) => "prohibidas"
    }
  } ;

lin reunir_V = verboV 
 {s = table {
    VI Infn => "reunir" ;
    VI Ger => "reuniendo" ;
    VI Part => "reunido" ;
    VP (Pres Ind Sg P1) => "reúno" ;
    VP (Pres Ind Sg P2) => "reúnes" ;
    VP (Pres Ind Sg P3) => "reúne" ;
    VP (Pres Ind Pl P1) => "reunimos" ;
    VP (Pres Ind Pl P2) => "reunís" ;
    VP (Pres Ind Pl P3) => "reúnen" ;
    VP (Pres Subj Sg P1) => "reúna" ;
    VP (Pres Subj Sg P2) => "reúnas" ;
    VP (Pres Subj Sg P3) => "reúna" ;
    VP (Pres Subj Pl P1) => "reunamos" ;
    VP (Pres Subj Pl P2) => "reunáis" ;
    VP (Pres Subj Pl P3) => "reúnan" ;
    VP (Impf Ind Sg P1) => "reunía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reunías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reunía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reuníamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reuníais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reunían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reuniera" ; "reuniese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"reunieras" ; "reunieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reuniera" ; "reuniese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reuniéramos" ; "reuniésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"reunierais" ; "reunieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"reunieran" ; "reuniesen"} ;--# notpresent
    VP (Pret Sg P1) => "reuní" ;--# notpresent
    VP (Pret Sg P2) => "reuniste" ;--# notpresent
    VP (Pret Sg P3) => "reunió" ;--# notpresent
    VP (Pret Pl P1) => "reunimos" ;--# notpresent
    VP (Pret Pl P2) => "reunisteis" ;--# notpresent
    VP (Pret Pl P3) => "reunieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reuniré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reunirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reunirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reuniremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reuniréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reunirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reuniere" ;--# notpresent
    VP (Fut Subj Sg P2) => "reunieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reuniere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reuniéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reuniereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "reunieren" ;--# notpresent
    VP (Cond Sg P1) => "reuniría" ;--# notpresent
    VP (Cond Sg P2) => "reunirías" ;--# notpresent
    VP (Cond Sg P3) => "reuniría" ;--# notpresent
    VP (Cond Pl P1) => "reuniríamos" ;--# notpresent
    VP (Cond Pl P2) => "reuniríais" ;--# notpresent
    VP (Cond Pl P3) => "reunirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reúne" ;
    VP (Imp Sg P3) => "reúna" ;
    VP (Imp Pl P1) => "reunamos" ;
    VP (Imp Pl P2) => "reunid" ;
    VP (Imp Pl P3) => "reúnan" ;
    VP (Pass Sg Masc) => "reunido" ;
    VP (Pass Sg Fem) => "reunida" ;
    VP (Pass Pl Masc) => "reunidos" ;
    VP (Pass Pl Fem) => "reunidas"
    }
  } ;

lin raer_V = verboV 
 {s = table {
    VI Infn => "raer" ;
    VI Ger => "rayendo" ;
    VI Part => "raído" ;
    VP (Pres Ind Sg P1) => variants {"rao" ; "raigo"} ;
    VP (Pres Ind Sg P2) => "raes" ;
    VP (Pres Ind Sg P3) => "rae" ;
    VP (Pres Ind Pl P1) => "raemos" ;
    VP (Pres Ind Pl P2) => "raéis" ;
    VP (Pres Ind Pl P3) => "raen" ;
    VP (Pres Subj Sg P1) => "raiga" ;
    VP (Pres Subj Sg P2) => "raigas" ;
    VP (Pres Subj Sg P3) => "raiga" ;
    VP (Pres Subj Pl P1) => "raigamos" ;
    VP (Pres Subj Pl P2) => "raigáis" ;
    VP (Pres Subj Pl P3) => "raigan" ;
    VP (Impf Ind Sg P1) => "raía" ;--# notpresent
    VP (Impf Ind Sg P2) => "raías" ;--# notpresent
    VP (Impf Ind Sg P3) => "raía" ;--# notpresent
    VP (Impf Ind Pl P1) => "raíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "raíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "raían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"rayera" ; "rayese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rayeras" ; "rayeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"rayera" ; "rayese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"rayéramos" ; "rayésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rayerais" ; "rayeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rayeran" ; "rayesen"} ;--# notpresent
    VP (Pret Sg P1) => "raí" ;--# notpresent
    VP (Pret Sg P2) => "raíste" ;--# notpresent
    VP (Pret Sg P3) => "rayó" ;--# notpresent
    VP (Pret Pl P1) => "raímos" ;--# notpresent
    VP (Pret Pl P2) => "raísteis" ;--# notpresent
    VP (Pret Pl P3) => "rayeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "raeré" ;--# notpresent
    VP (Fut Ind Sg P2) => "raerás" ;--# notpresent
    VP (Fut Ind Sg P3) => "raerá" ;--# notpresent
    VP (Fut Ind Pl P1) => "raeremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "raeréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "raerán" ;--# notpresent
    VP (Fut Subj Sg P1) => "rayere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rayeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "rayere" ;--# notpresent
    VP (Fut Subj Pl P1) => "rayéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "rayereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rayeren" ;--# notpresent
    VP (Cond Sg P1) => "raería" ;--# notpresent
    VP (Cond Sg P2) => "raerías" ;--# notpresent
    VP (Cond Sg P3) => "raería" ;--# notpresent
    VP (Cond Pl P1) => "raeríamos" ;--# notpresent
    VP (Cond Pl P2) => "raeríais" ;--# notpresent
    VP (Cond Pl P3) => "raerían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "rae" ;
    VP (Imp Sg P3) => "raiga" ;
    VP (Imp Pl P1) => "raigamos" ;
    VP (Imp Pl P2) => "raed" ;
    VP (Imp Pl P3) => "raigan" ;
    VP (Pass Sg Masc) => "raído" ;
    VP (Pass Sg Fem) => "raída" ;
    VP (Pass Pl Masc) => "raídos" ;
    VP (Pass Pl Fem) => "raídas"
    }
  } ;

lin desleír_V = verboV 
 {s = table {
    VI Infn => "desleír" ;
    VI Ger => "desliendo" ;
    VI Part => "desleído" ;
    VP (Pres Ind Sg P1) => "deslío" ;
    VP (Pres Ind Sg P2) => "deslíes" ;
    VP (Pres Ind Sg P3) => "deslíe" ;
    VP (Pres Ind Pl P1) => "desleímos" ;
    VP (Pres Ind Pl P2) => "desleís" ;
    VP (Pres Ind Pl P3) => "deslíen" ;
    VP (Pres Subj Sg P1) => "deslía" ;
    VP (Pres Subj Sg P2) => "deslías" ;
    VP (Pres Subj Sg P3) => "deslía" ;
    VP (Pres Subj Pl P1) => "desliamos" ;
    VP (Pres Subj Pl P2) => "desliáis" ;
    VP (Pres Subj Pl P3) => "deslían" ;
    VP (Impf Ind Sg P1) => "desleía" ;--# notpresent
    VP (Impf Ind Sg P2) => "desleías" ;--# notpresent
    VP (Impf Ind Sg P3) => "desleía" ;--# notpresent
    VP (Impf Ind Pl P1) => "desleíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "desleíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "desleían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"desliera" ; "desliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"deslieras" ; "deslieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"desliera" ; "desliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"desliéramos" ; "desliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"deslierais" ; "deslieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"deslieran" ; "desliesen"} ;--# notpresent
    VP (Pret Sg P1) => "desleí" ;--# notpresent
    VP (Pret Sg P2) => "desleíste" ;--# notpresent
    VP (Pret Sg P3) => "deslió" ;--# notpresent
    VP (Pret Pl P1) => "desleímos" ;--# notpresent
    VP (Pret Pl P2) => "desleísteis" ;--# notpresent
    VP (Pret Pl P3) => "deslieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "desleiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "desleirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "desleirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "desleiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "desleiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "desleirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "desliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "deslieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "desliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "desliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "desliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "deslieren" ;--# notpresent
    VP (Cond Sg P1) => "desleiría" ;--# notpresent
    VP (Cond Sg P2) => "desleirías" ;--# notpresent
    VP (Cond Sg P3) => "desleiría" ;--# notpresent
    VP (Cond Pl P1) => "desleiríamos" ;--# notpresent
    VP (Cond Pl P2) => "desleiríais" ;--# notpresent
    VP (Cond Pl P3) => "desleirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "deslíe" ;
    VP (Imp Sg P3) => "deslía" ;
    VP (Imp Pl P1) => "desliamos" ;
    VP (Imp Pl P2) => "desleíd" ;
    VP (Imp Pl P3) => "deslían" ;
    VP (Pass Sg Masc) => "desleído" ;
    VP (Pass Sg Fem) => "desleída" ;
    VP (Pass Pl Masc) => "desleídos" ;
    VP (Pass Pl Fem) => "desleídas"
    }
  } ;

lin engreír_V = verboV 
 {s = table {
    VI Infn => "engreír" ;
    VI Ger => "engriendo" ;
    VI Part => "engreído" ;
    VP (Pres Ind Sg P1) => "engrío" ;
    VP (Pres Ind Sg P2) => "engríes" ;
    VP (Pres Ind Sg P3) => "engríe" ;
    VP (Pres Ind Pl P1) => "engreímos" ;
    VP (Pres Ind Pl P2) => "engreís" ;
    VP (Pres Ind Pl P3) => "engríen" ;
    VP (Pres Subj Sg P1) => "engría" ;
    VP (Pres Subj Sg P2) => "engrías" ;
    VP (Pres Subj Sg P3) => "engría" ;
    VP (Pres Subj Pl P1) => "engriamos" ;
    VP (Pres Subj Pl P2) => "engriáis" ;
    VP (Pres Subj Pl P3) => "engrían" ;
    VP (Impf Ind Sg P1) => "engreía" ;--# notpresent
    VP (Impf Ind Sg P2) => "engreías" ;--# notpresent
    VP (Impf Ind Sg P3) => "engreía" ;--# notpresent
    VP (Impf Ind Pl P1) => "engreíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "engreíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "engreían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"engriera" ; "engriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"engrieras" ; "engrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"engriera" ; "engriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"engriéramos" ; "engriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"engrierais" ; "engrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"engrieran" ; "engriesen"} ;--# notpresent
    VP (Pret Sg P1) => "engreí" ;--# notpresent
    VP (Pret Sg P2) => "engreíste" ;--# notpresent
    VP (Pret Sg P3) => "engrió" ;--# notpresent
    VP (Pret Pl P1) => "engreímos" ;--# notpresent
    VP (Pret Pl P2) => "engreísteis" ;--# notpresent
    VP (Pret Pl P3) => "engrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "engreiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "engreirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "engreirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "engreiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "engreiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "engreirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "engriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "engrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "engriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "engriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "engriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "engrieren" ;--# notpresent
    VP (Cond Sg P1) => "engreiría" ;--# notpresent
    VP (Cond Sg P2) => "engreirías" ;--# notpresent
    VP (Cond Sg P3) => "engreiría" ;--# notpresent
    VP (Cond Pl P1) => "engreiríamos" ;--# notpresent
    VP (Cond Pl P2) => "engreiríais" ;--# notpresent
    VP (Cond Pl P3) => "engreirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "engríe" ;
    VP (Imp Sg P3) => "engría" ;
    VP (Imp Pl P1) => "engriamos" ;
    VP (Imp Pl P2) => "engreíd" ;
    VP (Imp Pl P3) => "engrían" ;
    VP (Pass Sg Masc) => "engreído" ;
    VP (Pass Sg Fem) => "engreída" ;
    VP (Pass Pl Masc) => "engreídos" ;
    VP (Pass Pl Fem) => "engreídas"
    }
  } ;

lin freír_V = verboV 
 {s = table {
    VI Infn => "freír" ;
    VI Ger => "friendo" ;
    VI Part => variants {"freído" ; "frito"} ;
    VP (Pres Ind Sg P1) => "frío" ;
    VP (Pres Ind Sg P2) => "fríes" ;
    VP (Pres Ind Sg P3) => "fríe" ;
    VP (Pres Ind Pl P1) => "freímos" ;
    VP (Pres Ind Pl P2) => "freís" ;
    VP (Pres Ind Pl P3) => "fríen" ;
    VP (Pres Subj Sg P1) => "fría" ;
    VP (Pres Subj Sg P2) => "frías" ;
    VP (Pres Subj Sg P3) => "fría" ;
    VP (Pres Subj Pl P1) => "friamos" ;
    VP (Pres Subj Pl P2) => "friáis" ;
    VP (Pres Subj Pl P3) => "frían" ;
    VP (Impf Ind Sg P1) => "freía" ;--# notpresent
    VP (Impf Ind Sg P2) => "freías" ;--# notpresent
    VP (Impf Ind Sg P3) => "freía" ;--# notpresent
    VP (Impf Ind Pl P1) => "freíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "freíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "freían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"friera" ; "friese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"frieras" ; "frieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"friera" ; "friese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"friéramos" ; "friésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"frierais" ; "frieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"frieran" ; "friesen"} ;--# notpresent
    VP (Pret Sg P1) => "freí" ;--# notpresent
    VP (Pret Sg P2) => "freíste" ;--# notpresent
    VP (Pret Sg P3) => "frió" ;--# notpresent
    VP (Pret Pl P1) => "freímos" ;--# notpresent
    VP (Pret Pl P2) => "freísteis" ;--# notpresent
    VP (Pret Pl P3) => "frieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "freiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "freirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "freirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "freiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "freiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "freirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "friere" ;--# notpresent
    VP (Fut Subj Sg P2) => "frieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "friere" ;--# notpresent
    VP (Fut Subj Pl P1) => "friéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "friereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "frieren" ;--# notpresent
    VP (Cond Sg P1) => "freiría" ;--# notpresent
    VP (Cond Sg P2) => "freirías" ;--# notpresent
    VP (Cond Sg P3) => "freiría" ;--# notpresent
    VP (Cond Pl P1) => "freiríamos" ;--# notpresent
    VP (Cond Pl P2) => "freiríais" ;--# notpresent
    VP (Cond Pl P3) => "freirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "fríe" ;
    VP (Imp Sg P3) => "fría" ;
    VP (Imp Pl P1) => "friamos" ;
    VP (Imp Pl P2) => "freíd" ;
    VP (Imp Pl P3) => "frían" ;
    VP (Pass Sg Masc) => variants {"freído" ; "frito"} ;
    VP (Pass Sg Fem) => variants {"freída" ; "frita"} ;
    VP (Pass Pl Masc) => variants {"freídos" ; "fritos"} ;
    VP (Pass Pl Fem) => variants {"freídas" ; "fritas"}
    }
  } ;

lin refreír_V = verboV 
 {s = table {
    VI Infn => "refreír" ;
    VI Ger => "refriendo" ;
    VI Part => "refreído" ;
    VP (Pres Ind Sg P1) => "refrío" ;
    VP (Pres Ind Sg P2) => "refríes" ;
    VP (Pres Ind Sg P3) => "refríe" ;
    VP (Pres Ind Pl P1) => "refreímos" ;
    VP (Pres Ind Pl P2) => "refreís" ;
    VP (Pres Ind Pl P3) => "refríen" ;
    VP (Pres Subj Sg P1) => "refría" ;
    VP (Pres Subj Sg P2) => "refrías" ;
    VP (Pres Subj Sg P3) => "refría" ;
    VP (Pres Subj Pl P1) => "refriamos" ;
    VP (Pres Subj Pl P2) => "refriáis" ;
    VP (Pres Subj Pl P3) => "refrían" ;
    VP (Impf Ind Sg P1) => "refreía" ;--# notpresent
    VP (Impf Ind Sg P2) => "refreías" ;--# notpresent
    VP (Impf Ind Sg P3) => "refreía" ;--# notpresent
    VP (Impf Ind Pl P1) => "refreíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "refreíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "refreían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"refriera" ; "refriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"refrieras" ; "refrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"refriera" ; "refriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"refriéramos" ; "refriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"refrierais" ; "refrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"refrieran" ; "refriesen"} ;--# notpresent
    VP (Pret Sg P1) => "refreí" ;--# notpresent
    VP (Pret Sg P2) => "refreíste" ;--# notpresent
    VP (Pret Sg P3) => "refrió" ;--# notpresent
    VP (Pret Pl P1) => "refreímos" ;--# notpresent
    VP (Pret Pl P2) => "refreísteis" ;--# notpresent
    VP (Pret Pl P3) => "refrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "refreiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "refreirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "refreirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "refreiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "refreiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "refreirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "refriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "refrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "refriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "refriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "refriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "refrieren" ;--# notpresent
    VP (Cond Sg P1) => "refreiría" ;--# notpresent
    VP (Cond Sg P2) => "refreirías" ;--# notpresent
    VP (Cond Sg P3) => "refreiría" ;--# notpresent
    VP (Cond Pl P1) => "refreiríamos" ;--# notpresent
    VP (Cond Pl P2) => "refreiríais" ;--# notpresent
    VP (Cond Pl P3) => "refreirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "refríe" ;
    VP (Imp Sg P3) => "refría" ;
    VP (Imp Pl P1) => "refriamos" ;
    VP (Imp Pl P2) => "refreíd" ;
    VP (Imp Pl P3) => "refrían" ;
    VP (Pass Sg Masc) => "refreído" ;
    VP (Pass Sg Fem) => "refreída" ;
    VP (Pass Pl Masc) => "refreídos" ;
    VP (Pass Pl Fem) => "refreídas"
    }
  } ;

lin reír_V = verboV 
 {s = table {
    VI Infn => "reír" ;
    VI Ger => "riendo" ;
    VI Part => "reído" ;
    VP (Pres Ind Sg P1) => "río" ;
    VP (Pres Ind Sg P2) => "ríes" ;
    VP (Pres Ind Sg P3) => "ríe" ;
    VP (Pres Ind Pl P1) => "reímos" ;
    VP (Pres Ind Pl P2) => "reís" ;
    VP (Pres Ind Pl P3) => "ríen" ;
    VP (Pres Subj Sg P1) => "ría" ;
    VP (Pres Subj Sg P2) => "rías" ;
    VP (Pres Subj Sg P3) => "ría" ;
    VP (Pres Subj Pl P1) => "riamos" ;
    VP (Pres Subj Pl P2) => "riáis" ;
    VP (Pres Subj Pl P3) => "rían" ;
    VP (Impf Ind Sg P1) => "reía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"riera" ; "riese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"rieras" ; "rieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"riera" ; "riese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"riéramos" ; "riésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"rierais" ; "rieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"rieran" ; "riesen"} ;--# notpresent
    VP (Pret Sg P1) => "reí" ;--# notpresent
    VP (Pret Sg P2) => "reíste" ;--# notpresent
    VP (Pret Sg P3) => "rió" ;--# notpresent
    VP (Pret Pl P1) => "reímos" ;--# notpresent
    VP (Pret Pl P2) => "reísteis" ;--# notpresent
    VP (Pret Pl P3) => "rieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "riere" ;--# notpresent
    VP (Fut Subj Sg P2) => "rieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "riere" ;--# notpresent
    VP (Fut Subj Pl P1) => "riéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "riereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "rieren" ;--# notpresent
    VP (Cond Sg P1) => "reiría" ;--# notpresent
    VP (Cond Sg P2) => "reirías" ;--# notpresent
    VP (Cond Sg P3) => "reiría" ;--# notpresent
    VP (Cond Pl P1) => "reiríamos" ;--# notpresent
    VP (Cond Pl P2) => "reiríais" ;--# notpresent
    VP (Cond Pl P3) => "reirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ríe" ;
    VP (Imp Sg P3) => "ría" ;
    VP (Imp Pl P1) => "riamos" ;
    VP (Imp Pl P2) => "reíd" ;
    VP (Imp Pl P3) => "rían" ;
    VP (Pass Sg Masc) => "reído" ;
    VP (Pass Sg Fem) => "reída" ;
    VP (Pass Pl Masc) => "reídos" ;
    VP (Pass Pl Fem) => "reídas"
    }
  } ;

lin sofreír_V = verboV 
 {s = table {
    VI Infn => "sofreír" ;
    VI Ger => "sofriendo" ;
    VI Part => "sofreído" ;
    VP (Pres Ind Sg P1) => "sofrío" ;
    VP (Pres Ind Sg P2) => "sofríes" ;
    VP (Pres Ind Sg P3) => "sofríe" ;
    VP (Pres Ind Pl P1) => "sofreímos" ;
    VP (Pres Ind Pl P2) => "sofreís" ;
    VP (Pres Ind Pl P3) => "sofríen" ;
    VP (Pres Subj Sg P1) => "sofría" ;
    VP (Pres Subj Sg P2) => "sofrías" ;
    VP (Pres Subj Sg P3) => "sofría" ;
    VP (Pres Subj Pl P1) => "sofriamos" ;
    VP (Pres Subj Pl P2) => "sofriáis" ;
    VP (Pres Subj Pl P3) => "sofrían" ;
    VP (Impf Ind Sg P1) => "sofreía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sofreías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sofreía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sofreíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sofreíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sofreían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sofriera" ; "sofriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sofrieras" ; "sofrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sofriera" ; "sofriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sofriéramos" ; "sofriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sofrierais" ; "sofrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sofrieran" ; "sofriesen"} ;--# notpresent
    VP (Pret Sg P1) => "sofreí" ;--# notpresent
    VP (Pret Sg P2) => "sofreíste" ;--# notpresent
    VP (Pret Sg P3) => "sofrió" ;--# notpresent
    VP (Pret Pl P1) => "sofreímos" ;--# notpresent
    VP (Pret Pl P2) => "sofreísteis" ;--# notpresent
    VP (Pret Pl P3) => "sofrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sofreiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sofreirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sofreirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sofreiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sofreiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sofreirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sofriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sofrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sofriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sofriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sofriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sofrieren" ;--# notpresent
    VP (Cond Sg P1) => "sofreiría" ;--# notpresent
    VP (Cond Sg P2) => "sofreirías" ;--# notpresent
    VP (Cond Sg P3) => "sofreiría" ;--# notpresent
    VP (Cond Pl P1) => "sofreiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sofreiríais" ;--# notpresent
    VP (Cond Pl P3) => "sofreirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sofríe" ;
    VP (Imp Sg P3) => "sofría" ;
    VP (Imp Pl P1) => "sofriamos" ;
    VP (Imp Pl P2) => "sofreíd" ;
    VP (Imp Pl P3) => "sofrían" ;
    VP (Pass Sg Masc) => "sofreído" ;
    VP (Pass Sg Fem) => "sofreída" ;
    VP (Pass Pl Masc) => "sofreídos" ;
    VP (Pass Pl Fem) => "sofreídas"
    }
  } ;

lin sonreír_V = verboV 
 {s = table {
    VI Infn => "sonreír" ;
    VI Ger => "sonriendo" ;
    VI Part => "sonreído" ;
    VP (Pres Ind Sg P1) => "sonrío" ;
    VP (Pres Ind Sg P2) => "sonríes" ;
    VP (Pres Ind Sg P3) => "sonríe" ;
    VP (Pres Ind Pl P1) => "sonreímos" ;
    VP (Pres Ind Pl P2) => "sonreís" ;
    VP (Pres Ind Pl P3) => "sonríen" ;
    VP (Pres Subj Sg P1) => "sonría" ;
    VP (Pres Subj Sg P2) => "sonrías" ;
    VP (Pres Subj Sg P3) => "sonría" ;
    VP (Pres Subj Pl P1) => "sonriamos" ;
    VP (Pres Subj Pl P2) => "sonriáis" ;
    VP (Pres Subj Pl P3) => "sonrían" ;
    VP (Impf Ind Sg P1) => "sonreía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sonreías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sonreía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sonreíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sonreíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sonreían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sonriera" ; "sonriese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sonrieras" ; "sonrieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sonriera" ; "sonriese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sonriéramos" ; "sonriésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sonrierais" ; "sonrieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sonrieran" ; "sonriesen"} ;--# notpresent
    VP (Pret Sg P1) => "sonreí" ;--# notpresent
    VP (Pret Sg P2) => "sonreíste" ;--# notpresent
    VP (Pret Sg P3) => "sonrió" ;--# notpresent
    VP (Pret Pl P1) => "sonreímos" ;--# notpresent
    VP (Pret Pl P2) => "sonreísteis" ;--# notpresent
    VP (Pret Pl P3) => "sonrieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sonreiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sonreirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sonreirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sonreiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sonreiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sonreirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sonriere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sonrieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sonriere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sonriéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sonriereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sonrieren" ;--# notpresent
    VP (Cond Sg P1) => "sonreiría" ;--# notpresent
    VP (Cond Sg P2) => "sonreirías" ;--# notpresent
    VP (Cond Sg P3) => "sonreiría" ;--# notpresent
    VP (Cond Pl P1) => "sonreiríamos" ;--# notpresent
    VP (Cond Pl P2) => "sonreiríais" ;--# notpresent
    VP (Cond Pl P3) => "sonreirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sonríe" ;
    VP (Imp Sg P3) => "sonría" ;
    VP (Imp Pl P1) => "sonriamos" ;
    VP (Imp Pl P2) => "sonreíd" ;
    VP (Imp Pl P3) => "sonrían" ;
    VP (Pass Sg Masc) => "sonreído" ;
    VP (Pass Sg Fem) => "sonreída" ;
    VP (Pass Pl Masc) => "sonreídos" ;
    VP (Pass Pl Fem) => "sonreídas"
    }
  } ;

lin resalir_V = verboV 
 {s = table {
    VI Infn => "resalir" ;
    VI Ger => "resaliendo" ;
    VI Part => "resalido" ;
    VP (Pres Ind Sg P1) => "resalgo" ;
    VP (Pres Ind Sg P2) => "resales" ;
    VP (Pres Ind Sg P3) => "resale" ;
    VP (Pres Ind Pl P1) => "resalimos" ;
    VP (Pres Ind Pl P2) => "resalís" ;
    VP (Pres Ind Pl P3) => "resalen" ;
    VP (Pres Subj Sg P1) => "resalga" ;
    VP (Pres Subj Sg P2) => "resalgas" ;
    VP (Pres Subj Sg P3) => "resalga" ;
    VP (Pres Subj Pl P1) => "resalgamos" ;
    VP (Pres Subj Pl P2) => "resalgáis" ;
    VP (Pres Subj Pl P3) => "resalgan" ;
    VP (Impf Ind Sg P1) => "resalía" ;--# notpresent
    VP (Impf Ind Sg P2) => "resalías" ;--# notpresent
    VP (Impf Ind Sg P3) => "resalía" ;--# notpresent
    VP (Impf Ind Pl P1) => "resalíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "resalíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "resalían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"resaliera" ; "resaliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"resalieras" ; "resalieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"resaliera" ; "resaliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"resaliéramos" ; "resaliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"resalierais" ; "resalieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"resalieran" ; "resaliesen"} ;--# notpresent
    VP (Pret Sg P1) => "resalí" ;--# notpresent
    VP (Pret Sg P2) => "resaliste" ;--# notpresent
    VP (Pret Sg P3) => "resalió" ;--# notpresent
    VP (Pret Pl P1) => "resalimos" ;--# notpresent
    VP (Pret Pl P2) => "resalisteis" ;--# notpresent
    VP (Pret Pl P3) => "resalieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "resaldré" ;--# notpresent
    VP (Fut Ind Sg P2) => "resaldrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "resaldrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "resaldremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "resaldréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "resaldrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "resaliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "resalieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "resaliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "resaliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "resaliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "resalieren" ;--# notpresent
    VP (Cond Sg P1) => "resaldría" ;--# notpresent
    VP (Cond Sg P2) => "resaldrías" ;--# notpresent
    VP (Cond Sg P3) => "resaldría" ;--# notpresent
    VP (Cond Pl P1) => "resaldríamos" ;--# notpresent
    VP (Cond Pl P2) => "resaldríais" ;--# notpresent
    VP (Cond Pl P3) => "resaldrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "resal" ;
    VP (Imp Sg P3) => "resalga" ;
    VP (Imp Pl P1) => "resalgamos" ;
    VP (Imp Pl P2) => "resalid" ;
    VP (Imp Pl P3) => "resalgan" ;
    VP (Pass Sg Masc) => "resalido" ;
    VP (Pass Sg Fem) => "resalida" ;
    VP (Pass Pl Masc) => "resalidos" ;
    VP (Pass Pl Fem) => "resalidas"
    }
  } ;

lin salir_V = verboV 
 {s = table {
    VI Infn => "salir" ;
    VI Ger => "saliendo" ;
    VI Part => "salido" ;
    VP (Pres Ind Sg P1) => "salgo" ;
    VP (Pres Ind Sg P2) => "sales" ;
    VP (Pres Ind Sg P3) => "sale" ;
    VP (Pres Ind Pl P1) => "salimos" ;
    VP (Pres Ind Pl P2) => "salís" ;
    VP (Pres Ind Pl P3) => "salen" ;
    VP (Pres Subj Sg P1) => "salga" ;
    VP (Pres Subj Sg P2) => "salgas" ;
    VP (Pres Subj Sg P3) => "salga" ;
    VP (Pres Subj Pl P1) => "salgamos" ;
    VP (Pres Subj Pl P2) => "salgáis" ;
    VP (Pres Subj Pl P3) => "salgan" ;
    VP (Impf Ind Sg P1) => "salía" ;--# notpresent
    VP (Impf Ind Sg P2) => "salías" ;--# notpresent
    VP (Impf Ind Sg P3) => "salía" ;--# notpresent
    VP (Impf Ind Pl P1) => "salíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "salíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "salían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"saliera" ; "saliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"salieras" ; "salieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"saliera" ; "saliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"saliéramos" ; "saliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"salierais" ; "salieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"salieran" ; "saliesen"} ;--# notpresent
    VP (Pret Sg P1) => "salí" ;--# notpresent
    VP (Pret Sg P2) => "saliste" ;--# notpresent
    VP (Pret Sg P3) => "salió" ;--# notpresent
    VP (Pret Pl P1) => "salimos" ;--# notpresent
    VP (Pret Pl P2) => "salisteis" ;--# notpresent
    VP (Pret Pl P3) => "salieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "saldré" ;--# notpresent
    VP (Fut Ind Sg P2) => "saldrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "saldrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "saldremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "saldréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "saldrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "saliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "salieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "saliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "saliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "saliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "salieren" ;--# notpresent
    VP (Cond Sg P1) => "saldría" ;--# notpresent
    VP (Cond Sg P2) => "saldrías" ;--# notpresent
    VP (Cond Sg P3) => "saldría" ;--# notpresent
    VP (Cond Pl P1) => "saldríamos" ;--# notpresent
    VP (Cond Pl P2) => "saldríais" ;--# notpresent
    VP (Cond Pl P3) => "saldrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sal" ;
    VP (Imp Sg P3) => "salga" ;
    VP (Imp Pl P1) => "salgamos" ;
    VP (Imp Pl P2) => "salid" ;
    VP (Imp Pl P3) => "salgan" ;
    VP (Pass Sg Masc) => "salido" ;
    VP (Pass Sg Fem) => "salida" ;
    VP (Pass Pl Masc) => "salidos" ;
    VP (Pass Pl Fem) => "salidas"
    }
  } ;

lin sobresalir_V = verboV 
 {s = table {
    VI Infn => "sobresalir" ;
    VI Ger => "sobresaliendo" ;
    VI Part => "sobresalido" ;
    VP (Pres Ind Sg P1) => "sobresalgo" ;
    VP (Pres Ind Sg P2) => "sobresales" ;
    VP (Pres Ind Sg P3) => "sobresale" ;
    VP (Pres Ind Pl P1) => "sobresalimos" ;
    VP (Pres Ind Pl P2) => "sobresalís" ;
    VP (Pres Ind Pl P3) => "sobresalen" ;
    VP (Pres Subj Sg P1) => "sobresalga" ;
    VP (Pres Subj Sg P2) => "sobresalgas" ;
    VP (Pres Subj Sg P3) => "sobresalga" ;
    VP (Pres Subj Pl P1) => "sobresalgamos" ;
    VP (Pres Subj Pl P2) => "sobresalgáis" ;
    VP (Pres Subj Pl P3) => "sobresalgan" ;
    VP (Impf Ind Sg P1) => "sobresalía" ;--# notpresent
    VP (Impf Ind Sg P2) => "sobresalías" ;--# notpresent
    VP (Impf Ind Sg P3) => "sobresalía" ;--# notpresent
    VP (Impf Ind Pl P1) => "sobresalíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "sobresalíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "sobresalían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"sobresaliera" ; "sobresaliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"sobresalieras" ; "sobresalieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"sobresaliera" ; "sobresaliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"sobresaliéramos" ; "sobresaliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"sobresalierais" ; "sobresalieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"sobresalieran" ; "sobresaliesen"} ;--# notpresent
    VP (Pret Sg P1) => "sobresalí" ;--# notpresent
    VP (Pret Sg P2) => "sobresaliste" ;--# notpresent
    VP (Pret Sg P3) => "sobresalió" ;--# notpresent
    VP (Pret Pl P1) => "sobresalimos" ;--# notpresent
    VP (Pret Pl P2) => "sobresalisteis" ;--# notpresent
    VP (Pret Pl P3) => "sobresalieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "sobresaldré" ;--# notpresent
    VP (Fut Ind Sg P2) => "sobresaldrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "sobresaldrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "sobresaldremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "sobresaldréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "sobresaldrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "sobresaliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "sobresalieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "sobresaliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "sobresaliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "sobresaliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "sobresalieren" ;--# notpresent
    VP (Cond Sg P1) => "sobresaldría" ;--# notpresent
    VP (Cond Sg P2) => "sobresaldrías" ;--# notpresent
    VP (Cond Sg P3) => "sobresaldría" ;--# notpresent
    VP (Cond Pl P1) => "sobresaldríamos" ;--# notpresent
    VP (Cond Pl P2) => "sobresaldríais" ;--# notpresent
    VP (Cond Pl P3) => "sobresaldrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "sobresal" ;
    VP (Imp Sg P3) => "sobresalga" ;
    VP (Imp Pl P1) => "sobresalgamos" ;
    VP (Imp Pl P2) => "sobresalid" ;
    VP (Imp Pl P3) => "sobresalgan" ;
    VP (Pass Sg Masc) => "sobresalido" ;
    VP (Pass Sg Fem) => "sobresalida" ;
    VP (Pass Pl Masc) => "sobresalidos" ;
    VP (Pass Pl Fem) => "sobresalidas"
    }
  } ;

lin equivaler_V = verboV 
 {s = table {
    VI Infn => "equivaler" ;
    VI Ger => "equivaliendo" ;
    VI Part => "equivalido" ;
    VP (Pres Ind Sg P1) => "equivalgo" ;
    VP (Pres Ind Sg P2) => "equivales" ;
    VP (Pres Ind Sg P3) => "equivale" ;
    VP (Pres Ind Pl P1) => "equivalemos" ;
    VP (Pres Ind Pl P2) => "equivaléis" ;
    VP (Pres Ind Pl P3) => "equivalen" ;
    VP (Pres Subj Sg P1) => "equivalga" ;
    VP (Pres Subj Sg P2) => "equivalgas" ;
    VP (Pres Subj Sg P3) => "equivalga" ;
    VP (Pres Subj Pl P1) => "equivalgamos" ;
    VP (Pres Subj Pl P2) => "equivalgáis" ;
    VP (Pres Subj Pl P3) => "equivalgan" ;
    VP (Impf Ind Sg P1) => "equivalía" ;--# notpresent
    VP (Impf Ind Sg P2) => "equivalías" ;--# notpresent
    VP (Impf Ind Sg P3) => "equivalía" ;--# notpresent
    VP (Impf Ind Pl P1) => "equivalíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "equivalíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "equivalían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"equivaliera" ; "equivaliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"equivalieras" ; "equivalieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"equivaliera" ; "equivaliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"equivaliéramos" ; "equivaliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"equivalierais" ; "equivalieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"equivalieran" ; "equivaliesen"} ;--# notpresent
    VP (Pret Sg P1) => "equivalí" ;--# notpresent
    VP (Pret Sg P2) => "equivaliste" ;--# notpresent
    VP (Pret Sg P3) => "equivalió" ;--# notpresent
    VP (Pret Pl P1) => "equivalimos" ;--# notpresent
    VP (Pret Pl P2) => "equivalisteis" ;--# notpresent
    VP (Pret Pl P3) => "equivalieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "equivaldré" ;--# notpresent
    VP (Fut Ind Sg P2) => "equivaldrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "equivaldrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "equivaldremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "equivaldréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "equivaldrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "equivaliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "equivalieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "equivaliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "equivaliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "equivaliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "equivalieren" ;--# notpresent
    VP (Cond Sg P1) => "equivaldría" ;--# notpresent
    VP (Cond Sg P2) => "equivaldrías" ;--# notpresent
    VP (Cond Sg P3) => "equivaldría" ;--# notpresent
    VP (Cond Pl P1) => "equivaldríamos" ;--# notpresent
    VP (Cond Pl P2) => "equivaldríais" ;--# notpresent
    VP (Cond Pl P3) => "equivaldrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "equivale" ;
    VP (Imp Sg P3) => "equivalga" ;
    VP (Imp Pl P1) => "equivalgamos" ;
    VP (Imp Pl P2) => "equivaled" ;
    VP (Imp Pl P3) => "equivalgan" ;
    VP (Pass Sg Masc) => "equivalido" ;
    VP (Pass Sg Fem) => "equivalida" ;
    VP (Pass Pl Masc) => "equivalidos" ;
    VP (Pass Pl Fem) => "equivalidas"
    }
  } ;

lin prevaler_V = verboV 
 {s = table {
    VI Infn => "prevaler" ;
    VI Ger => "prevaliendo" ;
    VI Part => "prevalido" ;
    VP (Pres Ind Sg P1) => "prevalgo" ;
    VP (Pres Ind Sg P2) => "prevales" ;
    VP (Pres Ind Sg P3) => "prevale" ;
    VP (Pres Ind Pl P1) => "prevalemos" ;
    VP (Pres Ind Pl P2) => "prevaléis" ;
    VP (Pres Ind Pl P3) => "prevalen" ;
    VP (Pres Subj Sg P1) => "prevalga" ;
    VP (Pres Subj Sg P2) => "prevalgas" ;
    VP (Pres Subj Sg P3) => "prevalga" ;
    VP (Pres Subj Pl P1) => "prevalgamos" ;
    VP (Pres Subj Pl P2) => "prevalgáis" ;
    VP (Pres Subj Pl P3) => "prevalgan" ;
    VP (Impf Ind Sg P1) => "prevalía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prevalías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prevalía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prevalíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prevalíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prevalían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prevaliera" ; "prevaliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prevalieras" ; "prevalieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prevaliera" ; "prevaliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prevaliéramos" ; "prevaliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prevalierais" ; "prevalieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prevalieran" ; "prevaliesen"} ;--# notpresent
    VP (Pret Sg P1) => "prevalí" ;--# notpresent
    VP (Pret Sg P2) => "prevaliste" ;--# notpresent
    VP (Pret Sg P3) => "prevalió" ;--# notpresent
    VP (Pret Pl P1) => "prevalimos" ;--# notpresent
    VP (Pret Pl P2) => "prevalisteis" ;--# notpresent
    VP (Pret Pl P3) => "prevalieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prevaldré" ;--# notpresent
    VP (Fut Ind Sg P2) => "prevaldrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prevaldrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prevaldremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prevaldréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prevaldrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prevaliere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prevalieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prevaliere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prevaliéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prevaliereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prevalieren" ;--# notpresent
    VP (Cond Sg P1) => "prevaldría" ;--# notpresent
    VP (Cond Sg P2) => "prevaldrías" ;--# notpresent
    VP (Cond Sg P3) => "prevaldría" ;--# notpresent
    VP (Cond Pl P1) => "prevaldríamos" ;--# notpresent
    VP (Cond Pl P2) => "prevaldríais" ;--# notpresent
    VP (Cond Pl P3) => "prevaldrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prevale" ;
    VP (Imp Sg P3) => "prevalga" ;
    VP (Imp Pl P1) => "prevalgamos" ;
    VP (Imp Pl P2) => "prevaled" ;
    VP (Imp Pl P3) => "prevalgan" ;
    VP (Pass Sg Masc) => "prevalido" ;
    VP (Pass Sg Fem) => "prevalida" ;
    VP (Pass Pl Masc) => "prevalidos" ;
    VP (Pass Pl Fem) => "prevalidas"
    }
  } ;

lin valer_V = verboV 
 {s = table {
    VI Infn => "valer" ;
    VI Ger => "valiendo" ;
    VI Part => "valido" ;
    VP (Pres Ind Sg P1) => "valgo" ;
    VP (Pres Ind Sg P2) => "vales" ;
    VP (Pres Ind Sg P3) => "vale" ;
    VP (Pres Ind Pl P1) => "valemos" ;
    VP (Pres Ind Pl P2) => "valéis" ;
    VP (Pres Ind Pl P3) => "valen" ;
    VP (Pres Subj Sg P1) => "valga" ;
    VP (Pres Subj Sg P2) => "valgas" ;
    VP (Pres Subj Sg P3) => "valga" ;
    VP (Pres Subj Pl P1) => "valgamos" ;
    VP (Pres Subj Pl P2) => "valgáis" ;
    VP (Pres Subj Pl P3) => "valgan" ;
    VP (Impf Ind Sg P1) => "valía" ;--# notpresent
    VP (Impf Ind Sg P2) => "valías" ;--# notpresent
    VP (Impf Ind Sg P3) => "valía" ;--# notpresent
    VP (Impf Ind Pl P1) => "valíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "valíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "valían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"valiera" ; "valiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"valieras" ; "valieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"valiera" ; "valiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"valiéramos" ; "valiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"valierais" ; "valieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"valieran" ; "valiesen"} ;--# notpresent
    VP (Pret Sg P1) => "valí" ;--# notpresent
    VP (Pret Sg P2) => "valiste" ;--# notpresent
    VP (Pret Sg P3) => "valió" ;--# notpresent
    VP (Pret Pl P1) => "valimos" ;--# notpresent
    VP (Pret Pl P2) => "valisteis" ;--# notpresent
    VP (Pret Pl P3) => "valieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "valdré" ;--# notpresent
    VP (Fut Ind Sg P2) => "valdrás" ;--# notpresent
    VP (Fut Ind Sg P3) => "valdrá" ;--# notpresent
    VP (Fut Ind Pl P1) => "valdremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "valdréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "valdrán" ;--# notpresent
    VP (Fut Subj Sg P1) => "valiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "valieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "valiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "valiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "valiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "valieren" ;--# notpresent
    VP (Cond Sg P1) => "valdría" ;--# notpresent
    VP (Cond Sg P2) => "valdrías" ;--# notpresent
    VP (Cond Sg P3) => "valdría" ;--# notpresent
    VP (Cond Pl P1) => "valdríamos" ;--# notpresent
    VP (Cond Pl P2) => "valdríais" ;--# notpresent
    VP (Cond Pl P3) => "valdrían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "vale" ;
    VP (Imp Sg P3) => "valga" ;
    VP (Imp Pl P1) => "valgamos" ;
    VP (Imp Pl P2) => "valed" ;
    VP (Imp Pl P3) => "valgan" ;
    VP (Pass Sg Masc) => "valido" ;
    VP (Pass Sg Fem) => "valida" ;
    VP (Pass Pl Masc) => "validos" ;
    VP (Pass Pl Fem) => "validas"
    }
  } ;

lin soler_V = verboV 
 {s = table {
    VI Infn => "soler" ;
    VI Ger => variants {} ;
    VI Part => variants {} ;
    VP (Pres Ind Sg P1) => "suelo" ;
    VP (Pres Ind Sg P2) => "sueles" ;
    VP (Pres Ind Sg P3) => "suele" ;
    VP (Pres Ind Pl P1) => "solemos" ;
    VP (Pres Ind Pl P2) => "soléis" ;
    VP (Pres Ind Pl P3) => "suelen" ;
    VP (Pres Subj Sg P1) => "suela" ;
    VP (Pres Subj Sg P2) => "suelas" ;
    VP (Pres Subj Sg P3) => "suela" ;
    VP (Pres Subj Pl P1) => "solamos" ;
    VP (Pres Subj Pl P2) => "soláis" ;
    VP (Pres Subj Pl P3) => "suelan" ;
    VP (Impf Ind Sg P1) => "solía" ;--# notpresent
    VP (Impf Ind Sg P2) => "solías" ;--# notpresent
    VP (Impf Ind Sg P3) => "solía" ;--# notpresent
    VP (Impf Ind Pl P1) => "solíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "solíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "solían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"soliera" ; "soliese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"solieras" ; "solieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"soliera" ; "soliese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"soliéramos" ; "soliésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"solierais" ; "solieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"solieran" ; "soliesen"} ;--# notpresent
    VP (Pret Sg P1) => "solí" ;--# notpresent
    VP (Pret Sg P2) => "soliste" ;--# notpresent
    VP (Pret Sg P3) => "solió" ;--# notpresent
    VP (Pret Pl P1) => "solimos" ;--# notpresent
    VP (Pret Pl P2) => "solisteis" ;--# notpresent
    VP (Pret Pl P3) => "solieron" ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => variants {} ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => variants {} ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => variants {} ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;

lin antever_V = verboV 
 {s = table {
    VI Infn => "antever" ;
    VI Ger => "anteviendo" ;
    VI Part => "antevisto" ;
    VP (Pres Ind Sg P1) => "anteveo" ;
    VP (Pres Ind Sg P2) => "anteves" ;
    VP (Pres Ind Sg P3) => "anteve" ;
    VP (Pres Ind Pl P1) => "antevemos" ;
    VP (Pres Ind Pl P2) => "anteveis" ;
    VP (Pres Ind Pl P3) => "anteven" ;
    VP (Pres Subj Sg P1) => "antevea" ;
    VP (Pres Subj Sg P2) => "anteveas" ;
    VP (Pres Subj Sg P3) => "antevea" ;
    VP (Pres Subj Pl P1) => "anteveamos" ;
    VP (Pres Subj Pl P2) => "anteveáis" ;
    VP (Pres Subj Pl P3) => "antevean" ;
    VP (Impf Ind Sg P1) => "anteveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "anteveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "anteveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "anteveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "anteveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "anteveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"anteviera" ; "anteviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"antevieras" ; "antevieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"anteviera" ; "anteviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"anteviéramos" ; "anteviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"antevierais" ; "antevieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"antevieran" ; "anteviesen"} ;--# notpresent
    VP (Pret Sg P1) => "antevi" ;--# notpresent
    VP (Pret Sg P2) => "anteviste" ;--# notpresent
    VP (Pret Sg P3) => "antevio" ;--# notpresent
    VP (Pret Pl P1) => "antevimos" ;--# notpresent
    VP (Pret Pl P2) => "antevisteis" ;--# notpresent
    VP (Pret Pl P3) => "antevieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "anteveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "anteverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "anteverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "anteveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "anteveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "anteverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "anteviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "antevieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "anteviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "anteviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "anteviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "antevieren" ;--# notpresent
    VP (Cond Sg P1) => "antevería" ;--# notpresent
    VP (Cond Sg P2) => "anteverías" ;--# notpresent
    VP (Cond Sg P3) => "antevería" ;--# notpresent
    VP (Cond Pl P1) => "anteveríamos" ;--# notpresent
    VP (Cond Pl P2) => "anteveríais" ;--# notpresent
    VP (Cond Pl P3) => "anteverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "anteve" ;
    VP (Imp Sg P3) => "antevea" ;
    VP (Imp Pl P1) => "anteveamos" ;
    VP (Imp Pl P2) => "anteved" ;
    VP (Imp Pl P3) => "antevean" ;
    VP (Pass Sg Masc) => "antevisto" ;
    VP (Pass Sg Fem) => "antevista" ;
    VP (Pass Pl Masc) => "antevistos" ;
    VP (Pass Pl Fem) => "antevistas"
    }
  } ;

lin entrever_V = verboV 
 {s = table {
    VI Infn => "entrever" ;
    VI Ger => "entreviendo" ;
    VI Part => "entrevisto" ;
    VP (Pres Ind Sg P1) => "entreveo" ;
    VP (Pres Ind Sg P2) => "entreves" ;
    VP (Pres Ind Sg P3) => "entreve" ;
    VP (Pres Ind Pl P1) => "entrevemos" ;
    VP (Pres Ind Pl P2) => "entreveis" ;
    VP (Pres Ind Pl P3) => "entreven" ;
    VP (Pres Subj Sg P1) => "entrevea" ;
    VP (Pres Subj Sg P2) => "entreveas" ;
    VP (Pres Subj Sg P3) => "entrevea" ;
    VP (Pres Subj Pl P1) => "entreveamos" ;
    VP (Pres Subj Pl P2) => "entreveáis" ;
    VP (Pres Subj Pl P3) => "entrevean" ;
    VP (Impf Ind Sg P1) => "entreveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "entreveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "entreveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "entreveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "entreveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "entreveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"entreviera" ; "entreviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"entrevieras" ; "entrevieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"entreviera" ; "entreviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"entreviéramos" ; "entreviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"entrevierais" ; "entrevieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"entrevieran" ; "entreviesen"} ;--# notpresent
    VP (Pret Sg P1) => "entrevi" ;--# notpresent
    VP (Pret Sg P2) => "entreviste" ;--# notpresent
    VP (Pret Sg P3) => "entrevio" ;--# notpresent
    VP (Pret Pl P1) => "entrevimos" ;--# notpresent
    VP (Pret Pl P2) => "entrevisteis" ;--# notpresent
    VP (Pret Pl P3) => "entrevieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "entreveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "entreverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "entreverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "entreveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "entreveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "entreverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "entreviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "entrevieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "entreviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "entreviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "entreviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "entrevieren" ;--# notpresent
    VP (Cond Sg P1) => "entrevería" ;--# notpresent
    VP (Cond Sg P2) => "entreverías" ;--# notpresent
    VP (Cond Sg P3) => "entrevería" ;--# notpresent
    VP (Cond Pl P1) => "entreveríamos" ;--# notpresent
    VP (Cond Pl P2) => "entreveríais" ;--# notpresent
    VP (Cond Pl P3) => "entreverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "entreve" ;
    VP (Imp Sg P3) => "entrevea" ;
    VP (Imp Pl P1) => "entreveamos" ;
    VP (Imp Pl P2) => "entreved" ;
    VP (Imp Pl P3) => "entrevean" ;
    VP (Pass Sg Masc) => "entrevisto" ;
    VP (Pass Sg Fem) => "entrevista" ;
    VP (Pass Pl Masc) => "entrevistos" ;
    VP (Pass Pl Fem) => "entrevistas"
    }
  } ;

lin prever_V = verboV 
 {s = table {
    VI Infn => "prever" ;
    VI Ger => "previendo" ;
    VI Part => "previsto" ;
    VP (Pres Ind Sg P1) => "preveo" ;
    VP (Pres Ind Sg P2) => "preves" ;
    VP (Pres Ind Sg P3) => "preve" ;
    VP (Pres Ind Pl P1) => "prevemos" ;
    VP (Pres Ind Pl P2) => "preveis" ;
    VP (Pres Ind Pl P3) => "preven" ;
    VP (Pres Subj Sg P1) => "prevea" ;
    VP (Pres Subj Sg P2) => "preveas" ;
    VP (Pres Subj Sg P3) => "prevea" ;
    VP (Pres Subj Pl P1) => "preveamos" ;
    VP (Pres Subj Pl P2) => "preveáis" ;
    VP (Pres Subj Pl P3) => "prevean" ;
    VP (Impf Ind Sg P1) => "preveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "preveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "preveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "preveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "preveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "preveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"previera" ; "previese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"previeras" ; "previeses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"previera" ; "previese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"previéramos" ; "previésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"previerais" ; "previeseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"previeran" ; "previesen"} ;--# notpresent
    VP (Pret Sg P1) => "previ" ;--# notpresent
    VP (Pret Sg P2) => "previste" ;--# notpresent
    VP (Pret Sg P3) => "previo" ;--# notpresent
    VP (Pret Pl P1) => "previmos" ;--# notpresent
    VP (Pret Pl P2) => "previsteis" ;--# notpresent
    VP (Pret Pl P3) => "previeron" ;--# notpresent
    VP (Fut Ind Sg P1) => "preveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "preverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "preverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "preveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "preveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "preverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "previere" ;--# notpresent
    VP (Fut Subj Sg P2) => "previeres" ;--# notpresent
    VP (Fut Subj Sg P3) => "previere" ;--# notpresent
    VP (Fut Subj Pl P1) => "previéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "previereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "previeren" ;--# notpresent
    VP (Cond Sg P1) => "prevería" ;--# notpresent
    VP (Cond Sg P2) => "preverías" ;--# notpresent
    VP (Cond Sg P3) => "prevería" ;--# notpresent
    VP (Cond Pl P1) => "preveríamos" ;--# notpresent
    VP (Cond Pl P2) => "preveríais" ;--# notpresent
    VP (Cond Pl P3) => "preverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "preve" ;
    VP (Imp Sg P3) => "prevea" ;
    VP (Imp Pl P1) => "preveamos" ;
    VP (Imp Pl P2) => "preved" ;
    VP (Imp Pl P3) => "prevean" ;
    VP (Pass Sg Masc) => "previsto" ;
    VP (Pass Sg Fem) => "prevista" ;
    VP (Pass Pl Masc) => "previstos" ;
    VP (Pass Pl Fem) => "previstas"
    }
  } ;

lin rever_V = verboV 
 {s = table {
    VI Infn => "rever" ;
    VI Ger => "reviendo" ;
    VI Part => "revisto" ;
    VP (Pres Ind Sg P1) => "reveo" ;
    VP (Pres Ind Sg P2) => "reves" ;
    VP (Pres Ind Sg P3) => "reve" ;
    VP (Pres Ind Pl P1) => "revemos" ;
    VP (Pres Ind Pl P2) => "reveis" ;
    VP (Pres Ind Pl P3) => "reven" ;
    VP (Pres Subj Sg P1) => "revea" ;
    VP (Pres Subj Sg P2) => "reveas" ;
    VP (Pres Subj Sg P3) => "revea" ;
    VP (Pres Subj Pl P1) => "reveamos" ;
    VP (Pres Subj Pl P2) => "reveáis" ;
    VP (Pres Subj Pl P3) => "revean" ;
    VP (Impf Ind Sg P1) => "reveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "reveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "reveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "reveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "reveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "reveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"reviera" ; "reviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"revieras" ; "revieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"reviera" ; "reviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"reviéramos" ; "reviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"revierais" ; "revieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"revieran" ; "reviesen"} ;--# notpresent
    VP (Pret Sg P1) => "revi" ;--# notpresent
    VP (Pret Sg P2) => "reviste" ;--# notpresent
    VP (Pret Sg P3) => "revio" ;--# notpresent
    VP (Pret Pl P1) => "revimos" ;--# notpresent
    VP (Pret Pl P2) => "revisteis" ;--# notpresent
    VP (Pret Pl P3) => "revieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "reveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "reverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "reverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "reveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "reveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "reverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "reviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "revieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "reviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "reviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "reviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "revieren" ;--# notpresent
    VP (Cond Sg P1) => "revería" ;--# notpresent
    VP (Cond Sg P2) => "reverías" ;--# notpresent
    VP (Cond Sg P3) => "revería" ;--# notpresent
    VP (Cond Pl P1) => "reveríamos" ;--# notpresent
    VP (Cond Pl P2) => "reveríais" ;--# notpresent
    VP (Cond Pl P3) => "reverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "reve" ;
    VP (Imp Sg P3) => "revea" ;
    VP (Imp Pl P1) => "reveamos" ;
    VP (Imp Pl P2) => "reved" ;
    VP (Imp Pl P3) => "revean" ;
    VP (Pass Sg Masc) => "revisto" ;
    VP (Pass Sg Fem) => "revista" ;
    VP (Pass Pl Masc) => "revistos" ;
    VP (Pass Pl Fem) => "revistas"
    }
  } ;

lin trasver_V = verboV 
 {s = table {
    VI Infn => "trasver" ;
    VI Ger => "trasviendo" ;
    VI Part => "trasvisto" ;
    VP (Pres Ind Sg P1) => "trasveo" ;
    VP (Pres Ind Sg P2) => "trasves" ;
    VP (Pres Ind Sg P3) => "trasve" ;
    VP (Pres Ind Pl P1) => "trasvemos" ;
    VP (Pres Ind Pl P2) => "trasveis" ;
    VP (Pres Ind Pl P3) => "trasven" ;
    VP (Pres Subj Sg P1) => "trasvea" ;
    VP (Pres Subj Sg P2) => "trasveas" ;
    VP (Pres Subj Sg P3) => "trasvea" ;
    VP (Pres Subj Pl P1) => "trasveamos" ;
    VP (Pres Subj Pl P2) => "trasveáis" ;
    VP (Pres Subj Pl P3) => "trasvean" ;
    VP (Impf Ind Sg P1) => "trasveía" ;--# notpresent
    VP (Impf Ind Sg P2) => "trasveías" ;--# notpresent
    VP (Impf Ind Sg P3) => "trasveía" ;--# notpresent
    VP (Impf Ind Pl P1) => "trasveíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "trasveíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "trasveían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"trasviera" ; "trasviese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"trasvieras" ; "trasvieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"trasviera" ; "trasviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"trasviéramos" ; "trasviésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"trasvierais" ; "trasvieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"trasvieran" ; "trasviesen"} ;--# notpresent
    VP (Pret Sg P1) => "trasvi" ;--# notpresent
    VP (Pret Sg P2) => "trasviste" ;--# notpresent
    VP (Pret Sg P3) => "trasvio" ;--# notpresent
    VP (Pret Pl P1) => "trasvimos" ;--# notpresent
    VP (Pret Pl P2) => "trasvisteis" ;--# notpresent
    VP (Pret Pl P3) => "trasvieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "trasveré" ;--# notpresent
    VP (Fut Ind Sg P2) => "trasverás" ;--# notpresent
    VP (Fut Ind Sg P3) => "trasverá" ;--# notpresent
    VP (Fut Ind Pl P1) => "trasveremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "trasveréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "trasverán" ;--# notpresent
    VP (Fut Subj Sg P1) => "trasviere" ;--# notpresent
    VP (Fut Subj Sg P2) => "trasvieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "trasviere" ;--# notpresent
    VP (Fut Subj Pl P1) => "trasviéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "trasviereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "trasvieren" ;--# notpresent
    VP (Cond Sg P1) => "trasvería" ;--# notpresent
    VP (Cond Sg P2) => "trasverías" ;--# notpresent
    VP (Cond Sg P3) => "trasvería" ;--# notpresent
    VP (Cond Pl P1) => "trasveríamos" ;--# notpresent
    VP (Cond Pl P2) => "trasveríais" ;--# notpresent
    VP (Cond Pl P3) => "trasverían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "trasve" ;
    VP (Imp Sg P3) => "trasvea" ;
    VP (Imp Pl P1) => "trasveamos" ;
    VP (Imp Pl P2) => "trasved" ;
    VP (Imp Pl P3) => "trasvean" ;
    VP (Pass Sg Masc) => "trasvisto" ;
    VP (Pass Sg Fem) => "trasvista" ;
    VP (Pass Pl Masc) => "trasvistos" ;
    VP (Pass Pl Fem) => "trasvistas"
    }
  } ;

lin ver_V = verboV 
 {s = table {
    VI Infn => "ver" ;
    VI Ger => "viendo" ;
    VI Part => "visto" ;
    VP (Pres Ind Sg P1) => "veo" ;
    VP (Pres Ind Sg P2) => "ves" ;
    VP (Pres Ind Sg P3) => "ve" ;
    VP (Pres Ind Pl P1) => "vemos" ;
    VP (Pres Ind Pl P2) => "veis" ;
    VP (Pres Ind Pl P3) => "ven" ;
    VP (Pres Subj Sg P1) => "vea" ;
    VP (Pres Subj Sg P2) => "veas" ;
    VP (Pres Subj Sg P3) => "vea" ;
    VP (Pres Subj Pl P1) => "veamos" ;
    VP (Pres Subj Pl P2) => "veáis" ;
    VP (Pres Subj Pl P3) => "vean" ;
    VP (Impf Ind Sg P1) => "veía" ;--# notpresent
    VP (Impf Ind Sg P2) => "veías" ;--# notpresent
    VP (Impf Ind Sg P3) => "veía" ;--# notpresent
    VP (Impf Ind Pl P1) => "veíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "veíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "veían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"viera" ; "viese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"vieras" ; "vieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"viera" ; "viese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"viéramos" ; "viésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"vierais" ; "vieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"vieran" ; "viesen"} ;--# notpresent
    VP (Pret Sg P1) => "vi" ;--# notpresent
    VP (Pret Sg P2) => "viste" ;--# notpresent
    VP (Pret Sg P3) => "vio" ;--# notpresent
    VP (Pret Pl P1) => "vimos" ;--# notpresent
    VP (Pret Pl P2) => "visteis" ;--# notpresent
    VP (Pret Pl P3) => "vieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "veré" ;--# notpresent
    VP (Fut Ind Sg P2) => "verás" ;--# notpresent
    VP (Fut Ind Sg P3) => "verá" ;--# notpresent
    VP (Fut Ind Pl P1) => "veremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "veréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "verán" ;--# notpresent
    VP (Fut Subj Sg P1) => "viere" ;--# notpresent
    VP (Fut Subj Sg P2) => "vieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "viere" ;--# notpresent
    VP (Fut Subj Pl P1) => "viéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "viereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "vieren" ;--# notpresent
    VP (Cond Sg P1) => "vería" ;--# notpresent
    VP (Cond Sg P2) => "verías" ;--# notpresent
    VP (Cond Sg P3) => "vería" ;--# notpresent
    VP (Cond Pl P1) => "veríamos" ;--# notpresent
    VP (Cond Pl P2) => "veríais" ;--# notpresent
    VP (Cond Pl P3) => "verían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "ve" ;
    VP (Imp Sg P3) => "vea" ;
    VP (Imp Pl P1) => "veamos" ;
    VP (Imp Pl P2) => "ved" ;
    VP (Imp Pl P3) => "vean" ;
    VP (Pass Sg Masc) => "visto" ;
    VP (Pass Sg Fem) => "vista" ;
    VP (Pass Pl Masc) => "vistos" ;
    VP (Pass Pl Fem) => "vistas"
    }
  } ;

lin imprimir_V = verboV 
 {s = table {
    VI Infn => "imprimir" ;
    VI Ger => "imprimiendo" ;
    VI Part => variants {"imprimido" ; "impreso"} ;
    VP (Pres Ind Sg P1) => "imprimo" ;
    VP (Pres Ind Sg P2) => "imprimes" ;
    VP (Pres Ind Sg P3) => "imprime" ;
    VP (Pres Ind Pl P1) => "imprimimos" ;
    VP (Pres Ind Pl P2) => "imprimís" ;
    VP (Pres Ind Pl P3) => "imprimen" ;
    VP (Pres Subj Sg P1) => "imprima" ;
    VP (Pres Subj Sg P2) => "imprimas" ;
    VP (Pres Subj Sg P3) => "imprima" ;
    VP (Pres Subj Pl P1) => "imprimamos" ;
    VP (Pres Subj Pl P2) => "imprimáis" ;
    VP (Pres Subj Pl P3) => "impriman" ;
    VP (Impf Ind Sg P1) => "imprimía" ;--# notpresent
    VP (Impf Ind Sg P2) => "imprimías" ;--# notpresent
    VP (Impf Ind Sg P3) => "imprimía" ;--# notpresent
    VP (Impf Ind Pl P1) => "imprimíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "imprimíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "imprimían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"imprimiera" ; "imprimiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"imprimieras" ; "imprimieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"imprimiera" ; "imprimiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"imprimiéramos" ; "imprimiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"imprimierais" ; "imprimieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"imprimieran" ; "imprimiesen"} ;--# notpresent
    VP (Pret Sg P1) => "imprimí" ;--# notpresent
    VP (Pret Sg P2) => "imprimiste" ;--# notpresent
    VP (Pret Sg P3) => "imprimió" ;--# notpresent
    VP (Pret Pl P1) => "imprimimos" ;--# notpresent
    VP (Pret Pl P2) => "imprimisteis" ;--# notpresent
    VP (Pret Pl P3) => "imprimieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "imprimiré" ;--# notpresent
    VP (Fut Ind Sg P2) => "imprimirás" ;--# notpresent
    VP (Fut Ind Sg P3) => "imprimirá" ;--# notpresent
    VP (Fut Ind Pl P1) => "imprimiremos" ;--# notpresent
    VP (Fut Ind Pl P2) => "imprimiréis" ;--# notpresent
    VP (Fut Ind Pl P3) => "imprimirán" ;--# notpresent
    VP (Fut Subj Sg P1) => "imprimiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "imprimieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "imprimiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "imprimiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "imprimiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "imprimieren" ;--# notpresent
    VP (Cond Sg P1) => "imprimiría" ;--# notpresent
    VP (Cond Sg P2) => "imprimirías" ;--# notpresent
    VP (Cond Sg P3) => "imprimiría" ;--# notpresent
    VP (Cond Pl P1) => "imprimiríamos" ;--# notpresent
    VP (Cond Pl P2) => "imprimiríais" ;--# notpresent
    VP (Cond Pl P3) => "imprimirían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "imprime" ;
    VP (Imp Sg P3) => "imprima" ;
    VP (Imp Pl P1) => "imprimamos" ;
    VP (Imp Pl P2) => "imprimid" ;
    VP (Imp Pl P3) => "impriman" ;
    VP (Pass Sg Masc) => "imprimido" ;
    VP (Pass Sg Fem) => "imprimida" ;
    VP (Pass Pl Masc) => "imprimidos" ;
    VP (Pass Pl Fem) => "imprimidas"
    }
  } ;

lin prender_V = verboV 
 {s = table {
    VI Infn => "prender" ;
    VI Ger => "prendiendo" ;
    VI Part => variants {"prendido" ; "presto"} ;
    VP (Pres Ind Sg P1) => "prendo" ;
    VP (Pres Ind Sg P2) => "prendes" ;
    VP (Pres Ind Sg P3) => "prende" ;
    VP (Pres Ind Pl P1) => "prendemos" ;
    VP (Pres Ind Pl P2) => "prendéis" ;
    VP (Pres Ind Pl P3) => "prenden" ;
    VP (Pres Subj Sg P1) => "prenda" ;
    VP (Pres Subj Sg P2) => "prendas" ;
    VP (Pres Subj Sg P3) => "prenda" ;
    VP (Pres Subj Pl P1) => "prendamos" ;
    VP (Pres Subj Pl P2) => "prendáis" ;
    VP (Pres Subj Pl P3) => "prendan" ;
    VP (Impf Ind Sg P1) => "prendía" ;--# notpresent
    VP (Impf Ind Sg P2) => "prendías" ;--# notpresent
    VP (Impf Ind Sg P3) => "prendía" ;--# notpresent
    VP (Impf Ind Pl P1) => "prendíamos" ;--# notpresent
    VP (Impf Ind Pl P2) => "prendíais" ;--# notpresent
    VP (Impf Ind Pl P3) => "prendían" ;--# notpresent
    VP (Impf Subj Sg P1) => variants {"prendiera" ; "prendiese"} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {"prendieras" ; "prendieses"} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"prendiera" ; "prendiese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {"prendiéramos" ; "prendiésemos"} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {"prendierais" ; "prendieseis"} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {"prendieran" ; "prendiesen"} ;--# notpresent
    VP (Pret Sg P1) => "prendí" ;--# notpresent
    VP (Pret Sg P2) => "prendiste" ;--# notpresent
    VP (Pret Sg P3) => "prendió" ;--# notpresent
    VP (Pret Pl P1) => "prendimos" ;--# notpresent
    VP (Pret Pl P2) => "prendisteis" ;--# notpresent
    VP (Pret Pl P3) => "prendieron" ;--# notpresent
    VP (Fut Ind Sg P1) => "prenderé" ;--# notpresent
    VP (Fut Ind Sg P2) => "prenderás" ;--# notpresent
    VP (Fut Ind Sg P3) => "prenderá" ;--# notpresent
    VP (Fut Ind Pl P1) => "prenderemos" ;--# notpresent
    VP (Fut Ind Pl P2) => "prenderéis" ;--# notpresent
    VP (Fut Ind Pl P3) => "prenderán" ;--# notpresent
    VP (Fut Subj Sg P1) => "prendiere" ;--# notpresent
    VP (Fut Subj Sg P2) => "prendieres" ;--# notpresent
    VP (Fut Subj Sg P3) => "prendiere" ;--# notpresent
    VP (Fut Subj Pl P1) => "prendiéremos" ;--# notpresent
    VP (Fut Subj Pl P2) => "prendiereis" ;--# notpresent
    VP (Fut Subj Pl P3) => "prendieren" ;--# notpresent
    VP (Cond Sg P1) => "prendería" ;--# notpresent
    VP (Cond Sg P2) => "prenderías" ;--# notpresent
    VP (Cond Sg P3) => "prendería" ;--# notpresent
    VP (Cond Pl P1) => "prenderíamos" ;--# notpresent
    VP (Cond Pl P2) => "prenderíais" ;--# notpresent
    VP (Cond Pl P3) => "prenderían" ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => "prende" ;
    VP (Imp Sg P3) => "prenda" ;
    VP (Imp Pl P1) => "prendamos" ;
    VP (Imp Pl P2) => "prended" ;
    VP (Imp Pl P3) => "prendan" ;
    VP (Pass Sg Masc) => "prendido" ;
    VP (Pass Sg Fem) => "prendida" ;
    VP (Pass Pl Masc) => "prendidos" ;
    VP (Pass Pl Fem) => "prendidas"
    }
  } ;

lin llover_V = verboV 
 {s = table {
    VI Infn => "llover" ;
    VI Ger => "lloviendo" ;
    VI Part => "llovido" ;
    VP (Pres Ind Sg P1) => variants {} ;
    VP (Pres Ind Sg P2) => variants {} ;
    VP (Pres Ind Sg P3) => "llueve" ;
    VP (Pres Ind Pl P1) => variants {} ;
    VP (Pres Ind Pl P2) => variants {} ;
    VP (Pres Ind Pl P3) => variants {} ;
    VP (Pres Subj Sg P1) => variants {} ;
    VP (Pres Subj Sg P2) => variants {} ;
    VP (Pres Subj Sg P3) => "llueva" ;
    VP (Pres Subj Pl P1) => variants {} ;
    VP (Pres Subj Pl P2) => variants {} ;
    VP (Pres Subj Pl P3) => variants {} ;
    VP (Impf Ind Sg P1) => variants {} ;--# notpresent
    VP (Impf Ind Sg P2) => variants {} ;--# notpresent
    VP (Impf Ind Sg P3) => "llovía" ;--# notpresent
    VP (Impf Ind Pl P1) => variants {} ;--# notpresent
    VP (Impf Ind Pl P2) => variants {} ;--# notpresent
    VP (Impf Ind Pl P3) => variants {} ;--# notpresent
    VP (Impf Subj Sg P1) => variants {} ;--# notpresent
    VP (Impf Subj Sg P2) => variants {} ;--# notpresent
    VP (Impf Subj Sg P3) => variants {"lloviera" ; "lloviese"} ;--# notpresent
    VP (Impf Subj Pl P1) => variants {} ;--# notpresent
    VP (Impf Subj Pl P2) => variants {} ;--# notpresent
    VP (Impf Subj Pl P3) => variants {} ;--# notpresent
    VP (Pret Sg P1) => variants {} ;--# notpresent
    VP (Pret Sg P2) => variants {} ;--# notpresent
    VP (Pret Sg P3) => "llovió" ;--# notpresent
    VP (Pret Pl P1) => variants {} ;--# notpresent
    VP (Pret Pl P2) => variants {} ;--# notpresent
    VP (Pret Pl P3) => variants {} ;--# notpresent
    VP (Fut Ind Sg P1) => variants {} ;--# notpresent
    VP (Fut Ind Sg P2) => variants {} ;--# notpresent
    VP (Fut Ind Sg P3) => "lloverá" ;--# notpresent
    VP (Fut Ind Pl P1) => variants {} ;--# notpresent
    VP (Fut Ind Pl P2) => variants {} ;--# notpresent
    VP (Fut Ind Pl P3) => variants {} ;--# notpresent
    VP (Fut Subj Sg P1) => variants {} ;--# notpresent
    VP (Fut Subj Sg P2) => variants {} ;--# notpresent
    VP (Fut Subj Sg P3) => "lloviere" ;--# notpresent
    VP (Fut Subj Pl P1) => variants {} ;--# notpresent
    VP (Fut Subj Pl P2) => variants {} ;--# notpresent
    VP (Fut Subj Pl P3) => variants {} ;--# notpresent
    VP (Cond Sg P1) => variants {} ;--# notpresent
    VP (Cond Sg P2) => variants {} ;--# notpresent
    VP (Cond Sg P3) => "llovería" ;--# notpresent
    VP (Cond Pl P1) => variants {} ;--# notpresent
    VP (Cond Pl P2) => variants {} ;--# notpresent
    VP (Cond Pl P3) => variants {} ;--# notpresent
    VP (Imp Sg P1) => variants {} ;
    VP (Imp Sg P2) => variants {} ;
    VP (Imp Sg P3) => variants {} ;
    VP (Imp Pl P1) => variants {} ;
    VP (Imp Pl P2) => variants {} ;
    VP (Imp Pl P3) => variants {} ;
    VP (Pass Sg Masc) => variants {} ;
    VP (Pass Sg Fem) => variants {} ;
    VP (Pass Pl Masc) => variants {} ;
    VP (Pass Pl Fem) => variants {}
    }
  } ;
}

