-- flat structure for S and VP; use instead of Sent.cf

--- just one tense considered; no agreement forced

S  ::= NP VP ;
S  ::= NP Mod VP ;
S  ::= Adv "," S ;

-- sentences used as subjects and objects

NP ::= SC ;

SC ::= "that" S ;
SC ::= "to" VP ;
SC ::= QS ;

-- this is not needed in gf
SC ::= "whether" S | "if" S ;

-- existentials

S  ::= "there" Cop NP ;
QS ::= Cop "there" NP ;

-- slash category instead of gaps

Slash ::= S Prep ;
Slash ::= Slash Adv ; -- who does my son love here

-- questions

QS ::= Mod NP VP ;

-- this will be eliminated via richer lintypes
QS ::= Cop NP Comp ;

IntVP.    QS ::= IP VP ;
QS           ::= IP Mod VP ;
IntSlash. QS ::= IP Mod Slash ;

-- general: QuestAdv : IAdv -> Cl -> QCl ;
QS ::= IAdv Mod NP VP ;
QS ::= IAdv Cop NP ;

IAdv ::= Prep IP ;

-- relatives

RelVP. RS ::= RP VP ;
RS        ::= RP Mod VP ;
RelSlash. RS ::= RP Slash ;
RS           ::= Slash ; 

-- CLE syntax of relatives
NP ::= NP RS ;

FunIP. IP ::= "the" N2 Prep IP ;

IP ::= IDet OptNum    CN ;
IP ::= IDet OptNum_Pl CN_Pl ;
IP ::= IP PP ;

FunRP. RP ::= "the" N2 Prep RP ; -- ?
RP ::= "whose" OptNum    CN ;
RP ::= "whose" OptNum_Pl CN_Pl ;

-- imperative

PosImpVP. Imp ::= VP ;
NegImpVP. Imp ::= "don't" VP ;
