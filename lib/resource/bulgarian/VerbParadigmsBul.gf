resource VerbParadigmsBul = open
  (Predef=Predef),
  Prelude,
  MorphoBul,
  CatBul
  in {
oper
  mkV142 : Str  -> V ;
  mkV142 base = let stem = (init (init (init base)))
                in mkVerb (stem+"съм")
                          (stem+"е")
                          (stem+"бях")
                          (stem+"бях")
                          (stem+"бил")
                          (stem+"бил")
                          (stem+"-")
                          (stem+"-")
                          (stem+"бъди")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV143 : Str  -> V ;
  mkV143 base = let stem = (init (init (init base)))
                in mkVerb (stem+"ъда")
                          (stem+"ъде")
                          (stem+"их, идох")
                          (stem+"ъдех, ях")
                          (stem+"ил")
                          (stem+"ъдел")
                          (stem+"-")
                          (stem+"ъдещ")
                          (stem+"ъди")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV144 : Str  -> V ;
  mkV144 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"е")
                          (stem+"ях")
                          (stem+"ях")
                          (stem+"ял")
                          (stem+"ял")
                          (stem+"-")
                          (stem+"-")
                          (stem+"-")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV145 : Str  -> V ;
  mkV145 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"е")
                          (stem+"ох")
                          (stem+"ях")
                          (init stem+"л")
                          (stem+"ял")
                          (stem+"ен")
                          (stem+"ящ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV145a : Str  -> V ;
  mkV145a base = let stem = (init (init base))
                 in mkVerb (stem+"са")
                           (stem+"се")
                           (stem+"сох")
                           (stem+"сях")
                           (stem+"съл")
                           (stem+"сял")
                           (stem+"сен")
                           (stem+"сящ")
                           (stem+"си")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV145b : Str  -> V ;
  mkV145b base = let stem = (init (init base))
                 in mkVerb (stem+"та")
                           (stem+"те")
                           (stem+"тох")
                           (stem+"тях")
                           (stem+"ъл")
                           (stem+"тял")
                           (stem+"-")
                           (stem+"тящ")
                           (stem+"ти")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV146 : Str  -> V ;
  mkV146 base = let stem = (init (init base))
                in mkVerb (stem+"да")
                          (stem+"де")
                          (stem+"дох")
                          (stem+"дех")
                          (stem+"шъл")
                          (stem+"дел")
                          (stem+"-")
                          (stem+"-")
                          (stem+"ди")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV146a : Str  -> V ;
  mkV146a base = let stem = (init (init (init base)))
                 in mkVerb (stem+"йда")
                           (stem+"йде")
                           (stem+"йдох")
                           (stem+"йдех")
                           (stem+"шъл")
                           (stem+"йдел")
                           (stem+"-")
                           (stem+"-")
                           (stem+"йди")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV147 : Str  -> V ;
  mkV147 base = let stem = (init (init (init base)))
                in mkVerb (stem+"яза")
                          (stem+"езе")
                          (stem+"язох")
                          (stem+"езех")
                          (stem+"язъл")
                          (stem+"езел")
                          (stem+"-")
                          (stem+"-")
                          (stem+"ез")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV148 : Str  -> V ;
  mkV148 base = let stem = (init (init base))
                in mkVerb (stem+"ка")
                          (stem+"че")
                          (stem+"кох")
                          (stem+"чех")
                          (stem+"къл")
                          (stem+"чел")
                          (stem+"чен")
                          (stem+"чащ")
                          (stem+"чи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV149 : Str  -> V ;
  mkV149 base = let stem = (init (init (init base)))
                in mkVerb (stem+"ека")
                          (stem+"ече")
                          (stem+"якох")
                          (stem+"ечех")
                          (stem+"якъл")
                          (stem+"ечел")
                          (stem+"ечен")
                          (stem+"-")
                          (stem+"ечи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV150 : Str  -> V ;
  mkV150 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"е")
                          (stem+"ях")
                          (stem+"ях")
                          (stem+"ял")
                          (stem+"ял")
                          (stem+"ян")
                          (stem+"-")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV150a : Str  -> V ;
  mkV150a base = let stem = (init base)
                 in mkVerb (stem+"а")
                           (stem+"е")
                           (stem+"ях")
                           (stem+"ях")
                           (stem+"ял")
                           (stem+"ял")
                           (stem+"-")
                           (stem+"-")
                           (stem+"и")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV151 : Str  -> V ;
  mkV151 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"е")
                          (stem+"ах")
                          (stem+"ях")
                          (stem+"ал")
                          (stem+"ял")
                          (stem+"ящ")
                          (stem+"ан")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV152 : Str  -> V ;
  mkV152 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"е")
                          (stem+"ах")
                          (stem+"ех")
                          (stem+"ал")
                          (stem+"ел")
                          (stem+"ат")
                          (stem+"-")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV152a : Str  -> V ;
  mkV152a base = let stem = (init (init (init (init base))))
                 in mkVerb (stem+"ягна")
                           (stem+"егне")
                           (stem+"ягнах")
                           (stem+"ягнех")
                           (stem+"ягнал")
                           (stem+"ягнел")
                           (stem+"ягнат")
                           (stem+"-")
                           (stem+"егни")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV153 : Str  -> V ;
  mkV153 base = let stem = (init (init (init base)))
                in mkVerb (stem+"яна")
                          (stem+"ене")
                          (stem+"янах")
                          (stem+"енех")
                          (stem+"янал")
                          (stem+"енел")
                          (stem+"янат")
                          (stem+"-")
                          (stem+"ени")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV154 : Str  -> V ;
  mkV154 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"е")
                          (stem+"ах")
                          (stem+"ех")
                          (stem+"ал")
                          (stem+"ел")
                          (stem+"ан")
                          (stem+"ещ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV155 : Str  -> V ;
  mkV155 base = let stem = (init (init base))
                in mkVerb (stem+"ча")
                          (stem+"че")
                          (stem+"ках")
                          (stem+"чех")
                          (stem+"кал")
                          (stem+"чел")
                          (stem+"-")
                          (stem+"чещ")
                          (stem+"чи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV156 : Str  -> V ;
  mkV156 base = let stem = (init (init base))
                in mkVerb (stem+"жа")
                          (stem+"же")
                          (stem+"зах")
                          (stem+"жех")
                          (stem+"зал")
                          (stem+"жел")
                          (stem+"зан")
                          (stem+"-")
                          (stem+"жи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV157 : Str  -> V ;
  mkV157 base = let stem = (init (init (init base)))
                in mkVerb (stem+"ежа")
                          (stem+"еже")
                          (stem+"язах")
                          (stem+"ежех")
                          (stem+"язал")
                          (stem+"ежел")
                          (stem+"язан")
                          (stem+"ежещ")
                          (stem+"ежи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV158 : Str  -> V ;
  mkV158 base = let stem = (init (init base))
                in mkVerb (stem+"жа")
                          (stem+"же")
                          (stem+"гах")
                          (stem+"жех")
                          (stem+"гал")
                          (stem+"жел")
                          (stem+"ган")
                          (stem+"жещ")
                          (stem+"жи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV159 : Str  -> V ;
  mkV159 base = let stem = (init (init base))
                in mkVerb (stem+"ша")
                          (stem+"ше")
                          (stem+"сах")
                          (stem+"шех")
                          (stem+"сал")
                          (stem+"шел")
                          (stem+"сан")
                          (stem+"шещ")
                          (stem+"ши")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV160 : Str  -> V ;
  mkV160 base = let stem = (init (init base))
                in mkVerb (stem+"ея")
                          (stem+"ее")
                          (stem+"ях")
                          (stem+"еех")
                          (stem+"ял")
                          (stem+"еел")
                          (stem+"ян")
                          (stem+"еещ")
                          (stem+"ей")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV160a : Str  -> V ;
  mkV160a base = let stem = (init (init base))
                 in mkVerb (stem+"ея")
                           (stem+"ее")
                           (stem+"ах")
                           (stem+"еех")
                           (stem+"ал")
                           (stem+"еел")
                           (stem+"ан")
                           (stem+"еещ")
                           (stem+"ей")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV161 : Str  -> V ;
  mkV161 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"е")
                          (stem+"х")
                          (stem+"ех")
                          (stem+"л")
                          (stem+"ел")
                          (stem+"н")
                          (stem+"ещ")
                          (stem+"й")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV161a : Str  -> V ;
  mkV161a base = let stem = (init base)
                 in mkVerb (stem+"я")
                           (stem+"е")
                           (stem+"х")
                           (stem+"ех")
                           (stem+"л")
                           (stem+"ел")
                           (stem+"т")
                           (stem+"ещ")
                           (stem+"й")
                    ** {s1 = [] ; lock_V = <>} ;
  mkV162 : Str  -> V ;
  mkV162 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"е")
                          (stem+"ях")
                          (stem+"ех")
                          (stem+"ял")
                          (stem+"ел")
                          (stem+"-")
                          (stem+"ещ")
                          (stem+"й")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV163 : Str  -> V ;
  mkV163 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"е")
                          (stem+"х")
                          (stem+"ех")
                          (stem+"л")
                          (stem+"ел")
                          (stem+"т")
                          (stem+"ещ")
                          (stem+"й")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV164 : Str  -> V ;
  mkV164 base = let stem = (init (init base))
                in mkVerb (stem+"ея")
                          (stem+"ее")
                          (stem+"ях")
                          (stem+"еех")
                          (stem+"ял")
                          (stem+"еел")
                          (stem+"ят")
                          (stem+"еещ")
                          (stem+"ей")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV165 : Str  -> V ;
  mkV165 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"е")
                          (stem+"ех")
                          (stem+"ех")
                          (stem+"ел")
                          (stem+"ел")
                          (stem+"ел")
                          (stem+"ещ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV166 : Str  -> V ;
  mkV166 base = let stem = (init (init base))
                in mkVerb (stem+"га")
                          (stem+"же")
                          (stem+"жах")
                          (stem+"жех")
                          (stem+"гъл")
                          (stem+"жел")
                          (stem+"-")
                          (stem+"жещ")
                          (stem+"-")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV167 : Str  -> V ;
  mkV167 base = let stem = (init (init base))
                in mkVerb (stem+"ка")
                          (stem+"че")
                          (stem+"ках")
                          (stem+"чех")
                          (stem+"кал")
                          (stem+"чел")
                          (stem+"кан")
                          (stem+"чещ")
                          (stem+"чи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV168 : Str  -> V ;
  mkV168 base = let stem = (init base)
                in mkVerb (stem+"м")
                          (stem+"де")
                          (stem+"дох")
                          (stem+"дях")
                          (stem+"л")
                          (stem+"дял")
                          (stem+"ден")
                          (stem+"-")
                          (stem+"й")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV169 : Str  -> V ;
  mkV169 base = let stem = (init base)
                in mkVerb (stem+"м")
                          (stem+"де")
                          (stem+"дох")
                          (stem+"дях")
                          (stem+"л")
                          (stem+"дял")
                          (stem+"ден")
                          (stem+"дещ")
                          (stem+"ж")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV170 : Str  -> V ;
  mkV170 base = let stem = (init (init (init base)))
                in mkVerb (stem+"ера")
                          (stem+"ере")
                          (stem+"рах")
                          (stem+"ерях")
                          (stem+"рал")
                          (stem+"ерял")
                          (stem+"ран")
                          (stem+"ерящ")
                          (stem+"ери")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV171 : Str  -> V ;
  mkV171 base = let stem = (init (init base))
                in mkVerb (stem+"ма")
                          (stem+"ме")
                          (stem+"х")
                          (stem+"мех")
                          (stem+"л")
                          (stem+"мел")
                          (stem+"т")
                          (stem+"-")
                          (stem+"ми")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV172 : Str  -> V ;
  mkV172 base = let stem = (init (init (init (init base))))
                in mkVerb (stem+"ълна")
                          (stem+"ълне")
                          (stem+"лех")
                          (stem+"ълнех")
                          (stem+"лел")
                          (stem+"ълнел")
                          (stem+"ълнат")
                          (stem+"ълнещ")
                          (stem+"ълни")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV173 : Str  -> V ;
  mkV173 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"и")
                          (stem+"их")
                          (stem+"ех")
                          (stem+"ил")
                          (stem+"ел")
                          (stem+"ен")
                          (stem+"ещ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV174 : Str  -> V ;
  mkV174 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"и")
                          (stem+"их")
                          (stem+"ях")
                          (stem+"ил")
                          (stem+"ял")
                          (stem+"ен")
                          (stem+"ящ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV175 : Str  -> V ;
  mkV175 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"и")
                          (stem+"их")
                          (stem+"ях")
                          (stem+"ил")
                          (stem+"ял")
                          (stem+"ен")
                          (stem+"ящ")
                          (stem+"й")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV176 : Str  -> V ;
  mkV176 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"и")
                          (stem+"их")
                          (stem+"ех")
                          (stem+"ил")
                          (stem+"ел")
                          (stem+"ен")
                          (stem+"ещ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV177 : Str  -> V ;
  mkV177 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"и")
                          (stem+"ях")
                          (stem+"ях")
                          (stem+"ял")
                          (stem+"ял")
                          (stem+"ян")
                          (stem+"ящ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV178 : Str  -> V ;
  mkV178 base = let stem = (init base)
                in mkVerb (stem+"а")
                          (stem+"и")
                          (stem+"ах")
                          (stem+"ех")
                          (stem+"ал")
                          (stem+"ел")
                          (stem+"-")
                          (stem+"ащ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV179 : Str  -> V ;
  mkV179 base = let stem = (init (init (init (init base))))
                in mkVerb (stem+"ържа")
                          (stem+"ържи")
                          (stem+"ържах")
                          (stem+"ържех")
                          (stem+"ържал")
                          (stem+"ържел")
                          (stem+"ържан")
                          (stem+"ържащ")
                          (stem+"ръж")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV180 : Str  -> V ;
  mkV180 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"и")
                          (stem+"ях")
                          (stem+"ях")
                          (stem+"ял")
                          (stem+"ял")
                          (stem+"-")
                          (stem+"ящ")
                          (stem+"й")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV181 : Str  -> V ;
  mkV181 base = let stem = (init (init base))
                in mkVerb (stem+"дя")
                          (stem+"ди")
                          (stem+"дях")
                          (stem+"дех")
                          (stem+"дял")
                          (stem+"дел")
                          (stem+"дян")
                          (stem+"-")
                          (stem+"ж")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV182 : Str  -> V ;
  mkV182 base = let stem = (init base)
                in mkVerb (stem+"я")
                          (stem+"и")
                          (stem+"ах")
                          (stem+"ях")
                          (stem+"ал")
                          (stem+"ял")
                          (stem+"-")
                          (stem+"ящ")
                          (stem+"и")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV183 : Str  -> V ;
  mkV183 base = let stem = (init (init (init base)))
                in mkVerb (stem+"ежа")
                          (stem+"ежи")
                          (stem+"язах")
                          (stem+"ежех")
                          (stem+"язал")
                          (stem+"ежел")
                          (stem+"язан")
                          (stem+"ежещ")
                          (stem+"ежи")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV184 : Str  -> V ;
  mkV184 base = let stem = (init (init (init base)))
                in mkVerb (stem+"еля")
                          (stem+"ели")
                          (stem+"лях")
                          (stem+"елех")
                          (stem+"лял")
                          (stem+"елел")
                          (stem+"лян, лят")
                          (stem+"елещ")
                          (stem+"ели")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV185 : Str  -> V ;
  mkV185 base = let stem = (init (init (init base)))
                in mkVerb (stem+"оля")
                          (stem+"оли")
                          (stem+"лах")
                          (stem+"олех")
                          (stem+"лал")
                          (stem+"олел")
                          (stem+"лан")
                          (stem+"олещ")
                          (stem+"оли")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV186 : Str  -> V ;
  mkV186 base = let stem = (init (init base))
                in mkVerb (stem+"ам")
                          (stem+"а")
                          (stem+"ах")
                          (stem+"ах")
                          (stem+"ал")
                          (stem+"ал")
                          (stem+"ан")
                          (stem+"ащ")
                          (stem+"ай")
                   ** {s1 = [] ; lock_V = <>} ;
  mkV187 : Str  -> V ;
  mkV187 base = let stem = (init (init base))
                in mkVerb (stem+"ям")
                          (stem+"я")
                          (stem+"ях")
                          (stem+"ях")
                          (stem+"ял")
                          (stem+"ял")
                          (stem+"ян")
                          (stem+"ящ")
                          (stem+"яй")
                   ** {s1 = [] ; lock_V = <>} ;
}