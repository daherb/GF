name: gf
version: 3.0-alpha
cabal-version: >= 1.2
build-type: Simple
license: GPL
license-file: LICENSE
synopsis: Grammatical Framework


flag readline
  Description: Enable Readline in the shell
  Default:     True

flag interrupt
  Description: Enable Ctrl+Break in the shell
  Default:     True

library
  build-depends: base,
                 array,
                 containers,
                 bytestring,
                 random
  ghc-options: -O2
  hs-source-dirs: src-3.0
  extensions: 
  exposed-modules: 
    PGF
  other-modules:
    PGF.CId
    PGF.Data
    PGF.Macros
    PGF.Generate
    PGF.Linearize
    PGF.BuildParser
    PGF.Parsing.FCFG.Utilities
    PGF.Parsing.FCFG.Active
    PGF.Parsing.FCFG
    PGF.Raw.Parse
    PGF.Raw.Print
    PGF.Raw.Convert
    PGF.Raw.Abstract
    GF.Data.RedBlackSet
    GF.Data.GeneralDeduction
    GF.Data.Utilities
    GF.Data.SortedList
    GF.Data.Assoc
    GF.Data.ErrM
    GF.Text.UTF8


executable gf3
  build-depends: base,
                 array,
                 containers,
                 bytestring,
                 filepath,
                 directory,
                 random,
                 old-time,
                 process,
                 pretty
  if os(windows)
    build-depends: Win32
  else
    build-depends: unix
  ghc-options: -O2
  hs-source-dirs: src-3.0
  extensions:
  main-is: GF.hs
  other-modules:
    GF.Source.ErrM
    GF.Grammar.ReservedWords
    GF.Data.BacktrackM
    GF.Source.SharedString
    GF.Source.LexGF
    GF.Source.AbsGF
    GF.Source.PrintGF
    GF.JavaScript.AbsJS
    GF.JavaScript.PrintJS
    GF.Command.LexGFShell
    GF.Command.AbsGFShell
    GF.Command.PrintGFShell
    GF.Data.RedBlackSet
    GF.Data.GeneralDeduction
    GF.Infra.CompactPrint
    GF.Text.UTF8
    GF.Data.Utilities
    GF.Data.SortedList
    GF.Data.Assoc
    GF.Infra.PrintClass
    GF.Compile.GenerateFCFG
    GF.Data.ErrM
    GF.Command.ParGFShell
    GF.Command.PPrTree
    GF.Source.ParGF
    GF.Data.Operations
    GF.Infra.Ident
    GF.Grammar.Predef
    GF.Data.Str
    GF.Data.Zipper
    GF.Infra.GetOpt
    GF.Infra.Option
    GF.Infra.UseIO
    GF.Command.Commands
    GF.Command.Interpreter
    GF.Infra.Modules
    GF.Grammar.Grammar
    GF.Source.GrammarToSource
    GF.Grammar.Values
    GF.Grammar.PrGrammar
    GF.Grammar.Macros
    GF.Grammar.Lockfield
    GF.Grammar.MMacros
    GF.Grammar.Abstract
    GF.Grammar.Lookup
    GF.Compile.RemoveLiT
    GF.Grammar.LookAbs
    GF.Compile.TC
    GF.Grammar.Unify
    GF.Compile.TypeCheck
    GF.Compile.Update
    GF.Infra.CheckM
    GF.Grammar.AppPredefined 
    GF.Grammar.PatternMatch
    GF.Compile.CheckGrammar
    GF.Compile.Refresh
    GF.Compile.BackOpt
    GF.Compile.Extend
    GF.Compile.Rename
    GF.Compile.ReadFiles
    GF.Compile.GrammarToGFCC
    GF.Compile.Compute
    GF.Compile.Optimize
    GF.Compile.OptimizeGF
    GF.Compile.OptimizeGFCC
    GF.Compile.ModDeps
    GF.Compile.Rebuild
    GF.Source.SourceToGrammar
    GF.Compile.GetGrammar
    GF.Compile
    GF.Command.Importing
    GF.System.Readline
    PGF
    PGF.CId
    PGF.Data
    PGF.Macros
    PGF.Generate
    PGF.Linearize
    PGF.BuildParser
    PGF.Parsing.FCFG.Utilities
    PGF.Parsing.FCFG.Active
    PGF.Parsing.FCFG
    PGF.Raw.Parse
    PGF.Raw.Print
    PGF.Raw.Convert
    PGF.Raw.Abstract
    GFC
    GFI
  
  if flag(readline)
    build-depends: readline
    ghc-options: -DUSE_READLINE
    other-modules: GF.System.UseReadline
  else
    other-modules: GF.System.NoReadline
  
  if flag(interrupt)
    ghc-options: -DUSE_INTERRUPT
    other-modules: GF.System.UseSignal
  else
    other-modules: GF.System.NoSignal
