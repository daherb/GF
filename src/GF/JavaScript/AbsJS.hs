module GF.JavaScript.AbsJS where

-- Haskell module generated by the BNF converter

newtype Ident = Ident String deriving (Eq,Ord,Show)
data Program =
   Program [Element]
  deriving (Eq,Ord,Show)

data Element =
   FunDef Ident [Ident] [Stmt]
 | ElStmt Stmt
  deriving (Eq,Ord,Show)

data Stmt =
   Compound [Stmt]
 | ReturnVoid
 | Return Expr
  deriving (Eq,Ord,Show)

data Expr =
   ENew Ident [Expr]
 | EMember Expr Expr
 | EIndex Expr Expr
 | ECall Expr [Expr]
 | EVar Ident
 | EInt Integer
 | EDbl Double
 | EStr String
 | ETrue
 | EFalse
 | ENull
 | EThis
  deriving (Eq,Ord,Show)

