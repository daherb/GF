--# -path=.:alltenses
concrete BigLexEng of BigLexEngAbs = CatEng ** open ParadigmsEng, IrregEng in {
lin abandon_V2 = mkV2 "abandon" ;
lin abbreviate_V2 = mkV2 "abbreviate" ;
lin abduct_V2 = mkV2 "abduct" ;
lin able_A2 = mkA2 "able" "" ;
lin able_A = mkA "able" ;
lin abolish_V2 = mkV2 "abolish" ;
lin abolition_N = mkN "abolition" ;
lin abound_V = mkV "abound" ;
lin about_Prep = mkPrep "about" ;
lin above_Adv = mkAdv "above" ;
--lin above_Prep = mkPrep "above" ;
lin abroad_Adv = mkAdv "abroad" ;
lin absence_N2from = mkN2 "absence" "from" ;
lin absent_A = mkA "absent" ;
lin absent_A2from = mkA2 "absent" "from" ;
lin absentee_N = mkN "absentee" ;
lin absolute_A = longA "absolute" ;
lin absolve_V3from = mkV3 "absolve" "from" ;
lin abstract_N = mkN "abstract" ;
lin abstract_A = longA "abstract" ;
lin abstract_V = mkV "abstract" ;
lin abundance_N = mkN "abundance" ;
lin abundant_A = longA "abundant" ;
lin academic_A = longA "academic" ;
lin accelerate_V2 = mkV2 "accelerate" ;
lin accept_V2 = mkV2 "accept" ;
lin access_V2 = mkV2 "access" ;
lin access_N2to = mkN2 "access" "to" ;
lin accessible_A = longA "accessible" ;
lin accessible_A2to = longA2 "accessible" "to" ;
lin accident_N = mkN "accident" ;
lin accommodate_V2 = mkV2 "accommodate" ;
lin accompany_V2 = mkV2 "accompany" ;
lin accomplish_V2 = mkV2 "accomplish" ;
lin accord_V2with = mkV2 "accord" "with" ;
lin accordingly_Adv = mkAdv "accordingly" ;
lin account_N = mkN "account" ;
lin account_V2for = mkV2 "account" "for" ;
lin accumulate_V2 = mkV2 "accumulate" ;
lin accuracy_N = mkN "accuracy" ;
lin accurate_A = longA "accurate" ;
lin accuse_V3of = mkV3 "accuse" "of" ;
lin ache_N = mkN "ache" ;
lin ache_V = mkV "ache" ;
lin achieve_V2 = mkV2 "achieve" ;
lin acknowledge_V2 = mkV2 "acknowledge" ;
lin acknowledge_VS = mkVS (mkV "acknowledge") ;
lin acquire_V2 = mkV2 "acquire" ;
lin acquisition_N = mkN "acquisition" ;
lin acquisitive_A = longA "acquisitive" ;
lin across_Prep = mkPrep "across" ;
lin act_N = mkN "act" ;
lin act_V = mkV "act" ;
lin activate_V2 = mkV2 "activate" ;
lin actor_N = mkN "actor" ;
lin actress_N = mkN "actress" ;
lin actual_A = longA "actual" ;
lin acute_A = longA "acute" ;
lin adage_N = mkN "adage" ;
lin adapt_V2 = mkV2 "adapt" ;
lin add_V3to = mkV3 "add" "to" ;
lin addict_N = mkN "addict" ;
lin addict_V2 = mkV2 "addict" ;
lin addition_N2to = mkN2 "addition" "to" ;
lin additive_N = mkN "additive" ;
lin address_N = mkN "address" ;
lin address_V2 = mkV2 "address" ;
lin adept_A = mkA "adept" ;
lin adept_A2at = mkA2 "adept" "at" ;
lin adequacy_N = mkN "adequacy" ;
lin adequate_A = longA "adequate" ;
lin adequate_A2for = longA2 "adequate" "for" ;
lin adhere_V2to = mkV2 "adhere" "to" ;
lin adherent_N = mkN "adherent" ;
lin adhesive_N = mkN "adhesive" ;
lin adhesive_A = longA "adhesive" ;
lin adjacency_N2to = mkN2 "adjacency" "to" ;
lin adjacent_A = longA "adjacent" ;
lin adjacent_A2to = longA2 "adjacent" "to" ;
lin adjective_N = mkN "adjective" ;
lin adjoin_V2 = mkV2 "adjoin" ;
lin adjunct_N = mkN "adjunct" ;
lin adjust_V2 = mkV2 "adjust" ;
lin administer_V2 = mkV2 "administer" ;
lin administration_N = mkN "administration" ;
lin admire_V2 = mkV2 "admire" ;
lin admissible_A = longA "admissible" ;
lin admission_N = mkN "admission" ;
lin admission_N2to = mkN2 "admission" "to" ;
lin admit_V2 = mkV2 "admit" ;
lin admit_V3to = mkV3 "admit" "to" ;
lin admit_V = mkV "admit" ;
lin admit_V2of = mkV2 "admit" "of" ;
lin admit_VS = mkVS (mkV "admit") ;
lin adopt_V2 = mkV2 "adopt" ;
lin adult_N = mkN "adult" ;
lin adult_A = longA "adult" ;
lin advance_N = mkN "advance" ;
lin advance_V = mkV "advance" ;
lin advantage_N = mkN "advantage" ;
lin advent_N = mkN "advent" ;
lin adventure_N = mkN "adventure" ;
lin adverb_N = mkN "adverb" ;
lin adverbial_A = longA "adverbial" ;
lin adverse_A = longA "adverse" ;
lin advertise_V2 = mkV2 "advertise" ;
lin advice_N = mkN "advice" ;
lin advise_V2 = mkV2 "advise" ;
lin advisor_N = mkN "advisor" ;
lin advocate_V2 = mkV2 "advocate" ;
lin aerobic_A = longA "aerobic" ;
lin aesthetic_A = longA "aesthetic" ;
lin affair_N = mkN "affair" ;
lin affect_V2 = mkV2 "affect" ;
lin affection_N2for = mkN2 "affection" "for" ;
lin affix_N = mkN "affix" ;
lin affix_V3with = mkV3 "affix" "with" ;
lin afflict_V2 = mkV2 "afflict" ;
lin afford_V2 = mkV2 "afford" ;
lin afford_VV = mkVV (mkV "afford") ;
lin afresh_Adv = mkAdv "afresh" ;
lin africa_PN = regPN "africa" ;
lin african_A = longA "african" ;
lin african_N = mkN "african" ;
lin after_Subj = mkSubj "after" ;
--lin after_Prep = mkPrep "after" ;
lin afternoon_N = mkN "afternoon" ;
lin afterthought_N = mkN "afterthought" ;
lin afterwards_Adv = mkAdv "afterwards" ;
lin again_Adv = mkAdv "again" ;
lin against_Prep = mkPrep "against" ;
lin age_N = mkN "age" ;
lin aged_A = mkA "aged" ;
lin agency_N = mkN "agency" ;
lin agenda_N = mkN "agenda" ;
lin agent_N = mkN "agent" ;
lin aggravate_V2 = mkV2 "aggravate" ;
lin aggressive_A = longA "aggressive" ;
lin ago_Adv = mkAdv "ago" ;
lin agree_V2with = mkV2 "agree" "with" ;
lin ahead_Adv = mkAdv "ahead" ;
lin aid_N = mkN "aid" ;
lin aid_V2 = mkV2 "aid" ;
lin aide_N = mkN "aide" ;
lin aim_N = mkN "aim" ;
lin aim_V2at = mkV2 "aim" "at" ;
lin aim_V2to = mkV2 "aim" "to" ;
lin air_N = mkN "air" ;
lin aircraft_N = mkN "aircraft" "aircraft" ;
lin akin_A = longA "akin" ;
lin akin_A = longA "akin" ;
lin alcohol_N = mkN "alcohol" ;
lin alcoholic_A = longA "alcoholic" ;
lin alcoholic_N = mkN "alcoholic" ;
lin algebra_N = mkN "algebra" ;
lin algorithm_N = mkN "algorithm" ;
lin alias_N2for = mkN2 "alias" "for" ;
lin align_V2 = mkV2 "align" ;
-- lin all_Adv = mkAdv "all" ;
lin allege_VS = mkVS (mkV "allege") ;
lin alley_N = mkN "alley" ;
lin allocate_V3to = mkV3 "allocate" "to" ;
lin allow_V2 = mkV2 "allow" ;
lin allow_V2 = mkV2 "allow" ;
lin allow_V2for = mkV2 "allow" "for" ;
lin allow_V2of = mkV2 "allow" "of" ;
lin allude_V2to = mkV2 "allude" "to" ;
lin ally_N = mkN "ally" ;
lin ally_V2with = mkV2 "ally" "with" ;
-- lin almost_Adv = mkAdv "almost" ;
lin alone_Adv = mkAdv "alone" ;
lin along_Prep = mkPrep "along" ;
lin aloud_Adv = mkAdv "aloud" ;
lin alphabet_N = mkN "alphabet" ;
lin alphabetic_A = longA "alphabetic" ;
lin alphanumeric_A = longA "alphanumeric" ;
lin already_Adv = mkAdv "already" ;
lin also_Adv = mkAdv "also" ;
lin altar_N = mkN "altar" ;
lin alter_V = mkV "alter" ;
lin alternate_V2with = mkV2 "alternate" "with" ;
lin alternative_N2to = mkN2 "alternative" "to" ;
lin alternatively_A = longA "alternatively" ;
lin always_Adv = mkAdv "always" ;
lin amaze_V2 = mkV2 "amaze" ;
lin amazing_A = longA "amazing" ;
lin ambiguity_N = mkN "ambiguity" ;
lin ambiguous_A = longA "ambiguous" ;
lin ambition_N2 = mkN2 "ambition" ;
lin ambitious_A = longA "ambitious" ;
lin amenable_A = longA "amenable" ;
lin amenable_A2to = longA2 "amenable" "to" ;
lin amend_V2 = mkV2 "amend" ;
lin amenity_N = mkN "amenity" ;
lin america_PN = regPN "america" ;
lin american_A = longA "american" ;
lin american_N = mkN "american" ;
lin among_Prep = mkPrep "among" ;
lin amongst_Prep = mkPrep "amongst" ;
lin ampere_N = mkN "ampere" ;
lin ampersand_N = mkN "ampersand" ;
lin amuse_V2 = mkV2 "amuse" ;
lin anachronism_N = mkN "anachronism" ;
lin anachronistic_A = longA "anachronistic" ;
lin analogous_A = longA "analogous" ;
lin analogous_A2to = longA2 "analogous" "to" ;
lin analogue_N = mkN "analogue" ;
lin analogy_N2with = mkN2 "analogy" "with" ;
lin analyse_V2 = mkV2 "analyse" ;
lin analysis_N = mkN "analysis" "analyses" ;
lin analytic_A = longA "analytic" ;
lin anaphor_N = mkN "anaphor" ;
lin anaphora_N = mkN "anaphora" ;
lin anaphoric_A = longA "anaphoric" ;
lin ancestor_N = mkN "ancestor" ;
lin ancient_A = longA "ancient" ;
lin anecdote_N = mkN "anecdote" ;
lin anger_N = mkN "anger" ;
lin angle_N = mkN "angle" ;
lin angled_A = longA "angled" ;
lin angler_N = mkN "angler" ;
lin angling_N = mkN "angling" ;
lin angry_A = mkA "angry" ;
lin angry_A2about = mkA2 "angry" "about" ;
lin angry_A2at = mkA2 "angry" "at" ;
lin angry_A2with = mkA2 "angry" "with" ;
lin angry_A2 = mkA2 "angry" "" ;
lin animal_N = mkN "animal" ;
lin animate_A = longA "animate" ;
lin animate_V2 = mkV2 "animate" ;
lin ankle_N = mkN "ankle" ;
lin annotate_V2 = mkV2 "annotate" ;
lin announce_V2 = mkV2 "announce" ;
lin announce_V2 = mkV2 "announce" ;
lin annoy_V2 = mkV2 "annoy" ;
lin annual_A = longA "annual" ;
lin anomalous_A = longA "anomalous" ;
lin anomaly_N = mkN "anomaly" ;
lin answer_N = mkN "answer" ;
lin answer_V2 = mkV2 "answer" ;
lin ant_N = mkN "ant" ;
lin antecedent_N = mkN "antecedent" ;
lin anthropomorphic_A = longA "anthropomorphic" ;
lin anthropomorphism_N = mkN "anthropomorphism" ;
lin antibiotic_N = mkN "antibiotic" ;
lin anticipate_V2 = mkV2 "anticipate" ;
lin anticipate_V = mkV "anticipate" ;
lin anticipate_VS = mkVS (mkV "anticipate") ;
lin anxiety_N = mkN "anxiety" ;
lin anxious_A = longA "anxious" ;
lin anxious_A2about = longA2 "anxious" "about" ;
lin anxious_A2 = longA2 "anxious" "" ;
lin anyhow_Adv = mkAdv "anyhow" ;
lin anyway_Adv = mkAdv "anyway" ;
lin anywhere_Adv = mkAdv "anywhere" ;
lin ape_N = mkN "ape" ;
lin apologetic_A = longA "apologetic" ;
lin apologetic_A2for = longA2 "apologetic" "for" ;
lin apologise_V2for = mkV2 "apologise" "for" ;
lin apologize_V2for = mkV2 "apologize" "for" ;
lin appal_V2 = mkV2 "appal" ;
lin apparatus_N = mkN "apparatus" ;
lin apparent_A = longA "apparent" ;
lin apparent_A2to = longA2 "apparent" "to" ;
lin apparition_N = mkN "apparition" ;
lin appeal_V2to = mkV2 "appeal" "to" ;
lin appeal_N2to = mkN2 "appeal" "to" ;
lin appear_V2 = mkV2 "appear" ;
lin appear_V2 = mkV2 "appear" ;
lin appear_V = mkV "appear" ;
lin appear_V2 = mkV2 "appear" ;
lin append_V3to = mkV3 "append" "to" ;
lin appendix_N = mkN "appendix" "appendices" ;
lin apple_N = mkN "apple" ;
lin applicable_A = longA "applicable" ;
lin applicable_A2to = longA2 "applicable" "to" ;
lin applicant_N = mkN "applicant" ;
lin apply_V3to = mkV3 "apply" "to" ;
lin apply_V2for = mkV2 "apply" "for" ;
lin appoint_V2 = mkV2 "appoint" ;
lin appoint_V = mkV "appoint" ;
lin appoint_V2 = mkV2 "appoint" ;
lin appointment_N = mkN "appointment" ;
lin apposite_A = longA "apposite" ;
lin appraise_V2 = mkV2 "appraise" ;
lin appreciate_VS = mkVS (mkV "appreciate") ;
lin apprehend_V2 = mkV2 "apprehend" ;
lin apprehension_N = mkN "apprehension" ;
lin apprehensive_A = longA "apprehensive" ;
lin approach_V2 = mkV2 "approach" ;
lin approach_N2to = mkN2 "approach" "to" ;
lin approbation_N = mkN "approbation" ;
lin appropriate_A = longA "appropriate" ;
lin appropriate_A2for = longA2 "appropriate" "for" ;
lin approve_V2of = mkV2 "approve" "of" ;
lin approximate_A = longA "approximate" ;
lin approximate_V2to = mkV2 "approximate" "to" ;
lin april_PN = regPN "april" ;
lin apse_N = mkN "apse" ;
lin apt_A = mkA "apt" ;
lin apt_A2 = mkA2 "apt" "" ;
lin aptitude_N = mkN "aptitude" ;
lin arabian_A = longA "arabian" ;
lin arabic_A = longA "arabic" ;
lin arbitrary_A = longA "arbitrary" ;
lin arc_N = mkN "arc" ;
lin arch_N = mkN "arch" ;
lin archetype_N = mkN "archetype" ;
lin architect_N = mkN "architect" ;
lin architecture_N = mkN "architecture" ;
lin area_N = mkN "area" ;
lin arena_N = mkN "arena" ;
lin argue_V = mkV "argue" ;
lin argument_N2s_withabout = mkN2 "argument" "s_withabout" ; --
lin argument_N2 = mkN2 "argument" ; --
--lin arise_V = IrregEng.arise_V ;
lin arithmetic_N = mkN "arithmetic" ;
lin arm_N = mkN "arm" ;
lin arm_V2 = mkV2 "arm" ;
lin armour_N = mkN "armour" ;
lin armoury_N = mkN "armoury" ;
lin army_N = mkN "army" ;
lin around_Prep = mkPrep "around" ;
lin arouse_V2 = mkV2 "arouse" ;
lin arrange_V = mkV "arrange" ;
lin arrange_V2 = mkV2 "arrange" ;
lin arrange_VV = mkVV (mkV "arrange") ;
lin arrange_V2 = mkV2 "arrange" ;
lin array_N = mkN "array" ;
lin arrest_V2 = mkV2 "arrest" ;
lin arrive_V = mkV "arrive" ;
lin arrive_V2at = mkV2 "arrive" "at" ;
lin arrow_N = mkN "arrow" ;
lin art_N = mkN "art" ;
lin artefact_N = mkN "artefact" ;
lin article_N = mkN "article" ;
lin articulate_V2 = mkV2 "articulate" ;
lin artificial_A = longA "artificial" ;
lin artist_N = mkN "artist" ;
lin as_Subj = mkSubj "as" ;
lin ascend_V2 = mkV2 "ascend" ;
lin ascend_V = mkV "ascend" ;
lin ascent_N = mkN "ascent" ;
lin ascertain_V2 = mkV2 "ascertain" ;
lin ascribe_V3to = mkV3 "ascribe" "to" ;
lin ash_N = mkN "ash" ;
lin asia_PN = regPN "asia" ;
lin ask_V2 = mkV2 "ask" ;
lin ask_V3for = mkV3 "ask" "for" ;
lin ask_V3to = mkV3 "ask" "to" ;
lin ask_V3s = mkV3 "ask" "s" ; --
lin ask_V2 = mkV2 "ask" ;
lin ask_V2for = mkV2 "ask" "for" ;
lin ask_V2 = mkV2 "ask" ;
lin ask_V2 = mkV2 "ask" ;
lin ask_V2 = mkV2 "ask" ;
lin ask_V2 = mkV2 "ask" ;
lin aspect_N = mkN "aspect" ;
lin aspire_V2to = mkV2 "aspire" "to" ;
lin aspire_VV = mkVV (mkV "aspire") ;
lin aspirin_N = mkN "aspirin" ;
lin ass_N = mkN "ass" ;
lin assault_N = mkN "assault" ;
lin assault_V2 = mkV2 "assault" ;
lin assemble_V2 = mkV2 "assemble" ;
lin assembly_N = mkN "assembly" ;
lin assent_V2to = mkV2 "assent" "to" ;
lin assert_VS = mkVS (mkV "assert") ;
lin assess_V2 = mkV2 "assess" ;
lin assign_V3to = mkV3 "assign" "to" ;
lin assimilate_V2 = mkV2 "assimilate" ;
lin assist_V2 = mkV2 "assist" ;
lin assist_V = mkV "assist" ;
lin assist_V2 = mkV2 "assist" ;
lin assist_V2at = mkV2 "assist" "at" ;
lin assistant_N = mkN "assistant" ;
lin associate_V3with =mkV3 "associate" "with" ;
lin association_N = mkN "association" ;
lin assume_V2 = mkV2 "assume" ;
lin assume_VS = mkVS (mkV "assume") ;
lin assumption_N2 = mkN2 "assumption" ; --
lin assure_VS = mkVS (mkV "assure") ;
lin asterisk_N = mkN "asterisk" ;
lin asthma_N = mkN "asthma" ;
lin asthmatic_A = longA "asthmatic" ;
lin asthmatically_Adv = mkAdv "asthmatically" ;
lin astonish_V2 = mkV2 "astonish" ;
lin astronomer_N = mkN "astronomer" ;
lin astronomy_N = mkN "astronomy" ;
lin asymmetry_N = mkN "asymmetry" ;
lin at_Prep = mkPrep "at" ;
lin atlas_N = mkN "atlas" ;
lin atmosphere_N = mkN "atmosphere" ;
lin atom_N = mkN "atom" ;
lin attach_V2 = mkV2 "attach" ;
lin attach_V3to =mkV3 "attach" "to" ;
lin attach_V2to = mkV2 "attach" "to" ;
lin attack_V2 = mkV2 "attack" ;
lin attack_N2on = mkN2 "attack" "on" ;
lin attain_V2 = mkV2 "attain" ;
lin attempt_N2 = mkN2 "attempt" ;
lin attempt_VV = mkVV (mkV "attempt") ;
lin attend_V2to = mkV2 "attend" "to" ;
lin attention_N2to = mkN2 "attention" "to" ;
lin attentive_A = longA "attentive" ;
lin attentive_A2to = longA2 "attentive" "to" ;
lin attitude_N = mkN "attitude" ;
lin attract_V2 = mkV2 "attract" ;
lin attribute_N = mkN "attribute" ;
lin attribute_V3to =mkV3 "attribute" "to" ;
lin audible_A = longA "audible" ;
lin audience_N = mkN "audience" ;
lin augment_V2 = mkV2 "augment" ;
lin august_PN = regPN "august" ;
lin aunt_N2of = mkN2 "aunt" "of" ;
lin australia_PN = regPN "australia" ;
lin australian_A = longA "australian" ;
lin austria_PN = regPN "austria" ;
lin author_N = mkN "author" ;
lin authority_N = mkN "authority" ;
lin authorize_V2 = mkV2 "authorize" ;
lin automate_V2 = mkV2 "automate" ;
lin automatic_A = longA "automatic" ;
lin automatically_Adv = mkAdv "automatically" ;
lin automaton_N = mkN "automaton" "automata" ;
lin autonomous_A = longA "autonomous" ;
lin autonomy_N = mkN "autonomy" ;
lin autumn_N = mkN "autumn" ;
lin auxiliary_A = longA "auxiliary" ;
lin auxiliary_N = mkN "auxiliary" ;
lin avail_V2 = mkV2 "avail" ;
lin available_A = longA "available" ;
lin avenue_N = mkN "avenue" ;
lin average_A = longA "average" ;
lin average_N = mkN "average" ;
lin average_V2 = mkV2 "average" ;
lin avoid_V2 = mkV2 "avoid" ;
lin avoid_V2 = mkV2 "avoid" ;
lin avowed_A = longA "avowed" ;
lin await_V2 = mkV2 "await" ;
lin awaken_V2 = mkV2 "awaken" ;
lin award_V3to =mkV3 "award" "to" ;
lin awful_A = longA "awful" ;
lin awkward_A = mkA "awkward" ;
lin axe_N = mkN "axe" ;
lin axiom_N = mkN "axiom" ;
lin axiomatic_A = longA "axiomatic" ;
lin axiomatize_V2 = mkV2 "axiomatize" ;
lin axis_N = mkN "axis" "axes" ;
lin baby_N = mkN "baby" ;
lin back_N = mkN "back" ;
lin background_N = mkN "background" ;
lin backing_N = mkN "backing" ;
lin backtrack_V = mkV "backtrack" ;
lin backward_A = longA "backward" ;
lin backwards_Adv = mkAdv "backwards" ;
lin bacterial_A = longA "bacterial" ;
lin bacterium_N = mkN "bacterium" "bacteria" ;
lin bad_A = longA "bad" ;
lin bag_N = mkN "bag" ;
lin bake_V2 = mkV2 "bake" ;
lin bake_V = mkV "bake" ;
lin balance_V = mkV "balance" ;
lin ball_N = mkN "ball" ;
lin ballad_N = mkN "ballad" ;
lin banal_A = longA "banal" ;
lin banana_N = mkN "banana" ;
lin band_N = mkN "band" ;
lin bang_N = mkN "bang" ;
lin banish_V2 = mkV2 "banish" ;
lin bank_N = mkN "bank" ;
lin bar_N = mkN "bar" ;
lin bar_V2 = mkV2 "bar" ;
lin bare_A = mkA "bare" ;
lin bare_V2 = mkV2 "bare" ;
lin bark_N = mkN "bark" ;
lin bark_V = mkV "bark" ;
lin barn_N = mkN "barn" ;
lin baron_N = mkN "baron" ;
lin barrel_N = mkN "barrel" ;
lin base_N = mkN "base" ;
lin base_V3loc =mkV3 "base" "loc" ;
lin basic_A = longA "basic" ;
lin basically_Adv = mkAdv "basically" ;
lin basin_N = mkN "basin" ;
lin basis_N = mkN "basis" "basis" ;
lin basis_N2for = mkN2 (mkN "basis" "bases") "for" ;
lin basis_N2of = mkN2 (mkN "basis" "bases") "of" ;
lin basket_N = mkN "basket" ;
lin bat_N = mkN "bat" ;
lin batch_N = mkN "batch" ;
lin bath_N = mkN "bath" ;
lin bathe_V = mkV "bathe" ;
lin batsman_N = mkN "batsman" "batsmen" ;
lin battle_N = mkN "battle" ;
lin beach_N = mkN "beach" ;
lin beak_N = mkN "beak" ;
lin beam_N = mkN "beam" ;
lin bean_N = mkN "bean" ;
lin bear_N = mkN "bear" ;
lin bear_V2 = mkV2 bear_V ;
lin beard_N = mkN "beard" ;
lin beast_N = mkN "beast" ;
lin beat_V2 = mkV2 beat_V ;
lin beauty_N = mkN "beauty" ;
--lin because_Subj = mkSubj "because" ;
lin become_V2 = mkV2 become_V ;
lin bed_N = mkN "bed" ;
lin bee_N = mkN "bee" ;
lin beer_N = massN "beer" ;
lin before_Subj = mkSubj "before" ;
--lin before_Prep = mkPrep "before" ;
lin beg_V2 = mkV2 "beg" ;
lin begin_V2 = mkV2 begin_V ;
lin beginning_N = mkN "beginning" ;
lin behalf_N = mkN "behalf" "behalf" ;
lin behave_V = mkV "behave" ;
lin behaviour_N = massN "behaviour" ;
--lin behind_Prep = mkPrep "behind" ;
lin being_N = mkN "being" ;
lin belief_N = mkN "belief" ;
lin belief_N2in = mkN2 "belief" "in" ;
lin belief_N2 = mkN2 "belief" ;
lin believe_V2 = mkV2 "believe" ;
lin believe_V2in = mkV2 "believe" "in" ;
lin believe_VS = mkVS (mkV "believe") ;
lin believe_VS = mkVS (mkV "believe") ;
lin believe_VS = mkVS (mkV "believe") ;
lin bell_N = mkN "bell" ;
lin belong_V2 = mkV2 "belong" ;
lin beloved_A = longA "beloved" ;
lin beloved_A2by = longA2 "beloved" "by" ;
lin below_Prep = mkPrep "below" ;
lin belt_N = mkN "belt" ;
lin bench_N = mkN "bench" ;
lin bend_V = IrregEng.bend_V ;
lin beneath_Prep = mkPrep "beneath" ;
lin beneficial_A = longA "beneficial" ;
lin beneficial_A2to = longA2 "beneficial" "to" ;
lin benefit_N = mkN "benefit" ;
lin berry_N = mkN "berry" ;
lin beside_Prep = mkPrep "beside" ;
lin besides_Adv = mkAdv "besides" ;
lin bet_N = mkN "bet" ;
lin betray_V2 = mkV2 "betray" ;
lin beyond_Prep = mkPrep "beyond" ;
lin bias_V2 = mkV2 "bias" ;
lin bible_N = mkN "bible" ;
lin biblical_A = mkA "biblical" ;
lin bibliography_N = mkN "bibliography" ;
lin biconditional_V = mkV "biconditional" ;
lin bicycle_N = mkN "bicycle" ;
lin bidirectional_A = longA "bidirectional" ;
lin big_A = mkA "big" ;
lin bike_N = mkN "bike" ;
lin bill_N = mkN "bill" ;
lin bill_PN = regPN "bill" ;
lin billion_N2 = mkN2 "billion" ;
lin bin_N = mkN "bin" ;
lin binary_A = longA "binary" ;
lin bind_V2 = mkV2 bind_V ;
lin binding_N = mkN "binding" ;
lin bird_N = mkN "bird" ;
lin birth_N = mkN "birth" ;
lin birthday_N = mkN "birthday" ;
lin bisect_V = mkV "bisect" ;
lin bisector_N = mkN "bisector" ;
lin bit_N = mkN "bit" ;
lin bite_V2 = mkV2 bite_V ;
lin bitter_A = longA "bitter" ;
lin bizarre_A = longA "bizarre" ;
lin black_A = mkA "black" ;
lin blackboard_N = mkN "blackboard" ;
lin blade_N = mkN "blade" ;
lin blame_V3for =mkV3 "blame" "for" ;
lin blame_N = mkN "blame" ;
lin blame_N2for = mkN2 "blame" "for" ;
lin blank_A = mkA "blank" ;
lin blank_N = mkN "blank" ;
lin bleed_V = IrregEng.bleed_V ;
lin blind_A = mkA "blind" ;
lin blind_V2 = mkV2 "blind" ;
lin block_N = mkN "block" ;
lin block_V2 = mkV2 "block" ;
lin blood_N = mkN "blood" ;
lin blow_N = mkN "blow" ;
lin blow_V = IrregEng.blow_V ;
lin blue_A = mkA "blue" ;
lin bluff_V = mkV "bluff" ;
lin board_N = mkN "board" ;
lin boat_N = mkN "boat" ;
lin body_N = mkN "body" ;
lin boil_V2 = mkV2 "boil" ;
lin bold_A = mkA "bold" ;
lin bomb_N = mkN "bomb" ;
lin bomb_V2 = mkV2 "bomb" ;
lin bombard_V2 = mkV2 "bombard" ;
lin bond_N = mkN "bond" ;
lin bond_V3to =mkV3 "bond" "to" ;
lin bone_N = mkN "bone" ;
lin bonus_N = mkN "bonus" ;
lin book_N = mkN "book" ;
lin bookkeeping_N = mkN "bookkeeping" ;
lin boolean_A = longA "boolean" ;
lin boorish_A = longA "boorish" ;
lin boost_V2 = mkV2 "boost" ;
lin boot_N = mkN "boot" ;
lin bootstrap_N = mkN "bootstrap" ;
lin border_N = mkN "border" ;
lin border_V2 = mkV2 "border" ;
lin bore_N = mkN "bore" ;
lin bore_V2 = mkV2 "bore" ;
lin borrow_V3from =mkV3 "borrow" "from" ;
lin boss_N = mkN "boss" ;
lin bother_V2 = mkV2 "bother" ;
lin bother_V2about = mkV2 "bother" "about" ;
lin bottle_N = mkN "bottle" ;
lin bottom_N = mkN "bottom" ;
lin bough_N = mkN "bough" ;
lin bound_A2for = longA2 "bound" "for" ;
lin bound_V = mkV "bound" ;
lin boundary_N = mkN "boundary" ;
lin bounded_A = longA "bounded" ;
lin bow_N = mkN "bow" ;
lin bowl_N = mkN "bowl" ;
lin box_N = mkN "box" ;
lin boy_N = mkN "boy" ;
lin brace_N = mkN "brace" ;
lin bracket_N = mkN "bracket" ;
lin bracket_V2 = mkV2 "bracket" ;
lin brain_N = mkN "brain" ;
lin branch_V = mkV "branch" ;
lin brand_N = mkN "brand" ;
lin brandy_N = mkN "brandy" ;
lin brass_N = mkN "brass" ;
lin brave_A = mkA "brave" ;
lin breach_N = mkN "breach" ;
lin breach_V2 = mkV2 "breach" ;
lin bread_N = mkN "bread" ;
lin breadth_N = mkN "breadth" ;
lin break_N = mkN "break" ;
lin break_V2 = mkV2 break_V ;
lin breakage_N = mkN "breakage" ;
lin breakfast_N = mkN "breakfast" ;
lin breath_N = mkN "breath" ;
lin breathe_V = mkV "breathe" ;
lin breed_V = mkV "breed" ;
lin breed_N = mkN "breed" ;
lin breeze_N = mkN "breeze" ;
lin brew_V2 = mkV2 "brew" ;
lin brick_N = mkN "brick" ;
lin bridge_N = mkN "bridge" ;
lin bridge_V2 = mkV2 "bridge" ;
lin brief_A = mkA "brief" ;
lin bright_A = mkA "bright" ;
lin brilliant_A = mkA "brilliant" ;
lin bring_V2 = mkV2 bring_V ;
lin bristle_N = mkN "bristle" ;
lin britain_PN = regPN "britain" ;
lin british_A = longA "british" ;
lin broach_V2 = mkV2 "broach" ;
lin broad_A = mkA "broad" ;
lin broadcast_N = mkN "broadcast" ;
lin bronchitis_N = mkN "bronchitis" ;
lin brother_N = mkN "brother" ;
lin brother_N2of = mkN2 "brother" "of" ;
lin brown_A = mkA "brown" ;
lin bruise_N = mkN "bruise" ;
lin bruise_V2 = mkV2 "bruise" ;
lin brute_N = mkN "brute" ;
lin bucket_N = mkN "bucket" ;
lin bud_N = mkN "bud" ;
lin bud_V = mkV "bud" ;
lin buffer_N = mkN "buffer" ;
lin buffer_V2 = mkV2 "buffer" ;
lin bug_N = mkN "bug" ;
lin build_V2 = mkV2 build_V ;
lin building_N = mkN "building" ;
lin bullet_N = mkN "bullet" ;
lin bully_N = mkN "bully" ;
lin bully_V2 = mkV2 "bully" ;
lin bun_N = mkN "bun" ;
lin bunch_N = mkN "bunch" ;
lin bundle_N = mkN "bundle" ;
lin burden_N = mkN "burden" ;
lin burn_V2 = mkV2 burn_V ;
lin burst_V = IrregEng.burst_V ;
lin bury_V2 = mkV2 "bury" ;
lin bus_N = mkN "bus" ;
lin bush_N = mkN "bush" ;
lin business_N = mkN "business" ;
lin busy_A = mkA "busy" ;
lin butter_N = massN "butter" ;
lin butter_V2 = mkV2 "butter" ;
lin butterfly_N = mkN "butterfly" ;
lin button_N = mkN "button" ;
lin buy_V2 = mkV2 buy_V ;
lin buzz_V = mkV "buzz" ;
lin by_Prep = mkPrep "by" ;
lin cabinet_N = mkN "cabinet" ;
lin cable_N = mkN "cable" ;
lin cage_N = mkN "cage" ;
lin cake_N = mkN "cake" ;
lin calculate_V2 = mkV2 "calculate" ;
lin calculus_N = mkN "calculus" ;
lin call_N = mkN "call" ;
lin call_V2 = mkV2 "call" ;
lin calm_A = mkA "calm" ;
lin cam_N = mkN "cam" ;
lin cambridge_PN = regPN "cambridge" ;
lin camel_N = mkN "camel" ;
lin camera_N = mkN "camera" ;
lin camp_N = mkN "camp" ;
lin campaign_N = mkN "campaign" ;
lin can_N = mkN "can" ;
lin can_V2 = mkV2 "can" ;
lin canada_PN = regPN "canada" ;
lin canadian_A = mkA "canadian" ;
lin cancel_V2 = mkV2 "cancel" ;
lin cancer_N = mkN "cancer" ;
lin candid_A = longA "candid" ;
lin candidate_N = mkN "candidate" ;
lin candle_N = mkN "candle" ;
lin cannon_N = mkN "cannon" ;
lin canonical_A = longA "canonical" ;
lin cap_N = mkN "cap" ;
lin capable_A = longA "capable" ;
lin capable_A2of = longA2 "capable" "of" ;
lin capacity_N = mkN "capacity" ;
lin capital_N = mkN "capital" ;
lin captain_N = mkN "captain" ;
lin captain_N2 = mkN2 "captain" ;
lin capture_V2 = mkV2 "capture" ;
lin car_N = mkN "car" ;
lin card_N = mkN "card" ;
lin cardboard_N = massN "cardboard" ;
lin cardinal_A = longA "cardinal" ;
lin cardinal_N = mkN "cardinal" ;
lin care_V = mkV "care" ;
lin care_N = massN "care" ;
lin career_N = mkN "career" ;
lin carriage_N = mkN "carriage" ;
lin carry_V2 = mkV2 "carry" ;
lin cart_N = mkN "cart" ;
lin cartesian_A = longA "cartesian" ;
lin carve_V2 = mkV2 "carve" ;
lin case_N = mkN "case" ;
lin cash_N = mkN "cash" ;
lin cast_N = mkN "cast" ;
lin cast_V2 = mkV2 cast_V ;
lin castle_N = mkN "castle" ;
lin casual_A = longA "casual" ;
lin cat_N = mkN "cat" ;
lin catch_N = mkN "catch" ;
lin catch_V2 = mkV2 catch_V ;
lin categorical_A = longA "categorical" ;
lin category_N = mkN "category" ;
lin cater_V2for = mkV2 "cater" "for" ;
lin cause_N = mkN "cause" ;
lin cause_V2 = mkV2 "cause" ;
lin caution_N = massN "caution" ;
lin cautious_A = longA "cautious" ;
lin cave_N = mkN "cave" ;
lin caviar_N = mkN "caviar" ;
lin cease_V = mkV "cease" ;
lin ceiling_N = mkN "ceiling" ;
lin cell_N = mkN "cell" ;
lin cellar_N = mkN "cellar" ;
lin cement_N = mkN "cement" ;
--lin cement_N = massN "cement" ;
lin census_N = mkN "census" ;
lin cent_N = mkN "cent" ;
lin centaur_N = mkN "centaur" ;
lin center_N = mkN "center" ;
lin centre_N = mkN "centre" ;
lin centre_V2 = mkV2 "centre" ;
lin century_N = mkN "century" ;
lin ceremonial_A = longA "ceremonial" ;
lin ceremony_N = mkN "ceremony" ;
lin certain_A = longA "certain" ;
lin certain_A2of = longA2 "certain" "of" ;
lin certain_A2 = longA2 "certain" "" ;
lin certainty_N = mkN "certainty" ;
lin certainty_N2 = mkN2 "certainty" ;
lin certify_V2 = mkV2 "certify" ;
lin certitude_N = mkN "certitude" ;
lin chain_N = mkN "chain" ;
lin chain_V3to =mkV3 "chain" "to" ;
lin chair_N = mkN "chair" ;
lin chairman_N = mkN "chairman" "chairmen" ;
lin chairwoman_N = mkN "chairwoman" "chairwomen" ;
lin chalk_N = massN "chalk" ;
lin challenge_N = mkN "challenge" ;
lin challenge_N2to = mkN2 "challenge" "to" ;
lin chance_N = mkN "chance" ;
lin chancellor_N = mkN "chancellor" ;
lin change_V = mkV "change" ;
lin change_N = mkN "change" ;
lin change_V2 = mkV2 "change" ;
lin channel_N = mkN "channel" ;
lin chap_N = mkN "chap" ;
lin chapter_N = mkN "chapter" ;
lin char_V = mkV "char" ;
lin character_N = mkN "character" ;
lin characteristic_N = mkN "characteristic" ;
lin characteristic_A = longA "characteristic" ;
lin characteristic_A2of = longA2 "characteristic" "of" ;
lin characteristically_A = longA "characteristically" ;
lin characterize_V3_pred =mkV3 "characterize" "_pred" ;
lin charge_N = mkN "charge" ;
lin charge_V3with =mkV3 "charge" "with" ;
lin charitable_A = longA "charitable" ;
lin charity_N = mkN "charity" ;
lin charm_N = mkN "charm" ;
lin charm_V2 = mkV2 "charm" ;
lin charming_A = longA "charming" ;
lin chart_N = mkN "chart" ;
lin chase_V2 = mkV2 "chase" ;
lin chaste_A = mkA "chaste" ;
lin cheap_A = mkA "cheap" ;
lin cheat_N = mkN "cheat" ;
lin cheat_V2 = mkV2 "cheat" ;
lin check_N = mkN "check" ;
lin check_V2 = mkV2 "check" ;
lin checkmate_N = mkN "checkmate" ;
lin cheek_N = mkN "cheek" ;
lin cheer_V = mkV "cheer" ;
lin cheer_N = mkN "cheer" ;
lin cheerful_A = longA "cheerful" ;
lin cheese_N = massN "cheese" ;
lin chemical_A = mkA "chemical" ;
lin chemist_N = mkN "chemist" ;
lin chemistry_N = mkN "chemistry" "chemistry" ;
lin cheque_N = mkN "cheque" ;
lin chequered_A = longA "chequered" ;
lin chess_N = massN "chess" ;
lin chest_N = mkN "chest" ;
lin chicken_N = mkN "chicken" ;
lin chief_N = mkN "chief" ;
lin child_N = mkN "child" "child" ;
lin chimney_N = mkN "chimney" ;
lin chin_N = mkN "chin" ;
lin china_PN = regPN "china" ;
lin chinaman_N = mkN "chinaman" ;
lin chinese_A = longA "chinese" ;
lin chocolate_N = massN "chocolate" ;
lin choice_N = mkN "choice" ;
lin choose_V2 = mkV2 choose_V ;
lin christian_N = mkN "christian" ;
lin christmas_N = mkN "christmas" ;
lin chronic_A = longA "chronic" ;
lin chronology_N = mkN "chronology" ;
lin chunk_N = mkN "chunk" ;
lin church_N = mkN "church" ;
lin churn_N = mkN "churn" ;
lin churn_V2 = mkV2 "churn" ;
lin churn_V = mkV "churn" ;
lin cigar_N = mkN "cigar" ;
lin cigarette_N = mkN "cigarette" ;
lin cinema_N = mkN "cinema" ;
lin circle_N = mkN "circle" ;
lin circuit_N = mkN "circuit" ;
lin circular_A = longA "circular" ;
lin circulate_V = mkV "circulate" ;
lin circumscribe_V2 = mkV2 "circumscribe" ;
lin circumstance_N = mkN "circumstance" ;
lin circumvent_V = mkV "circumvent" ;
lin cite_V2 = mkV2 "cite" ;
lin citizen_N = mkN "citizen" ;
lin city_N = mkN "city" ;
lin civilize_V2 = mkV2 "civilize" ;
lin clad_A = longA "clad" ;
lin clad_A2in = longA2 "clad" "in" ;
lin claim_VS = mkVS (mkV "claim") ;
lin claim_N2 = mkN2 "claim" ;
lin clan_N = mkN "clan" ;
lin clap_V = mkV "clap" ;
lin clap_N = mkN "clap" ;
lin clarify_V2 = mkV2 "clarify" ;
lin clarity_N = mkN "clarity" ;
lin clash_V2with = mkV2 "clash" "with" ;
lin class_N = mkN "class" ;
lin class_V3_pred =mkV3 "class" "_pred" ;
lin classic_A = longA "classic" ;
lin classify_V2 = mkV2 "classify" ;
lin clause_N = mkN "clause" ;
lin clay_N = massN "clay" ;
lin clean_A = mkA "clean" ;
lin clean_V2 = mkV2 "clean" ;
lin clear_V2 = mkV2 "clear" ;
lin clear_A = mkA "clear" ;
lin clear_A2 = mkA2 "clear" "" ;
--lin cleave_V2 = mkV2 cleave_V ;
lin cleaver_N = mkN "cleaver" ;
lin cleft_N = mkN "cleft" ;
lin clerk_N = mkN "clerk" ;
lin clever_A = mkA "clever" ;
lin client_N = mkN "client" ;
lin cliff_N = mkN "cliff" ;
lin climate_N = mkN "climate" ;
lin climax_N = mkN "climax" ;
lin climb_V2 = mkV2 "climb" ;
lin clinic_N = mkN "clinic" ;
lin clip_N = mkN "clip" ;
lin clitic_N = mkN "clitic" ;
lin clock_N = mkN "clock" ;
lin clog_N = mkN "clog" ;
lin close_V2 = mkV2 "close" ;
lin close_A = mkA "close" ;
lin close_A2to = mkA2 "close" "to" ;
lin closet_N = mkN "closet" ;
lin closure_N = mkN "closure" ;
lin cloth_N = mkN "cloth" ;
lin clothe_V2 = mkV2 "clothe" ;
lin clothing_N = mkN "clothing" ;
lin cloud_N = mkN "cloud" ;
lin clove_V2 = mkV2 "clove" ;
lin club_N = mkN "club" ;
lin clue_N = mkN "clue" ;
lin clumsy_A = mkA "clumsy" ;
lin clutter_N = mkN "clutter" ;
lin coach_N = mkN "coach" ;
lin coach_V2 = mkV2 "coach" ;
lin coal_N = massN "coal" ;
lin coalesce_V = mkV "coalesce" ;
lin coarse_A = mkA "coarse" ;
lin coast_N = mkN "coast" ;
lin coast_V2 = mkV2 "coast" ;
lin coaster_N = mkN "coaster" ;
lin coat_N = mkN "coat" ;
lin cocktail_N = mkN "cocktail" ;
lin cocoa_N = massN "cocoa" ;
lin coconut_N = mkN "coconut" ;
lin code_N = mkN "code" ;
lin code_V2 = mkV2 "code" ;
lin coefficient_N = mkN "coefficient" ;
lin coerce_V2 = mkV2 "coerce" ;
lin coffee_N = massN "coffee" ;
lin cog_N = mkN "cog" ;
lin cognition_N = mkN "cognition" ;
lin cognitive_A = longA "cognitive" ;
lin coherence_N = massN "coherence" ;
lin coherent_A = longA "coherent" ;
lin coin_N = mkN "coin" ;
lin coincide_V2with = mkV2 "coincide" "with" ;
lin coincidence_N = mkN "coincidence" ;
lin coincidental_A = longA "coincidental" ;
lin cold_A = mkA "cold" ;
lin cold_N = mkN "cold" ;
lin collaborate_V = mkV "collaborate" ;
lin collapse_N = mkN "collapse" ;
lin collapse_V = mkV "collapse" ;
lin collar_N = mkN "collar" ;
lin colleague_N = mkN "colleague" ;
lin collect_V3from =mkV3 "collect" "from" ;
lin college_N = mkN "college" ;
lin collide_V = mkV "collide" ;
lin collinear_A = longA "collinear" ;
lin collision_N = mkN "collision" ;
lin colon_N = mkN "colon" ;
lin colony_N = mkN "colony" ;
lin colour_N = mkN "colour" ;
lin colour_V2 = mkV2 "colour" ;
lin column_N = mkN "column" ;
lin comb_N = mkN "comb" ;
lin combat_N = mkN "combat" ;
lin combinator_N = mkN "combinator" ;
lin combine_V3with =mkV3 "combine" "with" ;
lin come_V2 = mkV2 come_V ;
lin comedy_N = mkN "comedy" ;
lin comfort_N = mkN "comfort" ;
lin comfort_V2 = mkV2 "comfort" ;
lin comfortable_A = longA "comfortable" ;
lin comma_N = mkN "comma" ;
lin command_N = mkN "command" ;
lin command_V2 = mkV2 "command" ;
lin commence_V = mkV "commence" ;
lin comment_N = mkN "comment" ;
lin comment_V2on = mkV2 "comment" "on" ;
lin commerce_N = mkN "commerce" ;
lin commercial_N = mkN "commercial" ;
lin commission_V2 = mkV2 "commission" ;
lin commission_N = mkN "commission" ;
lin commit_V = mkV "commit" ;
lin committee_N = mkN "committee" ;
lin commodity_N = mkN "commodity" ;
lin common_A = mkA "common" ;
lin commonsense_A = longA "commonsense" ;
lin commonwealth_N = mkN "commonwealth" ;
lin commune_N = mkN "commune" ;
lin communicate_V2with = mkV2 "communicate" "with" ;
lin community_N = mkN "community" ;
lin commutative_A = longA "commutative" ;
lin commutator_N = mkN "commutator" ;
lin compact_A = longA "compact" ;
lin companion_N = mkN "companion" ;
lin company_N = mkN "company" ;
lin comparative_A = longA "comparative" ;
lin comparative_N = mkN "comparative" ;
lin compare_V3with =mkV3 "compare" "with" ;
lin comparison_N2of_ppwith = mkN2 "comparison" "of_ppwith" ;
lin compass_V = mkV "compass" ;
lin compatible_A = longA "compatible" ;
lin compatible_A2with = longA2 "compatible" "with" ;
lin compel_V2 = mkV2 "compel" ;
lin compensate_V2for = mkV2 "compensate" "for" ;
lin compete_V2with = mkV2 "compete" "with" ;
lin competence_N = mkN "competence" ;
lin competent_A = longA "competent" ;
lin competition_N = mkN "competition" ;
lin competitor_N = mkN "competitor" ;
lin compile_V2 = mkV2 "compile" ;
lin complain_V2about = mkV2 "complain" "about" ;
lin complaint_N2about = mkN2 "complaint" "about" ;
lin complement_N = mkN "complement" ;
lin complement_V2 = mkV2 "complement" ;
lin complementary_A = longA "complementary" ;
lin complementary_A2to = longA2 "complementary" "to" ;
lin complete_A = longA "complete" ;
lin complete_V2 = mkV2 "complete" ;
lin complex_A = longA "complex" ;
lin complex_N = mkN "complex" ;
lin complicate_V2 = mkV2 "complicate" ;
lin compliment_N = mkN "compliment" ;
lin compliment_V2 = mkV2 "compliment" ;
lin comply_V2with = mkV2 "comply" "with" ;
lin component_N = mkN "component" ;
lin compose_V2 = mkV2 "compose" ;
lin composite_A = longA "composite" ;
lin composition_N = mkN "composition" ;
lin compound_A = longA "compound" ;
lin compound_N = mkN "compound" ;
lin compound_V2 = mkV2 "compound" ;
lin comprehend_V2 = mkV2 "comprehend" ;
lin comprehensible_A = longA "comprehensible" ;
lin comprehensible_A2to = longA2 "comprehensible" "to" ;
lin comprehension_N = mkN "comprehension" ;
lin comprehensive_A = longA "comprehensive" ;
lin compress_V2 = mkV2 "compress" ;
lin comprise_V2 = mkV2 "comprise" ;
lin compromise_V = mkV "compromise" ;
lin compute_V2 = mkV2 "compute" ;
lin computer_N = mkN "computer" ;
lin concatenate_V2 = mkV2 "concatenate" ;
lin concave_A = mkA "concave" ;
lin conceal_V2 = mkV2 "conceal" ;
lin concede_VS = mkVS (mkV "concede") ;
lin conceive_V2of = mkV2 "conceive" "of" ;
lin concentrate_V2 = mkV2 "concentrate" ;
lin concept_N = mkN "concept" ;
lin conception_N = mkN "conception" ;
lin conceptual_A = longA "conceptual" ;
lin concern_N = mkN "concern" ;
lin concern_V2 = mkV2 "concern" ;
lin concerning_Prep = mkPrep "concerning" ;
lin concert_N = mkN "concert" ;
lin concerted_A = longA "concerted" ;
lin concession_N = mkN "concession" ;
lin concise_A = longA "concise" ;
lin conclude_VS = mkVS (mkV "conclude") ;
lin conclusion_N2 = mkN2 "conclusion" ;
lin conclusive_A = longA "conclusive" ;
lin concomitant_A = longA "concomitant" ;
lin concrete_A = longA "concrete" ;
lin concrete_N = massN "concrete" ;
lin concur_V = mkV "concur" ;
lin concurrent_A = longA "concurrent" ;
lin condemn_V2 = mkV2 "condemn" ;
lin condition_N = mkN "condition" ;
lin condition_V2 = mkV2 "condition" ;
lin conditional_N = mkN "conditional" ;
lin conducive_A2to = mkA2 "conducive" "to" ;
lin conduct_N = mkN "conduct" ;
lin conduct_V2 = mkV2 "conduct" ;
lin confer_V2with = mkV2 "confer" "with" ;
lin conference_N = mkN "conference" ;
lin confess_VS = mkVS (mkV "confess") ;
lin confidence_N = mkN "confidence" ;
lin confident_A = longA "confident" ;
lin configure_V2 = mkV2 "configure" ;
lin confine_V3to =mkV3 "confine" "to" ;
lin confirm_V2 = mkV2 "confirm" ;
lin conflate_V2 = mkV2 "conflate" ;
lin conflict_V2with = mkV2 "conflict" "with" ;
lin confluence_N = mkN "confluence" ;
lin confluent_A = longA "confluent" ;
lin conform_V2to = mkV2 "conform" "to" ;
lin confound_V2 = mkV2 "confound" ;
lin confounded_A = longA "confounded" ;
lin confront_V3with =mkV3 "confront" "with" ;
lin confuse_V2 = mkV2 "confuse" ;
lin congruence_N = mkN "congruence" ;
lin congruent_A = longA "congruent" ;
lin conjecture_VS = mkVS (mkV "conjecture") ;
lin conjoin_V2 = mkV2 "conjoin" ;
lin conjunct_N = mkN "conjunct" ;
lin conjunction_N = mkN "conjunction" ;
lin conjunctive_A = longA "conjunctive" ;
lin connect_V2 = mkV2 "connect" ;
lin connective_N = mkN "connective" ;
lin conquer_V2 = mkV2 "conquer" ;
lin conqueror_N = mkN "conqueror" ;
lin conquest_N = mkN "conquest" ;
lin conscience_N = mkN "conscience" "conscience" ;
lin conscious_A = longA "conscious" ;
lin conscious_A2of = longA2 "conscious" "of" ;
lin consecutive_A = longA "consecutive" ;
lin consensus_N = mkN "consensus" ;
lin consequence_N = mkN "consequence" ;
lin consequent_A = longA "consequent" ;
lin conservative_A = longA "conservative" ;
lin conserve_V2 = mkV2 "conserve" ;
lin consider_V2 = mkV2 "consider" ;
lin consider_V3 =mkV3 "consider" ;
lin consider_V2 = mkV2 "consider" ;
lin consider_V2 = mkV2 "consider" ;
lin considerate_A = longA "considerate" ;
lin consist_V2of = mkV2 "consist" "of" ;
lin consistency_N = mkN "consistency" ;
lin consistent_A = longA "consistent" ;
lin consistent_A2with = longA2 "consistent" "with" ;
lin consonant_A = longA "consonant" ;
lin consonant_A2with = longA2 "consonant" "with" ;
lin consonant_N = mkN "consonant" ;
lin constant_A = longA "constant" ;
lin constant_N = mkN "constant" ;
lin constellation_N = mkN "constellation" ;
lin constituency_N = mkN "constituency" ;
lin constituent_N = mkN "constituent" ;
lin constitute_V2 = mkV2 "constitute" ;
lin constrain_V2 = mkV2 "constrain" ;
lin constraint_N = mkN "constraint" ;
lin constrict_V2 = mkV2 "constrict" ;
lin construct_V2 = mkV2 "construct" ;
lin constructor_N = mkN "constructor" ;
lin construe_V3_pred =mkV3 "construe" "_pred" ;
lin consult_V2 = mkV2 "consult" ;
lin consume_V2 = mkV2 "consume" ;
lin consumption_N = mkN "consumption" "consumption" ;
lin contact_N = mkN "contact" ;
lin contact_V2 = mkV2 "contact" ;
lin contagion_N = mkN "contagion" ;
lin contagious_A = longA "contagious" ;
lin contain_V2 = mkV2 "contain" ;
lin contaminate_V2 = mkV2 "contaminate" ;
lin contemplate_V2 = mkV2 "contemplate" ;
lin contemporary_A = longA "contemporary" ;
lin contemporary_N = mkN "contemporary" ;
lin contend_VS = mkVS (mkV "contend") ;
lin content_A = longA "content" ;
lin content_A2with = longA2 "content" "with" ;
lin contented_A = longA "contented" ;
lin contented_A2with = longA2 "contented" "with" ;
lin contention_N2 = mkN2 "contention" ;
lin context_N = mkN "context" ;
lin contextual_A = longA "contextual" ;
lin contiguous_A = longA "contiguous" ;
lin contiguous_A2to = longA2 "contiguous" "to" ;
lin contingency_N = mkN "contingency" ;
lin contingent_A = longA "contingent" ;
lin contingent_A2on = longA2 "contingent" "on" ;
lin continual_A = longA "continual" ;
lin continue_V2 = mkV2 "continue" ;
lin continue_V2 = mkV2 "continue" ;
lin continuity_N = mkN "continuity" ;
lin continuous_A = longA "continuous" ;
lin continuum_N = mkN "continuum" ;
lin contour_N = mkN "contour" ;
lin contract_V = mkV "contract" ;
lin contract_N = mkN "contract" ;
lin contradict_V2 = mkV2 "contradict" ;
lin contrary_A = longA "contrary" ;
lin contrary_A2to = longA2 "contrary" "to" ;
lin contrast_N = mkN "contrast" ;
lin contrast_V3with =mkV3 "contrast" "with" ;
lin contrastive_A = longA "contrastive" ;
lin contravene_V2 = mkV2 "contravene" ;
lin contribute_V2to = mkV2 "contribute" "to" ;
lin control_N = mkN "control" ;
lin control_V2 = mkV2 "control" ;
lin controversial_A = longA "controversial" ;
lin controversy_N = mkN "controversy" ;
lin convenience_N = mkN "convenience" ;
lin convenient_A = longA "convenient" ;
lin convention_N = mkN "convention" ;
lin converge_V = mkV "converge" ;
lin convergence_N = mkN "convergence" ;
lin conversation_N = mkN "conversation" ;
lin converse_A = longA "converse" ;
lin converse_V2with = mkV2 "converse" "with" ;
lin conversion_N = mkN "conversion" ;
lin convert_V3to =mkV3 "convert" "to" ;
lin convey_V2 = mkV2 "convey" ;
lin convict_N = mkN "convict" ;
lin convict_V2 = mkV2 "convict" ;
lin conviction_N = mkN "conviction" ;
lin convince_V3 =mkV3 "convince" ;
lin convincing_A = longA "convincing" ;
lin convoluted_A = longA "convoluted" ;
lin cook_N = mkN "cook" ;
lin cook_V2 = mkV2 "cook" ;
lin cool_A = mkA "cool" ;
lin cool_V = mkV "cool" ;
lin coordinate_V2 = mkV2 "coordinate" ;
lin cope_V2with = mkV2 "cope" "with" ;
lin copper_N = massN "copper" ;
lin copula_N = mkN "copula" ;
lin copy_N = mkN "copy" ;
lin copy_V2 = mkV2 "copy" ;
lin copyright_N = mkN "copyright" ;
lin cord_N = mkN "cord" ;
lin corn_N = massN "corn" ;
lin corner_N = mkN "corner" ;
lin corporation_N = mkN "corporation" ;
lin corpus_N = mkN "corpus" "corpus" ;
lin correct_A = longA "correct" ;
lin correct_V2 = mkV2 "correct" ;
lin correlate_V2 = mkV2 "correlate" ;
lin correspond_V2to = mkV2 "correspond" "to" ;
lin correspondence_N2to = mkN2 "correspondence" "to" ;
lin corresponding_A = longA "corresponding" ;
lin cosmetic_A = longA "cosmetic" ;
lin cost_N = mkN "cost" ;
lin cost_V2 = mkV2 "cost" ;
lin costly_A = mkA "costly" ;
lin costume_N = mkN "costume" ;
lin cotton_N = massN "cotton" ;
lin cough_V = mkV "cough" ;
lin cough_N = mkN "cough" ;
lin council_N = mkN "council" ;
lin councillor_N = mkN "councillor" ;
lin count_V2 = mkV2 "count" ;
lin counterfactual_A = longA "counterfactual" ;
lin counterintuitive_A = longA "counterintuitive" ;
lin country_N = mkN "country" ;
lin county_N = mkN "county" ;
lin couple_N = mkN "couple" ;
lin couple_V2 = mkV2 "couple" ;
lin courage_N = mkN "courage" ;
lin course_N = mkN "course" ;
lin court_N = mkN "court" ;
lin court_V2 = mkV2 "court" ;
lin court_V = mkV "court" ;
lin courteous_A = longA "courteous" ;
lin courtesy_N = mkN "courtesy" ;
lin cover_N = mkN "cover" ;
lin cover_V2 = mkV2 "cover" ;
lin covert_A = longA "covert" ;
lin cow_N = mkN "cow" ;
lin coward_N = mkN "coward" ;
lin crab_N = mkN "crab" ;
lin crack_N = mkN "crack" ;
lin crack_V2 = mkV2 "crack" ;
lin craft_N = mkN "craft" ;
lin crafty_A = mkA "crafty" ;
lin crag_N = mkN "crag" ;
lin crash_V = mkV "crash" ;
lin crate_N = mkN "crate" ;
lin crater_N = mkN "crater" ;
lin crave_V2 = mkV2 "crave" ;
lin crawl_V = mkV "crawl" ;
lin crayfish_N = mkN "crayfish" ;
lin crayon_N = mkN "crayon" ;
lin craze_N = mkN "craze" ;
lin crazy_A = mkA "crazy" ;
lin cream_N = mkN "cream" ;
lin create_V2 = mkV2 "create" ;
lin creator_N = mkN "creator" ;
lin creature_N = mkN "creature" ;
lin credit_N = mkN "credit" ;
lin creep_V2 = mkV2 creep_V ;
lin cricket_N = mkN "cricket" ;
lin crime_N = mkN "crime" ;
lin criminal_A = longA "criminal" ;
lin criminal_N = mkN "criminal" ;
lin crisis_N = mkN "crisis" "crisis" ;
lin criterion_N2for = mkN2 (mkN "criterion" "criterion") "for" ;
lin critic_N2of = mkN2 "critic" "of" ;
lin criticise_V2 = mkV2 "criticise" ;
lin criticism_N = mkN "criticism" ;
lin criticize_V2 = mkV2 "criticize" ;
lin critique_N = mkN "critique" ;
lin crochet_N = mkN "crochet" ;
lin crochet_V2 = mkV2 "crochet" ;
lin crochet_V = mkV "crochet" ;
lin crop_N = mkN "crop" ;
lin crop_V2 = mkV2 "crop" ;
lin cross_A = mkA "cross" ;
lin cross_N = mkN "cross" ;
lin cross_V2 = mkV2 "cross" ;
lin crow_V = mkV "crow" ;
lin crow_N = mkN "crow" ;
lin crowd_N = mkN "crowd" ;
lin crown_N = mkN "crown" ;
lin crown_V2 = mkV2 "crown" ;
lin crucial_A = longA "crucial" ;
lin crude_A = mkA "crude" ;
lin cruel_A = mkA "cruel" ;
lin cruel_A2to = mkA2 "cruel" "to" ;
lin cruelty_N2to = mkN2 "cruelty" "to" ;
lin crush_V2 = mkV2 "crush" ;
lin cry_V = mkV "cry" ;
lin cry_N = mkN "cry" ;
lin cub_N = mkN "cub" ;
lin cube_N = mkN "cube" ;
lin cubic_A = longA "cubic" ;
lin cue_N = mkN "cue" ;
lin cue_V2 = mkV2 "cue" ;
lin culprit_N = mkN "culprit" ;
lin cultivate_V2 = mkV2 "cultivate" ;
lin culture_N = mkN "culture" ;
lin cumbersome_A = longA "cumbersome" ;
lin cumulative_A = longA "cumulative" ;
lin cunning_A = longA "cunning" ;
lin cup_N = mkN "cup" ;
lin cupboard_N = mkN "cupboard" ;
lin curb_V2 = mkV2 "curb" ;
lin cure_N = mkN "cure" ;
lin cure_V3of =mkV3 "cure" "of" ;
lin curiosity_N = mkN "curiosity" ;
lin curious_A = longA "curious" ;
lin curl_V = mkV "curl" ;
lin curl_N = mkN "curl" ;
lin current_A = longA "current" ;
lin current_N = mkN "current" ;
lin curriculum_N = mkN "curriculum" ;
lin curse_N = mkN "curse" ;
lin curse_V2 = mkV2 "curse" ;
lin curtain_N = mkN "curtain" ;
lin curvature_N = mkN "curvature" ;
lin curve_V = mkV "curve" ;
lin curve_N = mkN "curve" ;
lin custard_N = massN "custard" ;
lin custom_N = mkN "custom" ;
lin cut_N = mkN "cut" ;
lin cut_V2 = mkV2 cut_V ;
lin cycle_V = mkV "cycle" ;
lin cyclic_A = longA "cyclic" ;
lin cynic_N = mkN "cynic" ;
lin dagger_N = mkN "dagger" ;
lin daily_A = longA "daily" ;
lin damage_N = mkN "damage" ;
lin damage_V2 = mkV2 "damage" ;
lin dance_N = mkN "dance" ;
lin dance_V = mkV "dance" ;
lin danger_N = mkN "danger" ;
lin dangle_V = mkV "dangle" ;
lin dare_V2 = mkV2 "dare" ;
lin dare_VV = mkVV (mkV "dare") ;
lin dark_N = mkN "dark" ;
lin dark_A = mkA "dark" ;
lin darken_V2 = mkV2 "darken" ;
lin darken_V = mkV "darken" ;
lin database_N = mkN "database" ;
lin date_N = mkN "date" ;
lin dative_A = longA "dative" ;
lin datum_N = mkN "datum" "datum" ;
lin daughter_N2of = mkN2 "daughter" "of" ;
lin day_N = mkN "day" ;
lin dead_A = mkA "dead" ;
lin deaf_A = mkA "deaf" ;
lin deal_N = mkN "deal" ;
lin deal_V2with = mkV2 deal_V "with" ;
lin dear_A = mkA "dear" ;
lin dear_A2to = mkA2 "dear" "to" ;
lin death_N = mkN "death" ;
lin debate_N = mkN "debate" ;
lin debate_V2 = mkV2 "debate" ;
lin debt_N = mkN "debt" ;
lin debtor_N = mkN "debtor" ;
lin debug_V2 = mkV2 "debug" ;
lin decade_N = mkN "decade" ;
lin decay_V = mkV "decay" ;
lin deceive_V2 = mkV2 "deceive" ;
lin december_PN = regPN "december" ;
lin deception_N = mkN "deception" ;
lin deceptive_A = longA "deceptive" ;
lin decide_VV = mkVV (mkV "decide") ;
lin decimal_A = longA "decimal" ;
lin decimal_N = mkN "decimal" ;
lin decision_N2 = mkN2 "decision" ;
lin decisive_A = longA "decisive" ;
lin declare_V2 = mkV2 "declare" ;
lin declare_VS = mkVS (mkV "declare") ;
lin decompose_V = mkV "decompose" ;
lin decomposition_N = mkN "decomposition" ;
lin decrease_V = mkV "decrease" ;
lin decrease_N2in = mkN2 "decrease" "in" ;
lin decrement_V2 = mkV2 "decrement" ;
lin dedicate_V3to =mkV3 "dedicate" "to" ;
lin deduce_VS = mkVS (mkV "deduce") ;
lin deducible_A = longA "deducible" ;
lin deed_N = mkN "deed" ;
lin deep_A = mkA "deep" ;
lin deer_N = mkN "deer" ;
lin defeat_N = mkN "defeat" ;
lin defeat_V2 = mkV2 "defeat" ;
lin defect_N = mkN "defect" ;
lin defect_V = mkV "defect" ;
lin defence_N = mkN "defence" ;
lin defend_V2 = mkV2 "defend" ;
lin defense_N = mkN "defense" ;
lin defensible_A = longA "defensible" ;
lin defer_V2 = mkV2 "defer" ;
lin deficiency_N = mkN "deficiency" ;
lin deficient_A = longA "deficient" ;
lin define_V2 = mkV2 "define" ;
lin definite_A = mkA "definite" ;
lin definition_N = mkN "definition" ;
lin definitive_A = longA "definitive" ;
lin deform_V2 = mkV2 "deform" ;
lin defy_V2 = mkV2 "defy" ;
lin degrade_V2 = mkV2 "degrade" ;
lin degree_N = mkN "degree" ;
lin delay_N = mkN "delay" ;
lin delay_V2 = mkV2 "delay" ;
lin delete_V2 = mkV2 "delete" ;
lin deliberate_A = longA "deliberate" ;
lin delicacy_N = mkN "delicacy" ;
lin delicate_A = longA "delicate" ;
lin delight_N = mkN "delight" ;
lin delight_V2 = mkV2 "delight" ;
lin delimit_V2 = mkV2 "delimit" ;
lin delineate_V2 = mkV2 "delineate" ;
lin deliver_V2 = mkV2 "deliver" ;
lin delve_V = mkV "delve" ;
lin demand_N = mkN "demand" ;
lin demand_V2 = mkV2 "demand" ;
lin demonstrate_VS = mkVS (mkV "demonstrate") ;
lin denial_N = mkN "denial" ;
lin denote_V2 = mkV2 "denote" ;
lin dense_A = mkA "dense" ;
lin deny_V2 = mkV2 "deny" ;
lin depart_V2from = mkV2 "depart" "from" ;
lin department_N = mkN "department" ;
lin departure_N = mkN "departure" ;
lin depend_V2on = mkV2 "depend" "on" ;
lin dependence_N2on = mkN2 "dependence" "on" ;
lin dependency_N = mkN "dependency" ;
lin dependent_N = mkN "dependent" ;
lin dependent_A = longA "dependent" ;
lin dependent_A2on = longA2 "dependent" "on" ;
lin depict_V2 = mkV2 "depict" ;
lin deploy_V2 = mkV2 "deploy" ;
lin deposit_N = mkN "deposit" ;
lin deposit_V2 = mkV2 "deposit" ;
lin depress_V2 = mkV2 "depress" ;
lin depressing_A = longA "depressing" ;
lin depth_N = mkN "depth" ;
lin derivative_N = mkN "derivative" ;
lin derive_V2from = mkV2 "derive" "from" ;
lin descend_V2 = mkV2 "descend" ;
lin descendant_N = mkN "descendant" ;
lin descent_N = mkN "descent" ;
lin describe_V2 = mkV2 "describe" ;
lin description_N = mkN "description" ;
lin descriptive_A = longA "descriptive" ;
lin desert_N = mkN "desert" ;
lin deserve_V2 = mkV2 "deserve" ;
lin design_N = mkN "design" ;
lin design_V2 = mkV2 "design" ;
lin designate_V3_pred =mkV3 "designate" "_pred" ;
lin desire_N2 = mkN2 "desire" ;
lin desire_V2 = mkV2 "desire" ;
lin desire_V2 = mkV2 "desire" ;
lin desire_VV = mkVV (mkV "desire") ;
lin desk_N = mkN "desk" ;
lin despair_N = mkN "despair" ;
lin despair_V = mkV "despair" ;
lin despair_V2of = mkV2 "despair" "of" ;
lin desperate_A = longA "desperate" ;
lin desperate_A2for = longA2 "desperate" "for" ;
lin desperation_N = mkN "desperation" ;
lin destination_N = mkN "destination" ;
lin destiny_N = mkN "destiny" ;
lin destroy_V2 = mkV2 "destroy" ;
lin destruction_N2of = mkN2 "destruction" "of" ;
lin destructive_A = longA "destructive" ;
lin detach_V2 = mkV2 "detach" ;
lin detail_N = mkN "detail" ;
lin detailed_A = longA "detailed" ;
lin detect_V2 = mkV2 "detect" ;
lin deteriorate_V = mkV "deteriorate" ;
lin determinate_A = longA "determinate" ;
lin determine_V2 = mkV2 "determine" ;
lin determinism_N = mkN "determinism" ;
lin deterministic_A = longA "deterministic" ;
lin determinize_V2 = mkV2 "determinize" ;
lin detract_V2from = mkV2 "detract" "from" ;
lin develop_V2 = mkV2 "develop" ;
lin deviance_N = mkN "deviance" ;
lin deviant_A = longA "deviant" ;
lin deviate_V2from = mkV2 "deviate" "from" ;
lin devil_N = mkN "devil" ;
lin devise_V2 = mkV2 "devise" ;
lin devote_V3to =mkV3 "devote" "to" ;
lin devour_V2 = mkV2 "devour" ;
lin diagnose_V2 = mkV2 "diagnose" ;
lin diagnosis_N = mkN "diagnosis" ;
lin diagnostic_A = longA "diagnostic" ;
lin diagonal_A = longA "diagonal" ;
lin diagonal_N = mkN "diagonal" ;
lin diagram_N = mkN "diagram" ;
lin diagrammatic_A = longA "diagrammatic" ;
lin diagrammatically_Adv = mkAdv "diagrammatically" ;
lin dialect_N = mkN "dialect" ;
lin dialogue_N = mkN "dialogue" ;
lin diamond_N = mkN "diamond" ;
lin dichotomy_N = mkN "dichotomy" ;
lin dictionary_N = mkN "dictionary" ;
lin die_V = mkV "die" ;
lin die_N = mkN "die" ;
lin differ_V2from = mkV2 "differ" "from" ;
lin difference_N = mkN "difference" ;
lin different_A = longA "different" ;
lin different_A2from = longA2 "different" "from" ;
lin differentiate_V2 = mkV2 "differentiate" ;
lin difficult_A = longA "difficult" ;
lin difficult_A2 = longA2 "difficult" "" ;
lin difficulty_N = mkN "difficulty" ;
lin diffuse_A = longA "diffuse" ;
lin diffuse_V = mkV "diffuse" ;
lin dig_V2 = mkV2 dig_V ;
lin digest_N = mkN "digest" ;
lin digest_V2 = mkV2 "digest" ;
lin digit_N = mkN "digit" ;
lin digital_A = longA "digital" ;
lin dilate_V = mkV "dilate" ;
lin dimension_N = mkN "dimension" ;
lin diminish_V = mkV "diminish" ;
lin dine_V = mkV "dine" ;
lin dinner_N = mkN "dinner" ;
lin dire_A = mkA "dire" ;
lin direct_A = longA "direct" ;
lin direct_V3to =mkV3 "direct" "to" ;
lin direction_N = mkN "direction" ;
lin director_N = mkN "director" ;
lin directory_N = mkN "directory" ;
lin dirt_N = mkN "dirt" ;
lin disable_V2 = mkV2 "disable" ;
lin disadvantage_N = mkN "disadvantage" ;
lin disambiguate_V2 = mkV2 "disambiguate" ;
lin disarm_V2 = mkV2 "disarm" ;
lin disarmament_N = mkN "disarmament" ;
lin disappoint_V2 = mkV2 "disappoint" ;
lin disaster_N = mkN "disaster" ;
lin disastrous_A = longA "disastrous" ;
lin disbelief_N = mkN "disbelief" ;
lin disc_N = mkN "disc" ;
lin discard_V2 = mkV2 "discard" ;
lin discern_V2 = mkV2 "discern" ;
lin discipline_N = mkN "discipline" ;
lin disciplined_A = longA "disciplined" ;
lin discontinuity_N = mkN "discontinuity" ;
lin discontinuous_A = longA "discontinuous" ;
lin discourage_V2 = mkV2 "discourage" ;
lin discourse_N = mkN "discourse" ;
lin discover_V2 = mkV2 "discover" ;
lin discover_VS = mkVS (mkV "discover") ;
lin discovery_N2 = mkN2 "discovery" ;
lin discrepancy_N = mkN "discrepancy" ;
lin discrete_A = mkA "discrete" ;
lin discriminate_V2 = mkV2 "discriminate" ;
lin discuss_V2 = mkV2 "discuss" ;
lin discussion_N = mkN "discussion" ;
lin discussion_N2about = mkN2 "discussion" "about" ;
lin discussion_N2s_withabout = mkN2 "discussion" "s_withabout" ;
lin discussion_N2with = mkN2 "discussion" "with" ;
lin disease_N = mkN "disease" ;
lin diseased_A = longA "diseased" ;
lin disguise_V = mkV "disguise" ;
lin disguise_N = mkN "disguise" ;
lin disguise_V2 = mkV2 "disguise" ;
lin dish_N = mkN "dish" ;
lin dishonest_A = longA "dishonest" ;
lin disillusion_V2 = mkV2 "disillusion" ;
lin disjoint_A = longA "disjoint" ;
lin disjunct_N = mkN "disjunct" ;
lin disjunction_N = mkN "disjunction" ;
lin disjunctive_A = longA "disjunctive" ;
lin disk_N = mkN "disk" ;
lin dislocate_V2 = mkV2 "dislocate" ;
lin dismiss_V2 = mkV2 "dismiss" ;
lin disparate_A = longA "disparate" ;
lin dispense_V2with = mkV2 "dispense" "with" ;
lin dispensible_A = longA "dispensible" ;
lin display_N = mkN "display" ;
lin display_V2 = mkV2 "display" ;
lin dispose_V2of = mkV2 "dispose" "of" ;
lin disproportionate_A = longA "disproportionate" ;
lin dispute_N = mkN "dispute" ;
lin dispute_V2 = mkV2 "dispute" ;
lin disquieting_A = longA "disquieting" ;
lin disrupt_V2 = mkV2 "disrupt" ;
lin dissatisfaction_N = mkN "dissatisfaction" ;
lin dissatisfied_A = longA "dissatisfied" ;
lin dissent_V = mkV "dissent" ;
lin dissertation_N = mkN "dissertation" ;
lin dissimilar_A = longA "dissimilar" ;
lin dissimilar_A2to = longA2 "dissimilar" "to" ;
lin distance_N = mkN "distance" ;
lin distant_A = longA "distant" ;
lin distant_A2from = longA2 "distant" "from" ;
lin distinct_A = longA "distinct" ;
lin distinct_A2from = longA2 "distinct" "from" ;
lin distinction_N = mkN "distinction" ;
lin distinctive_A = longA "distinctive" ;
lin distinguish_V3from =mkV3 "distinguish" "from" ;
lin distract_V3from =mkV3 "distract" "from" ;
lin distribute_V2 = mkV2 "distribute" ;
lin district_N = mkN "district" ;
lin disturb_V2 = mkV2 "disturb" ;
lin ditch_N = mkN "ditch" ;
lin ditransitive_A = longA "ditransitive" ;
lin dive_N = mkN "dive" ;
lin dive_V = mkV "dive" ;
lin diverse_A = longA "diverse" ;
lin divide_V2 = mkV2 "divide" ;
lin dividend_N = mkN "dividend" ;
lin divine_A = longA "divine" ;
lin divisible_A = longA "divisible" ;
lin division_N = mkN "division" ;
lin divisor_N = mkN "divisor" ;
lin divorce_V3from =mkV3 "divorce" "from" ;
lin do_V2 = mkV2 "do" ;
lin doctor_N = mkN "doctor" ;
lin document_N = mkN "document" ;
lin document_V2 = mkV2 "document" ;
lin dog_N = mkN "dog" ;
lin dollar_N = mkN "dollar" ;
lin dolt_N = mkN "dolt" ;
lin domain_N = mkN "domain" ;
lin dome_N = mkN "dome" ;
lin dominance_N = mkN "dominance" ;
lin dominant_A = longA "dominant" ;
lin dominate_V2 = mkV2 "dominate" ;
lin donate_V3to =mkV3 "donate" "to" ;
lin donkey_N = mkN "donkey" ;
lin doom_N = mkN "doom" ;
lin doomed_A = longA "doomed" ;
lin doomsday_N = mkN "doomsday" ;
lin door_N = mkN "door" ;
lin dormancy_N = mkN "dormancy" ;
lin dormant_A = mkA "dormant" ;
lin dosage_N = mkN "dosage" ;
lin dose_N = mkN "dose" ;
lin dose_V3with =mkV3 "dose" "with" ;
lin dot_N = mkN "dot" ;
lin double_A = longA "double" ;
lin double_V2 = mkV2 "double" ;
lin doubt_V2 = mkV2 "doubt" ;
lin doubt_VS = mkVS (mkV "doubt") ;
lin doubt_N2 = mkN2 "doubt" ;
lin dour_A = mkA "dour" ;
lin dove_N = mkN "dove" ;
lin down_N = mkN "down" ;
lin down_Prep = mkPrep "down" ;
lin downward_Adv = mkAdv "downward" ;
lin doze_V = mkV "doze" ;
lin dozen_N2 = mkN2 "dozen" ;
lin draft_N = mkN "draft" ;
lin drag_N = mkN "drag" ;
lin drag_V2 = mkV2 "drag" ;
lin drain_N = mkN "drain" ;
lin drain_V2 = mkV2 "drain" ;
lin dram_N = mkN "dram" ;
lin drama_N = mkN "drama" ;
lin dramatic_A = longA "dramatic" ;
lin dramatically_Adv = mkAdv "dramatically" ;
lin dramatist_N = mkN "dramatist" ;
lin drastic_A = longA "drastic" ;
lin drastically_Adv = mkAdv "drastically" ;
lin draught_N = mkN "draught" ;
lin draw_V2 = mkV2 draw_V ;
lin drawback_N = mkN "drawback" ;
lin drawer_N = mkN "drawer" ;
lin dread_N = mkN "dread" ;
lin dread_V2 = mkV2 "dread" ;
lin dreadful_A = longA "dreadful" ;
lin dream_N = mkN "dream" ;
lin dream_VS = mkVS (mkV "dream") ;
lin dress_V = mkV "dress" ;
lin dress_N = mkN "dress" ;
lin drill_N = mkN "drill" ;
lin drill_V2 = mkV2 "drill" ;
lin drink_N = mkN "drink" ;
lin drink_V2 = mkV2 drink_V ;
lin drive_V = IrregEng.drive_V ;
lin drop_N = mkN "drop" ;
lin drop_V2 = mkV2 "drop" ;
lin drought_N = mkN "drought" ;
lin drown_V = mkV "drown" ;
lin drug_N = mkN "drug" ;
lin drum_N = mkN "drum" ;
lin drunk_A = mkA "drunk" ;
lin dry_A = mkA "dry" ;
lin dry_V2 = mkV2 "dry" ;
lin dual_A = longA "dual" ;
lin dubious_A = longA "dubious" ;
lin duck_N = mkN "duck" ;
lin duck_V = mkV "duck" ;
lin due_A = longA "due" ;
lin due_A2to = longA2 "due" "to" ;
lin duel_N = mkN "duel" ;
lin dull_A = mkA "dull" ;
lin dumb_A = mkA "dumb" ;
lin dummy_N = mkN "dummy" ;
lin dump_N = mkN "dump" ;
lin dump_V2 = mkV2 "dump" ;
lin dumpling_N = mkN "dumpling" ;
lin duplicate_V2 = mkV2 "duplicate" ;
--lin during_Prep = mkPrep "during" ;
lin dust_N = mkN "dust" ;
lin dutch_A = longA "dutch" ;
lin duty_N = mkN "duty" ;
lin dwarf_N = mkN "dwarf" ;
lin dwarf_V2 = mkV2 "dwarf" ;
--lin dwell_V2 = mkV2 dwell_V ;
lin dwelling_N = mkN "dwelling" ;
lin dynamic_A = longA "dynamic" ;
lin dynamically_Adv = mkAdv "dynamically" ;
lin dynamism_N = mkN "dynamism" ;
lin dynamo_N = mkN "dynamo" ;
lin eager_A2 = longA2 "eager" "" ;
lin eager_A = longA "eager" ;
lin ear_N = mkN "ear" ;
lin earl_N = mkN "earl" ;
lin early_A = mkA "early" ;
lin earn_V2 = mkV2 "earn" ;
lin earth_N = massN "earth" ;
lin ease_N = mkN "ease" ;
lin east_N = massN "east" ;
lin east_A = longA "east" ;
lin east_A2of = longA2 "east" "of" ;
lin eastern_A = mkA "eastern" ;
lin easy_A = mkA "easy" ;
lin easy_A2 = mkA2 "easy" "" ;
lin eat_V2 = mkV2 eat_V ;
lin ebb_V = mkV "ebb" ;
lin echo_N = mkN "echo" ;
lin echo_V2 = mkV2 "echo" ;
lin economic_A = longA "economic" ;
lin economical_A = longA "economical" ;
lin economy_N = mkN "economy" ;
lin edge_N = mkN "edge" ;
lin edible_A = longA "edible" ;
lin edinburgh_PN = regPN "edinburgh" ;
lin edit_V2 = mkV2 "edit" ;
lin edition_N = mkN "edition" ;
lin editor_N = mkN "editor" ;
lin educate_V2 = mkV2 "educate" ;
lin effect_N = mkN "effect" ;
lin effect_V2 = mkV2 "effect" ;
lin effective_A = mkA "effective" ;
lin efficacy_N = mkN "efficacy" ;
lin efficiency_N = mkN "efficiency" ;
lin efficient_A = longA "efficient" ;
lin effort_N = mkN "effort" ;
lin egg_N = mkN "egg" ;
lin elaborate_A = longA "elaborate" ;
lin elaborate_V2 = mkV2 "elaborate" ;
lin elbow_N = mkN "elbow" ;
lin elect_V2 = mkV2 "elect" ;
lin electric_A = longA "electric" ;
lin electricity_N = massN "electricity" ;
lin electron_N = mkN "electron" ;
lin electronic_A = longA "electronic" ;
lin elegance_N = mkN "elegance" ;
lin elegant_A = longA "elegant" ;
lin element_N = mkN "element" ;
lin elephant_N = mkN "elephant" ;
lin elephantine_A = longA "elephantine" ;
lin elevate_V2 = mkV2 "elevate" ;
lin elicit_V = mkV "elicit" ;
lin eligible_A = longA "eligible" ;
lin eligible_A2for = longA2 "eligible" "for" ;
lin eliminate_V2 = mkV2 "eliminate" ;
lin ellipse_N = mkN "ellipse" ;
lin ellipsis_N = mkN "ellipsis" ;
lin elliptical_A = longA "elliptical" ;
lin elsewhere_Adv = mkAdv "elsewhere" ;
lin elucidate_V2 = mkV2 "elucidate" ;
lin elude_V2 = mkV2 "elude" ;
lin elusive_A = longA "elusive" ;
lin embarrass_V2 = mkV2 "embarrass" ;
lin embassy_N = mkN "embassy" ;
lin embed_V3in =mkV3 "embed" "in" ;
lin embody_V2 = mkV2 "embody" ;
lin embrace_N = mkN "embrace" ;
lin embrace_V2 = mkV2 "embrace" ;
lin embrace_V = mkV "embrace" ;
lin emerge_V = mkV "emerge" ;
lin emergency_N = mkN "emergency" ;
lin emergent_A = longA "emergent" ;
lin emphasis_N = mkN "emphasis" ;
lin emphasise_V2 = mkV2 "emphasise" ;
lin emphasise_VS = mkVS (mkV "emphasise") ;
lin emphasize_V2 = mkV2 "emphasize" ;
lin emphasize_VS = mkVS (mkV "emphasize") ;
lin emphatic_A = longA "emphatic" ;
lin emphatically_Adv = mkAdv "emphatically" ;
lin empire_N = mkN "empire" ;
lin empirical_A = longA "empirical" ;
lin empiricism_N = mkN "empiricism" ;
lin empiricist_N = mkN "empiricist" ;
lin employ_V2 = mkV2 "employ" ;
lin empty_A = mkA "empty" ;
lin empty_V2 = mkV2 "empty" ;
lin emulate_V2 = mkV2 "emulate" ;
lin enable_V2 = mkV2 "enable" ;
lin encapsulate_V2 = mkV2 "encapsulate" ;
lin enchant_V2 = mkV2 "enchant" ;
lin enclose_V2 = mkV2 "enclose" ;
lin enclosure_N = mkN "enclosure" ;
lin encode_V2 = mkV2 "encode" ;
lin encompass_V2 = mkV2 "encompass" ;
lin encounter_V2 = mkV2 "encounter" ;
lin encourage_V2 = mkV2 "encourage" ;
lin encrypt_V2 = mkV2 "encrypt" ;
lin encumber_V2 = mkV2 "encumber" ;
lin encyclopaedia_N = mkN "encyclopaedia" ;
lin encyclopaedic_A = longA "encyclopaedic" ;
lin end_N = mkN "end" ;
lin end_V2 = mkV2 "end" ;
lin endeavour_VV = mkVV (mkV "endeavour") ;
lin ending_N = mkN "ending" ;
lin endow_V3with =mkV3 "endow" "with" ;
lin enemy_N = mkN "enemy" ;
lin energetic_A = longA "energetic" ;
lin energetically_Adv = mkAdv "energetically" ;
lin energy_N = mkN "energy" ;
lin enforce_V2 = mkV2 "enforce" ;
lin engage_V2 = mkV2 "engage" ;
lin engender_V2 = mkV2 "engender" ;
lin engine_N = mkN "engine" ;
lin engineer_N = mkN "engineer" ;
lin engineer_V2 = mkV2 "engineer" ;
lin england_PN = regPN "england" ;
lin english_A = longA "english" ;
lin engross_V2 = mkV2 "engross" ;
lin engulf_V2 = mkV2 "engulf" ;
lin enhance_V2 = mkV2 "enhance" ;
lin enjoy_V2 = mkV2 "enjoy" ;
lin enlarge_V2 = mkV2 "enlarge" ;
lin enormous_A = longA "enormous" ;
lin enquire_V2about = mkV2 "enquire" "about" ;
lin enrich_V2 = mkV2 "enrich" ;
lin ensure_VS = mkVS (mkV "ensure") ;
lin entail_VS = mkVS (mkV "entail") ;
lin enter_V2 = mkV2 "enter" ;
lin enterprise_N = mkN "enterprise" ;
lin enterprising_A = longA "enterprising" ;
lin entertain_V2 = mkV2 "entertain" ;
lin enthusiast_N = mkN "enthusiast" ;
lin entire_A = longA "entire" ;
lin entitle_V3to =mkV3 "entitle" "to" ;
lin entity_N = mkN "entity" ;
lin entrance_N = mkN "entrance" ;
lin entrance_V2 = mkV2 "entrance" ;
lin entropy_N = mkN "entropy" ;
lin entrust_V3to =mkV3 "entrust" "to" ;
lin entry_N = mkN "entry" ;
lin enumerate_V2 = mkV2 "enumerate" ;
lin envelope_N = mkN "envelope" ;
lin environment_N = mkN "environment" ;
lin envisage_V2 = mkV2 "envisage" ;
lin envy_N = mkN "envy" ;
lin envy_V2 = mkV2 "envy" ;
lin epistemology_N = mkN "epistemology" ;
lin equal_N = mkN "equal" ;
lin equal_V2 = mkV2 "equal" ;
lin equal_A = mkA "equal" ;
lin equal_A2to = mkA2 "equal" "to" ;
lin equate_V3with =mkV3 "equate" "with" ;
lin equation_N = mkN "equation" ;
lin equidistant_A = longA "equidistant" ;
lin equip_V2 = mkV2 "equip" ;
lin equipment_N = mkN "equipment" ;
lin equivalence_N2to = mkN2 "equivalence" "to" ;
lin equivalent_V = mkV "equivalent" ;
lin equivalent_A = longA "equivalent" ;
lin equivalent_A2to = longA2 "equivalent" "to" ;
lin ergonomic_A = longA "ergonomic" ;
lin ergonomically_Adv = mkAdv "ergonomically" ;
lin erroneous_A = longA "erroneous" ;
lin error_N = mkN "error" ;
lin escape_V2from = mkV2 "escape" "from" ;
lin eschew_V2 = mkV2 "eschew" ;
lin esoteric_A = longA "esoteric" ;
lin especially_Adv = mkAdv "especially" ;
lin espouse_V2 = mkV2 "espouse" ;
lin essay_N = mkN "essay" ;
lin essence_N = mkN "essence" ;
lin essential_A = longA "essential" ;
lin establish_V2 = mkV2 "establish" ;
lin establishment_N = mkN "establishment" ;
lin estate_N = mkN "estate" ;
lin estimate_VS = mkVS (mkV "estimate") ;
lin euclidean_A = longA "euclidean" ;
lin europe_PN = regPN "europe" ;
lin european_A = longA "european" ;
lin european_N = mkN "european" ;
lin evade_V2 = mkV2 "evade" ;
lin evaluable_A = longA "evaluable" ;
lin evaluate_V2 = mkV2 "evaluate" ;
lin even_Adv = mkAdv "even" ;
lin even_A = mkA "even" ;
lin evening_N = mkN "evening" ;
lin event_N = mkN "event" ;
lin eventual_A = longA "eventual" ;
lin ever_Adv = mkAdv "ever" ;
lin everyday_A = longA "everyday" ;
---- lin everywhere_Adv = mkAdv "everywhere" ;
lin evidence_N = mkN "evidence" ;
lin evident_A = longA "evident" ;
lin evident_A2 = longA2 "evident" "" ;
lin evil_A = mkA "evil" ;
lin evocation_N = mkN "evocation" ;
lin evoke_V2 = mkV2 "evoke" ;
lin evolution_N = mkN "evolution" ;
lin evolve_V = mkV "evolve" ;
lin exacerbate_V2 = mkV2 "exacerbate" ;
lin exact_A = mkA "exact" ;
lin exaggerate_V2 = mkV2 "exaggerate" ;
lin exaggerate_V = mkV "exaggerate" ;
lin exalt_V2 = mkV2 "exalt" ;
lin examination_N = mkN "examination" ;
lin examine_V2 = mkV2 "examine" ;
lin example_N = mkN "example" ;
lin excede_V2 = mkV2 "excede" ;
lin exceed_V2 = mkV2 "exceed" ;
lin excellence_N = mkN "excellence" ;
lin excellent_A = longA "excellent" ;
lin exception_N = mkN "exception" ;
lin excess_N = mkN "excess" ;
lin excessive_A = longA "excessive" ;
lin exchange_N = mkN "exchange" ;
lin exchange_V3for =mkV3 "exchange" "for" ;
lin excite_V2 = mkV2 "excite" ;
lin exclude_V2 = mkV2 "exclude" ;
lin exclusion_N = mkN "exclusion" ;
lin exclusive_A = longA "exclusive" ;
lin exclusive_A2to = longA2 "exclusive" "to" ;
lin excursion_N = mkN "excursion" ;
lin excuse_V2 = mkV2 "excuse" ;
lin excuse_N2for = mkN2 "excuse" "for" ;
lin execute_V2 = mkV2 "execute" ;
lin exemplar_N = mkN "exemplar" ;
lin exemplify_V2 = mkV2 "exemplify" ;
lin exercise_N = mkN "exercise" ;
lin exert_V2 = mkV2 "exert" ;
lin exhaust_V2 = mkV2 "exhaust" ;
lin exhibit_N = mkN "exhibit" ;
lin exhibit_V2 = mkV2 "exhibit" ;
lin exhort_V2 = mkV2 "exhort" ;
lin exist_V = mkV "exist" ;
lin existence_N = mkN "existence" ;
lin existent_A = longA "existent" ;
lin exit_N = mkN "exit" ;
lin exit_V2from = mkV2 "exit" "from" ;
lin exophoric_A = longA "exophoric" ;
lin expand_V = mkV "expand" ;
lin expansion_N = mkN "expansion" ;
lin expect_V2 = mkV2 "expect" ;
lin expect_V2 = mkV2 "expect" ;
lin expect_VS = mkVS (mkV "expect") ;
lin expedient_N = mkN "expedient" ;
lin expel_V2 = mkV2 "expel" ;
lin expend_V2 = mkV2 "expend" ;
lin expenditure_N = mkN "expenditure" ;
lin expense_N = mkN "expense" ;
lin expensive_A = longA "expensive" ;
lin experience_N = mkN "experience" ;
lin experience_V2 = mkV2 "experience" ;
lin experiment_N = mkN "experiment" ;
lin experiment_V = mkV "experiment" ;
lin expert_N = mkN "expert" ;
lin expertise_N = mkN "expertise" ;
lin expire_V2 = mkV2 "expire" ;
lin expiry_N = mkN "expiry" ;
lin explain_V3to =mkV3 "explain" "to" ;
lin explanation_N = mkN "explanation" ;
lin explanatory_A = longA "explanatory" ;
lin explicate_V2 = mkV2 "explicate" ;
lin explicit_A = longA "explicit" ;
lin explode_V = mkV "explode" ;
lin exploit_V2 = mkV2 "exploit" ;
lin explore_V2 = mkV2 "explore" ;
lin explore_V = mkV "explore" ;
lin explosion_N = mkN "explosion" ;
lin explosive_A = longA "explosive" ;
lin explosive_N = mkN "explosive" ;
lin exponent_N = mkN "exponent" ;
lin exponential_A = longA "exponential" ;
lin exponential_N = mkN "exponential" ;
lin expose_V2 = mkV2 "expose" ;
lin exposure_V = mkV "exposure" ;
lin express_A = longA "express" ;
lin express_V2 = mkV2 "express" ;
lin expressible_A = longA "expressible" ;
lin expressible_A2by = longA2 "expressible" "by" ;
lin expression_N = mkN "expression" ;
lin expressly_Adv = mkAdv "expressly" ;
lin expulsion_N = mkN "expulsion" ;
lin expunge_V2 = mkV2 "expunge" ;
lin extant_A = longA "extant" ;
lin extend_V2 = mkV2 "extend" ;
lin extensible_A = longA "extensible" ;
lin extension_N = mkN "extension" ;
lin extensive_A = longA "extensive" ;
lin extent_N = mkN "extent" ;
lin external_A = longA "external" ;
lin extra_A = longA "extra" ;
lin extract_V3from =mkV3 "extract" "from" ;
lin extraneous_A = longA "extraneous" ;
lin extravagance_N = mkN "extravagance" ;
lin extravagant_A = longA "extravagant" ;
lin extreme_A = longA "extreme" ;
lin extrinsic_A = longA "extrinsic" ;
lin extrinsically_Adv = mkAdv "extrinsically" ;
lin eye_N = mkN "eye" ;
lin face_N = mkN "face" ;
lin face_V2 = mkV2 "face" ;
lin face_V3with =mkV3 "face" "with" ;
lin facet_N = mkN "facet" ;
lin facetious_A = longA "facetious" ;
lin facilitate_V2 = mkV2 "facilitate" ;
lin facility_N = mkN "facility" ;
lin fact_N2 = mkN2 "fact" ;
lin factive_A = longA "factive" ;
lin factive_N = mkN "factive" ;
lin factor_N = mkN "factor" ;
lin factor_V2 = mkV2 "factor" ;
lin factorial_N = mkN "factorial" ;
lin factory_N = mkN "factory" ;
lin factual_A = longA "factual" ;
lin faculty_N = mkN "faculty" ;
lin fail_V2 = mkV2 "fail" ;
lin failure_N = mkN "failure" ;
lin faint_A = mkA "faint" ;
lin fair_A = mkA "fair" ;
lin fair_N = mkN "fair" ;
lin fairy_N = mkN "fairy" ;
lin faith_N = mkN "faith" ;
lin fall_N = mkN "fall" ;
lin fall_V = IrregEng.fall_V ;
lin false_A = mkA "false" ;
lin falsehood_N = mkN "falsehood" ;
lin fame_N = mkN "fame" ;
lin familiar_A = longA "familiar" ;
lin familiar_A2to = longA2 "familiar" "to" ;
lin family_N = mkN "family" ;
lin fan_N = mkN "fan" ;
lin fancy_A = mkA "fancy" ;
lin fancy_V2 = mkV2 "fancy" ;
lin far_A = longA "far" ;
lin far_A2from = longA2 "far" "from" ;
lin farce_N = mkN "farce" ;
lin fare_N = mkN "fare" ;
lin farm_N = mkN "farm" ;
lin farm_V = mkV "farm" ;
lin fashion_N = mkN "fashion" ;
lin fashionable_A = longA "fashionable" ;
lin fast_A = mkA "fast" ;
lin fasten_V3to =mkV3 "fasten" "to" ;
lin fat_N = massN "fat" ;
lin fat_A = duplADeg "fat" ;
lin fate_N = mkN "fate" ;
lin father_N = mkN "father" ;
lin fatigue_N = mkN "fatigue" ;
lin fatigue_V2 = mkV2 "fatigue" ;
lin fault_N = mkN "fault" ;
lin favor_N = mkN "favor" ;
lin favor_V2 = mkV2 "favor" ;
lin favour_N = mkN "favour" ;
lin favour_V2 = mkV2 "favour" ;
lin favourable_A = longA "favourable" ;
lin favourable_A2to = longA2 "favourable" "to" ;
lin favourite_A = longA "favourite" ;
lin fear_N = mkN "fear" ;
lin fear_V2 = mkV2 "fear" ;
lin feasible_A = longA "feasible" ;
lin feast_N = mkN "feast" ;
lin feather_N = mkN "feather" ;
lin feature_N = mkN "feature" ;
lin feature_V2 = mkV2 "feature" ;
lin february_PN = regPN "february" ;
lin federal_A = longA "federal" ;
lin federation_N = mkN "federation" ;
lin fee_N = mkN "fee" ;
lin feed_V2 = mkV2 feed_V ;
lin feedback_N = mkN "feedback" ;
lin feel_V2 = mkV2 feel_V ;
lin feeling_N2 = mkN2 "feeling" ;
lin felix_PN = regPN "felix" ;
lin fellow_N = mkN "fellow" ;
lin felt_N = mkN "felt" ;
lin female_A = longA "female" ;
lin fence_N = mkN "fence" ;
lin fertilize_V2 = mkV2 "fertilize" ;
lin fertilizer_N = mkN "fertilizer" ;
lin fetch_V3from =mkV3 "fetch" "from" ;
lin fetter_V2 = mkV2 "fetter" ;
lin fever_N = mkN "fever" ;
lin fiction_N = mkN "fiction" ;
lin fictional_A = longA "fictional" ;
lin fido_PN = regPN "fido" ;
lin field_N = mkN "field" ;
lin fierce_A = mkA "fierce" ;
lin fig_N = mkN "fig" ;
lin fight_N = mkN "fight" ;
lin fight_V2 = mkV2 IrregEng.fight_V ;
lin fight_V = IrregEng.fight_V ;
lin figure_N = mkN "figure" ;
lin file_N = mkN "file" ;
lin file_V2 = mkV2 "file" ;
lin fill_V2 = mkV2 "fill" ;
lin fill_V3 =mkV3 "fill" ;
lin film_N = mkN "film" ;
lin film_V2 = mkV2 "film" ;
lin filter_N = mkN "filter" ;
lin filter_V2 = mkV2 "filter" ;
lin fin_N = mkN "fin" ;
lin final_A = longA "final" ;
lin finance_N = mkN "finance" ;
lin financial_A = longA "financial" ;
lin find_V2 = mkV2 find_V ;
lin fine_A = mkA "fine" ;
lin fine_N = mkN "fine" ;
lin fine_V2 = mkV2 "fine" ;
lin finger_N = mkN "finger" ;
lin fingerprint_N = mkN "fingerprint" ;
lin finish_N = mkN "finish" ;
lin finish_V2 = mkV2 "finish" ;
lin finish_V = mkV "finish" ;
lin finite_A = longA "finite" ;
lin fir_N = mkN "fir" ;
lin fire_N = mkN "fire" ;
lin fire_V2 = mkV2 "fire" ;
lin firm_N = mkN "firm" ;
lin firm_A = mkA "firm" ;
lin firstly_Adv = mkAdv "firstly" ;
lin fish_N = mkN "fish" ;
lin fish_V = mkV "fish" ;
lin fisherman_N = mkN "fisherman" "fishermen" ;
lin fit_V2 = mkV2 "fit" ;
lin fit_A = mkA "fit" ;
lin fit_A2for = mkA2 "fit" "for" ;
lin fix_V3to =mkV3 "fix" "to" ;
lin flag_N = mkN "flag" ;
lin flame_N = mkN "flame" ;
lin flash_N = mkN "flash" ;
lin flash_V = mkV "flash" ;
lin flat_A = mkA "flat" ;
lin flat_N = mkN "flat" ;
lin flavour_N = mkN "flavour" ;
lin flaw_N = mkN "flaw" ;
lin flawed_A = longA "flawed" ;
lin flesh_N = massN "flesh" ;
lin flexible_A = longA "flexible" ;
lin flight_N2from = mkN2 "flight" "from" ;
lin flip_V2 = mkV2 "flip" ;
lin float_V = mkV "float" ;
lin flood_N = mkN "flood" ;
lin flood_V2 = mkV2 "flood" ;
lin floor_N = mkN "floor" ;
lin flour_N = massN "flour" ;
lin flourish_V2 = mkV2 "flourish" ;
lin flourish_V = mkV "flourish" ;
lin flow_N = mkN "flow" ;
lin flower_N = mkN "flower" ;
lin flu_N = mkN "flu" ;
lin fluid_A = longA "fluid" ;
lin fluid_N = mkN "fluid" ;
lin flux_N = mkN "flux" ;
lin fly_N = mkN "fly" ;
lin fly_V = IrregEng.fly_V ;
lin foam_N = mkN "foam" ;
lin foam_V = mkV "foam" ;
lin focal_A = longA "focal" ;
lin focus_N = mkN "focus" ;
lin focus_V2 = mkV2 "focus" ;
lin focus_V2on = mkV2 "focus" "on" ;
lin fog_N = mkN "fog" ;
lin foist_V3on =mkV3 "foist" "on" ;
lin fold_N = mkN "fold" ;
lin fold_V2 = mkV2 "fold" ;
lin follow_V2 = mkV2 "follow" ;
lin fond_A2of = mkA2 "fond" "of" ;
lin food_N = massN "food" ;
lin fool_N = mkN "fool" ;
lin fool_V2 = mkV2 "fool" ;
lin foolish_A = longA "foolish" ;
lin foot_N = mkN "foot" "feet" ;
lin football_N = mkN "football" ;
--lin for_Prep = mkPrep "for" ;
lin foray_N = mkN "foray" ;
lin forbid_V2 = mkV2 forbid_V ;
lin force_N = mkN "force" ;
lin force_V2 = mkV2 "force" ;
lin forcible_A = longA "forcible" ;
lin forearm_N = mkN "forearm" ;
--lin forego_V2 = mkV2 forego_V ;
lin foreground_N = mkN "foreground" ;
lin forehead_N = mkN "forehead" ;
lin foreign_A = longA "foreign" ;
lin foreigner_N = mkN "foreigner" ;
lin forerunner_N = mkN "forerunner" ;
--lin foresee_V2 = mkV2 foresee_V ;
lin forest_N = mkN "forest" ;
lin forestall_V2 = mkV2 "forestall" ;
lin forever_Adv = mkAdv "forever" ;
lin forget_VV = mkVV forget_V ;
--lin forgive_V3for =mkV3 forgive_V "for" ;
--lin forgo_V2 = mkV2 forgo_V ;
lin fork_N = mkN "fork" ;
lin form_N = mkN "form" ;
lin form_V2 = mkV2 "form" ;
lin formal_A = longA "formal" ;
lin formalism_N = mkN "formalism" ;
lin format_N = mkN "format" ;
lin formation_N = mkN "formation" ;
lin former_A = longA "former" ;
lin formula_N = mkN "formula" ;
lin formulate_V2 = mkV2 "formulate" ;
lin fort_N = mkN "fort" ;
lin forthcoming_A = longA "forthcoming" ;
lin forthwith_Adv = mkAdv "forthwith" ;
lin fortnight_N = mkN "fortnight" ;
lin fortuitous_A = longA "fortuitous" ;
lin fortunate_A = longA "fortunate" ;
lin fortune_N = mkN "fortune" ;
lin forum_N = mkN "forum" ;
lin forward_A = longA "forward" ;
lin forwards_Adv = mkAdv "forwards" ;
lin found_V2 = mkV2 "found" ;
lin foundation_N = mkN "foundation" ;
lin fountain_N = mkN "fountain" ;
lin fox_N = mkN "fox" ;
lin fraction_N = mkN "fraction" ;
lin fracture_N = mkN "fracture" ;
lin fracture_V2 = mkV2 "fracture" ;
lin fragment_N = mkN "fragment" ;
lin fragment_V2 = mkV2 "fragment" ;
lin fragmentary_A = longA "fragmentary" ;
lin frame_N = mkN "frame" ;
lin frame_V2 = mkV2 "frame" ;
lin framework_N = mkN "framework" ;
lin france_PN = regPN "france" ;
lin franz_PN = regPN "franz" ;
lin free_A = mkA "free" ;
lin free_V2 = mkV2 "free" ;
lin freedom_N = mkN "freedom" ;
lin freeze_V2 = mkV2 freeze_V ;
lin french_A = mkA "french" ;
lin frequency_N = mkN "frequency" ;
lin frequent_A = longA "frequent" ;
lin fresh_A = mkA "fresh" ;
lin friction_N = mkN "friction" ;
lin friday_PN = regPN "friday" ;
lin friend_N = mkN "friend" ;
lin friendly_A = mkA "friendly" ;
lin friendly_A2to = mkA2 "friendly" "to" ;
lin fright_N = mkN "fright" ;
lin frighten_V2 = mkV2 "frighten" ;
lin frill_N = mkN "frill" ;
lin fringe_N = mkN "fringe" ;
--lin from_Prep = mkPrep "from" ;
lin front_A = longA "front" ;
lin front_N = mkN "front" ;
lin fruit_N = massN "fruit" ;
lin fry_V2 = mkV2 "fry" ;
lin fulfil_V = mkV "fulfil" ;
lin full_A = mkA "full" ;
lin fun_N = mkN "fun" ;
lin function_N = mkN "function" ;
lin function_V = mkV "function" ;
lin functor_N = mkN "functor" ;
lin fund_N = mkN "fund" ;
lin fundamental_A = longA "fundamental" ;
lin funeral_N = mkN "funeral" ;
lin funereal_A = longA "funereal" ;
lin fungus_N = mkN "fungus" "fungi" ;
lin funny_A = mkA "funny" ;
lin fur_N = mkN "fur" ;
lin furnish_V3with =mkV3 "furnish" "with" ;
lin furniture_N = massN "furniture" ;
lin fuss_N = mkN "fuss" ;
lin future_A = longA "future" ;
lin future_N = mkN "future" ;
lin fuzzy_A = longA "fuzzy" ;
lin gag_N = mkN "gag" ;
lin gag_V2 = mkV2 "gag" ;
lin gain_N = mkN "gain" ;
lin gain_V2 = mkV2 "gain" ;
lin galactic_A = longA "galactic" ;
lin galaxy_N = mkN "galaxy" ;
lin gale_N = mkN "gale" ;
lin gallon_N = mkN "gallon" ;
lin gamble_V = mkV "gamble" ;
lin game_N = mkN "game" ;
lin gap_N = mkN "gap" ;
lin gape_V = mkV "gape" ;
lin gape_V2at = mkV2 "gape" "at" ;
lin garage_N = mkN "garage" ;
lin garden_N = mkN "garden" ;
lin garment_N = mkN "garment" ;
lin gas_N = mkN "gas" ;
lin gaseous_A = longA "gaseous" ;
lin gate_N = mkN "gate" ;
lin gather_V = mkV "gather" ;
lin gauge_N = mkN "gauge" ;
lin gauge_V2 = mkV2 "gauge" ;
lin gay_A = mkA "gay" ;
lin gaze_V2at = mkV2 "gaze" "at" ;
lin gaze_N = mkN "gaze" ;
lin gear_N = mkN "gear" ;
lin gear_V2 = mkV2 "gear" ;
lin generable_A = longA "generable" ;
lin general_A = longA "general" ;
lin general_N = mkN "general" ;
lin generate_V2 = mkV2 "generate" ;
lin generation_N = mkN "generation" ;
lin generator_N = mkN "generator" ;
lin generic_A = longA "generic" ;
lin generosity_N = mkN "generosity" ;
lin generous_A = longA "generous" ;
lin generous_A2to = longA2 "generous" "to" ;
lin genitive_A = longA "genitive" ;
lin genius_N = mkN "genius" ;
lin gentle_A = mkA "gentle" ;
lin gentleman_N = mkN "gentleman" "gentlemen" ;
lin gently_Adv = mkAdv "gently" ;
lin genuine_A = longA "genuine" ;
lin genus_N = mkN "genus" ;
lin geography_N = mkN "geography" ;
lin geology_N = mkN "geology" ;
lin geometry_N = mkN "geometry" ;
lin german_A = longA "german" ;
lin germane_A = longA "germane" ;
lin germanic_A = longA "germanic" ;
lin germany_PN = regPN "germany" ;
lin gerund_N = mkN "gerund" ;
lin gesture_V = mkV "gesture" ;
lin gesture_N = mkN "gesture" ;
lin get_V2 = mkV2 get_V ;
lin gift_N = mkN "gift" ;
lin gin_N = massN "gin" ;
lin giraffe_N = mkN "giraffe" ;
lin girl_N = mkN "girl" ;
lin gist_N = mkN "gist" ;
lin give_V3 = dirdirV3 give_V ;
lin give_V3to =mkV3 give_V "to" ;
lin glad_A2 = mkA2 "glad" "" ;
lin glad_A = mkA "glad" ;
lin glad_A2 = mkA2 "glad" "" ;
lin glance_N = mkN "glance" ;
lin glance_V2at = mkV2 "glance" "at" ;
lin glass_N = mkN "glass" ;
lin glean_V2 = mkV2 "glean" ;
lin global_A = longA "global" ;
lin globe_N = mkN "globe" ;
lin glory_N = mkN "glory" ;
lin gloss_N = mkN "gloss" ;
lin gloss_V2 = mkV2 "gloss" ;
lin glow_N = mkN "glow" ;
lin glow_V2 = mkV2 "glow" ;
lin gnat_N = mkN "gnat" ;
lin gnu_N = mkN "gnu" ;
lin go_V2 = mkV2 go_V ;
lin goat_N = mkN "goat" ;
lin god_N = mkN "god" ;
lin goddess_N = mkN "goddess" ;
lin gold_N = mkN "gold" ;
lin golden_A = mkA "golden" ;
lin good_A = longA "good" ;
lin goose_N = mkN "goose" "geese" ;
lin gore_N = mkN "gore" ;
lin gorilla_N = mkN "gorilla" ;
lin gory_A = mkA "gory" ;
lin gospel_N = mkN "gospel" ;
lin govern_V = mkV "govern" ;
lin government_N = mkN "government" ;
lin grab_V2 = mkV2 "grab" ;
lin grace_N = mkN "grace" ;
lin grade_N = mkN "grade" ;
lin gradual_A = longA "gradual" ;
lin graft_N = mkN "graft" ;
lin graft_V2 = mkV2 "graft" ;
lin graham_PN = regPN "graham" ;
lin grain_N = mkN "grain" ;
lin gram_N = mkN "gram" ;
lin grammar_N = mkN "grammar" ;
lin grammatical_A = longA "grammatical" ;
lin grand_A = mkA "grand" ;
lin grandfather_N = mkN "grandfather" ;
lin grandmother_N = mkN "grandmother" ;
lin grant_N = mkN "grant" ;
lin grant_V2 = mkV2 "grant" ;
lin grape_N = mkN "grape" ;
lin graph_N = mkN "graph" ;
lin graphic_A = longA "graphic" ;
lin grasp_N = mkN "grasp" ;
lin grasp_V2 = mkV2 "grasp" ;
lin grass_N = massN "grass" ;
lin grateful_A = mkA "grateful" ;
lin grateful_A2to = mkA2 "grateful" "to" ;
lin grateful_A2 = mkA2 "grateful" "" ;
lin gratuitous_A = longA "gratuitous" ;
lin grave_N = mkN "grave" ;
lin gravitation_N = mkN "gravitation" ;
lin gravity_N = mkN "gravity" ;
lin gravy_N = massN "gravy" ;
lin gray_A = mkA "gray" ;
lin grease_N = massN "grease" ;
lin great_A = mkA "great" ;
lin greece_PN = regPN "greece" ;
lin greed_N = mkN "greed" ;
lin greek_A = longA "greek" ;
lin greek_N = mkN "greek" ;
lin green_N = mkN "green" ;
lin greet_V2 = mkV2 "greet" ;
lin gregarious_A = longA "gregarious" ;
lin grey_A = mkA "grey" ;
lin grid_N = mkN "grid" ;
lin grief_N = mkN "grief" ;
lin grieve_V = mkV "grieve" ;
lin grill_V2 = mkV2 "grill" ;
lin grim_A = mkA "grim" ;
lin grime_N = mkN "grime" ;
lin grin_N = mkN "grin" ;
lin grin_V = mkV "grin" ;
lin grind_V2 = mkV2 grind_V ;
lin grip_N = mkN "grip" ;
lin grip_V2 = mkV2 "grip" ;
lin grit_N = mkN "grit" ;
lin grog_N = mkN "grog" ;
lin gross_A = mkA "gross" ;
lin ground_N = mkN "ground" ;
lin group_N = mkN "group" ;
lin group_V2 = mkV2 "group" ;
lin grove_N = mkN "grove" ;
lin grow_V2 = mkV2 IrregEng.grow_V ;
lin grow_V = IrregEng.grow_V ;
lin growth_N = massN "growth" ;
lin guarantee_N = mkN "guarantee" ;
lin guarantee_VS = mkVS (mkV "guarantee") ;
lin guard_N = mkN "guard" ;
lin guard_V2 = mkV2 "guard" ;
lin guess_N = mkN "guess" ;
lin guess_VS = mkVS (mkV "guess") ;
lin guest_N = mkN "guest" ;
lin guide_N = mkN "guide" ;
lin guide_V2 = mkV2 "guide" ;
lin guideline_N = mkN "guideline" ;
lin guilt_N = mkN "guilt" ;
lin guinea_N = mkN "guinea" ;
lin guise_N = mkN "guise" ;
lin gun_N = mkN "gun" ;
lin habit_N = mkN "habit" ;
lin habitual_A = longA "habitual" ;
lin hail_N = mkN "hail" ;
lin hair_N = massN "hair" ;
lin half_Adv = mkAdv "half" ;
lin half_A = longA "half" ;
lin half_N = mkN "half" "halves" ;
lin hall_N = mkN "hall" ;
lin halt_N = mkN "halt" ;
lin halt_V2 = mkV2 "halt" ;
lin halt_V = mkV "halt" ;
lin halve_V2 = mkV2 "halve" ;
lin hamburger_N = mkN "hamburger" ;
lin hammer_N = mkN "hammer" ;
lin hammer_V2 = mkV2 "hammer" ;
lin hamper_V2 = mkV2 "hamper" ;
lin hand_N = mkN "hand" ;
lin hand_V3 = dirdirV3 (mkV "hand") ;
lin hand_V3to =mkV3 "hand" "to" ;
lin handicap_N = mkN "handicap" ;
lin handicap_V2 = mkV2 "handicap" ;
lin handkerchief_N = mkN "handkerchief" ;
lin handle_N = mkN "handle" ;
lin handle_V2 = mkV2 "handle" ;
lin handsome_A = longA "handsome" ;
lin hang_V2 = mkV2 "hang" ;
lin hang_V = IrregEng.hang_V ;
lin happen_V = mkV "happen" ;
lin happen_V2 = mkV2 "happen" ;
lin happening_N = mkN "happening" ;
lin happy_A = mkA "happy" ;
lin happy_A2 = mkA2 "happy" "" ;
lin harbour_N = mkN "harbour" ;
lin hard_A = mkA "hard" ;
lin hard_A2 = mkA2 "hard" "" ;
lin hardly_Adv = mkAdv "hardly" ;
lin hardware_N = mkN "hardware" ;
lin harm_N = mkN "harm" ;
lin harm_V2 = mkV2 "harm" ;
lin harmonium_N = mkN "harmonium" ;
lin harmony_N = mkN "harmony" ;
lin harness_N = mkN "harness" ;
lin harness_V3to =mkV3 "harness" "to" ;
lin hash_N = mkN "hash" ;
lin hash_V2 = mkV2 "hash" ;
lin haste_N = mkN "haste" ;
lin hasty_A = longA "hasty" ;
lin hat_N = mkN "hat" ;
lin hate_V2 = mkV2 "hate" ;
lin hatred_N = massN "hatred" ;
lin have_V2 = mkV2 have_V ;
lin haven_N = mkN "haven" ;
lin hazard_N = mkN "hazard" ;
lin haze_N = mkN "haze" ;
lin head_N = mkN "head" ;
lin head_V2 = mkV2 "head" ;
lin heading_N = mkN "heading" ;
lin heal_V2 = mkV2 "heal" ;
lin health_N = massN "health" ;
lin healthy_A = mkA "healthy" ;
lin heap_N = mkN "heap" ;
lin hear_V2 = mkV2 hear_V ;
lin heart_N = mkN "heart" ;
lin hearth_N = mkN "hearth" ;
lin heat_V = mkV "heat" ;
lin heath_N = mkN "heath" ;
lin heathen_N = mkN "heathen" ;
lin heave_V = mkV "heave" ;
lin heaven_N = mkN "heaven" ;
lin heavy_A = mkA "heavy" ;
lin heel_N = mkN "heel" ;
lin height_N = mkN "height" ;
lin helicopter_N = mkN "helicopter" ;
lin help_N = mkN "help" ;
lin help_V2 = mkV2 "help" ;
lin hemlock_N = mkN "hemlock" ;
lin hen_N = mkN "hen" ;
lin hence_Adv = mkAdv "hence" ;
lin herd_N2of = mkN2 "herd" "of" ;
---- lin here_Adv = mkAdv "here" ;
lin herring_N = mkN "herring" ;
lin heterogeneity_N = mkN "heterogeneity" ;
lin heterogeneous_A = longA "heterogeneous" ;
lin heuristic_A = longA "heuristic" ;
lin heuristic_N = mkN "heuristic" ;
lin heuristically_Adv = mkAdv "heuristically" ;
lin hide_V2 = mkV2 IrregEng.hide_V ;
lin hide_V = IrregEng.hide_V ;
lin hierarchy_N = mkN "hierarchy" ;
lin high_A = mkA "high" ;
lin highlight_N = mkN "highlight" ;
lin highlight_V2 = mkV2 "highlight" ;
lin hill_N = mkN "hill" ;
lin hind_A = longA "hind" ;
lin hinder_V2 = mkV2 "hinder" ;
lin hindrance_N = mkN "hindrance" ;
lin hinge_N = mkN "hinge" ;
lin hint_N = mkN "hint" ;
lin hint_V2at = mkV2 "hint" "at" ;
lin hire_V2 = mkV2 "hire" ;
lin history_N = mkN "history" ;
lin hit_V2 = mkV2 hit_V ;
lin hither_Adv = mkAdv "hither" ;
lin hitherto_Adv = mkAdv "hitherto" ;
lin hoax_N = mkN "hoax" ;
lin hoax_V2 = mkV2 "hoax" ;
lin hold_V2 = mkV2 hold_V ;
lin hole_N = mkN "hole" ;
lin holiday_N = mkN "holiday" ;
lin hollow_A = mkA "hollow" ;
lin holy_A = mkA "holy" ;
lin home_N = mkN "home" ;
lin homogeneous_A = longA "homogeneous" ;
lin homomorphism_N = mkN "homomorphism" ;
lin hone_V2 = mkV2 "hone" ;
lin honest_A = longA "honest" ;
lin honesty_N = massN "honesty" ;
lin honey_N = mkN "honey" ;
lin honor_N = mkN "honor" ;
lin honour_N = mkN "honour" ;
lin honour_V2 = mkV2 "honour" ;
lin honourable_A = longA "honourable" ;
lin hook_N = mkN "hook" ;
lin hook_V2 = mkV2 "hook" ;
lin hop_N = mkN "hop" ;
lin hop_V = mkV "hop" ;
lin hope_N = mkN "hope" ;
lin hope_V2for = mkV2 "hope" "for" ;
lin hope_VS = mkVS (mkV "hope") ;
lin horizon_N = mkN "horizon" ;
lin horizontal_A = longA "horizontal" ;
lin horn_N = mkN "horn" ;
lin horrendous_A = longA "horrendous" ;
lin horrible_A = longA "horrible" ;
lin horrify_V2 = mkV2 "horrify" ;
lin horror_N = mkN "horror" ;
lin horse_N = mkN "horse" ;
lin hospitable_A = longA "hospitable" ;
lin hospitable_A2to = longA2 "hospitable" "to" ;
lin hospital_N = mkN "hospital" ;
lin hospitality_N = mkN "hospitality" ;
lin host_N = mkN "host" ;
lin host_V2 = mkV2 "host" ;
lin hot_A = mkA "hot" ;
lin hotel_N = mkN "hotel" ;
lin hour_N = mkN "hour" ;
lin house_N = mkN "house" ;
lin house_V2 = mkV2 "house" ;
lin household_A = longA "household" ;
lin household_N = mkN "household" ;
lin how_Adv = mkAdv "how" ;
lin however_Adv = mkAdv "however" ;
lin huge_A = mkA "huge" ;
lin hum_N = mkN "hum" ;
lin hum_V = mkV "hum" ;
lin human_A = longA "human" ;
lin human_N = mkN "human" ;
lin humble_A = mkA "humble" ;
lin humility_N = mkN "humility" ;
lin humor_N = massN "humor" ;
lin humour_N = massN "humour" ;
lin hunch_V = mkV "hunch" ;
lin hundred_N = mkN "hundred" ;
lin hundred_N2 = mkN2 "hundred" ;
lin hunger_V2for = mkV2 "hunger" "for" ;
lin hungry_A = mkA "hungry" ;
lin hungry_A2for = mkA2 "hungry" "for" ;
lin hunt_N = mkN "hunt" ;
lin hunt_V2 = mkV2 "hunt" ;
lin huntsman_N = mkN "huntsman" "huntsmen" ;
lin hurry_V = mkV "hurry" ;
lin hurry_N = mkN "hurry" ;
lin hurt_V2 = mkV2 IrregEng.hurt_V ;
lin hurt_V = IrregEng.hurt_V ;
lin husband_N2of = mkN2 "husband" "of" ;
lin hut_N = mkN "hut" ;
lin hybrid_A = longA "hybrid" ;
lin hydrogen_N = mkN "hydrogen" ;
lin hygiene_N = mkN "hygiene" ;
lin hypothesis_N = mkN "hypothesis" "hypotheses" ;
lin hypothesize_V2 = mkV2 "hypothesize" ;
lin hypothetical_A = longA "hypothetical" ;
lin ice_N = massN "ice" ;
lin iceland_PN = regPN "iceland" ;
lin icelandic_A = longA "icelandic" ;
lin icon_N = mkN "icon" ;
lin idea_N = mkN "idea" ;
lin ideal_A = longA "ideal" ;
lin identical_A = longA "identical" ;
lin identical_A2to = longA2 "identical" "to" ;
lin identify_V2 = mkV2 "identify" ;
lin identity_N = mkN "identity" ;
lin idiocy_N = mkN "idiocy" ;
lin idiom_N = mkN "idiom" ;
lin idiomatic_A = longA "idiomatic" ;
lin idiot_N = mkN "idiot" ;
lin idle_A = mkA "idle" ;
lin idle_V = mkV "idle" ;
lin ignore_V2 = mkV2 "ignore" ;
lin illegal_A = longA "illegal" ;
lin illegitimacy_N = mkN "illegitimacy" ;
lin illegitimate_A = longA "illegitimate" ;
lin illocutionary_A = longA "illocutionary" ;
lin illogical_A = longA "illogical" ;
lin illuminate_V2 = mkV2 "illuminate" ;
lin illusion_N = mkN "illusion" ;
lin illusory_A = longA "illusory" ;
lin illustrate_V2 = mkV2 "illustrate" ;
lin image_N = mkN "image" ;
lin imaginary_A = longA "imaginary" ;
lin imagine_V2 = mkV2 "imagine" ;
lin imagine_VS = mkVS (mkV "imagine") ;
lin imbalance_N = mkN "imbalance" ;
lin imitate_V2 = mkV2 "imitate" ;
lin immaterial_A = longA "immaterial" ;
lin immediacy_N = mkN "immediacy" ;
lin immediate_A = longA "immediate" ;
lin immense_A = longA "immense" ;
lin immigrant_N = mkN "immigrant" ;
lin immigration_N = mkN "immigration" ;
lin immoderate_A = longA "immoderate" ;
lin immodest_A = longA "immodest" ;
lin immodesty_N = mkN "immodesty" ;
lin immune_A2to = longA2 "immune" "to" ;
lin impair_V2 = mkV2 "impair" ;
lin impart_V3to =mkV3 "impart" "to" ;
lin impartial_A = longA "impartial" ;
lin impatient_A = longA "impatient" ;
lin impatient_A2with = longA2 "impatient" "with" ;
lin impenetrable_A = longA "impenetrable" ;
lin imperative_A = longA "imperative" ;
lin imperative_A2 = longA2 "imperative" "" ;
lin imperfect_A = longA "imperfect" ;
lin imperfection_N = mkN "imperfection" ;
lin imperial_A = longA "imperial" ;
lin imperious_A = longA "imperious" ;
lin impersonal_A = longA "impersonal" ;
lin impertinent_A = longA "impertinent" ;
lin impinge_V2on = mkV2 "impinge" "on" ;
lin implausible_A = longA "implausible" ;
lin implement_V2 = mkV2 "implement" ;
lin implicate_V2 = mkV2 "implicate" ;
lin implicature_N = mkN "implicature" ;
lin implicit_A = longA "implicit" ;
lin implicit_A2in = longA2 "implicit" "in" ;
lin imply_VS = mkVS (mkV "imply") ;
lin impolite_A = longA "impolite" ;
lin impolite_A2to = longA2 "impolite" "to" ;
lin import_N = mkN "import" ;
lin import_V2 = mkV2 "import" ;
lin importance_N = massN "importance" ;
lin important_A = longA "important" ;
lin important_A2 = longA2 "important" "" ;
lin important_A2 = longA2 "important" "" ;
lin impose_V3on =mkV3 "impose" "on" ;
lin imposition_N = mkN "imposition" ;
lin impossible_A2 = longA2 "impossible" "" ;
lin impossible_A = longA "impossible" ;
lin impossible_A2 = longA2 "impossible" "" ;
lin impossible_A2 = longA2 "impossible" "" ;
lin imprecise_A = longA "imprecise" ;
lin imprecision_N = mkN "imprecision" ;
lin impress_V2 = mkV2 "impress" ;
lin improbable_A = longA "improbable" ;
lin improve_V = mkV "improve" ;
lin impure_A = mkA "impure" ;
--lin in_Prep = mkPrep "in" ;
lin inability_N2to = mkN2 "inability" "to" ;
lin inaccuracy_N = mkN "inaccuracy" ;
lin inactive_A = longA "inactive" ;
lin inadequacy_N2for = mkN2 "inadequacy" "for" ;
lin inadequecy_N = mkN "inadequecy" ;
lin incapacitate_V2 = mkV2 "incapacitate" ;
lin incarnation_N = mkN "incarnation" ;
lin inch_N = mkN "inch" ;
lin incident_N = mkN "incident" ;
lin incidental_A = longA "incidental" ;
lin incisive_A = longA "incisive" ;
lin incline_V = mkV "incline" ;
lin inclined_A2to = longA2 "inclined" "to" ;
lin include_V2 = mkV2 "include" ;
lin including_Prep = mkPrep "including" ;
lin inclusion_N = mkN "inclusion" ;
lin inclusive_A = longA "inclusive" ;
lin incoherence_N = mkN "incoherence" ;
lin income_N = mkN "income" ;
lin inconceivable_A2 = longA2 "inconceivable" "" ;
lin inconsistency_N = mkN "inconsistency" ;
lin incontestable_A = longA "incontestable" ;
lin incontestable_A2 = longA2 "incontestable" "" ;
lin inconvenience_N = mkN "inconvenience" ;
lin inconvenience_V2 = mkV2 "inconvenience" ;
lin incorporate_V2 = mkV2 "incorporate" ;
lin incorporate_V2 = mkV2 "incorporate" ;
lin incorrigible_A = longA "incorrigible" ;
lin increase_N = mkN "increase" ;
lin increase_V2 = mkV2 "increase" ;
lin increase_V = mkV "increase" ;
lin increment_N = mkN "increment" ;
lin increment_V2 = mkV2 "increment" ;
lin incur_V2 = mkV2 "incur" ;
lin indeed_Adv = mkAdv "indeed" ;
lin indefinite_A = mkA "indefinite" ;
lin independence_N = massN "independence" ;
lin independent_A = longA "independent" ;
lin indeterminacy_N = mkN "indeterminacy" ;
lin index_N = mkN "index" "indices" ;
lin index_V2 = mkV2 "index" ;
lin india_PN = regPN "india" ;
lin indian_A = mkA "indian" ;
lin indicate_VS = mkVS (mkV "indicate") ;
lin indigestion_N = mkN "indigestion" ;
lin indirect_A = longA "indirect" ;
lin indiscriminate_A = longA "indiscriminate" ;
lin indistinguishable_A = longA "indistinguishable" ;
lin individual_A = longA "individual" ;
lin individual_N = mkN "individual" ;
lin indoor_A = longA "indoor" ;
lin induce_V2 = mkV2 "induce" ;
lin induct_V2 = mkV2 "induct" ;
lin indulge_V2in = mkV2 "indulge" "in" ;
lin indulgent_A = longA "indulgent" ;
lin industry_N = mkN "industry" ;
lin inescapable_A = longA "inescapable" ;
lin inevitable_A = longA "inevitable" ;
lin infect_V2 = mkV2 "infect" ;
lin infection_N = mkN "infection" ;
lin infectious_A = longA "infectious" ;
lin infer_V3from =mkV3 "infer" "from" ;
lin inference_N = mkN "inference" ;
lin inferior_A = longA "inferior" ;
lin inferior_A2to = longA2 "inferior" "to" ;
lin infinite_A = longA "infinite" ;
lin infinitesimal_A = longA "infinitesimal" ;
lin infinitive_A = longA "infinitive" ;
lin infix_N = mkN "infix" ;
lin inflate_V2 = mkV2 "inflate" ;
lin inflation_N = mkN "inflation" ;
lin inflect_V = mkV "inflect" ;
lin influence_N = mkN "influence" ;
lin influence_V2 = mkV2 "influence" ;
lin inform_V3 =mkV3 "inform" ;
lin informal_A = longA "informal" ;
lin informant_N = mkN "informant" ;
lin information_N = mkN "information" ;
lin ingenious_A = longA "ingenious" ;
lin ingenuity_N = massN "ingenuity" ;
lin ingredient_N = mkN "ingredient" ;
lin inhabit_V2 = mkV2 "inhabit" ;
lin inherent_A = longA "inherent" ;
lin inherent_A2to = longA2 "inherent" "to" ;
lin inherit_V3from =mkV3 "inherit" "from" ;
lin inheritance_N = mkN "inheritance" ;
lin inhibit_V2 = mkV2 "inhibit" ;
lin initial_A = longA "initial" ;
lin initialize_V2 = mkV2 "initialize" ;
lin initiate_V2 = mkV2 "initiate" ;
lin inject_V3with =mkV3 "inject" "with" ;
lin injunction_N = mkN "injunction" ;
lin injure_V2 = mkV2 "injure" ;
lin injury_N = mkN "injury" ;
lin ink_N = mkN "ink" ;
lin inn_N = mkN "inn" ;
lin innate_A = longA "innate" ;
lin innate_A2to = longA2 "innate" "to" ;
lin inner_A = longA "inner" ;
lin innocuous_A = longA "innocuous" ;
lin innovation_N = mkN "innovation" ;
lin input_N = mkN "input" ;
lin inquire_V2about = mkV2 "inquire" "about" ;
lin inquire_V2 = mkV2 "inquire" ;
lin inquiry_N2about = mkN2 "inquiry" "about" ;
lin inscribe_V2 = mkV2 "inscribe" ;
lin inscription_N = mkN "inscription" ;
lin insect_N = mkN "insect" ;
lin insert_V2 = mkV2 "insert" ;
lin inside_Adv = mkAdv "inside" ;
lin inside_N = mkN "inside" ;
lin insight_N = mkN "insight" ;
lin insist_V2 = mkV2 "insist" ;
lin insistence_N2on = mkN2 "insistence" "on" ;
lin insistence_N2 = mkN2 "insistence" ;
lin insistent_A2 = longA2 "insistent" "" ;
lin inspect_V2 = mkV2 "inspect" ;
lin inspector_N = mkN "inspector" ;
lin inspire_V2 = mkV2 "inspire" ;
lin instability_N = mkN "instability" ;
lin install_V2 = mkV2 "install" ;
lin instance_N2of = mkN2 "instance" "of" ;
lin instant_N = mkN "instant" ;
lin instantiate_V2 = mkV2 "instantiate" ;
lin instantly_Adv = mkAdv "instantly" ;
lin instigate_V2 = mkV2 "instigate" ;
lin instil_V3in =mkV3 "instil" "in" ;
lin instinct_N = mkN "instinct" ;
lin institute_V2 = mkV2 "institute" ;
lin institute_N = mkN "institute" ;
lin institution_N = mkN "institution" ;
lin instruct_V2 = mkV2 "instruct" ;
lin instrument_N = mkN "instrument" ;
lin insulate_V3from =mkV3 "insulate" "from" ;
lin insult_N = mkN "insult" ;
lin insult_V2 = mkV2 "insult" ;
lin insurance_N = mkN "insurance" ;
lin insure_V2 = mkV2 "insure" ;
lin intact_A = longA "intact" ;
lin integer_N = mkN "integer" ;
lin integral_A = longA "integral" ;
lin integrate_V3with =mkV3 "integrate" "with" ;
lin intellectual_A = longA "intellectual" ;
lin intelligence_N = mkN "intelligence" ;
lin intelligent_A = longA "intelligent" ;
lin intelligible_A = longA "intelligible" ;
lin intend_VV = mkVV (mkV "intend") ;
lin intense_A = longA "intense" ;
lin intension_N = mkN "intension" ;
lin intention_N = mkN "intention" ;
lin inter_V2 = mkV2 "inter" ;
lin interdisciplinary_A = longA "interdisciplinary" ;
lin interest_N = mkN "interest" ;
lin interest_V2 = mkV2 "interest" ;
lin interface_N = mkN "interface" ;
lin interfere_V2with = mkV2 "interfere" "with" ;
lin interference_N = mkN "interference" ;
lin interject_V = mkV "interject" ;
lin intermediate_A = longA "intermediate" ;
lin internal_A = longA "internal" ;
lin international_A = longA "international" ;
lin interpolate_V2 = mkV2 "interpolate" ;
lin interpret_V2 = mkV2 "interpret" ;
lin interpretive_A = longA "interpretive" ;
lin interrogate_V2 = mkV2 "interrogate" ;
lin interrogative_A = longA "interrogative" ;
lin interrupt_V2 = mkV2 "interrupt" ;
lin intersect_V2 = mkV2 "intersect" ;
lin interval_N = mkN "interval" ;
lin intervene_V = mkV "intervene" ;
lin intimacy_N = mkN "intimacy" ;
lin intimate_A = longA "intimate" ;
lin intimate_VS = mkVS (mkV "intimate") ;
lin into_Prep = mkPrep "into" ;
lin intonation_N = mkN "intonation" ;
lin intractable_A = longA "intractable" ;
lin intransitive_A = longA "intransitive" ;
lin intravenous_A = longA "intravenous" ;
lin intricacy_N = mkN "intricacy" ;
lin intricate_A = longA "intricate" ;
lin intrigue_N = mkN "intrigue" ;
lin intrigue_V = mkV "intrigue" ;
lin intrinsic_A = longA "intrinsic" ;
lin intrinsically_Adv = mkAdv "intrinsically" ;
lin introduce_V3to =mkV3 "introduce" "to" ;
lin introduction_N2to = mkN2 "introduction" "to" ;
lin introspection_N = massN "introspection" ;
lin introspective_A = longA "introspective" ;
lin intrude_V = mkV "intrude" ;
lin intrusion_N = mkN "intrusion" ;
lin intuition_N = mkN "intuition" ;
lin intuitive_A = longA "intuitive" ;
lin invade_V2 = mkV2 "invade" ;
lin invalid_N = mkN "invalid" ;
lin invalidate_V2 = mkV2 "invalidate" ;
lin invaluable_A = longA "invaluable" ;
lin invariable_A = longA "invariable" ;
lin invariant_A = longA "invariant" ;
lin invasion_N = mkN "invasion" ;
lin invent_V2 = mkV2 "invent" ;
lin inverse_A = longA "inverse" ;
lin inversion_N = mkN "inversion" ;
lin invert_V2 = mkV2 "invert" ;
lin invest_V3with =mkV3 "invest" "with" ;
lin investigate_V2 = mkV2 "investigate" ;
lin invisible_A = longA "invisible" ;
lin invisible_A2to = longA2 "invisible" "to" ;
lin invite_V3to =mkV3 "invite" "to" ;
lin invocation_N = mkN "invocation" ;
lin invoke_V2 = mkV2 "invoke" ;
lin involve_V2 = mkV2 "involve" ;
lin inwards_Adv = mkAdv "inwards" ;
lin ireland_PN = regPN "ireland" ;
lin irish_A = longA "irish" ;
lin iron_N = mkN "iron" ;
lin iron_V2 = mkV2 "iron" ;
lin irony_N = mkN "irony" ;
lin irrational_A = longA "irrational" ;
lin irregular_A = longA "irregular" ;
lin irrelevant_A = longA "irrelevant" ;
lin irremediable_A = longA "irremediable" ;
lin irrespective_A2of = longA2 "irrespective" "of" ;
lin irretrievable_A = longA "irretrievable" ;
lin irritant_N = mkN "irritant" ;
lin irritate_V2 = mkV2 "irritate" ;
lin island_N = mkN "island" ;
lin isolable_A = longA "isolable" ;
lin isolate_V2 = mkV2 "isolate" ;
lin isomorphic_A = longA "isomorphic" ;
lin issue_V = mkV "issue" ;
lin issue_N = mkN "issue" ;
lin italy_PN = regPN "italy" ;
lin item_N = mkN "item" ;
lin itemize_V2 = mkV2 "itemize" ;
lin iterate_V = mkV "iterate" ;
lin january_PN = regPN "january" ;
lin japan_PN = regPN "japan" ;
lin japanese_A = longA "japanese" ;
lin jaundice_N = mkN "jaundice" ;
lin jaundiced_A = longA "jaundiced" ;
lin jaw_N = mkN "jaw" ;
lin jealous_A = longA "jealous" ;
lin jealous_A2of = longA2 "jealous" "of" ;
lin jealousy_N2of = mkN2 "jealousy" "of" ;
lin jew_N = mkN "jew" ;
lin jewel_N = mkN "jewel" ;
lin jeweller_N = mkN "jeweller" ;
lin jewellery_N = mkN "jewellery" ;
lin job_N = mkN "job" ;
lin john_PN = regPN "john" ;
lin join_V3to =mkV3 "join" "to" ;
lin joint_N = mkN "joint" ;
lin joke_N = mkN "joke" ;
lin joke_V = mkV "joke" ;
lin journal_N = mkN "journal" ;
lin journalism_N = mkN "journalism" ;
lin journalist_N = mkN "journalist" ;
lin journey_N = mkN "journey" ;
lin joy_N = mkN "joy" ;
lin judge_N = mkN "judge" ;
lin judge_V2 = mkV2 "judge" ;
lin judge_V2 = mkV2 "judge" ;
lin judgment_N = mkN "judgment" ;
lin judicious_A = longA "judicious" ;
lin juggle_V2 = mkV2 "juggle" ;
lin juggle_V = mkV "juggle" ;
lin juice_N = mkN "juice" ;
lin july_PN = regPN "july" ;
lin jumble_V2 = mkV2 "jumble" ;
lin jump_V = mkV "jump" ;
lin jump_N = mkN "jump" ;
lin june_PN = regPN "june" ;
lin junk_N = mkN "junk" ;
lin just_A = longA "just" ;
lin justice_N = mkN "justice" ;
lin justify_V2 = mkV2 "justify" ;
lin juxtapose_V2 = mkV2 "juxtapose" ;
lin juxtaposition_N = mkN "juxtaposition" ;
lin keen_A = mkA "keen" ;
lin keen_A2on = mkA2 "keen" "on" ;
lin keen_A2 = mkA2 "keen" "" ;
lin keep_V2 = mkV2 keep_V ;
lin kennel_N = mkN "kennel" ;
lin kettle_N = mkN "kettle" ;
lin key_N = mkN "key" ;
lin kick_N = mkN "kick" ;
lin kick_V2 = mkV2 "kick" ;
lin kidney_N = mkN "kidney" ;
lin kill_V2 = mkV2 "kill" ;
lin kill_V3f =mkV3 "kill" "f" ;
lin kilogram_N = mkN "kilogram" ;
lin kilometre_N = mkN "kilometre" ;
lin kim_PN = regPN "kim" ;
lin kind_N = mkN "kind" ;
lin kind_A = mkA "kind" ;
lin kind_A2to = mkA2 "kind" "to" ;
lin king_N = mkN "king" ;
lin kingdom_N = mkN "kingdom" ;
lin kiss_N = mkN "kiss" ;
lin kiss_V2 = mkV2 "kiss" ;
lin kiss_V = mkV "kiss" ;
lin kitchen_N = mkN "kitchen" ;
lin knee_N = mkN "knee" ;
lin kneel_V = IrregEng.kneel_V ;
lin knife_N = mkN "knife" "knives" ;
lin knob_N = mkN "knob" ;
lin knock_N = mkN "knock" ;
lin knock_V2 = mkV2 "knock" ;
lin knock_V = mkV "knock" ;
lin knocker_N = mkN "knocker" ;
lin knot_N = mkN "knot" ;
lin knot_V2 = mkV2 "knot" ;
lin know_VS = mkVS know_V ;
lin label_N = mkN "label" ;
lin label_V2 = mkV2 "label" ;
lin laboratory_N = mkN "laboratory" ;
lin laborious_A = longA "laborious" ;
lin labour_N = massN "labour" ;
lin labour_V = mkV "labour" ;
lin lace_N = mkN "lace" ;
lin lace_V2 = mkV2 "lace" ;
lin lack_N = mkN "lack" ;
lin lack_V2 = mkV2 "lack" ;
lin lacuna_N = mkN "lacuna" ;
lin ladder_N = mkN "ladder" ;
lin lady_N = mkN "lady" ;
lin lake_N = mkN "lake" ;
lin lamb_N = mkN "lamb" ;
lin lament_N = mkN "lament" ;
lin lament_V2 = mkV2 "lament" ;
lin lamp_N = mkN "lamp" ;
lin land_N = mkN "land" ;
lin land_V = mkV "land" ;
lin lane_N = mkN "lane" ;
lin language_N = mkN "language" ;
lin lapse_V = mkV "lapse" ;
lin large_A = mkA "large" ;
lin last_A = longA "last" ;
lin last_V = mkV "last" ;
lin late_A = mkA "late" ;
lin lately_Adv = mkAdv "lately" ;
lin latitude_N = mkN "latitude" ;
lin lattice_N = mkN "lattice" ;
lin laugh_N = mkN "laugh" ;
lin laugh_V2at = mkV2 "laugh" "at" ;
lin laughter_N = mkN "laughter" ;
lin law_N = mkN "law" ;
lin lawn_N = mkN "lawn" ;
lin lawyer_N = mkN "lawyer" ;
lin lax_A = mkA "lax" ;
lin lay_V3loc =mkV3 lay_V "loc" ;
lin layer_N = mkN "layer" ;
lin layer_V2 = mkV2 "layer" ;
lin laze_V = mkV "laze" ;
lin lazy_A = mkA "lazy" ;
lin lead_N = mkN "lead" ;
lin lead_V2 = mkV2 lead_V ;
lin leaf_N = mkN "leaf" "leaves" ;
lin league_N = mkN "league" ;
lin lean_V2on = mkV2 "lean" "on" ;
lin leap_V = mkV "leap" ;
lin learn_VS = mkVS (mkV "learn") ;
lin leather_N = massN "leather" ;
lin leave_V2 = mkV2 IrregEng.leave_V ;
lin leave_V = IrregEng.leave_V ;
lin lecture_N = mkN "lecture" ;
lin lecture_V = mkV "lecture" ;
lin lee_PN = regPN "lee" ;
lin left_A = longA "left" ;
lin leftward_A = longA "leftward" ;
lin leg_N = mkN "leg" ;
lin legacy_N = mkN "legacy" ;
lin legal_A = longA "legal" ;
lin legible_A = longA "legible" ;
lin legitimate_A = longA "legitimate" ;
lin legitimize_V2 = mkV2 "legitimize" ;
lin lemon_N = mkN "lemon" ;
lin lend_V3to =mkV3 "lend" "to" ;
lin length_N = mkN "length" ;
lin lengthen_V2 = mkV2 "lengthen" ;
lin lesson_N = mkN "lesson" ;
lin let_V3se_vp =mkV3 let_V "se_vp" ;
lin lethal_A = longA "lethal" ;
lin letter_N = mkN "letter" ;
lin level_A = longA "level" ;
lin level_N = mkN "level" ;
lin level_V2 = mkV2 "level" ;
lin lexical_A = longA "lexical" ;
lin lexicalist_A = longA "lexicalist" ;
lin lexicon_N = mkN "lexicon" ;
lin liable_A = longA "liable" ;
lin liable_A2to = longA2 "liable" "to" ;
lin liable_A2 = longA2 "liable" "" ;
lin liar_N = mkN "liar" ;
lin liberal_A = longA "liberal" ;
lin liberate_V3from =mkV3 "liberate" "from" ;
lin libertine_N = mkN "libertine" ;
lin liberty_N = mkN "liberty" ;
lin library_N = mkN "library" ;
lin licence_N = mkN "licence" ;
lin license_V2 = mkV2 "license" ;
lin lid_N = mkN "lid" ;
lin lie_V = mkV "lie" ;
lin lie_V2 = mkV2 IrregEng.lie_V ;
lin life_N = mkN "life" ;
lin lift_N = mkN "lift" ;
lin lift_V2 = mkV2 "lift" ;
lin light_A = mkA "light" ;
lin light_N = mkN "light" ;
lin light_V2 = mkV2 light_V ;
lin lightning_N = mkN "lightning" ;
lin like_A = longA "like" ;
lin like_V2 = mkV2 "like" ;
lin like_V2 = mkV2 "like" ;
lin like_V2 = mkV2 "like" ;
lin likelihood_N2of = mkN2 "likelihood" "of" ;
lin likely_A = longA "likely" ;
lin likely_A2 = longA2 "likely" "" ;
lin likely_A2 = longA2 "likely" "" ;
lin limb_N = mkN "limb" ;
lin lime_N = mkN "lime" ;
lin limit_N = mkN "limit" ;
lin limit_V2 = mkV2 "limit" ;
lin line_N = mkN "line" ;
lin line_V2 = mkV2 "line" ;
lin linear_A = longA "linear" ;
lin linguist_N = mkN "linguist" ;
lin linguistic_A = longA "linguistic" ;
lin linguistics_N = massN "linguistics" ;
lin link_N = mkN "link" ;
lin link_V3to =mkV3 "link" "to" ;
lin lion_N = mkN "lion" ;
lin lip_N = mkN "lip" ;
lin liquefaction_N = mkN "liquefaction" ;
lin liquefy_V = mkV "liquefy" ;
lin liquid_A = longA "liquid" ;
lin liquid_N = mkN "liquid" ;
lin lisp_N = mkN "lisp" ;
lin lisp_PN = regPN "lisp" ;
lin list_N = mkN "list" ;
lin list_V2 = mkV2 "list" ;
lin listen_V2to = mkV2 "listen" "to" ;
lin liszt_PN = regPN "liszt" ;
lin literal_A = longA "literal" ;
lin literary_A = longA "literary" ;
lin literature_N = massN "literature" ;
lin litre_N = mkN "litre" ;
lin little_N = massN "little" ;
lin live_A = mkA "live" ;
lin live_V2 = mkV2 "live" ;
lin load_N = mkN "load" ;
lin load_V2 = mkV2 "load" ;
lin loaf_N = mkN "loaf" "loaves" ;
lin loan_V3to =mkV3 "loan" "to" ;
lin lobster_N = mkN "lobster" ;
lin local_A = longA "local" ;
lin locate_V2 = mkV2 "locate" ;
lin location_N = mkN "location" ;
lin locative_A = longA "locative" ;
lin lock_N = mkN "lock" ;
lin lock_V2 = mkV2 "lock" ;
lin log_N = mkN "log" ;
lin logarithm_N = mkN "logarithm" ;
lin logic_N = mkN "logic" ;
lin loiter_V = mkV "loiter" ;
lin london_PN = regPN "london" ;
lin lonely_A = mkA "lonely" ;
lin long_Adv = mkAdv "long" ;
lin long_A = mkA "long" ;
lin long_V2for = mkV2 "long" "for" ;
lin longwinded_A = longA "longwinded" ;
lin look_N = mkN "look" ;
lin look_V3 =mkV3 "look" ;
lin look_V2for = mkV2 "look" "for" ;
lin loop_N = mkN "loop" ;
lin loophole_N = mkN "loophole" ;
lin loose_A = mkA "loose" ;
lin lord_N = mkN "lord" ;
lin lore_N = mkN "lore" ;
lin lose_V2 = mkV2 lose_V ;
lin loss_N = mkN "loss" ;
lin lot_N = mkN "lot" ;
lin lottery_N = mkN "lottery" ;
lin loud_A = mkA "loud" ;
lin lounge_V = mkV "lounge" ;
lin love_N = mkN "love" ;
lin love_V2 = mkV2 "love" ;
lin lovely_A = mkA "lovely" ;
lin low_A = mkA "low" ;
lin lower_V2 = mkV2 "lower" ;
lin loyal_A = longA "loyal" ;
lin loyal_A2to = longA2 "loyal" "to" ;
lin luck_N = mkN "luck" ;
lin lump_N = mkN "lump" ;
lin lung_N = mkN "lung" ;
lin lunge_V2 = mkV2 "lunge" ;
lin lurk_V = mkV "lurk" ;
lin lush_A = mkA "lush" ;
lin luxury_N = mkN "luxury" ;
lin machine_N = mkN "machine" ;
lin machinery_N = massN "machinery" ;
lin mad_A = mkA "mad" ;
lin mad_A2about = mkA2 "mad" "about" ;
lin mad_A2with = mkA2 "mad" "with" ;
lin made_A2from = longA2 "made" "from" ;
lin magazine_N = mkN "magazine" ;
lin magic_A = longA "magic" ;
lin magic_N = massN "magic" ;
lin magnet_N = mkN "magnet" ;
lin magnetic_A = longA "magnetic" ;
lin magnitude_N = mkN "magnitude" ;
lin mail_N = massN "mail" ;
lin mail_V3to =mkV3 "mail" "to" ;
lin main_A = longA "main" ;
lin mainstream_A = longA "mainstream" ;
lin maintain_V2 = mkV2 "maintain" ;
lin maintain_VS = mkVS (mkV "maintain") ;
lin maintenance_N = mkN "maintenance" ;
lin major_A = longA "major" ;
lin make_V2 = mkV2 make_V ;
lin male_A = longA "male" ;
lin malign_V2 = mkV2 "malign" ;
lin malignant_A = longA "malignant" ;
lin mammal_N = mkN "mammal" ;
lin man_N = mkN "man" "men" ;
lin man_V2 = mkV2 "man" ;
lin manage_V2 = mkV2 "manage" ;
lin manage_VV = mkVV (mkV "manage") ;
lin manager_N = mkN "manager" ;
lin mandatory_A = longA "mandatory" ;
lin manifest_A = longA "manifest" ;
lin manifest_N = mkN "manifest" ;
lin manifest_V2 = mkV2 "manifest" ;
lin manifestation_N = mkN "manifestation" ;
lin manipulate_V2 = mkV2 "manipulate" ;
lin manner_N = mkN "manner" ;
lin manoeuvre_N = mkN "manoeuvre" ;
lin manoeuvre_V2 = mkV2 "manoeuvre" ;
lin manoeuvre_V = mkV "manoeuvre" ;
lin manual_A = longA "manual" ;
lin manual_N = mkN "manual" ;
lin manufacture_V2 = mkV2 "manufacture" ;
lin manuscript_N = mkN "manuscript" ;
lin map_N = mkN "map" ;
lin map_V3to =mkV3 "map" "to" ;
lin mapping_N = mkN "mapping" ;
lin march_N = mkN "march" ;
lin march_PN = regPN "march" ;
lin margin_N = mkN "margin" ;
lin marginal_A = longA "marginal" ;
lin marine_A = longA "marine" ;
lin mark_N = mkN "mark" ;
lin mark_V2 = mkV2 "mark" ;
lin market_N = mkN "market" ;
lin marking_N = mkN "marking" ;
lin marriage_N = mkN "marriage" ;
lin marry_V2 = mkV2 "marry" ;
lin mars_PN = regPN "mars" ;
lin mary_PN = regPN "mary" ;
lin mass_N = mkN "mass" ;
lin massive_A = longA "massive" ;
lin master_N = mkN "master" ;
lin master_V2 = mkV2 "master" ;
lin mat_N = mkN "mat" ;
lin match_N = mkN "match" ;
lin match_V2 = mkV2 "match" ;
lin material_A = longA "material" ;
lin material_N = mkN "material" ;
lin mathematical_A = longA "mathematical" ;
lin mathematician_N = mkN "mathematician" ;
lin mathematics_N = massN "mathematics" ;
lin matrix_N = mkN "matrix" "matrices" ;
lin matter_N = mkN "matter" ;
lin matter_V = mkV "matter" ;
lin mature_A = mkA "mature" ;
lin mature_V = mkV "mature" ;
lin maxim_N = mkN "maxim" ;
lin maximal_A = longA "maximal" ;
lin maximize_V2 = mkV2 "maximize" ;
lin maximum_N = mkN "maximum" ;
lin may_PN = regPN "may" ;
lin maybe_Adv = mkAdv "maybe" ;
lin mayor_N = mkN "mayor" ;
lin meal_N = mkN "meal" ;
lin mean_A = mkA "mean" ;
lin mean_V2 = mkV2 mean_V ;
lin mean_VS = mkVS mean_V ;
lin meaning_N = mkN "meaning" ;
lin meanwhile_Adv = mkAdv "meanwhile" ;
lin measure_N = mkN "measure" ;
lin measure_V2 = mkV2 "measure" ;
lin meat_N = massN "meat" ;
lin mechanic_V = mkV "mechanic" ;
lin mechanical_A = longA "mechanical" ;
lin mechanism_N = mkN "mechanism" ;
lin mechanize_V2 = mkV2 "mechanize" ;
lin mediate_V2 = mkV2 "mediate" ;
lin medical_A = longA "medical" ;
lin medicine_N = massN "medicine" ;
lin medium_A = longA "medium" ;
lin medium_N = mkN "medium" ;
lin meet_V2 = mkV2 meet_V ;
lin meeting_N2with = mkN2 "meeting" "with" ;
lin melody_N = mkN "melody" ;
lin melt_V = mkV "melt" ;
lin member_N = mkN "member" ;
lin memorable_A = longA "memorable" ;
lin memorial_N = mkN "memorial" ;
lin memory_N2ger = mkN2 "memory" "ger" ;
lin memory_N2of = mkN2 "memory" "of" ;
lin mend_V2 = mkV2 "mend" ;
lin mental_A = longA "mental" ;
lin mention_N = mkN "mention" ;
lin mention_V2 = mkV2 "mention" ;
lin mercy_N = mkN "mercy" ;
lin merge_V2 = mkV2 "merge" ;
lin merit_N = mkN "merit" ;
lin merry_A = mkA "merry" ;
lin mess_N = mkN "mess" ;
lin message_N = mkN "message" ;
lin messenger_N = mkN "messenger" ;
lin metal_N = mkN "metal" ;
lin metaphor_N = mkN "metaphor" ;
lin method_N = mkN "method" ;
lin methodical_A = longA "methodical" ;
lin methodology_N = mkN "methodology" ;
lin metre_N = mkN "metre" ;
lin metric_A = longA "metric" ;
lin microbiology_N = mkN "microbiology" ;
lin microphone_N = mkN "microphone" ;
lin microscope_N = mkN "microscope" ;
lin middle_A = longA "middle" ;
lin middle_N = mkN "middle" ;
lin mighty_A = mkA "mighty" ;
lin migrate_V = mkV "migrate" ;
lin mild_A = mkA "mild" ;
lin mile_N = mkN "mile" ;
lin military_A = longA "military" ;
lin milk_N = massN "milk" ;
lin mill_N = mkN "mill" ;
lin mill_V2 = mkV2 "mill" ;
lin million_N2 = mkN2 "million" ;
lin mimic_N = mkN "mimic" ;
lin mimic_V2 = mkV2 "mimic" ;
lin mind_N = mkN "mind" ;
lin mind_V2 = mkV2 "mind" ;
lin mind_V2 = mkV2 "mind" ;
lin mine_N = mkN "mine" ;
lin mine_V2 = mkV2 "mine" ;
lin mineral_N = mkN "mineral" ;
lin minim_N = mkN "minim" ;
lin minimal_A = longA "minimal" ;
lin minimize_V2 = mkV2 "minimize" ;
lin minimum_N = mkN "minimum" ;
lin minister_N = mkN "minister" ;
lin ministry_N = mkN "ministry" ;
lin ministry_N2of = mkN2 "ministry" "of" ;
lin minor_A = longA "minor" ;
lin minor_N = mkN "minor" ;
lin minute_A = longA "minute" ;
lin minute_N = mkN "minute" ;
lin mirror_N = mkN "mirror" ;
lin miscellaneous_A = longA "miscellaneous" ;
lin misconception_N = mkN "misconception" ;
lin misery_N = mkN "misery" ;
lin mislead_V2 = mkV2 "mislead" ;
lin misplace_V2 = mkV2 "misplace" ;
lin miss_V2 = mkV2 "miss" ;
lin missile_N = mkN "missile" ;
lin mist_N = mkN "mist" ;
lin mistake_N = mkN "mistake" ;
lin mistake_V3for =mkV3 mistake_V "for" ;
lin mix_V3with =mkV3 "mix" "with" ;
lin mixture_N = mkN "mixture" ;
lin mnemonic_A = longA "mnemonic" ;
lin mode_N = mkN "mode" ;
lin model_A = longA "model" ;
lin model_N = mkN "model" ;
lin model_V2 = mkV2 "model" ;
lin moderate_A = longA "moderate" ;
lin moderate_V2 = mkV2 "moderate" ;
lin modern_A = longA "modern" ;
lin modest_A = longA "modest" ;
lin modesty_N = massN "modesty" ;
lin modify_V2 = mkV2 "modify" ;
lin modular_A = longA "modular" ;
lin module_N = mkN "module" ;
lin molecular_A = longA "molecular" ;
lin molecule_N = mkN "molecule" ;
lin moment_N = mkN "moment" ;
lin momentary_A = longA "momentary" ;
lin momentous_A = longA "momentous" ;
lin momentum_N = mkN "momentum" ;
lin monday_PN = regPN "monday" ;
lin money_N = massN "money" ;
lin monitor_N = mkN "monitor" ;
lin monitor_V2 = mkV2 "monitor" ;
lin monkey_N = mkN "monkey" ;
lin monotonic_A = longA "monotonic" ;
lin monotonically_Adv = mkAdv "monotonically" ;
lin month_N = mkN "month" ;
lin moon_N = mkN "moon" ;
lin moral_A = longA "moral" ;
lin moral_N = mkN "moral" ;
lin morning_N = mkN "morning" ;
lin morpheme_N = mkN "morpheme" ;
lin morphology_N = mkN "morphology" ;
lin morphosyntactic_A = longA "morphosyntactic" ;
lin mortal_A = longA "mortal" ;
lin mortise_N = mkN "mortise" ;
lin mosque_N = mkN "mosque" ;
lin mosquito_N = mkN "mosquito" ;
lin mostly_Adv = mkAdv "mostly" ;
lin mother_N2of = mkN2 "mother" "of" ;
lin motion_N = mkN "motion" ;
lin motivate_V2 = mkV2 "motivate" ;
lin motive_N = mkN "motive" ;
lin motor_N = mkN "motor" ;
lin mould_N = mkN "mould" ;
lin mould_V2 = mkV2 "mould" ;
lin mountain_N = mkN "mountain" ;
lin mouse_N = mk2N "mouse" "mice";
lin mouth_N = mkN "mouth" ;
lin move_V = mkV "move" ;
lin mud_N = massN "mud" ;
lin muesli_N = massN "muesli" ;
lin multifarious_A = longA "multifarious" ;
lin multiple_A = longA "multiple" ;
lin multiplicity_N = mkN "multiplicity" ;
lin multiply_V3by =mkV3 "multiply" "by" ;
lin multitude_N2of = mkN2 "multitude" "of" ;
lin mundane_A = longA "mundane" ;
lin murder_N = mkN "murder" ;
lin muscle_N = mkN "muscle" ;
lin muscular_A = longA "muscular" ;
lin music_N = massN "music" ;
lin musical_N = mkN "musical" ;
lin mutter_V2about = mkV2 "mutter" "about" ;
lin mutual_A = longA "mutual" ;
lin mystery_N = mkN "mystery" ;
lin myth_N = mkN "myth" ;
lin mythical_A = longA "mythical" ;
lin mythology_N = mkN "mythology" ;
lin nail_N = mkN "nail" ;
lin naive_A = longA "naive" ;
lin name_N = mkN "name" ;
lin name_V2 = mkV2 "name" ;
lin namely_Adv = mkAdv "namely" ;
lin narrow_A = mkA "narrow" ;
lin narrow_V2 = mkV2 "narrow" ;
lin nasty_A = mkA "nasty" ;
lin nation_N = mkN "nation" ;
lin native_A = longA "native" ;
lin native_N = mkN "native" ;
lin nature_N = mkN "nature" ;
lin navigate_V = mkV "navigate" ;
lin navigator_N = mkN "navigator" ;
lin navy_N = mkN "navy" ;
lin near_A = mkA "near" ;
lin near_A2to = mkA2 "near" "to" ;
lin nearby_Adv = mkAdv "nearby" ;
lin neat_A = mkA "neat" ;
lin necessary_A = longA "necessary" ;
lin necessary_A2for = longA2 "necessary" "for" ;
lin necessary_A2to = longA2 "necessary" "to" ;
lin necessitate_V2 = mkV2 "necessitate" ;
lin necessity_N = mkN "necessity" ;
lin neck_N = mkN "neck" ;
lin need_N = mkN "need" ;
lin need_V2 = mkV2 "need" ;
lin needle_N = mkN "needle" ;
lin negate_V2 = mkV2 "negate" ;
lin negative_A = longA "negative" ;
lin negative_N = mkN "negative" ;
lin neglect_N = mkN "neglect" ;
lin neglect_V2 = mkV2 "neglect" ;
lin negligence_N = mkN "negligence" ;
lin negligent_A = longA "negligent" ;
lin negligible_A = longA "negligible" ;
lin negotiate_V2with = mkV2 "negotiate" "with" ;
lin neighbour_N = mkN "neighbour" ;
lin nephew_N2of = mkN2 "nephew" "of" ;
lin nerve_N = mkN "nerve" ;
lin nervous_A = longA "nervous" ;
lin nest_N = mkN "nest" ;
lin nest_V2in = mkV2 "nest" "in" ;
lin net_N = mkN "net" ;
lin network_N = mkN "network" ;
lin neutral_A = longA "neutral" ;
lin never_Adv = mkAdv "never" ;
lin nevertheless_Adv = mkAdv "nevertheless" ;
lin new_A = mkA "new" ;
lin news_N = mkN "news" ;
lin newspaper_N = mkN "newspaper" ;
lin newton_PN = regPN "newton" ;
lin next_A = longA "next" ;
lin nibble_V2 = mkV2 "nibble" ;
lin nice_A = mkA "nice" ;
lin nicety_N = mkN "nicety" ;
lin nigeria_PN = regPN "nigeria" ;
lin night_N = mkN "night" ;
lin nip_V2 = mkV2 "nip" ;
lin noble_A = mkA "noble" ;
lin nobleman_N = mkN "nobleman" "noblemen" ;
lin nod_V2 = mkV2 "nod" ;
lin nod_V = mkV "nod" ;
lin node_N = mkN "node" ;
lin noise_N = mkN "noise" ;
lin nominal_A = longA "nominal" ;
lin nominate_V2 = mkV2 "nominate" ;
lin nominative_A = longA "nominative" ;
lin nonetheless_Adv = mkAdv "nonetheless" ;
lin nonsense_N = mkN "nonsense" ;
lin nonsensical_A = longA "nonsensical" ;
lin normal_A = longA "normal" ;
lin normative_A = longA "normative" ;
lin north_N = massN "north" ;
lin north_A = longA "north" ;
lin north_A2of = longA2 "north" "of" ;
lin northern_A = longA "northern" ;
lin nose_N = mkN "nose" ;
--lin not_Adv = mkAdv "not" ;
lin notation_N = mkN "notation" ;
lin note_N = mkN "note" ;
lin note_VS = mkVS (mkV "note") ;
lin notice_N = mkN "notice" ;
lin notice_V2 = mkV2 "notice" ;
lin notice_VS = mkVS (mkV "notice") ;
lin notion_N = mkN "notion" ;
lin notoriety_N = massN "notoriety" ;
lin notorious_A = longA "notorious" ;
lin notorious_A2for = longA2 "notorious" "for" ;
lin noun_N = mkN "noun" ;
lin novel_A = longA "novel" ;
lin novel_N = mkN "novel" ;
lin novelty_N = mkN "novelty" ;
lin november_PN = regPN "november" ;
lin novice_N = mkN "novice" ;
lin now_Adv = mkAdv "now" ;
---- lin now_Adv = mkAdv "now" ;
lin nowhere_Adv = mkAdv "nowhere" ;
lin nuclear_A = mkA "nuclear" ;
lin nucleus_N = mkN "nucleus" ;
lin nudge_N = mkN "nudge" ;
lin nudge_V2 = mkV2 "nudge" ;
lin nuisance_N = mkN "nuisance" ;
lin numeral_N = mkN "numeral" ;
lin numeric_A = longA "numeric" ;
lin numerical_A = longA "numerical" ;
lin numerous_A = longA "numerous" ;
lin nurse_N = mkN "nurse" ;
lin nurse_V2 = mkV2 "nurse" ;
lin nut_N = mkN "nut" ;
lin nutrient_N = mkN "nutrient" ;
lin nutrition_N = mkN "nutrition" ;
lin nutritious_A = longA "nutritious" ;
lin nylon_N = massN "nylon" ;
lin oaf_N = mkN "oaf" ;
lin oak_N = mkN "oak" ;
lin oar_N = mkN "oar" ;
lin oath_N = mkN "oath" ;
lin obey_V2 = mkV2 "obey" ;
lin object_N = mkN "object" ;
lin object_V2to = mkV2 "object" "to" ;
lin objectionable_A = longA "objectionable" ;
lin objective_A = longA "objective" ;
lin objective_N = mkN "objective" ;
lin obligation_N = mkN "obligation" ;
lin obligatory_A = longA "obligatory" ;
lin obligatory_A2for = longA2 "obligatory" "for" ;
lin oblige_V2 = mkV2 "oblige" ;
lin oblique_A = longA "oblique" ;
lin obscure_A = longA "obscure" ;
lin obscure_V2 = mkV2 "obscure" ;
lin observe_V2 = mkV2 "observe" ;
lin obstacle_N = mkN "obstacle" ;
lin obstruct_V2 = mkV2 "obstruct" ;
lin obstruction_V = mkV "obstruction" ;
lin obtain_V2 = mkV2 "obtain" ;
lin obvious_A = longA "obvious" ;
lin obvious_A2 = longA2 "obvious" "" ;
lin occasion_N = mkN "occasion" ;
lin occupation_N = mkN "occupation" ;
lin occupy_V2 = mkV2 "occupy" ;
lin occur_V = mkV "occur" ;
lin occurrence_V = mkV "occurrence" ;
lin ocean_N = mkN "ocean" ;
lin october_PN = regPN "october" ;
lin odd_A = mkA "odd" ;
lin of_Prep = mkPrep "of" ;
lin off_Prep = mkPrep "off" ;
lin offence_N2against = mkN2 "offence" "against" ;
lin offend_V2 = mkV2 "offend" ;
lin offense_N2against = mkN2 "offense" "against" ;
lin offensive_A = longA "offensive" ;
lin offer_VV = mkVV (mkV "offer") ;
lin offer_N2 = mkN2 "offer" ;
lin office_N = mkN "office" ;
lin officer_N = mkN "officer" ;
lin official_N = mkN "official" ;
lin offset_V2 = mkV2 "offset" ;
lin often_Adv = mkAdv "often" ;
lin oil_N = massN "oil" ;
lin oil_V2 = mkV2 "oil" ;
lin old_A = mkA "old" ;
lin omission_N = mkN "omission" ;
lin omit_V2 = mkV2 "omit" ;
lin omniscient_A = longA "omniscient" ;
--lin on_Prep = mkPrep "on" ;
lin once_Adv = mkAdv "once" ;
lin onerous_A = longA "onerous" ;
lin onion_N = mkN "onion" ;
-- lin only_Adv = mkAdv "only" ;
lin only_A = longA "only" ;
lin onto_Prep = mkPrep "onto" ;
lin ontology_N = mkN "ontology" ;
lin opacity_N = massN "opacity" ;
lin opaque_A = longA "opaque" ;
lin open_A = longA "open" ;
lin open_V = mkV "open" ;
lin opening_N = mkN "opening" ;
lin operand_N = mkN "operand" ;
lin operate_V2 = mkV2 "operate" ;
lin operation_N2on = mkN2 "operation" "on" ;
lin operator_N = mkN "operator" ;
lin opinion_N = mkN "opinion" ;
lin opponent_N = mkN "opponent" ;
lin opportune_A = longA "opportune" ;
lin opportunistic_A = longA "opportunistic" ;
lin opportunity_N = mkN "opportunity" ;
lin oppose_V2 = mkV2 "oppose" ;
lin opposite_A = longA "opposite" ;
lin opposition_N2to = mkN2 "opposition" "to" ;
lin optimal_A = longA "optimal" ;
lin optimism_N = massN "optimism" ;
lin optimist_N = mkN "optimist" ;
lin optimize_V2 = mkV2 "optimize" ;
lin optimum_V = mkV "optimum" ;
lin option_N = mkN "option" ;
lin oral_A = mkA "oral" ;
lin orange_A = longA "orange" ;
lin orange_N = mkN "orange" ;
lin order_N = mkN "order" ;
lin order_V2 = mkV2 "order" ;
lin order_V2 = mkV2 "order" ;
lin ordering_N = mkN "ordering" ;
lin orderly_A = longA "orderly" ;
lin ordinary_A = longA "ordinary" ;
lin ore_N = mkN "ore" ;
lin organ_N = mkN "organ" ;
lin organic_A = longA "organic" ;
lin organically_Adv = mkAdv "organically" ;
lin organization_N = mkN "organization" ;
lin organize_V2 = mkV2 "organize" ;
lin orient_N = mkN "orient" ;
lin orient_V2 = mkV2 "orient" ;
lin origin_N = mkN "origin" ;
lin original_A = longA "original" ;
lin original_N = mkN "original" ;
lin originate_V = mkV "originate" ;
lin orthography_N = massN "orthography" ;
lin ostensible_A = longA "ostensible" ;
lin ostensive_A = longA "ostensive" ;
lin ostentation_N = massN "ostentation" ;
lin ostentatious_A = longA "ostentatious" ;
lin other_A = longA "other" ;
lin other_N = mkN "other" ;
lin otherwise_Adv = mkAdv "otherwise" ;
lin outdated_A = longA "outdated" ;
lin outdoor_A = longA "outdoor" ;
lin outdoors_N = massN "outdoors" ;
lin outer_A = longA "outer" ;
lin outlaw_N = mkN "outlaw" ;
lin outlaw_V2 = mkV2 "outlaw" ;
lin outline_N = mkN "outline" ;
lin outline_V2 = mkV2 "outline" ;
lin outrage_N = mkN "outrage" ;
lin outrage_V2 = mkV2 "outrage" ;
lin outside_Adv = mkAdv "outside" ;
lin outside_N = mkN "outside" ;
lin outside_Prep = mkPrep "outside" ;
lin outstanding_A = longA "outstanding" ;
lin over_N = mkN "over" ;
lin over_Prep = mkPrep "over" ;
lin overflow_N = mkN "overflow" ;
lin overflow_V2 = mkV2 "overflow" ;
lin overflow_V = mkV "overflow" ;
lin overlap_V = mkV "overlap" ;
lin overt_A = longA "overt" ;
lin overture_N = mkN "overture" ;
lin overwhelm_V2 = mkV2 "overwhelm" ;
lin owe_V3 = dirdirV3 (mkV "owe") ;
lin own_A = longA "own" ;
lin own_V2 = mkV2 "own" ;
lin ox_N = mkN "ox" "ox" ;
lin oxford_PN = regPN "oxford" ;
lin oxygen_N = massN "oxygen" ;
lin pace_N = mkN "pace" ;
lin pack_V2 = mkV2 "pack" ;
lin package_N = mkN "package" ;
lin package_V2 = mkV2 "package" ;
lin packet_N = mkN "packet" ;
lin page_N = mkN "page" ;
lin pain_N = mkN "pain" ;
lin painstaking_A = longA "painstaking" ;
lin paint_N = massN "paint" ;
lin paint_V2 = mkV2 "paint" ;
lin pair_N = mkN "pair" ;
lin pair_V3with =mkV3 "pair" "with" ;
lin palace_N = mkN "palace" ;
lin pale_A = mkA "pale" ;
lin pamper_V2 = mkV2 "pamper" ;
lin pamphlet_N = mkN "pamphlet" ;
lin pan_N = mkN "pan" ;
lin panacea_N = mkN "panacea" ;
lin pane_N = mkN "pane" ;
lin panel_N = mkN "panel" ;
lin panelling_N = mkN "panelling" ;
lin panic_V = mkV "panic" ;
lin panic_N = mkN "panic" ;
lin pantry_N = mkN "pantry" ;
lin paper_N = mkN "paper" ;
lin paper_V2 = mkV2 "paper" ;
lin paradigm_N = mkN "paradigm" ;
lin paradox_N = mkN "paradox" ;
lin paragraph_N = mkN "paragraph" ;
lin parallel_N = mkN "parallel" ;
lin parallel_V2 = mkV2 "parallel" ;
lin parallel_A = longA "parallel" ;
lin parallel_A2to = longA2 "parallel" "to" ;
lin parameter_N = mkN "parameter" ;
lin paraphrase_N = mkN "paraphrase" ;
lin paraphrase_V2 = mkV2 "paraphrase" ;
lin parasite_N = mkN "parasite" ;
lin parasitic_A = longA "parasitic" ;
lin parasol_N = mkN "parasol" ;
lin parcel_N = mkN "parcel" ;
lin parent_N2of = mkN2 "parent" "of" ;
lin parenthesis_N = mkN "parenthesis" "parenthesis" ;
lin parenthesize_V2 = mkV2 "parenthesize" ;
lin parenthetical_A = longA "parenthetical" ;
lin parity_N = mkN "parity" ;
lin park_N = mkN "park" ;
lin park_V2 = mkV2 "park" ;
lin parliament_N = mkN "parliament" ;
lin parse_V2 = mkV2 "parse" ;
lin parsimony_N = mkN "parsimony" ;
lin part_N = mkN "part" ;
lin participant_N = mkN "participant" ;
lin participate_V2in = mkV2 "participate" "in" ;
lin particle_N = mkN "particle" ;
lin particular_A = longA "particular" ;
lin partition_N = mkN "partition" ;
lin partition_V2 = mkV2 "partition" ;
lin partly_Adv = mkAdv "partly" ;
lin partner_N = mkN "partner" ;
lin party_N = mkN "party" ;
lin pass_V3to =mkV3 "pass" "to" ;
lin passage_N = mkN "passage" ;
lin passenger_N = mkN "passenger" ;
lin passion_N = mkN "passion" ;
lin passionate_A = longA "passionate" ;
lin passive_A = longA "passive" ;
lin past_A = longA "past" ;
lin past_N = mkN "past" ;
lin paste_N = mkN "paste" ;
lin paste_V3to =mkV3 "paste" "to" ;
lin pastry_N = massN "pastry" ;
lin pasty_N = mkN "pasty" ;
lin pat_V2 = mkV2 "pat" ;
lin path_N = mkN "path" ;
lin pathology_N = mkN "pathology" ;
lin patience_N = mkN "patience" ;
lin patient_N = mkN "patient" ;
lin patient_A = longA "patient" ;
lin patient_A2with = longA2 "patient" "with" ;
lin pattern_N = mkN "pattern" ;
lin paucity_N2of = mkN2 "paucity" "of" ;
lin pause_V = mkV "pause" ;
lin pause_N = mkN "pause" ;
lin pay_N = mkN "pay" ;
lin pay_V2for = mkV2 pay_V "for" ;
lin pea_N = mkN "pea" ;
lin peace_N = massN "peace" ;
lin peak_N = mkN "peak" ;
lin pear_N = mkN "pear" ;
lin peculiar_A = longA "peculiar" ;
lin peculiar_A2to = longA2 "peculiar" "to" ;
lin pedagogical_A = longA "pedagogical" ;
lin pedant_N = mkN "pedant" ;
lin pedantic_A = longA "pedantic" ;
lin pedantically_A = longA "pedantically" ;
lin pelvic_A = longA "pelvic" ;
lin pelvis_N = mkN "pelvis" ;
lin pen_N = mkN "pen" ;
lin penal_A = longA "penal" ;
lin penalize_V2 = mkV2 "penalize" ;
lin penalty_N = mkN "penalty" ;
lin pencil_N = mkN "pencil" ;
lin pending_A = longA "pending" ;
lin penetrate_V2 = mkV2 "penetrate" ;
lin penny_N = mkN "penny" ;
lin people_N = mkN "people" ;
lin pepper_N = massN "pepper" ;
lin perceive_V2 = mkV2 "perceive" ;
lin perception_N = mkN "perception" ;
lin perceptive_A = longA "perceptive" ;
lin perceptual_A = longA "perceptual" ;
lin percolate_V = mkV "percolate" ;
lin percolator_N = mkN "percolator" ;
lin peremptory_A = longA "peremptory" ;
lin perfect_A = longA "perfect" ;
lin perform_V = mkV "perform" ;
lin perhaps_Adv = mkAdv "perhaps" ;
lin period_N = mkN "period" ;
lin peripheral_A = longA "peripheral" ;
lin periphery_N = mkN "periphery" ;
lin perjure_V2 = mkV2 "perjure" ;
lin permanent_A = longA "permanent" ;
lin permissible_A = longA "permissible" ;
lin permission_N = mkN "permission" ;
lin permissive_A = longA "permissive" ;
lin permit_N = mkN "permit" ;
lin permit_V2 = mkV2 "permit" ;
lin permute_V2 = mkV2 "permute" ;
lin perpetual_A = longA "perpetual" ;
lin perpetuate_V2 = mkV2 "perpetuate" ;
lin perpetuity_N = mkN "perpetuity" ;
lin persimmon_N = mkN "persimmon" ;
lin persist_V = mkV "persist" ;
lin persistence_N = mkN "persistence" ;
lin persistent_A = longA "persistent" ;
lin person_N = mkN "person" (variants { "persons"; "people"});
lin personal_A = longA "personal" ;
lin perspective_N = mkN "perspective" ;
lin perspicuous_A = longA "perspicuous" ;
lin persuade_V3 =mkV3 "persuade" ;
lin persuade_V2 = mkV2 "persuade" ;
lin persuasion_N = mkN "persuasion" ;
lin persuasive_A = longA "persuasive" ;
lin perverse_A = longA "perverse" ;
lin perversion_N = mkN "perversion" ;
lin pervert_N = mkN "pervert" ;
lin pervert_V2 = mkV2 "pervert" ;
lin pet_N = mkN "pet" ;
lin petrol_N = massN "petrol" ;
lin phase_N = mkN "phase" ;
lin phenomenon_N = mkN "phenomenon" "phenomenon" ;
lin philosopher_N = mkN "philosopher" ;
lin philosophy_N = mkN "philosophy" ;
lin phone_N = mkN "phone" ;
lin phone_V2 = mkV2 "phone" ;
lin phonemic_A = longA "phonemic" ;
lin phonetic_A = longA "phonetic" ;
lin phonetically_Adv = mkAdv "phonetically" ;
lin phonology_N = massN "phonology" ;
lin phonotactic_A = longA "phonotactic" ;
lin photo_N = mkN "photo" ;
lin photograph_N = mkN "photograph" ;
lin photograph_V2 = mkV2 "photograph" ;
lin photography_N = massN "photography" ;
lin phrase_N = mkN "phrase" ;
lin physical_A = longA "physical" ;
lin physician_N = mkN "physician" ;
lin physics_N = mkN "physics" ;
lin pianist_N = mkN "pianist" ;
lin piano_N = mkN "piano" ;
lin pick_N = mkN "pick" ;
lin pick_V2 = mkV2 "pick" ;
lin pick_V3 =mkV3 "pick" ;
lin picnic_N = mkN "picnic" ;
lin picnic_V = mkV "picnic" ;
lin picture_N = mkN "picture" ;
lin picture_V2 = mkV2 "picture" ;
lin piece_N = mkN "piece" ;
lin pierce_V2 = mkV2 "pierce" ;
lin pig_N = mkN "pig" ;
lin pigeon_N = mkN "pigeon" ;
lin pilchard_N = mkN "pilchard" ;
lin pile_N = mkN "pile" ;
lin pilfer_V2 = mkV2 "pilfer" ;
lin pill_N = mkN "pill" ;
lin pillar_N = mkN "pillar" ;
lin pillow_N = mkN "pillow" ;
lin pilot_N = mkN "pilot" ;
lin pilot_V2 = mkV2 "pilot" ;
lin pin_N = mkN "pin" ;
lin pin_V3to =mkV3 "pin" "to" ;
lin pink_A = mkA "pink" ;
lin pipe_N = mkN "pipe" ;
lin pistol_N = mkN "pistol" ;
lin pit_N = mkN "pit" ;
lin pitch_N = mkN "pitch" ;
lin pitch_V2 = mkV2 "pitch" ;
lin pitchfork_N = mkN "pitchfork" ;
lin pith_N = mkN "pith" ;
lin pity_V2 = mkV2 "pity" ;
lin pity_N = mkN "pity" ;
lin place_N = mkN "place" ;
lin place_V2 = mkV2 "place" ;
lin place_V3in =mkV3 "place" "in" ;
lin plague_N = mkN "plague" ;
lin plague_V2 = mkV2 "plague" ;
lin plain_A = mkA "plain" ;
lin plain_N = mkN "plain" ;
lin plan_VV = mkVV (mkV "plan") ;
lin plan_N2 = mkN2 "plan" ;
lin planar_A = longA "planar" ;
lin plane_N = mkN "plane" ;
lin planet_N = mkN "planet" ;
lin plant_N = mkN "plant" ;
lin plastic_A = longA "plastic" ;
lin plastic_N = massN "plastic" ;
lin plate_N = mkN "plate" ;
lin plateau_N = mkN "plateau" ;
lin platypus_N = mkN "platypus" ;
lin plausible_A = longA "plausible" ;
lin play_N = mkN "play" ;
lin play_V2 = mkV2 "play" ;
lin play_V = mkV "play" ;
lin play_V2with = mkV2 "play" "with" ;
lin pleasant_A = longA "pleasant" ;
lin please_V2 = mkV2 "please" ;
lin pleasure_N = mkN "pleasure" ;
lin pledge_N = mkN "pledge" ;
lin pledge_VS = mkVS (mkV "pledge") ;
lin plenty_N = massN "plenty" ;
lin plot_N = mkN "plot" ;
lin plot_V = mkV "plot" ;
lin plug_N = mkN "plug" ;
lin plum_N = mkN "plum" ;
lin plumber_N = mkN "plumber" ;
lin plume_N = mkN "plume" ;
lin plummet_V = mkV "plummet" ;
lin plump_A = mkA "plump" ;
lin plunge_V = mkV "plunge" ;
lin plural_A = longA "plural" ;
lin plural_N = mkN "plural" ;
lin pocket_N = mkN "pocket" ;
lin pocket_V2 = mkV2 "pocket" ;
lin poem_N = mkN "poem" ;
lin poet_N = mkN "poet" ;
lin poetry_N = massN "poetry" ;
lin point_N = mkN "point" ;
lin point_V2to = mkV2 "point" "to" ;
lin poison_N = mkN "poison" ;
lin poison_V2 = mkV2 "poison" ;
lin poland_PN = regPN "poland" ;
lin polar_A = longA "polar" ;
lin pole_N = mkN "pole" ;
lin policeman_N = mkN "policeman" "policemen" ;
lin policy_N = mkN "policy" ;
lin polish_A = longA "polish" ;
lin polish_N = mkN "polish" ;
lin polish_V2 = mkV2 "polish" ;
lin polite_A = longA "polite" ;
lin polite_A2to = longA2 "polite" "to" ;
lin political_A = longA "political" ;
lin politician_N = mkN "politician" ;
lin politics_N = mkN "politics" "politics" ;
lin pollute_V2 = mkV2 "pollute" ;
lin ponder_V = mkV "ponder" ;
lin pool_N = mkN "pool" ;
lin poor_A = mkA "poor" ;
lin pop_N = mkN "pop" ;
lin popular_A = longA "popular" ;
lin popular_A2with = longA2 "popular" "with" ;
lin populated_A = longA "populated" ;
lin populated_A2by = longA2 "populated" "by" ;
lin population_N = mkN "population" ;
lin porcupine_N = mkN "porcupine" ;
lin pore_N = mkN "pore" ;
lin pore_V2over = mkV2 "pore" "over" ;
lin pork_N = massN "pork" ;
lin porosity_N = mkN "porosity" ;
lin porous_A = longA "porous" ;
lin porpoise_N = mkN "porpoise" ;
lin port_N = mkN "port" ;
lin portable_A = longA "portable" ;
lin portion_N = mkN "portion" ;
lin pose_N = mkN "pose" ;
lin pose_V2 = mkV2 "pose" ;
lin position_N = mkN "position" ;
lin positive_A = longA "positive" ;
lin positive_A2 = longA2 "positive" "" ;
lin positively_Adv = mkAdv "positively" ;
lin possess_V2 = mkV2 "possess" ;
lin possession_N = mkN "possession" ;
lin possible_A2 = longA2 "possible" "" ;
lin possible_A = longA "possible" ;
lin possible_A2 = longA2 "possible" "" ;
lin post_N = mkN "post" ;
lin post_V3to =mkV3 "post" "to" ;
lin posterior_A = longA "posterior" ;
lin postman_N = mkN "postman" "postmen" ;
lin postpone_V2 = mkV2 "postpone" ;
lin postulate_V2 = mkV2 "postulate" ;
lin pot_N = mkN "pot" ;
lin potato_N = mkN "potato" ;
lin potency_N = mkN "potency" ;
lin potent_A = longA "potent" ;
lin potential_A = longA "potential" ;
lin pound_N = mkN "pound" ;
lin pound_V2 = mkV2 "pound" ;
lin pour_V3loc =mkV3 "pour" "loc" ;
lin powder_N = mkN "powder" ;
lin power_N = mkN "power" ;
lin power_V2 = mkV2 "power" ;
lin practical_A = longA "practical" ;
lin practice_N = mkN "practice" ;
lin practise_V2 = mkV2 "practise" ;
lin practitioner_N = mkN "practitioner" ;
lin pragmatic_A = longA "pragmatic" ;
lin pragmatically_Adv = mkAdv "pragmatically" ;
lin pragmatics_N = mkN "pragmatics" "pragmatics" ;
lin praise_N = mkN "praise" ;
lin praise_V2 = mkV2 "praise" ;
lin pray_V2to = mkV2 "pray" "to" ;
lin prayer_N = mkN "prayer" ;
lin precarious_A = longA "precarious" ;
lin precede_V2 = mkV2 "precede" ;
lin precedence_N = mkN "precedence" ;
lin precedent_N = mkN "precedent" ;
lin precious_A = longA "precious" ;
lin precise_A = longA "precise" ;
lin precision_N = mkN "precision" ;
lin preclude_V2 = mkV2 "preclude" ;
lin precursor_N = mkN "precursor" ;
lin predecessor_N = mkN "predecessor" ;
lin predicate_N = mkN "predicate" ;
lin predicate_V2 = mkV2 "predicate" ;
lin predict_V2 = mkV2 "predict" ;
lin predilection_N2for = mkN2 "predilection" "for" ;
lin preface_N = mkN "preface" ;
lin prefer_V3to =mkV3 "prefer" "to" ;
lin prefer_V2 = mkV2 "prefer" ;
lin prefer_VV = mkVV (mkV "prefer") ;
lin prefer_V2 = mkV2 "prefer" ;
lin preference_N = mkN "preference" ;
lin pregnancy_N = mkN "pregnancy" ;
lin pregnant_A = longA "pregnant" ;
lin prejudice_N = mkN "prejudice" ;
lin prejudiced_A = longA "prejudiced" ;
lin preliminary_A = longA "preliminary" ;
lin premise_N = mkN "premise" ;
lin preoccupation_N2with = mkN2 "preoccupation" "with" ;
lin preoccupied_A2with = longA2 "preoccupied" "with" ;
lin preoccupy_V2 = mkV2 "preoccupy" ;
lin prepare_V3for =mkV3 "prepare" "for" ;
lin preposition_N = mkN "preposition" ;
lin prerequisite_N = mkN "prerequisite" ;
lin prescribe_V2 = mkV2 "prescribe" ;
lin prescription_N = mkN "prescription" ;
lin prescriptive_A = longA "prescriptive" ;
lin presence_N = mkN "presence" ;
lin present_A = longA "present" ;
lin present_N = mkN "present" ;
lin present_V3with =mkV3 "present" "with" ;
lin preserve_V3from =mkV3 "preserve" "from" ;
lin preside_V = mkV "preside" ;
lin presidency_N = mkN "presidency" ;
lin president_N = mkN "president" ;
lin press_V2 = mkV2 "press" ;
lin pressure_N = mkN "pressure" ;
lin prestige_N = mkN "prestige" ;
lin presume_VS = mkVS (mkV "presume") ;
lin presumption_N = mkN "presumption" ;
lin presumptuous_A = longA "presumptuous" ;
lin presuppose_VS = mkVS (mkV "presuppose") ;
lin presupposition_N2 = mkN2 "presupposition" ;
lin pretence_N2 = mkN2 "pretence" ;
lin pretend_VS = mkVS (mkV "pretend") ;
lin pretty_A = mkA "pretty" ;
lin prevent_V2 = mkV2 "prevent" ;
lin previous_A = longA "previous" ;
lin price_N = mkN "price" ;
lin prick_V = mkV "prick" ;
lin prickle_N = mkN "prickle" ;
lin pride_N = mkN "pride" ;
lin priest_N = mkN "priest" ;
lin prim_A = mkA "prim" ;
lin primary_A = longA "primary" ;
lin primitive_A = longA "primitive" ;
lin prince_N = mkN "prince" ;
lin principal_A = longA "principal" ;
lin principle_N = mkN "principle" ;
lin principled_A = longA "principled" ;
lin print_V2 = mkV2 "print" ;
lin prior_N = mkN "prior" ;
lin prior_A = longA "prior" ;
lin prior_A2to = longA2 "prior" "to" ;
lin priority_N = mkN "priority" ;
lin prison_N = mkN "prison" ;
lin privacy_N = mkN "privacy" ;
lin private_A = longA "private" ;
lin privilege_N = mkN "privilege" ;
lin prize_N = mkN "prize" ;
lin probability_N2 = mkN2 "probability" ;
lin probable_A = longA "probable" ;
lin probable_A2 = longA2 "probable" "" ;
lin probe_N = mkN "probe" ;
lin probe_V2 = mkV2 "probe" ;
lin problem_N = mkN "problem" ;
lin problematic_A = longA "problematic" ;
lin procedure_N = mkN "procedure" ;
lin proceed_V = mkV "proceed" ;
lin process_N = mkN "process" ;
lin process_V2 = mkV2 "process" ;
lin procession_N = mkN "procession" ;
lin processor_N = mkN "processor" ;
lin produce_N = mkN "produce" ;
lin produce_V2 = mkV2 "produce" ;
lin product_N = mkN "product" ;
lin profession_N = mkN "profession" ;
lin professor_N = mkN "professor" ;
lin proficiency_N2in = mkN2 "proficiency" "in" ;
lin proficient_A2in = longA2 "proficient" "in" ;
lin profit_N = mkN "profit" ;
lin profitable_A = longA "profitable" ;
lin profound_A = longA "profound" ;
lin profundity_N = mkN "profundity" ;
lin profuse_A = longA "profuse" ;
lin profusion_N2of = mkN2 "profusion" "of" ;
lin prognosis_N = mkN "prognosis" ;
lin program_N = mkN "program" ;
lin program_V = mkV "program" ;
lin programme_N = mkN "programme" ;
lin progress_V2of = mkV2 "progress" "of" ;
lin progress_N = mkN "progress" ;
lin prohibit_V2 = mkV2 "prohibit" ;
lin project_N = mkN "project" ;
lin project_V = mkV "project" ;
lin proliferate_V = mkV "proliferate" ;
lin prolong_V2 = mkV2 "prolong" ;
lin prominence_N = mkN "prominence" ;
lin prominent_A = longA "prominent" ;
lin promise_V2 = mkV2 "promise" ;
lin promote_V2 = mkV2 "promote" ;
lin prompt_A = mkA "prompt" ;
lin prompt_N = mkN "prompt" ;
lin prompt_V2 = mkV2 "prompt" ;
lin promulgate_V2 = mkV2 "promulgate" ;
lin prone_A = longA "prone" ;
lin prone_A2to = longA2 "prone" "to" ;
lin pronominal_A = longA "pronominal" ;
lin pronoun_N = mkN "pronoun" ;
lin pronounce_V2 = mkV2 "pronounce" ;
lin pronunciation_N = mkN "pronunciation" ;
lin proof_N2 = mkN2 "proof" ;
lin propagate_V = mkV "propagate" ;
lin propensity_N2for = mkN2 "propensity" "for" ;
lin proper_A = longA "proper" ;
lin property_N = mkN "property" ;
lin proponent_N = mkN "proponent" ;
lin proportion_N = mkN "proportion" ;
lin propose_V2 = mkV2 "propose" ;
lin propose_VV = mkVV (mkV "propose") ;
lin proposition_N = mkN "proposition" ;
lin prose_N = massN "prose" ;
lin prosody_N = mkN "prosody" ;
lin prospect_N2 = mkN2 "prospect" ;
lin prospect_V2for = mkV2 "prospect" "for" ;
lin prospective_A = longA "prospective" ;
lin prospector_N = mkN "prospector" ;
lin protect_V3from =mkV3 "protect" "from" ;
lin protest_N = mkN "protest" ;
lin protest_V2against = mkV2 "protest" "against" ;
lin protocol_N = mkN "protocol" ;
lin prototype_N = mkN "prototype" ;
lin proud_A = mkA "proud" ;
lin proud_A2of = mkA2 "proud" "of" ;
lin prove_VS = mkVS (mkV "prove") ;
lin proven_A = longA "proven" ;
lin provide_V3for =mkV3 "provide" "for" ;
lin provision_N = mkN "provision" ;
lin prune_N = mkN "prune" ;
lin prune_V2 = mkV2 "prune" ;
lin psychology_N = mkN "psychology" ;
lin pub_N = mkN "pub" ;
lin public_A = longA "public" ;
lin public_N = mkN "public" ;
lin publication_N = mkN "publication" ;
lin publicity_N = mkN "publicity" ;
lin publish_V2 = mkV2 "publish" ;
lin pull_V2 = mkV2 "pull" ;
lin pulley_N = mkN "pulley" ;
lin pulpit_N = mkN "pulpit" ;
lin pump_N = mkN "pump" ;
lin punch_N = mkN "punch" ;
lin punch_V2 = mkV2 "punch" ;
lin punctual_A = longA "punctual" ;
lin punctuate_V2 = mkV2 "punctuate" ;
lin punish_V2 = mkV2 "punish" ;
lin punitive_A = longA "punitive" ;
lin pupil_N = mkN "pupil" ;
lin purchase_V = mkV "purchase" ;
lin pure_A = mkA "pure" ;
lin purge_N = mkN "purge" ;
lin purple_A = mkA "purple" ;
lin purpose_N = mkN "purpose" ;
lin purse_N = mkN "purse" ;
lin pursue_V2 = mkV2 "pursue" ;
lin pursuit_N = mkN "pursuit" ;
lin purveyor_N = mkN "purveyor" ;
lin push_V2 = mkV2 "push" ;
lin put_V3loc =mkV3 put_V "loc" ;
lin puzzle_N = mkN "puzzle" ;
lin puzzle_V2 = mkV2 "puzzle" ;
lin pyramid_N = mkN "pyramid" ;
lin quadruple_N = mkN "quadruple" ;
lin quail_N = mkN "quail" ;
lin qualify_V2for = mkV2 "qualify" "for" ;
lin qualitative_A = longA "qualitative" ;
lin quality_N = mkN "quality" ;
lin quantify_V2 = mkV2 "quantify" ;
lin quantitative_A = longA "quantitative" ;
lin quarrel_N2with = mkN2 "quarrel" "with" ;
lin quarter_N = mkN "quarter" ;
lin quartet_N = mkN "quartet" ;
lin queen_N = mkN "queen" ;
lin queer_A = mkA "queer" ;
lin query_N = mkN "query" ;
lin query_V2 = mkV2 "query" ;
lin quest_N = mkN "quest" ;
lin question_N = mkN "question" ;
lin question_V2 = mkV2 "question" ;
lin quibble_V2about = mkV2 "quibble" "about" ;
lin quick_A = mkA "quick" ;
lin quiet_A = mkA "quiet" ;
lin quiet_N = mkN "quiet" ;
lin quilt_N = mkN "quilt" ;
lin quit_V2 = mkV2 "quit" ;
--lin quite_Adv = mkAdv "quite" ;
lin quiz_N = mkN "quiz" "quiz" ;
lin quote_V2 = mkV2 "quote" ;
lin rabbit_N = mkN "rabbit" ;
lin rabid_A = longA "rabid" ;
lin rabies_N = mkN "rabies" ;
lin race_N = mkN "race" ;
lin race_V2 = mkV2 "race" ;
lin rack_N = mkN "rack" ;
lin radar_N = mkN "radar" ;
lin radical_A = longA "radical" ;
lin radio_N = mkN "radio" ;
lin radish_N = mkN "radish" ;
lin radius_N = mkN "radius" "radius" ;
lin rage_N = mkN "rage" ;
lin raid_V2 = mkV2 "raid" ;
lin rail_N = mkN "rail" ;
lin railway_N = mkN "railway" ;
lin rain_V = mkV "rain" ;
lin rain_N = mkN "rain" ;
lin raise_V2 = mkV2 "raise" ;
lin raisin_N = mkN "raisin" ;
lin random_A = longA "random" ;
lin range_N = mkN "range" ;
lin range_V2over = mkV2 "range" "over" ;
lin rank_N = mkN "rank" ;
lin rank_V2 = mkV2 "rank" ;
lin rapid_A = longA "rapid" ;
lin rare_A = mkA "rare" ;
lin rat_N = mkN "rat" ;
lin rate_N = mkN "rate" ;
lin rather_Adv = mkAdv "rather" ;
lin ratio_N = mkN "ratio" ;
lin ration_N = mkN "ration" ;
lin ration_V2 = mkV2 "ration" ;
lin rational_A = longA "rational" ;
lin rationale_N = mkN "rationale" ;
lin raw_A = mkA "raw" ;
lin ray_N = mkN "ray" ;
lin razor_N = mkN "razor" ;
lin reach_V2 = mkV2 "reach" ;
lin read_V2 = mkV2 read_V ;
lin ready_A = mkA "ready" ;
lin ready_A2for = mkA2 "ready" "for" ;
lin real_A = longA "real" ;
lin realist_N = mkN "realist" ;
lin realistic_A = longA "realistic" ;
lin realistically_Adv = mkAdv "realistically" ;
lin realize_VS = mkVS (mkV "realize") ;
lin realm_N = mkN "realm" ;
lin rear_A = longA "rear" ;
lin rear_N = mkN "rear" ;
lin reason_V = mkV "reason" ;
lin reason_N2for = mkN2 "reason" "for" ;
lin reasonable_A = longA "reasonable" ;
lin rebut_V2 = mkV2 "rebut" ;
lin recapitulate_V2 = mkV2 "recapitulate" ;
lin recede_V = mkV "recede" ;
lin receipt_N = mkN "receipt" ;
lin receive_V3from =mkV3 "receive" "from" ;
lin recency_N = mkN "recency" ;
lin recent_A = longA "recent" ;
lin reception_N = mkN "reception" ;
lin recession_N = mkN "recession" ;
lin recipe_N = mkN "recipe" ;
lin recipient_N = mkN "recipient" ;
lin reciprocal_A = longA "reciprocal" ;
lin reciprocate_V = mkV "reciprocate" ;
lin recite_V2 = mkV2 "recite" ;
lin recognise_V2 = mkV2 "recognise" ;
lin recognition_N = mkN "recognition" ;
lin recognize_V2 = mkV2 "recognize" ;
lin recommend_V2 = mkV2 "recommend" ;
lin reconcile_V2 = mkV2 "reconcile" ;
lin record_N = mkN "record" ;
lin record_V2 = mkV2 "record" ;
lin recourse_N2to = mkN2 "recourse" "to" ;
lin recover_V = mkV "recover" ;
lin recovery_N = mkN "recovery" ;
lin rectify_V2 = mkV2 "rectify" ;
lin recursion_N = mkN "recursion" ;
lin recursive_A = longA "recursive" ;
lin red_A = mkA "red" ;
lin redeem_V2 = mkV2 "redeem" ;
lin reduce_V2 = mkV2 "reduce" ;
lin reducible_A = longA "reducible" ;
lin reducible_A2to = longA2 "reducible" "to" ;
lin redundancy_N = mkN "redundancy" ;
lin redundant_A = longA "redundant" ;
lin reed_N = mkN "reed" ;
lin refer_V2to = mkV2 "refer" "to" ;
lin reference_N2to = mkN2 "reference" "to" ;
lin referent_N = mkN "referent" ;
lin referral_N = mkN "referral" ;
lin refine_V2 = mkV2 "refine" ;
lin reflect_V2 = mkV2 "reflect" ;
lin reflexive_A = longA "reflexive" ;
lin refractor_N = mkN "refractor" ;
lin refractory_A = longA "refractory" ;
lin refresh_V2 = mkV2 "refresh" ;
lin refuse_N = mkN "refuse" ;
lin refuse_VV = mkVV (mkV "refuse") ;
lin refute_V2 = mkV2 "refute" ;
lin regard_N = mkN "regard" ;
lin regard_V3_pred =mkV3 "regard" "_pred" ;
lin regime_N = mkN "regime" ;
lin regiment_N = mkN "regiment" ;
lin regiment_V2 = mkV2 "regiment" ;
lin region_N = mkN "region" ;
lin regress_V = mkV "regress" ;
lin regular_A = longA "regular" ;
lin regulate_V2 = mkV2 "regulate" ;
lin regulation_N = mkN "regulation" ;
lin reinforce_V2 = mkV2 "reinforce" ;
lin reject_V2 = mkV2 "reject" ;
lin rejoice_V = mkV "rejoice" ;
lin relate_V3to =mkV3 "relate" "to" ;
lin related_A = longA "related" ;
lin related_A2to = longA2 "related" "to" ;
lin relation_N = mkN "relation" ;
lin relative_N = mkN "relative" ;
lin relax_V = mkV "relax" ;
lin release_V2 = mkV2 "release" ;
lin relegate_V3to =mkV3 "relegate" "to" ;
lin relevance_N2to = mkN2 "relevance" "to" ;
lin relevant_A = longA "relevant" ;
lin relevant_A2to = longA2 "relevant" "to" ;
lin reliable_A = longA "reliable" ;
lin relief_N = mkN "relief" ;
lin relieve_V2 = mkV2 "relieve" ;
lin religion_N = mkN "religion" ;
lin religious_A = longA "religious" ;
lin relinquish_V2 = mkV2 "relinquish" ;
lin reluctance_N2 = mkN2 "reluctance" ;
lin reluctant_A = longA "reluctant" ;
lin reluctant_A2 = longA2 "reluctant" "" ;
lin rely_V2on = mkV2 "rely" "on" ;
lin remain_V = mkV "remain" ;
lin remainder_N = mkN "remainder" ;
lin remark_N = mkN "remark" ;
lin remedial_A = longA "remedial" ;
lin remedy_N = mkN "remedy" ;
lin remedy_V2 = mkV2 "remedy" ;
lin remember_VS = mkVS (mkV "remember") ;
lin remind_V3 =mkV3 "remind" ;
lin remind_V2 = mkV2 "remind" ;
lin reminder_N = mkN "reminder" ;
lin reminiscent_A = longA "reminiscent" ;
lin reminiscent_A2of = longA2 "reminiscent" "of" ;
lin remnant_N = mkN "remnant" ;
lin remote_A = mkA "remote" ;
lin remove_V3from =mkV3 "remove" "from" ;
lin renaissance_N = mkN "renaissance" ;
lin render_V3 =mkV3 "render" ;
lin rendition_N = mkN "rendition" ;
lin renew_V2 = mkV2 "renew" ;
lin renounce_V2 = mkV2 "renounce" ;
lin rent_N = mkN "rent" ;
lin rent_V2 = mkV2 "rent" ;
lin renunciation_N = mkN "renunciation" ;
lin repair_N = mkN "repair" ;
lin repair_V2 = mkV2 "repair" ;
lin repeat_V2 = mkV2 "repeat" ;
lin repercussion_N = mkN "repercussion" ;
lin repetition_N = mkN "repetition" ;
lin repetitious_A = longA "repetitious" ;
lin repetitive_A = longA "repetitive" ;
lin replace_V2 = mkV2 "replace" ;
lin replica_N = mkN "replica" ;
lin replicate_V2 = mkV2 "replicate" ;
lin reply_N = mkN "reply" ;
lin reply_V2to = mkV2 "reply" "to" ;
lin report_N = mkN "report" ;
lin report_V2 = mkV2 "report" ;
lin report_VS = mkVS (mkV "report") ;
lin reprehend_V2 = mkV2 "reprehend" ;
lin reprehensible_A = longA "reprehensible" ;
lin represent_V3_pred =mkV3 "represent" "_pred" ;
lin representative_A = longA "representative" ;
lin representative_N = mkN "representative" ;
lin reprove_V2 = mkV2 "reprove" ;
lin reptile_N = mkN "reptile" ;
lin republic_N = mkN "republic" ;
lin request_V2 = mkV2 "request" ;
lin request_N2for = mkN2 "request" "for" ;
lin require_V2 = mkV2 "require" ;
lin require_V2_sbse = mkV2 "require" "_sbse" ;
lin requisite_A = longA "requisite" ;
lin rescue_V2 = mkV2 "rescue" ;
lin resemble_V2 = mkV2 "resemble" ;
lin reset_V2 = mkV2 "reset" ;
lin reside_V2 = mkV2 "reside" ;
lin residence_N = mkN "residence" ;
lin resident_N = mkN "resident" ;
lin residue_N = mkN "residue" ;
lin resist_V2 = mkV2 "resist" ;
lin resistant_A2to = longA2 "resistant" "to" ;
lin resistence_N = mkN "resistence" ;
lin resolute_A = longA "resolute" ;
lin resolution_N = mkN "resolution" ;
lin resolve_V2 = mkV2 "resolve" ;
lin resort_N = mkN "resort" ;
lin resort_V2to = mkV2 "resort" "to" ;
lin resource_N = mkN "resource" ;
lin respect_N = mkN "respect" ;
lin respect_V2 = mkV2 "respect" ;
lin respective_A = longA "respective" ;
lin respiration_N = mkN "respiration" ;
lin respiratory_A = longA "respiratory" ;
lin respond_V2to = mkV2 "respond" "to" ;
lin response_N2to = mkN2 "response" "to" ;
lin responsible_A = longA "responsible" ;
lin responsible_A2for = longA2 "responsible" "for" ;
lin rest_N = mkN "rest" ;
lin rest_V = mkV "rest" ;
lin restaurant_N = mkN "restaurant" ;
lin restore_V3to =mkV3 "restore" "to" ;
lin restrain_V2 = mkV2 "restrain" ;
lin restraint_N = mkN "restraint" ;
lin restrict_V2 = mkV2 "restrict" ;
lin result_N = mkN "result" ;
lin result_V = mkV "result" ;
lin resume_V2 = mkV2 "resume" ;
lin resumption_V = mkV "resumption" ;
lin resurgence_N = mkN "resurgence" ;
lin resurgent_A = longA "resurgent" ;
lin resurrect_V2 = mkV2 "resurrect" ;
lin retain_V2 = mkV2 "retain" ;
lin retention_N2 = mkN2 "retention" ;
lin retract_V2 = mkV2 "retract" ;
lin retrieve_V2 = mkV2 "retrieve" ;
lin return_N = mkN "return" ;
lin return_V2 = mkV2 "return" ;
lin return_V2to = mkV2 "return" "to" ;
lin revamp_V2 = mkV2 "revamp" ;
lin reveal_V2 = mkV2 "reveal" ;
lin revel_V2in = mkV2 "revel" "in" ;
lin revelation_N = mkN "revelation" ;
lin revenge_N = mkN "revenge" ;
lin revenue_N = mkN "revenue" ;
lin reverse_V2 = mkV2 "reverse" ;
lin reverse_N2of = mkN2 "reverse" "of" ;
lin reversible_A = longA "reversible" ;
lin revise_V2 = mkV2 "revise" ;
lin revive_V2 = mkV2 "revive" ;
lin revocation_N = mkN "revocation" ;
lin revoke_V = mkV "revoke" ;
lin revolution_N = mkN "revolution" ;
lin revolve_V = mkV "revolve" ;
lin reward_V2 = mkV2 "reward" ;
lin reward_N2for = mkN2 "reward" "for" ;
lin rhetoric_N = mkN "rhetoric" ;
lin rice_N = mkN "rice" ;
lin rich_A = mkA "rich" ;
lin rid_V3of =mkV3 "rid" "of" ;
lin ride_N = mkN "ride" ;
lin ride_V2 = mkV2 "ride" ;
lin ridiculous_A = longA "ridiculous" ;
lin right_A = longA "right" ;
lin right_N = mkN "right" ;
lin rigid_A = mkA "rigid" ;
lin rigorous_A = longA "rigorous" ;
lin rigour_N = mkN "rigour" ;
lin ring_N = mkN "ring" ;
lin ring_V2 = mkV2 IrregEng.ring_V ;
lin ring_V = IrregEng.ring_V ;
lin ripe_A = mkA "ripe" ;
lin rise_N = mkN "rise" ;
lin rise_V = IrregEng.rise_V ;
lin risk_N = mkN "risk" ;
lin risk_V2 = mkV2 "risk" ;
lin rite_N = mkN "rite" ;
lin rival_A = longA "rival" ;
lin rival_N = mkN "rival" ;
lin rivalry_N = mkN "rivalry" ;
lin river_N = mkN "river" ;
lin road_N = mkN "road" ;
lin roam_V = mkV "roam" ;
lin roast_A = longA "roast" ;
lin roast_V2 = mkV2 "roast" ;
lin rob_V2 = mkV2 "rob" ;
lin robot_N = mkN "robot" ;
lin robust_A = longA "robust" ;
lin rock_N = mkN "rock" ;
lin rock_V2 = mkV2 "rock" ;
lin rock_V = mkV "rock" ;
lin rod_N = mkN "rod" ;
lin role_N = mkN "role" ;
lin roll_V = mkV "roll" ;
lin romance_N = mkN "romance" ;
lin romantic_A = longA "romantic" ;
lin romantic_N = mkN "romantic" ;
lin roof_N = mkN "roof" ;
lin room_N = mkN "room" ;
lin root_N = mkN "root" ;
lin rope_N = mkN "rope" ;
lin rose_N = mkN "rose" ;
lin rot_V = mkV "rot" ;
lin rotten_A = mkA "rotten" ;
lin rough_A = mkA "rough" ;
lin round_A = mkA "round" ;
lin route_N = mkN "route" ;
lin routine_A = longA "routine" ;
lin routine_N = mkN "routine" ;
lin row_N = mkN "row" ;
lin row_V = mkV "row" ;
lin royal_A = mkA "royal" ;
lin royalty_N = massN "royalty" ;
lin rub_V = mkV "rub" ;
lin rubber_N = massN "rubber" ;
lin rubbish_N = mkN "rubbish" ;
lin rude_A = mkA "rude" ;
lin rude_A2to = mkA2 "rude" "to" ;
lin rudimentary_A = longA "rudimentary" ;
lin ruin_N = mkN "ruin" ;
lin ruin_V2 = mkV2 "ruin" ;
lin rule_N = mkN "rule" ;
lin rule_V2 = mkV2 "rule" ;
lin ruler_N = mkN "ruler" ;
lin rump_N = mkN "rump" ;
lin run_N = mkN "run" ;
lin run_V = IrregEng.run_V ;
lin rush_N = mkN "rush" ;
lin russian_A = longA "russian" ;
lin russian_N = mkN "russian" ;
lin sabbatical_A = longA "sabbatical" ;
lin sad_A = mkA "sad" ;
lin safe_N = mkN "safe" ;
lin safe_A = mkA "safe" ;
lin safe_A2from = mkA2 "safe" "from" ;
lin safety_N = massN "safety" ;
lin sail_N = mkN "sail" ;
lin saint_N = mkN "saint" ;
lin saintly_A = mkA "saintly" ;
lin sake_N = mkN "sake" ;
lin salad_N = mkN "salad" ;
lin sale_N = mkN "sale" ;
lin salient_A = longA "salient" ;
lin saline_A = longA "saline" ;
lin salt_N = mkN "salt" ;
lin same_A = longA "same" ;
lin sample_N = mkN "sample" ;
lin sanction_N = mkN "sanction" ;
lin sanction_V2 = mkV2 "sanction" ;
lin sand_N = massN "sand" ;
lin sandy_PN = regPN "sandy" ;
lin sane_A = mkA "sane" ;
lin sat_V = mkV "sat" ;
lin sat_V2 = mkV2 "sat" ;
lin satanic_A = longA "satanic" ;
lin satisfaction_N = mkN "satisfaction" ;
lin satisfactory_A = longA "satisfactory" ;
lin satisfy_V2 = mkV2 "satisfy" ;
lin saturday_PN = regPN "saturday" ;
lin sauce_N = mkN "sauce" ;
lin saucer_N = mkN "saucer" ;
lin saucy_A = mkA "saucy" ;
lin sausage_N = mkN "sausage" ;
lin save_V2 = mkV2 "save" ;
lin saw_N = mkN "saw" ;
lin saw_V2 = mkV2 "saw" ;
lin say_VS = mkVS say_V ;
lin scale_N = mkN "scale" ;
lin scan_V2 = mkV2 "scan" ;
lin scarce_A = mkA "scarce" ;
lin scare_V2 = mkV2 "scare" ;
lin scatter_V2 = mkV2 "scatter" ;
lin scenario_N = mkN "scenario" ;
lin scene_N = mkN "scene" ;
lin sceptic_N = mkN "sceptic" ;
lin schedule_N = mkN "schedule" ;
lin schedule_V2 = mkV2 "schedule" ;
lin schema_N = mkN "schema" "schema" ;
lin schematic_A = mkA "schematic" ;
lin scheme_N = mkN "scheme" ;
lin scholastic_A = longA "scholastic" ;
lin school_N = mkN "school" ;
lin science_N = mkN "science" ;
lin scientific_A = longA "scientific" ;
lin scientist_N = mkN "scientist" ;
lin scold_V = mkV "scold" ;
lin scope_N = mkN "scope" ;
lin score_N = mkN "score" ;
lin score_V = mkV "score" ;
lin score_N2of = mkN2 "score" "of" ;
lin scramble_V2 = mkV2 "scramble" ;
lin scratch_N = mkN "scratch" ;
lin scratch_V2 = mkV2 "scratch" ;
lin screen_N = mkN "screen" ;
lin screw_N = mkN "screw" ;
lin screw_V3to =mkV3 "screw" "to" ;
lin screw_V = mkV "screw" ;
lin script_N = mkN "script" ;
lin scrupulous_A = longA "scrupulous" ;
lin scrutiny_N = massN "scrutiny" ;
lin sea_N = mkN "sea" ;
lin search_N = mkN "search" ;
lin search_V2 = mkV2 "search" ;
lin search_V2for = mkV2 "search" "for" ;
lin season_N = mkN "season" ;
lin season_V2 = mkV2 "season" ;
lin seat_N = mkN "seat" ;
lin second_N = mkN "second" ;
lin secrecy_N = mkN "secrecy" ;
lin secret_A2from = longA2 "secret" "from" ;
lin secret_N = mkN "secret" ;
lin secretary_N = mkN "secretary" ;
lin section_N = mkN "section" ;
lin secure_V2 = mkV2 "secure" ;
lin secure_A = mkA "secure" ;
lin secure_A2from = mkA2 "secure" "from" ;
lin see_V2 = mkV2 see_V ;
lin seed_N = mkN "seed" ;
lin seek_V2 = mkV2 seek_V ;
lin seem_V2 = mkV2 "seem" ;
lin seem_V2 = mkV2 "seem" ;
lin seem_V2 = mkV2 "seem" ;
lin segment_N = mkN "segment" ;
lin segment_V2 = mkV2 "segment" ;
lin seize_V2 = mkV2 "seize" ;
lin seldom_Adv = mkAdv "seldom" ;
lin select_V2 = mkV2 "select" ;
lin self_N = mkN "self" "self" ;
lin sell_V2 = mkV2 sell_V ;
lin semantic_A = longA "semantic" ;
lin semantics_N = mkN "semantics" ;
lin send_V3 = dirdirV3 send_V ;
lin send_V3to =mkV3 send_V "to" ;
lin sensation_N = mkN "sensation" ;
lin sense_N = mkN "sense" ;
lin sense_V2 = mkV2 "sense" ;
lin sense_VS = mkVS (mkV "sense") ;
lin sensible_A = longA "sensible" ;
lin sensitive_A = longA "sensitive" ;
lin sensitive_A2to = longA2 "sensitive" "to" ;
lin sensory_A = longA "sensory" ;
lin sentence_N = mkN "sentence" ;
lin separate_V2 = mkV2 "separate" ;
lin separate_V3from =mkV3 "separate" "from" ;
lin separate_A = longA "separate" ;
lin separate_A2from = longA2 "separate" "from" ;
lin september_PN = regPN "september" ;
lin sequel_N2to = mkN2 "sequel" "to" ;
lin sequence_N = mkN "sequence" ;
lin serial_A = longA "serial" ;
lin series_N = mkN "series" ;
lin serious_A = longA "serious" ;
lin servant_N = mkN "servant" ;
lin serve_V2 = mkV2 "serve" ;
lin service_N = mkN "service" ;
lin session_N = mkN "session" ;
lin set_N = mkN "set" ;
lin set_V = IrregEng.set_V ;
lin setting_N2for = mkN2 "setting" "for" ;
lin settle_V = mkV "settle" ;
lin severe_A = longA "severe" ;
lin sew_V2 = mkV2 IrregEng.sew_V ;
lin sew_V = IrregEng.sew_V ;
lin sex_N = mkN "sex" ;
lin sexual_A = longA "sexual" ;
lin shade_N = mkN "shade" ;
lin shade_V2 = mkV2 "shade" ;
lin shadow_N = mkN "shadow" ;
lin shake_N = mkN "shake" ;
lin shake_V2 = mkV2 IrregEng.shake_V ;
lin shake_V = IrregEng.shake_V ;
lin shallow_A = mkA "shallow" ;
lin shame_N = mkN "shame" ;
lin shape_V2 = mkV2 "shape" ;
lin share_N = mkN "share" ;
lin share_V3with =mkV3 "share" "with" ;
lin sharp_A = mkA "sharp" ;
lin shatter_V2 = mkV2 "shatter" ;
lin shave_N = mkN "shave" ;
lin shave_V2 = mkV2 "shave" ;
lin shave_V = mkV "shave" ;
lin shaven_A = longA "shaven" ;
lin shear_V = mkV "shear" ;
lin shed_N = mkN "shed" ;
lin shed_V2 = mkV2 shed_V ;
lin sheep_N = mkN "sheep" "sheep" ;
lin sheer_A = mkA "sheer" ;
lin sheet_N = mkN "sheet" ;
lin shelf_N = mkN "shelf" ;
lin shell_N = mkN "shell" ;
lin shelve_V2 = mkV2 "shelve" ;
lin shift_V = mkV "shift" ;
lin shine_V = mkV "shine" ;
lin ship_N = mkN "ship" ;
lin shirt_N = mkN "shirt" ;
lin shock_N = mkN "shock" ;
lin shock_V2 = mkV2 "shock" ;
lin shoe_N = mkN "shoe" ;
lin shoot_V2 = mkV2 shoot_V ;
lin shop_N = mkN "shop" ;
lin shore_N = mkN "shore" ;
lin short_A = mkA "short" ;
lin shortcoming_N = mkN "shortcoming" ;
lin shot_N = mkN "shot" ;
lin shoulder_N = mkN "shoulder" ;
lin shoulder_V2 = mkV2 "shoulder" ;
lin shout_N = mkN "shout" ;
lin shout_V = mkV "shout" ;
lin show_N = mkN "show" ;
lin show_V3 =mkV3 show_V ;
lin shrug_V = mkV "shrug" ;
lin shrug_V2 = mkV2 "shrug" ;
lin shrug_N = mkN "shrug" ;
lin shut_V2 = mkV2 shut_V ;
lin sibling_N = mkN "sibling" ;
lin sick_A2of = mkA2 "sick" "of" ;
lin side_N = mkN "side" ;
lin sidestep_V2 = mkV2 "sidestep" ;
lin sideways_Adv = mkAdv "sideways" ;
lin sideways_A = longA "sideways" ;
lin sight_N = mkN "sight" ;
lin sign_N = mkN "sign" ;
lin sign_V2 = mkV2 "sign" ;
lin signal_N = mkN "signal" ;
lin signal_V2to_that_s = mkV2 "signal" "to_that_s" ;
lin signature_N = mkN "signature" ;
lin significance_N = mkN "significance" ;
lin significant_A = longA "significant" ;
lin signify_V2 = mkV2 "signify" ;
lin silence_N = mkN "silence" ;
lin silent_A = longA "silent" ;
lin silk_A = longA "silk" ;
lin silk_N = massN "silk" ;
lin silly_A = mkA "silly" ;
lin silver_N = massN "silver" ;
lin similar_A = longA "similar" ;
lin similar_A2to = longA2 "similar" "to" ;
lin simple_A = mkA "simple" ;
lin simplicity_N = mkN "simplicity" ;
lin simulate_V2 = mkV2 "simulate" ;
lin simultaneous_A = longA "simultaneous" ;
lin since_Subj = mkSubj "since" ;
lin since_Prep = mkPrep "since" ;
lin sincere_A = longA "sincere" ;
lin sing_V2 = mkV2 IrregEng.sing_V ;
lin sing_V = IrregEng.sing_V ;
lin single_A = longA "single" ;
lin singular_A = longA "singular" ;
lin sink_V2 = mkV2 IrregEng.sink_V ;
lin sink_V = IrregEng.sink_V ;
lin sister_N2of = mkN2 "sister" "of" ;
lin sit_V = mkV "sit" ;
lin sit_V2 = mkV2 "sit" ;
lin site_N = mkN "site" ;
lin situation_N = mkN "situation" ;
lin size_N = mkN "size" ;
lin skate_N = mkN "skate" ;
lin skate_V = mkV "skate" ;
lin skeletal_A = longA "skeletal" ;
lin skeleton_N = mkN "skeleton" ;
lin sketch_N = mkN "sketch" ;
lin sketch_V2 = mkV2 "sketch" ;
lin skilful_A = longA "skilful" ;
lin skill_N = mkN "skill" ;
lin skilled_A = longA "skilled" ;
lin skin_N = mkN "skin" ;
lin skip_V2 = mkV2 "skip" ;
lin skip_V = mkV "skip" ;
lin skirt_N = mkN "skirt" ;
lin sky_N = mkN "sky" ;
lin slash_N = mkN "slash" ;
lin slave_N = mkN "slave" ;
lin sledge_N = mkN "sledge" ;
lin sleep_N = mkN "sleep" ;
lin sleep_V = IrregEng.sleep_V ;
lin slide_V = mkV "slide" ;
lin slight_A = mkA "slight" ;
lin slight_N = mkN "slight" ;
lin slim_A = mkA "slim" ;
lin slim_V = mkV "slim" ;
lin slip_V = mkV "slip" ;
lin slip_N = mkN "slip" ;
lin slipper_N = mkN "slipper" ;
lin slippery_A = mkA "slippery" ;
lin sloe_N = mkN "sloe" ;
lin slope_N = mkN "slope" ;
lin slot_N = mkN "slot" ;
lin slow_A = mkA "slow" ;
lin small_A = mkA "small" ;
lin smart_A = mkA "smart" ;
lin smell_N = mkN "smell" ;
lin smell_V2 = mkV2 "smell" ;
lin smell_V = mkV "smell" ;
lin smelt_V2 = mkV2 "smelt" ;
lin smile_N = mkN "smile" ;
lin smile_V = mkV "smile" ;
lin smoke_N = massN "smoke" ;
lin smoke_V = mkV "smoke" ;
lin smooth_A = mkA "smooth" ;
lin smooth_V2 = mkV2 "smooth" ;
lin snake_N = mkN "snake" ;
lin snap_V2 = mkV2 "snap" ;
lin snap_V = mkV "snap" ;
lin snapshot_N = mkN "snapshot" ;
lin snow_V = mkV "snow" ;
lin snow_N = massN "snow" ;
lin soap_N = massN "soap" ;
lin social_A = longA "social" ;
lin society_N = mkN "society" ;
lin sock_N = mkN "sock" ;
lin sodium_N = mkN "sodium" ;
lin soft_A = mkA "soft" ;
lin software_N = massN "software" ;
lin soil_N = mkN "soil" ;
lin soldier_N = mkN "soldier" ;
lin sole_A = longA "sole" ;
lin sole_N = mkN "sole" ;
lin solemn_A = longA "solemn" ;
lin solid_A = mkA "solid" ;
lin solid_N = mkN "solid" ;
lin soliloquy_N = mkN "soliloquy" "soliloquy" ;
lin solo_A = longA "solo" ;
lin solo_N = mkN "solo" ;
lin solution_N = mkN "solution" ;
lin solve_V2 = mkV2 "solve" ;
lin somehow_Adv = mkAdv "somehow" ;
lin sometimes_Adv = mkAdv "sometimes" ;
lin somewhat_Adv = mkAdv "somewhat" ;
--lin somewhere_Adv = mkAdv "somewhere" ;
lin son_N2of = mkN2 "son" "of" ;
lin song_N = mkN "song" ;
lin soon_Adv = mkAdv "soon" ;
lin sophisticated_A = longA "sophisticated" ;
lin sophistication_N = mkN "sophistication" ;
lin sore_A = mkA "sore" ;
lin sore_N = mkN "sore" ;
lin sorrow_N = mkN "sorrow" ;
lin sorry_A = mkA "sorry" ;
lin sorry_A2for = mkA2 "sorry" "for" ;
lin sorry_A2 = mkA2 "sorry" "" ;
lin sort_N = mkN "sort" ;
lin sort_V2 = mkV2 "sort" ;
lin soul_N = mkN "soul" ;
lin sound_A = mkA "sound" ;
lin sound_N = mkN "sound" ;
lin sound_V2 = mkV2 "sound" ;
lin soup_N = mkN "soup" ;
lin sour_A = mkA "sour" ;
lin source_N = mkN "source" ;
lin south_N = mkN "south" ;
lin south_A = longA "south" ;
lin south_A2of = longA2 "south" "of" ;
lin southern_A = longA "southern" ;
lin space_N = mkN "space" ;
lin spade_N = mkN "spade" ;
lin spain_PN = regPN "spain" ;
lin span_V2 = mkV2 "span" ;
lin spanish_A = mkA "spanish" ;
lin spare_A = longA "spare" ;
lin spare_V3 = dirdirV3 (mkV "spare") ;
lin sparrow_N = mkN "sparrow" ;
lin spate_N = mkN "spate" ;
lin spatial_A = longA "spatial" ;
lin speak_V = IrregEng.speak_V ;
lin spear_N = mkN "spear" ;
lin spear_V2 = mkV2 "spear" ;
lin special_A = longA "special" ;
lin specialist_N = mkN "specialist" ;
lin specific_A = longA "specific" ;
lin specific_A2to = longA2 "specific" "to" ;
lin specifically_Adv = mkAdv "specifically" ;
lin specify_V2 = mkV2 "specify" ;
lin spectacle_N = mkN "spectacle" ;
lin spectacular_A = longA "spectacular" ;
lin spectral_A = longA "spectral" ;
lin spectrum_N = mkN "spectrum" "spectrum" ;
lin speculate_V = mkV "speculate" ;
lin speech_N = mkN "speech" ;
lin speed_N = mkN "speed" ;
lin spell_N = mkN "spell" ;
--lin spell_V2 = mkV2 spell_V ;
--lin spell_V = IrregEng.spell_V ;
lin spend_V2 = mkV2 spend_V ;
lin spin_V2 = mkV2 IrregEng.spin_V ;
lin spin_V = IrregEng.spin_V ;
lin spinster_N = mkN "spinster" ;
lin spirit_N = mkN "spirit" ;
lin spite_N = mkN "spite" ;
lin splendid_A = longA "splendid" ;
lin splendour_N = mkN "splendour" ;
lin split_V = IrregEng.split_V ;
lin split_N = mkN "split" ;
lin spoil_V2 = mkV2 "spoil" ;
lin spoke_N = mkN "spoke" ;
lin spokesman_N = mkN "spokesman" ;
lin spoon_N = mkN "spoon" ;
lin sport_N = mkN "sport" ;
lin spot_N = mkN "spot" ;
lin spot_V2 = mkV2 "spot" ;
lin spread_V = IrregEng.spread_V ;
lin spring_N = mkN "spring" ;
lin spring_V2 = mkV2 spring_V ;
lin spur_N = mkN "spur" ;
lin spurious_A = longA "spurious" ;
lin square_A = mkA "square" ;
lin square_N = mkN "square" ;
lin stable_A = mkA "stable" ;
lin stable_N = mkN "stable" ;
lin stack_N = mkN "stack" ;
lin stack_V2 = mkV2 "stack" ;
lin staff_N = mkN "staff" ;
lin staff_V2 = mkV2 "staff" ;
lin stag_N = mkN "stag" ;
lin stage_N = mkN "stage" ;
lin stage_V2 = mkV2 "stage" ;
lin stain_N = mkN "stain" ;
lin stain_V2 = mkV2 "stain" ;
lin stair_N = mkN "stair" ;
lin stake_N = mkN "stake" ;
lin stamp_N = mkN "stamp" ;
lin stance_N = mkN "stance" ;
lin stand_V = mkV "stand" ;
lin standard_A = longA "standard" ;
lin standard_N = mkN "standard" ;
lin star_N = mkN "star" ;
lin stare_N = mkN "stare" ;
lin stare_V2at = mkV2 "stare" "at" ;
lin start_N = mkN "start" ;
lin start_V2 = mkV2 "start" ;
lin start_V = mkV "start" ;
lin startle_V2 = mkV2 "startle" ;
lin state_N = mkN "state" ;
lin state_V2 = mkV2 "state" ;
lin static_A = longA "static" ;
lin station_N = mkN "station" ;
lin stationary_A = longA "stationary" ;
lin stationer_N = mkN "stationer" ;
lin stationery_N = massN "stationery" ;
lin statistic_N = mkN "statistic" ;
lin statistical_A = longA "statistical" ;
lin statistics_N = mkN "statistics" "statistics" ;
--lin statistics_N = mkN "statistics" ;
lin stative_A = longA "stative" ;
lin statue_N = mkN "statue" ;
lin stature_N = mkN "stature" ;
lin status_N = mkN "status" ;
lin stay_N = mkN "stay" ;
lin stay_V = mkV "stay" ;
lin steady_A = mkA "steady" ;
lin steal_V3from =mkV3 steal_V "from" ;
lin steam_N = massN "steam" ;
lin steam_V = mkV "steam" ;
lin steel_N = massN "steel" ;
lin steel_V2 = mkV2 "steel" ;
lin steep_A = mkA "steep" ;
lin steeple_N = mkN "steeple" ;
lin steer_N = mkN "steer" ;
lin steer_V2 = mkV2 "steer" ;
lin stem_N = mkN "stem" ;
lin stem_V2 = mkV2 "stem" ;
lin step_N = mkN "step" ;
lin step_V2 = mkV2 "step" ;
lin sterile_A = longA "sterile" ;
lin stick_N = mkN "stick" ;
lin stick_V2to = mkV2 stick_V "to" ;
lin sticky_A = mkA "sticky" ;
lin stiff_A = mkA "stiff" ;
lin still_Adv = mkAdv "still" ;
lin still_A = mkA "still" ;
lin sting_N = mkN "sting" ;
lin sting_V2 = mkV2 sting_V ;
lin stipulate_VS = mkVS (mkV "stipulate") ;
lin stitch_N = mkN "stitch" ;
lin stitch_V2 = mkV2 "stitch" ;
lin stock_N = mkN "stock" ;
lin stock_V2 = mkV2 "stock" ;
lin stocking_N = mkN "stocking" ;
lin stomach_N = mkN "stomach" ;
lin stone_N = mkN "stone" ;
lin stool_N = mkN "stool" ;
lin stoop_V = mkV "stoop" ;
lin stop_N = mkN "stop" ;
lin stop_V2 = mkV2 "stop" ;
lin stop_V = mkV "stop" ;
lin storage_N = massN "storage" ;
lin store_N = mkN "store" ;
lin store_V2 = mkV2 "store" ;
lin storm_N = mkN "storm" ;
lin story_N = mkN "story" ;
lin straight_A = mkA "straight" ;
lin straightforward_A = longA "straightforward" ;
lin strain_N = mkN "strain" ;
lin strain_V2 = mkV2 "strain" ;
lin strand_V2 = mkV2 "strand" ;
lin strange_A = mkA "strange" ;
lin stranger_N = mkN "stranger" ;
lin strategy_N = mkN "strategy" ;
lin stratum_N = mkN "stratum" "stratum" ;
lin straw_N = mkN "straw" ;
lin strawberry_N = mkN "strawberry" ;
lin stray_A = mkA "stray" ;
lin stray_V = mkV "stray" ;
lin stream_N = mkN "stream" ;
lin streamlined_A = longA "streamlined" ;
lin street_N = mkN "street" ;
lin strength_N = mkN "strength" ;
lin strengthen_V2 = mkV2 "strengthen" ;
lin stress_N = mkN "stress" ;
lin stress_V2 = mkV2 "stress" ;
lin stretch_V = mkV "stretch" ;
--lin strew_V2 = mkV2 strew_V ;
lin strict_A = mkA "strict" ;
lin strident_A = longA "strident" ;
lin strike_V2 = mkV2 "strike" ;
lin string_N = mkN "string" ;
lin strip_N = mkN "strip" ;
lin strip_V2 = mkV2 "strip" ;
lin strive_V2for = mkV2 strive_V "for" ;
lin stroke_N = mkN "stroke" ;
lin stroke_V2 = mkV2 "stroke" ;
lin strong_A = mkA "strong" ;
lin structuralism_N = mkN "structuralism" ;
lin structuralist_N = mkN "structuralist" ;
lin structure_N = mkN "structure" ;
lin struggle_N = mkN "struggle" ;
lin struggle_V2with = mkV2 "struggle" "with" ;
lin student_N = mkN "student" ;
lin study_V = mkV "study" ;
lin study_N2 = mkN2 "study" ;
lin stuff_N = mkN "stuff" ;
lin stuff_V2 = mkV2 "stuff" ;
lin stupid_A = mkA "stupid" ;
lin stupor_N = mkN "stupor" ;
lin stutter_V = mkV "stutter" ;
lin style_N = mkN "style" ;
lin stylistic_A = longA "stylistic" ;
lin suave_A = mkA "suave" ;
lin subcategorize_V = mkV "subcategorize" ;
lin subjacency_N = mkN "subjacency" ;
lin subjacent_A = longA "subjacent" ;
lin subjacent_A2to = longA2 "subjacent" "to" ;
lin subject_V3to =mkV3 "subject" "to" ;
lin subject_N = mkN "subject" ;
lin subjective_A = longA "subjective" ;
lin submarine_A = longA "submarine" ;
lin submarine_N = mkN "submarine" ;
lin submission_N = mkN "submission" ;
lin submit_V2to = mkV2 "submit" "to" ;
lin subordinate_A = longA "subordinate" ;
lin subordinate_V2 = mkV2 "subordinate" ;
lin subsequent_A = longA "subsequent" ;
lin subservient_A = longA "subservient" ;
lin substance_N = mkN "substance" ;
lin substantial_A = longA "substantial" ;
lin substantive_A = longA "substantive" ;
lin substitute_V3for =mkV3 "substitute" "for" ;
lin substitute_N = mkN "substitute" ;
lin subsume_V2 = mkV2 "subsume" ;
lin subsumption_N = mkN "subsumption" ;
lin subtle_A = mkA "subtle" ;
lin subtlety_N = mkN "subtlety" ;
lin subtract_V3from =mkV3 "subtract" "from" ;
lin succeed_V2in = mkV2 "succeed" "in" ;
lin success_N = mkN "success" ;
lin succession_N = mkN "succession" ;
lin successive_A = longA "successive" ;
lin successor_N = mkN "successor" ;
lin succinct_A = longA "succinct" ;
lin succumb_V2to = mkV2 "succumb" "to" ;
lin suck_V2 = mkV2 "suck" ;
lin sudden_A = longA "sudden" ;
lin sue_PN = regPN "sue" ;
lin suffer_V2from = mkV2 "suffer" "from" ;
lin suffice_V = mkV "suffice" ;
lin sufficient_A = longA "sufficient" ;
lin suffix_V2 = mkV2 "suffix" ;
lin suffix_N = mkN "suffix" ;
lin sugar_N = massN "sugar" ;
lin suggest_V2to_that_s = mkV2 "suggest" "to_that_s" ;
lin suit_V2 = mkV2 "suit" ;
lin suit_N = mkN "suit" ;
lin suitable_A = longA "suitable" ;
lin suite_N = mkN "suite" ;
lin sum_N = mkN "sum" ;
lin summer_N = mkN "summer" ;
lin sun_N = mkN "sun" ;
lin sunday_PN = regPN "sunday" ;
lin sunshine_N = mkN "sunshine" ;
lin super_A = longA "super" ;
lin superficial_A = longA "superficial" ;
lin superior_A = longA "superior" ;
lin supersede_V2 = mkV2 "supersede" ;
lin supervisor_N = mkN "supervisor" ;
lin supper_N = mkN "supper" ;
lin supplement_V2 = mkV2 "supplement" ;
lin supplement_N = mkN "supplement" ;
lin supplementary_A = longA "supplementary" ;
lin suppletion_N = mkN "suppletion" ;
lin suppletive_A = longA "suppletive" ;
lin supply_V2 = mkV2 "supply" ;
lin supply_V3to =mkV3 "supply" "to" ;
lin supply_V3with =mkV3 "supply" "with" ;
lin supply_N = mkN "supply" ;
lin support_V2 = mkV2 "support" ;
lin support_N = mkN "support" ;
lin suppose_VS = mkVS (mkV "suppose") ;
lin supposition_N = mkN "supposition" ;
lin suppress_V2 = mkV2 "suppress" ;
lin sure_A2 = mkA2 "sure" "" ;
lin sure_A = mkA "sure" ;
lin sure_A2 = mkA2 "sure" "" ;
lin surface_V = mkV "surface" ;
lin surface_N = mkN "surface" ;
lin surgeon_N = mkN "surgeon" ;
lin surgery_N = mkN "surgery" ;
lin surgical_A = longA "surgical" ;
lin surmount_V2 = mkV2 "surmount" ;
lin surprise_V2 = mkV2 "surprise" ;
lin surprise_N = mkN "surprise" ;
lin surround_V2 = mkV2 "surround" ;
lin survey_V2 = mkV2 "survey" ;
lin survey_N = mkN "survey" ;
lin survive_V2 = mkV2 "survive" ;
lin susceptible_A = longA "susceptible" ;
lin suspect_V2 = mkV2 "suspect" ;
lin suspect_VS = mkVS (mkV "suspect") ;
lin suspect_N = mkN "suspect" ;
lin suspend_V2 = mkV2 "suspend" ;
lin suspense_N = mkN "suspense" ;
lin suspicion_N = mkN "suspicion" ;
lin suspicious_A = longA "suspicious" ;
lin sustain_V2 = mkV2 "sustain" ;
lin sustenance_N = mkN "sustenance" ;
lin swallow_V2 = mkV2 "swallow" ;
lin swan_N = mkN "swan" ;
lin swap_V3for =mkV3 "swap" "for" ;
lin swear_VS = mkVS swear_V ;
lin swede_N = mkN "swede" ;
lin sweden_PN = regPN "sweden" ;
lin swedish_A = mkA "swedish" ;
lin sweep_V2 = mkV2 sweep_V ;
lin sweet_N = mkN "sweet" ;
lin swell_V = IrregEng.swell_V ;
lin swift_A = mkA "swift" ;
lin swift_N = mkN "swift" ;
lin swim_V = IrregEng.swim_V ;
lin swim_N = mkN "swim" ;
lin swing_V = IrregEng.swing_V ;
lin swiss_A = longA "swiss" ;
lin switch_V2 = mkV2 "switch" ;
lin switch_N = mkN "switch" ;
lin switzerland_PN = regPN "switzerland" ;
lin sword_N = mkN "sword" ;
lin syllabic_A = longA "syllabic" ;
lin syllable_N = mkN "syllable" ;
lin syllogism_N = mkN "syllogism" ;
lin symbol_N = mkN "symbol" ;
lin symmetry_N = mkN "symmetry" ;
lin sympathetic_A = longA "sympathetic" ;
lin sympathetic_A2to = longA2 "sympathetic" "to" ;
lin symptom_N = mkN "symptom" ;
lin symptomatic_A = longA "symptomatic" ;
lin symptomatic_A2of = longA2 "symptomatic" "of" ;
lin synchronous_A = longA "synchronous" ;
lin synonym_N = mkN "synonym" ;
lin synonymous_A = longA "synonymous" ;
lin synonymous_A2with = longA2 "synonymous" "with" ;
lin synonymy_N = mkN "synonymy" ;
lin synopsis_N = mkN "synopsis" ;
lin synoptic_A = longA "synoptic" ;
lin syntactic_A = longA "syntactic" ;
lin syntax_N = mkN "syntax" ;
lin synthesis_N = mkN "synthesis" "synthesis" ;
lin synthesize_V2 = mkV2 "synthesize" ;
lin synthetic_A = longA "synthetic" ;
lin system_N = mkN "system" ;
lin systematic_A = longA "systematic" ;
lin systematically_A = longA "systematically" ;
lin systematize_V2 = mkV2 "systematize" ;
lin table_N = mkN "table" ;
lin tabular_A = longA "tabular" ;
lin tabulate_V2 = mkV2 "tabulate" ;
lin tacit_A = longA "tacit" ;
lin tack_N = mkN "tack" ;
lin tackle_V2 = mkV2 "tackle" ;
lin tact_N = mkN "tact" ;
lin tactic_N = mkN "tactic" ;
lin tag_V2 = mkV2 "tag" ;
lin tag_N = mkN "tag" ;
lin tail_N = mkN "tail" ;
lin tailor_N = mkN "tailor" ;
lin take_V2 = mkV2 take_V ;
lin tale_N = mkN "tale" ;
lin talent_N = mkN "talent" ;
lin talented_A = longA "talented" ;
lin talk_V2about = mkV2 "talk" "about" ;
lin talk_N = mkN "talk" ;
lin tall_A = mkA "tall" ;
lin tame_A = mkA "tame" ;
lin tangent_N = mkN "tangent" ;
lin tangle_V2 = mkV2 "tangle" ;
lin tank_N = mkN "tank" ;
lin tap_V2 = mkV2 "tap" ;
lin tap_N = mkN "tap" ;
lin tape_V2 = mkV2 "tape" ;
lin tape_N = mkN "tape" ;
lin target_N = mkN "target" ;
lin task_N = mkN "task" ;
lin taste_V2 = mkV2 "taste" ;
lin taste_V2of = mkV2 "taste" "of" ;
lin taste_N = mkN "taste" ;
lin tautology_N = mkN "tautology" ;
lin tax_V2 = mkV2 "tax" ;
lin tax_N = mkN "tax" ;
lin taxi_N = mkN "taxi" ;
lin taxonomy_N = mkN "taxonomy" ;
lin tea_N = massN "tea" ;
lin teach_V2 = mkV2 teach_V ;
lin team_N = mkN "team" ;
lin tear_V2 = mkV2 tear_V ;
lin tear_N = mkN "tear" ;
lin tease_V2 = mkV2 "tease" ;
lin technical_A = longA "technical" ;
lin technique_N = mkN "technique" ;
lin technology_N = mkN "technology" ;
lin tedious_A = longA "tedious" ;
lin tedium_N = mkN "tedium" ;
lin teem_V2with = mkV2 "teem" "with" ;
lin telegram_N = mkN "telegram" ;
lin telegraph_V2 = mkV2 "telegraph" ;
lin telegraph_N = mkN "telegraph" ;
lin telephone_V2 = mkV2 "telephone" ;
lin telephone_N = mkN "telephone" ;
lin telescope_N = mkN "telescope" ;
lin television_N = mkN "television" ;
lin tell_V3 =mkV3 tell_V ;
lin temper_V3with =mkV3 "temper" "with" ;
lin temper_N = mkN "temper" ;
lin temperature_N = mkN "temperature" ;
lin template_N = mkN "template" ;
lin temple_N = mkN "temple" ;
lin temporal_A = longA "temporal" ;
lin temporary_A = longA "temporary" ;
lin tempt_V2 = mkV2 "tempt" ;
lin tend_V2 = mkV2 "tend" ;
lin tendency_N2to = mkN2 "tendency" "to" ;
lin tender_A = mkA "tender" ;
lin tenet_N = mkN "tenet" ;
lin tennis_N = massN "tennis" ;
lin tenon_N = mkN "tenon" ;
lin tenor_N = mkN "tenor" ;
lin tense_A = mkA "tense" ;
lin tense_N = mkN "tense" ;
lin tensed_A = longA "tensed" ;
lin tension_N = mkN "tension" ;
lin tent_N = mkN "tent" ;
lin tentative_A = longA "tentative" ;
lin term_V3ed =mkV3 "term" "ed" ;
lin term_N = mkN "term" ;
lin terminal_A = longA "terminal" ;
lin terminal_N = mkN "terminal" ;
lin terminate_V = mkV "terminate" ;
lin terminology_N = mkN "terminology" ;
lin terrace_N = mkN "terrace" ;
lin terrestrial_A = longA "terrestrial" ;
lin terrible_A = longA "terrible" ;
lin terrify_V2 = mkV2 "terrify" ;
lin territory_N = mkN "territory" ;
lin terror_N = mkN "terror" ;
lin terse_A = mkA "terse" ;
lin test_V2 = mkV2 "test" ;
lin test_N = mkN "test" ;
lin testimony_N = mkN "testimony" ;
lin text_N = mkN "text" ;
lin textbook_N = mkN "textbook" ;
lin thank_V2 = mkV2 "thank" ;
lin theatre_N = mkN "theatre" ;
lin theatrical_A = longA "theatrical" ;
lin thematic_A = longA "thematic" ;
lin thematically_Adv = mkAdv "thematically" ;
lin theme_N = mkN "theme" ;
lin then_Adv = mkAdv "then" ;
lin theorem_N = mkN "theorem" ;
lin theoretic_A = longA "theoretic" ;
lin theoretical_A = longA "theoretical" ;
lin theoretically_Adv = mkAdv "theoretically" ;
lin theory_N = mkN "theory" ;
lin therapeutic_A = longA "therapeutic" ;
lin therapy_N = mkN "therapy" ;
lin therefore_Subj = mkSubj "therefore" ;
lin thesis_N = mkN "thesis" ;
lin thick_A = mkA "thick" ;
lin thief_N = mkN "thief" ;
lin thigh_N = mkN "thigh" ;
lin thin_A = mkA "thin" ;
lin thing_N = mkN "thing" ;
lin think_VS = mkVS think_V ;
lin third_N = mkN "third" ;
lin thirst_N2for = mkN2 "thirst" "for" ;
lin thorough_A = longA "thorough" ;
lin thought_N2 = mkN2 "thought" ;
lin thousand_N2 = mkN2 "thousand" ;
lin thread_N = mkN "thread" ;
lin threat_N2 = mkN2 "threat" ;
lin threaten_V3with =mkV3 "threaten" "with" ;
lin threshold_N = mkN "threshold" ;
lin throat_N = mkN "throat" ;
--lin through_Prep = mkPrep "through" ;
lin throughout_Prep = mkPrep "throughout" ;
lin throw_V3loc =mkV3 throw_V "loc" ;
lin throw_N = mkN "throw" ;
lin thrown_V3loc =mkV3 "thrown" "loc" ;
lin thrust_V3loc =mkV3 "thrust" "loc" ;
lin thrust_N = mkN "thrust" ;
lin thumb_N = mkN "thumb" ;
lin thunder_N = mkN "thunder" ;
lin thursday_PN = regPN "thursday" ;
lin thus_Subj = mkSubj "thus" ;
lin ticket_N = mkN "ticket" ;
lin tidy_V2 = mkV2 "tidy" ;
lin tidy_A = mkA "tidy" ;
lin tie_V3to =mkV3 "tie" "to" ;
lin tie_N = mkN "tie" ;
lin tiger_N = mkN "tiger" ;
lin tight_A = mkA "tight" ;
lin till_V2 = mkV2 "till" ;
lin till_N = mkN "till" ;
lin time_V2 = mkV2 "time" ;
lin time_N = mkN "time" ;
lin timely_A = mkA "timely" ;
lin timetable_N = mkN "timetable" ;
lin tin_N = mkN "tin" ;
lin tinker_V2with = mkV2 "tinker" "with" ;
lin tinker_N = mkN "tinker" ;
lin tip_N = mkN "tip" ;
lin tire_V2of = mkV2 "tire" "of" ;
lin title_N = mkN "title" ;
--lin to_Prep = mkPrep "to" ;
lin toad_N = mkN "toad" ;
lin toast_N = massN "toast" ;
lin toast_V2 = mkV2 "toast" ;
lin tobacco_N = massN "tobacco" ;
lin today_Adv = mkAdv "today" ;
lin toe_N = mkN "toe" ;
lin together_Adv = mkAdv "together" ;
lin token_N = mkN "token" ;
lin tolerance_N = mkN "tolerance" ;
lin tolerate_V2 = mkV2 "tolerate" ;
lin toll_V = mkV "toll" ;
lin toll_N = mkN "toll" ;
lin tomato_N = mkN "tomato" ;
lin tomb_N = mkN "tomb" ;
lin tomorrow_Adv = mkAdv "tomorrow" ;
lin ton_N = mkN "ton" ;
lin tone_N = mkN "tone" ;
lin tongue_N = mkN "tongue" ;
lin tonight_Adv = mkAdv "tonight" ;
lin tonne_N = mkN "tonne" ;
lin tool_N = mkN "tool" ;
lin tooth_N = mkN "tooth" "tooth" ;
lin top_N = mkN "top" ;
lin topic_N = mkN "topic" ;
lin topology_N = mkN "topology" ;
lin torrent_N = mkN "torrent" ;
lin torrential_A = longA "torrential" ;
lin toss_V2 = mkV2 "toss" ;
lin total_A = longA "total" ;
lin total_N = mkN "total" ;
lin touch_V2 = mkV2 "touch" ;
lin touch_N = mkN "touch" ;
lin tough_A = mkA "tough" ;
lin tough_A2 = mkA2 "tough" "" ;
lin tour_V2 = mkV2 "tour" ;
lin tour_N = mkN "tour" ;
lin tourist_N = mkN "tourist" ;
lin tow_V2 = mkV2 "tow" ;
lin towards_Prep = mkPrep "towards" ;
lin tower_N = mkN "tower" ;
lin town_N = mkN "town" ;
lin toxic_A = longA "toxic" ;
lin toy_N = mkN "toy" ;
lin trace_V2 = mkV2 "trace" ;
lin trace_N = mkN "trace" ;
lin track_V2 = mkV2 "track" ;
lin track_N = mkN "track" ;
lin tract_N = mkN "tract" ;
lin tractable_A = longA "tractable" ;
lin trade_N = mkN "trade" ;
lin tradition_N = mkN "tradition" ;
lin traffic_N = massN "traffic" ;
lin traffic_V2in = mkV2 "traffic" "in" ;
lin tragedy_N = mkN "tragedy" ;
lin tragic_A = longA "tragic" ;
lin train_V2 = mkV2 "train" ;
lin train_N = mkN "train" ;
lin tramp_N = mkN "tramp" ;
lin tranquil_A = longA "tranquil" ;
lin transaction_N = mkN "transaction" ;
lin transcendental_A = longA "transcendental" ;
lin transcribe_V2 = mkV2 "transcribe" ;
lin transcript_N = mkN "transcript" ;
lin transcription_N = mkN "transcription" ;
lin transfer_V3to =mkV3 "transfer" "to" ;
lin transform_V2 = mkV2 "transform" ;
lin transience_N = mkN "transience" ;
lin transient_A = longA "transient" ;
lin transistor_N = mkN "transistor" ;
lin transit_N = mkN "transit" ;
lin transitive_A = longA "transitive" ;
lin transitory_A = longA "transitory" ;
lin translate_V3into =mkV3 "translate" "into" ;
lin transmit_V2 = mkV2 "transmit" ;
lin transparency_N = mkN "transparency" ;
lin transparent_A = longA "transparent" ;
lin transport_V2 = mkV2 "transport" ;
lin transport_N = mkN "transport" ;
lin trap_V2 = mkV2 "trap" ;
lin trap_N = mkN "trap" ;
lin travel_V2 = mkV2 "travel" ;
lin travel_N = mkN "travel" ;
lin traverse_V2 = mkV2 "traverse" ;
lin tray_N = mkN "tray" ;
lin treat_V3_pred =mkV3 "treat" "_pred" ;
lin treatment_N = mkN "treatment" ;
lin treble_A = longA "treble" ;
lin treble_V2 = mkV2 "treble" ;
lin tree_N = mkN "tree" ;
lin tremble_V = mkV "tremble" ;
lin triangle_N = mkN "triangle" ;
lin triangular_A = longA "triangular" ;
lin tribe_N = mkN "tribe" ;
lin trick_V2 = mkV2 "trick" ;
lin trick_N = mkN "trick" ;
lin trifle_V2with = mkV2 "trifle" "with" ;
lin trifle_N = mkN "trifle" ;
lin trigger_V2 = mkV2 "trigger" ;
lin trigger_N = mkN "trigger" ;
lin trip_V = mkV "trip" ;
lin trip_N = mkN "trip" ;
lin triple_A = longA "triple" ;
lin triple_V2 = mkV2 "triple" ;
lin triple_N = mkN "triple" ;
lin triple_N = mkN "triple" ;
lin triumph_V = mkV "triumph" ;
lin triumph_N = mkN "triumph" ;
lin trivial_A = longA "trivial" ;
lin tropic_N = mkN "tropic" ;
lin trouble_V2 = mkV2 "trouble" ;
lin trouble_N = mkN "trouble" ;
lin troublesome_A = longA "troublesome" ;
lin truck_N = mkN "truck" ;
lin true_A = mkA "true" ;
lin truncate_V2 = mkV2 "truncate" ;
lin trunk_N = mkN "trunk" ;
lin trust_V2 = mkV2 "trust" ;
lin trust_N = mkN "trust" ;
lin truth_N = mkN "truth" ;
lin try_V2 = mkV2 "try" ;
lin try_VV = mkVV (mkV "try") ;
lin tub_N = mkN "tub" ;
lin tube_N = mkN "tube" ;
lin tuck_V3 =mkV3 "tuck" ;
lin tuesday_PN = regPN "tuesday" ;
lin tuition_N = mkN "tuition" ;
lin tumble_V = mkV "tumble" ;
lin tune_V2 = mkV2 "tune" ;
lin tune_N = mkN "tune" ;
lin turn_V3f =mkV3 "turn" "f" ;
lin turn_V3 =mkV3 "turn" ;
lin turn_V = mkV "turn" ;
lin turn_N = mkN "turn" ;
lin turtle_N = mkN "turtle" ;
lin tutor_N = mkN "tutor" ;
lin twice_Adv = mkAdv "twice" ;
lin twiddle_V2 = mkV2 "twiddle" ;
lin twin_N = mkN "twin" ;
lin twist_V2 = mkV2 "twist" ;
lin twist_N = mkN "twist" ;
lin type_V2 = mkV2 "type" ;
lin type_N = mkN "type" ;
lin typical_A = longA "typical" ;
lin typical_A2of = longA2 "typical" "of" ;
lin tyre_N = mkN "tyre" ;
lin ugly_A = mkA "ugly" ;
lin ulcer_N = mkN "ulcer" ;
lin ultimate_A = longA "ultimate" ;
lin ultimatum_N = mkN "ultimatum" ;
lin unary_A = longA "unary" ;
lin uncertainty_N = mkN "uncertainty" ;
lin uncle_N2of = mkN2 "uncle" "of" ;
--lin under_Prep = mkPrep "under" ;
lin undergraduate_N = mkN "undergraduate" ;
lin underline_V2 = mkV2 "underline" ;
lin undermine_V2 = mkV2 "undermine" ;
lin underneath_Adv = mkAdv "underneath" ;
lin underneath_Prep = mkPrep "underneath" ;
lin underneath_N = mkN "underneath" ;
lin underscore_N = mkN "underscore" ;
lin understand_V2 = mkV2 understand_V ;
--lin undo_V2 = mkV2 undo_V ;
lin undoubtedly_Adv = mkAdv "undoubtedly" ;
lin ungainly_A = longA "ungainly" ;
lin uniform_A = longA "uniform" ;
lin uniform_N = mkN "uniform" ;
lin unify_V2 = mkV2 "unify" ;
lin union_N = mkN "union" ;
lin unique_A = longA "unique" ;
lin unit_N = mkN "unit" ;
lin unitary_A = longA "unitary" ;
lin unite_V2 = mkV2 "unite" ;
lin unity_N = mkN "unity" ;
lin universe_N = mkN "universe" ;
lin university_N = mkN "university" ;
lin unleash_V2 = mkV2 "unleash" ;
lin unplug_V2 = mkV2 "unplug" ;
lin unprecedented_A = longA "unprecedented" ;
lin until_Subj = mkSubj "until" ;
lin unusual_A = longA "unusual" ;
lin unwieldy_A = mkA "unwieldy" ;
lin unwitting_A = longA "unwitting" ;
lin up_Prep = mkPrep "up" ;
lin update_V2 = mkV2 "update" ;
lin upon_Prep = mkPrep "upon" ;
lin upper_A = longA "upper" ;
lin upright_A = longA "upright" ;
lin upset_V2 = mkV2 upset_V ;
lin upside_down_A = longA "upside_down" ;
lin upstairs_Adv = mkAdv "upstairs" ;
lin urge_V2 = mkV2 "urge" ;
lin urge_N2 = mkN2 "urge" ;
lin urgency_N = mkN "urgency" ;
lin urgent_A = mkA "urgent" ;
lin usage_N = mkN "usage" ;
lin use_V2 = mkV2 "use" ;
lin use_N = mkN "use" ;
lin used_A2to = longA2 "used" "to" ;
lin usual_A = longA "usual" ;
lin utility_N = mkN "utility" ;
lin utilize_V2 = mkV2 "utilize" ;
lin utter_A = longA "utter" ;
lin utter_V2 = mkV2 "utter" ;
lin utterance_N = mkN "utterance" ;
lin vacuous_A = longA "vacuous" ;
lin vacuum_N = mkN "vacuum" ;
lin vague_A = mkA "vague" ;
lin valence_N = mkN "valence" ;
lin valency_N = mkN "valency" ;
lin valid_A = longA "valid" ;
lin validate_V2 = mkV2 "validate" ;
lin valley_N = mkN "valley" ;
lin valuable_A = longA "valuable" ;
lin value_V2 = mkV2 "value" ;
lin value_N = mkN "value" ;
lin van_N = mkN "van" ;
lin vanilla_N = mkN "vanilla" ;
lin vanish_V = mkV "vanish" ;
lin variable_A = longA "variable" ;
lin variable_N = mkN "variable" ;
lin variant_N = mkN "variant" ;
lin variation_N = mkN "variation" ;
lin variety_N = mkN "variety" ;
lin various_A = longA "various" ;
lin varnish_V2 = mkV2 "varnish" ;
lin varnish_N = mkN "varnish" ;
lin vary_V = mkV "vary" ;
lin vase_N = mkN "vase" ;
lin vast_A = mkA "vast" ;
lin vector_N = mkN "vector" ;
lin vegetable_N = mkN "vegetable" ;
lin vegetation_N = mkN "vegetation" ;
lin vehicle_N = mkN "vehicle" ;
lin velocity_N = mkN "velocity" ;
lin verb_N = mkN "verb" ;
lin verbose_A = mkA "verbose" ;
lin verdict_N = mkN "verdict" ;
lin verify_V2 = mkV2 "verify" ;
lin versatile_A = longA "versatile" ;
lin verse_N = mkN "verse" ;
lin version_N = mkN "version" ;
lin vertex_N = mkN "vertex" "vertex" ;
lin vertical_A = longA "vertical" ;
lin vessel_N = mkN "vessel" ;
lin vet_N = mkN "vet" ;
lin viable_A = longA "viable" ;
lin vice_N = mkN "vice" ;
lin victim_N = mkN "victim" ;
lin victor_N = mkN "victor" ;
lin victory_N = mkN "victory" ;
lin vie_V2with = mkV2 "vie" "with" ;
lin view_V3_pred =mkV3 "view" "_pred" ;
lin view_N = mkN "view" ;
lin vigorous_A = longA "vigorous" ;
lin village_N = mkN "village" ;
lin vindicate_V2 = mkV2 "vindicate" ;
lin vine_N = mkN "vine" ;
lin vineyard_N = mkN "vineyard" ;
lin violate_V2 = mkV2 "violate" ;
lin violence_N = massN "violence" ;
lin violent_A = longA "violent" ;
lin viral_A = longA "viral" ;
lin virtual_A = longA "virtual" ;
lin virtue_N = mkN "virtue" ;
lin virus_N = mkN "virus" ;
lin visible_A = longA "visible" ;
lin visible_A2to = longA2 "visible" "to" ;
lin vision_N = mkN "vision" ;
lin visit_V2 = mkV2 "visit" ;
lin visit_N = mkN "visit" ;
lin visual_A = longA "visual" ;
lin vital_A = longA "vital" ;
lin vitiate_V2 = mkV2 "vitiate" ;
lin vocabulary_N = mkN "vocabulary" ;
lin voice_N = mkN "voice" ;
lin volatile_A = longA "volatile" ;
lin vole_N = mkN "vole" ;
lin volt_N = mkN "volt" ;
lin volume_N = mkN "volume" ;
lin voluntary_A = longA "voluntary" ;
lin volunteer_V = mkV "volunteer" ;
lin volunteer_V2for = mkV2 "volunteer" "for" ;
lin volunteer_N = mkN "volunteer" ;
lin vote_V2for = mkV2 "vote" "for" ;
lin vote_N = mkN "vote" ;
lin vow_VV = mkVV (mkV "vow") ;
lin vow_VS = mkVS (mkV "vow") ;
lin vow_N = mkN "vow" ;
lin vowel_N = mkN "vowel" ;
lin voyage_N = mkN "voyage" ;
lin vulgar_A = longA "vulgar" ;
lin wag_V2 = mkV2 "wag" ;
lin waist_N = mkN "waist" ;
lin waistcoat_N = mkN "waistcoat" ;
lin wait_V2for = mkV2 "wait" "for" ;
lin wait_N = mkN "wait" ;
lin wake_V2 = mkV2 wake_V ;
lin walk_V = mkV "walk" ;
lin walk_N = mkN "walk" ;
lin wall_N = mkN "wall" ;
lin wan_A = mkA "wan" ;
lin wander_V2 = mkV2 "wander" ;
lin want_V2 = mkV2 "want" ;
--lin want_VV = mkVV (mkV "want") ;
lin war_N = mkN "war" ;
lin ward_N = mkN "ward" ;
lin warm_V2 = mkV2 "warm" ;
lin warm_A = mkA "warm" ;
lin warn_V2 = mkV2 "warn" ;
lin warning_N = mkN "warning" ;
lin wash_V = mkV "wash" ;
lin waste_A = longA "waste" ;
lin waste_V2 = mkV2 "waste" ;
lin waste_N = mkN "waste" ;
lin watch_V2 = mkV2 "watch" ;
lin watch_N = mkN "watch" ;
lin water_N = mkN "water" ;
lin wave_V2to = mkV2 "wave" "to" ;
lin wave_N = mkN "wave" ;
lin wax_N = mkN "wax" ;
lin way_N = mkN "way" ;
lin weak_A = mkA "weak" ;
lin wealth_N = massN "wealth" ;
lin weapon_N = mkN "weapon" ;
lin wear_V2 = mkV2 wear_V ;
lin weather_N = massN "weather" ;
lin weave_V2 = mkV2 weave_V ;
lin wedding_N = mkN "wedding" ;
lin wedge_N = mkN "wedge" ;
lin wednesday_PN = regPN "wednesday" ;
lin weed_N = mkN "weed" ;
lin week_N = mkN "week" ;
lin weep_V = IrregEng.weep_V ;
lin weigh_V2 = mkV2 "weigh" ;
lin weigh_V2 = mkV2 "weigh" ;
lin weight_N = mkN "weight" ;
lin welcome_A = longA "welcome" ;
lin welcome_V3to = mkV3 "welcome" "to" ;
lin welcome_N2to = mkN2 "welcome" "to" ;
lin welfare_N = mkN "welfare" ;
lin well_Adv = mkAdv "well" ;
lin well_A = longA "well" ;
lin well_N = mkN "well" ;
lin well_formed_A = longA "well_formed" ;
lin west_N = massN "west" ;
lin west_A = longA "west" ;
lin west_A2of = longA2 "west" "of" ;
lin western_A = longA "western" ;
lin wet_A = mkA "wet" ;
lin wheat_N = massN "wheat" ;
lin wheel_N = mkN "wheel" ;
lin wheeled_A = longA "wheeled" ;
lin whelk_N = mkN "whelk" ;
lin when_Adv = mkAdv "when" ;
-- lin when_Adv = mkAdv "when" ;
lin whenever_Adv = mkAdv "whenever" ;
-- lin where_Adv = mkAdv "where" ;
-- lin where_Adv = mkAdv "where" ;
lin whereas_Subj = mkSubj "whereas" ;
lin wherever_Adv = mkAdv "wherever" ;
lin while_Subj = mkSubj "while" ;
lin whim_N = mkN "whim" ;
lin whine_V = mkV "whine" ;
lin whine_N = mkN "whine" ;
lin whiskey_N = mkN "whiskey" ;
lin whisky_N = mkN "whisky" ;
lin whisper_N = mkN "whisper" ;
lin whisper_V = mkV "whisper" ;
lin whisper_VS = mkVS (mkV "whisper") ;
lin whistle_V = mkV "whistle" ;
lin white_A = mkA "white" ;
lin whole_A = longA "whole" ;
--lin whole_A = mkA "whole" ;
lin wholly_Adv = mkAdv "wholly" ;
-- lin why_Adv = mkAdv "why" ;
-- lin why_Adv = mkAdv "why" ;
-- lin whyever_Adv = mkAdv "whyever" ;
lin wicked_A = longA "wicked" ;
lin wide_A = mkA "wide" ;
lin widow_N = mkN "widow" ;
lin width_N = mkN "width" ;
lin wife_N2of = mkN2 (mkN "wife" "wives") "of" ;
lin wild_A = mkA "wild" ;
lin will_N = mkN "will" ;
lin willing_A2 = longA2 "willing" "" ;
lin willing_A = longA "willing" ;
lin win_V2 = mkV2 (IrregEng.win_V) ;
lin wind_V2 = mkV2 IrregEng.wind_V ;
lin wind_V = IrregEng.wind_V ;
lin wind_N = mkN "wind" ;
lin window_N = mkN "window" ;
lin wine_N = massN "wine" ;
lin wing_N = mkN "wing" ;
lin winter_N = mkN "winter" ;
lin wire_N = mkN "wire" ;
lin wisdom_N = mkN "wisdom" ;
lin wise_A = mkA "wise" ;
lin wish_V2for = mkV2 "wish" "for" ;
lin wish_VS = mkVS (mkV "wish") ;
lin wish_N = mkN "wish" ;
lin witch_N = mkN "witch" ;
--lin with_Prep = mkPrep "with" ;
lin within_Adv = mkAdv "within" ;
lin within_Prep = mkPrep "within" ;
--lin withold_V2 = mkV2 withold_V ;
--lin without_Prep = mkPrep "without" ;
lin withstand_V2 = mkV2 "withstand" ;
lin witness_V2 = mkV2 "witness" ;
lin witness_N2to = mkN2 "witness" "to" ;
lin woman_N = mkN "woman" "women" ;
lin wonder_V2 = mkV2 "wonder" ;
lin wonder_N = mkN "wonder" ;
lin wood_N = mkN "wood" ;
lin wooden_A = longA "wooden" ;
lin wool_N = massN "wool" ;
lin word_N = mkN "word" ;
lin work_N = massN "work" ;
lin work_V = mkV "work" ;
lin world_N = mkN "world" ;
lin worm_N = mkN "worm" ;
lin worry_V2 = mkV2 "worry" ;
lin worry_V2about = mkV2 "worry" "about" ;
lin worry_N = mkN "worry" ;
lin worship_V2 = mkV2 "worship" ;
lin worth_Prep = mkPrep "worth" ;
lin worthless_A = longA "worthless" ;
lin worthwhile_A = longA "worthwhile" ;
lin worthy_A = mkA "worthy" ;
lin worthy_A2of = mkA2 "worthy" "of" ;
lin wound_V2 = mkV2 "wound" ;
lin wound_N = mkN "wound" ;
lin wrap_V2 = mkV2 "wrap" ;
lin wreck_V2 = mkV2 "wreck" ;
lin wreck_N = mkN "wreck" ;
lin wrinkle_N = mkN "wrinkle" ;
lin wrist_N = mkN "wrist" ;
lin write_V2 = mkV2 write_V ;
lin wrong_A = longA "wrong" ;
lin wry_A = mkA "wry" ;
lin yard_N = mkN "yard" ;
lin year_N = mkN "year" ;
lin yellow_N = massN "yellow" ;
lin yellow_A = mkA "yellow" ;
lin yesterday_Adv = mkAdv "yesterday" ;
lin yet_Adv = mkAdv "yet" ;
lin yield_V2 = mkV2 "yield" ;
lin yield_N = mkN "yield" ;
lin young_A = mkA "young" ;
lin youth_N = mkN "youth" ;
lin zinc_N = massN "zinc" ;
oper 
  massN : Str -> N = \s -> mkN s ;
  longA : Str -> A = \s -> compoundADeg (mkA s) ;
  longA2 : Str -> Str -> A2 = \s,p -> mkA2 (longA s) p ;
}
